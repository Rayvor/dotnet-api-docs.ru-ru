<Type Name="Ping" FullName="System.Net.NetworkInformation.Ping">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0c444fdf7e88df7ef1aa2b496d5e9ad07a91d9a3" /><Meta Name="ms.sourcegitcommit" Value="6e7795ffb53e7cc489d655f9ee4308569b8763b9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/26/2019" /><Meta Name="ms.locfileid" Value="72961381" /></Metadata><TypeSignature Language="C#" Value="public class Ping : System.ComponentModel.Component, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ping extends System.ComponentModel.Component implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.Ping" />
  <TypeSignature Language="VB.NET" Value="Public Class Ping&#xA;Inherits Component&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ping : System::ComponentModel::Component, IDisposable" />
  <TypeSignature Language="F#" Value="type Ping = class&#xA;    inherit Component&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.MonoTODO("IPv6 support is missing")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Позволяет приложению определить, доступен ли удаленный компьютер по сети.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения используют класс <xref:System.Net.NetworkInformation.Ping>, чтобы определить, доступен ли удаленный компьютер.  
  
 Топология сети может определить, может ли <xref:System.Net.NetworkInformation.Ping> успешно связаться с удаленным узлом. Наличие и настройка прокси-серверов, оборудования преобразования сетевых адресов (NAT) или брандмауэров могут препятствовать выполнению <xref:System.Net.NetworkInformation.Ping>. Успешный <xref:System.Net.NetworkInformation.Ping> указывает только на то, что удаленный узел доступен в сети; наличие служб более высокого уровня (например, веб-сервера) на удаленном узле не гарантируется.  
  
 Этот класс предоставляет функциональные возможности, аналогичные программе командной строки Ping. exe. Методы <xref:System.Net.NetworkInformation.Ping.Send%2A> и <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> отправляют на удаленный компьютер сообщение с эхо-запросом протокола ICMP и ожидают ответа ICMP эхо-сообщения от этого компьютера. Подробное описание ICMP-сообщений см. в документе RFC 792, который можно найти по адресу [https://www.ietf.org](https://www.ietf.org/).  
  
 Следующие типы используются с классом <xref:System.Net.NetworkInformation.Ping> и подробно описаны ниже.  
  
|**Имя типа**|**Описание**|  
|-------------------|---------------------|  
|<xref:System.Net.NetworkInformation.IPStatus>|Определяет коды состояния, описывающие результат сообщения запроса проверки связи ICMP.|  
|<xref:System.Net.NetworkInformation.PingOptions>|Позволяет настраивать или извлекать параметры, управляющие количеством перенаправляемых пакетов запросов (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>) и возможностью его фрагментации (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>).|  
|<xref:System.Net.NetworkInformation.PingReply>|Содержит результаты запроса проверки связи ICMP.|  
|<xref:System.Net.NetworkInformation.PingException>|Возникает при неустранимой ошибке.|  
|<xref:System.Net.NetworkInformation.PingCompletedEventArgs>|Содержит данные, связанные с событиями <xref:System.Net.NetworkInformation.Ping.PingCompleted>, которые вызываются, когда вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> завершается или отменяется.|  
|<xref:System.Net.NetworkInformation.PingCompletedEventHandler>|Делегат, предоставляющий метод обратного вызова, вызываемый при завершении или отмене вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.|  
  
 Методы <xref:System.Net.NetworkInformation.Ping.Send%2A> и <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> возвращают ответ в объекте <xref:System.Net.NetworkInformation.PingReply>. Свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=nameWithType> возвращает значение <xref:System.Net.NetworkInformation.IPStatus> для указания результата запроса.  
  
 При отправке запроса необходимо указать удаленный компьютер. Это можно сделать, указав строку имени узла, IP-адрес в строковом формате или объект <xref:System.Net.IPAddress>.  
  
 Можно также указать любой из следующих типов сведений:  
  
-   Данные, сопровождающие запрос. Указание `buffer` позволяет узнать время, необходимое для передачи пакета определенного размера на удаленный узел и от него до максимальной единицы пересылки сетевого пути. (См. <xref:System.Net.NetworkInformation.Ping.Send%2A> или <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузки, которые принимают параметр `buffer`.)  
  
-   Можно ли фрагментировать эхо-пакет ICMP при передаче. (См. свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> и <xref:System.Net.NetworkInformation.Ping.Send%2A> или <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузки, принимающие параметр `options`.)  
  
-   Сколько раз узлы маршрутизации, такие как маршрутизаторы или шлюзы, могут переслать пакет до того, как он достигнет конечного компьютера или отклоняется. (См. <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> и <xref:System.Net.NetworkInformation.Ping.Send%2A> или <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузки, принимающие параметр `options`.)  
  
-   Предельное время, в течение которого должен быть получен ответ. (См. <xref:System.Net.NetworkInformation.Ping.Send%2A> или <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузки, которые принимают параметр `timeout`.  
  
 Класс <xref:System.Net.NetworkInformation.Ping> предлагает как синхронные, так и асинхронные методы для отправки запроса. Если приложение должно блокироваться во время ожидания ответа, используйте методы <xref:System.Net.NetworkInformation.Ping.Send%2A>. Эти методы являются синхронными. Если приложение не должно блокироваться, используйте асинхронные методы <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> выполняется в собственном потоке, который автоматически выделяется из пула потоков. По завершении асинхронной операции она вызывает событие <xref:System.Net.NetworkInformation.Ping.PingCompleted>. Приложения используют делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler>, чтобы указать метод, который вызывается для событий <xref:System.Net.NetworkInformation.Ping.PingCompleted>. Перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>необходимо добавить делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler> в событие. Метод делегата получает объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий объект <xref:System.Net.NetworkInformation.PingReply>, который описывает результат вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.  
  
 Нельзя использовать один и тот же экземпляр класса <xref:System.Net.NetworkInformation.Ping> для создания нескольких одновременных эхо-запросов ICMP. Вызов <xref:System.Net.NetworkInformation.Ping.Send%2A> во время выполнения <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова или вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> несколько раз до завершения всех предыдущих вызовов вызывает <xref:System.InvalidOperationException>.  
  
   
  
## Examples  
 В следующем примере кода показано использование класса <xref:System.Net.NetworkInformation.Ping> синхронно.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 В следующем примере кода показано использование класса <xref:System.Net.NetworkInformation.Ping> асинхронно.  
  
 [!code-cpp[NCLPingASync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#1)]
 [!code-csharp[NCLPingASync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/network-programming/how-to-ping-a-host.md">Практическое руководство. Проверка связи с узлом</related>
    <related type="Article" href="~/docs/framework/network-programming/index.md">Сетевое программирование в .NET Framework</related>
    <related type="Article" href="~/docs/framework/network-programming/network-programming-samples.md">Примеры сетевого программирования</related>
    <related type="Article" href="~/docs/framework/network-programming/networkinformation.md">NetworkInformation</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.NetworkInformation.Ping" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано создание <xref:System.Net.NetworkInformation.Ping> экземпляра. Полный пример доступен в разделе Общие сведения о классе <xref:System.Net.NetworkInformation.Ping>.  
  
 [!code-cpp[NCLPingAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#2)]
 [!code-csharp[NCLPingAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="ping.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="ping.Dispose disposing" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="ping.Dispose disposing" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> для освобождения управляемых и неуправляемых ресурсов; значение <see langword="false" /> для освобождения только неуправляемых ресурсов.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.NetworkInformation.Ping" />, и опционально — управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается с помощью открытого метода `Dispose()` и метода <xref:System.ComponentModel.Component.Finalize%2A>. Метод public `Dispose()` вызывает защищенный метод <xref:System.Net.NetworkInformation.Ping.Dispose%2A> с параметром `disposing`, для которого задано значение `true`. <xref:System.ComponentModel.Component.Finalize%2A> вызывает `Dispose` с `disposing`, установленным в `false`.  
  
 Если параметр `disposing` имеет значение `true`, этот метод освобождает все ресурсы, удерживаемые любыми управляемыми объектами, на которые ссылается объект <xref:System.Net.NetworkInformation.Ping>. Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPingCompleted">
      <MemberSignature Language="C#" Value="protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnPingCompleted(class System.Net.NetworkInformation.PingCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnPingCompleted (e As PingCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnPingCompleted(System::Net::NetworkInformation::PingCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnPingCompleted : System.Net.NetworkInformation.PingCompletedEventArgs -&gt; unit" Usage="ping.OnPingCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.NetworkInformation.PingCompletedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, которые наследуют от класса <xref:System.Net.NetworkInformation.Ping>, могут переопределять этот метод для выполнения дополнительных задач, таких как ведение журнала данных, содержащихся в параметре `e`.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Net.NetworkInformation.Ping.OnPingCompleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> в производном классе обязательно вызовите метод базового класса "<see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" />, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PingCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.NetworkInformation.Ping.PingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PingCompleted As PingCompletedEventHandler " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::NetworkInformation::PingCompletedEventHandler ^ PingCompleted;" />
      <MemberSignature Language="F#" Value="member this.PingCompleted : System.Net.NetworkInformation.PingCompletedEventHandler " Usage="member this.PingCompleted : System.Net.NetworkInformation.PingCompletedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event PingCompleted As PingCompletedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении или отмене асинхронной операции отправки сообщения проверки связи ICMP и получения соответствующего сообщения ответа проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения используют событие <xref:System.Net.NetworkInformation.Ping.PingCompleted> для получения сведений о состоянии завершения и данных, собираемых вызовом одного из методов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler> предоставляет метод обратного вызова, вызываемый, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает это событие.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать метод обратного вызова для события <xref:System.Net.NetworkInformation.Ping.PingCompleted>. Полный пример доступен в разделе Общие сведения о классе <xref:System.Net.NetworkInformation.Ping>.  
  
 [!code-cpp[NCLPingAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#2)]
 [!code-csharp[NCLPingAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP на удаленный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IP-адрес, возвращенный любой из <xref:System.Net.NetworkInformation.Ping.Send%2A> перегрузок, может исходить от вредоносного удаленного компьютера. Не подключайтесь к удаленному компьютеру с помощью этого компонента. Используйте DNS для определения IP-адреса компьютера, к которому необходимо подключиться.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP на удаленный компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или описание причины сбоя, если сообщение не было получено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод отправляет на узел, указанный в `address` буфер данных 32 <xref:System.Byte> с сообщением проверки связи ICMP. Метод ожидает пять секунд для сообщения ответа проверки связи ICMP. Если он не получает ответ в это время, метод возвращает значение, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> — <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментации пакетов и пересылки пакетов. Пакет, содержащий Эхо-сообщение ICMP, может быть фрагментирован при передаче, если общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами. Чтобы предотвратить фрагментацию, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов, принимающих параметр `options`, и задайте для свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> значение `true`. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Фрагменты пакетов или пакетов (если они фрагментированы) могут перенаправляться узлами маршрутизации 128 раз, прежде чем они будут удалены. Чтобы изменить этот параметр, используйте перегрузку <xref:System.Net.NetworkInformation.Ping.Send%2A>, которая принимает параметр `options`, и присвойте свойству <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> нужное значение. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вызов этого метода.  
  
 [!code-cpp[NCLPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NCLPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод отправляет буфер данных 32 <xref:System.Byte> с сообщением проверки связи ICMP. Метод ожидает пять секунд для сообщения ответа проверки связи ICMP. Если он не получает ответ в это время, метод возвращает значение, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> — <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментации пакетов и пересылки пакетов. Пакет, содержащий Эхо-сообщение ICMP, может быть фрагментирован при передаче, если общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами. Чтобы предотвратить фрагментацию, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов, принимающих параметр `options`, и задайте для свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> значение `true`. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Фрагменты пакетов или пакетов (если они фрагментированы) могут перенаправляться узлами маршрутизации 128 раз, прежде чем они будут удалены. Чтобы изменить этот параметр, используйте перегрузку <xref:System.Net.NetworkInformation.Ping.Send%2A>, которая принимает параметр `options`, и присвойте свойству <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> нужное значение. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вызов этого метода.  
  
 [!code-cpp[NCLPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NCLPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP. Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress * int -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP с заданным буфером данных на удаленный компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP. Этот метод позволяет указать тайм-аут операции.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщение ICMP эхо-ответа не получено в течение времени, указанного параметром `timeout`, то эхо ICMP не выполняется, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> имеет значение <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При указании очень маленьких чисел для `timeout`ответ на запрос проверки связи можно получить, даже если истечет `timeout` миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментации пакетов и пересылки пакетов. Пакет, содержащий Эхо-сообщение ICMP, может быть фрагментирован при передаче, если общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами. Чтобы предотвратить фрагментацию, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов, принимающих параметр `options`, и задайте для свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> значение `true`. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Пакеты или фрагменты пакетов могут перенаправляться узлами маршрутизации 128 раз, прежде чем они будут удалены. Чтобы изменить этот параметр, используйте перегрузку <xref:System.Net.NetworkInformation.Ping.Send%2A>, которая принимает параметр `options`, и присвойте свойству <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> нужное значение. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример, демонстрирующий вызов метода <xref:System.Net.NetworkInformation.Ping.Send%2A>, см. в разделе Общие сведения о классе <xref:System.Net.NetworkInformation.Ping>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Send : string * int -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP. Этот метод позволяет указать тайм-аут операции.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщение ICMP эхо-ответа не получено в течение времени, указанного параметром `timeout`, то эхо ICMP не выполняется, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> имеет значение <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При указании очень маленьких чисел для `timeout`ответ на запрос проверки связи можно получить, даже если истечет `timeout` миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментации пакетов и пересылки пакетов. Пакет, содержащий Эхо-сообщение ICMP, может быть фрагментирован при передаче, если общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами. Чтобы предотвратить фрагментацию, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов, принимающих параметр `options`, и задайте для свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> значение `true`. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Фрагменты пакетов или пакетов (если они фрагментированы) могут перенаправляться узлами маршрутизации 128 раз, прежде чем они будут удалены. Чтобы изменить этот параметр, используйте перегрузку <xref:System.Net.NetworkInformation.Ping.Send%2A>, которая принимает параметр `options`, и присвойте свойству <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> нужное значение. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример, демонстрирующий вызов метода <xref:System.Net.NetworkInformation.Ping.Send%2A>, см. в разделе Общие сведения о классе <xref:System.Net.NetworkInformation.Ping>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer, buffer As Byte()) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress * int * byte[] -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (address, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP с заданным буфером данных на удаленный компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено. Метод возвращает <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" />, если пакет превышает MTU.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщение ICMP эхо-ответа не получено в течение времени, указанного параметром `timeout`, то эхо ICMP не выполняется, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> имеет значение <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При указании очень маленьких чисел для `timeout`ответ на запрос проверки связи можно получить, даже если истечет `timeout` миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментации пакетов и пересылки пакетов. Пакет, содержащий Эхо-сообщение ICMP, может быть фрагментирован при передаче, если общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами. Чтобы предотвратить фрагментацию, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов, принимающих параметр `options`, и задайте для свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> значение `true`. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Пакеты или фрагменты пакетов могут перенаправляться узлами маршрутизации 128 раз, прежде чем они будут удалены. Чтобы изменить этот параметр, используйте перегрузку <xref:System.Net.NetworkInformation.Ping.Send%2A>, которая принимает параметр `options`, и присвойте свойству <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> нужное значение. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот метод.  
  
 [!code-cpp[NCLPingSampler#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#6)]
 [!code-csharp[NCLPingSampler#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> — <see langword="null" />.  
  
- или - 
 Параметр <paramref name="buffer" /> имеет значение <see langword="null" /> или размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65 500 байт.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.Send : string * int * byte[] -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (hostNameOrAddress, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщение ICMP эхо-ответа не получено в течение времени, указанного параметром `timeout`, то эхо ICMP не выполняется, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> имеет значение <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При указании очень маленьких чисел для `timeout`ответ на запрос проверки связи можно получить, даже если истечет `timeout` миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментации пакетов и пересылки пакетов. Пакет, содержащий Эхо-сообщение ICMP, может быть фрагментирован при передаче, если общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами. Чтобы предотвратить фрагментацию, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов, принимающих параметр `options`, и задайте для свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> значение `true`. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Пакеты или фрагменты пакетов могут перенаправляться узлами маршрутизации 128 раз, прежде чем они будут удалены. Чтобы изменить этот параметр, используйте перегрузку <xref:System.Net.NetworkInformation.Ping.Send%2A>, которая принимает параметр `options`, и присвойте свойству <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> нужное значение. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример, демонстрирующий вызов перегрузки <xref:System.Net.NetworkInformation.Ping.Send%2A>, см. в разделе Общие сведения о классе <xref:System.Net.NetworkInformation.Ping>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").  
  
- или - 
 Параметр <paramref name="buffer" /> имеет значение <see langword="null" /> или размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65 500 байт.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (address, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="options">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, используемый для управления значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP с заданным буфером данных на удаленный компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции и управлять значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено. Метод возвращает <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" />, если пакет превышает MTU.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщение ICMP эхо-ответа не получено в течение времени, указанного параметром `timeout`, эхо ICMP не выполняется, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> имеет значение <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При указании очень маленьких чисел для `timeout`ответ на запрос проверки связи можно получить, даже если истечет `timeout` миллисекунд.  
  
 Если свойство <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, то запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Используйте свойство <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>, чтобы указать максимальное число попыток переадресации сообщения проверки связи ICMP перед достижением места назначения. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот метод.  
  
 [!code-cpp[NCLPingSampler#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#5)]
 [!code-csharp[NCLPingSampler#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="address" /> имеет значение <see langword="null" />.  
  
- или - 
 Параметр <paramref name="buffer" /> имеет значение <see langword="null" /> или размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65 500 байт.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.Send : string * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (hostNameOrAddress, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="options">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, используемый для управления значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции и управлять значениями фрагментации и срока жизни пакета ICMP.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщение ICMP эхо-ответа не получено в течение времени, указанного параметром `timeout`, эхо ICMP не выполняется, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> имеет значение <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При указании очень маленьких чисел для `timeout`ответ на запрос проверки связи можно получить, даже если истечет `timeout` миллисекунд.  
  
 Если свойство <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, то запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Используйте свойство <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>, чтобы указать максимальное число попыток переадресации сообщения проверки связи ICMP перед достижением места назначения. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот метод.  
  
 [!code-cpp[NCLPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NCLPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostNameOrAddress" /> имеет значение <see langword="null" /> или является пустой строкой.  
  
- или - 
 Параметр <paramref name="buffer" /> имеет значение <see langword="null" /> или размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65 500 байт.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP на компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эти методы не приводят к блокировке основного потока приложения. Если вы хотите заблокировать ожидание сообщения ответа ICMP Echo, используйте методы <xref:System.Net.NetworkInformation.Ping.Send%2A>.  
  
> [!NOTE]
>  IP-адрес, возвращенный любым из методов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, может исходить от вредоносного удаленного компьютера. Не подключайтесь к удаленному компьютеру с помощью этого компонента. Используйте DNS для определения IP-адреса компьютера, к которому необходимо подключиться.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * obj -&gt; unit" Usage="ping.SendAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP на удаленный компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> отправляет Эхо-сообщение асинхронно и, когда операция завершается (успешно или неуспешно), возвращает состояние приложению. Вызовите метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, если приложение не должно блокироваться. Каждый вызов этого метода выполняется в отдельном потоке, который автоматически выделяется из пула потоков. По завершении асинхронной операции она вызывает событие <xref:System.Net.NetworkInformation.Ping.PingCompleted>. Чтобы указать метод, вызываемый при <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызове события, необходимо добавить делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler> в событие перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Метод делегата получает объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий объект <xref:System.Net.NetworkInformation.PingReply>, который описывает результат вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs> наследует свойство <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>. Это свойство содержит объект `userToken`, переданный в вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.  
  
> [!NOTE]
>  Если приложение должно блокироваться во время ожидания ответа, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов. Эти методы являются синхронными.  
  
 Этот метод отправляет буфер данных 32 <xref:System.Byte> с сообщением проверки связи ICMP. Метод ожидает пять секунд для сообщения ответа проверки связи ICMP. Если он не получает ответ в это время, метод возвращает значение, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> — <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментации пакетов и пересылки пакетов. Пакет, содержащий Эхо-сообщение ICMP, может быть фрагментирован при передаче, если общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами. Чтобы предотвратить фрагментацию, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методов, принимающих параметр `options`, и задайте для свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> значение `true`. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Пакеты или фрагменты пакетов могут перенаправляться узлами маршрутизации 128 раз, прежде чем они будут удалены. Чтобы изменить этот параметр, используйте перегрузку <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, которая принимает параметр `options`, и присвойте свойству <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> нужное значение. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример кода, демонстрирующий вызов метода <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, см. в разделе Общие сведения о классе <xref:System.Net.NetworkInformation.Ping>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов метода <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException"><paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> отправляет Эхо-сообщение асинхронно и, когда операция завершается (успешно или неуспешно), возвращает состояние приложению. Вызовите метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, если приложение не должно блокироваться. Каждый вызов этого метода выполняется в отдельном потоке, который автоматически выделяется из пула потоков. По завершении асинхронной операции она вызывает событие <xref:System.Net.NetworkInformation.Ping.PingCompleted>. Чтобы указать метод, вызываемый при <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызове события, необходимо добавить делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler> в событие перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Метод делегата получает объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий объект <xref:System.Net.NetworkInformation.PingReply>, который описывает результат вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs> наследует свойство <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>. Это свойство содержит объект `userToken`, переданный в вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.  
  
> [!NOTE]
>  Если приложение должно блокироваться во время ожидания ответа, используйте методы <xref:System.Net.NetworkInformation.Ping.Send%2A>. Эти методы являются синхронными.  
  
 Этот метод отправляет буфер данных 32 <xref:System.Byte> с сообщением проверки связи ICMP. Метод ожидает пять секунд для сообщения ответа проверки связи ICMP. Если он не получает ответ в тот момент, когда метод возвращает значение, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> установлено в <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментации пакетов и пересылки пакетов. Пакет, содержащий Эхо-сообщение ICMP, может быть фрагментирован при передаче, если общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами. Чтобы предотвратить фрагментацию, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методов, принимающих параметр `options`, и задайте для свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> значение `true`. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Пакеты или фрагменты пакетов могут перенаправляться узлами маршрутизации 128 раз, прежде чем они будут удалены. Чтобы изменить этот параметр, используйте перегрузку <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, которая принимает параметр `options`, и присвойте свойству <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> нужное значение. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример кода, демонстрирующий вызов метода <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, см. в разделе Общие сведения о классе <xref:System.Net.NetworkInformation.Ping>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов метода <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Параметр <paramref name="hostNameOrAddress" /> не удалось разрешить в допустимый IP-адрес.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * int * obj -&gt; unit" Usage="ping.SendAsync (address, timeout, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP на удаленный компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> отправляет Эхо-сообщение асинхронно и, когда операция завершается (успешно или неуспешно), возвращает состояние приложению. Вызовите метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, если приложение не должно блокироваться. Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. По завершении асинхронной операции она вызывает событие <xref:System.Net.NetworkInformation.Ping.PingCompleted>. Приложения используют делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler>, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие. Перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>необходимо добавить делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler> в событие. Метод делегата получает объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий объект <xref:System.Net.NetworkInformation.PingReply>, который описывает результат вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs> наследует свойство <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>. Это свойство содержит объект `userToken`, переданный в вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.  
  
 Если приложение должно блокироваться во время ожидания ответа, используйте методы <xref:System.Net.NetworkInformation.Ping.Send%2A>. Эти методы являются синхронными.  
  
 Если сообщение ICMP эхо-ответа не получено в течение времени, указанного параметром `timeout`, эхо ICMP не выполняется, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> имеет значение <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При указании очень маленьких чисел для `timeout`ответ на запрос проверки связи можно получить, даже если истечет `timeout` миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментации пакетов и пересылки пакетов. Пакет, содержащий Эхо-сообщение ICMP, может быть фрагментирован при передаче, если общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами. Чтобы предотвратить фрагментацию, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методов, принимающих параметр `options`, и задайте для свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> значение `true`. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Фрагменты пакетов или пакетов (если они фрагментированы) могут перенаправляться узлами маршрутизации 128 раз, прежде чем они будут удалены. Чтобы изменить этот параметр, используйте перегрузку <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, которая принимает параметр `options`, и присвойте свойству <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> нужное значение. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример кода, демонстрирующий вызов перегрузки <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, см. в разделе Общие сведения о классе <xref:System.Net.NetworkInformation.Ping>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов метода <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException"><paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * int * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, timeout, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> отправляет Эхо-сообщение асинхронно и, когда операция завершается (успешно или неуспешно), возвращает состояние приложению. Вызовите метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, если приложение не должно блокироваться. Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. По завершении асинхронной операции она вызывает событие <xref:System.Net.NetworkInformation.Ping.PingCompleted>. Приложения используют делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler>, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие. Перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>необходимо добавить делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler> в событие. Метод делегата получает объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий объект <xref:System.Net.NetworkInformation.PingReply>, который описывает результат вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs> наследует свойство <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>. Это свойство содержит объект `userToken`, переданный в вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.  
  
 Если приложение должно блокироваться во время ожидания ответа, используйте методы <xref:System.Net.NetworkInformation.Ping.Send%2A>. Эти методы являются синхронными.  
  
 Если сообщение ICMP эхо-ответа не получено в течение времени, указанного параметром `timeout`, эхо ICMP не выполняется, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> имеет значение <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При указании очень маленьких чисел для `timeout`ответ на запрос проверки связи можно получить, даже если истечет `timeout` миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментации пакетов и пересылки пакетов. Пакет, содержащий Эхо-сообщение ICMP, может быть фрагментирован при передаче, если общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами. Чтобы предотвратить фрагментацию, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методов, принимающих параметр `options`, и задайте для свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> значение `true`. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Фрагменты пакетов или пакетов (если они фрагментированы) могут перенаправляться узлами маршрутизации 128 раз, прежде чем они будут удалены. Чтобы изменить этот параметр, используйте перегрузку <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, которая принимает параметр `options`, и присвойте свойству <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> нужное значение. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример кода, демонстрирующий вызов метода <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, см. в разделе Общие сведения о классе <xref:System.Net.NetworkInformation.Ping>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="hostNameOrAddress" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Параметр <paramref name="hostNameOrAddress" /> не удалось разрешить в допустимый IP-адрес.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, buffer As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * int * byte[] * obj -&gt; unit" Usage="ping.SendAsync (address, timeout, buffer, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP с заданным буфером данных на компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод асинхронно отправляет Эхо-сообщение и, когда операция завершается (успешно или неуспешно), возвращает состояние приложению. Вызовите метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, если приложение не должно блокироваться. Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. По завершении асинхронной операции она вызывает событие <xref:System.Net.NetworkInformation.Ping.PingCompleted>. Чтобы указать метод, вызываемый при <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызове события, необходимо добавить делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler> в событие перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Метод делегата получает объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий объект <xref:System.Net.NetworkInformation.PingReply>, который описывает результат вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs> наследует свойство <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>. Это свойство содержит объект `userToken`, переданный в вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.  
  
> [!NOTE]
>  Если приложение блокируется во время ожидания ответа, используйте методы <xref:System.Net.NetworkInformation.Ping.Send%2A>. Эти методы являются синхронными.  
  
 Если сообщение ICMP эхо-ответа не получено в течение времени, указанного параметром `timeout`, эхо ICMP не выполняется, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> имеет значение <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При указании очень маленьких чисел для `timeout`ответ на запрос проверки связи можно получить, даже если истечет `timeout` миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментации пакетов и пересылки пакетов. Пакет, содержащий Эхо-сообщение ICMP, может быть фрагментирован при передаче, если общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами. Чтобы предотвратить фрагментацию, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методов, принимающих параметр `options`, и задайте для свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> значение `true`. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Фрагменты пакетов или пакетов (если они фрагментированы) могут перенаправляться узлами маршрутизации 128 раз, прежде чем они будут удалены. Чтобы изменить этот параметр, используйте перегрузку <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, которая принимает параметр `options`, и присвойте свойству <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> нужное значение. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример кода, демонстрирующий вызов перегрузки <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, см. в разделе Общие сведения о классе <xref:System.Net.NetworkInformation.Ping>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="address" /> имеет значение <see langword="null" />.  
  
- или - 
 Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException"><paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * int * byte[] * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, timeout, buffer, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> отправляет Эхо-сообщение асинхронно и, когда операция завершается (успешно или неуспешно), возвращает состояние приложению. Вызовите метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, если приложение не должно блокироваться. Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. По завершении асинхронной операции она вызывает событие <xref:System.Net.NetworkInformation.Ping.PingCompleted>. Приложения используют делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler>, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие. Перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>необходимо добавить делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler> в событие. Метод делегата получает объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий объект <xref:System.Net.NetworkInformation.PingReply>, который описывает результат вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs> наследует свойство <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>. Это свойство содержит объект `userToken`, переданный в вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.  
  
 Если приложение должно блокироваться во время ожидания ответа, используйте методы <xref:System.Net.NetworkInformation.Ping.Send%2A>. Эти методы являются синхронными.  
  
 Если сообщение ICMP эхо-ответа не получено в течение времени, указанного параметром `timeout`, эхо ICMP не выполняется, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> имеет значение <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При указании очень маленьких чисел для `timeout`ответ на запрос проверки связи можно получить, даже если истечет `timeout` миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментации пакетов и пересылки пакетов. Пакет, содержащий Эхо-сообщение ICMP, может быть фрагментирован при передаче, если общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами. Чтобы предотвратить фрагментацию, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методов, принимающих параметр `options`, и задайте для свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> значение `true`. Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Фрагменты пакетов или пакетов (если они фрагментированы) могут перенаправляться узлами маршрутизации 128 раз, прежде чем они будут удалены. Чтобы изменить этот параметр, используйте перегрузку <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, которая принимает параметр `options`, и присвойте свойству <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> нужное значение. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать перегрузку <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, см. Общие сведения о классе <xref:System.Net.NetworkInformation.Ping>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").  
  
- или - 
 Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="hostNameOrAddress" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Параметр <paramref name="hostNameOrAddress" /> не удалось разрешить в допустимый IP-адрес.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * int * byte[] * System.Net.NetworkInformation.PingOptions * obj -&gt; unit" Usage="ping.SendAsync (address, timeout, buffer, options, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="options">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, используемый для управления значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP с заданным буфером данных на компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции и управлять значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> отправляет Эхо-сообщение асинхронно и, когда операция завершается (успешно или неуспешно), возвращает состояние приложению. Вызовите метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, если приложение не должно блокироваться. Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. По завершении асинхронной операции она вызывает событие <xref:System.Net.NetworkInformation.Ping.PingCompleted>. Приложения используют делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler>, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие. Перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>необходимо добавить делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler> в событие. Метод делегата получает объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий объект <xref:System.Net.NetworkInformation.PingReply>, который описывает результат вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs> наследует свойство <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>. Это свойство содержит объект `userToken`, переданный в вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.  
  
 Если приложение блокируется во время ожидания ответа, используйте методы <xref:System.Net.NetworkInformation.Ping.Send%2A>. Эти методы являются синхронными.  
  
 Если сообщение ICMP эхо-ответа не получено в течение времени, указанного параметром `timeout`, эхо ICMP не выполняется, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> имеет значение <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При указании очень маленьких чисел для `timeout`ответ на запрос проверки связи можно получить, даже если истечет `timeout` миллисекунд.  
  
 Если свойство <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, то запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Используйте свойство <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>, чтобы указать максимальное число попыток переадресации сообщения проверки связи ICMP перед достижением места назначения. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот метод. Сведения о реализации метода обратного вызова см. в разделе Пример перегрузки метода <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.  
  
 Для следующего примера кода требуются следующие пространства имен:  
  
 [!code-cpp[NCLPingSampler#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#0)]
 [!code-csharp[NCLPingSampler#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#0)]  
  
 В следующем примере кода Эхо-сообщение ICMP отправляется асинхронно.  
  
 [!code-cpp[NCLPingSampler#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#7)]
 [!code-csharp[NCLPingSampler#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> — <see langword="null" />.  
  
- или - 
 Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException"><paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * int * byte[] * System.Net.NetworkInformation.PingOptions * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, timeout, buffer, options, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="options">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, используемый для управления значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции и управлять значениями фрагментации и срока жизни пакета ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> отправляет Эхо-сообщение асинхронно и, когда операция завершается (успешно или неуспешно), возвращает состояние приложению. Вызовите метод <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, если приложение не должно блокироваться. Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. По завершении асинхронной операции она вызывает событие <xref:System.Net.NetworkInformation.Ping.PingCompleted>. Приложения используют делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler>, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие. Перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>необходимо добавить делегат <xref:System.Net.NetworkInformation.PingCompletedEventHandler> в событие. Метод делегата получает объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий объект <xref:System.Net.NetworkInformation.PingReply>, который описывает результат вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Объект <xref:System.Net.NetworkInformation.PingCompletedEventArgs> наследует свойство <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>. Это свойство содержит объект `userToken`, переданный в вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.  
  
 Если приложение должно блокироваться во время ожидания ответа, используйте методы <xref:System.Net.NetworkInformation.Ping.Send%2A>. Эти методы являются синхронными.  
  
 Если сообщение ICMP эхо-ответа не получено в течение времени, указанного параметром `timeout`, эхо ICMP не выполняется, а свойство <xref:System.Net.NetworkInformation.PingReply.Status%2A> имеет значение <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При указании очень маленьких чисел для `timeout`ответ на запрос проверки связи можно получить, даже если истечет `timeout` миллисекунд.  
  
 Если свойство <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> `true`, а общий размер пакета превышает максимальный размер пакета, который может быть передан одним из узлов маршрутизации между локальным и удаленным компьютерами, то запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Используйте свойство <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>, чтобы указать максимальное число попыток переадресации сообщения проверки связи ICMP перед достижением места назначения. Если пакет не достигает места назначения после пересылки указанного числа раз, пакет отбрасывается и запрос проверки связи ICMP завершается сбоем. В этом случае для <xref:System.Net.NetworkInformation.PingReply.Status%2A> устанавливается значение <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот метод.  
  
 [!code-cpp[NCLPingAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#1)]
 [!code-csharp[NCLPingAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").  
  
- или - 
 Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Параметр <paramref name="hostNameOrAddress" /> не удалось разрешить в допустимый IP-адрес.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Для отправки сообщения проверки связи ICMP.  
  
Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.SendAsyncCancel : unit -&gt; unit" Usage="ping.SendAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отменяет все ожидающие асинхронные запросы на отправку сообщений проверки связи ICMP и получает соответствующее сообщение ответа проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы завершить любые вызовы <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, которые не были завершены.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendPingAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отправляет сообщение запроса проверки связи ICMP на компьютер и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">IP-адрес, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция.</summary>
        <returns>Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокироваться. Возвращенный объект <xref:System.Threading.Tasks.Task%601>> будет завершен после отправки пакета ICMP и получения ответа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" />.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException"><paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Компьютер, который является назначением для сообщения проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция.</summary>
        <returns>Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокироваться. Возвращенный объект <xref:System.Threading.Tasks.Task%601>> будет завершен после отправки пакета ICMP и получения ответа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">IP-адрес, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <returns>Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокироваться. Возвращенный объект <xref:System.Threading.Tasks.Task%601>> будет завершен после отправки пакета ICMP и получения ответа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string * int -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Компьютер, который является назначением для сообщения проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <returns>Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокироваться. Возвращенный объект <xref:System.Threading.Tasks.Task%601>> будет завершен после отправки пакета ICMP и получения ответа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer, buffer As Byte()) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress * int * byte[] -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (address, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">IP-адрес, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция. Эта перегрузка позволяет указать значение истечения времени ожидания для операции и буфер для использования для отправки и получения.</summary>
        <returns>Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокироваться. Возвращенный объект <xref:System.Threading.Tasks.Task%601>> будет завершен после отправки пакета ICMP и получения ответа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> — <see langword="null" />.  
  
- или - 
 <paramref name="buffer" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" />.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException"><paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.ArgumentException">Размер <paramref name="buffer" /> превышает 65 500 байт.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string * int * byte[] -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (hostNameOrAddress, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Компьютер, который является назначением для сообщения проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция. Эта перегрузка позволяет указать значение истечения времени ожидания для операции и буфер для использования для отправки и получения.</summary>
        <returns>Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокироваться. Возвращенный объект <xref:System.Threading.Tasks.Task%601>> будет завершен после отправки пакета ICMP и получения ответа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (address, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">IP-адрес, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="options">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, используемый для управления значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получает от него соответствующее сообщение ответа проверки связи ICMP в виде асинхронной операции. Эта перегруженная версия метода позволяет указать тайм-аут операции, буфер для использования для отправки и получения и управлять значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</summary>
        <returns>Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокироваться. Возвращенный объект <xref:System.Threading.Tasks.Task%601>> будет завершен после отправки пакета ICMP и получения ответа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="address" /> имеет значение <see langword="null" />.  
  
- или - 
 <paramref name="buffer" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" />.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException"><paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.ArgumentException">Размер <paramref name="buffer" /> превышает 65 500 байт.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (hostNameOrAddress, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Компьютер, который является назначением для сообщения проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="options">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, используемый для управления значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция. Эта перегруженная версия метода позволяет указать тайм-аут операции, буфер для использования для отправки и получения и управлять значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</summary>
        <returns>Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокироваться. Возвращенный объект <xref:System.Threading.Tasks.Task%601>> будет завершен после отправки пакета ICMP и получения ответа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, используемые экземплярами класса <see cref="T:System.Net.NetworkInformation.Ping" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
При вызове любого метода для объекта <xref:System.Net.NetworkInformation.Ping>, который был удален, вы получаете <xref:System.ObjectDisposedException>.

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
