<Type Name="IPInterfaceProperties" FullName="System.Net.NetworkInformation.IPInterfaceProperties">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e2fd22daad6f44b9d7cf72bc7625b1b70cd4503" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75171339" /></Metadata><TypeSignature Language="C#" Value="public abstract class IPInterfaceProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IPInterfaceProperties extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.IPInterfaceProperties" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IPInterfaceProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPInterfaceProperties abstract" />
  <TypeSignature Language="F#" Value="type IPInterfaceProperties = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет сведения о сетевых интерфейсах, поддерживающих протокол IPv4 или IPv6.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс предоставляет доступ к конфигурации и сведениям об адресах для сетевых интерфейсов, поддерживающих IPv4 или IPv6. Экземпляры этого класса не создаются. они возвращаются методом <xref:System.Net.NetworkInformation.NetworkInterface.GetIPProperties%2A>.  
  
 Для доступа к свойствам, относящимся к IPv4, используйте объект, возвращаемый методом <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A>. Для доступа к свойствам, относящимся к IPv6, используйте объект, возвращаемый методом <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>.  
  
   
  
## Examples  
 В следующем примере кода отображаются сведения об адресе.  
  
 [!code-cpp[NclNetInfoReport#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#8)]
 [!code-csharp[NclNetInfoReport#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IPInterfaceProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPInterfaceProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IPInterfaceProperties();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор может вызываться только из классов, производных от <xref:System.Net.NetworkInformation.IPInterfaceProperties>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnycastAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPAddressInformationCollection AnycastAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.IPAddressInformationCollection AnycastAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AnycastAddresses As IPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::IPAddressInformationCollection ^ AnycastAddresses { System::Net::NetworkInformation::IPAddressInformationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnycastAddresses : System.Net.NetworkInformation.IPAddressInformationCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает IP-адреса произвольной рассылки, назначенные интерфейсу.</summary>
        <value>Объект <see cref="T:System.Net.NetworkInformation.IPAddressInformationCollection" />, содержащий адреса произвольной рассылки интерфейса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Адрес многократной рассылки идентифицирует несколько компьютеров. Пакеты, отправляемые на адрес рассылки до первого адреса, отправляются на один из компьютеров, идентифицируемых по адресу. Адрес рассылки до первого адреса — это функция IPv6, используемая для обновления таблиц маршрутизаторов для группы узлов.  
  
   
  
## Examples  
 В следующем примере кода выводятся адреса многоадресной рассылки для сетевых интерфейсов на локальном компьютере.  
  
 [!code-cpp[NclNetInfo2#43](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#43)]
 [!code-csharp[NclNetInfo2#43](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#43)]
 [!code-vb[NclNetInfo2#43](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DhcpServerAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPAddressCollection DhcpServerAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.IPAddressCollection DhcpServerAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DhcpServerAddresses As IPAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::IPAddressCollection ^ DhcpServerAddresses { System::Net::NetworkInformation::IPAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DhcpServerAddresses : System.Net.NetworkInformation.IPAddressCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает адреса DHCP-серверов для данного интерфейса.</summary>
        <value>Объект <see cref="T:System.Net.NetworkInformation.IPAddressCollection" />, содержащий адреса DHCP-серверов, или пустой массив, если серверы не обнаружены.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Протокол DHCP позволяет компьютеру получить сетевой адрес от DHCP-сервера, а не использовать статический (фиксированный) сетевой адрес. DHCP-сервер не будет постоянно назначать адреса. Вместо этого он временно использует один из нескольких доступных адресов на компьютере.  
  
   
  
## Examples  
 В следующем примере кода выводятся сведения об DHCP-адресе для сетевых интерфейсов на локальном компьютере.  
  
 [!code-cpp[NclNetInfo2#46](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#46)]
 [!code-csharp[NclNetInfo2#46](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#46)]
 [!code-vb[NclNetInfo2#46](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#46)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DnsAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPAddressCollection DnsAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.IPAddressCollection DnsAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DnsAddresses As IPAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::IPAddressCollection ^ DnsAddresses { System::Net::NetworkInformation::IPAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DnsAddresses : System.Net.NetworkInformation.IPAddressCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает адреса DNS-серверов для данного интерфейса.</summary>
        <value>Объект <see cref="T:System.Net.NetworkInformation.IPAddressCollection" />, содержащий адреса DNS-серверов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DNS — это иерархическая система именования, используемая для преобразования имен узлов в IP-адреса.  
  
   
  
## Examples  
 В следующем примере кода отображаются DNS-адреса для сетевых интерфейсов на локальном компьютере.  
  
 [!code-cpp[NclNetInfo2#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#42)]
 [!code-csharp[NclNetInfo2#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#42)]
 [!code-vb[NclNetInfo2#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DnsSuffix">
      <MemberSignature Language="C#" Value="public abstract string DnsSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DnsSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DnsSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DnsSuffix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DnsSuffix : string" Usage="System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает DNS-суффикс, соответствующий данному интерфейсу.</summary>
        <value>Строка <see cref="T:System.String" />, которая содержит DNS-суффикс данного интерфейса или значение <see cref="F:System.String.Empty" />, если у интерфейса нет DNS-суффикса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DNS-суффикс определяет доменное имя (например, "contoso.com"), добавляемое к неполному имени узла для получения полного доменного имени (FQDN), подходящего для запроса DNS-имени. Например, если в качестве <xref:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix%2A>локального компьютера задано значение "contoso.com" и необходимо разрешить неполное имя узла "www", то FQDN для запроса — "www.contoso.com".  
  
   
  
## Examples  
 В следующем примере кода отображается DNS-суффикс.  
  
 [!code-cpp[NclNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]
 [!code-csharp[NclNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]
 [!code-vb[NclNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Это свойство не поддерживается на компьютерах с операционными системами более ранних версий, чем Windows 2000.</exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.GatewayIPAddressInformationCollection GatewayAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.GatewayIPAddressInformationCollection GatewayAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property GatewayAddresses As GatewayIPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::GatewayIPAddressInformationCollection ^ GatewayAddresses { System::Net::NetworkInformation::GatewayIPAddressInformationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayAddresses : System.Net.NetworkInformation.GatewayIPAddressInformationCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.GatewayIPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает адреса сетевых шлюзов IPv4 для данного интерфейса.</summary>
        <value>Объект <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformationCollection" />, содержащий адреса сетевых шлюзов, или пустой массив, если шлюзы не обнаружены.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает шлюзы, которые реализуют протокол IP версии 4 (IPv4) для пересылки пакетов между сетями.  
  
   
  
## Examples  
 В следующем примере кода отображаются адреса шлюзов для сетевых интерфейсов на локальном компьютере.  
  
 [!code-cpp[NclNetInfo2#47](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#47)]
 [!code-csharp[NclNetInfo2#47](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#47)]
 [!code-vb[NclNetInfo2#47](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPv4Properties">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPv4InterfaceProperties GetIPv4Properties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPv4InterfaceProperties GetIPv4Properties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIPv4Properties () As IPv4InterfaceProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IPv4InterfaceProperties ^ GetIPv4Properties();" />
      <MemberSignature Language="F#" Value="abstract member GetIPv4Properties : unit -&gt; System.Net.NetworkInformation.IPv4InterfaceProperties" Usage="iPInterfaceProperties.GetIPv4Properties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPv4InterfaceProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Предоставляет данные конфигурации протокола IPv4 для данного сетевого интерфейса.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.IPv4InterfaceProperties" />, содержащий данные конфигурации протокола IPv4, или <see langword="null" />, если эти данные для интерфейса недоступны.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает `null` для интерфейсов <xref:System.Net.NetworkInformation.NetworkInterfaceType.Loopback>.  
  
 Подробное описание сведений, доступных для интерфейса, поддерживающего протокол IPv4, см. в документации по классу <xref:System.Net.NetworkInformation.IPv4InterfaceProperties>. Обратите внимание, что объект, возвращаемый методом <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A>, отражает конфигурацию на момент создания объекта. Эти сведения не обновляются динамически.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Интерфейс не поддерживает протокол IPv4.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPv6Properties">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPv6InterfaceProperties GetIPv6Properties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPv6InterfaceProperties GetIPv6Properties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIPv6Properties () As IPv6InterfaceProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IPv6InterfaceProperties ^ GetIPv6Properties();" />
      <MemberSignature Language="F#" Value="abstract member GetIPv6Properties : unit -&gt; System.Net.NetworkInformation.IPv6InterfaceProperties" Usage="iPInterfaceProperties.GetIPv6Properties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPv6InterfaceProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Предоставляет данные конфигурации протокола IPv6 для данного сетевого интерфейса.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.IPv6InterfaceProperties" />, содержащий данные конфигурации протокола IPv6.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Подробное описание сведений, доступных для интерфейса, поддерживающего IPv6, см. в документации по <xref:System.Net.NetworkInformation.IPv6InterfaceProperties>. Обратите внимание, что объект, возвращаемый методом <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>, отражает конфигурацию на момент создания объекта. Эти сведения не обновляются динамически.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Интерфейс не поддерживает протокол IPv6.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDnsEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsDnsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDnsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDnsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDnsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDnsEnabled : bool" Usage="System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение типа <see cref="T:System.Boolean" />, указывающее, настроен ли на этом интерфейсе NetBIOS через TCP/IP для использования разрешения DNS-имен.</summary>
        <value>Значение <see langword="true" />, если на этом интерфейсе настроен NetBIOS через TCP/IP для использования разрешения DNS-имен; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DNS — это иерархическая система именования, используемая для преобразования имен узлов в IP-адреса.  
  
   
  
## Examples  
 В следующем примере кода выводится значение этого свойства.  
  
 [!code-cpp[NclNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]
 [!code-csharp[NclNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]
 [!code-vb[NclNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDynamicDnsEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsDynamicDnsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamicDnsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDynamicDnsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDynamicDnsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDynamicDnsEnabled : bool" Usage="System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение типа <see cref="T:System.Boolean" />. указывающее, настроена ли на интерфейсе автоматическая регистрация IP-адресов в DNS.</summary>
        <value>Значение <see langword="true" />, если на интерфейсе настроена автоматическая регистрация соответствия между динамическим IP-адресом и статическими доменными именами; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Динамическая служба DNS позволяет клиенту уведомлять DNS-серверы о том, что его динамический IP-адрес сопоставлен с его статическим именем узла.  
  
   
  
## Examples  
 В следующем примере кода выводится значение этого свойства.  
  
 [!code-cpp[NclNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]
 [!code-csharp[NclNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]
 [!code-vb[NclNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.MulticastIPAddressInformationCollection MulticastAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.MulticastIPAddressInformationCollection MulticastAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MulticastAddresses As MulticastIPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::MulticastIPAddressInformationCollection ^ MulticastAddresses { System::Net::NetworkInformation::MulticastIPAddressInformationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MulticastAddresses : System.Net.NetworkInformation.MulticastIPAddressInformationCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.MulticastIPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает адреса многоадресной рассылки, назначенные интерфейсу.</summary>
        <value>Объект <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformationCollection" />, содержащий адреса многоадресной рассылки интерфейса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Адрес многоадресной рассылки идентифицирует несколько компьютеров. Пакеты, отправляемые на адрес многоадресной рассылки, отправляются на все компьютеры, идентифицируемые по адресу.  
  
   
  
## Examples  
 В следующем примере кода отображаются адреса многоадресной рассылки для сетевых интерфейсов на локальном компьютере.  
  
 [!code-cpp[NclNetInfo2#44](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#44)]
 [!code-csharp[NclNetInfo2#44](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#44)]
 [!code-vb[NclNetInfo2#44](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicastAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.UnicastIPAddressInformationCollection UnicastAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.UnicastIPAddressInformationCollection UnicastAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UnicastAddresses As UnicastIPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^ UnicastAddresses { System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnicastAddresses : System.Net.NetworkInformation.UnicastIPAddressInformationCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UnicastIPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает адреса одноадресной рассылки, назначенные интерфейсу.</summary>
        <value>Объект <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection" />, содержащий адреса одноадресной рассылки интерфейса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Адрес одноадресной рассылки идентифицирует отдельный компьютер. Пакеты, отправляемые на адрес одноадресной рассылки, отправляются на компьютер, идентифицируемый по адресу.  
  
   
  
## Examples  
 В следующем примере кода отображаются адреса одноадресной рассылки для сетевых интерфейсов на локальном компьютере.  
  
 [!code-cpp[NclNetInfo2#45](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#45)]
 [!code-csharp[NclNetInfo2#45](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#45)]
 [!code-vb[NclNetInfo2#45](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#45)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WinsServersAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPAddressCollection WinsServersAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.IPAddressCollection WinsServersAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property WinsServersAddresses As IPAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::IPAddressCollection ^ WinsServersAddresses { System::Net::NetworkInformation::IPAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WinsServersAddresses : System.Net.NetworkInformation.IPAddressCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает адреса WINS-серверов.</summary>
        <value>Объект <see cref="T:System.Net.NetworkInformation.IPAddressCollection" />, содержащий адреса WINS-серверов, или пустой массив, если серверы не обнаружены.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WINS предоставляет распределенную базу данных для регистрации и запроса динамических имен NetBIOS в сопоставлениях IP-адресов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
