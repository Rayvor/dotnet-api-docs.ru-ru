<Type Name="PingOptions" FullName="System.Net.NetworkInformation.PingOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf4b821bbaa7b117af28b78d5859e30f7a410504" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70431230" /></Metadata><TypeSignature Language="C#" Value="public class PingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class PingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingOptions" />
  <TypeSignature Language="F#" Value="type PingOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Используется для управления передачей пакетов данных <see cref="T:System.Net.NetworkInformation.Ping" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс предоставляет свойства <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>  и, управляющие передачей пакетов эхо-запросов протокола ICMP. <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> <xref:System.Net.NetworkInformation.PingOptions>  
  
 Свойство определяет срок жизни пакетов <xref:System.Net.NetworkInformation.Ping> , отправляемых классом. <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Это значение указывает количество узлов маршрутизации, которые могут пересылать <xref:System.Net.NetworkInformation.Ping> пакет, прежде чем он будет удален. Установка этого параметра полезна, если требуется проверить количество пересылок, также называемых прыжками, для отправки пакета с исходного компьютера на конечный компьютер.  
  
 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Свойство определяет, можно ли разделить данные, отправляемые на удаленный узел, на несколько пакетов.  Этот параметр полезен, если требуется проверить максимальный размер передаваемых данных (MTU) маршрутизаторов и шлюзов, используемых для передачи пакета.  
  
 <xref:System.Net.NetworkInformation.Ping.Send%2A> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> <xref:System.Net.NetworkInformation.PingReply> Экземпляры <xref:System.Net.NetworkInformation.PingOptions>  класса передаются методам и , <xref:System.Net.NetworkInformation.PingReply.Options%2A>  а класс возвращает экземпляры через свойство. <xref:System.Net.NetworkInformation.PingOptions>  
  
 Список начальных значений свойств для экземпляра <xref:System.Net.NetworkInformation.PingOptions>см. в <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> разделе Конструктор.  
  
   
  
## Examples  
 В следующем примере кода классы <xref:System.Net.NetworkInformation.Ping> <xref:System.Net.NetworkInformation.PingOptions> и <xref:System.Net.NetworkInformation.PingReply> используются для отправки запроса проверки связи ICMP на узел, указанный в командной строке.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.NetworkInformation.PingOptions" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PingOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.PingOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PingOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.NetworkInformation.PingOptions" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице показаны начальные значения свойств для экземпляра <xref:System.Net.NetworkInformation.PingOptions>.  
  
|Свойство.|Начальное значение|  
|--------------|-------------------|  
|<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>|128|  
|<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>|`false`|  
  
 Можно задать новые значения свойств перед вызовом <xref:System.Net.NetworkInformation.Ping.Send%2A> или. <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вызов этого конструктора.  
  
 [!code-cpp[NCLPingSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#2)]
 [!code-csharp[NCLPingSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PingOptions (int ttl, bool dontFragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 ttl, bool dontFragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.PingOptions.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ttl As Integer, dontFragment As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PingOptions(int ttl, bool dontFragment);" />
      <MemberSignature Language="F#" Value="new System.Net.NetworkInformation.PingOptions : int * bool -&gt; System.Net.NetworkInformation.PingOptions" Usage="new System.Net.NetworkInformation.PingOptions (ttl, dontFragment)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ttl" Type="System.Int32" />
        <Parameter Name="dontFragment" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ttl">Значение типа <see cref="T:System.Int32" /> больше нуля, указывающее, сколько раз могут быть переадресованы пакеты данных <see cref="T:System.Net.NetworkInformation.Ping" />.</param>
        <param name="dontFragment">Значение <see langword="true" />, чтобы данные, отправляемые на удаленный узел, не фрагментировались; в противном случае — <see langword="false" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.NetworkInformation.PingOptions" /> и задает значения срока жизни и фрагментации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ttl` Параметр ограничивает количество маршрутизаторов и шлюзов, которые могут пересылать данные. Это полезно для проверки длины маршрута между локальным и удаленным компьютерами. `dontFragment` Параметр позволяет проверить максимальную единицу передачи (MTU) маршрутизаторов и шлюзов, используемых для передачи пакета.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вызов этого конструктора и отображение значений свойств нового экземпляра.  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ttl" /> не больше нуля.</exception>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingOptions.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.NetworkInformation.PingOptions.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение типа <see cref="T:System.Boolean" />, которое управляет фрагментацией данных, отправляемых на удаленный узел.</summary>
        <value>Значение <see langword="true" />, если данные нельзя отправлять несколькими пакетами; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения используют это свойство для управления тем, можно ли разделить данные, отправляемые <xref:System.Net.NetworkInformation.Ping> на удаленный узел класса, на несколько пакетов.  Этот параметр полезен, если требуется проверить максимальный размер передаваемых данных (MTU) маршрутизаторов и шлюзов, используемых для передачи пакета. Если это свойство равно `true` , а данные, отправляемые на удаленный узел, больше, чем MTU шлюза или маршрутизатора между отправителем и удаленным узлом, то операция проверки связи завершается ошибкой с состоянием. <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> задать значение этого свойства с помощью конструктора, а затем отобразить значение.  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public int Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingOptions.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ttl { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int with get, set" Usage="System.Net.NetworkInformation.PingOptions.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает число узелов маршрутизации, которые могут переадресовывать пакет <see cref="T:System.Net.NetworkInformation.Ping" />, прежде чем он будет удален.</summary>
        <value>Значение типа <see cref="T:System.Int32" />, указывающее, сколько раз могут быть переадресованы пакеты данных <see cref="T:System.Net.NetworkInformation.Ping" />. Значение по умолчанию — 128.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Так как шлюзы и маршрутизаторы передают пакеты по сети, они уменьшают текущее значение срока жизни (TTL), найденное в заголовке пакета. Если значение TTL достигает нуля, пакет считается недоставленным и отбрасывается. Этот параметр полезен, если требуется проверить количество маршрутизаторов и шлюзов, используемых для передачи данных.  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> задать значение этого свойства с помощью конструктора, а затем отобразить значение.  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение, указанное для операции задания, меньше или равно нулю.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
