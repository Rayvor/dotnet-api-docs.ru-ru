<Type Name="AntiXssEncoder" FullName="System.Web.Security.AntiXss.AntiXssEncoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="19cf309cf58547c4dfc81bb4aaec439b1458d4ef" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70458030" /></Metadata><TypeSignature Language="C#" Value="public class AntiXssEncoder : System.Web.Util.HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AntiXssEncoder extends System.Web.Util.HttpEncoder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class AntiXssEncoder&#xA;Inherits HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AntiXssEncoder : System::Web::Util::HttpEncoder" />
  <TypeSignature Language="F#" Value="type AntiXssEncoder = class&#xA;    inherit HttpEncoder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Util.HttpEncoder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Кодирует строку для использования в строках HTML, XML CSS и URL.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AntiXss.AntiXssEncoder> Класс можно использовать для <xref:System.Web.Util.HttpEncoder> переопределения класса, используемого по умолчанию для кодирования и декодирования строк в методах классов, таких как <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>и <xref:System.Net.HttpResponseHeader>.  
  
 В классе все символы, не найденные в списке надежных, кодируются <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A> методами и  <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A> . <xref:System.Web.Security.AntiXss.AntiXssEncoder>  
  
 Чтобы заменить <xref:System.Web.Util.HttpEncoder> класс <xref:System.Web.Security.AntiXss.AntiXssEncoder> классом `encoderType` , зарегистрируйте его с помощью атрибута элемента httpRuntime в файле Web. config, как показано в следующем примере:  
  
```  
<httpRuntime encoderType="System.Web.Security.AntiXss.AntiXssEncoder" />  
```  
  
 Список безнадежных символов по умолчанию для различных методов кодирования можно найти <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A>в комментариях к методам, <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode%2A> <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A>, и <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode%2A> . Защищенный список по умолчанию можно изменить с помощью <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> метода.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AntiXssEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AntiXssEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssEncode">
      <MemberSignature Language="C#" Value="public static string CssEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CssEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CssEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CssEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member CssEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.CssEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <summary>Кодирует указанная строка для использования в каскадных таблиц стилей CSS.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных.  
  
> [!NOTE]
>  Заключите полученную строку в кавычки (""), прежде чем добавлять ее в каскадную таблицу стилей.  
  
 В следующей таблице перечислены защищенные символы по умолчанию. Все они относятся к [элементам управления C0 Юникода и диапазону базовых латинских](https://www.unicode.org/charts/PDF/U0000.pdf) символов.
  
|Символы|Описание|  
|--------------------|-----------------|  
|A – Z|Прописные буквы в верхнем регистре|  
|a – z|Строчные буквы в нижнем регистре|  
|0-9|Номера|  
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert\000028\000027XSS\000020Attack\000021\000027\000029\00003B`|  
|`user@contoso.com`|`user\000040contoso\00002Ecom`|  
|`Anti-Cross Site Scripting Namespace`|`Anti\00002DCross\000020Site\000020Scripting\000020Namespace`|  
  
 Escape-последовательность символов CSS состоит из символа обратной косой\\черты (), за которым следует до шести шестнадцатеричных цифр, представляющих код символа из стандарта ISO 10646. (Стандарт ISO 10646 фактически эквивалентен Unicode.) Любой символ, отличный от шестнадцатеричной цифры, завершает escape-последовательность. Если символ, следующий за escape-последовательностью, также является допустимой шестнадцатеричной цифрой, он должен включать в escape-последовательность шесть цифр или использовать символ пробела для завершения escape-последовательности. Например, `\000020` обозначает пробел.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="antiXssEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">Кодируемая строка.</param>
        <param name="output">Средство записи текста, используемое для вывода строки.</param>
        <summary>Кодирует и выводит заданную строку для использования в атрибуте HTML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `&#DECIMAL;` нотации.  
  
> [!NOTE]
>  Заключите полученную строку в двойные кавычки ("") или одиночные кавычки (' '), прежде чем добавлять ее на страницу.  
  
 В следующей таблице перечислены защищенные символы по умолчанию. Все они относятся к [элементам управления C0 Юникода и диапазону основных латинских](https://www.unicode.org/charts/PDF/U0000.pdf) символов, если не указано в столбце Description.  
  
|Символы|Описание|  
|--------------------|-----------------|  
|A – Z|Символы латинского алфавита в верхнем регистре|  
|a – z|Строчные буквы латинского алфавита|  
|0-9|Номера|  
|\!|Восклицательный знак|  
|\#|Знак номера, хэш|  
|\$|Знак доллара|  
|\%|Знак процента|  
|( )|Скобки|  
|\*|*|  
|\+|Знак "плюс"|  
|\,|Comma|  
|\-|Дефис, минус|  
|\.|Точка, точка, полная точка|  
|\/|Подряд|  
|\:|Ставит|  
|\;|Заканчивается|  
|\=|Знак равенства|  
|\?|Вопросительный знак|  
|\@|Коммерческое at-подпись|  
|\[ \]|Квадратные скобки|  
|\\ |Обратная косая черта|  
|\^|Курсор|  
|\_|Подчеркивания|  
|\`|Ударение|  
|\{ \}|Фигурные скобки, фигурные скобки|  
|\||Вертикальная линия|  
|\~|Символа|  
|0x00A1 - 0x00AC|Специальные символы между 0x00A1 (161 Decimal) и 0x00AC (172 Decimal) из [элементов управления Юникода C1 и символов "Латиница-1" дополняют](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон знаков.|  
|0x00AE - 0x00FF|Специальные символы между 0x00AE (174 Decimal) и 0x00FF (255 Decimal) из [элементов управления Юникода C1 и символов "Латиница-1" дополняют](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон знаков.|  
|0x0100 - 0x017F|Символы между 0x0100 (256 Decimal) и 0x017F (383 Decimal). (Диапазон символов, [расширенных по алфавиту (латиница](https://www.unicode.org/charts/PDF/U0100.pdf) ) в Юникоде.)|
|0x0180 - 0x024F|Символы между 0x0180 (384 Decimal) и 0x024F (591 Decimal). (Диапазон символов Юникода [латиницы-Extended-B](https://www.unicode.org/charts/PDF/U0180.pdf) .)|  
|0x0250 - 0x02AF|Символы между 0x0250 (592 Decimal) и 0x02AF (687 Decimal). (Диапазон символов [расширений Юникода IPA](https://www.unicode.org/charts/PDF/U0250.pdf) .)| 
|0x02B0 - 0x02FF|Символы между 0x02B0 (688 Decimal) и 0x02FF (767 Decimal). (Диапазон символов в символах с [модификаторами пробелов](https://www.unicode.org/charts/PDF/U02B0.pdf) в Юникоде.)|
|0x0300 - 0x036F|Символы между 0x0300 (768 Decimal) и 0x036F (879 Decimal). (Набор символов [диакритических](https://www.unicode.org/charts/PDF/U0300.pdf) знаков в Юникоде.)|  
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|Примеры входных данных| Закодированные выходные данные|  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Чтобы настроить список надежных, вызовите <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Кодирует указанная строка для использования в качестве текста в разметке HTML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string input, bool useNamedEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string input, bool useNamedEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (input As String, useNamedEntities As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ input, bool useNamedEntities);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * bool -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode (input, useNamedEntities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="useNamedEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <param name="useNamedEntities">Значение <see langword="true" /> для использования именованных сущностей HTML 4.0 для кодировки некоторых символов; значение <see langword="false" /> для кодирования только с помощью нотации <c>&amp;#DECIMAL;</c>.</param>
        <summary>Кодирует указанную строка для использования в качестве текста в разметке HTML и, при необходимости, указывающее, использовать ли сущности, именованные в HTML 4.0.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `&#DECIMAL;` нотации.  
  
> [!NOTE]
>  Заключите полученную строку в двойные кавычки ("") или одиночные кавычки (' '), прежде чем добавлять ее на страницу.  
  
 В следующей таблице перечислены защищенные символы по умолчанию. Все символы относятся к [элементам управления C0 Юникода и базовому](https://www.unicode.org/charts/PDF/U0000.pdf) диапазону латинских символов, если только они не указаны в столбце Description.
  
|Символы|Описание|  
|--------------------|-----------------|  
|A – Z|Символы латинского алфавита в верхнем регистре|  
|a – z|Строчные буквы латинского алфавита|  
|0-9|Номера|  
|Модуль|Пробел|  
|!|Восклицательный знак|  
|#|Знак номера, хэш|  
|$|Знак доллара|  
|%|Знак процента|  
|( )|Скобки|  
|*|*|  
|+|Знак "плюс"|  
|,|Comma|  
|-|Дефис, минус|  
|.|Точка, точка, полная точка|  
|/|Подряд|  
|:|Ставит|  
|;|Заканчивается|  
|=|Знак равенства|  
|?|Вопросительный знак|  
|@|Коммерческая версия|  
|[ ]|Квадратные скобки|  
|&#92;|Обратная косая черта|  
|^|Курсор|  
|_|Подчеркивания|  
|\`|Ударение|  
|{ }|Фигурные скобки, фигурные скобки|  
|&#124;|Вертикальная линия|  
|~|Символа|  
|0x00A1 - 0x00AC|Специальные символы между 0x00A1 (161 Decimal) и 0x00AC (172 Decimal) из [элементов управления Юникода C1 и символов "Латиница-1" дополняют](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон знаков. Символы в этом диапазоне кодируются, если `useNamedEntities` имеет `true`значения.|  
|0x00AE - 0x00FF|Специальные символы между 0x00AE (174 Decimal) и 0x00FF (255 Decimal) из [элементов управления Юникода C1 и символов "Латиница-1" дополняют](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон знаков. Символы в этом диапазоне кодируются, если `useNamedEntities` имеет `true`значения.|  
|0x0100 - 0x017F|Символы между 0x0100 (256 Decimal) и 0x017F (383 Decimal). (Диапазон символов, [расширенных по алфавиту (латиница](https://www.unicode.org/charts/PDF/U0100.pdf) ) в Юникоде.)|
|0x0180 - 0x024F|Символы между 0x0180 (384 Decimal) и 0x024F (591 Decimal). (Диапазон символов Юникода [латиницы-Extended-B](https://www.unicode.org/charts/PDF/U0180.pdf) .)|  
|0x0250 - 0x02AF|Символы между 0x0250 (592 Decimal) и 0x02AF (687 Decimal). (Диапазон символов [расширений Юникода IPA](https://www.unicode.org/charts/PDF/U0250.pdf) .)|  
|0x02B0 - 0x02FF|Символы между 0x02B0 (688 Decimal) и 0x02FF (767 Decimal). (Диапазон символов в символах с [модификаторами пробелов](https://www.unicode.org/charts/PDF/U02B0.pdf) в Юникоде.)|
|0x0300 - 0x036F|Символы между 0x0300 (768 Decimal) и 0x036F (879 Decimal). (Набор символов [диакритических](https://www.unicode.org/charts/PDF/U0300.pdf) знаков в Юникоде.)| 
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Чтобы настроить список надежных, вызовите <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="antiXssEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">Кодируемая строка.</param>
        <param name="output">Средство записи текста, используемое для вывода строки.</param>
        <summary>Кодирует указанную строка для использования в качестве текста в разметке HTML и выводит строку с помощью указанного модуля записи текста.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `&#DECIMAL;` нотации.  
  
> [!NOTE]
>  Заключите полученную строку в двойные кавычки ("") или одиночные кавычки (' '), прежде чем добавлять ее на страницу.  
  
 В следующей таблице перечислены защищенные символы по умолчанию. Все символы относятся к [элементам управления C0 Юникода и базовому](https://www.unicode.org/charts/PDF/U0000.pdf) диапазону латинских символов, если только они не указаны в столбце Description.
  
|Символы|Описание|  
|--------------------|-----------------|  
|A – Z|Символы латинского алфавита в верхнем регистре|  
|a – z|Строчные буквы латинского алфавита|  
|0-9|Номера|  
|Модуль|Пробел|  
|!|Восклицательный знак|  
|#|Знак номера, хэш|  
|$|Знак доллара|  
|%|Знак процента|  
|( )|Скобки|  
|*|*|  
|+|Знак "плюс"|  
|,|Comma|  
|-|Дефис, минус|  
|.|Точка, точка, полная точка|  
|/|Подряд|  
|:|Ставит|  
|;|Заканчивается|  
|=|Знак равенства|  
|?|Вопросительный знак|  
|@|Коммерческая версия|  
|[ ]|Квадратные скобки|  
|&#92;|Обратная косая черта|  
|^|Курсор|  
|_|Подчеркивания|  
|\`|Ударение|  
|{ }|Фигурные скобки, фигурные скобки|  
|&#124;|Вертикальная линия|  
|~|Символа|  
|0x00A1 - 0x00AC|Специальные символы между 0x00A1 (161 Decimal) и 0x00AC (172 Decimal) из [элементов управления Юникода C1 и символов "Латиница-1" дополняют](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон знаков. Символы в этом диапазоне кодируются, если `useNamedEntities` имеет `true`значения.|  
|0x00AE - 0x00FF|Специальные символы между 0x00AE (174 Decimal) и 0x00FF (255 Decimal) из [элементов управления Юникода C1 и символов "Латиница-1" дополняют](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон знаков. Символы в этом диапазоне кодируются, если `useNamedEntities` имеет `true`значения.|  
|0x0100 - 0x017F|Символы между 0x0100 (256 Decimal) и 0x017F (383 Decimal). (Диапазон символов, [расширенных по алфавиту (латиница](https://www.unicode.org/charts/PDF/U0100.pdf) ) в Юникоде.)|
|0x0180 - 0x024F|Символы между 0x0180 (384 Decimal) и 0x024F (591 Decimal). (Диапазон символов Юникода [латиницы-Extended-B](https://www.unicode.org/charts/PDF/U0180.pdf) .)| 
|0x0250 - 0x02AF|Символы между 0x0250 (592 Decimal) и 0x02AF (687 Decimal). (Диапазон символов [расширений Юникода IPA](https://www.unicode.org/charts/PDF/U0250.pdf) .)| 
|0x02B0 - 0x02FF|Символы между 0x02B0 (688 Decimal) и 0x02FF (767 Decimal). (Диапазон символов в символах с [модификаторами пробелов](https://www.unicode.org/charts/PDF/U02B0.pdf) в Юникоде.)|
|0x0300 - 0x036F|Символы между 0x0300 (768 Decimal) и 0x036F (879 Decimal). (Набор символов [диакритических](https://www.unicode.org/charts/PDF/U0300.pdf) знаков в Юникоде.)| 
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Чтобы настроить список надежных, вызовите <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlFormUrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Кодирует указанную строку для использования при отправке форм, тип MIME которых — "application/x-www-form-urlencoded".</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <summary>Кодирует указанную строку для использования при отправке форм, тип MIME которых — "application/x-www-form-urlencoded".</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации. 
  
> [!NOTE]
>  Заключите полученную строку в двойные кавычки ("") или одиночные кавычки (' '), прежде чем добавлять ее на страницу.   

В следующей таблице перечислены защищенные символы по умолчанию. Все символы относятся к [элементам управления C0 Юникода и диапазону базовых латинских](https://www.unicode.org/charts/PDF/U0000.pdf) символов. 
    
|Диаграмма кода Юникода|Символы|Описание|  
|------------------------|--------------------|-----------------|  
|A – Z|Прописные буквы в верхнем регистре|  
|a – z|Строчные буквы в нижнем регистре|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Точка, точка, полная точка|  
|_|Подчеркивания|  
|~|Символа|  
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user@contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, int codePage);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string * int -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode (input, codePage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <param name="codePage">Кодовая страница, используемая для кодировки строки <paramref name="input" />.</param>
        <summary>Кодирует указанную строку для использования в представлениях форм, тип MIME которых "application/x-www-form-urlencoded", с помощью заданной кодовая страница.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  
  
> [!NOTE]
>  Заключите полученную строку в двойные кавычки ("") или одиночные кавычки (' '), прежде чем добавлять ее на страницу.  
  
 В следующей таблице перечислены защищенные символы по умолчанию. Все символы относятся к [элементам управления C0 Юникода и диапазону базовых латинских](https://www.unicode.org/charts/PDF/U0000.pdf) символов. 
  
|Символы|Описание|  
|--------------------|-----------------|  
|A – Z|Прописные буквы в верхнем регистре|  
|a – z|Строчные буквы в нижнем регистре|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Точка, точка, полная точка|  
|_|Подчеркивания|  
|~|Символа|  
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode (input, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <param name="inputEncoding">Тип кодировки ввода.</param>
        <summary>Кодирует указанную строку для представлений форм, тип MIME которых "application/x-www-form-urlencoded", с помощью указанного типа кодирования символов.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  
  
> [!NOTE]
>  Заключите полученную строку в двойные кавычки ("") или одиночные кавычки (' '), прежде чем добавлять ее на страницу.  
  
 В следующей таблице перечислены защищенные символы по умолчанию. Все символы относятся к [элементам управления C0 Юникода и диапазону базовых латинских](https://www.unicode.org/charts/PDF/U0000.pdf) символов. 
  
|Символы|Описание|  
|--------------------|-----------------|  
|A – Z|Прописные буквы в верхнем регистре|  
|a – z|Строчные буквы в нижнем регистре|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Точка, точка, полная точка|  
|_|Подчеркивания|  
|~|Символа|  
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkAsSafe">
      <MemberSignature Language="C#" Value="public static void MarkAsSafe (System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MarkAsSafe(valuetype System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, valuetype System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, valuetype System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, valuetype System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, valuetype System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MarkAsSafe(System::Web::Security::AntiXss::LowerCodeCharts lowerCodeCharts, System::Web::Security::AntiXss::LowerMidCodeCharts lowerMidCodeCharts, System::Web::Security::AntiXss::MidCodeCharts midCodeCharts, System::Web::Security::AntiXss::UpperMidCodeCharts upperMidCodeCharts, System::Web::Security::AntiXss::UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="F#" Value="static member MarkAsSafe : System.Web.Security.AntiXss.LowerCodeCharts * System.Web.Security.AntiXss.LowerMidCodeCharts * System.Web.Security.AntiXss.MidCodeCharts * System.Web.Security.AntiXss.UpperMidCodeCharts * System.Web.Security.AntiXss.UpperCodeCharts -&gt; unit" Usage="System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe (lowerCodeCharts, lowerMidCodeCharts, midCodeCharts, upperMidCodeCharts, upperCodeCharts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowerCodeCharts" Type="System.Web.Security.AntiXss.LowerCodeCharts" />
        <Parameter Name="lowerMidCodeCharts" Type="System.Web.Security.AntiXss.LowerMidCodeCharts" />
        <Parameter Name="midCodeCharts" Type="System.Web.Security.AntiXss.MidCodeCharts" />
        <Parameter Name="upperMidCodeCharts" Type="System.Web.Security.AntiXss.UpperMidCodeCharts" />
        <Parameter Name="upperCodeCharts" Type="System.Web.Security.AntiXss.UpperCodeCharts" />
      </Parameters>
      <Docs>
        <param name="lowerCodeCharts">Комбинация нижних таблиц кода, которые требуется пометить как безопасные.</param>
        <param name="lowerMidCodeCharts">Комбинация средних-нижних таблиц кода, которые требуется пометить как безопасные.</param>
        <param name="midCodeCharts">Комбинация средних таблиц кода, которые требуется пометить как безопасные.</param>
        <param name="upperMidCodeCharts">Комбинация средних-верхних таблиц кода, которые требуется пометить как безопасные.</param>
        <param name="upperCodeCharts">Комбинация верхних таблиц кода, которые требуется пометить как безопасные.</param>
        <summary>Помечает символы из указанных таблиц кодов Юникода как безопасные.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список надежных методов влияет на все методы кодировки HTML XML, CSS и URL-адресов.  
  
 С некоторыми исключениями диаграммы кода Юникода не соответствуют непосредственно написанным языкам. Чтобы добавить поддержку для определенного языка или набора языков, часто требуется пометить несколько диаграмм кода как надежные.  
  
 Чтобы добавить поддержку для японского языка, продолжая разрешать английский, используйте следующий синтаксис:  
  
```  
  
MarkAsSafe(  
            LowerCodeCharts.Default,  
            LowerMidCodeCharts.HangulJamo,  
            MidCodeCharts.None,  
            UpperMidCodeCharts.CjkRadicalsSupplement |   
            UpperMidCodeCharts.CjkSymbolsAndPunctuation |   
            UpperMidCodeCharts.Hiragana |   
            UpperMidCodeCharts.Katakana |   
            UpperMidCodeCharts.KatakanaPhoneticExtensions |   
            UpperMidCodeCharts.LatinExtendedD |  
            UpperMidCodeCharts.CjkUnifiedIdeographs,  
            UpperCodeCharts.None);  
```  
  
> [!NOTE]
>  Метод должен быть вызван `Application_Start` в методе в файле Global. asax. <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" /> был вызван вне метода <see langword="Application_Start" /> в файле Global.asax.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Кодирует строки и массивы байтов для использования в url-адресе.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <summary>Кодирует указанная строка для использования в качестве URL.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  
  
 В следующей таблице перечислены защищенные символы по умолчанию. Все символы относятся к [элементам управления C0 Юникода и диапазону базовых латинских](https://www.unicode.org/charts/PDF/U0000.pdf) символов. 
    
  
|Символы|Описание|  
|--------------------|-----------------|  
|A – Z|Прописные буквы в верхнем регистре|  
|a – z|Строчные буквы в нижнем регистре|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Точка, точка, полная точка|  
|_|Подчеркивания|  
|~|Символа|  
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, int codePage);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * int -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode (input, codePage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <param name="codePage">Кодовая страница, используемая для кодировки строки <paramref name="input" />.</param>
        <summary>Кодирует указанная строка для использования в url-адресе с помощью указанной кодовая страница.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  
  
 В следующей таблице перечислены защищенные символы по умолчанию. Все символы относятся к [элементам управления C0 Юникода и диапазону базовых латинских](https://www.unicode.org/charts/PDF/U0000.pdf) символов. 
    
  
|Диаграмма кода Юникода|Символы|Описание|  
|------------------------|--------------------|-----------------|  
|A – Z|Прописные буквы в верхнем регистре|  
|a – z|Строчные буквы в нижнем регистре|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Точка, точка, полная точка|  
|_|Подчеркивания|  
|~|Символа|  
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode (input, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <param name="inputEncoding">Тип кодировки ввода.</param>
        <summary>Кодирует указанная строка для использования в url-адресе с помощью указанного типа кодирования символов.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  
  
 В следующей таблице перечислены защищенные символы по умолчанию. Все символы относятся к [элементам управления C0 Юникода и диапазону базовых латинских](https://www.unicode.org/charts/PDF/U0000.pdf) символов. 
    
  
|Символы|Описание|  
|--------------------|-----------------|  
|A – Z|Прописные буквы в верхнем регистре|  
|a – z|Строчные буквы в нижнем регистре|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Точка, точка, полная точка|  
|_|Подчеркивания|  
|~|Символа|  
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal override byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="antiXssEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">Кодируемый массив байтов.</param>
        <param name="offset">Индекс первого кодируемого байта.</param>
        <param name="count">Количество байтов, предназначенных для кодирования.</param>
        <summary>Кодирует указанный массив байтов для использования в URL, начиная с заданного сдвига в массиве байтов и кодируя заданное числа байтов.</summary>
        <returns>Закодированный массив байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  
  
 В следующей таблице перечислены защищенные символы по умолчанию. Все символы относятся к [элементам управления C0 Юникода и диапазону базовых латинских](https://www.unicode.org/charts/PDF/U0000.pdf) символов. 
   
  
|Символы|Описание|  
|--------------------|-----------------|  
|A – Z|Прописные буквы в верхнем регистре|  
|a – z|Строчные буквы в нижнем регистре|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Точка, точка, полная точка|  
|_|Подчеркивания|  
|~|Символа|  
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal override string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.UrlPathEncode : string -&gt; string" Usage="antiXssEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Кодируемая строка.</param>
        <summary>Кодирует строки пути для использования в URL.</summary>
        <returns>URL-адрес, содержащий закодированный путь.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  

В следующей таблице перечислены защищенные символы по умолчанию. Все символы относятся к [элементам управления C0 Юникода и диапазону базовых латинских](https://www.unicode.org/charts/PDF/U0000.pdf) символов. 
    
|Символы|Описание|  
|--------------------|-----------------|  
|A – Z|Прописные буквы в верхнем регистре|  
|a – z|Строчные буквы в нижнем регистре|  
|0-9|Номера|  
|#|Знак номера, хэш|  
|%|Знак процента|  
|( )|Скобки|  
|-|Дефис, минус|  
|.|Точка, точка, полная точка|  
|/|Подряд|  
|&#92;|Обратная косая черта|  
|_|Подчеркивания|  
|{ }|Фигурные скобки, фигурные скобки|  
|&#124;|Вертикальная линия|  
|~|Символа|  
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`http://www.contoso.com:8080/<en-us>/[page].htm?v={value1}#x=[amount]`|`http://www.contoso.com:8080/%3cen-us%3e/%5bpage%5d.htm?v={value1}#x=[amount]`|  
|`alert('XSS Attack!');`|`alert(%27XSS%20Attack%21%27)%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert(%27XSS%20Attack%21%27)%3b%3c/script%3e`|  
|`alert('XSSあAttack!');`|`alert(%27XSS%e3%81%82Attack%21%27)%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 Этот метод кодирует только путь URL-адреса. Этот метод не кодирует `http:`схему ( `ftp:`например,, или `file:`), центр (например, `www.northwind.com` или `www.contoso.com:8080`), либо запрос или фрагмент (например, `?v=s978dfs9#x=103`). Если в строке нет схемы или центра, предполагается, что строка является относительным путем, а путь закодирован. В следующем URL-адресе кодируется только `/default.htm` подстрока:  
  
 `http://www.contoso.com:8080/default.htm?v=s978dfs9#x=103`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static string XmlAttributeEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlAttributeEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlAttributeEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlAttributeEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member XmlAttributeEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <summary>Кодирует указанная строка для использования в атрибутах XML.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `&#DECIMAL;` нотации.  
  
> [!NOTE]
>  Заключите полученную строку в двойные кавычки ("") или одиночные кавычки (' '), прежде чем добавлять ее на страницу.  
  
 В следующей таблице перечислены защищенные символы по умолчанию. Все символы относятся к [элементам управления C0 Юникода и базовому](https://www.unicode.org/charts/PDF/U0000.pdf) диапазону латинских символов, если только они не указаны в столбце Description.  
   
  
|Диаграмма кода Юникода|Символы|Описание|  
|------------------------|--------------------|-----------------|  
|A – Z|Символы латинского алфавита в верхнем регистре|  
|a – z|Строчные буквы латинского алфавита|  
|0-9|Номера|  
|!|Восклицательный знак|  
|#|Знак номера, хэш|  
|$|Знак доллара|  
|%|Знак процента|  
|( )|Скобки|  
|*|*|  
|+|Знак "плюс"|  
|,|Comma|  
|-|Дефис, минус|  
|.|Точка, точка, полная точка|  
|/|Подряд|  
|:|Ставит|  
|;|Заканчивается|  
|=|Знак равенства|  
|?|Вопросительный знак|  
|@|Коммерческое at-подпись|  
|[ ]|Квадратные скобки|  
|&#92;|Обратная косая черта|  
|^|Курсор|  
|_|Подчеркивания|  
|\`|Ударение|  
|{ }|Фигурные скобки, фигурные скобки|  
|&#124;|Вертикальная линия|  
|~|Символа|  
|0x00A1 - 0x00AC|Специальные символы между 0x00A1 (161 Decimal) и 0x00AC (172 Decimal) из [элементов управления Юникода C1 и символов "Латиница-1" дополняют](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон знаков.|  
|Специальные символы между 0x00AE (174 Decimal) и 0x00FF (255 Decimal) из [элементов управления Юникода C1 и символов "Латиница-1" дополняют](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон знаков.|  
|0x0100 - 0x017F|Символы между 0x0100 (256 Decimal) и 0x017F (383 Decimal). (Диапазон символов, [расширенных по алфавиту (латиница](https://www.unicode.org/charts/PDF/U0100.pdf) ) в Юникоде.)| 
|0x0180 - 0x024F|Символы между 0x0180 (384 Decimal) и 0x024F (591 Decimal). (Диапазон символов Юникода [латиницы-Extended-B](https://www.unicode.org/charts/PDF/U0180.pdf) .)| 
|0x0250 - 0x02AF|Символы между 0x0250 (592 Decimal) и 0x02AF (687 Decimal). (Диапазон символов [расширений Юникода IPA](https://www.unicode.org/charts/PDF/U0250.pdf) .)| 
|0x02B0 - 0x02FF|Символы между 0x02B0 (688 Decimal) и 0x02FF (767 Decimal). (Диапазон символов в символах с [модификаторами пробелов](https://www.unicode.org/charts/PDF/U02B0.pdf) в Юникоде.)|
|0x0300 - 0x036F|Символы между 0x0300 (768 Decimal) и 0x036F (879 Decimal). (Набор символов [диакритических](https://www.unicode.org/charts/PDF/U0300.pdf) знаков в Юникоде.)|  
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&apos;XSS&#32;Attack!&apos;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS&#32;Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Чтобы настроить список надежных, вызовите <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncode">
      <MemberSignature Language="C#" Value="public static string XmlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member XmlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <summary>Кодирует указанная строка для использования в атрибутах XML.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, кроме тех, которые находятся в списке надежных. Символы кодируются с помощью `&#DECIMAL;` нотации.  
  
> [!NOTE]
>  Заключите полученную строку в двойные кавычки ("") или одиночные кавычки (' '), прежде чем добавлять ее на страницу.  
  
 В следующей таблице перечислены защищенные символы по умолчанию. Все символы относятся к [элементам управления C0 Юникода и диапазону основных латинских](https://www.unicode.org/charts/PDF/U0000.pdf) символов, за исключением случаев, когда указано в столбце Description.   
  
|Символы|Описание|  
|--------------------|-----------------|  
|A – Z|Символы латинского алфавита в верхнем регистре|  
|a – z|Строчные буквы латинского алфавита|  
|0-9|Номера|  
|Модуль|Пробел|  
|!|Восклицательный знак|  
|#|Знак номера, хэш|  
|$|Знак доллара|  
|%|Знак процента|  
|( )|Скобки|  
|*|*|  
|+|Знак "плюс"|  
|,|Comma|  
|-|Дефис, минус|  
|.|Периода|  
|/|Подряд|  
|:|Ставит|  
|;|Заканчивается|  
|=|Знак равенства|  
|?|Вопросительный знак|  
|@|Коммерческая версия|  
|[ ]|Квадратные скобки|  
|&#92;|Обратная косая черта|  
|^|Курсор|  
|_|Подчеркивания|  
|\`|Ударение|  
|{ }|Фигурные скобки, фигурные скобки|  
|&#124;|Вертикальная линия|  
|~|Символа|  
|0x00A1 - 0x00AC|Специальные символы между 0x00A1 (161 Decimal) и 0x00AC (172 Decimal) из [элементов управления Юникода C1 и символов "Латиница-1" дополняют](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон знаков. Символы в этом диапазоне кодируются, если `useNamedEntities` имеет `true`значения.|  
|0x00AE - 0x00FF|Специальные символы между 0x00AE (174 Decimal) и 0x00FF (255 Decimal) из [элементов управления Юникода C1 и символов "Латиница-1" дополняют](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон знаков. Символы в этом диапазоне кодируются, если `useNamedEntities` имеет `true`значения.|  
|0x0100 - 0x017F|Символы между 0x0100 (256 Decimal) и 0x017F (383 Decimal). (Диапазон символов, [расширенных по алфавиту (латиница](https://www.unicode.org/charts/PDF/U0100.pdf) ) в Юникоде.)| 
|0x0180 - 0x024F|Символы между 0x0180 (384 Decimal) и 0x024F (591 Decimal). (Диапазон символов Юникода [латиницы-Extended-B](https://www.unicode.org/charts/PDF/U0180.pdf) .)|
|0x0250 - 0x02AF|Символы между 0x0250 (592 Decimal) и 0x02AF (687 Decimal). (Диапазон символов [расширений Юникода IPA](https://www.unicode.org/charts/PDF/U0250.pdf) .)| 
|0x02B0 - 0x02FF|Символы между 0x02B0 (688 Decimal) и 0x02FF (767 Decimal). (Диапазон символов в символах с [модификаторами пробелов](https://www.unicode.org/charts/PDF/U02B0.pdf) в Юникоде.)|
|0x0300 - 0x036F|Символы между 0x0300 (768 Decimal) и 0x036F (879 Decimal). (Набор символов [диакритических](https://www.unicode.org/charts/PDF/U0300.pdf) знаков в Юникоде.)| 
  
 В следующей таблице приведены примеры входных данных и соответствующие закодированные выходные данные.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Чтобы настроить список надежных, вызовите <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
