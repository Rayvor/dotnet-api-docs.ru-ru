<Type Name="AntiXssEncoder" FullName="System.Web.Security.AntiXss.AntiXssEncoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8dfbe75e6d28e74c7d4df2125c2acf992075f34" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67243079" /></Metadata><TypeSignature Language="C#" Value="public class AntiXssEncoder : System.Web.Util.HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AntiXssEncoder extends System.Web.Util.HttpEncoder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class AntiXssEncoder&#xA;Inherits HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AntiXssEncoder : System::Web::Util::HttpEncoder" />
  <TypeSignature Language="F#" Value="type AntiXssEncoder = class&#xA;    inherit HttpEncoder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Util.HttpEncoder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Кодирует строку для использования в строках HTML, XML CSS и URL.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Web.Security.AntiXss.AntiXssEncoder> классе, переопределять <xref:System.Web.Util.HttpEncoder> класс, используемый по умолчанию для кодирования и декодирования строки в методах классов, таких как <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, и <xref:System.Net.HttpResponseHeader>.  
  
 В <xref:System.Web.Security.AntiXss.AntiXssEncoder> класс, все символы, которые не представлены в список безопасных элементов кодируются по <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A> и <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A> методы.  
  
 Для замены <xref:System.Web.Util.HttpEncoder> класса <xref:System.Web.Security.AntiXss.AntiXssEncoder> класса, зарегистрировать его с помощью `encoderType` атрибут элемента httpRuntime в файле Web.config, как показано в следующем примере:  
  
```  
<httpRuntime encoderType="System.Web.Security.AntiXss.AntiXssEncoder" />  
```  
  
 Список по умолчанию символы для различных методов кодирования можно найти в разделе «Примечания» для <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A>, <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A>, <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode%2A>, и <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode%2A> методы. В список безопасных по умолчанию можно изменить с помощью <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> метод.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AntiXssEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AntiXssEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssEncode">
      <MemberSignature Language="C#" Value="public static string CssEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CssEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CssEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CssEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member CssEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.CssEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <summary>Кодирует указанная строка для использования в каскадных таблиц стилей CSS.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов.  
  
> [!NOTE]
>  Прямые кавычки (» «) вокруг строке перед началом добавления к каскадной таблице стилей.  
  
 В следующей таблице перечислены символы по умолчанию. Все, от [элементы управления C0 Юникода и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов.
  
|Символы|Описание|  
|--------------------|-----------------|  
|A-Z|Прописные буквы|  
|a – z|Строчные буквы|  
|0-9|Номера|  
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert\000028\000027XSS\000020Attack\000021\000027\000029\00003B`|  
|`user@contoso.com`|`user\000040contoso\00002Ecom`|  
|`Anti-Cross Site Scripting Namespace`|`Anti\00002DCross\000020Site\000020Scripting\000020Namespace`|  
  
 Последовательность escape-символов CSS состоит из символа обратной косой черты (\\) следуют до шести шестнадцатеричных цифр, представляющих код знака из стандарта ISO 10646. (ISO 10646 стандартный фактически эквивалентен Юникода). Любой символ, отличный от шестнадцатеричная цифра завершается escape-последовательность. Если символ, следующий за escape-последовательности также является допустимой шестнадцатеричной цифрой, его необходимо включить шести цифр в escape-последовательность или используйте символ пробела для завершения escape-последовательность. Например `\000020` обозначает пробел.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="antiXssEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">Кодируемая строка.</param>
        <param name="output">Средство записи текста, используемое для вывода строки.</param>
        <summary>Кодирует и выводит заданную строку для использования в атрибуте HTML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `&#DECIMAL;` нотации.  
  
> [!NOTE]
>  Заключать в двойные кавычки (» «) или одинарных кавычек ("") вокруг результирующая строка, перед добавлением на страницу.  
  
 В следующей таблице перечислены символы по умолчанию. Все, от Юникода [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов, если не указано в столбце «Описание».  
  
|Символы|Описание|  
|--------------------|-----------------|  
|A-Z|Прописные латинские буквы|  
|a – z|Строчные латинские буквы|  
|0-9|Номера|  
|\!|Восклицательный знак|  
|\#|Знак числа, хэша|  
|\$|Знак доллара|  
|\%|Знак процента|  
|( )|Круглые скобки|  
|\*|Звездочка|  
|\+|Знак «плюс»|  
|\,|Comma|  
|\-|Дефис, минус|  
|\.|Период, точка, точка|  
|\/|Косая черта|  
|\:|Двоеточие|  
|\;|Точка с запятой|  
|\=|Знак равенства|  
|\?|Вопросительный знак|  
|\@|Коммерческие без знака|  
|\[ \]|Квадратные скобки|  
|\\ |Обратная косая черта|  
|\^|Курсор|  
|\_|Символ подчеркивания|  
|\`|Апостроф|  
|\{ \}|Фигурные скобки, фигурные скобки|  
|\||Вертикальная линия|  
|\~|Тильда|  
|0x00A1 - 0x00AC|Специальные символы между от 0x00A1 (161 decimal) и 0x00AC (172 десятичное) из Юникода [C1 и дополнительная латиница-1](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон символов.|  
|0x00AE - 0x00FF|Специальные символы между 0x00AE (174 decimal) и 0x00FF (255 десятичное) из Юникода [C1 и дополнительная латиница-1](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон символов.|  
|0x0100 - 0x017F|Символы между 0x0100 (256 десятичное) и 0x017F (383 десятичное). (Юникод [латиница-расширенного-A](https://www.unicode.org/charts/PDF/U0100.pdf) диапазон символов.)|
|0x0180 - 0x024F|Символы между от 0x0180 (384 decimal) и 0x024F (591 десятичное). (Юникод [латиница-расширенного-B](https://www.unicode.org/charts/PDF/U0180.pdf) диапазон символов.)|  
|0x0250 - 0x02AF|Символы между 0x0250 (592 decimal) и 0x02AF (687 десятичное). (Юникод [фонетические](https://www.unicode.org/charts/PDF/U0250.pdf) диапазон символов.)| 
|0x02B0 - 0x02FF|Символы между 0x02B0 (688 decimal) и 0x02FF (767 десятичное). (Юникод [модификаторов букв](https://www.unicode.org/charts/PDF/U02B0.pdf) диапазон символов.)|
|0x0300 - 0x036F|Символы между 0x0300 (768 decimal) и 0x036F (879 десятичное). (Юникод [объединенных диакритических знаков](https://www.unicode.org/charts/PDF/U0300.pdf) диапазон символов.)|  
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|Примеры ввода| Четкость выходных|  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Чтобы настроить список надежных, вызовите <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Кодирует указанная строка для использования в качестве текста в разметке HTML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string input, bool useNamedEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string input, bool useNamedEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (input As String, useNamedEntities As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ input, bool useNamedEntities);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * bool -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode (input, useNamedEntities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="useNamedEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <param name="useNamedEntities">Значение <see langword="true" /> для использования именованных сущностей HTML 4.0 для кодировки некоторых символов; значение <see langword="false" /> для кодирования только с помощью нотации <c>&amp;#DECIMAL;</c>.</param>
        <summary>Кодирует указанную строка для использования в качестве текста в разметке HTML и, при необходимости, указывающее, использовать ли сущности, именованные в HTML 4.0.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `&#DECIMAL;` нотации.  
  
> [!NOTE]
>  Заключать в двойные кавычки (» «) или одинарных кавычек ("") вокруг результирующая строка, перед добавлением на страницу.  
  
 В следующей таблице перечислены символы по умолчанию. Все символы находятся на Юникод [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов, если не указано в столбце «Описание».
  
|Символы|Описание|  
|--------------------|-----------------|  
|A-Z|Прописные латинские буквы|  
|a – z|Строчные латинские буквы|  
|0-9|Номера|  
|(Пробел)|Пробел|  
|!|Восклицательный знак|  
|#|Знак числа, хэша|  
|$|Знак доллара|  
|%|Знак процента|  
|( )|Круглые скобки|  
|*|Звездочка|  
|+|Знак «плюс»|  
|,|Comma|  
|-|Дефис, минус|  
|.|Период, точка, точка|  
|/|Косая черта|  
|:|Двоеточие|  
|;|Точка с запятой|  
|=|Знак равенства|  
|?|Вопросительный знак|  
|@|Коммерческое использование в|  
|[ ]|Квадратные скобки|  
|&#92;|Обратная косая черта|  
|^|Курсор|  
|_|Символ подчеркивания|  
|\`|Апостроф|  
|{ }|Фигурные скобки, фигурные скобки|  
|&#124;|Вертикальная линия|  
|~|Тильда|  
|0x00A1 - 0x00AC|Специальные символы между от 0x00A1 (161 decimal) и 0x00AC (172 десятичное) из Юникода [C1 и дополнительная латиница-1](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон символов. Символы этого диапазона, кодируются при `useNamedEntities` является `true`.|  
|0x00AE - 0x00FF|Специальные символы между 0x00AE (174 decimal) и 0x00FF (255 десятичное) из Юникода [C1 и дополнительная латиница-1](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон символов. Символы этого диапазона, кодируются при `useNamedEntities` является `true`.|  
|0x0100 - 0x017F|Символы между 0x0100 (256 десятичное) и 0x017F (383 десятичное). (Юникод [латиница-расширенного-A](https://www.unicode.org/charts/PDF/U0100.pdf) диапазон символов.)|
|0x0180 - 0x024F|Символы между от 0x0180 (384 decimal) и 0x024F (591 десятичное). (Юникод [латиница-расширенного-B](https://www.unicode.org/charts/PDF/U0180.pdf) диапазон символов.)|  
|0x0250 - 0x02AF|Символы между 0x0250 (592 decimal) и 0x02AF (687 десятичное). (Юникод [фонетические](https://www.unicode.org/charts/PDF/U0250.pdf) диапазон символов.)|  
|0x02B0 - 0x02FF|Символы между 0x02B0 (688 decimal) и 0x02FF (767 десятичное). (Юникод [модификаторов букв](https://www.unicode.org/charts/PDF/U02B0.pdf) диапазон символов.)|
|0x0300 - 0x036F|Символы между 0x0300 (768 decimal) и 0x036F (879 десятичное). (Юникод [объединенных диакритических знаков](https://www.unicode.org/charts/PDF/U0300.pdf) диапазон символов.)| 
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Чтобы настроить список надежных, вызовите <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="antiXssEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">Кодируемая строка.</param>
        <param name="output">Средство записи текста, используемое для вывода строки.</param>
        <summary>Кодирует указанную строка для использования в качестве текста в разметке HTML и выводит строку с помощью указанного модуля записи текста.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `&#DECIMAL;` нотации.  
  
> [!NOTE]
>  Заключать в двойные кавычки (» «) или одинарных кавычек ("") вокруг результирующая строка, перед добавлением на страницу.  
  
 В следующей таблице перечислены символы по умолчанию. Все символы находятся на Юникод [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов, если не указано в столбце «Описание».
  
|Символы|Описание|  
|--------------------|-----------------|  
|A-Z|Прописные латинские буквы|  
|a – z|Строчные латинские буквы|  
|0-9|Номера|  
|(Пробел)|Пробел|  
|!|Восклицательный знак|  
|#|Знак числа, хэша|  
|$|Знак доллара|  
|%|Знак процента|  
|( )|Круглые скобки|  
|*|Звездочка|  
|+|Знак «плюс»|  
|,|Comma|  
|-|Дефис, минус|  
|.|Период, точка, точка|  
|/|Косая черта|  
|:|Двоеточие|  
|;|Точка с запятой|  
|=|Знак равенства|  
|?|Вопросительный знак|  
|@|Коммерческое использование в|  
|[ ]|Квадратные скобки|  
|&#92;|Обратная косая черта|  
|^|Курсор|  
|_|Символ подчеркивания|  
|\`|Апостроф|  
|{ }|Фигурные скобки, фигурные скобки|  
|&#124;|Вертикальная линия|  
|~|Тильда|  
|0x00A1 - 0x00AC|Специальные символы между от 0x00A1 (161 decimal) и 0x00AC (172 десятичное) из Юникода [C1 и дополнительная латиница-1](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон символов. Символы этого диапазона, кодируются при `useNamedEntities` является `true`.|  
|0x00AE - 0x00FF|Специальные символы между 0x00AE (174 decimal) и 0x00FF (255 десятичное) из Юникода [C1 и дополнительная латиница-1](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон символов. Символы этого диапазона, кодируются при `useNamedEntities` является `true`.|  
|0x0100 - 0x017F|Символы между 0x0100 (256 десятичное) и 0x017F (383 десятичное). (Юникод [латиница-расширенного-A](https://www.unicode.org/charts/PDF/U0100.pdf) диапазон символов.)|
|0x0180 - 0x024F|Символы между от 0x0180 (384 decimal) и 0x024F (591 десятичное). (Юникод [латиница-расширенного-B](https://www.unicode.org/charts/PDF/U0180.pdf) диапазон символов.)| 
|0x0250 - 0x02AF|Символы между 0x0250 (592 decimal) и 0x02AF (687 десятичное). (Юникод [фонетические](https://www.unicode.org/charts/PDF/U0250.pdf) диапазон символов.)| 
|0x02B0 - 0x02FF|Символы между 0x02B0 (688 decimal) и 0x02FF (767 десятичное). (Юникод [модификаторов букв](https://www.unicode.org/charts/PDF/U02B0.pdf) диапазон символов.)|
|0x0300 - 0x036F|Символы между 0x0300 (768 decimal) и 0x036F (879 десятичное). (Юникод [объединенных диакритических знаков](https://www.unicode.org/charts/PDF/U0300.pdf) диапазон символов.)| 
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Чтобы настроить список надежных, вызовите <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlFormUrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Кодирует указанную строку для использования при отправке форм, тип MIME которых — "application/x-www-form-urlencoded".</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <summary>Кодирует указанную строку для использования при отправке форм, тип MIME которых — "application/x-www-form-urlencoded".</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации. 
  
> [!NOTE]
>  Заключать в двойные кавычки (» «) или одинарных кавычек ("") вокруг результирующая строка, перед добавлением на страницу.   

В следующей таблице перечислены символы по умолчанию. Все символы находятся на Юникод [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов. 
    
|Таблица кодов Юникода|Символы|Описание|  
|------------------------|--------------------|-----------------|  
|A-Z|Прописные буквы|  
|a – z|Строчные буквы|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Период, точка, точка|  
|_|Символ подчеркивания|  
|~|Тильда|  
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user@contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, int codePage);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string * int -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode (input, codePage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <param name="codePage">Кодовая страница, используемая для кодировки строки <paramref name="input" />.</param>
        <summary>Кодирует указанную строку для использования в представлениях форм, тип MIME которых "application/x-www-form-urlencoded", с помощью заданной кодовая страница.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  
  
> [!NOTE]
>  Заключать в двойные кавычки (» «) или одинарных кавычек ("") вокруг результирующая строка, перед добавлением на страницу.  
  
 В следующей таблице перечислены символы по умолчанию. Все символы находятся на Юникод [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов. 
  
|Символы|Описание|  
|--------------------|-----------------|  
|A-Z|Прописные буквы|  
|a – z|Строчные буквы|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Период, точка, точка|  
|_|Символ подчеркивания|  
|~|Тильда|  
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode (input, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <param name="inputEncoding">Тип кодировки ввода.</param>
        <summary>Кодирует указанную строку для представлений форм, тип MIME которых "application/x-www-form-urlencoded", с помощью указанного типа кодирования символов.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  
  
> [!NOTE]
>  Заключать в двойные кавычки (» «) или одинарных кавычек ("") вокруг результирующая строка, перед добавлением на страницу.  
  
 В следующей таблице перечислены символы по умолчанию. Все символы находятся на Юникод [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов. 
  
|Символы|Описание|  
|--------------------|-----------------|  
|A-Z|Прописные буквы|  
|a – z|Строчные буквы|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Период, точка, точка|  
|_|Символ подчеркивания|  
|~|Тильда|  
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkAsSafe">
      <MemberSignature Language="C#" Value="public static void MarkAsSafe (System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MarkAsSafe(valuetype System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, valuetype System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, valuetype System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, valuetype System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, valuetype System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MarkAsSafe(System::Web::Security::AntiXss::LowerCodeCharts lowerCodeCharts, System::Web::Security::AntiXss::LowerMidCodeCharts lowerMidCodeCharts, System::Web::Security::AntiXss::MidCodeCharts midCodeCharts, System::Web::Security::AntiXss::UpperMidCodeCharts upperMidCodeCharts, System::Web::Security::AntiXss::UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="F#" Value="static member MarkAsSafe : System.Web.Security.AntiXss.LowerCodeCharts * System.Web.Security.AntiXss.LowerMidCodeCharts * System.Web.Security.AntiXss.MidCodeCharts * System.Web.Security.AntiXss.UpperMidCodeCharts * System.Web.Security.AntiXss.UpperCodeCharts -&gt; unit" Usage="System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe (lowerCodeCharts, lowerMidCodeCharts, midCodeCharts, upperMidCodeCharts, upperCodeCharts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowerCodeCharts" Type="System.Web.Security.AntiXss.LowerCodeCharts" />
        <Parameter Name="lowerMidCodeCharts" Type="System.Web.Security.AntiXss.LowerMidCodeCharts" />
        <Parameter Name="midCodeCharts" Type="System.Web.Security.AntiXss.MidCodeCharts" />
        <Parameter Name="upperMidCodeCharts" Type="System.Web.Security.AntiXss.UpperMidCodeCharts" />
        <Parameter Name="upperCodeCharts" Type="System.Web.Security.AntiXss.UpperCodeCharts" />
      </Parameters>
      <Docs>
        <param name="lowerCodeCharts">Комбинация нижних таблиц кода, которые требуется пометить как безопасные.</param>
        <param name="lowerMidCodeCharts">Комбинация средних-нижних таблиц кода, которые требуется пометить как безопасные.</param>
        <param name="midCodeCharts">Комбинация средних таблиц кода, которые требуется пометить как безопасные.</param>
        <param name="upperMidCodeCharts">Комбинация средних-верхних таблиц кода, которые требуется пометить как безопасные.</param>
        <param name="upperCodeCharts">Комбинация верхних таблиц кода, которые требуется пометить как безопасные.</param>
        <summary>Помечает символы из указанных таблиц кодов Юникода как безопасные.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список безопасных элементов влияет на все методы кодирования, XML, HTML, CSS и URL-адрес.  
  
 За некоторыми исключениями кодировок Юникода не соответствуют непосредственно письменные языки. Чтобы добавить поддержку для конкретного языка или набор языков, часто требуется Пометка safe несколько кодировок.  
  
 Чтобы добавить поддержку для японского языка, продолжая разрешить английский, используйте следующий синтаксис:  
  
```  
  
MarkAsSafe(  
            LowerCodeCharts.Default,  
            LowerMidCodeCharts.HangulJamo,  
            MidCodeCharts.None,  
            UpperMidCodeCharts.CjkRadicalsSupplement |   
            UpperMidCodeCharts.CjkSymbolsAndPunctuation |   
            UpperMidCodeCharts.Hiragana |   
            UpperMidCodeCharts.Katakana |   
            UpperMidCodeCharts.KatakanaPhoneticExtensions |   
            UpperMidCodeCharts.LatinExtendedD |  
            UpperMidCodeCharts.CjkUnifiedIdeographs,  
            UpperCodeCharts.None);  
```  
  
> [!NOTE]
>  <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> Метод должен вызываться `Application_Start` метод в файле Global.asax.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" /> был вызван вне метода <see langword="Application_Start" /> в файле Global.asax.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Кодирует строки и массивы байтов для использования в url-адресе.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <summary>Кодирует указанная строка для использования в качестве URL.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  
  
 В следующей таблице перечислены символы по умолчанию. Все символы находятся на Юникод [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов. 
    
  
|Символы|Описание|  
|--------------------|-----------------|  
|A-Z|Прописные буквы|  
|a – z|Строчные буквы|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Период, точка, точка|  
|_|Символ подчеркивания|  
|~|Тильда|  
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, int codePage);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * int -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode (input, codePage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <param name="codePage">Кодовая страница, используемая для кодировки строки <paramref name="input" />.</param>
        <summary>Кодирует указанная строка для использования в url-адресе с помощью указанной кодовая страница.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  
  
 В следующей таблице перечислены символы по умолчанию. Все символы находятся на Юникод [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов. 
    
  
|Таблица кодов Юникода|Символы|Описание|  
|------------------------|--------------------|-----------------|  
|A-Z|Прописные буквы|  
|a – z|Строчные буквы|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Период, точка, точка|  
|_|Символ подчеркивания|  
|~|Тильда|  
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode (input, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <param name="inputEncoding">Тип кодировки ввода.</param>
        <summary>Кодирует указанная строка для использования в url-адресе с помощью указанного типа кодирования символов.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  
  
 В следующей таблице перечислены символы по умолчанию. Все символы находятся на Юникод [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов. 
    
  
|Символы|Описание|  
|--------------------|-----------------|  
|A-Z|Прописные буквы|  
|a – z|Строчные буквы|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Период, точка, точка|  
|_|Символ подчеркивания|  
|~|Тильда|  
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal override byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="antiXssEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">Кодируемый массив байтов.</param>
        <param name="offset">Индекс первого кодируемого байта.</param>
        <param name="count">Количество байтов, предназначенных для кодирования.</param>
        <summary>Кодирует указанный массив байтов для использования в URL, начиная с заданного сдвига в массиве байтов и кодируя заданное числа байтов.</summary>
        <returns>Закодированный массив байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  
  
 В следующей таблице перечислены символы по умолчанию. Все символы находятся на Юникод [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов. 
   
  
|Символы|Описание|  
|--------------------|-----------------|  
|A-Z|Прописные буквы|  
|a – z|Строчные буквы|  
|0-9|Номера|  
|-|Дефис, минус|  
|.|Период, точка, точка|  
|_|Символ подчеркивания|  
|~|Тильда|  
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal override string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.UrlPathEncode : string -&gt; string" Usage="antiXssEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Кодируемая строка.</param>
        <summary>Кодирует строки пути для использования в URL.</summary>
        <returns>URL-адрес, содержащий закодированный путь.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `%SINGLE_BYTE_HEX` нотации.  

В следующей таблице перечислены символы по умолчанию. Все символы находятся на Юникод [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов. 
    
|Символы|Описание|  
|--------------------|-----------------|  
|A-Z|Прописные буквы|  
|a – z|Строчные буквы|  
|0-9|Номера|  
|#|Знак числа, хэша|  
|%|Знак процента|  
|( )|Круглые скобки|  
|-|Дефис, минус|  
|.|Период, точка, точка|  
|/|Косая черта|  
|&#92;|Обратная косая черта|  
|_|Символ подчеркивания|  
|{ }|Фигурные скобки, фигурные скобки|  
|&#124;|Вертикальная линия|  
|~|Тильда|  
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`http://www.contoso.com:8080/<en-us>/[page].htm?v={value1}#x=[amount]`|`http://www.contoso.com:8080/%3cen-us%3e/%5bpage%5d.htm?v={value1}#x=[amount]`|  
|`alert('XSS Attack!');`|`alert(%27XSS%20Attack%21%27)%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert(%27XSS%20Attack%21%27)%3b%3c/script%3e`|  
|`alert('XSSあAttack!');`|`alert(%27XSS%e3%81%82Attack%21%27)%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 Этот метод кодирует только путь URL-адреса. Этот метод не кодируют схемы (например, `http:`, `ftp:`, или `file:`), центра (к примеру, `www.northwind.com` или `www.contoso.com:8080`), или запроса или фрагмента (например, `?v=s978dfs9#x=103`). Если нет, схемы или центра, в строке, предполагается, что строка является относительным и закодированный путь. В следующий URL-адрес только подстрока `/default.htm` кодируется:  
  
 `http://www.contoso.com:8080/default.htm?v=s978dfs9#x=103`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static string XmlAttributeEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlAttributeEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlAttributeEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlAttributeEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member XmlAttributeEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <summary>Кодирует указанная строка для использования в атрибутах XML.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `&#DECIMAL;` нотации.  
  
> [!NOTE]
>  Заключать в двойные кавычки (» «) или одинарных кавычек ("") вокруг результирующая строка, перед добавлением на страницу.  
  
 В следующей таблице перечислены символы по умолчанию. Все символы находятся на Юникод [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон символов, если не указано в столбце «Описание».  
   
  
|Таблица кодов Юникода|Символы|Описание|  
|------------------------|--------------------|-----------------|  
|A-Z|Прописные латинские буквы|  
|a – z|Строчные латинские буквы|  
|0-9|Номера|  
|!|Восклицательный знак|  
|#|Знак числа, хэша|  
|$|Знак доллара|  
|%|Знак процента|  
|( )|Круглые скобки|  
|*|Звездочка|  
|+|Знак «плюс»|  
|,|Comma|  
|-|Дефис, минус|  
|.|Период, точка, точка|  
|/|Косая черта|  
|:|Двоеточие|  
|;|Точка с запятой|  
|=|Знак равенства|  
|?|Вопросительный знак|  
|@|Коммерческие без знака|  
|[ ]|Квадратные скобки|  
|&#92;|Обратная косая черта|  
|^|Курсор|  
|_|Символ подчеркивания|  
|\`|Апостроф|  
|{ }|Фигурные скобки, фигурные скобки|  
|&#124;|Вертикальная линия|  
|~|Тильда|  
|0x00A1 - 0x00AC|Специальные символы между от 0x00A1 (161 decimal) и 0x00AC (172 десятичное) из Юникода [C1 и дополнительная латиница-1](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон символов.|  
|Специальные символы между 0x00AE (174 decimal) и 0x00FF (255 десятичное) из Юникода [C1 и дополнительная латиница-1](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон символов.|  
|0x0100 - 0x017F|Символы между 0x0100 (256 десятичное) и 0x017F (383 десятичное). (Юникод [латиница-расширенного-A](https://www.unicode.org/charts/PDF/U0100.pdf) диапазон символов.)| 
|0x0180 - 0x024F|Символы между от 0x0180 (384 decimal) и 0x024F (591 десятичное). (Юникод [латиница-расширенного-B](https://www.unicode.org/charts/PDF/U0180.pdf) диапазон символов.)| 
|0x0250 - 0x02AF|Символы между 0x0250 (592 decimal) и 0x02AF (687 десятичное). (Юникод [фонетические](https://www.unicode.org/charts/PDF/U0250.pdf) диапазон символов.)| 
|0x02B0 - 0x02FF|Символы между 0x02B0 (688 decimal) и 0x02FF (767 десятичное). (Юникод [модификаторов букв](https://www.unicode.org/charts/PDF/U02B0.pdf) диапазон символов.)|
|0x0300 - 0x036F|Символы между 0x0300 (768 decimal) и 0x036F (879 десятичное). (Юникод [объединенных диакритических знаков](https://www.unicode.org/charts/PDF/U0300.pdf) диапазон символов.)|  
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&apos;XSS&#32;Attack!&apos;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS&#32;Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Чтобы настроить список надежных, вызовите <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncode">
      <MemberSignature Language="C#" Value="public static string XmlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member XmlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Кодируемая строка.</param>
        <summary>Кодирует указанная строка для использования в атрибутах XML.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует все символы, за исключением тех, которые находятся в список безопасных элементов. Символы кодируются с помощью `&#DECIMAL;` нотации.  
  
> [!NOTE]
>  Заключать в двойные кавычки (» «) или одинарных кавычек ("") вокруг результирующая строка, перед добавлением на страницу.  
  
 В следующей таблице перечислены символы по умолчанию. Все символы находятся на Юникод [C0 элементов управления и Basic Latin](https://www.unicode.org/charts/PDF/U0000.pdf) диапазон, за исключением случаев, оговоренных в столбце описания символов.   
  
|Символы|Описание|  
|--------------------|-----------------|  
|A-Z|Прописные латинские буквы|  
|a – z|Строчные латинские буквы|  
|0-9|Номера|  
|(Пробел)|Пробел|  
|!|Восклицательный знак|  
|#|Знак числа, хэша|  
|$|Знак доллара|  
|%|Знак процента|  
|( )|Круглые скобки|  
|*|Звездочка|  
|+|Знак «плюс»|  
|,|Comma|  
|-|Дефис, минус|  
|.|Период|  
|/|Косая черта|  
|:|Двоеточие|  
|;|Точка с запятой|  
|=|Знак равенства|  
|?|Вопросительный знак|  
|@|Коммерческое использование в|  
|[ ]|Квадратные скобки|  
|&#92;|Обратная косая черта|  
|^|Курсор|  
|_|Символ подчеркивания|  
|\`|Апостроф|  
|{ }|Фигурные скобки, фигурные скобки|  
|&#124;|Вертикальная линия|  
|~|Тильда|  
|0x00A1 - 0x00AC|Специальные символы между от 0x00A1 (161 decimal) и 0x00AC (172 десятичное) из Юникода [C1 и дополнительная латиница-1](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон символов. Символы этого диапазона, кодируются при `useNamedEntities` является `true`.|  
|0x00AE - 0x00FF|Специальные символы между 0x00AE (174 decimal) и 0x00FF (255 десятичное) из Юникода [C1 и дополнительная латиница-1](https://www.unicode.org/charts/PDF/U0080.pdf) диапазон символов. Символы этого диапазона, кодируются при `useNamedEntities` является `true`.|  
|0x0100 - 0x017F|Символы между 0x0100 (256 десятичное) и 0x017F (383 десятичное). (Юникод [латиница-расширенного-A](https://www.unicode.org/charts/PDF/U0100.pdf) диапазон символов.)| 
|0x0180 - 0x024F|Символы между от 0x0180 (384 decimal) и 0x024F (591 десятичное). (Юникод [латиница-расширенного-B](https://www.unicode.org/charts/PDF/U0180.pdf) диапазон символов.)|
|0x0250 - 0x02AF|Символы между 0x0250 (592 decimal) и 0x02AF (687 десятичное). (Юникод [фонетические](https://www.unicode.org/charts/PDF/U0250.pdf) диапазон символов.)| 
|0x02B0 - 0x02FF|Символы между 0x02B0 (688 decimal) и 0x02FF (767 десятичное). (Юникод [модификаторов букв](https://www.unicode.org/charts/PDF/U02B0.pdf) диапазон символов.)|
|0x0300 - 0x036F|Символы между 0x0300 (768 decimal) и 0x036F (879 десятичное). (Юникод [объединенных диакритических знаков](https://www.unicode.org/charts/PDF/U0300.pdf) диапазон символов.)| 
  
 Ниже перечислены примеры входных данных и соответствующих им выходных данных кодировке.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Чтобы настроить список надежных, вызовите <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>