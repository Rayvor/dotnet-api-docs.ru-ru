<Type Name="Extensions" FullName="System.Xml.XPath.Extensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b902f2280091f94feb7f3ba03612b8fabe0997a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75174459" /></Metadata><TypeSignature Language="C#" Value="public static class Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XPath.Extensions" />
  <TypeSignature Language="VB.NET" Value="Public Module Extensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class Extensions abstract sealed" />
  <TypeSignature Language="F#" Value="type Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e9d91-101">Этот класс содержит методы расширения LINQ to XML, позволяющие вычислять выражения XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-101">This class contains the LINQ to XML extension methods that enable you to evaluate XPath expressions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9d91-102">Использование этих методов приводит к снижению производительности.</span><span class="sxs-lookup"><span data-stu-id="e9d91-102">There is some performance penalty for using these methods.</span></span> <span data-ttu-id="e9d91-103">Использование запросов [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] повышает производительность.</span><span class="sxs-lookup"><span data-stu-id="e9d91-103">Using [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] queries yields better performance.</span></span>  
  
 <span data-ttu-id="e9d91-104">Хотя порядок возвращаемых коллекций не указан в рекомендации по языку XML XPath 1,0, этот метод расширения возвращает узлы в порядке расположения документа.</span><span class="sxs-lookup"><span data-stu-id="e9d91-104">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e9d91-105">Обратите внимание, что узлы возвращаются в порядке расположения документа, даже если используется обратная ось, например `preceding-sibling` или `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e9d91-105">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateNavigator">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9d91-106">Создает <see cref="T:System.Xml.XPath.XPathNavigator" /> для <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="e9d91-106">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9d91-107">Нельзя изменить XML-дерево с помощью <xref:System.Xml.XPath.XPathNavigator>, возвращаемого этим методом.</span><span class="sxs-lookup"><span data-stu-id="e9d91-107">You cannot edit the XML tree by using the <xref:System.Xml.XPath.XPathNavigator> that is returned by this method.</span></span> <span data-ttu-id="e9d91-108">Свойство <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="e9d91-108">The <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="e9d91-109">Невозможно создать <xref:System.Xml.XPath.XPathNavigator> для <xref:System.Xml.Linq.XDocumentType> узла.</span><span class="sxs-lookup"><span data-stu-id="e9d91-109">You cannot create an <xref:System.Xml.XPath.XPathNavigator> for a <xref:System.Xml.Linq.XDocumentType> node.</span></span> <span data-ttu-id="e9d91-110">Типы документов не участвуют в модели данных XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-110">Document types do not participate in the XPath data model.</span></span>  
  
 <span data-ttu-id="e9d91-111">Объявления пространств имен выводятся слева направо.</span><span class="sxs-lookup"><span data-stu-id="e9d91-111">Namespace declarations are reported from left to right.</span></span> <span data-ttu-id="e9d91-112">Напротив, для <xref:System.Xml.XmlDocument> пространств имен справа налево.</span><span class="sxs-lookup"><span data-stu-id="e9d91-112">In contrast, for <xref:System.Xml.XmlDocument> namespaces are reported from right to left.</span></span> <span data-ttu-id="e9d91-113">Это поведение согласовано, поскольку объявления пространств имен не упорядочены в модели данных XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-113">This is conformant behavior because namespace declarations are not ordered in the XPath data model.</span></span>  
  
 <span data-ttu-id="e9d91-114">Метод <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> не поддерживается для навигаторов, возвращаемых этим методом.</span><span class="sxs-lookup"><span data-stu-id="e9d91-114">The method <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> is not supported for navigators that are returned by this method.</span></span>  
  
 <span data-ttu-id="e9d91-115">Этот метод можно использовать для выполнения преобразования XSLT.</span><span class="sxs-lookup"><span data-stu-id="e9d91-115">You can use this method to perform an XSLT transformation.</span></span> <span data-ttu-id="e9d91-116">Можно создать XML-дерево, создать <xref:System.Xml.XPath.XPathNavigator> из XML-дерева, создать новый документ и создать <xref:System.Xml.XmlWriter>, который будет записывать в новый документ.</span><span class="sxs-lookup"><span data-stu-id="e9d91-116">You can create an XML tree, create an <xref:System.Xml.XPath.XPathNavigator> from the XML tree, create a new document, and create a <xref:System.Xml.XmlWriter> that will write into the new document.</span></span> <span data-ttu-id="e9d91-117">После этого можно вызвать преобразование XSLT, передавая <xref:System.Xml.XPath.XPathNavigator> и <xref:System.Xml.XmlWriter> этой трансформации.</span><span class="sxs-lookup"><span data-stu-id="e9d91-117">Then, you can invoke the XSLT transformation, passing the <xref:System.Xml.XPath.XPathNavigator> and <xref:System.Xml.XmlWriter> to the transformation.</span></span> <span data-ttu-id="e9d91-118">После успешного завершения преобразования новое XML-дерево заполняется ее результатами.</span><span class="sxs-lookup"><span data-stu-id="e9d91-118">After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</span></span>  
  
 <span data-ttu-id="e9d91-119">Для выполнения преобразования XSLT можно использовать либо <xref:System.Xml.XmlReader>, либо <xref:System.Xml.XPath.XPathNavigator>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-119">To perform an XSLT transformation, you can use either an <xref:System.Xml.XmlReader> or an <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e9d91-120">Два подхода имеют различные характеристики производительности.</span><span class="sxs-lookup"><span data-stu-id="e9d91-120">The two approaches have different performance characteristics.</span></span> <span data-ttu-id="e9d91-121">Некоторые преобразования будут выполняться быстрее при использовании <xref:System.Xml.XmlReader>, а другие будут работать быстрее при использовании <xref:System.Xml.XPath.XPathNavigator>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-121">Some transformations will execute faster when using an <xref:System.Xml.XmlReader>, and others will execute faster when using a <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e9d91-122">Если важна производительность, рекомендуется поэкспериментировать с каждым из подходов, чтобы определить, какие из них будут работать лучше в ваших условиях.</span><span class="sxs-lookup"><span data-stu-id="e9d91-122">If performance is a concern, we recommend that you experiment with each approach to determine which will perform better in your circumstances.</span></span>  
  
```csharp  
  
            string xslMarkup = @"<?xml version='1.0'?>  
<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
    <xsl:template match='/Parent'>  
        <Root>  
            <C1><xsl:value-of select='Child1'/></C1>  
            <C2><xsl:value-of select='Child2'/></C2>  
        </Root>  
    </xsl:template>  
</xsl:stylesheet>";  
  
XDocument xmlTree = new XDocument(  
    new XElement("Parent",  
        new XElement("Child1", "Child1 data"),  
        new XElement("Child2", "Child2 data")  
    )  
);  
  
XDocument newTree = new XDocument();  
using (XmlWriter writer = newTree.CreateWriter()) {  
    // Load the style sheet.  
    XslCompiledTransform xslt = new XslCompiledTransform();  
    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  
  
    // Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer);  
}  
  
Console.WriteLine(newTree);  
```  
  
```vb  
  
            Dim xslMarkup As XDocument = <?xml version='1.0'?>  
                             <xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
                                 <xsl:template match='/Parent'>  
                                     <Root>  
                                         <C1><xsl:value-of select='Child1'/></C1>  
                                         <C2><xsl:value-of select='Child2'/></C2>  
                                     </Root>  
                                 </xsl:template>  
                             </xsl:stylesheet>  
  
Dim xmlTree As XDocument = <?xml version='1.0'?>  
                           <Parent>  
                               <Child1>Child1 data</Child1>  
                               <Child2>Child2 data</Child2>  
                           </Parent>  
  
Dim newTree As XDocument = New XDocument()  
  
Using writer As XmlWriter = newTree.CreateWriter()  
    ' Load the style sheet.  
    Dim xslt As XslCompiledTransform = _  
        New XslCompiledTransform()  
    xslt.Load(xslMarkup.CreateReader())  
  
    ' Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer)  
End Using  
  
Console.WriteLine(newTree)  
```  
  
 <span data-ttu-id="e9d91-123">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="e9d91-123">This example produces the following output:</span></span>  
  
```xml  
  
            <Root>  
  <C1>Child1 data</C1>  
  <C2>Child2 data</C2>  
</Root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.Linq.XNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateNavigator (node As XNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::Linq::XNode ^ node);" />
      <MemberSignature Language="F#" Value="static member CreateNavigator : System.Xml.Linq.XNode -&gt; System.Xml.XPath.XPathNavigator" Usage="System.Xml.XPath.Extensions.CreateNavigator node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e9d91-124">Объект <see cref="T:System.Xml.Linq.XNode" />, который может обрабатывать запросы XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-124">An <see cref="T:System.Xml.Linq.XNode" /> that can process XPath queries.</span></span></param>
        <summary><span data-ttu-id="e9d91-125">Создает <see cref="T:System.Xml.XPath.XPathNavigator" /> для <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="e9d91-125">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</span></span></summary>
        <returns><span data-ttu-id="e9d91-126">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, который может обрабатывать запросы XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-126">An <see cref="T:System.Xml.XPath.XPathNavigator" /> that can process XPath queries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9d91-127">Нельзя изменить XML-дерево с помощью <xref:System.Xml.XPath.XPathNavigator>, возвращаемого этим методом.</span><span class="sxs-lookup"><span data-stu-id="e9d91-127">You cannot edit the XML tree by using the <xref:System.Xml.XPath.XPathNavigator> that is returned by this method.</span></span> <span data-ttu-id="e9d91-128">Свойство <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="e9d91-128">The <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="e9d91-129">Невозможно создать <xref:System.Xml.XPath.XPathNavigator> для <xref:System.Xml.Linq.XDocumentType> узла.</span><span class="sxs-lookup"><span data-stu-id="e9d91-129">You cannot create an <xref:System.Xml.XPath.XPathNavigator> for a <xref:System.Xml.Linq.XDocumentType> node.</span></span> <span data-ttu-id="e9d91-130">Типы документов не участвуют в модели данных XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-130">Document types do not participate in the XPath data model.</span></span>  
  
 <span data-ttu-id="e9d91-131">Объявления пространств имен выводятся слева направо.</span><span class="sxs-lookup"><span data-stu-id="e9d91-131">Namespace declarations are reported from left to right.</span></span> <span data-ttu-id="e9d91-132">Напротив, для <xref:System.Xml.XmlDocument> пространств имен справа налево.</span><span class="sxs-lookup"><span data-stu-id="e9d91-132">In contrast, for <xref:System.Xml.XmlDocument> namespaces are reported from right to left.</span></span> <span data-ttu-id="e9d91-133">Это поведение согласовано, поскольку объявления пространств имен не упорядочены в модели данных XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-133">This is conformant behavior because namespace declarations are not ordered in the XPath data model.</span></span>  
  
 <span data-ttu-id="e9d91-134">Метод <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> не поддерживается для навигаторов, возвращаемых этим методом.</span><span class="sxs-lookup"><span data-stu-id="e9d91-134">The method <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> is not supported for navigators that are returned by this method.</span></span>  
  
 <span data-ttu-id="e9d91-135">Этот метод можно использовать для выполнения преобразования XSLT.</span><span class="sxs-lookup"><span data-stu-id="e9d91-135">You can use this method to perform an XSLT transformation.</span></span> <span data-ttu-id="e9d91-136">Можно создать XML-дерево, создать <xref:System.Xml.XPath.XPathNavigator> из XML-дерева, создать новый документ и создать <xref:System.Xml.XmlWriter>, который будет записывать в новый документ.</span><span class="sxs-lookup"><span data-stu-id="e9d91-136">You can create an XML tree, create an <xref:System.Xml.XPath.XPathNavigator> from the XML tree, create a new document, and create a <xref:System.Xml.XmlWriter> that will write into the new document.</span></span> <span data-ttu-id="e9d91-137">Затем можно вызвать преобразование XSLT, передав <xref:System.Xml.XPath.XPathNavigator> и <xref:System.Xml.XmlWriter> в преобразование.</span><span class="sxs-lookup"><span data-stu-id="e9d91-137">Then, you can invoke the XSLT transformation, passing the <xref:System.Xml.XPath.XPathNavigator> and <xref:System.Xml.XmlWriter> to the transform.</span></span> <span data-ttu-id="e9d91-138">После успешного завершения преобразования новое XML-дерево заполняется ее результатами.</span><span class="sxs-lookup"><span data-stu-id="e9d91-138">After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</span></span>  
  
 <span data-ttu-id="e9d91-139">Для выполнения преобразования XSLT можно использовать либо <xref:System.Xml.XmlReader>, либо <xref:System.Xml.XPath.XPathNavigator>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-139">To perform an XSLT transformation, you can use either an <xref:System.Xml.XmlReader> or an <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e9d91-140">Два подхода имеют различные характеристики производительности.</span><span class="sxs-lookup"><span data-stu-id="e9d91-140">The two approaches have different performance characteristics.</span></span> <span data-ttu-id="e9d91-141">Некоторые преобразования будут выполняться быстрее при использовании <xref:System.Xml.XmlReader>, а другие будут работать быстрее при использовании <xref:System.Xml.XPath.XPathNavigator>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-141">Some transformations will execute faster when using an <xref:System.Xml.XmlReader>, and others will execute faster when using a <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e9d91-142">Если важна производительность, рекомендуется поэкспериментировать с каждым из подходов, чтобы определить, какие из них будут работать лучше в ваших условиях.</span><span class="sxs-lookup"><span data-stu-id="e9d91-142">If performance is a concern, we recommend that you experiment with each approach to determine which will perform better in your circumstances.</span></span>  
  
   
  
## Examples  
  
```csharp  
  
                string xslMarkup = @"<?xml version='1.0'?>  
<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
    <xsl:template match='/Parent'>  
        <Root>  
            <C1><xsl:value-of select='Child1'/></C1>  
            <C2><xsl:value-of select='Child2'/></C2>  
        </Root>  
    </xsl:template>  
</xsl:stylesheet>";  
  
XDocument xmlTree = new XDocument(  
    new XElement("Parent",  
        new XElement("Child1", "Child1 data"),  
        new XElement("Child2", "Child2 data")  
    )  
);  
  
XDocument newTree = new XDocument();  
using (XmlWriter writer = newTree.CreateWriter()) {  
    // Load the style sheet.  
    XslCompiledTransform xslt = new XslCompiledTransform();  
    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  
  
    // Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer);  
}  
  
Console.WriteLine(newTree);  
```  
  
```vb  
  
                Dim xslMarkup As XDocument = _  
    <?xml version='1.0'?>  
    <xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
        <xsl:template match='/Parent'>  
            <Root>  
                <C1><xsl:value-of select='Child1'/></C1>  
                <C2><xsl:value-of select='Child2'/></C2>  
            </Root>  
        </xsl:template>  
    </xsl:stylesheet>  
  
Dim xmlTree As XDocument = _  
    <?xml version='1.0'?>  
    <Parent>  
        <Child1>Child1 data</Child1>  
        <Child2>Child2 data</Child2>  
    </Parent>  
  
Dim newTree As XDocument = New XDocument()  
  
Using writer As XmlWriter = newTree.CreateWriter()  
    ' Load the style sheet.  
    Dim xslt As XslCompiledTransform = _  
        New XslCompiledTransform()  
    xslt.Load(xslMarkup.CreateReader())  
  
    ' Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer)  
End Using  
  
Console.WriteLine(newTree)  
```  
  
 <span data-ttu-id="e9d91-143">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="e9d91-143">This example produces the following output:</span></span>  
  
```xml  
  
                <Root>  
  <C1>Child1 data</C1>  
  <C2>Child2 data</C2>  
</Root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node, System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.Linq.XNode node, class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateNavigator (node As XNode, nameTable As XmlNameTable) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::Linq::XNode ^ node, System::Xml::XmlNameTable ^ nameTable);" />
      <MemberSignature Language="F#" Value="static member CreateNavigator : System.Xml.Linq.XNode * System.Xml.XmlNameTable -&gt; System.Xml.XPath.XPathNavigator" Usage="System.Xml.XPath.Extensions.CreateNavigator (node, nameTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e9d91-144"><see cref="T:System.Xml.Linq.XNode" />, который может обработать запрос XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-144">An <see cref="T:System.Xml.Linq.XNode" /> that can process an XPath query.</span></span></param>
        <param name="nameTable"><span data-ttu-id="e9d91-145"><see cref="T:System.Xml.XmlNameTable" /> для использования <see cref="T:System.Xml.XPath.XPathNavigator" />.</span><span class="sxs-lookup"><span data-stu-id="e9d91-145">A <see cref="T:System.Xml.XmlNameTable" /> to be used by <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></param>
        <summary><span data-ttu-id="e9d91-146">Создает <see cref="T:System.Xml.XPath.XPathNavigator" /> для <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="e9d91-146">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</span></span> <span data-ttu-id="e9d91-147"><see cref="T:System.Xml.XmlNameTable" /> обеспечивает более эффективную обработку выражений XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-147">The <see cref="T:System.Xml.XmlNameTable" /> enables more efficient XPath expression processing.</span></span></summary>
        <returns><span data-ttu-id="e9d91-148">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, который может обрабатывать запросы XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-148">An <see cref="T:System.Xml.XPath.XPathNavigator" /> that can process XPath queries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9d91-149">Нельзя изменить XML-дерево с помощью <xref:System.Xml.XPath.XPathNavigator>, возвращаемого этим методом.</span><span class="sxs-lookup"><span data-stu-id="e9d91-149">You cannot edit the XML tree using the <xref:System.Xml.XPath.XPathNavigator> that is returned by this method.</span></span> <span data-ttu-id="e9d91-150">Свойство <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="e9d91-150">The <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="e9d91-151">Невозможно создать <xref:System.Xml.XPath.XPathNavigator> для <xref:System.Xml.Linq.XDocumentType> узла.</span><span class="sxs-lookup"><span data-stu-id="e9d91-151">You cannot create an <xref:System.Xml.XPath.XPathNavigator> for a <xref:System.Xml.Linq.XDocumentType> node.</span></span> <span data-ttu-id="e9d91-152">Типы документов не участвуют в модели данных XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-152">Document types do not participate in the XPath data model.</span></span>  
  
 <span data-ttu-id="e9d91-153">Объявления пространств имен выводятся слева направо.</span><span class="sxs-lookup"><span data-stu-id="e9d91-153">Namespace declarations are reported from left to right.</span></span> <span data-ttu-id="e9d91-154">Напротив, для <xref:System.Xml.XmlDocument> пространств имен справа налево.</span><span class="sxs-lookup"><span data-stu-id="e9d91-154">In contrast, for <xref:System.Xml.XmlDocument> namespaces are reported from right to left.</span></span> <span data-ttu-id="e9d91-155">Это поведение согласовано, поскольку объявления пространств имен не упорядочены в модели данных XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-155">This is conformant behavior because namespace declarations are not ordered in the XPath data model.</span></span>  
  
 <span data-ttu-id="e9d91-156">Метод <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> не поддерживается для навигаторов, возвращаемых этим методом.</span><span class="sxs-lookup"><span data-stu-id="e9d91-156">The method <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> is not supported for navigators that are returned by this method.</span></span>  
  
 <span data-ttu-id="e9d91-157">При использовании <xref:System.Xml.XmlNameTable> с этим методом для создания <xref:System.Xml.XPath.XPathNavigator>вы получите лучшую производительность при вычислении выражений XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-157">If you use an <xref:System.Xml.XmlNameTable> with this method to create the <xref:System.Xml.XPath.XPathNavigator>, you will get better performance when evaluating XPath expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="XPathEvaluate">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9d91-158">Вычисляет выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-158">Evaluates an XPath expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9d91-159">Хотя порядок возвращаемых коллекций не указан в рекомендации по языку XML XPath 1,0, этот метод расширения возвращает узлы в порядке расположения документа.</span><span class="sxs-lookup"><span data-stu-id="e9d91-159">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e9d91-160">Обратите внимание, что узлы возвращаются в порядке расположения документа, даже если используется обратная ось, например `preceding-sibling` или `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e9d91-160">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="XPathEvaluate">
      <MemberSignature Language="C#" Value="public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object XPathEvaluate(class System.Xml.Linq.XNode node, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathEvaluate (node As XNode, expression As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ XPathEvaluate(System::Xml::Linq::XNode ^ node, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member XPathEvaluate : System.Xml.Linq.XNode * string -&gt; obj" Usage="System.Xml.XPath.Extensions.XPathEvaluate (node, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e9d91-161"><see cref="T:System.Xml.Linq.XNode" />, в котором вычисляется выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-161">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e9d91-162"><see cref="T:System.String" />, содержащая выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-162">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <summary><span data-ttu-id="e9d91-163">Вычисляет выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-163">Evaluates an XPath expression.</span></span></summary>
        <returns><span data-ttu-id="e9d91-164">Объект, который может содержать <see langword="bool" />, <see langword="double" />, <see langword="string" /> или <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="e9d91-164">An object that can contain a <see langword="bool" />, a <see langword="double" />, a <see langword="string" />, or an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9d91-165">Если коллекция является перечислением элементов или атрибутов, можно использовать оператор `Cast` для получения коллекции <xref:System.Xml.Linq.XElement> или <xref:System.Xml.Linq.XAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-165">If the collection is an enumeration of elements or attributes, you can use the `Cast` operator to get a collection of <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute>.</span></span>  
  
 <span data-ttu-id="e9d91-166">Хотя порядок возвращаемых коллекций не указан в рекомендации по языку XML XPath 1,0, этот метод расширения возвращает узлы в порядке расположения документа.</span><span class="sxs-lookup"><span data-stu-id="e9d91-166">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e9d91-167">Обратите внимание, что узлы возвращаются в порядке расположения документа, даже если используется обратная ось, например `preceding-sibling` или `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e9d91-167">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9d91-168">В следующем примере создается небольшое XML-дерево с атрибутом, а затем используется метод <xref:System.Xml.XPath.Extensions.XPathEvaluate%2A> для получения атрибута.</span><span class="sxs-lookup"><span data-stu-id="e9d91-168">The following example creates a small XML tree with an attribute, then uses the <xref:System.Xml.XPath.Extensions.XPathEvaluate%2A> method to retrieve the attribute.</span></span>  
  
```csharp  
  
                String xml = "<root a='value'/>";  
XDocument d = XDocument.Parse(xml);  
IEnumerable att = (IEnumerable)d.XPathEvaluate("/root/@a");  
Console.WriteLine(att.Cast<XAttribute>().FirstOrDefault());  
```  
  
```vb  
  
                Dim d As XDocument = _  
    <?xml version='1.0'?>  
    <root a='value'/>  
Dim att As IEnumerable = CType(d.XPathEvaluate("/root/@a"), IEnumerable)  
Console.WriteLine(att.Cast(Of XAttribute)().FirstOrDefault())  
```  
  
 <span data-ttu-id="e9d91-169">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="e9d91-169">This example produces the following output:</span></span>  
  
```  
a="value"  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPathEvaluate">
      <MemberSignature Language="C#" Value="public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object XPathEvaluate(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathEvaluate (node As XNode, expression As String, resolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ XPathEvaluate(System::Xml::Linq::XNode ^ node, System::String ^ expression, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member XPathEvaluate : System.Xml.Linq.XNode * string * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="System.Xml.XPath.Extensions.XPathEvaluate (node, expression, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e9d91-170"><see cref="T:System.Xml.Linq.XNode" />, в котором вычисляется выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-170">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e9d91-171"><see cref="T:System.String" />, содержащая выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-171">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <param name="resolver"><span data-ttu-id="e9d91-172"><see cref="T:System.Xml.IXmlNamespaceResolver" /> для префиксов пространств имен в выражении XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-172">A <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="e9d91-173">Вычисляет выражение XPath, разрешая префиксы пространств имен с помощью указанного <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span><span class="sxs-lookup"><span data-stu-id="e9d91-173">Evaluates an XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span></span></summary>
        <returns><span data-ttu-id="e9d91-174">Объект, содержащий результат вычисления выражения.</span><span class="sxs-lookup"><span data-stu-id="e9d91-174">An object that contains the result of evaluating the expression.</span></span> <span data-ttu-id="e9d91-175">Объект может иметь тип <see langword="bool" />, <see langword="double" />, <see langword="string" /> или <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="e9d91-175">The object can be a <see langword="bool" />, a <see langword="double" />, a <see langword="string" />, or an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9d91-176">Этот метод можно использовать для вычисления выражений XPath, содержащих префиксы пространства имен.</span><span class="sxs-lookup"><span data-stu-id="e9d91-176">You can use this method to evaluate XPath expressions that contain namespace prefixes.</span></span>  
  
 <span data-ttu-id="e9d91-177">Хотя порядок возвращаемых коллекций не указан в рекомендации по языку XML XPath 1,0, этот метод расширения возвращает узлы в порядке расположения документа.</span><span class="sxs-lookup"><span data-stu-id="e9d91-177">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e9d91-178">Обратите внимание, что узлы возвращаются в порядке расположения документа, даже если используется обратная ось, например `preceding-sibling` или `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e9d91-178">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9d91-179">В следующем примере создается XML-дерево, содержащее пространство имен.</span><span class="sxs-lookup"><span data-stu-id="e9d91-179">The following example creates an XML tree that contains a namespace.</span></span> <span data-ttu-id="e9d91-180">Для считывания XML-документа используется <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-180">It uses an <xref:System.Xml.XmlReader> to read the XML document.</span></span> <span data-ttu-id="e9d91-181">Затем в примере происходит получение <xref:System.Xml.XmlNameTable> из <xref:System.Xml.XmlReader> и <xref:System.Xml.XmlNamespaceManager> из <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-181">It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="e9d91-182">При выборе элемента используется <xref:System.Xml.XmlNamespaceManager>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-182">It uses the <xref:System.Xml.XmlNamespaceManager> when selecting an element.</span></span>  
  
```csharp  
  
                string markup =  
@"<aw:Root xmlns:aw='http://www.adventure-works.com'>  
    <aw:Child1 aw:Att='attdata'>child one data 1</aw:Child1>  
</aw:Root>";  
XmlReader reader = XmlReader.Create(new StringReader(markup));  
XElement root = XElement.Load(reader);  
XmlNameTable nameTable = reader.NameTable;  
XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com");  
IEnumerable atts = (IEnumerable)root.XPathEvaluate("./aw:Child1/@aw:Att", namespaceManager);  
IEnumerable<XAttribute> attList = atts.Cast<XAttribute>();  
XAttribute att = attList.First();  
Console.WriteLine(att);  
```  
  
```vb  
  
                Dim markup As XElement = _  
    <aw:Root xmlns:aw='http://www.adventure-works.com'>  
        <aw:Child1 aw:Att='attdata'>child one data 1</aw:Child1>  
    </aw:Root>  
Dim reader As XmlReader = markup.CreateReader  
Dim nameTable As XmlNameTable = reader.NameTable  
Dim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com")  
Dim atts As IEnumerable = CType(markup.XPathEvaluate("./aw:Child1/@aw:Att", namespaceManager), IEnumerable)  
Dim attList As IEnumerable(Of XAttribute) = atts.Cast(Of XAttribute)()  
Dim att As XAttribute = attList.First()  
Console.WriteLine(att)  
```  
  
 <span data-ttu-id="e9d91-183">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="e9d91-183">This example produces the following output:</span></span>  
  
```  
aw:Att="attdata"  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="XPathSelectElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9d91-184">Выбирает <see cref="T:System.Xml.Linq.XElement" /> с помощью выражения XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-184">Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="XPathSelectElement">
      <MemberSignature Language="C#" Value="public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Linq.XElement XPathSelectElement(class System.Xml.Linq.XNode node, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElement (node As XNode, expression As String) As XElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::Linq::XElement ^ XPathSelectElement(System::Xml::Linq::XNode ^ node, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElement : System.Xml.Linq.XNode * string -&gt; System.Xml.Linq.XElement" Usage="System.Xml.XPath.Extensions.XPathSelectElement (node, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e9d91-185"><see cref="T:System.Xml.Linq.XNode" />, в котором вычисляется выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-185">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e9d91-186"><see cref="T:System.String" />, содержащая выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-186">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <summary><span data-ttu-id="e9d91-187">Выбирает <see cref="T:System.Xml.Linq.XElement" /> с помощью выражения XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-187">Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression.</span></span></summary>
        <returns><span data-ttu-id="e9d91-188"><see cref="T:System.Xml.Linq.XElement" /> или null.</span><span class="sxs-lookup"><span data-stu-id="e9d91-188">An <see cref="T:System.Xml.Linq.XElement" />, or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9d91-189">В следующем примере создается небольшое XML-дерево и используется <xref:System.Xml.XPath.Extensions.XPathSelectElement%2A> для выбора одного элемента.</span><span class="sxs-lookup"><span data-stu-id="e9d91-189">The following example creates a small XML tree and uses <xref:System.Xml.XPath.Extensions.XPathSelectElement%2A> to select a single element.</span></span>  
  
```csharp  
  
                XElement root = new XElement("Root",  
    new XElement("Child1", 1),  
    new XElement("Child2", 2),  
    new XElement("Child3", 3),  
    new XElement("Child4", 4),  
    new XElement("Child5", 5),  
    new XElement("Child6", 6)  
);  
XElement el = root.XPathSelectElement("./Child4");  
Console.WriteLine(el);  
```  
  
```vb  
  
                Dim root As XElement = _  
    <Root>  
        <Child1>1</Child1>  
        <Child2>2</Child2>  
        <Child3>3</Child3>  
        <Child4>4</Child4>  
        <Child5>5</Child5>  
        <Child6>6</Child6>  
    </Root>  
Dim el As XElement = root.XPathSelectElement("./Child4")  
Console.WriteLine(el)  
```  
  
 <span data-ttu-id="e9d91-190">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="e9d91-190">This example produces the following output:</span></span>  
  
```xml  
<Child4>4</Child4>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPathSelectElement">
      <MemberSignature Language="C#" Value="public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Linq.XElement XPathSelectElement(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElement (node As XNode, expression As String, resolver As IXmlNamespaceResolver) As XElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::Linq::XElement ^ XPathSelectElement(System::Xml::Linq::XNode ^ node, System::String ^ expression, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElement : System.Xml.Linq.XNode * string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.Linq.XElement" Usage="System.Xml.XPath.Extensions.XPathSelectElement (node, expression, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e9d91-191"><see cref="T:System.Xml.Linq.XNode" />, в котором вычисляется выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-191">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e9d91-192"><see cref="T:System.String" />, содержащая выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-192">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <param name="resolver"><span data-ttu-id="e9d91-193"><see cref="T:System.Xml.IXmlNamespaceResolver" /> для префиксов пространств имен в выражении XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-193">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="e9d91-194">Выбирает <see cref="T:System.Xml.Linq.XElement" /> с помощью выражения XPath, разрешая префиксы пространства имен с помощью указанного <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span><span class="sxs-lookup"><span data-stu-id="e9d91-194">Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span></span></summary>
        <returns><span data-ttu-id="e9d91-195"><see cref="T:System.Xml.Linq.XElement" /> или null.</span><span class="sxs-lookup"><span data-stu-id="e9d91-195">An <see cref="T:System.Xml.Linq.XElement" />, or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9d91-196">Этот метод можно использовать для вычисления выражений XPath, содержащих префиксы пространства имен.</span><span class="sxs-lookup"><span data-stu-id="e9d91-196">You can use this method to evaluate XPath expressions that contain namespace prefixes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9d91-197">В следующем примере создается XML-дерево, содержащее пространство имен.</span><span class="sxs-lookup"><span data-stu-id="e9d91-197">The following example creates an XML tree that contains a namespace.</span></span> <span data-ttu-id="e9d91-198">Для считывания XML-документа используется <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-198">It uses an <xref:System.Xml.XmlReader> to read the XML document.</span></span> <span data-ttu-id="e9d91-199">Затем в примере происходит получение <xref:System.Xml.XmlNameTable> из <xref:System.Xml.XmlReader> и <xref:System.Xml.XmlNamespaceManager> из <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-199">It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="e9d91-200">При выборе элемента используется <xref:System.Xml.XmlNamespaceManager>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-200">It uses the <xref:System.Xml.XmlNamespaceManager> when selecting an element.</span></span>  
  
```csharp  
  
                string markup = @"  
<aw:Root xmlns:aw='http://www.adventure-works.com'>  
    <aw:Child1>child one data</aw:Child1>  
    <aw:Child2>child two data</aw:Child2>  
</aw:Root>";  
XmlReader reader = XmlReader.Create(new StringReader(markup));  
XElement root = XElement.Load(reader);  
XmlNameTable nameTable = reader.NameTable;  
XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com");  
XElement child1 = root.XPathSelectElement("./aw:Child1", namespaceManager);  
Console.WriteLine(child1);  
```  
  
```vb  
  
                Dim markup As XElement = _  
    <aw:Root xmlns:aw='http://www.adventure-works.com'>  
        <aw:Child1>child one data</aw:Child1>  
        <aw:Child2>child two data</aw:Child2>  
    </aw:Root>  
Dim reader As XmlReader = markup.CreateReader  
Dim nameTable As XmlNameTable = reader.NameTable  
Dim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com")  
Dim child1 As XElement = markup.XPathSelectElement("./aw:Child1", namespaceManager)  
Console.WriteLine(child1)  
```  
  
 <span data-ttu-id="e9d91-201">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="e9d91-201">This example produces the following output:</span></span>  
  
```  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data</aw:Child1>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="XPathSelectElements">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9d91-202">Выбирает коллекцию элементов с помощью выражения XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-202">Selects a collection of elements using an XPath expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9d91-203">Хотя порядок возвращаемых коллекций не указан в рекомендации по языку XML XPath 1,0, этот метод расширения возвращает узлы в порядке расположения документа.</span><span class="sxs-lookup"><span data-stu-id="e9d91-203">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e9d91-204">Обратите внимание, что узлы возвращаются в порядке расположения документа, даже если используется обратная ось, например `preceding-sibling` или `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e9d91-204">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="XPathSelectElements">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; XPathSelectElements (this System.Xml.Linq.XNode node, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; XPathSelectElements(class System.Xml.Linq.XNode node, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElements (node As XNode, expression As String) As IEnumerable(Of XElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XElement ^&gt; ^ XPathSelectElements(System::Xml::Linq::XNode ^ node, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElements : System.Xml.Linq.XNode * string -&gt; seq&lt;System.Xml.Linq.XElement&gt;" Usage="System.Xml.XPath.Extensions.XPathSelectElements (node, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e9d91-205"><see cref="T:System.Xml.Linq.XNode" />, в котором вычисляется выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-205">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e9d91-206"><see cref="T:System.String" />, содержащая выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-206">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <summary><span data-ttu-id="e9d91-207">Выбирает коллекцию элементов с помощью выражения XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-207">Selects a collection of elements using an XPath expression.</span></span></summary>
        <returns><span data-ttu-id="e9d91-208"><see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащего выбранные элементы.</span><span class="sxs-lookup"><span data-stu-id="e9d91-208">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the selected elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9d91-209">Хотя порядок возвращаемых коллекций не указан в рекомендации по языку XML XPath 1,0, этот метод расширения возвращает узлы в порядке расположения документа.</span><span class="sxs-lookup"><span data-stu-id="e9d91-209">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e9d91-210">Обратите внимание, что узлы возвращаются в порядке расположения документа, даже если используется обратная ось, например `preceding-sibling` или `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e9d91-210">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9d91-211">В следующем примере создается небольшое XML-дерево и для получения набора элементов используется запрос <xref:System.Xml.XPath.Extensions.XPathSelectElements%2A>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-211">The following example creates a small XML tree and uses <xref:System.Xml.XPath.Extensions.XPathSelectElements%2A> to select a set of elements.</span></span>  
  
```csharp  
  
                XElement root = new XElement("Root",  
    new XElement("Child1", 1),  
    new XElement("Child1", 2),  
    new XElement("Child1", 3),  
    new XElement("Child2", 4),  
    new XElement("Child2", 5),  
    new XElement("Child2", 6)  
);  
IEnumerable<XElement> list = root.XPathSelectElements("./Child2");  
foreach (XElement el in list)  
    Console.WriteLine(el);  
```  
  
```vb  
  
                Dim root As XElement = _  
    <Root>  
        <Child1>1</Child1>  
        <Child1>2</Child1>  
        <Child1>3</Child1>  
        <Child2>4</Child2>  
        <Child2>5</Child2>  
        <Child2>6</Child2>  
    </Root>  
Dim list As IEnumerable(Of XElement) = root.XPathSelectElements("./Child2")  
For Each el As XElement In list  
    Console.WriteLine(el)  
Next  
```  
  
 <span data-ttu-id="e9d91-212">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="e9d91-212">This example produces the following output:</span></span>  
  
```xml  
<Child2>4</Child2>  
<Child2>5</Child2>  
<Child2>6</Child2>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPathSelectElements">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; XPathSelectElements (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; XPathSelectElements(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElements (node As XNode, expression As String, resolver As IXmlNamespaceResolver) As IEnumerable(Of XElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XElement ^&gt; ^ XPathSelectElements(System::Xml::Linq::XNode ^ node, System::String ^ expression, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElements : System.Xml.Linq.XNode * string * System.Xml.IXmlNamespaceResolver -&gt; seq&lt;System.Xml.Linq.XElement&gt;" Usage="System.Xml.XPath.Extensions.XPathSelectElements (node, expression, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e9d91-213"><see cref="T:System.Xml.Linq.XNode" />, в котором вычисляется выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-213">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e9d91-214"><see cref="T:System.String" />, содержащая выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-214">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <param name="resolver"><span data-ttu-id="e9d91-215"><see cref="T:System.Xml.IXmlNamespaceResolver" /> для префиксов пространств имен в выражении XPath.</span><span class="sxs-lookup"><span data-stu-id="e9d91-215">A <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="e9d91-216">Выбирает коллекцию элементов с помощью выражения XPath, разрешая префиксы пространства имен с помощью указанного <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span><span class="sxs-lookup"><span data-stu-id="e9d91-216">Selects a collection of elements using an XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span></span></summary>
        <returns><span data-ttu-id="e9d91-217"><see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащего выбранные элементы.</span><span class="sxs-lookup"><span data-stu-id="e9d91-217">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the selected elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9d91-218">Этот метод можно использовать для вычисления выражений XPath, содержащих префиксы пространства имен.</span><span class="sxs-lookup"><span data-stu-id="e9d91-218">You can use this method to evaluate XPath expressions that contain namespace prefixes.</span></span>  
  
 <span data-ttu-id="e9d91-219">Хотя порядок возвращаемых коллекций не указан в рекомендации по языку XML XPath 1,0, этот метод расширения возвращает узлы в порядке расположения документа.</span><span class="sxs-lookup"><span data-stu-id="e9d91-219">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e9d91-220">Обратите внимание, что узлы возвращаются в порядке расположения документа, даже если используется обратная ось, например `preceding-sibling` или `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e9d91-220">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9d91-221">В этом примере создается XML-дерево, содержащее пространство имен.</span><span class="sxs-lookup"><span data-stu-id="e9d91-221">This example creates an XML tree that contains a namespace.</span></span> <span data-ttu-id="e9d91-222">Для считывания XML-документа используется <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-222">It uses an <xref:System.Xml.XmlReader> to read the XML document.</span></span> <span data-ttu-id="e9d91-223">Затем в примере происходит получение <xref:System.Xml.XmlNameTable> из <xref:System.Xml.XmlReader> и <xref:System.Xml.XmlNamespaceManager> из <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="e9d91-223">It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="e9d91-224">Он использует <xref:System.Xml.XmlNamespaceManager> при выборе списка элементов.</span><span class="sxs-lookup"><span data-stu-id="e9d91-224">It uses the <xref:System.Xml.XmlNamespaceManager> when selecting the list of elements.</span></span>  
  
```csharp  
  
                string markup = @"  
<aw:Root xmlns:aw='http://www.adventure-works.com'>  
    <aw:Child1>child one data 1</aw:Child1>  
    <aw:Child1>child one data 2</aw:Child1>  
    <aw:Child1>child one data 3</aw:Child1>  
    <aw:Child2>child two data 4</aw:Child2>  
    <aw:Child2>child two data 5</aw:Child2>  
    <aw:Child2>child two data 6</aw:Child2>  
</aw:Root>";  
XmlReader reader = XmlReader.Create(new StringReader(markup));  
XElement root = XElement.Load(reader);  
XmlNameTable nameTable = reader.NameTable;  
XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com");  
IEnumerable<XElement> elements = root.XPathSelectElements("./aw:Child1", namespaceManager);  
foreach (XElement el in elements)  
    Console.WriteLine(el);  
```  
  
```vb  
  
                Dim markup As XElement = _  
<aw:Root xmlns:aw="http://www.adventure-works.com">  
    <aw:Child1>child one data 1</aw:Child1>  
    <aw:Child1>child one data 2</aw:Child1>  
    <aw:Child1>child one data 3</aw:Child1>  
    <aw:Child2>child two data 4</aw:Child2>  
    <aw:Child2>child two data 5</aw:Child2>  
    <aw:Child2>child two data 6</aw:Child2>  
</aw:Root>  
Dim reader As XmlReader = markup.CreateReader  
Dim nameTable As XmlNameTable = reader.NameTable  
Dim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com")  
Dim elements As IEnumerable(Of XElement) = markup.XPathSelectElements("./aw:Child1", namespaceManager)  
For Each el As XElement In elements  
    Console.WriteLine(el)  
Next  
```  
  
 <span data-ttu-id="e9d91-225">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="e9d91-225">This example produces the following output:</span></span>  
  
```xml  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data 1</aw:Child1>  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data 2</aw:Child1>  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data 3</aw:Child1>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
