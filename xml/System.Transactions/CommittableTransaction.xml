<Type Name="CommittableTransaction" FullName="System.Transactions.CommittableTransaction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f6c14ff8706f930039894d4229f12e5a7fcfcfe" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73380649" /></Metadata><TypeSignature Language="C#" Value="public sealed class CommittableTransaction : System.Transactions.Transaction, IAsyncResult, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CommittableTransaction extends System.Transactions.Transaction implements class System.IAsyncResult, class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.CommittableTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommittableTransaction&#xA;Inherits Transaction&#xA;Implements IAsyncResult, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommittableTransaction sealed : System::Transactions::Transaction, IAsyncResult, IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type CommittableTransaction = class&#xA;    inherit Transaction&#xA;    interface ISerializable&#xA;    interface IDisposable&#xA;    interface IAsyncResult" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Transactions.Transaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b4307-101">Описывает фиксируемую транзакцию.</span><span class="sxs-lookup"><span data-stu-id="b4307-101">Describes a committable transaction.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4307-102">Класс `CommittableTransaction` позволяет приложениям использовать транзакцию явным образом вместо неявного использования с помощью класса <xref:System.Transactions.TransactionScope>.</span><span class="sxs-lookup"><span data-stu-id="b4307-102">The `CommittableTransaction` class provides an explicit way for applications to use a transaction, as opposed to using the <xref:System.Transactions.TransactionScope> class implicitly.</span></span> <span data-ttu-id="b4307-103">В отличие от класса <xref:System.Transactions.TransactionScope> для фиксации или прерывания транзакции модуль записи приложения должен специально вызывать методы <xref:System.Transactions.CommittableTransaction.Commit%2A> и <xref:System.Transactions.Transaction.Rollback%2A>.</span><span class="sxs-lookup"><span data-stu-id="b4307-103">Unlike the <xref:System.Transactions.TransactionScope> class, the application writer needs to specifically call the <xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.Transaction.Rollback%2A> methods in order to commit or abort the transaction.</span></span> <span data-ttu-id="b4307-104">Однако транзакция может быть зафиксирована только создателем транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-104">However, only the creator of a transaction can commit the transaction.</span></span> <span data-ttu-id="b4307-105">Поэтому копии фиксируемой транзакции, полученной с помощью метода <xref:System.Transactions.Transaction.Clone%2A?displayProperty=nameWithType>, не фиксируются.</span><span class="sxs-lookup"><span data-stu-id="b4307-105">Therefore, copies of a committable transaction obtained through the <xref:System.Transactions.Transaction.Clone%2A?displayProperty=nameWithType> method are not committable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4307-106">Рекомендуется создавать неявные транзакции с помощью класса <xref:System.Transactions.TransactionScope>, чтобы контекст внешней транзакции был автоматически управляемым.</span><span class="sxs-lookup"><span data-stu-id="b4307-106">We recommend that you create implicit transactions using the <xref:System.Transactions.TransactionScope> class, so that the ambient transaction context is automatically managed for you.</span></span> <span data-ttu-id="b4307-107">Также следует использовать классы <xref:System.Transactions.TransactionScope> и <xref:System.Transactions.DependentTransaction> для приложений, которым требуется использовать одну и ту же транзакцию для нескольких вызовов функций или нескольких вызовов потоков.</span><span class="sxs-lookup"><span data-stu-id="b4307-107">You should also use the <xref:System.Transactions.TransactionScope> and <xref:System.Transactions.DependentTransaction> classes for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</span></span> <span data-ttu-id="b4307-108">Дополнительные сведения об этой модели см. в разделе [Реализация неявной транзакции с использованием области транзакции](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) .</span><span class="sxs-lookup"><span data-stu-id="b4307-108">For more information on this model, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
 <span data-ttu-id="b4307-109">При создании <xref:System.Transactions.CommittableTransaction> внешняя транзакция не задается автоматически, то есть транзакции, в которой выполняется код.</span><span class="sxs-lookup"><span data-stu-id="b4307-109">Creating a <xref:System.Transactions.CommittableTransaction> does not automatically set the ambient transaction, which is the transaction your code executes in.</span></span> <span data-ttu-id="b4307-110">Можно получить или задать внешнюю транзакцию, вызвав статическое свойство <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> объекта глобального <xref:System.Transactions.Transaction>.</span><span class="sxs-lookup"><span data-stu-id="b4307-110">You can get or set the ambient transaction by calling the static <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> property of the global <xref:System.Transactions.Transaction> object.</span></span> <span data-ttu-id="b4307-111">Дополнительные сведения о внешних транзакциях см. в подразделе «Управление потоком транзакций с помощью Трансактионскопеоптион» статьи [Реализация неявной транзакции с использованием области действия транзакции](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) .</span><span class="sxs-lookup"><span data-stu-id="b4307-111">For more information on ambient transactions, see the " Managing Transaction Flow using TransactionScopeOption" section of the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span> <span data-ttu-id="b4307-112">Если внешняя транзакция не задана, любая операция с диспетчером ресурсов не является частью этой транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-112">If the ambient transaction is not set, any operation on a resource manager is not part of that transaction.</span></span> <span data-ttu-id="b4307-113">Необходимо явно задать и сбросить внешнюю транзакцию, чтобы диспетчеры ресурсов работали в правильном контексте транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-113">You need to explicitly set and reset the ambient transaction to ensure that resource managers operate under the right transaction context.</span></span>  
  
 <span data-ttu-id="b4307-114">Пока <xref:System.Transactions.CommittableTransaction> не зафиксирована, все ресурсы, вовлеченные в транзакцию, остаются заблокированными.</span><span class="sxs-lookup"><span data-stu-id="b4307-114">Until a <xref:System.Transactions.CommittableTransaction> has been committed, all the resources involved with the transaction are still locked.</span></span>  
  
 <span data-ttu-id="b4307-115">Объект <xref:System.Transactions.CommittableTransaction> нельзя использовать повторно.</span><span class="sxs-lookup"><span data-stu-id="b4307-115">A <xref:System.Transactions.CommittableTransaction> object cannot be reused.</span></span> <span data-ttu-id="b4307-116">После фиксации или отката его нельзя повторно использовать в транзакции или задать в качестве текущего контекста внешней транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-116">Once it has been committed or rolled back, it cannot be used again in a transaction or set as the current ambient transaction context.</span></span>  

 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b4307-117">Данный тип потокобезопасен.</span><span class="sxs-lookup"><span data-stu-id="b4307-117">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="b4307-118">Реализация неявной транзакции с использованием области транзакций</span><span class="sxs-lookup"><span data-stu-id="b4307-118">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/f6c648f8-d638-4228-bfa4-0d65dd262968"><span data-ttu-id="b4307-119">Реализация явной транзакции с помощью CommittableTransaction</span><span class="sxs-lookup"><span data-stu-id="b4307-119">Implementing An Explicit Transaction Using CommittableTransaction</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4307-120">Инициализирует новый экземпляр класса <see cref="T:System.Transactions.CommittableTransaction" />.</span><span class="sxs-lookup"><span data-stu-id="b4307-120">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4307-121">Инициализирует новый экземпляр класса <see cref="T:System.Transactions.CommittableTransaction" />.</span><span class="sxs-lookup"><span data-stu-id="b4307-121">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b4307-122">В следующем примере создается новый экземпляр <xref:System.Transactions.CommittableTransaction> и фиксируется его.</span><span class="sxs-lookup"><span data-stu-id="b4307-122">The following sample creates a new instance of <xref:System.Transactions.CommittableTransaction> and commits it.</span></span>  
  
 [!code-csharp[Tx_CommittableTx#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_committabletx/cs/committabletxwithsql.cs#1)]
 [!code-vb[Tx_CommittableTx#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_committabletx/vb/committabletxwithsql.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b4307-123">Попытка создать транзакцию в системе Windows 98, Windows 98 Second Edition или Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="b4307-123">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="new System.Transactions.CommittableTransaction : TimeSpan -&gt; System.Transactions.CommittableTransaction" Usage="new System.Transactions.CommittableTransaction timeout" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b4307-124">Максимальное время, в течение которого может существовать транзакция до ее прерывания.</span><span class="sxs-lookup"><span data-stu-id="b4307-124">The maximum amount of time the transaction can exist, before it is aborted.</span></span></param>
        <summary><span data-ttu-id="b4307-125">Инициализирует новый экземпляр класса <see cref="T:System.Transactions.CommittableTransaction" /> заданным значением <paramref name="timeout" />.</span><span class="sxs-lookup"><span data-stu-id="b4307-125">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class with the specified <paramref name="timeout" /> value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b4307-126">Попытка создать транзакцию в системе Windows 98, Windows 98 Second Edition или Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="b4307-126">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction (System.Transactions.TransactionOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor(System.Transactions.TransactionOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As TransactionOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction(System::Transactions::TransactionOptions options);" />
      <MemberSignature Language="F#" Value="new System.Transactions.CommittableTransaction : System.Transactions.TransactionOptions -&gt; System.Transactions.CommittableTransaction" Usage="new System.Transactions.CommittableTransaction options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Transactions.TransactionOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="b4307-127">Структура <see cref="T:System.Transactions.TransactionOptions" /> с описанием параметров, которые должны использоваться для новой транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-127">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use for the new transaction.</span></span></param>
        <summary><span data-ttu-id="b4307-128">Инициализирует новый экземпляр класса <see cref="T:System.Transactions.CommittableTransaction" /> с заданными параметрами транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-128">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class with the specified transaction options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b4307-129">Следующий пример создает новый экземпляр <xref:System.Transactions.CommittableTransaction> с параметрами и прерывает его.</span><span class="sxs-lookup"><span data-stu-id="b4307-129">The following sample creates a new instance of <xref:System.Transactions.CommittableTransaction> with options, and aborts it.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b4307-130">Попытка создать транзакцию в системе Windows 98, Windows 98 Second Edition или Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="b4307-130">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b4307-131"><paramref name="options" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="b4307-131"><paramref name="options" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginCommit">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCommit (AsyncCallback asyncCallback, object asyncState);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCommit(class System.AsyncCallback asyncCallback, object asyncState) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCommit(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="member this.BeginCommit : AsyncCallback * obj -&gt; IAsyncResult" Usage="committableTransaction.BeginCommit (asyncCallback, asyncState)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCommit (AsyncCallback callback, object user_defined_state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCommit(class System.AsyncCallback callback, object user_defined_state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCommit (callback As AsyncCallback, user_defined_state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCommit(AsyncCallback ^ callback, System::Object ^ user_defined_state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginCommit : AsyncCallback * obj -&gt; IAsyncResult" Usage="committableTransaction.BeginCommit (callback, user_defined_state)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="user_defined_state" Type="System.Object" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="b4307-132">Делегат <see cref="T:System.AsyncCallback" />, который вызывается при завершении транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-132">The <see cref="T:System.AsyncCallback" /> delegate that is invoked when the transaction completes.</span></span> <span data-ttu-id="b4307-133">Этот параметр может иметь значение <see langword="null" />. В этом случае приложение не уведомляется о завершении транзакции</span><span class="sxs-lookup"><span data-stu-id="b4307-133">This parameter can be <see langword="null" />, in which case the application is not notified of the transaction's completion.</span></span> <span data-ttu-id="b4307-134">и должно использовать интерфейс <see cref="T:System.IAsyncResult" /> для проверки завершения и, соответственно, ждать или вызвать метод <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> для ожидания завершения.</span><span class="sxs-lookup"><span data-stu-id="b4307-134">Instead, the application must use the <see cref="T:System.IAsyncResult" /> interface to check for completion and wait accordingly, or call <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> to wait for completion.</span></span></param>
        <param name="callback"><span data-ttu-id="b4307-135">Делегат <see cref="T:System.AsyncCallback" />, который вызывается при завершении транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-135">The <see cref="T:System.AsyncCallback" /> delegate that is invoked when the transaction completes.</span></span> <span data-ttu-id="b4307-136">Этот параметр может иметь значение <see langword="null" />. В этом случае приложение не уведомляется о завершении транзакции</span><span class="sxs-lookup"><span data-stu-id="b4307-136">This parameter can be <see langword="null" />, in which case the application is not notified of the transaction's completion.</span></span> <span data-ttu-id="b4307-137">и должно использовать интерфейс <see cref="T:System.IAsyncResult" /> для проверки завершения и, соответственно, ждать или вызвать метод <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> для ожидания завершения.</span><span class="sxs-lookup"><span data-stu-id="b4307-137">Instead, the application must use the <see cref="T:System.IAsyncResult" /> interface to check for completion and wait accordingly, or call <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> to wait for completion.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b4307-138">Объект, который может содержать произвольную информацию о состоянии, связанную с асинхронной фиксацией.</span><span class="sxs-lookup"><span data-stu-id="b4307-138">An object, which might contain arbitrary state information, associated with the asynchronous commitment.</span></span> <span data-ttu-id="b4307-139">Этот объект передается обратному вызову и не интерпретируется инфраструктурой <see cref="N:System.Transactions" />.</span><span class="sxs-lookup"><span data-stu-id="b4307-139">This object is passed to the callback, and is not interpreted by <see cref="N:System.Transactions" />.</span></span> <span data-ttu-id="b4307-140">Допускается пустая ссылка.</span><span class="sxs-lookup"><span data-stu-id="b4307-140">A null reference is permitted.</span></span></param>
        <param name="user_defined_state"><span data-ttu-id="b4307-141">Объект, который может содержать произвольную информацию о состоянии, связанную с асинхронной фиксацией.</span><span class="sxs-lookup"><span data-stu-id="b4307-141">An object, which might contain arbitrary state information, associated with the asynchronous commitment.</span></span> <span data-ttu-id="b4307-142">Этот объект передается обратному вызову и не интерпретируется инфраструктурой <see cref="N:System.Transactions" />.</span><span class="sxs-lookup"><span data-stu-id="b4307-142">This object is passed to the callback, and is not interpreted by <see cref="N:System.Transactions" />.</span></span> <span data-ttu-id="b4307-143">Допускается пустая ссылка.</span><span class="sxs-lookup"><span data-stu-id="b4307-143">A null reference is permitted.</span></span></param>
        <summary><span data-ttu-id="b4307-144">Начинает попытку зафиксировать транзакцию асинхронно.</span><span class="sxs-lookup"><span data-stu-id="b4307-144">Begins an attempt to commit the transaction asynchronously.</span></span></summary>
        <returns><span data-ttu-id="b4307-145">Интерфейс <see cref="T:System.IAsyncResult" />, который может использоваться вызывающей стороной для проверки состояния асинхронной операции или ожидания завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b4307-145">An <see cref="T:System.IAsyncResult" /> interface that can be used by the caller to check the status of the asynchronous operation, or to wait for the operation to complete.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4307-146">Этот метод возвращает значение немедленно, прежде чем транзакция будет завершена.</span><span class="sxs-lookup"><span data-stu-id="b4307-146">This method returns immediately, before the transaction has been completed.</span></span> <span data-ttu-id="b4307-147">Затем транзакция фиксируется в другом потоке, а при завершении вызывается делегат `asyncCallback`.</span><span class="sxs-lookup"><span data-stu-id="b4307-147">The transaction then commits on a different thread, and the `asyncCallback` delegate is invoked when it has completed.</span></span> <span data-ttu-id="b4307-148">После вызова этого метода результат транзакции не будет получен до тех пор, пока не будет вызван <xref:System.Transactions.CommittableTransaction.EndCommit%2A>.</span><span class="sxs-lookup"><span data-stu-id="b4307-148">After this method is called, you do not receive the outcome of the transaction until you call <xref:System.Transactions.CommittableTransaction.EndCommit%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4307-149">Процесс фиксации может завершиться синхронно внутри этого вызова метода.</span><span class="sxs-lookup"><span data-stu-id="b4307-149">The commit process may complete synchronously inside this method call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="committableTransaction.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4307-150">Пытается зафиксировать транзакцию.</span><span class="sxs-lookup"><span data-stu-id="b4307-150">Attempts to commit the transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4307-151">При вызове этого метода все объекты, зарегистрированные для участия в транзакции, опрашиваются и могут независимо указывать свой голос для фиксации или отката транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-151">When this method is called, all objects that have registered to participate in the transaction are polled and can independently indicate their vote to either commit or roll back the transaction.</span></span> <span data-ttu-id="b4307-152">Если какой-либо из участников какого-либо участника для отката транзакции выполняется откат, и этот метод создает исключение <xref:System.Transactions.TransactionException>.</span><span class="sxs-lookup"><span data-stu-id="b4307-152">If any participant votes to roll back the transaction, it is rolled back and this method throws a <xref:System.Transactions.TransactionException> exception.</span></span> <span data-ttu-id="b4307-153">Это обычное событие для транзакции, и код должен перехватывать и обрабатывать такие исключения.</span><span class="sxs-lookup"><span data-stu-id="b4307-153">This is a normal occurrence for a transaction and your code should catch and process such exceptions.</span></span>  
  
 <span data-ttu-id="b4307-154"><xref:System.Transactions.CommittableTransaction.Commit%2A> и <xref:System.Transactions.CommittableTransaction.EndCommit%2A> блок, пока не завершится первый этап обработки транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-154"><xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.CommittableTransaction.EndCommit%2A> block until the first phase of transaction processing is complete.</span></span> <span data-ttu-id="b4307-155">Первый этап завершается после того, как все диспетчеры ресурсов и прикрепления в транзакции проголосовавших на результат транзакции, а <xref:System.Transactions.TransactionManager> надежно решил зафиксировать или прервать транзакцию.</span><span class="sxs-lookup"><span data-stu-id="b4307-155">The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the <xref:System.Transactions.TransactionManager> has durably decided to commit or abort the transaction.</span></span> <span data-ttu-id="b4307-156">Второй этап обработки всегда является асинхронным.</span><span class="sxs-lookup"><span data-stu-id="b4307-156">The second phase of processing is always asynchronous.</span></span> <span data-ttu-id="b4307-157">Поэтому нет никакой гарантии, что данные, только что зафиксированные в заданной транзакции, будут немедленно доступны после того, как не использовать другую транзакцию для просмотра этих данных.</span><span class="sxs-lookup"><span data-stu-id="b4307-157">Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</span></span>  
  
 <span data-ttu-id="b4307-158">Поскольку этот метод блокируется до завершения первого этапа обработки транзакции, следует быть предельно осторожным при использовании этого метода в приложении Windows Form (WinForm) или в случае взаимоблокировки.</span><span class="sxs-lookup"><span data-stu-id="b4307-158">Because this method blocks until the first phase of transaction processing is complete, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</span></span> <span data-ttu-id="b4307-159">При вызове этого метода внутри одного события элемента управления WinForm (например, при нажатии кнопки) и использовании синхронного <xref:System.Windows.Forms.Control.Invoke%2A> метод для направления элемента управления на выполнение некоторых задач пользовательского интерфейса (например, изменение цветов) в процессе обработки транзакции, взаимоблокировка произойдет.</span><span class="sxs-lookup"><span data-stu-id="b4307-159">If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous <xref:System.Windows.Forms.Control.Invoke%2A> method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</span></span> <span data-ttu-id="b4307-160">Это обусловлено тем, что метод <xref:System.Windows.Forms.Control.Invoke%2A> является синхронным и блокирует рабочий поток до тех пор, пока поток пользовательского интерфейса не завершит свое задание.</span><span class="sxs-lookup"><span data-stu-id="b4307-160">This is because the <xref:System.Windows.Forms.Control.Invoke%2A> method is synchronous and blocks the worker thread until the UI thread finishes its job.</span></span> <span data-ttu-id="b4307-161">Однако в нашем сценарии поток пользовательского интерфейса также ожидает, пока рабочий поток зафиксирует транзакцию.</span><span class="sxs-lookup"><span data-stu-id="b4307-161">However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</span></span> <span data-ttu-id="b4307-162">В результате ни один из них не может быть продолжен, а область ожидает завершения фиксации на неопределенное время.</span><span class="sxs-lookup"><span data-stu-id="b4307-162">The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</span></span> <span data-ttu-id="b4307-163">Следует использовать <xref:System.Windows.Forms.Control.BeginInvoke%2A>, а не <xref:System.Windows.Forms.Control.Invoke%2A> везде, где это возможно, так как это асинхронное и, таким образом, менее подвержено взаимоблокировкам.</span><span class="sxs-lookup"><span data-stu-id="b4307-163">You should use <xref:System.Windows.Forms.Control.BeginInvoke%2A> rather than <xref:System.Windows.Forms.Control.Invoke%2A> wherever possible, because it is asynchronous and thus less prone to deadlock.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionInDoubtException"><span data-ttu-id="b4307-164">В транзакции вызывается метод <see cref="M:System.Transactions.CommittableTransaction.Commit" />, и транзакция переходит в состояние <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</span><span class="sxs-lookup"><span data-stu-id="b4307-164"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> is called on a transaction and the transaction becomes <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</span></span></exception>
        <exception cref="T:System.Transactions.TransactionAbortedException"><span data-ttu-id="b4307-165">Вызывается метод <see cref="M:System.Transactions.CommittableTransaction.Commit" />, и выполняется первоначальный откат транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-165"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> is called and the transaction rolls back for the first time.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndCommit">
      <MemberSignature Language="C#" Value="public void EndCommit (IAsyncResult asyncResult);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCommit(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCommit (asyncResult As IAsyncResult)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCommit(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="member this.EndCommit : IAsyncResult -&gt; unit" Usage="committableTransaction.EndCommit asyncResult" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void EndCommit (IAsyncResult ar);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCommit(class System.IAsyncResult ar) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCommit (ar As IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCommit(IAsyncResult ^ ar);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndCommit : IAsyncResult -&gt; unit" Usage="committableTransaction.EndCommit ar" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="ar" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b4307-166">Объект <see cref="T:System.IAsyncResult" />, связанный с асинхронной фиксацией.</span><span class="sxs-lookup"><span data-stu-id="b4307-166">The <see cref="T:System.IAsyncResult" /> object associated with the asynchronous commitment.</span></span></param>
        <param name="ar"><span data-ttu-id="b4307-167">Объект <see cref="T:System.IAsyncResult" />, связанный с асинхронной фиксацией.</span><span class="sxs-lookup"><span data-stu-id="b4307-167">The <see cref="T:System.IAsyncResult" /> object associated with the asynchronous commitment.</span></span></param>
        <summary><span data-ttu-id="b4307-168">Завершает попытку зафиксировать транзакцию асинхронно.</span><span class="sxs-lookup"><span data-stu-id="b4307-168">Ends an attempt to commit the transaction asynchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4307-169">Этот метод следует вызывать в делегате обратного вызова, указанном в качестве параметра метода <xref:System.Transactions.CommittableTransaction.BeginCommit%2A>, после завершения любой работы по очистке, связанной с асинхронной фиксацией.</span><span class="sxs-lookup"><span data-stu-id="b4307-169">You should call this method in the callback delegate specified as a parameter to the <xref:System.Transactions.CommittableTransaction.BeginCommit%2A> method, when you have finished any cleanup work associated with the asynchronous commitment.</span></span> <span data-ttu-id="b4307-170">Этот метод также можно вызвать раньше, не дожидаясь делегата.</span><span class="sxs-lookup"><span data-stu-id="b4307-170">You can also call this method early without waiting for the delegate.</span></span> <span data-ttu-id="b4307-171">Если в момент вызова этого метода транзакция не завершена, этот метод ожидает его завершения.</span><span class="sxs-lookup"><span data-stu-id="b4307-171">If, by the time you call this method, the transaction has not completed, this method waits for its completion.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b4307-172">Свойство <xref:System.IAsyncResult.CompletedSynchronously%2A>, возвращаемое `asyncResult`, всегда `false`, даже если операция выполнена синхронно.</span><span class="sxs-lookup"><span data-stu-id="b4307-172">The <xref:System.IAsyncResult.CompletedSynchronously%2A> property returned by `asyncResult` is always `false`, even if the operation completed synchronously.</span></span>  
  
 <span data-ttu-id="b4307-173"><xref:System.Transactions.CommittableTransaction.Commit%2A> и <xref:System.Transactions.CommittableTransaction.EndCommit%2A> блок, пока не завершится первый этап обработки транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-173"><xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.CommittableTransaction.EndCommit%2A> block until the first phase of transaction processing is complete.</span></span> <span data-ttu-id="b4307-174">Первый этап завершается после того, как все диспетчеры ресурсов и прикрепления в транзакции проголосовавших на результат транзакции, а <xref:System.Transactions.TransactionManager> надежно решил зафиксировать или прервать транзакцию.</span><span class="sxs-lookup"><span data-stu-id="b4307-174">The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the <xref:System.Transactions.TransactionManager> has durably decided to commit or abort the transaction.</span></span> <span data-ttu-id="b4307-175">Второй этап обработки всегда является асинхронным.</span><span class="sxs-lookup"><span data-stu-id="b4307-175">The second phase of processing is always asynchronous.</span></span> <span data-ttu-id="b4307-176">Поэтому нет никакой гарантии, что данные, только что зафиксированные в заданной транзакции, будут немедленно доступны после того, как не использовать другую транзакцию для просмотра этих данных.</span><span class="sxs-lookup"><span data-stu-id="b4307-176">Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionAbortedException"><span data-ttu-id="b4307-177">Вызывается метод <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />, и выполняется первоначальный откат транзакции.</span><span class="sxs-lookup"><span data-stu-id="b4307-177"><see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> is called and the transaction rolls back for the first time.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.AsyncState">
      <MemberSignature Language="C#" Value="object System.IAsyncResult.AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.IAsyncResult.AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AsyncState As Object Implements IAsyncResult.AsyncState" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::IAsyncResult::AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4307-178">Получает объект, предоставленный в качестве последнего параметра вызова метода <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="b4307-178">Gets the object provided as the last parameter of the <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> method call.</span></span></summary>
        <value><span data-ttu-id="b4307-179">Объект, предоставленный в качестве последнего параметра вызова метода <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="b4307-179">The object provided as the last parameter of the <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> method call.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.AsyncWaitHandle">
      <MemberSignature Language="C#" Value="System.Threading.WaitHandle System.IAsyncResult.AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AsyncWaitHandle As WaitHandle Implements IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="property System::Threading::WaitHandle ^ System::IAsyncResult::AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4307-180">Возвращает дескриптор <see cref="T:System.Threading.WaitHandle" />, используемый для ожидания завершения асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b4307-180">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></summary>
        <value><span data-ttu-id="b4307-181">Дескриптор <see cref="T:System.Threading.WaitHandle" />, используемый для ожидания завершения асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b4307-181">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.CompletedSynchronously">
      <MemberSignature Language="C#" Value="bool System.IAsyncResult.CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CompletedSynchronously As Boolean Implements IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::IAsyncResult::CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4307-182">Возвращает указатель, позволяющий определить, синхронно ли выполнена асинхронная операция фиксации.</span><span class="sxs-lookup"><span data-stu-id="b4307-182">Gets an indication of whether the asynchronous commit operation completed synchronously.</span></span></summary>
        <value><span data-ttu-id="b4307-183"><see langword="true" />, если асинхронная операция фиксации выполнена синхронно; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4307-183"><see langword="true" /> if the asynchronous commit operation completed synchronously; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b4307-184">Это свойство всегда возвращает значение <see langword="false" />, даже если операция выполнена синхронно.</span><span class="sxs-lookup"><span data-stu-id="b4307-184">This property always returns <see langword="false" /> even if the operation completed synchronously.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.IsCompleted">
      <MemberSignature Language="C#" Value="bool System.IAsyncResult.IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#IsCompleted" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsCompleted As Boolean Implements IAsyncResult.IsCompleted" />
      <MemberSignature Language="C++ CLI" Value="property bool System::IAsyncResult::IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4307-185">Получает указатель, позволяющий определить, выполнена ли асинхронная операция фиксации.</span><span class="sxs-lookup"><span data-stu-id="b4307-185">Gets an indication whether the asynchronous commit operation has completed.</span></span></summary>
        <value><span data-ttu-id="b4307-186">Значение <see langword="true" />, если операция выполнена; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4307-186"><see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
