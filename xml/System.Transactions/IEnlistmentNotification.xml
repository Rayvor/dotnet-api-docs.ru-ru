<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36a329fa5a579cd92ba234295630238f8883f58d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70447930" /></Metadata><TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type IEnlistmentNotification = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Описывает интерфейс, который должен реализовать диспетчер ресурсов, чтобы предоставить обратные вызовы уведомлений о двухфазной фиксации диспетчеру транзакций при внесении в список для участия.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы диспетчер ресурсов мог участвовать в транзакции, он должен быть прикреплен к транзакции через диспетчер транзакций. Класс <xref:System.Transactions.Transaction> определяет набор методов, имена которых начинаются с `Enlist`, обеспечивающий данную функциональную возможность. Различные методы `Enlist` соответствуют различным типам зачисления, которые могут использоваться диспетчером ресурсов.  
  
 Этот класс описывает интерфейс, который должен быть реализован диспетчером ресурсов, чтобы обеспечить два обратных вызова уведомлений о фиксации для диспетчера транзакций после прикрепления к участию. Для реализации <xref:System.Transactions.IEnlistmentNotification> интерфейса каждой из диспетчеров ресурсов следует прикрепить его <xref:System.Transactions.Transaction.EnlistVolatile%2A> с помощью метода <xref:System.Transactions.Transaction> или <xref:System.Transactions.Transaction.EnlistDurable%2A> метода класса в зависимости от того, является ли ресурс энергозависимым или устойчивым. Дополнительные сведения о зачислении и 2PC см. в разделе [прикрепление ресурсов в качестве участников транзакции](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) и [фиксация транзакции в рамках одной фазы и многоэтапной](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) передачи соответственно.  
  
 Диспетчер транзакций уведомляет прикрепленный объект на разных этапах протокола фиксации двух фаз следующими методами.  
  
|Метод|Описание|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|Этот метод прикрепленного объекта используется диспетчером транзакций в качестве обратного вызова во время первого этапа транзакции, когда диспетчер транзакций запрашивает у участников возможность зафиксировать транзакцию.|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|Этот метод прикрепленного объекта используется диспетчером транзакций в качестве обратного вызова во время второй фазы транзакции, если транзакция фиксируется.|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|Этот метод прикрепленного объекта используется диспетчером транзакций в качестве обратного вызова во время второй фазы транзакции, если транзакция прервана (т. е. выполняется откат).|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|Этот метод прикрепленного объекта используется диспетчером транзакций в качестве обратного вызова во время второй фазы транзакции, если транзакция сомнительна.|  
  
> [!NOTE]
>  Следует иметь в виду, что уведомления могут не отправляться последовательно или в определенном порядке.  
  
   
  
## Examples  
 В следующем примере показана реализация этого интерфейса, а также прикрепление объекта в качестве участника транзакции с помощью <xref:System.Transactions.Transaction.EnlistVolatile%2A> метода.  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
    <related type="Article" href="https://msdn.microsoft.com/library/786a12c2-d530-49f4-9c59-5c973e15a11d">Зачисление ресурсов в транзакцию в качестве участников</related>
    <related type="Article" href="https://msdn.microsoft.com/library/694ea153-e4db-41ae-96ac-9ac66dcb69a9">Однофазная и многофазная фиксация транзакции</related>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Commit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Объект <see cref="T:System.Transactions.Enlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
        <summary>Уведомляет включенный в список объект о том, что транзакция фиксируется.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Диспетчер транзакций вызывает этот метод прикрепленного объекта на втором этапе обязательства, когда он указывает всем участникам зафиксировать транзакцию.  
  
 Диспетчер ресурсов должен выполнить все действия, необходимые для завершения транзакции, а затем сообщить диспетчеру транзакций о завершении, вызвав <xref:System.Transactions.Enlistment.Done%2A> метод `enlistment` для параметра.  
  
 Если диспетчер ресурсов прикрепляет надежно, но не отвечает на вызов <xref:System.Transactions.Enlistment.Done%2A> метода, диспетчер транзакций не гарантирует, что диспетчер ресурсов <xref:System.Transactions.IEnlistmentNotification.Commit%2A> получил вызов. Таким образом диспетчер транзакций продолжает ожидание ответа и сохраняет сведения, относящиеся к этой транзакции.  Если <xref:System.Transactions.Enlistment.Done%2A> никогда не вызывается, этот фрагмент информации хранится в неопределенном объеме памяти или в ресурсе на уровне системы. Это приводит к невозможности освобождения ресурсов. В случае распределенной транзакции это может в конечном итоге заполнить журнал MSDTC, который останавливает процесс MSDTC. В случае транзакции <xref:System.Transactions>, управляемой, это приводит к постепенному и непрерывному увеличению потребления памяти процессом диспетчера ресурсов. Поэтому важно вызвать <xref:System.Transactions.Enlistment.Done%2A> метод после того, как диспетчер ресурсов завершит свою работу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member InDoubt : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.InDoubt enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Объект <see cref="T:System.Transactions.Enlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
        <summary>Уведомляет включенный в список объект о сомнительном состоянии транзакции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается для временных ресурсов, когда диспетчер транзакций вызвал однофазную операцию фиксации в одном устойчивом ресурсе, а затем соединение с устойчивым ресурсом было потеряно до получения результата транзакции. На этом этапе результат транзакции не может быть определен безопасно.  
  
 Как <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> считается окончательным состоянием транзакции, не следует вызывать метод <xref:System.Transactions.IEnlistmentNotification.Commit%2A> или <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> после вызова метода <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.  
  
> [!NOTE]
>  Реализация этого метода для временного ресурса должна выполнять любые операции восстановления или включения, которые он понимает на затронутых данных.  Он также должен вызвать <xref:System.Transactions.Enlistment.Done%2A> метод для в `enlistment` параметре, когда он завершит свою работу.  
  
 Если диспетчер ресурсов прикрепляет надежно, но не отвечает на вызов <xref:System.Transactions.Enlistment.Done%2A> метода, диспетчер транзакций не гарантирует, что диспетчер ресурсов <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> получил вызов. Таким образом диспетчер транзакций продолжает ожидание ответа и сохраняет сведения, относящиеся к этой транзакции.  Если <xref:System.Transactions.Enlistment.Done%2A> никогда не вызывается, этот фрагмент информации хранится в неопределенном объеме памяти или в ресурсе на уровне системы. Это приводит к невозможности освобождения ресурсов. В случае распределенной транзакции это может в конечном итоге заполнить журнал MSDTC, который останавливает процесс MSDTC. В случае транзакции <xref:System.Transactions>, управляемой, это приводит к постепенному и непрерывному увеличению потребления памяти процессом диспетчера ресурсов. Поэтому важно вызвать <xref:System.Transactions.Enlistment.Done%2A> метод после того, как диспетчер ресурсов завершит свою работу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberSignature Language="F#" Value="abstract member Prepare : System.Transactions.PreparingEnlistment -&gt; unit" Usage="iEnlistmentNotification.Prepare preparingEnlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">Объект <see cref="T:System.Transactions.PreparingEnlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
        <summary>Уведомляет включенный в список объект о том, что транзакция подготавливается для фиксации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Диспетчер транзакций вызывает этот метод прикрепленного диспетчера ресурсов на этапе 1 обязательства, когда он запрашивает у участников возможность зафиксировать транзакцию.  
  
 При реализации устойчивого диспетчера ресурсов следует заносить в журнал запись подготовки на этом этапе. Запись должна содержать все необходимые сведения для выполнения восстановления. Сюда входит <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> свойство, которое передается в диспетчер транзакций <xref:System.Transactions.TransactionManager.Reenlist%2A> в методе во время восстановления. Дополнительные сведения о восстановлении см. в разделе [выполнение восстановления](https://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).  
  
 Диспетчер ресурсов должен выполнить всю работу, которая должна быть завершена перед вызовом <xref:System.Transactions.PreparingEnlistment.Prepared%2A> метода `preparingEnlistment` параметра, чтобы указать его голосование за обязательства. Перед получением уведомлений второго этапа, таких как фиксация, откат или сомнительное, следует убедиться, что это выполнено. Это происходит потому, что уведомления 2 этапа могут быть встроены в тот же поток <xref:System.Transactions.PreparingEnlistment.Prepared%2A> , который вызвал метод на этапе 1. Таким образом, после вызова метода <xref:System.Transactions.PreparingEnlistment.Prepared%2A> не нужно выполнять никаких действий (например, снимать блокировки), которые должны были быть выполнены перед получением уведомлений второго этапа.  
  
 Можно также вызвать метод `preparingEnlistment` параметра, чтобы указать голос для отката.  
  
 Если нужно, чтобы объект просто проработал и реагировал на ход выполнения транзакции, не участвуя в нем, ваша реализация этого метода должна вызвать <xref:System.Transactions.Enlistment.Done%2A> метод `preparingEnlistment` параметра, когда он завершит свою работу. При этом диспетчер ресурсов не получал уведомлений второго этапа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Rollback : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Rollback enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Объект <see cref="T:System.Transactions.Enlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
        <summary>Уведомляет включенный в список объект о том, что выполняется откат транзакции (ее прерывание).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Диспетчер транзакций вызывает этот метод присоединяемого объекта, когда транзакция откатывается (прервана) из-за невозможности одного или нескольких участников транзакции фиксировать транзакцию.  
  
 Диспетчер ресурсов должен выполнить все действия, необходимые для завершения транзакции, а затем сообщить диспетчеру транзакций о завершении, вызвав <xref:System.Transactions.Enlistment.Done%2A> метод `enlistment` для параметра.  
  
 Если диспетчер ресурсов прикрепляет надежно, но не отвечает на вызов <xref:System.Transactions.Enlistment.Done%2A> метода, диспетчер транзакций не гарантирует, что диспетчер ресурсов <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> получил вызов. Таким образом диспетчер транзакций продолжает ожидание ответа и сохраняет сведения, относящиеся к этой транзакции.  Если <xref:System.Transactions.Enlistment.Done%2A> никогда не вызывается, этот фрагмент информации хранится в неопределенном объеме памяти или в ресурсе на уровне системы. Это приводит к невозможности освобождения ресурсов. В случае распределенной транзакции это может в конечном итоге заполнить журнал MSDTC, который останавливает процесс MSDTC. В случае транзакции <xref:System.Transactions>, управляемой, это приводит к постепенному и непрерывному увеличению потребления памяти процессом диспетчера ресурсов. Поэтому важно вызвать <xref:System.Transactions.Enlistment.Done%2A> метод после того, как диспетчер ресурсов завершит свою работу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
