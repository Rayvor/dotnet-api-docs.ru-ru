<Type Name="RootDesignerSerializerAttribute" FullName="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="17e6c1ff6d788078dddd9d6fc2a93a315c0e9364" /><Meta Name="ms.sourcegitcommit" Value="367e1eae0725e6da7136cd073aaa856ded5d5c29" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/13/2019" /><Meta Name="ms.locfileid" Value="75028631" /></Metadata><TypeSignature Language="C#" Value="public sealed class RootDesignerSerializerAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RootDesignerSerializerAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RootDesignerSerializerAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RootDesignerSerializerAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type RootDesignerSerializerAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Obsolete("This attribute has been deprecated. Use DesignerSerializerAttribute instead.  For example, to specify a root designer for CodeDom, use DesignerSerializerAttribute(...,typeof(TypeCodeDomSerializer)).  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Obsolete("This attribute has been deprecated. Use DesignerSerializerAttribute instead.  For example, to specify a root designer for CodeDom, use DesignerSerializerAttribute(...,typeof(TypeCodeDomSerializer)).  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Obsolete("This attribute has been deprecated. Use DesignerSerializerAttribute instead.  For example, to specify a root designer for CodeDom, use DesignerSerializerAttribute(...,typeof(TypeCodeDomSerializer)).  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b4363-101">Определяет базовый сериализатор для объекта корневого конструктора.</span><span class="sxs-lookup"><span data-stu-id="b4363-101">Indicates the base serializer to use for a root designer object.</span></span> <span data-ttu-id="b4363-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="b4363-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4363-103"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> указывает сериализатор, используемый, когда диспетчер сериализации сериализует документ проекта, а также указывает, поддерживает ли указанный сериализатор автоматическую перезагрузку документа проекта без предварительного полного удаления документа.</span><span class="sxs-lookup"><span data-stu-id="b4363-103"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> indicates the serializer to use when the serialization manager serializes the design document, and whether the specified serializer supports automatic reloading of the design document without first completely disposing of the document.</span></span>  
  
 <span data-ttu-id="b4363-104">Этот атрибут содержит следующие важные элементы:</span><span class="sxs-lookup"><span data-stu-id="b4363-104">This attribute contains the following significant members:</span></span>  
  
-   <span data-ttu-id="b4363-105"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A> указывает, какой объект сериализации следует использовать для сериализации класса во время разработки.</span><span class="sxs-lookup"><span data-stu-id="b4363-105"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A> indicates what serialization object to use to serialize the class at design time.</span></span>  
  
-   <span data-ttu-id="b4363-106"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A> указывает полное имя базового типа объекта сериализации.</span><span class="sxs-lookup"><span data-stu-id="b4363-106"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A> indicates the fully qualified name of the serialization object's base type.</span></span>  
  
-   <span data-ttu-id="b4363-107"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> указывает, поддерживает ли сериализатор перезагрузку документа проекта без взаимодействия с пользователем, чтобы открыть новое представление конструктора.</span><span class="sxs-lookup"><span data-stu-id="b4363-107"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> indicates whether the serializer supports reloading a design document without user interaction to open a new designer view.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4363-108">В следующем примере кода к компоненту применяется <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="b4363-108">The following example code applies a <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> to a component.</span></span>  
  
 [!code-cpp[IDesignerSerializationManagerSample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CPP/idesignerserializationmanagersample.cpp#2)]
 [!code-csharp[IDesignerSerializationManagerSample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CS/idesignerserializationmanagersample.cs#2)]
 [!code-vb[IDesignerSerializationManagerSample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerSerializationManagerSample/VB/idesignerserializationmanagersample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4363-109">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> с помощью указанных атрибутов.</span><span class="sxs-lookup"><span data-stu-id="b4363-109">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootDesignerSerializerAttribute (string serializerTypeName, string baseSerializerTypeName, bool reloadable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serializerTypeName, string baseSerializerTypeName, bool reloadable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerTypeName As String, baseSerializerTypeName As String, reloadable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootDesignerSerializerAttribute(System::String ^ serializerTypeName, System::String ^ baseSerializerTypeName, bool reloadable);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute : string * string * bool -&gt; System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" Usage="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute (serializerTypeName, baseSerializerTypeName, reloadable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializerTypeName" Type="System.String" />
        <Parameter Name="baseSerializerTypeName" Type="System.String" />
        <Parameter Name="reloadable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializerTypeName"><span data-ttu-id="b4363-110">Полное имя типа данных сериализатора.</span><span class="sxs-lookup"><span data-stu-id="b4363-110">The fully qualified name of the data type of the serializer.</span></span></param>
        <param name="baseSerializerTypeName"><span data-ttu-id="b4363-111">Имя базового типа сериализатора.</span><span class="sxs-lookup"><span data-stu-id="b4363-111">The name of the base type of the serializer.</span></span> <span data-ttu-id="b4363-112">Класс может содержать несколько сериализаторов, если их базовые типы отличаются друг от друга.</span><span class="sxs-lookup"><span data-stu-id="b4363-112">A class can include multiple serializers as they all have different base types.</span></span></param>
        <param name="reloadable"><span data-ttu-id="b4363-113">Значение <see langword="true" />, если сериализатор поддерживает динамическую перезагрузку документа; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4363-113"><see langword="true" /> if this serializer supports dynamic reloading of the document; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b4363-114">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> с помощью указанных атрибутов.</span><span class="sxs-lookup"><span data-stu-id="b4363-114">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4363-115">Создает новый атрибут сериализации конструктора.</span><span class="sxs-lookup"><span data-stu-id="b4363-115">Creates a new designer serialization attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootDesignerSerializerAttribute (string serializerTypeName, Type baseSerializerType, bool reloadable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serializerTypeName, class System.Type baseSerializerType, bool reloadable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerTypeName As String, baseSerializerType As Type, reloadable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootDesignerSerializerAttribute(System::String ^ serializerTypeName, Type ^ baseSerializerType, bool reloadable);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute : string * Type * bool -&gt; System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" Usage="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute (serializerTypeName, baseSerializerType, reloadable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerTypeName" Type="System.String" />
        <Parameter Name="baseSerializerType" Type="System.Type" />
        <Parameter Name="reloadable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializerTypeName"><span data-ttu-id="b4363-116">Полное имя типа данных сериализатора.</span><span class="sxs-lookup"><span data-stu-id="b4363-116">The fully qualified name of the data type of the serializer.</span></span></param>
        <param name="baseSerializerType"><span data-ttu-id="b4363-117">Имя базового типа сериализатора.</span><span class="sxs-lookup"><span data-stu-id="b4363-117">The name of the base type of the serializer.</span></span> <span data-ttu-id="b4363-118">Класс может содержать несколько сериализаторов, если их базовые типы отличаются друг от друга.</span><span class="sxs-lookup"><span data-stu-id="b4363-118">A class can include multiple serializers, as they all have different base types.</span></span></param>
        <param name="reloadable"><span data-ttu-id="b4363-119">Значение <see langword="true" />, если сериализатор поддерживает динамическую перезагрузку документа; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4363-119"><see langword="true" /> if this serializer supports dynamic reloading of the document; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b4363-120">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> с помощью указанных атрибутов.</span><span class="sxs-lookup"><span data-stu-id="b4363-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4363-121">Создает новый атрибут сериализации конструктора.</span><span class="sxs-lookup"><span data-stu-id="b4363-121">Creates a new designer serialization attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootDesignerSerializerAttribute (Type serializerType, Type baseSerializerType, bool reloadable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serializerType, class System.Type baseSerializerType, bool reloadable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerType As Type, baseSerializerType As Type, reloadable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootDesignerSerializerAttribute(Type ^ serializerType, Type ^ baseSerializerType, bool reloadable);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute : Type * Type * bool -&gt; System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" Usage="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute (serializerType, baseSerializerType, reloadable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerType" Type="System.Type" />
        <Parameter Name="baseSerializerType" Type="System.Type" />
        <Parameter Name="reloadable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializerType"><span data-ttu-id="b4363-122">Тип данных сериализатора.</span><span class="sxs-lookup"><span data-stu-id="b4363-122">The data type of the serializer.</span></span></param>
        <param name="baseSerializerType"><span data-ttu-id="b4363-123">Базовый тип сериализатора.</span><span class="sxs-lookup"><span data-stu-id="b4363-123">The base type of the serializer.</span></span> <span data-ttu-id="b4363-124">Класс может содержать несколько сериализаторов, если их базовые типы отличаются друг от друга.</span><span class="sxs-lookup"><span data-stu-id="b4363-124">A class can include multiple serializers as they all have different base types.</span></span></param>
        <param name="reloadable"><span data-ttu-id="b4363-125">Значение <see langword="true" />, если сериализатор поддерживает динамическую перезагрузку документа; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4363-125"><see langword="true" /> if this serializer supports dynamic reloading of the document; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b4363-126">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> с помощью указанных атрибутов.</span><span class="sxs-lookup"><span data-stu-id="b4363-126">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4363-127">Создает новый атрибут сериализации конструктора.</span><span class="sxs-lookup"><span data-stu-id="b4363-127">Creates a new designer serialization attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reloadable">
      <MemberSignature Language="C#" Value="public bool Reloadable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Reloadable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reloadable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Reloadable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Reloadable : bool" Usage="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4363-128">Возвращает значение, обозначающее возможность поддержки корневым сериализатором перезагрузки документа проекта без предварительного удаления узла конструктора.</span><span class="sxs-lookup"><span data-stu-id="b4363-128">Gets a value indicating whether the root serializer supports reloading of the design document without first disposing the designer host.</span></span></summary>
        <value><span data-ttu-id="b4363-129">Значение <see langword="true" />, если корневой сериализатор поддерживает перезагрузку; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4363-129"><see langword="true" /> if the root serializer supports reloading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4363-130">Если это свойство имеет значение `false`, документ проекта не выполняет автоматическую перезагрузку от имени пользователя.</span><span class="sxs-lookup"><span data-stu-id="b4363-130">If this property is set to `false`, the design document does not automatically perform a reload on behalf of the user.</span></span> <span data-ttu-id="b4363-131">Если это свойство имеет значение `false`, то пользователь должен повторно открыть окно представления конструктора для документа проекта, если требуется обновление или перезагрузка.</span><span class="sxs-lookup"><span data-stu-id="b4363-131">If this property is set to `false`, it is the user's responsibility to reopen the designer view window for the design document, if an update or reload is desired.</span></span>  
  
 <span data-ttu-id="b4363-132">Для перестроения документа проекта некоторым сериализаторам требуется взаимодействие внешних компонентов в процессе загрузки конструктора.</span><span class="sxs-lookup"><span data-stu-id="b4363-132">Some serializers require the interaction of external components in the designer loading process in order to rebuild the design document.</span></span> <span data-ttu-id="b4363-133">Этим сериализаторам иногда приходится создавать новый узел конструктора при каждой загрузке документа проекта.</span><span class="sxs-lookup"><span data-stu-id="b4363-133">These serializers sometimes need to create a new designer host each time the design document is loaded.</span></span> <span data-ttu-id="b4363-134">В этом случае <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> будет иметь значение `false`, а узел конструктора должен быть создан повторно при взаимодействии с пользователем (Запуск конструктора для документа) после удаления документа проекта.</span><span class="sxs-lookup"><span data-stu-id="b4363-134">If this is the situation, <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> will be set to `false`, and the designer host must be recreated by user interaction (launching the designer for the document) after the design document is disposed.</span></span> <span data-ttu-id="b4363-135">События и службы, которые были подключены к узлу конструктора, за исключением десериализации, не сохраняются и, возможно, потребуется установить еще раз.</span><span class="sxs-lookup"><span data-stu-id="b4363-135">The events and services that were connected to the designer host, except through deserialization, do not remain and may need to be set again.</span></span> <span data-ttu-id="b4363-136">Если <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> имеет `true`, документ проекта можно перезагрузить после внесения изменений вне конструктора в код, не закрывая окно конструктора и повторно открывая его.</span><span class="sxs-lookup"><span data-stu-id="b4363-136">If <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> is `true`, the design document can be reloaded after changes outside the designer are made to the code, without closing the designer window and reopening it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializerBaseTypeName">
      <MemberSignature Language="C#" Value="public string SerializerBaseTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializerBaseTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializerBaseTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializerBaseTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializerBaseTypeName : string" Usage="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4363-137">Получает полное имя типа базового типа сериализатора.</span><span class="sxs-lookup"><span data-stu-id="b4363-137">Gets the fully qualified type name of the base type of the serializer.</span></span></summary>
        <value><span data-ttu-id="b4363-138">Имя базового типа сериализатора.</span><span class="sxs-lookup"><span data-stu-id="b4363-138">The name of the base type of the serializer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializerTypeName">
      <MemberSignature Language="C#" Value="public string SerializerTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializerTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializerTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializerTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializerTypeName : string" Usage="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4363-139">Получает полное имя типа сериализатора.</span><span class="sxs-lookup"><span data-stu-id="b4363-139">Gets the fully qualified type name of the serializer.</span></span></summary>
        <value><span data-ttu-id="b4363-140">Имя типа сериализатора.</span><span class="sxs-lookup"><span data-stu-id="b4363-140">The name of the type of the serializer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4363-141">Получает уникальный идентификатор для атрибута данного типа.</span><span class="sxs-lookup"><span data-stu-id="b4363-141">Gets a unique ID for this attribute type.</span></span></summary>
        <value><span data-ttu-id="b4363-142">Объект с уникальным идентификатором для атрибута данного типа.</span><span class="sxs-lookup"><span data-stu-id="b4363-142">An object containing a unique ID for this attribute type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4363-143">Это свойство используется алгоритмами фильтрации для обнаружения двух атрибутов одного типа.</span><span class="sxs-lookup"><span data-stu-id="b4363-143">This property is used by filtering algorithms to identify two attributes that are the same type.</span></span> <span data-ttu-id="b4363-144">Для большинства атрибутов это просто возвращает экземпляр <xref:System.Type> для атрибута.</span><span class="sxs-lookup"><span data-stu-id="b4363-144">For most attributes, this just returns the <xref:System.Type> instance for the attribute.</span></span> <span data-ttu-id="b4363-145"><xref:System.ComponentModel.EditorAttribute> переопределяет этот параметр, чтобы включить тип базового типа редактора.</span><span class="sxs-lookup"><span data-stu-id="b4363-145"><xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
