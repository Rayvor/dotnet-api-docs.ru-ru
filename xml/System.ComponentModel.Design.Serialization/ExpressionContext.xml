<Type Name="ExpressionContext" FullName="System.ComponentModel.Design.Serialization.ExpressionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e502cf457bf5a040e74a8af80eeeb6a314cd9fb7" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65002298" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExpressionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ExpressionContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionContext sealed" />
  <TypeSignature Language="F#" Value="type ExpressionContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2e619-101">Предоставляет средство передачи состояния контекста сериализаторам.</span><span class="sxs-lookup"><span data-stu-id="2e619-101">Provides a means of passing context state among serializers.</span></span> <span data-ttu-id="2e619-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="2e619-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e619-103">Объект <xref:System.ComponentModel.Design.Serialization.ExpressionContext> размещается в стеке контекста и содержит наиболее значимое выражение во время сериализации.</span><span class="sxs-lookup"><span data-stu-id="2e619-103">An <xref:System.ComponentModel.Design.Serialization.ExpressionContext> is placed on the context stack and contains the most relevant expression during serialization.</span></span> <span data-ttu-id="2e619-104">В следующем C# коде показано назначение.</span><span class="sxs-lookup"><span data-stu-id="2e619-104">The following C# code demonstrates an assignment.</span></span>  
  
```csharp  
button1.Text = "Hello";  
```  
  
 <span data-ttu-id="2e619-105">Во время сериализации за создание этой отдельной инструкции отвечает несколько сериализаторов.</span><span class="sxs-lookup"><span data-stu-id="2e619-105">During serialization, several serializers are responsible for creating this single statement.</span></span> <span data-ttu-id="2e619-106">Один из этих сериализаторов отвечает за создание "Hello".</span><span class="sxs-lookup"><span data-stu-id="2e619-106">One of those serializers is responsible for creating "Hello".</span></span> <span data-ttu-id="2e619-107">Бывают ситуации, когда этому сериализатору может потребоваться знать контекст, в котором создается его выражение.</span><span class="sxs-lookup"><span data-stu-id="2e619-107">There are times when that serializer may need to know the context in which it is creating its expression.</span></span> <span data-ttu-id="2e619-108">В предыдущем примере этот контекст не требуется.</span><span class="sxs-lookup"><span data-stu-id="2e619-108">In the previous example, this context is not needed.</span></span> <span data-ttu-id="2e619-109">В следующем C# коде показана ситуация, в которой необходимо знание контекста.</span><span class="sxs-lookup"><span data-stu-id="2e619-109">The following C# code shows a situation in which knowledge of the context is necessary.</span></span>  
  
```csharp  
button1.Text = rm.GetString("button1_Text");  
```  
  
 <span data-ttu-id="2e619-110">В этом случае сериализатор, ответственный за создание выражения ресурса, должен быть уведомлен об именах целевых объектов.</span><span class="sxs-lookup"><span data-stu-id="2e619-110">In this case, the serializer responsible for creating the resource expression needs to be informed of the names of the target objects.</span></span> <span data-ttu-id="2e619-111">Для этого можно использовать класс.<xref:System.ComponentModel.Design.Serialization.ExpressionContext></span><span class="sxs-lookup"><span data-stu-id="2e619-111">The <xref:System.ComponentModel.Design.Serialization.ExpressionContext> class can be used for this.</span></span> <span data-ttu-id="2e619-112">Поскольку каждый сериализатор создает выражение и вызывает сериализатор для выполнения меньшей части инструкции в целом, сериализатор отправляет контекст выражения в стеке контекста.</span><span class="sxs-lookup"><span data-stu-id="2e619-112">As each serializer creates an expression and invokes a serializer to handle a smaller part of the statement as a whole, the serializer pushes an expression context on the context stack.</span></span> <span data-ttu-id="2e619-113">У каждого контекста выражения есть родительское свойство, которое находит следующий контекст выражения в стеке.</span><span class="sxs-lookup"><span data-stu-id="2e619-113">Each expression context has a parent property that locates the next expression context on the stack.</span></span> <span data-ttu-id="2e619-114">Это обеспечивает удобную возможность обхода.</span><span class="sxs-lookup"><span data-stu-id="2e619-114">This provides a convenient traversal capability.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.CodeDom.CodeExpression" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2e619-115">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" />.</span><span class="sxs-lookup"><span data-stu-id="2e619-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.ExpressionContext : System.CodeDom.CodeExpression * Type * obj -&gt; System.ComponentModel.Design.Serialization.ExpressionContext" Usage="new System.ComponentModel.Design.Serialization.ExpressionContext (expression, expressionType, owner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="2e619-116">Заданное выражение кода.</span><span class="sxs-lookup"><span data-stu-id="2e619-116">The given code expression.</span></span></param>
        <param name="expressionType"><span data-ttu-id="2e619-117">Тип заданного выражения кода.</span><span class="sxs-lookup"><span data-stu-id="2e619-117">The given code expression type.</span></span></param>
        <param name="owner"><span data-ttu-id="2e619-118">Владелец заданного выражения кода.</span><span class="sxs-lookup"><span data-stu-id="2e619-118">The given code expression owner.</span></span></param>
        <summary><span data-ttu-id="2e619-119">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> с указанным выражением и владельцем.</span><span class="sxs-lookup"><span data-stu-id="2e619-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with the given expression and owner.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2e619-120">Значение параметра <paramref name="expression" />, <paramref name="expressionType" /> или <paramref name="owner" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e619-120"><paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner, object presetValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner, object presetValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object, presetValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner, System::Object ^ presetValue);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.ExpressionContext : System.CodeDom.CodeExpression * Type * obj * obj -&gt; System.ComponentModel.Design.Serialization.ExpressionContext" Usage="new System.ComponentModel.Design.Serialization.ExpressionContext (expression, expressionType, owner, presetValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
        <Parameter Name="presetValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="2e619-121">Заданное выражение кода.</span><span class="sxs-lookup"><span data-stu-id="2e619-121">The given code expression.</span></span></param>
        <param name="expressionType"><span data-ttu-id="2e619-122">Тип заданного выражения кода.</span><span class="sxs-lookup"><span data-stu-id="2e619-122">The given code expression type.</span></span></param>
        <param name="owner"><span data-ttu-id="2e619-123">Владелец заданного выражения кода.</span><span class="sxs-lookup"><span data-stu-id="2e619-123">The given code expression owner.</span></span></param>
        <param name="presetValue"><span data-ttu-id="2e619-124">Предустановленное значение заданного выражения кода.</span><span class="sxs-lookup"><span data-stu-id="2e619-124">The given code expression preset value.</span></span></param>
        <summary><span data-ttu-id="2e619-125">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> с использованием текущего значения.</span><span class="sxs-lookup"><span data-stu-id="2e619-125">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with a current value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2e619-126">Значение параметра <paramref name="expression" />, <paramref name="expressionType" /> или <paramref name="owner" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e619-126"><paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Expression" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Expression { System::CodeDom::CodeExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.CodeDom.CodeExpression" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e619-127">Возвращает выражение, представленное контекстом.</span><span class="sxs-lookup"><span data-stu-id="2e619-127">Gets the expression this context represents.</span></span></summary>
        <value><span data-ttu-id="2e619-128">Выражение, представленное контекстом.</span><span class="sxs-lookup"><span data-stu-id="2e619-128">The expression this context represents.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionType : Type" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e619-129">Возвращает свойство <see cref="T:System.Type" /> выражения.</span><span class="sxs-lookup"><span data-stu-id="2e619-129">Gets the <see cref="T:System.Type" /> of the expression.</span></span></summary>
        <value><span data-ttu-id="2e619-130">Объект <see cref="T:System.Type" /> выражения.</span><span class="sxs-lookup"><span data-stu-id="2e619-130">The <see cref="T:System.Type" /> of the expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e619-131">Можно использовать <xref:System.ComponentModel.Design.Serialization.ExpressionContext> , чтобы определить, требуется ли приведение при назначении выражения.</span><span class="sxs-lookup"><span data-stu-id="2e619-131">You can use <xref:System.ComponentModel.Design.Serialization.ExpressionContext> to determine if a cast is needed when assigning to the expression.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public object Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Owner { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : obj" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e619-132">Возвращает объект, владеющий этим выражением.</span><span class="sxs-lookup"><span data-stu-id="2e619-132">Gets the object owning this expression.</span></span></summary>
        <value><span data-ttu-id="2e619-133">Объект, владеющий этим выражением.</span><span class="sxs-lookup"><span data-stu-id="2e619-133">The object owning this expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e619-134">Если выражение <xref:System.Windows.Forms.Control.Text%2A> является ссылкой на свойство свойства <xref:System.Windows.Forms.Button> экземпляра с именем `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> функция возвращает `button1`.</span><span class="sxs-lookup"><span data-stu-id="2e619-134">If the expression is a property reference to the <xref:System.Windows.Forms.Control.Text%2A> property of an instance of <xref:System.Windows.Forms.Button> called `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> returns `button1`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="PresetValue">
      <MemberSignature Language="C#" Value="public object PresetValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PresetValue" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PresetValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PresetValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PresetValue : obj" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e619-135">Возвращает заранее установленное значение выражения.</span><span class="sxs-lookup"><span data-stu-id="2e619-135">Gets the preset value of an expression.</span></span></summary>
        <value><span data-ttu-id="2e619-136">Заранее установленное значение этого выражения или значение <see langword="null" />, если не назначено.</span><span class="sxs-lookup"><span data-stu-id="2e619-136">The preset value of this expression, or <see langword="null" /> if not assigned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e619-137">Содержит предопределенное значение выражения, которое должно существовать.</span><span class="sxs-lookup"><span data-stu-id="2e619-137">Contains the preset value of an expression, should one exist.</span></span> <span data-ttu-id="2e619-138">Например, если <xref:System.Windows.Forms.Control.Controls%2A> выражение является ссылочным выражением свойства <xref:System.Windows.Forms.Button>, ссылающимся на свойство объекта, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> свойство содержит экземпляр <xref:System.Windows.Forms.Control.Controls%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="2e619-138">For example, if the expression is a property reference expression referring to the <xref:System.Windows.Forms.Control.Controls%2A> property of a <xref:System.Windows.Forms.Button>, the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property contains the instance of the <xref:System.Windows.Forms.Control.Controls%2A> property.</span></span> <span data-ttu-id="2e619-139">Это связано с тем, что свойство доступно только для чтения и предустановлено объектом, содержащим значение.</span><span class="sxs-lookup"><span data-stu-id="2e619-139">This is because the property is read-only and preset by the object to contain a value.</span></span> <span data-ttu-id="2e619-140">С другой стороны, свойство, <xref:System.Windows.Forms.Control.Text%2A> например или <xref:System.Windows.Forms.Control.Visible%2A> , не имеет предопределенного значения, поэтому <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> свойство возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="2e619-140">On the other hand, a property such as <xref:System.Windows.Forms.Control.Text%2A> or <xref:System.Windows.Forms.Control.Visible%2A> does not have a preset value and therefore the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property returns `null`.</span></span>  
  
 <span data-ttu-id="2e619-141">В следующем C# коде показано, как сериализаторы могут использовать эти сведения для помощи при сериализации.</span><span class="sxs-lookup"><span data-stu-id="2e619-141">The following C# code shows how serializers can use this information to guide serialization.</span></span>  
  
```csharp  
Padding p = new Padding();  
p.Left = 5;  
button1.Padding = p;  
  
button1.Padding.Left = 5;  
```  
  
 <span data-ttu-id="2e619-142">Сериализатор <xref:System.Windows.Forms.Padding> структуры должен быть уведомлен, если он должен создать первую или вторую форму.</span><span class="sxs-lookup"><span data-stu-id="2e619-142">The serializer of the <xref:System.Windows.Forms.Padding> structure needs to be informed if it should generate the first or second form.</span></span> <span data-ttu-id="2e619-143">Первая форма создается по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2e619-143">The first form is generated by default.</span></span> <span data-ttu-id="2e619-144">Вторая форма создается только при наличии <xref:System.ComponentModel.Design.Serialization.ExpressionContext> в стеке контекста, который <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> содержит значение, равное значению в <xref:System.Windows.Forms.Padding> настоящее время сериализации.</span><span class="sxs-lookup"><span data-stu-id="2e619-144">The second form is only generated if there is an <xref:System.ComponentModel.Design.Serialization.ExpressionContext> on the context stack that contains a <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> equal to the value of the <xref:System.Windows.Forms.Padding> currently being serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
  </Members>
</Type>