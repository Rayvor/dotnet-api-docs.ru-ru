<Type Name="DesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.DesignerSerializationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f4fe6a425a57892882654a469c0f4d8f4ea7968" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75149265" /></Metadata><TypeSignature Language="C#" Value="public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <TypeSignature Language="F#" Value="type DesignerSerializationManager = class&#xA;    interface IDesignerSerializationManager&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="98097-101">Предоставляет реализацию интерфейса <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</span><span class="sxs-lookup"><span data-stu-id="98097-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-102">Интерфейс <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> разработан как независимый от формата интерфейс к объекту, который управляет сериализацией.</span><span class="sxs-lookup"><span data-stu-id="98097-102">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization.</span></span> <span data-ttu-id="98097-103">Он по сути предоставляет контекст и службы для сериализаторов, которые фактически выполняют десериализацию.</span><span class="sxs-lookup"><span data-stu-id="98097-103">It essentially provides context and services to serializers, which actually perform the deserialization.</span></span> <span data-ttu-id="98097-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> помогает в процессе десериализации, отслеживая объекты.</span><span class="sxs-lookup"><span data-stu-id="98097-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects.</span></span> <span data-ttu-id="98097-105">Это аналогично приему интерфейса <xref:System.ComponentModel.Design.IDesignerHost>: конструкторы фактически предоставляют пользовательский интерфейс, а <xref:System.ComponentModel.Design.IDesignerHost> предоставляют связующий объект, позволяющий различным дизайнерам работать вместе.</span><span class="sxs-lookup"><span data-stu-id="98097-105">This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.</span></span>  
  
 <span data-ttu-id="98097-106">Класс <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> реализует <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span><span class="sxs-lookup"><span data-stu-id="98097-106">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span></span> <span data-ttu-id="98097-107">Он предназначен для предоставления универсальной формы десериализации, похожей на сериализаторы времени выполнения, такие как <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span><span class="sxs-lookup"><span data-stu-id="98097-107">It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="98097-108">Класс <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> достигает трех целей:</span><span class="sxs-lookup"><span data-stu-id="98097-108">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:</span></span>  
  
-   <span data-ttu-id="98097-109">Это простой, готовый объект, который можно использовать для десериализации различных форматов.</span><span class="sxs-lookup"><span data-stu-id="98097-109">It is a simple, turnkey object that can be used to deserialize a variety of formats.</span></span>  
  
-   <span data-ttu-id="98097-110">Он является универсальным и не привязан к какому-либо конкретному формату.</span><span class="sxs-lookup"><span data-stu-id="98097-110">It is generic and not tied to any particular format.</span></span> <span data-ttu-id="98097-111">Его можно использовать как для десериализации CodeDOM, так и для десериализации разметки.</span><span class="sxs-lookup"><span data-stu-id="98097-111">It can be used equally for CodeDOM deserialization as well as markup deserialization.</span></span>  
  
-   <span data-ttu-id="98097-112">Он является расширяемым и поддерживает различные методы сериализации, используемые в сценариях копирования и вставки, а также для операций отмены и повтора.</span><span class="sxs-lookup"><span data-stu-id="98097-112">It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.</span></span>  
  
 <span data-ttu-id="98097-113">Сериализация во время разработки имеет следующие отличия от сериализации объектов во время выполнения:</span><span class="sxs-lookup"><span data-stu-id="98097-113">Design-time serialization has the following differences from run-time object serialization:</span></span>  
  
-   <span data-ttu-id="98097-114">Объект, выполняющий сериализацию, обычно отделен от объекта времени выполнения, поэтому логика времени разработки может быть удалена из компонента.</span><span class="sxs-lookup"><span data-stu-id="98097-114">The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.</span></span>  
  
-   <span data-ttu-id="98097-115">Схема сериализации предполагает, что объект будет полностью инициализирован, а затем изменен с помощью вызовов свойств и методов во время десериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-115">The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.</span></span>  
  
-   <span data-ttu-id="98097-116">Свойства объекта, имеющие значения, которые никогда не были заданы для объекта (свойства содержат значения по умолчанию), не сериализуются.</span><span class="sxs-lookup"><span data-stu-id="98097-116">Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.</span></span> <span data-ttu-id="98097-117">И наоборот, поток десериализации может содержать отверстия.</span><span class="sxs-lookup"><span data-stu-id="98097-117">Conversely, the deserialization stream may have holes.</span></span>  
  
-   <span data-ttu-id="98097-118">Основное внимание уделяется качеству содержимого в потоке сериализации, а не полной сериализации объекта.</span><span class="sxs-lookup"><span data-stu-id="98097-118">Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.</span></span> <span data-ttu-id="98097-119">Это означает, что если нет определенного способа сериализации объекта, этот объект можно пропустить, а не создавать исключение.</span><span class="sxs-lookup"><span data-stu-id="98097-119">This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.</span></span> <span data-ttu-id="98097-120">Механизм сериализации может предоставить эвристику, чтобы решить, какие сбои можно игнорировать, а какие — невосстанавливаемыми.</span><span class="sxs-lookup"><span data-stu-id="98097-120">The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.</span></span>  
  
-   <span data-ttu-id="98097-121">Поток сериализации может содержать больше данных, чем требуется для десериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-121">The serialization stream may have more data than is needed for deserialization.</span></span> <span data-ttu-id="98097-122">Сериализация исходного кода, например, содержит пользовательский код в сочетании с кодом, необходимым для десериализации графа объектов.</span><span class="sxs-lookup"><span data-stu-id="98097-122">Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.</span></span> <span data-ttu-id="98097-123">Этот пользовательский код необходимо игнорировать при десериализации и сохранить в сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-123">This user code must be ignored on deserialization and preserved on serialization.</span></span>  
  
 <span data-ttu-id="98097-124">Из-за этих различий для сериализации во время разработки применяется другая модель сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-124">Because of these differences, a different serialization model applies to design-time serialization.</span></span> <span data-ttu-id="98097-125">В этой модели используется отдельный объект сериализатора для каждого сериализуемого типа данных.</span><span class="sxs-lookup"><span data-stu-id="98097-125">This model utilizes a separate serializer object for each data type being serialized.</span></span> <span data-ttu-id="98097-126">Каждый сериализатор предоставляет небольшой вклад в общую проблему.</span><span class="sxs-lookup"><span data-stu-id="98097-126">Each serializer provides its small contribution to the problem as a whole.</span></span> <span data-ttu-id="98097-127">Все эти сериализаторы согласовываются с помощью общего диспетчера сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-127">These serializers are all coordinated through a common serialization manager.</span></span> <span data-ttu-id="98097-128">Диспетчер сериализации отвечает за поддержание состояния между этими разными сериализаторами.</span><span class="sxs-lookup"><span data-stu-id="98097-128">The serialization manager is responsible for maintaining state between these different serializers.</span></span> <span data-ttu-id="98097-129">В качестве примера рассмотрим следующий класс:</span><span class="sxs-lookup"><span data-stu-id="98097-129">As an example, consider the following class:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)]  
  
 <span data-ttu-id="98097-130">Экземпляр этого класса использует три разных сериализатора: один для `SampleObject`, один для строк, а другой для целых чисел.</span><span class="sxs-lookup"><span data-stu-id="98097-130">An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers.</span></span> <span data-ttu-id="98097-131">Сериализатор для `SampleObject` называется корневым сериализатором, так как `SampleObject` является корнем графа сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-131">The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph.</span></span> <span data-ttu-id="98097-132">Также можно создать более сложные графы объектов.</span><span class="sxs-lookup"><span data-stu-id="98097-132">More complex object graphs can be created as well.</span></span> <span data-ttu-id="98097-133">Например, рассмотрим, что произойдет, если `SampleObject` были изменены следующим образом:</span><span class="sxs-lookup"><span data-stu-id="98097-133">For example, consider what would happen if `SampleObject` were changed as follows:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)]  
  
 <span data-ttu-id="98097-134">Это позволяет `SampleObject` иметь дочерний элемент, который является другим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="98097-134">This allows `SampleObject` to have a child that is another instance of itself.</span></span> <span data-ttu-id="98097-135">Следующий код заполняет граф объектов:</span><span class="sxs-lookup"><span data-stu-id="98097-135">The following code fills in the object graph:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)]  
  
 <span data-ttu-id="98097-136">При сериализации `root` будут использоваться четыре сериализатора: один корневой сериализатор, один сериализатор для дочернего `SampleObject`, один сериализатор для `int`и один сериализатор для `string`.</span><span class="sxs-lookup"><span data-stu-id="98097-136">When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`.</span></span> <span data-ttu-id="98097-137">Сериализаторы кэшируются на основе типа, поэтому нет необходимости создавать сериализаторы для каждого экземпляра `SampleObject`.</span><span class="sxs-lookup"><span data-stu-id="98097-137">Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`.</span></span>  
  
 <span data-ttu-id="98097-138">Класс <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> основан на идее сеанса сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-138">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session.</span></span> <span data-ttu-id="98097-139">Сеанс сохраняет состояние, к которому могут обращаться различные сериализаторы.</span><span class="sxs-lookup"><span data-stu-id="98097-139">A session maintains state that can be accessed by the various serializers.</span></span> <span data-ttu-id="98097-140">При удалении сеанса это состояние уничтожается.</span><span class="sxs-lookup"><span data-stu-id="98097-140">When a session is disposed, this state is destroyed.</span></span> <span data-ttu-id="98097-141">Это позволяет гарантировать, что сериализаторы остаются в основном без отслеживания состояния, и помогает очищать сериализаторы, которые были повреждены.</span><span class="sxs-lookup"><span data-stu-id="98097-141">This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.</span></span> <span data-ttu-id="98097-142">В следующих таблицах описывается управление состоянием в и между сеансами.</span><span class="sxs-lookup"><span data-stu-id="98097-142">The following tables describe how state is managed in and among sessions.</span></span>  
  
## <a name="global-state"></a><span data-ttu-id="98097-143">Глобальное состояние</span><span class="sxs-lookup"><span data-stu-id="98097-143">Global State</span></span>  
 <span data-ttu-id="98097-144">Это состояние принадлежит объекту диспетчера сериализации, но не зависит от текущего сеанса сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-144">This state is owned by the serialization manager object, but is independent of the current serialization session.</span></span>  
  
|<span data-ttu-id="98097-145">Object</span><span class="sxs-lookup"><span data-stu-id="98097-145">Object</span></span>|<span data-ttu-id="98097-146">Использование</span><span class="sxs-lookup"><span data-stu-id="98097-146">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="98097-147">Поставщики сериализации</span><span class="sxs-lookup"><span data-stu-id="98097-147">Serialization providers</span></span>|<span data-ttu-id="98097-148">Объекты могут добавлять себя в качестве пользовательских поставщиков сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-148">Objects can add themselves as custom serialization providers.</span></span> <span data-ttu-id="98097-149">Поскольку эти поставщики используются для нахождение сериализаторов, они разрабатывают сеанс сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-149">Because these providers are used to locate serializers, they outlive a serialization session.</span></span>|  
  
## <a name="session-owned-state"></a><span data-ttu-id="98097-150">Состояние, принадлежащее сеансу</span><span class="sxs-lookup"><span data-stu-id="98097-150">Session-Owned State</span></span>  
 <span data-ttu-id="98097-151">Это состояние принадлежит сеансу и уничтожается при уничтожении сеанса.</span><span class="sxs-lookup"><span data-stu-id="98097-151">This state is owned by a session and is destroyed when a session is destroyed.</span></span> <span data-ttu-id="98097-152">Следовательно, если диспетчер сериализации не находится в активном сеансе, то при доступе к любым свойствам или методам, которые работали с этим состоянием, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="98097-152">Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.</span></span>  
  
|<span data-ttu-id="98097-153">Object</span><span class="sxs-lookup"><span data-stu-id="98097-153">Object</span></span>|<span data-ttu-id="98097-154">Использование</span><span class="sxs-lookup"><span data-stu-id="98097-154">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="98097-155">Событие<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName></span><span class="sxs-lookup"><span data-stu-id="98097-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event</span></span>|<span data-ttu-id="98097-156">Событие <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> присоединяется сериализатором для предоставления дополнительного разрешения имен.</span><span class="sxs-lookup"><span data-stu-id="98097-156">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names.</span></span> <span data-ttu-id="98097-157">После завершения сеанса все обработчики отсоединяются от этого события.</span><span class="sxs-lookup"><span data-stu-id="98097-157">All handlers are detached from this event when a session terminates.</span></span>|  
|<span data-ttu-id="98097-158">Событие<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete></span><span class="sxs-lookup"><span data-stu-id="98097-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event</span></span>|<span data-ttu-id="98097-159">Событие <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> возникает непосредственно перед ликвидацией сеанса.</span><span class="sxs-lookup"><span data-stu-id="98097-159">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed.</span></span> <span data-ttu-id="98097-160">Затем все обработчики отсоединяются от этого события.</span><span class="sxs-lookup"><span data-stu-id="98097-160">Then, all handlers are detached from this event.</span></span>|  
|<span data-ttu-id="98097-161">Таблица имен</span><span class="sxs-lookup"><span data-stu-id="98097-161">Name table</span></span>|<span data-ttu-id="98097-162">Диспетчер сериализации поддерживает таблицу, сопоставленную между объектами и их именами.</span><span class="sxs-lookup"><span data-stu-id="98097-162">The serialization manager maintains a table that maps between objects and their names.</span></span> <span data-ttu-id="98097-163">Сериализаторы могут предоставлять имена объектов для простоты идентификации.</span><span class="sxs-lookup"><span data-stu-id="98097-163">Serializers may give objects names for easy identification.</span></span> <span data-ttu-id="98097-164">Эта таблица имен удаляется после завершения сеанса.</span><span class="sxs-lookup"><span data-stu-id="98097-164">This name table is cleared when the session terminates.</span></span>|  
|<span data-ttu-id="98097-165">Кэш сериализатора</span><span class="sxs-lookup"><span data-stu-id="98097-165">Serializer cache</span></span>|<span data-ttu-id="98097-166">Диспетчер сериализации поддерживает кэш сериализаторов, которые он запросил.</span><span class="sxs-lookup"><span data-stu-id="98097-166">The serialization manager maintains a cache of serializers it has been asked to supply.</span></span> <span data-ttu-id="98097-167">Этот кэш удаляется после завершения сеанса.</span><span class="sxs-lookup"><span data-stu-id="98097-167">This cache is cleared when the session terminates.</span></span> <span data-ttu-id="98097-168">Метод public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> можно безопасно вызывать в любое время, но его значение кэшируется только в том случае, если оно вызывается из сеанса.</span><span class="sxs-lookup"><span data-stu-id="98097-168">The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.</span></span>|  
|<span data-ttu-id="98097-169">Стек контекста</span><span class="sxs-lookup"><span data-stu-id="98097-169">Context stack</span></span>|<span data-ttu-id="98097-170">Диспетчер сериализации поддерживает объект, называемый стеком контекста, к которому можно получить доступ со свойством <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>.</span><span class="sxs-lookup"><span data-stu-id="98097-170">The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property.</span></span> <span data-ttu-id="98097-171">Сериализаторы могут использовать этот стек для хранения дополнительных сведений, доступных другим сериализаторам.</span><span class="sxs-lookup"><span data-stu-id="98097-171">Serializers can use this stack to store additional information that is available to other serializers.</span></span> <span data-ttu-id="98097-172">Например, сериализатор, который сериализует значение свойства, может отправить имя свойства в стеке сериализации, прежде чем запрашивать значение для сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-172">For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.</span></span> <span data-ttu-id="98097-173">Этот стек удаляется после завершения сеанса.</span><span class="sxs-lookup"><span data-stu-id="98097-173">This stack is cleared when the session is terminated.</span></span>|  
|<span data-ttu-id="98097-174">Список ошибок</span><span class="sxs-lookup"><span data-stu-id="98097-174">Error list</span></span>|<span data-ttu-id="98097-175">Диспетчер сериализации поддерживает список ошибок, произошедших во время сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-175">The serialization manager maintains a list of errors that occurred during serialization.</span></span> <span data-ttu-id="98097-176">Этот список, доступ к которому осуществляется через свойство <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>, удаляется после завершения сеанса.</span><span class="sxs-lookup"><span data-stu-id="98097-176">This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated.</span></span> <span data-ttu-id="98097-177">Доступ к свойству <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> между сеансами приведет к исключению.</span><span class="sxs-lookup"><span data-stu-id="98097-177">Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98097-178">Инициализация нового экземпляра класса <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</span><span class="sxs-lookup"><span data-stu-id="98097-178">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98097-179">Инициализация нового экземпляра класса <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</span><span class="sxs-lookup"><span data-stu-id="98097-179">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-180">Этот конструктор задает для свойств <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> и <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="98097-180">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.DesignerSerializationManager : IServiceProvider -&gt; System.ComponentModel.Design.Serialization.DesignerSerializationManager" Usage="new System.ComponentModel.Design.Serialization.DesignerSerializationManager provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="98097-181"><see cref="T:System.IServiceProvider" />.</span><span class="sxs-lookup"><span data-stu-id="98097-181">An <see cref="T:System.IServiceProvider" />.</span></span></param>
        <summary><span data-ttu-id="98097-182">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> с заданным поставщиком служб.</span><span class="sxs-lookup"><span data-stu-id="98097-182">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-183">Если сериализатор запрашивает службы, которые не могут быть удовлетворены диспетчером сериализации, то реализация по умолчанию пересылает эти запросы параметру `provider`.</span><span class="sxs-lookup"><span data-stu-id="98097-183">If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the `provider` parameter.</span></span>  
  
 <span data-ttu-id="98097-184">Этот конструктор задает для свойств <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> и <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="98097-184">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98097-185">Свойство <paramref name="provider" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98097-185"><paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberSignature Language="VB.NET" Value="Public Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); void set(System::ComponentModel::IContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98097-186">Возвращает или задает контейнер для данного диспетчера сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-186">Gets or sets to the container for this serialization manager.</span></span></summary>
        <value><span data-ttu-id="98097-187">Контейнер <see cref="T:System.ComponentModel.IContainer" />, в который диспетчер сериализации добавит компоненты.</span><span class="sxs-lookup"><span data-stu-id="98097-187">The <see cref="T:System.ComponentModel.IContainer" /> to which the serialization manager will add components.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-188">Если контейнер существует, все компоненты, созданные диспетчером сериализации, будут добавлены в контейнер.</span><span class="sxs-lookup"><span data-stu-id="98097-188">If a container exists, all components that are created by the serialization manager will be added to the container.</span></span> <span data-ttu-id="98097-189">Реализация этого свойства по умолчанию будет искать в поставщике службы <xref:System.ComponentModel.Design.IDesignerHost> и использовать контейнер, предоставленный узлом конструктора, должен существовать.</span><span class="sxs-lookup"><span data-stu-id="98097-189">The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist.</span></span> <span data-ttu-id="98097-190">В противном случае это свойство возвращает `null` и никакие компоненты не добавляются в контейнер.</span><span class="sxs-lookup"><span data-stu-id="98097-190">Otherwise, this property will return `null` and no components will be added to a container.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-191">Диспетчер сериализации в активном сеансе сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-191">The serialization manager has an active serialization session.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj&#xA;override this.CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj" Usage="designerSerializationManager.CreateInstance (type, arguments, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="98097-192">Тип создаваемого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="98097-192">The type to create an instance of.</span></span></param>
        <param name="arguments"><span data-ttu-id="98097-193">Параметры конструктора типа.</span><span class="sxs-lookup"><span data-stu-id="98097-193">The parameters of the type's constructor.</span></span> <span data-ttu-id="98097-194">Для вызова конструктора без параметров возможно значение <see langword="null" /> или пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="98097-194">This can be <see langword="null" /> or an empty collection to invoke the parameterless constructor.</span></span></param>
        <param name="name"><span data-ttu-id="98097-195">Имя объекта.</span><span class="sxs-lookup"><span data-stu-id="98097-195">A name to give the object.</span></span> <span data-ttu-id="98097-196">Если значение <see langword="null" />, объекту не будет задано имя, пока объект не будет добавлен в контейнер, где ему будет назначено имя.</span><span class="sxs-lookup"><span data-stu-id="98097-196">If <see langword="null" />, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="98097-197">Значение <see langword="true" /> для добавления объекта в контейнер, если объект реализует <see cref="T:System.ComponentModel.IComponent" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98097-197"><see langword="true" /> to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="98097-198">Создает экземпляр типа.</span><span class="sxs-lookup"><span data-stu-id="98097-198">Creates an instance of a type.</span></span></summary>
        <returns><span data-ttu-id="98097-199">Новый экземпляр типа, указанного <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="98097-199">A new instance of the type specified by <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-200">Этот метод вызывается сериализаторами при попытке создать экземпляр типа.</span><span class="sxs-lookup"><span data-stu-id="98097-200">This method is called by serializers when they attempt to create an instance of a type.</span></span> <span data-ttu-id="98097-201">Реализация по умолчанию создает новый экземпляр типа или может возвращать существующий экземпляр в зависимости от значений свойств <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> и <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>.</span><span class="sxs-lookup"><span data-stu-id="98097-201">The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties.</span></span> <span data-ttu-id="98097-202">Метод <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> использует отражение для создания экземпляров и будет выполнять некоторые универсальные преобразования <xref:System.IConvertible> параметров для поиска соответствующего конструктора.</span><span class="sxs-lookup"><span data-stu-id="98097-202">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="98097-203">Параметр <paramref name="type" /> не имеет конструктора, который принимает параметры, содержащиеся в <paramref name="arguments" />.</span><span class="sxs-lookup"><span data-stu-id="98097-203"><paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public IDisposable CreateSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable CreateSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSession () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ CreateSession();" />
      <MemberSignature Language="F#" Value="member this.CreateSession : unit -&gt; IDisposable" Usage="designerSerializationManager.CreateSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98097-204">Создает новый сеанс сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-204">Creates a new serialization session.</span></span></summary>
        <returns><span data-ttu-id="98097-205">Объект <see cref="T:System.IDisposable" /> представляет новый сеанс сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-205">An <see cref="T:System.IDisposable" /> that represents a new serialization session.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-206">Большинство данных в диспетчере сериализации являются временными и существуют только в течение сеанса сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-206">Most data within the serialization manager is transient and only lives for the life of a serialization session.</span></span> <span data-ttu-id="98097-207">При удалении сеанса считается, что сериализация завершена и переходное состояние снимается.</span><span class="sxs-lookup"><span data-stu-id="98097-207">When a session is disposed, serialization is considered to be complete and this transient state is cleared.</span></span> <span data-ttu-id="98097-208">Это позволяет использовать один экземпляр диспетчера сериализации для сериализации нескольких деревьев объектов.</span><span class="sxs-lookup"><span data-stu-id="98097-208">This allows a single instance of a serialization manager to be used to serialize multiple object trees.</span></span> <span data-ttu-id="98097-209">Некоторые состояния, включая поставщика услуг и пользовательские поставщики сериализации, добавленные в Диспетчер сериализации, охватывают сеансы.</span><span class="sxs-lookup"><span data-stu-id="98097-209">Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-210">Диспетчер сериализации уже находится в сеансе.</span><span class="sxs-lookup"><span data-stu-id="98097-210">The serialization manager is already within a session.</span></span> <span data-ttu-id="98097-211">Эта версия <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> не поддерживает одновременные сеансы.</span><span class="sxs-lookup"><span data-stu-id="98097-211">This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.IList Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Errors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Errors { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.IList" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98097-212">Возвращает список ошибок, которые возникли в процессе сериализации или десериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-212">Gets the list of errors that occurred during serialization or deserialization.</span></span></summary>
        <value><span data-ttu-id="98097-213">Список ошибок, которые возникли в процессе сериализации или десериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-213">The list of errors that occurred during serialization or deserialization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-214">Список ошибок можно считать только в том случае, если сеанс сериализации активен.</span><span class="sxs-lookup"><span data-stu-id="98097-214">You can only read the error list while a serialization session is active.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-215">Доступ к данному свойству получен за пределами сеанса сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-215">This property was accessed outside of a serialization session.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetRuntimeType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeType : string -&gt; Type" Usage="designerSerializationManager.GetRuntimeType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="98097-216">Имя получаемого типа.</span><span class="sxs-lookup"><span data-stu-id="98097-216">The name of the type to get.</span></span></param>
        <summary><span data-ttu-id="98097-217">Получает тип, соответствующий указанному имени типа.</span><span class="sxs-lookup"><span data-stu-id="98097-217">Gets the type corresponding to the specified type name.</span></span></summary>
        <returns><span data-ttu-id="98097-218">Указанный тип.</span><span class="sxs-lookup"><span data-stu-id="98097-218">The specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : Type * Type -&gt; obj" Usage="designerSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="98097-219">Тип объекта, для которого загружается сериализатор.</span><span class="sxs-lookup"><span data-stu-id="98097-219">The type of object for which to retrieve the serializer.</span></span></param>
        <param name="serializerType"><span data-ttu-id="98097-220">Тип загружаемого сериализатора.</span><span class="sxs-lookup"><span data-stu-id="98097-220">The type of serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="98097-221">Задает сериализатор для указанного типа объекта.</span><span class="sxs-lookup"><span data-stu-id="98097-221">Gets the serializer for the given object type.</span></span></summary>
        <returns><span data-ttu-id="98097-222">Сериализатор для типа <paramref name="objectType" /> или значение <see langword="null" />, если он не найден.</span><span class="sxs-lookup"><span data-stu-id="98097-222">The serializer for <paramref name="objectType" />, or <see langword="null" />, if not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-223">Вы можете запросить тип сериализатора, который вы хотите.</span><span class="sxs-lookup"><span data-stu-id="98097-223">You can request the type of serializer you would like.</span></span> <span data-ttu-id="98097-224">Этот метод возвращает `null`, если не существует сериализатора запрошенного типа для указанного типа объекта.</span><span class="sxs-lookup"><span data-stu-id="98097-224">This method returns `null` if there is no serializer of the requested type for the specified object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98097-225">Параметр <paramref name="objectType" /> или <paramref name="serializerType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98097-225"><paramref name="objectType" /> or <paramref name="serializerType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designerSerializationManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="98097-226">Тип возвращаемой службы.</span><span class="sxs-lookup"><span data-stu-id="98097-226">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="98097-227">Возвращает запрашиваемую службу.</span><span class="sxs-lookup"><span data-stu-id="98097-227">Gets the requested service.</span></span></summary>
        <returns><span data-ttu-id="98097-228">Запрашиваемая служба или значение <see langword="null" />, если не удается разрешить службу.</span><span class="sxs-lookup"><span data-stu-id="98097-228">The requested service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-229">Метод <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> предоставляет доступ к базовому контейнеру или поставщику службы, заданному в конструкторе.</span><span class="sxs-lookup"><span data-stu-id="98097-229">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="protected virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="designerSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="98097-230">Имя загружаемого типа.</span><span class="sxs-lookup"><span data-stu-id="98097-230">The name of the type to retrieve.</span></span></param>
        <summary><span data-ttu-id="98097-231">Возвращает требуемый тип.</span><span class="sxs-lookup"><span data-stu-id="98097-231">Gets the requested type.</span></span></summary>
        <returns><span data-ttu-id="98097-232">Запрашиваемый тип или значение <see langword="null" />, если не удается разрешить тип.</span><span class="sxs-lookup"><span data-stu-id="98097-232">The requested type, or <see langword="null" /> if the type cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-233">Метод <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> будет искать в поставщике службы <xref:System.ComponentModel.Design.ITypeResolutionService> и, если он доступен, он делегирует эту службу для разрешения типа.</span><span class="sxs-lookup"><span data-stu-id="98097-233">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type.</span></span> <span data-ttu-id="98097-234">Если <xref:System.ComponentModel.Design.ITypeResolutionService> недоступен, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> будет вызывать метод <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="98097-234">If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveName">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveName (e As ResolveNameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveName(System::ComponentModel::Design::Serialization::ResolveNameEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit&#xA;override this.OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit" Usage="designerSerializationManager.OnResolveName e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="98097-235">Объект <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="98097-235">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="98097-236">Порождает событие <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />.</span><span class="sxs-lookup"><span data-stu-id="98097-236">Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-237">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="98097-237">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="98097-238">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="98097-238">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="98097-239">Метод <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="98097-239">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="98097-240">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="98097-240">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98097-241">При переопределении <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> в производном классе обязательно вызовите метод базового класса "<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />, чтобы зарегистрированные делегаты получили событие.</span><span class="sxs-lookup"><span data-stu-id="98097-241">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionCreated : EventArgs -&gt; unit&#xA;override this.OnSessionCreated : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="98097-242">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="98097-242">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="98097-243">Порождает событие <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />.</span><span class="sxs-lookup"><span data-stu-id="98097-243">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-244">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="98097-244">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="98097-245">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="98097-245">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="98097-246">Метод <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="98097-246">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="98097-247">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="98097-247">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98097-248">При переопределении <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> в производном классе обязательно вызовите метод базового класса "<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />, чтобы зарегистрированные делегаты получили событие.</span><span class="sxs-lookup"><span data-stu-id="98097-248">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionDisposed">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionDisposed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionDisposed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionDisposed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionDisposed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionDisposed : EventArgs -&gt; unit&#xA;override this.OnSessionDisposed : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionDisposed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="98097-249">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="98097-249">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="98097-250">Порождает событие <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />.</span><span class="sxs-lookup"><span data-stu-id="98097-250">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-251">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="98097-251">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="98097-252">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="98097-252">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="98097-253">Метод <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="98097-253">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="98097-254">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="98097-254">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98097-255">При переопределении <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> в производном классе обязательно вызовите метод базового класса "<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />, чтобы зарегистрированные делегаты получили событие.</span><span class="sxs-lookup"><span data-stu-id="98097-255">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PreserveNames">
      <MemberSignature Language="C#" Value="public bool PreserveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNames" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNames { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveNames : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98097-256">Возвращает или задает значение, указывающее на то, выполнять ли методу <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> проверку на наличие заданных имен в контейнере.</span><span class="sxs-lookup"><span data-stu-id="98097-256">Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</span></span></summary>
        <value><span data-ttu-id="98097-257">Значение <see langword="true" />, если метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> передаст заданное имя компонента; значение <see langword="false" />, если метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> проверит наличие заданных имен в контейнере.</span><span class="sxs-lookup"><span data-stu-id="98097-257"><see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will pass the given component name; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="98097-258">Значение по умолчанию: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="98097-258">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-259">Свойство <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> определяет поведение метода <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="98097-259">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span> <span data-ttu-id="98097-260">Если `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> передаст указанное имя компонента.</span><span class="sxs-lookup"><span data-stu-id="98097-260">If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name.</span></span> <span data-ttu-id="98097-261">Если `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> будет проверять наличие заданного имени в контейнере.</span><span class="sxs-lookup"><span data-stu-id="98097-261">If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="98097-262">Если имя не существует в контейнере, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> будет использовать заданное имя.</span><span class="sxs-lookup"><span data-stu-id="98097-262">If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name.</span></span> <span data-ttu-id="98097-263">Если имя существует в контейнере, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> передаст значение NULL в качестве имени компонента при его добавлении в контейнер, тем самым присваивая ему новое имя.</span><span class="sxs-lookup"><span data-stu-id="98097-263">If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.</span></span> <span data-ttu-id="98097-264">Второй вариант полезен для реализации сериализатора, который всегда дублирует объекты, а не предполагает, что эти объекты не существуют.</span><span class="sxs-lookup"><span data-stu-id="98097-264">This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.</span></span> <span data-ttu-id="98097-265">Команды вставки часто используют этот тип сериализатора.</span><span class="sxs-lookup"><span data-stu-id="98097-265">Paste commands often use this type of serializer.</span></span>  
  
 <span data-ttu-id="98097-266">Это свойство можно изменить только в том случае, если вы не используете сеанс сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-266">You can only change this property when you are not in a serialization session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-267">Это свойство было изменено вне сеанса сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-267">This property was changed from within a serialization session.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="public object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyProvider : obj with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98097-268">Возвращает объект, используемый для предоставления свойств для свойства диспетчера сериализации <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</span><span class="sxs-lookup"><span data-stu-id="98097-268">Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span></span></summary>
        <value><span data-ttu-id="98097-269">Объект, используемый для предоставления свойств для свойства диспетчера сериализации <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</span><span class="sxs-lookup"><span data-stu-id="98097-269">The object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-270">Свойство <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> позволяет предоставить диспетчеру сериализации набор свойств сериализации, которые сериализаторы могут использовать для указания их поведения.</span><span class="sxs-lookup"><span data-stu-id="98097-270">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.</span></span>  
  
 <span data-ttu-id="98097-271">Открытые свойства этого объекта будут проверены и упакованы в новые дескрипторы свойств, имеющие целевой объект диспетчера сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-271">This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecycleInstances">
      <MemberSignature Language="C#" Value="public bool RecycleInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecycleInstances" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property RecycleInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecycleInstances { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecycleInstances : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98097-272">Получает или задает значение для обозначения, будет ли метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> всегда создавать новый экземпляр типа.</span><span class="sxs-lookup"><span data-stu-id="98097-272">Gets or sets a value that indicates whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type.</span></span></summary>
        <value><span data-ttu-id="98097-273">Значение <see langword="true" />, если метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> возвращает существующий экземпляр; значение <see langword="false" />, если метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> создает новый экземпляр типа.</span><span class="sxs-lookup"><span data-stu-id="98097-273"><see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will return the existing instance; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will create a new instance of a type.</span></span> <span data-ttu-id="98097-274">Значение по умолчанию: <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98097-274">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-275">Если свойство <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> имеет значение `false`, то метод <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> всегда будет создавать новый экземпляр типа.</span><span class="sxs-lookup"><span data-stu-id="98097-275">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type.</span></span> <span data-ttu-id="98097-276">Если <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> сначала будет искать в таблице имен и контейнере объект с тем же именем.</span><span class="sxs-lookup"><span data-stu-id="98097-276">If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name.</span></span> <span data-ttu-id="98097-277">Если такой объект существует и имеет тот же тип, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> возвратит существующий экземпляр.</span><span class="sxs-lookup"><span data-stu-id="98097-277">If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance.</span></span> <span data-ttu-id="98097-278">Второй вариант полезен для реализации сериализатора, который применяет состояние сериализации к существующему набору объектов, а не всегда создает новое дерево.</span><span class="sxs-lookup"><span data-stu-id="98097-278">This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.</span></span> <span data-ttu-id="98097-279">Команда **Undo** часто использует этот тип сериализатора.</span><span class="sxs-lookup"><span data-stu-id="98097-279">The **Undo** command often uses this type of serializer.</span></span>  
  
 <span data-ttu-id="98097-280">В случае, когда свойство <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> `true`, свойство <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> будет дополнительно изменять поведение <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> в зависимости от типов двух объектов.</span><span class="sxs-lookup"><span data-stu-id="98097-280">In the case where the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property will further modify the behavior of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> depending on the types of the two objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-281">Диспетчер сериализации в активном сеансе сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-281">The serialization manager has an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="SessionCreated">
      <MemberSignature Language="C#" Value="public event EventHandler SessionCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionCreated : EventHandler " Usage="member this.SessionCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98097-282">Происходит при создании сеанса.</span><span class="sxs-lookup"><span data-stu-id="98097-282">Occurs when a session is created.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionDisposed">
      <MemberSignature Language="C#" Value="public event EventHandler SessionDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionDisposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionDisposed;" />
      <MemberSignature Language="F#" Value="member this.SessionDisposed : EventHandler " Usage="member this.SessionDisposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98097-283">Происходит при завершении сеанса.</span><span class="sxs-lookup"><span data-stu-id="98097-283">Occurs when a session is disposed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub AddSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.AddSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::AddSerializationProvider;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="98097-284">Добавляемый поставщик сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-284">The serialization provider to add.</span></span></param>
        <summary><span data-ttu-id="98097-285">Добавляет диспетчеру сериализации пользовательский поставщик сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-285">Adds a custom serialization provider to the serialization manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-286">Когда для запроса поставщика сериализации используется метод <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>, диспетчер сериализации сначала запрашивает пользовательские поставщики сериализации, прежде чем искать метаданные типа для соответствующего сериализатора.</span><span class="sxs-lookup"><span data-stu-id="98097-286">When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Context As ContextStack Implements IDesignerSerializationManager.Context" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::Serialization::ContextStack ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98097-287">Задает стек контекста для этого сеанса сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-287">Gets the context stack for this serialization session.</span></span></summary>
        <value><span data-ttu-id="98097-288">Класс <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />, где хранятся данные.</span><span class="sxs-lookup"><span data-stu-id="98097-288">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-289">Стек контекста предоставляет определяемую пользователем область хранения, реализованную в виде стека.</span><span class="sxs-lookup"><span data-stu-id="98097-289">A context stack provides a user-defined storage area, implemented as a stack.</span></span> <span data-ttu-id="98097-290">Эта область хранения является удобным способом обеспечения взаимодействия между сериализаторами, так как сериализация является обычным иерархическим процессом.</span><span class="sxs-lookup"><span data-stu-id="98097-290">This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-291">Доступ к данному свойству получен за пределами сеанса сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-291">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="98097-292">Создаваемый тип данных.</span><span class="sxs-lookup"><span data-stu-id="98097-292">The data type to create.</span></span></param>
        <param name="arguments"><span data-ttu-id="98097-293">Аргументы, передаваемые конструктору для данного типа.</span><span class="sxs-lookup"><span data-stu-id="98097-293">The arguments to pass to the constructor for this type.</span></span></param>
        <param name="name"><span data-ttu-id="98097-294">Имя объекта.</span><span class="sxs-lookup"><span data-stu-id="98097-294">The name of the object.</span></span> <span data-ttu-id="98097-295">Это имя используется для доступа к объекту через класс <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="98097-295">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span></span> <span data-ttu-id="98097-296">Если передается значение <see langword="null" />, объект создается, но к нему нельзя получить доступ по имени.</span><span class="sxs-lookup"><span data-stu-id="98097-296">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="98097-297">Значение <see langword="true" /> для добавления этого объекта в контейнер конструктора.</span><span class="sxs-lookup"><span data-stu-id="98097-297"><see langword="true" /> to add this object to the design container.</span></span> <span data-ttu-id="98097-298">Для этого объект должен реализовать класс <see cref="T:System.ComponentModel.IComponent" />.</span><span class="sxs-lookup"><span data-stu-id="98097-298">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span></span></param>
        <summary><span data-ttu-id="98097-299">Реализует метод <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="98097-299">Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="98097-300">Только что созданный экземпляр объекта.</span><span class="sxs-lookup"><span data-stu-id="98097-300">The newly created object instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98097-301">Имя получаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="98097-301">The name of the object to retrieve.</span></span></param>
        <summary><span data-ttu-id="98097-302">Извлекает экземпляр созданного объекта с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="98097-302">Retrieves an instance of a created object of the specified name.</span></span></summary>
        <returns><span data-ttu-id="98097-303">Экземпляр объекта с заданным именем либо значение <see langword="null" />, если не удается найти объект с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="98097-303">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98097-304">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98097-304"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-305">Доступ к данному свойству получен за пределами сеанса сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-305">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="98097-306">Объект, для которого загружается имя.</span><span class="sxs-lookup"><span data-stu-id="98097-306">The object for which to retrieve the name.</span></span></param>
        <summary><span data-ttu-id="98097-307">Загружает имя для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="98097-307">Retrieves a name for the specified object.</span></span></summary>
        <returns><span data-ttu-id="98097-308">Имя объекта или значение <see langword="null" />, если у объекта нет имени.</span><span class="sxs-lookup"><span data-stu-id="98097-308">The name of the object, or <see langword="null" /> if the object is unnamed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-309">Если методу <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> не удается найти соответствующее имя для параметра `value`, он вызывает событие <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> перед возвратом `null`.</span><span class="sxs-lookup"><span data-stu-id="98097-309">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method cannot find a corresponding name for the `value` parameter, it raises the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event before it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98097-310">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98097-310"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-311">Доступ к данному свойству получен за пределами сеанса сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-311">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetSerializer (objectType As Type, serializerType As Type) As Object Implements IDesignerSerializationManager.GetSerializer" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type ^ objectType, Type ^ serializerType) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetSerializer;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="98097-312">Тип объекта, для которого получается сериализатор.</span><span class="sxs-lookup"><span data-stu-id="98097-312">The type of the object to get the serializer for.</span></span></param>
        <param name="serializerType"><span data-ttu-id="98097-313">Тип загружаемого сериализатора.</span><span class="sxs-lookup"><span data-stu-id="98097-313">The type of the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="98097-314">Получает сериализатор запрошенного типа для указанного типа объекта.</span><span class="sxs-lookup"><span data-stu-id="98097-314">Gets a serializer of the requested type for the specified object type.</span></span></summary>
        <returns><span data-ttu-id="98097-315">Экземпляр запрошенного типа или значение <see langword="null" />, если не удается найти соответствующий сериализатор.</span><span class="sxs-lookup"><span data-stu-id="98097-315">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType">
      <MemberSignature Language="C#" Value="Type IDesignerSerializationManager.GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetType (typeName As String) As Type Implements IDesignerSerializationManager.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System::String ^ typeName) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="98097-316">Полное имя загружаемого типа.</span><span class="sxs-lookup"><span data-stu-id="98097-316">The fully qualified name of the type to load.</span></span></param>
        <summary><span data-ttu-id="98097-317">Возвращает тип указанного имени.</span><span class="sxs-lookup"><span data-stu-id="98097-317">Gets a type of the specified name.</span></span></summary>
        <returns><span data-ttu-id="98097-318">Экземпляр типа или значение <see langword="null" />, если не удается загрузить тип.</span><span class="sxs-lookup"><span data-stu-id="98097-318">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-319">Доступ к данному свойству получен за пределами сеанса сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-319">This property was accessed outside of a serialization session.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98097-320">Реализует свойство <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</span><span class="sxs-lookup"><span data-stu-id="98097-320">Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span></span></summary>
        <value><span data-ttu-id="98097-321">Класс <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, содержащий свойства, подлежащие сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-321">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.RemoveSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::RemoveSerializationProvider;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="98097-322">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> для удаления.</span><span class="sxs-lookup"><span data-stu-id="98097-322">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span></span></param>
        <summary><span data-ttu-id="98097-323">Удаляет поставщика сериализации, который был добавлен ранее.</span><span class="sxs-lookup"><span data-stu-id="98097-323">Removes a previously added serialization provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-324">Метод <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> удаляет пользовательский поставщик сериализации, который ранее был добавлен с помощью вызова метода <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A>.</span><span class="sxs-lookup"><span data-stu-id="98097-324">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub ReportError (errorInformation As Object) Implements IDesignerSerializationManager.ReportError" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System::Object ^ errorInformation) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::ReportError;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation"><span data-ttu-id="98097-325">Объект, содержащий информацию об ошибках, обычно является типом <see cref="T:System.String" /> или <see cref="T:System.Exception" />.</span><span class="sxs-lookup"><span data-stu-id="98097-325">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</span></span></param>
        <summary><span data-ttu-id="98097-326">Используется для создания сообщений об обратимых ошибках в процессе сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-326">Used to report a recoverable error in serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-327">Сериализаторы могут быть написаны для корректной обработке восстанавливаемых ошибок путем вызова метода <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> со сведениями об ошибке.</span><span class="sxs-lookup"><span data-stu-id="98097-327">Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information.</span></span> <span data-ttu-id="98097-328">Диспетчер сериализации может поддерживать вывод списка ошибок после его завершения или вызывать исключение из этого метода и прерывать процесс сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-328">The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.</span></span> <span data-ttu-id="98097-329">После вызова этой функции необходимо продолжить выполнение сериализатора.</span><span class="sxs-lookup"><span data-stu-id="98097-329">The serializer should continue after calling this function.</span></span>  
  
 <span data-ttu-id="98097-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> добавляет параметр `errorInformation` в коллекцию <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>.</span><span class="sxs-lookup"><span data-stu-id="98097-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection.</span></span> <span data-ttu-id="98097-331">Если `errorInformation` `null`, никакие действия не предпринимаются.</span><span class="sxs-lookup"><span data-stu-id="98097-331">If `errorInformation` is `null`, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-332">Доступ к данному свойству получен за пределами сеанса сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-332">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName" />
      <MemberSignature Language="VB.NET" Value="Custom Event ResolveName As ResolveNameEventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98097-333">Возникает, если не удается найти заданное имя в таблице имен диспетчера сериализации с помощью метода <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="98097-333">Occurs when <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="98097-334">Событие `ResolveName` возникает при вызове метода <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A>, но ему не удается найти указанное имя в таблице имен диспетчера сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-334">The `ResolveName` event is raised when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method is called, but it fails to find the specified name in the serialization manager's name table.</span></span>

<span data-ttu-id="98097-335">Это событие позволяет сериализатору запрашивать создание объекта, поэтому сериализатору не нужно упорядочивать объект по зависимости.</span><span class="sxs-lookup"><span data-stu-id="98097-335">This event provides a way for a serializer to demand-create an object so the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="98097-336">Этот делегат удаляется сразу после завершения сериализации или десериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-336">This delegate is cleared immediately after serialization or deserialization is complete.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-337">У диспетчера сериализации нет активных сеансов сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-337">The serialization manager does not have an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Custom Event SerializationComplete As EventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98097-338">Возникает при завершении сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-338">Occurs when serialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="98097-339">Обычно процесс сериализации является однопотоковым и должен быть без отслеживания состояния.</span><span class="sxs-lookup"><span data-stu-id="98097-339">Typically the serialization process is single-threaded and should be stateless.</span></span> <span data-ttu-id="98097-340">Если эти характеристики не являются истинными, можно использовать событие <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>, чтобы упростить процесс Организации.</span><span class="sxs-lookup"><span data-stu-id="98097-340">When these characteristics are not true, the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event can be used to help to organize the process.</span></span> <span data-ttu-id="98097-341">Сериализатор может отвести журнал этого события, чтобы убедиться, что процесс сериализации завершен.</span><span class="sxs-lookup"><span data-stu-id="98097-341">A serializer can track this event to know that the serialization process is complete.</span></span>

<span data-ttu-id="98097-342">Например, в некоторых случаях сериализатору необходимо выполнить запись в другой файл, например в файл ресурсов.</span><span class="sxs-lookup"><span data-stu-id="98097-342">For example, sometimes a serializer needs to write to another file, such as a resource file.</span></span> <span data-ttu-id="98097-343">В этом случае будет неэффективно проектировать сериализатор, чтобы закрыть файл после его завершения, так как для сериализации графа объектов обычно требуется несколько сериализаторов. Таким образом, файл ресурсов будет открываться и закрываться несколько раз.</span><span class="sxs-lookup"><span data-stu-id="98097-343">In such a case, it would be inefficient to design the serializer to close the file when it is finished because serialization of an object graph generally requires several serializers; therefore, the resource file would be opened and closed many times.</span></span> <span data-ttu-id="98097-344">Вместо этого файл ресурсов можно получить с помощью объекта, отслеживающего событие <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>, и этот объект может закрыть файл ресурсов в конце сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-344">Instead, the resource file could be accessed through an object that tracked the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event, and that object could close the resource file at the end of serialization.</span></span>

<span data-ttu-id="98097-345">В связанном использовании это событие можно использовать для удаления временной службы, установленной в диспетчере сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-345">In a related use, this event can be used to remove a temporary service installed in the serialization manager.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-346">У диспетчера сериализации нет активных сеансов сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-346">The serialization manager does not have an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="98097-347">Объект, для которого задается имя.</span><span class="sxs-lookup"><span data-stu-id="98097-347">The object to set the name.</span></span></param>
        <param name="name"><span data-ttu-id="98097-348">Строка <see cref="T:System.String" />, используемая в качестве имени объекта.</span><span class="sxs-lookup"><span data-stu-id="98097-348">A <see cref="T:System.String" /> used as the name of the object.</span></span></param>
        <summary><span data-ttu-id="98097-349">Задает имя для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="98097-349">Sets the name for the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-350">Метод <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> предоставляет способ задания имени существующего объекта.</span><span class="sxs-lookup"><span data-stu-id="98097-350">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object.</span></span> <span data-ttu-id="98097-351">Это позволяет создать экземпляр объекта с помощью вызова метода <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A>, избегая издержек метода <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="98097-351">This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98097-352">Хотя бы один параметр имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98097-352">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="98097-353">У объекта, указанного экземпляром, уже есть имя, или имя <paramref name="name" /> уже используется другим именованным объектом.</span><span class="sxs-lookup"><span data-stu-id="98097-353">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-354">Доступ к данному свойству получен за пределами сеанса сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-354">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="98097-355">Объект, определяющий тип объекта службы, который необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="98097-355">An object that specifies the type of service object to get.</span></span></param>
        <summary><span data-ttu-id="98097-356">Описание этого элемента содержится в методе <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</span><span class="sxs-lookup"><span data-stu-id="98097-356">For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="98097-357">Объект обслуживания типа <paramref name="serviceType" />.</span><span class="sxs-lookup"><span data-stu-id="98097-357">A service object of type <paramref name="serviceType" />.</span></span>  
  
<span data-ttu-id="98097-358">-или-</span><span class="sxs-lookup"><span data-stu-id="98097-358">-or-</span></span> 
 <span data-ttu-id="98097-359">Значение <see langword="null" />, если отсутствует объект службы типа <paramref name="serviceType" />.</span><span class="sxs-lookup"><span data-stu-id="98097-359"><see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-360">Это член является явной реализацией члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="98097-360">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="98097-361">Он может использоваться, только если экземпляр <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> приведен к типу интерфейса <xref:System.IServiceProvider>.</span><span class="sxs-lookup"><span data-stu-id="98097-361">It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRecycledTypes">
      <MemberSignature Language="C#" Value="public bool ValidateRecycledTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateRecycledTypes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRecycledTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateRecycledTypes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRecycledTypes : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98097-362">Получает или задает значение, указывающее, будет ли метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> проверять то, что соответствующие имена относятся к одному и тому же типу.</span><span class="sxs-lookup"><span data-stu-id="98097-362">Gets or sets a value that indicates whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</span></span></summary>
        <value><span data-ttu-id="98097-363">Значение <see langword="true" />, если метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> проверяет типы; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98097-363"><see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifies types; otherwise, <see langword="false" /> if it does not.</span></span> <span data-ttu-id="98097-364">Значение по умолчанию: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="98097-364">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98097-365">Свойство <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> изменяет поведение метода <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>, когда свойство <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> `true`, как описано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="98097-365">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property modifies the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, as detailed in the following table.</span></span>  
  
|`RecycleInstances`|`ValidateRecycledTypes`|<span data-ttu-id="98097-366">Поведение `CreateInstance`</span><span class="sxs-lookup"><span data-stu-id="98097-366">Behavior of `CreateInstance`</span></span>|  
|------------------------|-----------------------------|----------------------------------|  
|`false`|<span data-ttu-id="98097-367">`true` или `false`</span><span class="sxs-lookup"><span data-stu-id="98097-367">`true` or `false`</span></span>|<span data-ttu-id="98097-368">Всегда создавать новый экземпляр указанного типа</span><span class="sxs-lookup"><span data-stu-id="98097-368">Always create a new instance of the specified type</span></span>|  
|`true`|`false`|<span data-ttu-id="98097-369">Если найден соответствующий экземпляр, он возвращается, независимо от его типа.</span><span class="sxs-lookup"><span data-stu-id="98097-369">If a matching instance is found it is returned, regardless of its type.</span></span>|  
|`true`|`true`|<span data-ttu-id="98097-370">Если найден соответствующий экземпляр, он возвращается только в том случае, если его тип совпадает с указанным в вызове метода.</span><span class="sxs-lookup"><span data-stu-id="98097-370">If a matching instance is found, it is returned only if its type is the same as specified in the method call.</span></span>|  
  
 <span data-ttu-id="98097-371"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> удобно использовать для преобразования одного типа объекта в другой, если они имеют похожие свойства, но не имеют общего родителя или интерфейса.</span><span class="sxs-lookup"><span data-stu-id="98097-371"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98097-372">Диспетчер сериализации в активном сеансе сериализации.</span><span class="sxs-lookup"><span data-stu-id="98097-372">The serialization manager has an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      </Docs>
    </Member>
  </Members>
</Type>
