<Type Name="IDesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0990189131b4a8327f8969b14f8778dfa0e1c7c3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69331042" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerSerializationManager : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerSerializationManager implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerSerializationManager&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerSerializationManager : IServiceProvider" />
  <TypeSignature Language="F#" Value="type IDesignerSerializationManager = interface&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b7fe8-101">Предоставляет интерфейс для управления сериализацией во время разработки.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-101">Provides an interface that can manage design-time serialization.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fe8-102">Конструктор может использовать <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> для доступа к службам, удобным для управления процессами сериализации во время разработки.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-102">A designer can utilize <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to access services useful to managing design-time serialization processes.</span></span> <span data-ttu-id="b7fe8-103">Например, класс, реализующий диспетчер сериализации конструктора, может использовать этот интерфейс для создания объектов, поиска типов, обнаружения объектов и настройки сериализации определенных типов.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-103">For example, a class that implements the designer serialization manager can use this interface to create objects, look up types, identify objects, and customize the serialization of particular types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7fe8-104">В следующем примере показано, как использовать <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> для сериализации и десериализации инструкций DOM кода.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-104">The following example illustrates how to use <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to serialize and deserialize Code DOM statements.</span></span>  
  
 [!code-cpp[IDesignerSerializationManagerSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CPP/idesignerserializationmanagersample.cpp#1)]
 [!code-csharp[IDesignerSerializationManagerSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CS/idesignerserializationmanagersample.cs#1)]
 [!code-vb[IDesignerSerializationManagerSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerSerializationManagerSample/VB/idesignerserializationmanagersample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="AddSerializationProvider">
      <MemberSignature Language="C#" Value="public void AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member AddSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="iDesignerSerializationManager.AddSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b7fe8-105">Добавляемый поставщик сериализации.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-105">The serialization provider to add.</span></span></param>
        <summary><span data-ttu-id="b7fe8-106">Добавляет диспетчеру сериализации заданный поставщик сериализации.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-106">Adds the specified serialization provider to the serialization manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fe8-107">Этот метод добавляет пользовательский поставщик сериализации к диспетчеру сериализации.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-107">This method adds a custom serialization provider to the serialization manager.</span></span> <span data-ttu-id="b7fe8-108">Поставщики сериализации предоставляют пользовательские сериализаторы для определенного типа объекта или набора типов объектов.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-108">Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</span></span> <span data-ttu-id="b7fe8-109">В процессе сериализации каждый пользовательский поставщик сериализации получает запрос на возврат сериализатора для заданного типа данных, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-109">During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</span></span> <span data-ttu-id="b7fe8-110">Перед тем как воспользоваться сериализатором по умолчанию для определенного типа, диспетчер сериализации использует пользовательский сериализатор, предоставляемый данным методом.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-110">The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.ContextStack Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ContextStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::ContextStack ^ Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.ComponentModel.Design.Serialization.ContextStack" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7fe8-111">Получает стековую, определяемую пользователем область памяти, которая используется для взаимодействия сериализаторов.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-111">Gets a stack-based, user-defined storage area that is useful for communication between serializers.</span></span></summary>
        <value><span data-ttu-id="b7fe8-112">Класс <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />, где хранятся данные.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-112">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fe8-113">Эта область хранилища обеспечивает обмен данными контекста объекта с сериализаторами.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-113">This storage area provides communication of object context information to serializers.</span></span> <span data-ttu-id="b7fe8-114">Контекстные сведения о сериализуемых объектах могут храниться и получать к ним доступ <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-114">Context information about objects that are being serialized can be stored and accessed through this <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj" Usage="iDesignerSerializationManager.CreateInstance (type, arguments, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b7fe8-115">Создаваемый тип данных.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-115">The data type to create.</span></span></param>
        <param name="arguments"><span data-ttu-id="b7fe8-116">Аргументы, передаваемые конструктору для данного типа.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-116">The arguments to pass to the constructor for this type.</span></span></param>
        <param name="name"><span data-ttu-id="b7fe8-117">Имя объекта.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-117">The name of the object.</span></span> <span data-ttu-id="b7fe8-118">Это имя используется для доступа к объекту через класс <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-118">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span></span> <span data-ttu-id="b7fe8-119">Если передается значение <see langword="null" />, объект создается, но к нему нельзя получить доступ по имени.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-119">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="b7fe8-120">При значении <see langword="true" /> объект добавляется в контейнер проекта.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-120">If <see langword="true" />, this object is added to the design container.</span></span> <span data-ttu-id="b7fe8-121">Для этого объект должен реализовать класс <see cref="T:System.ComponentModel.IComponent" />.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-121">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span></span></param>
        <summary><span data-ttu-id="b7fe8-122">Создает экземпляр указанного типа, и добавляет его в сборник именованных экземпляров.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-122">Creates an instance of the specified type and adds it to a collection of named instances.</span></span></summary>
        <returns><span data-ttu-id="b7fe8-123">Вновь созданный экземпляр объекта.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-123">The newly created object instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fe8-124">Объекты, реализующие <xref:System.ComponentModel.IComponent> , добавляются в контейнер времени разработки, `addToContainer` если параметр имеет `true`значение.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-124">Objects that implement <xref:System.ComponentModel.IComponent> are added to the design-time container if the `addToContainer` parameter is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public object GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstance (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInstance(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetInstance : string -&gt; obj" Usage="iDesignerSerializationManager.GetInstance name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b7fe8-125">Имя загружаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-125">The name of the object to retrieve.</span></span></param>
        <summary><span data-ttu-id="b7fe8-126">Получает экземпляр созданного объекта с указанным именем либо значение <see langword="null" />, если объект не существует.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-126">Gets an instance of a created object of the specified name, or <see langword="null" /> if that object does not exist.</span></span></summary>
        <returns><span data-ttu-id="b7fe8-127">Экземпляр объекта с заданным именем либо значение <see langword="null" />, если не удается найти объект с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-127">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fe8-128">Имя получаемого объекта должно быть задано при предыдущем вызове метода <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-128">The name of the object to retrieve must have been set through a prior call to <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetName : obj -&gt; string" Usage="iDesignerSerializationManager.GetName value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7fe8-129">Объект, для которого получается имя.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-129">The object to retrieve the name for.</span></span></param>
        <summary><span data-ttu-id="b7fe8-130">Получает имя указанного объекта или значение <see langword="null" />, если у объекта нет имени.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-130">Gets the name of the specified object, or <see langword="null" /> if the object has no name.</span></span></summary>
        <returns><span data-ttu-id="b7fe8-131">Имя объекта или значение <see langword="null" />, если у объекта нет имени.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-131">The name of the object, or <see langword="null" /> if the object is unnamed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="abstract member GetSerializer : Type * Type -&gt; obj" Usage="iDesignerSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="b7fe8-132">Тип объекта, для которого получается сериализатор.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-132">The type of the object to get the serializer for.</span></span></param>
        <param name="serializerType"><span data-ttu-id="b7fe8-133">Тип загружаемого сериализатора.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-133">The type of the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="b7fe8-134">Получает сериализатор запрошенного типа для указанного типа объекта.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-134">Gets a serializer of the requested type for the specified object type.</span></span></summary>
        <returns><span data-ttu-id="b7fe8-135">Экземпляр запрошенного типа или значение <see langword="null" />, если не удается найти соответствующий сериализатор.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-135">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="iDesignerSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="b7fe8-136">Полное имя загружаемого типа.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-136">The fully qualified name of the type to load.</span></span></param>
        <summary><span data-ttu-id="b7fe8-137">Возвращает тип указанного имени.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-137">Gets a type of the specified name.</span></span></summary>
        <returns><span data-ttu-id="b7fe8-138">Экземпляр типа или значение <see langword="null" />, если не удается загрузить тип.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-138">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7fe8-139">Определяет настраиваемые свойства, которые могут быть сериализованы с помощью доступных сериализаторов.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-139">Indicates custom properties that can be serializable with available serializers.</span></span></summary>
        <value><span data-ttu-id="b7fe8-140">Класс <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, содержащий свойства, подлежащие сериализации.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-140">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fe8-141">Это свойство может содержать пустую коллекцию.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-141">This property can contain an empty collection.</span></span> <span data-ttu-id="b7fe8-142">В сериализаторе никогда не следует рассчитывать, что такие свойства существуют.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-142">A serializer should never assume that such properties exist.</span></span> <span data-ttu-id="b7fe8-143">Производный класс или реализация <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> определяет набор свойств, предоставляемых здесь.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-143">A derived class or implementation of <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> defines the set of properties that are exposed here.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b7fe8-144">Это свойство может быть заполнено пользовательским кодом.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-144">This property can be populated by user code.</span></span> <span data-ttu-id="b7fe8-145">Для заполнения этой коллекции может быть достаточно вызова метода <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />. <see cref="T:System.ComponentModel.TypeDescriptor" /></span><span class="sxs-lookup"><span data-stu-id="b7fe8-145">It may be sufficient to call <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /> of <see cref="T:System.ComponentModel.TypeDescriptor" /> to populate this collection.</span></span> <span data-ttu-id="b7fe8-146">Если пользовательские свойства не существуют, диспетчер сериализации должен вернуть пустую коллекцию.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-146">The serialization manager must return an empty collection if no custom properties exist.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="public void RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="iDesignerSerializationManager.RemoveSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b7fe8-147">Удаляемый поставщик.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-147">The provider to remove.</span></span> <span data-ttu-id="b7fe8-148">Этот объект должен добавляться с помощью метода <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-148">This object must have been added using <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span></span></param>
        <summary><span data-ttu-id="b7fe8-149">Удаляет пользовательский поставщик сериализации из диспетчера сериализации.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-149">Removes a custom serialization provider from the serialization manager.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportError">
      <MemberSignature Language="C#" Value="public void ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportError (errorInformation As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportError(System::Object ^ errorInformation);" />
      <MemberSignature Language="F#" Value="abstract member ReportError : obj -&gt; unit" Usage="iDesignerSerializationManager.ReportError errorInformation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation"><span data-ttu-id="b7fe8-150">Ошибка.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-150">The error to report.</span></span> <span data-ttu-id="b7fe8-151">Этот объект данных может принадлежать к любому типу объектов.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-151">This information object can be of any object type.</span></span> <span data-ttu-id="b7fe8-152">Если это исключение, пользователь получает сообщение об исключении.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-152">If it is an exception, the message of the exception is extracted and reported to the user.</span></span> <span data-ttu-id="b7fe8-153">Если объект другого типа, то для представления информации пользователю вызывается метод <see cref="M:System.Object.ToString" />.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-153">If it is any other type, <see cref="M:System.Object.ToString" /> is called to display the information to the user.</span></span></param>
        <summary><span data-ttu-id="b7fe8-154">Сообщает об ошибке в сериализации.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-154">Reports an error in serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fe8-155">Если диспетчер сериализации поддерживает запись в журнал нескольких ошибок в его реализации <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A>, он может сохранить объект сведений об ошибке для будущего отчета, где все возникшие ошибки могут отображаться одновременно.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-155">If the serialization manager supports logging multiple errors in its implementation of <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A>, it can store the error information object for a future report where all the errors encountered can be displayed at once.</span></span> <span data-ttu-id="b7fe8-156">Если в этом методе хранится несколько ошибок, сериализация может быть продолжена после вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-156">If this method stores multiple errors, serialization can continue after a call to this method.</span></span> <span data-ttu-id="b7fe8-157">Если этот метод не поддерживает запись в журнал нескольких ошибок, этот метод должен вызвать исключение, которое прерывает сериализацию.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-157">If this method does not support logging multiple errors, this method should throw an exception, which aborts serialization.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b7fe8-158">Диспетчер сериализации никогда не должен вызывать исключение для ошибок, обнаруженных во время сериализации.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-158">The serialization manager should never throw an exception for errors encountered during serialization.</span></span> <span data-ttu-id="b7fe8-159">Исключение возникает только во время десериализации.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-159">It should only throw an exception during deserialization.</span></span> <span data-ttu-id="b7fe8-160">В противном случае пользователи преобразуются в замешательство, так как сохранение документа никогда не должно выполняться.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-160">Otherwise, users become confused because saving the document should never fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="VB.NET" Value="Event ResolveName As ResolveNameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::Serialization::ResolveNameEventHandler ^ ResolveName;" />
      <MemberSignature Language="F#" Value="member this.ResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventHandler " Usage="member this.ResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7fe8-161">Возникает, если не удается найти заданное имя в таблице имен диспетчера сериализации с помощью метода <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-161">Occurs when <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fe8-162">Такое событие предоставляет сериализатору способ создания объекта по запросу, таким образом, исключается создание объекта по зависимости.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-162">This event provides a way for a serializer to create an object on demand, so that the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="b7fe8-163">При завершении процесса сериализации или десериализации делегат этого события немедленно удаляется.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-163">The delegate for this event is cleared immediately after serialization or deserialization is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event SerializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SerializationComplete;" />
      <MemberSignature Language="F#" Value="member this.SerializationComplete : EventHandler " Usage="member this.SerializationComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7fe8-164">Возникает при завершении сериализации.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-164">Occurs when serialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fe8-165">Это событие вызывается при завершении процесса сериализации или десериализации.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-165">This event is raised when serialization or deserialization is complete.</span></span>  
  
 <span data-ttu-id="b7fe8-166">Обычно код сериализации служит для отправки данных сериализации и не требует обработки и проверки состояния.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-166">Generally, serialization code is written to emit serialization data and does not typically require state-related checking and processing.</span></span> <span data-ttu-id="b7fe8-167">При необходимости сохранения данных состояния в процессе сериализации доступ и задание этих данных осуществляется сериализатором согласно событию <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>; после сериализации данные удаляются.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-167">If it is necessary to maintain state data throughout serialization, data can be set and accessed by a serializer, which can listen to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event, and clear the data after serialization.</span></span> <span data-ttu-id="b7fe8-168">Восстановление правильного состояния после сериализации может быть важным, поскольку сериализаторы можно повторно использовать во время сериализации, а незавершенные данные состояния или открытые потоки могут быть неправильными.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-168">Restoring the proper state after serialization can be important because serializers can be reused during serialization, and leftover state data or open streams might not be correct.</span></span>  
  
 <span data-ttu-id="b7fe8-169">Например, если сериализатору необходимо выполнить запись в другой файл, например файл ресурсов, то проектирование сериализатора на закрытие файла по завершении неэффективно.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-169">For example, if a serializer needs to write to another file, such as a resource file, it is inefficient to design the serializer to close the file when finished.</span></span> <span data-ttu-id="b7fe8-170">Для сериализации графа объектов обычно требуется несколько сериализаторов.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-170">Serializing an object graph usually requires several serializers.</span></span> <span data-ttu-id="b7fe8-171">Файл ресурсов будет открываться и закрываться несколько раз.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-171">The resource file would be opened and closed many times.</span></span> <span data-ttu-id="b7fe8-172">Вместо этого файл ресурсов можно закрыть в конце сериализации объектом, который прослушивает <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> событие.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-172">Instead, the resource file can be closed at the end of serialization by an object that listened to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public void SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetName (instance As Object, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetName(System::Object ^ instance, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member SetName : obj * string -&gt; unit" Usage="iDesignerSerializationManager.SetName (instance, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b7fe8-173">Экземпляр объекта, которому необходимо задать имя.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-173">The object instance to name.</span></span></param>
        <param name="name"><span data-ttu-id="b7fe8-174">Имя экземпляра.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-174">The name to give the instance.</span></span></param>
        <summary><span data-ttu-id="b7fe8-175">Задает имя указанного существующего объекта.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-175">Sets the name of the specified existing object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fe8-176">Этот метод полезен, когда необходимо создать экземпляр объекта, а затем присвоить ему имя, не <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>используя.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-176">This method is useful when it is necessary to create and then name an instance of an object without using <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span></span> <span data-ttu-id="b7fe8-177">Исключение выдается при попытке переименовать существующий объект или при попытке дать объекту уже существующее имя.</span><span class="sxs-lookup"><span data-stu-id="b7fe8-177">An exception is thrown if you try to rename an existing object or if you try to give a new object a name that is already taken.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
