<Type Name="TypeCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd9d32a37a24df59f9e75429187620eda81ec5ad" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65156291" /></Metadata><TypeSignature Language="C#" Value="public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <TypeSignature Language="F#" Value="type TypeCodeDomSerializer = class&#xA;    inherit CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7205e-101">Выполняет сериализацию объекта нового типа.</span><span class="sxs-lookup"><span data-stu-id="7205e-101">Serializes an object to a new type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7205e-102">Класс выполняет те же задачи <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, что и, но сериализация объекта с помощью этого класса определяет новый тип. <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer></span><span class="sxs-lookup"><span data-stu-id="7205e-102">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> class performs the same tasks as a <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, but serializing an object through this class defines a new type.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="7205e-103">Динамическое создание и компиляция исходного кода</span><span class="sxs-lookup"><span data-stu-id="7205e-103">Dynamic Source Code Generation and Compilation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7205e-104">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="7205e-104">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj&#xA;override this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj" Usage="typeCodeDomSerializer.Deserialize (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="7205e-105">Диспетчер сериализации для использования при выполнении сериализации.</span><span class="sxs-lookup"><span data-stu-id="7205e-105">The serialization manager to use for serialization.</span></span></param>
        <param name="declaration"><span data-ttu-id="7205e-106">Объявление типа для использования при выполнении сериализации.</span><span class="sxs-lookup"><span data-stu-id="7205e-106">Type declaration to use for serialization.</span></span></param>
        <summary><span data-ttu-id="7205e-107">Выполняет десериализацию объявления заданного типа.</span><span class="sxs-lookup"><span data-stu-id="7205e-107">Deserializes the given type declaration.</span></span></summary>
        <returns><span data-ttu-id="7205e-108">Корневой объект.</span><span class="sxs-lookup"><span data-stu-id="7205e-108">The root object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7205e-109"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> Метод десериализует объявление ранее сериализованного типа кода.</span><span class="sxs-lookup"><span data-stu-id="7205e-109">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method deserializes a previously serialized code type declaration.</span></span> <span data-ttu-id="7205e-110">В следующей таблице приведены задачи, выполняемые реализацией по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="7205e-110">The following table shows the tasks default implementation performs.</span></span>  
  
|<span data-ttu-id="7205e-111">Задача</span><span class="sxs-lookup"><span data-stu-id="7205e-111">Task</span></span>|<span data-ttu-id="7205e-112">Описание</span><span class="sxs-lookup"><span data-stu-id="7205e-112">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="7205e-113">Проверки чувствительности к регистру</span><span class="sxs-lookup"><span data-stu-id="7205e-113">Case Sensitivity Checks</span></span>|<span data-ttu-id="7205e-114">Реализация выполняет поиск <xref:System.CodeDom.Compiler.CodeDomProvider> службы, чтобы решить, должна ли она обрабатывать члены как с учетом регистра, так и без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="7205e-114">The implementation searches for a <xref:System.CodeDom.Compiler.CodeDomProvider> service to decide if it should treat members as case sensitive or case insensitive.</span></span>|  
|<span data-ttu-id="7205e-115">Сортировка инструкций</span><span class="sxs-lookup"><span data-stu-id="7205e-115">Statement Sorting</span></span>|<span data-ttu-id="7205e-116">Все переменные-члены и локальные переменные из методов init хранятся в таблице.</span><span class="sxs-lookup"><span data-stu-id="7205e-116">All member variables and local variables from init methods are stored in a table.</span></span> <span data-ttu-id="7205e-117">Затем каждая инструкция в методе init добавляется в коллекцию операторов, сгруппированную в соответствии с левой стороны, поэтому все инструкции, назначенные или работающие с определенной переменной, группируются под этой переменной.</span><span class="sxs-lookup"><span data-stu-id="7205e-117">Then each statement in an init method is added to a statement collection grouped according to its left-hand side, so all statements assigning or operating on a particular variable are grouped under that variable.</span></span> <span data-ttu-id="7205e-118">Переменные, не имеющие инструкций, отбрасываются.</span><span class="sxs-lookup"><span data-stu-id="7205e-118">Variables that have no statements are discarded.</span></span>|  
|<span data-ttu-id="7205e-119">Десериализация</span><span class="sxs-lookup"><span data-stu-id="7205e-119">Deserialization</span></span>|<span data-ttu-id="7205e-120">Коллекции инструкций для каждой переменной десериализуются в соответствии с переменной.</span><span class="sxs-lookup"><span data-stu-id="7205e-120">The statement collections for each variable are deserialized according to the variable.</span></span>|  
  
 <span data-ttu-id="7205e-121">В следующей таблице приведены службы, необходимые <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> для работы метода.</span><span class="sxs-lookup"><span data-stu-id="7205e-121">The following table shows the services the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method requires.</span></span>  
  
|<span data-ttu-id="7205e-122">Служба</span><span class="sxs-lookup"><span data-stu-id="7205e-122">Service</span></span>|<span data-ttu-id="7205e-123">Описание</span><span class="sxs-lookup"><span data-stu-id="7205e-123">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.CodeDom.Compiler.CodeDomProvider>|<span data-ttu-id="7205e-124">Хотя это и не обязательно, служба, если она доступна, используется для определения того, должна ли сериализация учитываться с учетом регистра или без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="7205e-124">While not strictly necessary, the service, if available, is used to determine if the serialization should be case sensitive or case insensitive.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="7205e-125">Если объект не существует в таблице имен во время десериализации, выполняется запрос <xref:System.ComponentModel.IContainer> .</span><span class="sxs-lookup"><span data-stu-id="7205e-125">If an object does not exist in the name table during deserialization, a query for <xref:System.ComponentModel.IContainer> is made.</span></span> <span data-ttu-id="7205e-126">Если этот запрос выполнен, контейнер проверяется для объекта.</span><span class="sxs-lookup"><span data-stu-id="7205e-126">If this query succeeds, the container is checked for the object.</span></span> <span data-ttu-id="7205e-127">Контейнер также используется в качестве изолированного для любого аргумента контейнера, необходимого для компонентов.</span><span class="sxs-lookup"><span data-stu-id="7205e-127">The container is also used as a stand-in for any container argument needed by components.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7205e-128">Значение параметра <paramref name="manager" /> или <paramref name="typeDecl" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7205e-128"><paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="7205e-129">Динамическое создание и компиляция исходного кода</span><span class="sxs-lookup"><span data-stu-id="7205e-129">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethod">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod GetInitializeMethod(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethod (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration, value As Object) As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::CodeDom::CodeMemberMethod ^ GetInitializeMethod(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod&#xA;override this.GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod" Usage="typeCodeDomSerializer.GetInitializeMethod (manager, declaration, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="7205e-130">Диспетчер сериализации для использования при выполнении сериализации.</span><span class="sxs-lookup"><span data-stu-id="7205e-130">The serialization manager to use for serialization.</span></span></param>
        <param name="declaration"><span data-ttu-id="7205e-131">Объявление типа, которое должно использоваться для сериализации.</span><span class="sxs-lookup"><span data-stu-id="7205e-131">The type declaration to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="7205e-132">Значение, которое должно использоваться для сериализации.</span><span class="sxs-lookup"><span data-stu-id="7205e-132">The value to use for serialization.</span></span></param>
        <summary><span data-ttu-id="7205e-133">Возвращает метод, в котором хранятся инструкции, используемые для сериализации элемента.</span><span class="sxs-lookup"><span data-stu-id="7205e-133">Returns the method where statements used to serialize a member are stored.</span></span></summary>
        <returns><span data-ttu-id="7205e-134">Метод, используемый для создания всех кодов инициализации для заданного элемента.</span><span class="sxs-lookup"><span data-stu-id="7205e-134">The method used to emit all of the initialization code for the given member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7205e-135"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> Метод возвращает метод, чтобы выдать весь код инициализации для заданного элемента.</span><span class="sxs-lookup"><span data-stu-id="7205e-135">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> method returns the method to emit all of the initialization code for the given member.</span></span> <span data-ttu-id="7205e-136">Реализация по умолчанию возвращает пустой конструктор.</span><span class="sxs-lookup"><span data-stu-id="7205e-136">The default implementation returns an empty constructor.</span></span> <span data-ttu-id="7205e-137">Если один и тот же метод возвращается для нескольких значений, должен возвращаться один и тот же экземпляр метода.</span><span class="sxs-lookup"><span data-stu-id="7205e-137">If the same method is to be returned for multiple values, the same instance of the method should be returned.</span></span> <span data-ttu-id="7205e-138"><xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> Словарь можно использовать для запоминания созданных методов.</span><span class="sxs-lookup"><span data-stu-id="7205e-138">You can use the <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dictionary to remember methods you have created.</span></span> <span data-ttu-id="7205e-139">`typeDecl` Параметр также можно использовать для добавления методов инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="7205e-139">The `typeDecl` parameter can also be used to add infrastructure methods.</span></span> <span data-ttu-id="7205e-140">Например, если вы хотите создать отдельный метод для каждого объекта, требуется один метод, который вызывает все эти методы в свою очередь.</span><span class="sxs-lookup"><span data-stu-id="7205e-140">For example, if you want to emit a separate method for each object, you need a single method that calls all of these methods in turn.</span></span> <span data-ttu-id="7205e-141">При необходимости этот метод можно добавить в объявление типа кода.</span><span class="sxs-lookup"><span data-stu-id="7205e-141">This method can be added to the code type declaration as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7205e-142">Значение параметра <paramref name="manager" />, <paramref name="typeDecl" /> или <paramref name="value" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7205e-142"><paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="7205e-143">Динамическое создание и компиляция исходного кода</span><span class="sxs-lookup"><span data-stu-id="7205e-143">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethods">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod[] GetInitializeMethods(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethods (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As CodeMemberMethod()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::CodeDom::CodeMemberMethod ^&gt; ^ GetInitializeMethods(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]&#xA;override this.GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]" Usage="typeCodeDomSerializer.GetInitializeMethods (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="7205e-144">Диспетчер сериализации для использования при выполнении сериализации.</span><span class="sxs-lookup"><span data-stu-id="7205e-144">The serialization manager to use for serialization.</span></span></param>
        <param name="declaration"><span data-ttu-id="7205e-145">Объявление типа, которое должно использоваться для сериализации.</span><span class="sxs-lookup"><span data-stu-id="7205e-145">The type declaration to use for serialization.</span></span></param>
        <summary><span data-ttu-id="7205e-146">Возвращает массив методов, предназначенных для интерпретации в процессе десериализации.</span><span class="sxs-lookup"><span data-stu-id="7205e-146">Returns an array of methods to be interpreted during deserialization.</span></span></summary>
        <returns><span data-ttu-id="7205e-147">Массив <see cref="T:System.CodeDom.CodeMemberMethod" /> методов, предназначенных для интерпретации в процессе десериализации.</span><span class="sxs-lookup"><span data-stu-id="7205e-147">A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7205e-148">Реализация по умолчанию возвращает одноэлементный массив с конструктором в нем.</span><span class="sxs-lookup"><span data-stu-id="7205e-148">The default implementation returns a single-element array with the constructor in it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7205e-149">Параметр <paramref name="manager" /> или <paramref name="typeDecl" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7205e-149"><paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="7205e-150">Динамическое создание и компиляция исходного кода</span><span class="sxs-lookup"><span data-stu-id="7205e-150">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, class System.Collections.ICollection members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, root As Object, members As ICollection) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeTypeDeclaration ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ root, System::Collections::ICollection ^ members);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration&#xA;override this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration" Usage="typeCodeDomSerializer.Serialize (manager, root, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="members" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="7205e-151">Диспетчер сериализации для использования при выполнении сериализации.</span><span class="sxs-lookup"><span data-stu-id="7205e-151">The serialization manager to use for serialization.</span></span></param>
        <param name="root"><span data-ttu-id="7205e-152">Объект для сериализации.</span><span class="sxs-lookup"><span data-stu-id="7205e-152">The object to serialize.</span></span></param>
        <param name="members"><span data-ttu-id="7205e-153">Необязательная коллекция элементов.</span><span class="sxs-lookup"><span data-stu-id="7205e-153">Optional collection of members.</span></span> <span data-ttu-id="7205e-154">Возможно значение <see langword="null" /> или пустое значение.</span><span class="sxs-lookup"><span data-stu-id="7205e-154">Can be <see langword="null" /> or empty.</span></span></param>
        <summary><span data-ttu-id="7205e-155">Выполняет сериализацию корня объекта путем создания объявления нового типа, определяющего корень.</span><span class="sxs-lookup"><span data-stu-id="7205e-155">Serializes the object root by creating a new type declaration that defines root.</span></span></summary>
        <returns><span data-ttu-id="7205e-156"><see cref="T:System.CodeDom.CodeTypeDeclaration" />, определяющий корневой объект.</span><span class="sxs-lookup"><span data-stu-id="7205e-156">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7205e-157"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> Метод сериализует заданный корневой объект и необязательную коллекцию элементов для создания нового определения типа.</span><span class="sxs-lookup"><span data-stu-id="7205e-157">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method serializes the given root object and optional collection of members to create a new type definition.</span></span> <span data-ttu-id="7205e-158">`members` Если коллекция содержит значения, эти значения сериализуются.</span><span class="sxs-lookup"><span data-stu-id="7205e-158">If the `members` collection contains values, these values are serialized.</span></span> <span data-ttu-id="7205e-159">Сами значения могут сериализоваться как переменные члена или локальные переменные.</span><span class="sxs-lookup"><span data-stu-id="7205e-159">Values themselves may serialize as either member variables or local variables.</span></span> <span data-ttu-id="7205e-160">Это определение выполняется путем поиска свойства расширения для объекта с именем `GenerateMember`.</span><span class="sxs-lookup"><span data-stu-id="7205e-160">This determination is done by searching for an extender property on the object called `GenerateMember`.</span></span> <span data-ttu-id="7205e-161">Если `true`значение равно, создается элемент.</span><span class="sxs-lookup"><span data-stu-id="7205e-161">If `true`, a member is generated.</span></span> <span data-ttu-id="7205e-162">В противном случае создается локальная переменная.</span><span class="sxs-lookup"><span data-stu-id="7205e-162">Otherwise, a local variable is generated.</span></span> <span data-ttu-id="7205e-163">Для удобства `members` коллекция может содержать корневой объект.</span><span class="sxs-lookup"><span data-stu-id="7205e-163">For convenience, the `members` collection can contain the root object.</span></span> <span data-ttu-id="7205e-164">В этом случае корневой объект также не добавляется как член или локальная переменная.</span><span class="sxs-lookup"><span data-stu-id="7205e-164">In this case, the root object is not also added as a member or local variable.</span></span>  
  
 <span data-ttu-id="7205e-165">Имя возвращаемого типа берется из имени корневого объекта, если это именованный объект.</span><span class="sxs-lookup"><span data-stu-id="7205e-165">The name of the returned type is taken from the root object's name, if it was a named object.</span></span> <span data-ttu-id="7205e-166">В противном случае имя создается из простого имени типа корневого класса.</span><span class="sxs-lookup"><span data-stu-id="7205e-166">If not, a name is fabricated from the simple type name of the root class.</span></span>  
  
 <span data-ttu-id="7205e-167">В следующей таблице показаны задачи, выполняемые реализацией <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> метода по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="7205e-167">The following table shows the tasks performed by the default implementation of the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method.</span></span>  
  
|<span data-ttu-id="7205e-168">Задача</span><span class="sxs-lookup"><span data-stu-id="7205e-168">Task</span></span>|<span data-ttu-id="7205e-169">Описание</span><span class="sxs-lookup"><span data-stu-id="7205e-169">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="7205e-170">Начальное значение контекста</span><span class="sxs-lookup"><span data-stu-id="7205e-170">Context Seeding</span></span>|<span data-ttu-id="7205e-171">Контекст сериализации инициализируется данными, включая <xref:System.ComponentModel.Design.Serialization.RootContext> и<xref:System.CodeDom.CodeTypeDeclaration></span><span class="sxs-lookup"><span data-stu-id="7205e-171">The serialization context is initialized with data including the <xref:System.ComponentModel.Design.Serialization.RootContext> and <xref:System.CodeDom.CodeTypeDeclaration></span></span>|  
|<span data-ttu-id="7205e-172">Сериализация членов</span><span class="sxs-lookup"><span data-stu-id="7205e-172">Member Serialization</span></span>|<span data-ttu-id="7205e-173">Затем просматривает все элементы и вызовы <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>. <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A></span><span class="sxs-lookup"><span data-stu-id="7205e-173">Next, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> walks all of the members and calls <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span></span> <span data-ttu-id="7205e-174">Так как сериализация выполняется рационально в <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, это гарантирует, что сериализация не будет выполняться дважды.</span><span class="sxs-lookup"><span data-stu-id="7205e-174">Because serialization is done opportunistically in <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, this ensures that serialization is not done twice.</span></span>|  
|<span data-ttu-id="7205e-175">Корневая сериализация</span><span class="sxs-lookup"><span data-stu-id="7205e-175">Root Serialization</span></span>|<span data-ttu-id="7205e-176">Затем сериализуется корневой объект и его инструкции добавляются в коллекцию инструкций.</span><span class="sxs-lookup"><span data-stu-id="7205e-176">Next, the root object is serialized and its statements are added to the statement collection.</span></span>|  
|<span data-ttu-id="7205e-177">Интеграция инструкций</span><span class="sxs-lookup"><span data-stu-id="7205e-177">Statement Integration</span></span>|<span data-ttu-id="7205e-178">После сериализации <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> всех объектов метод упорядочивает инструкции и добавляет их в метод, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>возвращаемый методом.</span><span class="sxs-lookup"><span data-stu-id="7205e-178">After all objects are serialized, the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method orders the statements and adds them to a method returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span> <span data-ttu-id="7205e-179">Наконец, создается конструктор, который вызывает все методы, возвращаемые из <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="7205e-179">Finally, a constructor is fabricated that calls all of the methods returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span>|  
  
-  
  
 <span data-ttu-id="7205e-180">В следующей таблице показаны объекты, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> размещаемые методом в стеке контекста.</span><span class="sxs-lookup"><span data-stu-id="7205e-180">The following table shows the objects the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method places on the context stack.</span></span>  
  
|<span data-ttu-id="7205e-181">Экземпляр</span><span class="sxs-lookup"><span data-stu-id="7205e-181">Instance</span></span>|<span data-ttu-id="7205e-182">Описание</span><span class="sxs-lookup"><span data-stu-id="7205e-182">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>|<span data-ttu-id="7205e-183">Этот сериализатор.</span><span class="sxs-lookup"><span data-stu-id="7205e-183">This serializer.</span></span> <span data-ttu-id="7205e-184">Производные классы могут оказаться полезными для добавления в этот класс открытых свойств.</span><span class="sxs-lookup"><span data-stu-id="7205e-184">Deriving classes may find it useful to add public properties to this class.</span></span>|  
|<xref:System.CodeDom.CodeTypeDeclaration>|<span data-ttu-id="7205e-185">Создаваемый тип.</span><span class="sxs-lookup"><span data-stu-id="7205e-185">The type being created.</span></span> <span data-ttu-id="7205e-186">Большинству объектов не требуется прямой доступ к этому объекту.</span><span class="sxs-lookup"><span data-stu-id="7205e-186">Most objects do not need direct access to this.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7205e-187">Значение параметра <paramref name="manager" /> или <paramref name="root" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7205e-187"><paramref name="manager" /> or <paramref name="root" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="7205e-188">Динамическое создание и компиляция исходного кода</span><span class="sxs-lookup"><span data-stu-id="7205e-188">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>