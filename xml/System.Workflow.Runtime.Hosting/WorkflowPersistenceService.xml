<Type Name="WorkflowPersistenceService" FullName="System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26a36d6ca3c407e95c528c3b81560263c0067a80" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70604246" /></Metadata><TypeSignature Language="C#" Value="public abstract class WorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowPersistenceService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowPersistenceService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowPersistenceService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type WorkflowPersistenceService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8373e-101">Абстрактный базовый класс, производными которого являются все службы постоянного хранения.</span><span class="sxs-lookup"><span data-stu-id="8373e-101">The abstract base class from which all persistence services are derived.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="8373e-102">При возникновении определенных условий во время выполнения рабочего процесса подсистема среды выполнения рабочих процессов сохраняет сведения о состоянии экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-102">When certain conditions occur while the workflow is running, the workflow runtime engine persists state information about the workflow instance.</span></span> <span data-ttu-id="8373e-103">Постоянное хранение может возникнуть, например, при завершении атомарной транзакции при освобождении экземпляра рабочего процесса, когда ведущее приложение вызывает <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> в экземпляре рабочего процесса или при прерывании или завершении экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-103">Persistence can occur, for example, when an atomic transaction finishes, when the workflow instance becomes idle, when the host calls <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> on the workflow instance, or when a workflow instance is terminated or finishes.</span></span> <span data-ttu-id="8373e-104">Когда семантика подсистемы среды выполнения рабочих процессов предписывает необходимость появления постоянного хранения, подсистема среды выполнения рабочих процессов вызывает методы, предоставленные службой постоянного хранения для сохранения сведений о состоянии экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-104">When the workflow runtime engine semantics dictate that persistence should occur, the workflow runtime engine calls methods that are supplied by a persistence service to save state information about the workflow instance.</span></span> <span data-ttu-id="8373e-105">Подобным образом, когда подсистеме среды выполнения рабочих процессов необходимо восстановить ранее сохраненный экземпляр рабочего процесса, она вызывает методы, предоставленные службой постоянного хранения для загрузки этих сведений о состоянии.</span><span class="sxs-lookup"><span data-stu-id="8373e-105">Likewise, when the workflow runtime engine needs to restore a previously persisted workflow instance, it calls methods that are supplied by the persistence service to load this state information.</span></span> <span data-ttu-id="8373e-106">Подсистема среды выполнения рабочих процессов обрабатывает всю семантику относительно времени выполнения сохранения.</span><span class="sxs-lookup"><span data-stu-id="8373e-106">The workflow runtime engine handles all the semantics regarding when to perform persistence.</span></span> <span data-ttu-id="8373e-107">Служба постоянного хранения обрабатывает фактически сохранение и загрузку сведений о состоянии рабочего процесса в хранилище данных или из него.</span><span class="sxs-lookup"><span data-stu-id="8373e-107">The persistence service handles actually saving and loading the workflow state information to or from a data store.</span></span>  
  
 <span data-ttu-id="8373e-108">Службу постоянного хранения можно создать путем наследования класса от класса <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>.</span><span class="sxs-lookup"><span data-stu-id="8373e-108">You can create a persistence service by deriving a class from the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  <span data-ttu-id="8373e-109">Службу постоянного хранения можно добавить в подсистему среды выполнения рабочих процессов путем вызова метода <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> или путем создания соответствующей записи в файле конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="8373e-109">You can add your persistence service to the workflow runtime engine by calling <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> or by making an appropriate entry in the application configuration file.</span></span> <span data-ttu-id="8373e-110">В классе <xref:System.Workflow.Runtime.WorkflowRuntime> должна содержаться только одна служба постоянного хранения.</span><span class="sxs-lookup"><span data-stu-id="8373e-110">The <xref:System.Workflow.Runtime.WorkflowRuntime> should only contain one persistence service.</span></span> <span data-ttu-id="8373e-111">Windows Workflow Foundation предоставляет класс <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, готовую службу постоянного хранения, которую можно использовать как есть или же ее можно расширить.</span><span class="sxs-lookup"><span data-stu-id="8373e-111">Windows Workflow Foundation provides the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class, an out-of-box persistence service, which you can use as is or extend.</span></span>  
  
 <span data-ttu-id="8373e-112">Подсистема среды выполнения рабочих процессов имеет семантику для блокировки сведений о состоянии рабочего процесса для использования в средах, где службы постоянного хранения, выполняемые в разных процессах, могут иметь доступ к одному хранилищу данных.</span><span class="sxs-lookup"><span data-stu-id="8373e-112">The workflow runtime engine has semantics for locking workflow state information for use in environments where persistence services that run in different processes might have access to a single data store.</span></span> <span data-ttu-id="8373e-113">Класс <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> предоставляет возможность поддержки этой функциональной возможности подсистемы среды выполнения рабочих процессов, предоставляя параметр для <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>, который указывает, должны ли сведения о состоянии экземпляра рабочего процесса быть разблокированы в хранилище данных, или предоставляя метод <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> для разблокирования ранее заблокированных сведений о состоянии рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-113">The <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class provides the capability to support this functionality of the workflow runtime engine by providing a parameter to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> that specifies whether the state information of a workflow instance should be unlocked in the data store, and by providing a method <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> to unlock previously locked workflow state information.</span></span> <span data-ttu-id="8373e-114">В службе постоянного хранения, реализующей блокировку, вызов <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> должен заблокировать сведения о состоянии для экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-114">In a persistence service that implements locking, a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> should lock the state information for a workflow instance.</span></span>  
  
 <span data-ttu-id="8373e-115">Служба постоянного хранения должна вызвать исключение <xref:System.Workflow.Runtime.Hosting.PersistenceException>, если ей не удается сохранить сведения о состоянии в хранилище данных или загрузить сведения о состоянии из хранилища данных.</span><span class="sxs-lookup"><span data-stu-id="8373e-115">Your persistence service should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> if it fails to save state information to its data store or load state information from its data store.</span></span> <span data-ttu-id="8373e-116">Подсистема среды выполнения рабочих процессов предполагает следующее поведение.</span><span class="sxs-lookup"><span data-stu-id="8373e-116">The workflow runtime engine expects this behavior.</span></span>  
  
 <span data-ttu-id="8373e-117">Механизм пакетирования предоставляется для служб, использующих постоянное хранилище для хранения сведений о состоянии рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-117">A batching mechanism is provided for services that use a durable store to save workflow state information.</span></span> <span data-ttu-id="8373e-118">В таких случаях часто бывает важным обеспечение согласованности между постоянным хранилищем, используемым службой постоянного хранения, и внутренним состоянием подсистемы среды выполнения рабочих процессов.</span><span class="sxs-lookup"><span data-stu-id="8373e-118">It is important in these cases to maintain consistency between the durable store that is used by the persistence service and the internal state of the workflow runtime engine.</span></span> <span data-ttu-id="8373e-119">Можно добавить функциональные возможности, определенные интерфейсом <xref:System.Workflow.Runtime.IPendingWork> для службы, а затем принять участие в пакетировании транзакции рабочего процесса, предоставленном <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, путем добавления изменения в хранилище данных в качестве рабочих элементов в <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span><span class="sxs-lookup"><span data-stu-id="8373e-119">You can add functionality defined by the <xref:System.Workflow.Runtime.IPendingWork> interface to your service, and then participate in workflow transaction batching provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> by adding changes to your data store as work items to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="8373e-120">Само постоянное хранилище должно реализовать интерфейс <xref:System.Transactions.IEnlistmentNotification>, так что сведения о рабочем процессе не сохраняются неправильным образом в событии отката транзакции.</span><span class="sxs-lookup"><span data-stu-id="8373e-120">The durable store itself should implement the <xref:System.Transactions.IEnlistmentNotification> interface, so that workflow information is not persisted incorrectly in the event of a transaction rollback.</span></span> <span data-ttu-id="8373e-121">Дополнительные сведения см. в разделе <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A> или <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.</span><span class="sxs-lookup"><span data-stu-id="8373e-121">For more information, see <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A> or <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowPersistenceService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowPersistenceService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8373e-122">Если реализован в производном классе, инициализирует новый экземпляр класса <see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" />.</span><span class="sxs-lookup"><span data-stu-id="8373e-122">When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8373e-123">В следующем примере показано создание экземпляра класса `SqlWorkflowPersistenceService` (производного от `WorkflowPersistenceService`).</span><span class="sxs-lookup"><span data-stu-id="8373e-123">The following example demonstrates creating an instance of the `SqlWorkflowPersistenceService` class (derived from `WorkflowPersistenceService`).</span></span> <span data-ttu-id="8373e-124">Данный пример является частью образца SDK «Nested Exception Handlers» из класса Program.cs.</span><span class="sxs-lookup"><span data-stu-id="8373e-124">This example is from the Nested Exception Handlers SDK sample, from the Program.cs class.</span></span>  <span data-ttu-id="8373e-125">Дополнительные сведения см. в разделе [пример вложенных обработчиков исключений](https://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).</span><span class="sxs-lookup"><span data-stu-id="8373e-125">For more information, see the [Nested Exception Handlers Sample](https://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).</span></span>  
  
 [!code-csharp[WF_Samples#161](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#161)]
 [!code-vb[WF_Samples#161](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSerializedForm">
      <MemberSignature Language="C#" Value="protected static byte[] GetDefaultSerializedForm (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig unsigned int8[] GetDefaultSerializedForm(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::Byte&gt; ^ GetDefaultSerializedForm(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetDefaultSerializedForm : System.Workflow.ComponentModel.Activity -&gt; byte[]" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="8373e-126">Тип <see cref="T:System.Workflow.ComponentModel.Activity" />, сериализованная форма которого запрашивается.</span><span class="sxs-lookup"><span data-stu-id="8373e-126">The <see cref="T:System.Workflow.ComponentModel.Activity" /> whose serialized form is requested.</span></span></param>
        <summary><span data-ttu-id="8373e-127">Получает сериализованную форму по умолчанию <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="8373e-127">Retrieves the serialized default form of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <returns><span data-ttu-id="8373e-128">Сериализованная форма по умолчанию <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="8373e-128">The serialized default form of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsBlocked">
      <MemberSignature Language="C#" Value="protected internal static bool GetIsBlocked (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig bool GetIsBlocked(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetIsBlocked (rootActivity As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static bool GetIsBlocked(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetIsBlocked : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="8373e-129">Корневое действие экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-129">The root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="8373e-130">Указывает, является ли данное действие заблокированным.</span><span class="sxs-lookup"><span data-stu-id="8373e-130">Indicates whether the given activity is blocked.</span></span></summary>
        <returns><span data-ttu-id="8373e-131"><see langword="true" />, если данное действие является заблокированным; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8373e-131"><see langword="true" /> if the given activity is blocked; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSuspendOrTerminateInfo">
      <MemberSignature Language="C#" Value="protected internal static string GetSuspendOrTerminateInfo (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig string GetSuspendOrTerminateInfo(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetSuspendOrTerminateInfo (rootActivity As Activity) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static System::String ^ GetSuspendOrTerminateInfo(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetSuspendOrTerminateInfo : System.Workflow.ComponentModel.Activity -&gt; string" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="8373e-132">Корневое действие экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-132">The root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="8373e-133">Получает сведения о прекращении или приостановке данного действия.</span><span class="sxs-lookup"><span data-stu-id="8373e-133">Retrieves the termination or suspend information of the given activity.</span></span></summary>
        <returns><span data-ttu-id="8373e-134">Тип <see cref="T:System.String" />, который содержит сведения о прекращении или приостановке.</span><span class="sxs-lookup"><span data-stu-id="8373e-134">A <see cref="T:System.String" /> that contains the termination or suspend information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowStatus">
      <MemberSignature Language="C#" Value="protected internal static System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig valuetype System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetWorkflowStatus (rootActivity As Activity) As WorkflowStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static System::Workflow::Runtime::WorkflowStatus GetWorkflowStatus(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetWorkflowStatus : System.Workflow.ComponentModel.Activity -&gt; System.Workflow.Runtime.WorkflowStatus" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="8373e-135">Корневое действие экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-135">The root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="8373e-136">Получает состояние рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-136">Retrieves the status of the workflow.</span></span></summary>
        <returns><span data-ttu-id="8373e-137">Значение перечисления <see cref="T:System.Workflow.Runtime.WorkflowStatus" />, обозначающее состояние рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-137">A <see cref="T:System.Workflow.Runtime.WorkflowStatus" /> enumeration value that denotes the status of the workflow.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid scopeId, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Activity LoadCompletedContextActivity(valuetype System.Guid scopeId, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function LoadCompletedContextActivity (scopeId As Guid, outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::ComponentModel::Activity ^ LoadCompletedContextActivity(Guid scopeId, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="abstract member LoadCompletedContextActivity : Guid * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowPersistenceService.LoadCompletedContextActivity (scopeId, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="System.Guid" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="scopeId"><span data-ttu-id="8373e-138">Тип <see cref="T:System.Guid" /> завершенной области.</span><span class="sxs-lookup"><span data-stu-id="8373e-138">The <see cref="T:System.Guid" /> of the completed scope.</span></span></param>
        <param name="outerActivity"><span data-ttu-id="8373e-139">Тип <see cref="T:System.Workflow.ComponentModel.Activity" />, представляющий действие, заключающее завершенную область.</span><span class="sxs-lookup"><span data-stu-id="8373e-139">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the activity that encloses the completed scope.</span></span></param>
        <summary><span data-ttu-id="8373e-140">При реализации в производном классе загружает заданную завершенную область обратно в память.</span><span class="sxs-lookup"><span data-stu-id="8373e-140">When implemented in a derived class, loads the specified completed scope back into memory.</span></span></summary>
        <returns><span data-ttu-id="8373e-141">Тип <see cref="T:System.Workflow.ComponentModel.Activity" />, представляющий завершенную область.</span><span class="sxs-lookup"><span data-stu-id="8373e-141">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8373e-142">Подсистема среды выполнения рабочих процессов использует <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> для реализации компенсации.</span><span class="sxs-lookup"><span data-stu-id="8373e-142">The workflow runtime engine uses <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> to implement compensation.</span></span> <span data-ttu-id="8373e-143">Необходимо восстановить идентичную копию завершенной области.</span><span class="sxs-lookup"><span data-stu-id="8373e-143">You must restore an identical copy of the completed scope.</span></span> <span data-ttu-id="8373e-144">Для этого необходимо восстановить допустимый тип <xref:System.IO.Stream> из представления завершенной области в хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="8373e-144">To do this, you must restore a valid <xref:System.IO.Stream> from your representation of the completed scope in the data store.</span></span> <span data-ttu-id="8373e-145">Затем необходимо передать этот тип <xref:System.IO.Stream> одному из перегруженных методов <xref:System.Workflow.ComponentModel.Activity.Load%2A> для выполнения десериализации области.</span><span class="sxs-lookup"><span data-stu-id="8373e-145">Then you must pass this <xref:System.IO.Stream> to one of the overloaded methods of <xref:System.Workflow.ComponentModel.Activity.Load%2A> to perform deserialization of the scope.</span></span>  
  
 <span data-ttu-id="8373e-146">Если служба постоянного хранения не может загрузить завершенную область из хранилища данных, необходимо вызывать исключение <xref:System.Workflow.Runtime.Hosting.PersistenceException> с помощью соответствующего сообщения.</span><span class="sxs-lookup"><span data-stu-id="8373e-146">If your persistence service cannot load the completed scope from its data store, it should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8373e-147">В следующем примере показана реализация метода `LoadCompletedContextActivity`.</span><span class="sxs-lookup"><span data-stu-id="8373e-147">The following example demonstrates an implementation of the `LoadCompletedContextActivity` method.</span></span> <span data-ttu-id="8373e-148">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="8373e-148">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="8373e-149">Дополнительные сведения см. в разделе [Образец настраиваемой службы сохраняемости](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="8373e-149">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#269](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#269)]
 [!code-vb[WF_Samples#269](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#269)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function LoadWorkflowInstanceState (instanceId As Guid) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::ComponentModel::Activity ^ LoadWorkflowInstanceState(Guid instanceId);" />
      <MemberSignature Language="F#" Value="abstract member LoadWorkflowInstanceState : Guid -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowPersistenceService.LoadWorkflowInstanceState instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="8373e-150"><see cref="T:System.Guid" /> корневого действия экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-150">The <see cref="T:System.Guid" /> of the root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="8373e-151">При реализации в производном классе загружает заданное состояние экземпляра рабочего процесса обратно в память.</span><span class="sxs-lookup"><span data-stu-id="8373e-151">When implemented in a derived class, loads the specified state of the workflow instance back into memory.</span></span></summary>
        <returns><span data-ttu-id="8373e-152">Объект класса <see cref="T:System.Workflow.ComponentModel.Activity" />, представляющий корневое действие экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-152">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the root activity of the workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8373e-153">Необходимо восстановить идентичную копию действия.</span><span class="sxs-lookup"><span data-stu-id="8373e-153">You must restore an identical copy of the activity.</span></span> <span data-ttu-id="8373e-154">Для этого необходимо восстановить допустимый тип <xref:System.IO.Stream> из представления экземпляра рабочего процесса в хранилище данных; затем необходимо передать этот тип <xref:System.IO.Stream> одному из перегруженных методов <xref:System.Workflow.ComponentModel.Activity.Load%2A> для десериализации состояния экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-154">To do this, you must restore a valid <xref:System.IO.Stream> from your representation of the workflow instance in the data store; then you must pass this <xref:System.IO.Stream> to one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Load%2A> methods to deserialize the workflow instance state.</span></span> <span data-ttu-id="8373e-155">Если служба постоянного хранения не может загрузить состояние экземпляра рабочего процесса из хранилища данных, необходимо вызвать исключение <xref:System.Workflow.Runtime.Hosting.PersistenceException> с помощью соответствующего сообщения.</span><span class="sxs-lookup"><span data-stu-id="8373e-155">If your persistence service cannot load the workflow instance state from its data store, it should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate message.</span></span>  
  
 <span data-ttu-id="8373e-156">Подсистема среды выполнения рабочих процессов реализует семантику блокировки для ограничения доступа к состоянию экземпляра рабочего процесса, сохраненного в хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="8373e-156">The workflow runtime engine implements locking semantics to restrict access to a workflow instance state that is saved in a data store.</span></span> <span data-ttu-id="8373e-157">К нему можно получить доступ с помощью служб постоянного хранения, выполняемых в нескольких процессах.</span><span class="sxs-lookup"><span data-stu-id="8373e-157">This can be accessed by persistence services that run in multiple processes.</span></span> <span data-ttu-id="8373e-158">Семантика блокировки разработана, чтобы предотвратить службы постоянного хранения, выполняемых в двух разных процессах, от одновременной загрузки одного экземпляра рабочего процесса в память.</span><span class="sxs-lookup"><span data-stu-id="8373e-158">The locking semantics are designed to prevent persistence services that run in two different processes from loading the same workflow instance into memory at the same time.</span></span> <span data-ttu-id="8373e-159">В зависимости от типа среды, для поддержки которой разработана служба постоянного хранения, можно выбрать, поддерживать ли эту функциональную возможность.</span><span class="sxs-lookup"><span data-stu-id="8373e-159">Depending on the type of environment that your persistence service is designed to support, you may choose whether to support this functionality.</span></span> <span data-ttu-id="8373e-160">При выборе поддержки семантики блокировки среды выполнения, если данное состояние экземпляра рабочего процесса было ранее заблокировано другим процессом, необходимо вызвать исключение <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span><span class="sxs-lookup"><span data-stu-id="8373e-160">If you choose to support the runtime locking semantics, and if this workflow instance state has been previously locked by another process, then you should throw a <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span></span> <span data-ttu-id="8373e-161">В противном случае необходимо заблокировать доступ к состоянию экземпляра рабочего процесса в хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="8373e-161">Otherwise, you should lock access to the workflow instance state in your data store.</span></span> <span data-ttu-id="8373e-162">Состояние экземпляра рабочего процесса может быть разблокировано путем вызова <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> или вызова <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> с параметром разблокировки с заданным значением `true`.</span><span class="sxs-lookup"><span data-stu-id="8373e-162">The workflow instance state can be unlocked by a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> or a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> with the unlock parameter set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8373e-163">В следующем примере показана реализация метода `LoadWorkflowInstanceState`.</span><span class="sxs-lookup"><span data-stu-id="8373e-163">The following example demonstrates an implementation of the `LoadWorkflowInstanceState` method.</span></span> <span data-ttu-id="8373e-164">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="8373e-164">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="8373e-165">Дополнительные сведения см. в разделе [Образец настраиваемой службы сохраняемости](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="8373e-165">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#266](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#266)]
 [!code-vb[WF_Samples#266](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#266)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFromDefaultSerializedForm">
      <MemberSignature Language="C#" Value="protected static System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm (byte[] activityBytes, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm(unsigned int8[] activityBytes, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RestoreFromDefaultSerializedForm (activityBytes As Byte(), outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Workflow::ComponentModel::Activity ^ RestoreFromDefaultSerializedForm(cli::array &lt;System::Byte&gt; ^ activityBytes, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="static member RestoreFromDefaultSerializedForm : byte[] * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm (activityBytes, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityBytes" Type="System.Byte[]" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activityBytes"><span data-ttu-id="8373e-166">Сериализованная форма <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="8373e-166">The serialized form of <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <param name="outerActivity"><span data-ttu-id="8373e-167">Внешний класс <see cref="T:System.Workflow.ComponentModel.Activity" />, содержащий <see cref="T:System.Workflow.ComponentModel.Activity" /> для восстановления.</span><span class="sxs-lookup"><span data-stu-id="8373e-167">The outer <see cref="T:System.Workflow.ComponentModel.Activity" />, containing the <see cref="T:System.Workflow.ComponentModel.Activity" /> to restore.</span></span></param>
        <summary><span data-ttu-id="8373e-168">Восстанавливает <see cref="T:System.Workflow.ComponentModel.Activity" /> из сериализованной формы.</span><span class="sxs-lookup"><span data-stu-id="8373e-168">Restores the <see cref="T:System.Workflow.ComponentModel.Activity" /> from its serialized form.</span></span></summary>
        <returns><span data-ttu-id="8373e-169">Восстановленный класс <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="8373e-169">The restored <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8373e-170">В следующем примере показана реализация метода `RestoreFromDefaultSerializedForm`.</span><span class="sxs-lookup"><span data-stu-id="8373e-170">The following example demonstrates an implementation of the `RestoreFromDefaultSerializedForm` method.</span></span> <span data-ttu-id="8373e-171">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="8373e-171">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="8373e-172">Дополнительные сведения см. в разделе [Образец настраиваемой службы сохраняемости](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="8373e-172">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#269](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#269)]
 [!code-vb[WF_Samples#269](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#269)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal abstract void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SaveCompletedContextActivity(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SaveCompletedContextActivity(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member SaveCompletedContextActivity : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowPersistenceService.SaveCompletedContextActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="8373e-173">Тип <see cref="T:System.Workflow.ComponentModel.Activity" />, представляющий завершенную область.</span><span class="sxs-lookup"><span data-stu-id="8373e-173">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span></span></param>
        <summary><span data-ttu-id="8373e-174">При реализации в производном классе сохраняет заданную завершенную область в хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="8373e-174">When implemented in a derived class, saves the specified completed scope to a data store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8373e-175">Подсистема среды выполнения рабочих процессов сохраняет состояние действий завершенной области для реализации компенсации.</span><span class="sxs-lookup"><span data-stu-id="8373e-175">The workflow runtime engine saves the state of completed scope activities in order to implement compensation.</span></span> <span data-ttu-id="8373e-176">Необходимо вызвать один из перегруженных методов <xref:System.Workflow.ComponentModel.Activity.Save%2A> для сериализации `activity` в <xref:System.IO.Stream>; затем можно выбрать дополнительную обработку <xref:System.IO.Stream> перед записью в хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="8373e-176">You must call one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Save%2A> methods to serialize `activity` into a <xref:System.IO.Stream>; you may then choose to additionally process the <xref:System.IO.Stream> before writing it to your data store.</span></span> <span data-ttu-id="8373e-177">Однако при вызове <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> подсистемой среды выполнения рабочих процессов необходимо восстановить идентичную копию действия.</span><span class="sxs-lookup"><span data-stu-id="8373e-177">However, when the workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>, you must restore an identical copy of the activity.</span></span>  
  
 <span data-ttu-id="8373e-178">Необходимо иметь возможность связать завершенную область с включающим экземпляром рабочего процесса для отметки области в качестве ненужной в хранилище данных при завершении или прерывании экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-178">You must be able to associate the completed scope with its enclosing workflow instance to mark the scope as unneeded in your data store when the workflow instance finishes or is terminated.</span></span> <span data-ttu-id="8373e-179">Поэтому также необходимо сохранить тип <xref:System.Guid> экземпляра рабочего процесса, связанный с завершенной областью; это можно сделать из свойства <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> типа <xref:System.Workflow.Runtime.WorkflowInstance>, связанного с `activity`.</span><span class="sxs-lookup"><span data-stu-id="8373e-179">Therefore, you should also save the <xref:System.Guid> of the workflow instance that is associated with the completed scope; this can be obtained from the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property of the <xref:System.Workflow.Runtime.WorkflowInstance> associated with `activity`.</span></span>  
  
 <span data-ttu-id="8373e-180"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> принимает <xref:System.Guid> завершенной области в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="8373e-180"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> takes the <xref:System.Guid> of the completed scope as a parameter.</span></span> <span data-ttu-id="8373e-181">Поэтому также необходимо сохранить свойство <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A>, связанное с `activity`.</span><span class="sxs-lookup"><span data-stu-id="8373e-181">Therefore, you must also save the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A> property associated with `activity`.</span></span> <span data-ttu-id="8373e-182">На это свойство можно указать ссылкой через поле <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty>`activity`.</span><span class="sxs-lookup"><span data-stu-id="8373e-182">This property can be referenced through the <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty> field of `activity`.</span></span>  
  
 <span data-ttu-id="8373e-183">При реализации службы постоянного хранения, использующей постоянное хранилище, для поддержки целостности с внутренним состоянием подсистемы среды выполнения рабочих процессов необходимо принять участие в пакетировании транзакции рабочего процесса, чтобы отложить фактическую запись в постоянное хранилище до точки фиксации рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-183">If you are implementing a persistence service that uses a durable store, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</span></span> <span data-ttu-id="8373e-184">Для принятия участия в пакетировании добавьте рабочий элемент в свойство <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>, представляющее ожидающие изменения, в базу данных и реализуйте интерфейс <xref:System.Workflow.Runtime.IPendingWork> в службе постоянного хранения.</span><span class="sxs-lookup"><span data-stu-id="8373e-184">To participate in batching, add a work item to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> property that represents the pending changes to the database, and implement the <xref:System.Workflow.Runtime.IPendingWork> interface in your persistence service.</span></span>  
  
 <span data-ttu-id="8373e-185">Если завершенную область невозможно сохранить в хранилище данных, необходимо вызвать исключение <xref:System.Workflow.Runtime.Hosting.PersistenceException> с соответствующим сообщением об ошибке.</span><span class="sxs-lookup"><span data-stu-id="8373e-185">If you cannot save the completed scope to your data store, you should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate error message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8373e-186">В следующем примере показана реализация метода `SaveCompletedContextActivity`.</span><span class="sxs-lookup"><span data-stu-id="8373e-186">The following example demonstrates an implementation of the `SaveCompletedContextActivity` method.</span></span> <span data-ttu-id="8373e-187">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="8373e-187">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="8373e-188">Дополнительные сведения см. в разделе [Образец настраиваемой службы сохраняемости](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="8373e-188">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#268](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#268)]
 [!code-vb[WF_Samples#268](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#268)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SaveWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity, bool unlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub SaveWorkflowInstanceState (rootActivity As Activity, unlock As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SaveWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity, bool unlock);" />
      <MemberSignature Language="F#" Value="abstract member SaveWorkflowInstanceState : System.Workflow.ComponentModel.Activity * bool -&gt; unit" Usage="workflowPersistenceService.SaveWorkflowInstanceState (rootActivity, unlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="unlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="8373e-189">Корневое действие экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-189">The root activity of the workflow instance.</span></span></param>
        <param name="unlock"><span data-ttu-id="8373e-190"><see langword="true" />, если экземпляр рабочего процесса не должен быть заблокирован; <see langword="false" />, если экземпляр рабочего процесса должен быть заблокирован.</span><span class="sxs-lookup"><span data-stu-id="8373e-190"><see langword="true" /> if the workflow instance should not be locked; <see langword="false" /> if the workflow instance should be locked.</span></span></param>
        <summary><span data-ttu-id="8373e-191">При реализации в производном классе сохраняет состояние экземпляра рабочего процесса в хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="8373e-191">When implemented in a derived class, saves the workflow instance state to a data store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8373e-192">Необходимо вызвать один из перегруженных методов <xref:System.Workflow.ComponentModel.Activity.Save%2A> для сериализации `rootActivity` в <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="8373e-192">You must call one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Save%2A> methods to serialize `rootActivity` into a <xref:System.IO.Stream>.</span></span> <span data-ttu-id="8373e-193">Затем можно выбрать дополнительную обработку <xref:System.IO.Stream> перед записью в хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="8373e-193">You can then choose to additionally process the <xref:System.IO.Stream> before writing it to your data store.</span></span> <span data-ttu-id="8373e-194">Однако при вызове <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> подсистемой среды выполнения рабочих процессов необходимо восстановить идентичную копию корневого действия.</span><span class="sxs-lookup"><span data-stu-id="8373e-194">However, when the workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>, you must restore an identical copy of the root activity.</span></span> <span data-ttu-id="8373e-195">Если состояние экземпляра рабочего процесса невозможно сохранить в хранилище данных, необходимо вызвать исключение <xref:System.Workflow.Runtime.Hosting.PersistenceException> с соответствующим сообщением об ошибке.</span><span class="sxs-lookup"><span data-stu-id="8373e-195">If you cannot save the workflow instance state to your data store, you should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate error message.</span></span>  
  
 <span data-ttu-id="8373e-196">Подсистема среды выполнения рабочих процессов обеспечивает семантику блокировки для ограничения доступа к состоянию экземпляра рабочего процесса, сохраненного в хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="8373e-196">The workflow runtime engine provides locking semantics to restrict access to a workflow instance state that is saved in the data store.</span></span> <span data-ttu-id="8373e-197">К нему можно получить доступ с помощью служб постоянного хранения, выполняемых в разных ведущих приложениях и указывающих на одно хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="8373e-197">This can be accessed by the persistence services running in multiple hosts and pointing to the same data store.</span></span> <span data-ttu-id="8373e-198">Семантика блокировки разработана, чтобы предотвратить службы постоянного хранения, выполняемых в двух разных средах выполнения рабочих процессов, от одновременной загрузки одного экземпляра рабочего процесса в память.</span><span class="sxs-lookup"><span data-stu-id="8373e-198">The locking semantics are designed to prevent persistence services that run in two different workflow runtimes from loading the same workflow instance into memory at the same time.</span></span> <span data-ttu-id="8373e-199">В зависимости от типа среды, для поддержки которой разработана служба постоянного хранения, можно выбрать, поддерживать ли эту функциональную возможность.</span><span class="sxs-lookup"><span data-stu-id="8373e-199">Depending on the type of environment your persistence service is designed to support, you can choose whether to support this functionality.</span></span> <span data-ttu-id="8373e-200">При выборе поддержки семантики блокировки среды выполнения, если служба постоянного хранения пытается сохранить экземпляр рабочего процесса, который ранее был заблокирован другой службой постоянного хранения, необходимо вызвать исключение <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span><span class="sxs-lookup"><span data-stu-id="8373e-200">If you choose to support the runtime locking semantics, then, if a persistence service tries to save a workflow instance state that has been previously locked by another persistence service, you should throw a <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span></span> <span data-ttu-id="8373e-201">Если для `unlock` задано значение `true`, необходимо разблокировать доступ к состоянию экземпляра рабочего процесса после его сохранения.</span><span class="sxs-lookup"><span data-stu-id="8373e-201">If `unlock` is `true`, you should unlock access to the workflow instance state after you save it.</span></span>  
  
 <span data-ttu-id="8373e-202"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> принимает <xref:System.Guid> экземпляра рабочего процесса в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="8373e-202"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> takes the <xref:System.Guid> of the workflow instance as a parameter.</span></span> <span data-ttu-id="8373e-203">Поэтому необходимо сохранить <xref:System.Guid>.</span><span class="sxs-lookup"><span data-stu-id="8373e-203">Therefore, you should save this <xref:System.Guid>.</span></span> <span data-ttu-id="8373e-204">Также можно использовать этот тип <xref:System.Guid>, чтобы связать экземпляр рабочего процесса с сохраненными состояниями завершенных областей.</span><span class="sxs-lookup"><span data-stu-id="8373e-204">You can also use this <xref:System.Guid> to associate the workflow instance with the saved states of its completed scopes.</span></span> <span data-ttu-id="8373e-205">Это необходимо сделать, поскольку необходимо иметь возможность пометить эти завершенные области в качестве ненужных при завершении экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-205">You must do this because you must be able to mark these completed scopes as unneeded when the workflow instance completes.</span></span>  
  
 <span data-ttu-id="8373e-206">Подсистема среды выполнения рабочих процессов вызывает <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> в последний раз при завершении или прерывании экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-206">The workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> a final time when the workflow instance is completed or terminated.</span></span> <span data-ttu-id="8373e-207">Поэтому если <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> равно <xref:System.Workflow.Runtime.WorkflowStatus.Completed> или <xref:System.Workflow.Runtime.WorkflowStatus.Terminated>, можно безопасно удалить экземпляр рабочего процесса и все связанные завершенные области из хранилища данных.</span><span class="sxs-lookup"><span data-stu-id="8373e-207">Therefore, if <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> is equal to <xref:System.Workflow.Runtime.WorkflowStatus.Completed> or <xref:System.Workflow.Runtime.WorkflowStatus.Terminated>, you can safely delete the workflow instance and all its associated completed scopes from your data store.</span></span> <span data-ttu-id="8373e-208">В качестве альтернативы можно подписаться на события <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> или <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated>, чтобы определить, когда можно безопасно удалить записи, связанные с экземпляром рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-208">Alternatively, you can subscribe to the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> or <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events to determine when it is safe to delete records associated with the workflow instance.</span></span> <span data-ttu-id="8373e-209">Фактическое удаление записей из хранилища данных зависит от реализации.</span><span class="sxs-lookup"><span data-stu-id="8373e-209">Whether you actually delete the records from your data store depends on your implementation.</span></span>  
  
 <span data-ttu-id="8373e-210">При реализации службы постоянного хранения, использующей постоянное хранилище, для поддержки целостности с внутренним состоянием подсистемы среды выполнения рабочих процессов необходимо принять участие в пакетировании транзакции рабочего процесса, чтобы отложить фактическую запись в постоянное хранилище до точки фиксации рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-210">If you implement a persistence service that uses a durable store, then, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</span></span> <span data-ttu-id="8373e-211">Для принятия участия в пакетировании добавьте рабочий элемент, представляющий ожидающие изменения, в постоянное хранилище в свойство <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> и реализуйте интерфейс <xref:System.Workflow.Runtime.IPendingWork> в службе постоянного хранения.</span><span class="sxs-lookup"><span data-stu-id="8373e-211">To participate in batching, add a work item that represents the pending changes to your durable store to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> property, and implement the <xref:System.Workflow.Runtime.IPendingWork> interface in your persistence service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8373e-212">В следующем примере показана реализация метода `SaveWorkflowInstanceState`.</span><span class="sxs-lookup"><span data-stu-id="8373e-212">The following example demonstrates an implementation of the `SaveWorkflowInstanceState` method.</span></span> <span data-ttu-id="8373e-213">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="8373e-213">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="8373e-214">Дополнительные сведения см. в разделе [Образец настраиваемой службы сохраняемости](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="8373e-214">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#264](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#264)]
 [!code-vb[WF_Samples#264](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#264)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadOnIdle">
      <MemberSignature Language="C#" Value="protected internal abstract bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool UnloadOnIdle(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool UnloadOnIdle(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member UnloadOnIdle : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="workflowPersistenceService.UnloadOnIdle activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="8373e-215">Тип <see cref="T:System.Workflow.ComponentModel.Activity" />, представляющий завершенную область.</span><span class="sxs-lookup"><span data-stu-id="8373e-215">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span></span></param>
        <summary><span data-ttu-id="8373e-216">Определяет, необходима ли выгрузка незанятого рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-216">Determines whether a workflow should be unloaded when idle.</span></span></summary>
        <returns><span data-ttu-id="8373e-217">Если <see langword="true" />, подсистема среды выполнения рабочих процессов выгружает заданный рабочий процесс при его освобождении.</span><span class="sxs-lookup"><span data-stu-id="8373e-217">If <see langword="true" />, the workflow runtime engine unloads the specified workflow when it becomes idle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8373e-218">В следующем примере показана реализация метода `UnloadOnIdle`.</span><span class="sxs-lookup"><span data-stu-id="8373e-218">The following example demonstrates an implementation of the `UnloadOnIdle` method.</span></span> <span data-ttu-id="8373e-219">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="8373e-219">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="8373e-220">Дополнительные сведения см. в разделе [Образец настраиваемой службы сохраняемости](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="8373e-220">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#270](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#270)]
 [!code-vb[WF_Samples#270](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#270)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void UnlockWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub UnlockWorkflowInstanceState (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void UnlockWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="abstract member UnlockWorkflowInstanceState : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowPersistenceService.UnlockWorkflowInstanceState rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="8373e-221">Корневое действие экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-221">The root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="8373e-222">При переопределении в производном классе разблокирует состояние экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="8373e-222">When overridden in a derived class, unlocks the workflow instance state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8373e-223">Данный метод является абстрактным, так что он не содержит реализации по умолчанию для блокировки и разблокировки.</span><span class="sxs-lookup"><span data-stu-id="8373e-223">This method is abstract, so it does not contain a default implementation on locking and unlocking.</span></span>  
  
 <span data-ttu-id="8373e-224">При реализации пользовательской службы постоянного хранения при необходимости реализовать схему блокировки необходимо переопределить данный метод и предоставить механизм блокировки-разблокировки в методе <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>, основанном на значении параметра разблокировки.</span><span class="sxs-lookup"><span data-stu-id="8373e-224">While implementing a custom persistence service, if you want to implement a locking scheme you will need to override this method and provide a locking-unlocking mechanism in the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> method based on the value of the unlock parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8373e-225">В следующем примере показана реализация метода `UnlockWorkflowInstanceState`.</span><span class="sxs-lookup"><span data-stu-id="8373e-225">The following example demonstrates an implementation of the `UnlockWorkflowInstanceState` method.</span></span> <span data-ttu-id="8373e-226">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="8373e-226">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="8373e-227">Дополнительные сведения см. в разделе [Образец настраиваемой службы сохраняемости](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="8373e-227">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#267](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#267)]
 [!code-vb[WF_Samples#267](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#267)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
