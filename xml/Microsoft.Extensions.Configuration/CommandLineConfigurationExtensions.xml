<Type Name="CommandLineConfigurationExtensions" FullName="Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c62ec0e0247777af79e2faa590c0b3aeab3825d5" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73403190" /></Metadata><TypeSignature Language="C#" Value="public static class CommandLineConfigurationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CommandLineConfigurationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CommandLineConfigurationExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandLineConfigurationExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type CommandLineConfigurationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Configuration.CommandLine</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Методы расширения для регистрации <see cref="T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider" /> с использованием <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddCommandLine">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLine (this Microsoft.Extensions.Configuration.IConfigurationBuilder builder, Action&lt;Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource&gt; configureSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLine(class Microsoft.Extensions.Configuration.IConfigurationBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource&gt; configureSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCommandLine (builder As IConfigurationBuilder, configureSource As Action(Of CommandLineConfigurationSource)) As IConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Configuration::IConfigurationBuilder ^ AddCommandLine(Microsoft::Extensions::Configuration::IConfigurationBuilder ^ builder, Action&lt;Microsoft::Extensions::Configuration::CommandLine::CommandLineConfigurationSource ^&gt; ^ configureSource);" />
      <MemberSignature Language="F#" Value="static member AddCommandLine : Microsoft.Extensions.Configuration.IConfigurationBuilder * Action&lt;Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource&gt; -&gt; Microsoft.Extensions.Configuration.IConfigurationBuilder" Usage="Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine (builder, configureSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.IConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Configuration.IConfigurationBuilder" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="configureSource" Type="System.Action&lt;Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="builder">Объект <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />, в который необходимо выполнить добавление.</param>
        <param name="configureSource">Настраивает источник.</param>
        <summary>Добавляет <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />, считывающий значения конфигурации из командной строки.</summary>
        <returns><see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCommandLine">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLine (this Microsoft.Extensions.Configuration.IConfigurationBuilder configurationBuilder, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLine(class Microsoft.Extensions.Configuration.IConfigurationBuilder configurationBuilder, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCommandLine (configurationBuilder As IConfigurationBuilder, args As String()) As IConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Configuration::IConfigurationBuilder ^ AddCommandLine(Microsoft::Extensions::Configuration::IConfigurationBuilder ^ configurationBuilder, cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member AddCommandLine : Microsoft.Extensions.Configuration.IConfigurationBuilder * string[] -&gt; Microsoft.Extensions.Configuration.IConfigurationBuilder" Usage="Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine (configurationBuilder, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.CommandLine</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.IConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationBuilder" Type="Microsoft.Extensions.Configuration.IConfigurationBuilder" RefType="this" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="configurationBuilder">Объект <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />, в который необходимо выполнить добавление.</param>
        <param name="args">Аргументы командной строки.</param>
        <summary>Добавляет <see cref="T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider" /><see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />, считывающий значения конфигурации из командной строки.</summary>
        <returns><see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        <remarks><para>Значения, передаваемые в командной строке, в массиве строк <c>args</c> , должны быть набором ключей с двумя дефисами ("--"), а затем значениями, раздельными по знаку равенства ("=") или пробелам ("").</para>
          <para>Косую черту ("/") можно использовать в качестве альтернативного префикса с либо с равной, либо с пробелом, а также при использовании знака равенства префикс можно полностью оставить. </para>
          <para>Существует пять основных альтернативных форматов для аргументов: <c>Key1 = value1--key2 = value2/Key3 = значение3--Key4 value4/key5 value5</c>.</para></remarks>
        <example>Простое консольное приложение, имеющее пять значений. 
              <code>
                // dotnet run key1=value1 --key2=value2 /key3=value3 --key4 value4 /key5 value5
                
                using Microsoft.Extensions.Configuration;
                using System;
                
                namespace CommandLineSample
                {
                   public class Program
                   {
                       public static void Main(string[] args)
                       {
                           var builder = new ConfigurationBuilder();
                           builder.AddCommandLine(args);
                
                           var config = builder.Build();
                
                           Console.WriteLine($"Key1: '{config["Key1"]}'");
                           Console.WriteLine($"Key2: '{config["Key2"]}'");
                           Console.WriteLine($"Key3: '{config["Key3"]}'");
                           Console.WriteLine($"Key4: '{config["Key4"]}'");
                           Console.WriteLine($"Key5: '{config["Key5"]}'");
                       }
                   }
                }
              </code></example>
      </Docs>
    </Member>
    <Member MemberName="AddCommandLine">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLine (this Microsoft.Extensions.Configuration.IConfigurationBuilder configurationBuilder, string[] args, System.Collections.Generic.IDictionary&lt;string,string&gt; switchMappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLine(class Microsoft.Extensions.Configuration.IConfigurationBuilder configurationBuilder, string[] args, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; switchMappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String[],System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCommandLine (configurationBuilder As IConfigurationBuilder, args As String(), switchMappings As IDictionary(Of String, String)) As IConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Configuration::IConfigurationBuilder ^ AddCommandLine(Microsoft::Extensions::Configuration::IConfigurationBuilder ^ configurationBuilder, cli::array &lt;System::String ^&gt; ^ args, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ switchMappings);" />
      <MemberSignature Language="F#" Value="static member AddCommandLine : Microsoft.Extensions.Configuration.IConfigurationBuilder * string[] * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Extensions.Configuration.IConfigurationBuilder" Usage="Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine (configurationBuilder, args, switchMappings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.CommandLine</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.IConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationBuilder" Type="Microsoft.Extensions.Configuration.IConfigurationBuilder" RefType="this" />
        <Parameter Name="args" Type="System.String[]" />
        <Parameter Name="switchMappings" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="configurationBuilder">Объект <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />, в который необходимо выполнить добавление.</param>
        <param name="args">Аргументы командной строки.</param>
        <param name="switchMappings">Сопоставления переключений. Словарь коротких ключей (с префиксом "-") и ключей псевдонимов (с префиксом "--"), сопоставленных с ключом конфигурации (без префикса).</param>
        <summary>Добавляет <see cref="T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider" /><see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />, считывающий значения конфигурации из командной строки с использованием указанных сопоставлений переключений.</summary>
        <returns><see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        <remarks><para><c>Свитчмаппингс</c> позволяет использовать дополнительные форматы для альтернативных коротких и псевдонимов клавиш из командной строки. См. также базовую версию <c>аддкоммандлине</c> для поддерживаемых стандартных форматов.</para>
          <para>Короткие ключи начинаются с одиночного тире ("-") и сопоставляются с именем основного ключа (без префикса) и могут использоваться с либо с равно, либо с пробелом. Сопоставления одного тире предназначены для более коротких альтернативных параметров.</para>
          <para>Обратите внимание, что невозможно напрямую получить доступ к одному параметру тире, но необходимо определить сопоставление коммутатора и получить доступ с помощью полного ключа. Передача неопределенного однопунктирного аргумента будет вызываться как <c>FormatException</c>.</para>
          <para>Для коротких аргументов существует два формата: <c>-K1 = значение1-априорной оценкой K2 value2</c>.</para>
          <para>Определения ключей псевдонимов начинаются с двух дефисов ("--") и сопоставляются с именем основного ключа (без префикса) и могут использоваться вместо обычного ключа. Они также работают при использовании префикса косой черты в командной строке (но не в формате префикса "не равно").</para>
          <para>Есть только четыре формата для аргументов с псевдонимами: <c>--alt3 = значение3/alt4 = value4--alt5 value5/alt6 value6</c>.</para></remarks>
        <example>Простое консольное приложение с двумя короткими и четырьмя сопоставлениями переключателей псевдонимов. 
              <code>
                // dotnet run -k1=value1 -k2 value2 --alt3=value2 /alt4=value3 --alt5 value5 /alt6 value6
                
                using Microsoft.Extensions.Configuration;
                using System;
                using System.Collections.Generic;
                
                namespace CommandLineSample
                {
                   public class Program
                   {
                       public static void Main(string[] args)
                       {
                           var switchMappings = new Dictionary&lt;string, string&gt;()
                           {
                               { "-k1", "key1" },
                               { "-k2", "key2" },
                               { "--alt3", "key3" },
                               { "--alt4", "key4" },
                               { "--alt5", "key5" },
                               { "--alt6", "key6" },
                           };
                           var builder = new ConfigurationBuilder();
                           builder.AddCommandLine(args, switchMappings);
                
                           var config = builder.Build();
                
                           Console.WriteLine($"Key1: '{config["Key1"]}'");
                           Console.WriteLine($"Key2: '{config["Key2"]}'");
                           Console.WriteLine($"Key3: '{config["Key3"]}'");
                           Console.WriteLine($"Key4: '{config["Key4"]}'");
                           Console.WriteLine($"Key5: '{config["Key5"]}'");
                           Console.WriteLine($"Key6: '{config["Key6"]}'");
                       }
                   }
                }
              </code></example>
      </Docs>
    </Member>
  </Members>
</Type>
