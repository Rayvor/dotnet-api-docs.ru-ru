<Type Name="ChainedConfigurationProvider" FullName="Microsoft.Extensions.Configuration.ChainedConfigurationProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4bd80e57973c566b3b384f800192fb30085ced00" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72418606" /></Metadata><TypeSignature Language="C#" Value="public class ChainedConfigurationProvider : IDisposable, Microsoft.Extensions.Configuration.IConfigurationProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChainedConfigurationProvider extends System.Object implements class Microsoft.Extensions.Configuration.IConfigurationProvider, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Configuration.ChainedConfigurationProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ChainedConfigurationProvider&#xA;Implements IConfigurationProvider, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChainedConfigurationProvider : IDisposable, Microsoft::Extensions::Configuration::IConfigurationProvider" />
  <TypeSignature Language="F#" Value="type ChainedConfigurationProvider = class&#xA;    interface IConfigurationProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Configuration.IConfigurationProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Цепная реализация <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChainedConfigurationProvider (Microsoft.Extensions.Configuration.ChainedConfigurationSource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Configuration.ChainedConfigurationSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.ChainedConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As ChainedConfigurationSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChainedConfigurationProvider(Microsoft::Extensions::Configuration::ChainedConfigurationSource ^ source);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Configuration.ChainedConfigurationProvider : Microsoft.Extensions.Configuration.ChainedConfigurationSource -&gt; Microsoft.Extensions.Configuration.ChainedConfigurationProvider" Usage="new Microsoft.Extensions.Configuration.ChainedConfigurationProvider source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Extensions.Configuration.ChainedConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="source">Исходная конфигурация.</param>
        <summary>Инициализирует новый экземпляр на основе исходной конфигурации.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="chainedConfigurationProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetChildKeys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; GetChildKeys (System.Collections.Generic.IEnumerable&lt;string&gt; earlierKeys, string parentPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetChildKeys(class System.Collections.Generic.IEnumerable`1&lt;string&gt; earlierKeys, string parentPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildKeys (earlierKeys As IEnumerable(Of String), parentPath As String) As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetChildKeys(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ earlierKeys, System::String ^ parentPath);" />
      <MemberSignature Language="F#" Value="abstract member GetChildKeys : seq&lt;string&gt; * string -&gt; seq&lt;string&gt;&#xA;override this.GetChildKeys : seq&lt;string&gt; * string -&gt; seq&lt;string&gt;" Usage="chainedConfigurationProvider.GetChildKeys (earlierKeys, parentPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Configuration.IConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="earlierKeys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="parentPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="earlierKeys">Дочерние ключи, возвращенные предыдущими поставщиками для того же родительского пути.</param>
        <param name="parentPath">Родительский путь.</param>
        <summary>Возвращает ключи конфигурации непосредственных потомков для заданного родительского пути на основе данных этого поставщика <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> и набора ключей, возвращенных всеми предыдущими поставщиками <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />.</summary>
        <returns>Дочерние ключи.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReloadToken">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.IChangeToken GetReloadToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Primitives.IChangeToken GetReloadToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.GetReloadToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReloadToken () As IChangeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::Primitives::IChangeToken ^ GetReloadToken();" />
      <MemberSignature Language="F#" Value="abstract member GetReloadToken : unit -&gt; Microsoft.Extensions.Primitives.IChangeToken&#xA;override this.GetReloadToken : unit -&gt; Microsoft.Extensions.Primitives.IChangeToken" Usage="chainedConfigurationProvider.GetReloadToken " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Configuration.IConfigurationProvider.GetReloadToken</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.IChangeToken</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает токен изменения, если этот поставщик поддерживает отслеживание изменений; в противном случае NULL.</summary>
        <returns>Токен изменения.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load();" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit&#xA;override this.Load : unit -&gt; unit" Usage="chainedConfigurationProvider.Load " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Configuration.IConfigurationProvider.Load</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Загружает значения конфигурации из источника, представленного этим интерфейсом <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.Set(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Set(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Set : string * string -&gt; unit&#xA;override this.Set : string * string -&gt; unit" Usage="chainedConfigurationProvider.Set (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Configuration.IConfigurationProvider.Set(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Ключ.</param>
        <param name="value">Значение.</param>
        <summary>Задает значение конфигурации для указанного ключа.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public bool TryGet (string key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGet(string key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.TryGet(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGet (key As String, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGet(System::String ^ key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGet : string * string -&gt; bool&#xA;override this.TryGet : string * string -&gt; bool" Usage="chainedConfigurationProvider.TryGet (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Configuration.IConfigurationProvider.TryGet(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">Ключ.</param>
        <param name="value">Значение.</param>
        <summary>Пытается получить значение конфигурации для указанного ключа.</summary>
        <returns>Значение <see langword="true" />, если значение для указанного ключа найдено; в противном случае значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
