<Type Name="IFileChangeNotificationSystem" FullName="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5e793f351d819453b08ec74d61f2f15c3113a2b5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69066833" /></Metadata><TypeSignature Language="C#" Value="public interface IFileChangeNotificationSystem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFileChangeNotificationSystem" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFileChangeNotificationSystem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFileChangeNotificationSystem" />
  <TypeSignature Language="F#" Value="type IFileChangeNotificationSystem = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет способ предоставления пользовательского объекта <see cref="T:System.Runtime.Caching.FileChangeMonitor" /> реализации кэша.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В ASP.NET <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> интерфейс предоставляет доступ к внутреннему управлению уведомлениями о смене файлов.  
  
 Интерфейс используется внутри <xref:System.Runtime.Caching.HostFileChangeMonitor>класса. <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>  
  
 Если реализация кэша выполняется в домене приложения ASP.NET, ASP.NET реализует <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> интерфейс <xref:System.Runtime.Caching.ObjectCache.Host%2A> через свойство. <xref:System.Runtime.Caching.HostFileChangeMonitor> Класс обнаруживает это свойство и использует систему уведомлений об изменениях файлов ASP.NET для исключения записей кэша на основе уведомления об изменении файла.  
  
 В приложениях non-ASP.NET отсутствует среда размещения, реализующая пользовательский <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> интерфейс. В результате <xref:System.Runtime.Caching.HostFileChangeMonitor> класс <xref:System.IO.FileSystemWatcher> использует класс среды CLR.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StartMonitoring">
      <MemberSignature Language="C#" Value="public void StartMonitoring (string filePath, System.Runtime.Caching.OnChangedCallback onChangedCallback, out object state, out DateTimeOffset lastWriteTime, out long fileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartMonitoring(string filePath, class System.Runtime.Caching.OnChangedCallback onChangedCallback, [out] object&amp; state, [out] valuetype System.DateTimeOffset&amp; lastWriteTime, [out] int64&amp; fileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartMonitoring(System::String ^ filePath, System::Runtime::Caching::OnChangedCallback ^ onChangedCallback, [Runtime::InteropServices::Out] System::Object ^ % state, [Runtime::InteropServices::Out] DateTimeOffset % lastWriteTime, [Runtime::InteropServices::Out] long % fileSize);" />
      <MemberSignature Language="F#" Value="abstract member StartMonitoring : string * System.Runtime.Caching.OnChangedCallback *  *  *  -&gt; unit" Usage="iFileChangeNotificationSystem.StartMonitoring (filePath, onChangedCallback, state, lastWriteTime, fileSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
        <Parameter Name="state" Type="System.Object" RefType="out" />
        <Parameter Name="lastWriteTime" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="fileSize" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filePath">Полный физический путь каталога или файла для отслеживания изменений.</param>
        <param name="onChangedCallback">Ссылка на метод, реализующий делегат <see cref="T:System.Runtime.Caching.OnChangedCallback" />. При изменении отслеживаемого файла или каталога реализация среды узла интерфейса <see cref="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" /> создает событие, вызывая класс <see cref="T:System.Runtime.Caching.OnChangedCallback" />.</param>
        <param name="state">Состояние, предоставляемое средой узла. Реализации кэша и пользовательские мониторы изменений должны рассматривать значение состояния как непрозрачное. Однако состояние должно храниться, чтобы при вызове метода <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" /> реализацией кэша состояние можно было отправлять в среду узла.</param>
        <param name="lastWriteTime">При возвращении этот метод содержит дату и время последней операции записи для <paramref name="filePath" />. Этот параметр передается неинициализированным. Этот параметр возвращается из среды узла.</param>
        <param name="fileSize">При возвращении этот метод содержит общий размер отслеживаемого пути <paramref name="filePath" />. Этот параметр передается неинициализированным. Этот параметр возвращается из среды узла.</param>
        <summary>Регистрирует путь к файлу для мониторинга в среде узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется пользовательскими объектами кэша и пользовательскими мониторами изменений, которые реализуют <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> интерфейс среды узла для регистрации путей к файлам для мониторинга в среде размещения. Метод вызывается разработчиками <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> интерфейса для регистрации файла или каталога для отслеживания изменений. <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopMonitoring">
      <MemberSignature Language="C#" Value="public void StopMonitoring (string filePath, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopMonitoring(string filePath, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopMonitoring (filePath As String, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopMonitoring(System::String ^ filePath, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member StopMonitoring : string * obj -&gt; unit" Usage="iFileChangeNotificationSystem.StopMonitoring (filePath, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filePath">Путь файла или папки для остановки мониторинга. Должен совпадать со значением пути к файлу, переданным в более раннем вызове метода <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />.</param>
        <param name="state">Сведения о состоянии, изначально предоставленные средой узла в более раннем вызове метода <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />.</param>
        <summary>Завершает отслеживание изменений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> Метод должен вызываться пользовательскими кэшами и пользовательскими мониторами изменений, которые удаляются средой размещения для того, чтобы предотвратить мониторинг путей к файлам и каталогов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
