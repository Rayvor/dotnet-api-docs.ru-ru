<Type Name="RoutingExtensionElement" FullName="System.ServiceModel.Routing.Configuration.RoutingExtensionElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9e67b93dd4d1f79f2097c650b748d18048f2da5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69235413" /></Metadata><TypeSignature Language="C#" Value="public sealed class RoutingExtensionElement : System.ServiceModel.Configuration.BehaviorExtensionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RoutingExtensionElement extends System.ServiceModel.Configuration.BehaviorExtensionElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoutingExtensionElement&#xA;Inherits BehaviorExtensionElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutingExtensionElement sealed : System::ServiceModel::Configuration::BehaviorExtensionElement" />
  <TypeSignature Language="F#" Value="type RoutingExtensionElement = class&#xA;    inherit BehaviorExtensionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.BehaviorExtensionElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет элемент конфигурации, содержащий дочерние элементы, в которых указывается режим маршрутизации.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutingExtensionElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutingExtensionElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BehaviorType">
      <MemberSignature Language="C#" Value="public override Type BehaviorType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BehaviorType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BehaviorType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BehaviorType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BehaviorType : Type" Usage="System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип поведения.</summary>
        <value>Тип поведения.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBehavior">
      <MemberSignature Language="C#" Value="protected internal override object CreateBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object CreateBehavior() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateBehavior () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ CreateBehavior();" />
      <MemberSignature Language="F#" Value="override this.CreateBehavior : unit -&gt; obj" Usage="routingExtensionElement.CreateBehavior " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureOrderedDispatch">
      <MemberSignature Language="C#" Value="public bool EnsureOrderedDispatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnsureOrderedDispatch" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch" />
      <MemberSignature Language="VB.NET" Value="Public Property EnsureOrderedDispatch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnsureOrderedDispatch { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnsureOrderedDispatch : bool with get, set" Usage="System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("ensureOrderedDispatch", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее, отправляются ли сообщения точно в том порядке, в котором они были отправлены.</summary>
        <value>Значение <see langword="true" />, если сообщения должны диспетчеризироваться в порядке их отправки; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTableName">
      <MemberSignature Language="C#" Value="public string FilterTableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterTableName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterTableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterTableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterTableName : string with get, set" Usage="System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filterTableName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя таблицы фильтров, используемой этой службой маршрутизации для маршрутизации сообщений.</summary>
        <value>Имя таблицы фильтров.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteOnHeadersOnly">
      <MemberSignature Language="C#" Value="public bool RouteOnHeadersOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RouteOnHeadersOnly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteOnHeadersOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RouteOnHeadersOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RouteOnHeadersOnly : bool with get, set" Usage="System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("routeOnHeadersOnly", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, которое показывает, разрешается ли фильтру доступ только к заголовкам сообщений или также к тексту сообщений.</summary>
        <value><see langword="true" />значение, если фильтр может получить доступ только к значениям заголовка. в противном случае —. <see langword="false" /> Значение по умолчанию — <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapProcessingEnabled">
      <MemberSignature Language="C#" Value="public bool SoapProcessingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SoapProcessingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapProcessingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SoapProcessingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SoapProcessingEnabled : bool with get, set" Usage="System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("soapProcessingEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, нужно ли выполнять обработку SOAP.</summary>
        <value><see langword="true" />значение, если сообщения должны быть упакованы; в противном случае —. <see langword="false" /> Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке SOAP см. в разделе <xref:System.ServiceModel.Routing.SoapProcessingBehavior>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
