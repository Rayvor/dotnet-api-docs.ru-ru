<Type Name="JsonExtensionDataAttribute" FullName="System.Text.Json.Serialization.JsonExtensionDataAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="865f483345c53836d8fb8cedf179bb9e46247d57" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70683536" /></Metadata><TypeSignature Language="C#" Value="public sealed class JsonExtensionDataAttribute : System.Text.Json.Serialization.JsonAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JsonExtensionDataAttribute extends System.Text.Json.Serialization.JsonAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Serialization.JsonExtensionDataAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JsonExtensionDataAttribute&#xA;Inherits JsonAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonExtensionDataAttribute sealed : System::Text::Json::Serialization::JsonAttribute" />
  <TypeSignature Language="F#" Value="type JsonExtensionDataAttribute = class&#xA;    inherit JsonAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Json.Serialization.JsonAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>При указании для свойства типа <see cref="T:System.Collections.Generic.IDictionary`2" /> все свойства, не имеющие соответствующего элемента, добавляются в этот словарь во время десериализации и записываются во время сериализации.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

`TKey` Значение словаря должно быть <xref:System.String>, и `TValue` должно быть <xref:System.Text.Json.JsonElement> или <xref:System.Object>.

При десериализации при <xref:System.Object>использовании значение JSON "null" рассматривается `null` как ссылка на объект, а при использовании <xref:System.Text.Json.JsonElement>"null" обрабатывается как жсонелемент с <xref:System.Text.Json.JsonElement.ValueKind> параметром <xref:System.Text.Json.JsonValueKind.Null?displayProperty=nameWithType>.
            
Во время сериализации имя свойства данных расширения не включается в JSON; данные, содержащиеся в данных расширения, сериализуются как свойства объекта JSON.
            
Если в типе с этим атрибутом данных расширения имеется более одного свойства или если само свойство имеет <see cref="T:System.Collections.Generic.IDictionary`2" /> неправильный тип <xref:System.InvalidOperationException> , то во время первой сериализации или десериализации этого типа создается исключение.

            ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonExtensionDataAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.JsonExtensionDataAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonExtensionDataAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Text.Json.Serialization.JsonExtensionDataAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
