<Type Name="TextSource" FullName="System.Windows.Media.TextFormatting.TextSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="071e64e5956e8901f263682e8a214081bd7cb90f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69447328" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSource abstract" />
  <TypeSignature Language="F#" Value="type TextSource = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет абстрактный класс для задания данных и свойств форматирования знака, используемых объектом <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Весь доступ к тексту в <xref:System.Windows.Media.TextFormatting.TextSource> объекте осуществляется <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>через объект, который позволяет клиенту разметки текста виртуализировать текст любым способом, который он выбрал.  
  
 <xref:System.Windows.Media.TextFormatting.TextFormatter>— Это [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] текстовый механизм, предоставляющий службы для форматирования текста и разбиения текста на строки. <xref:System.Windows.Media.TextFormatting.TextFormatter>может работать с различными форматами текстовых символов и стилями абзацев, а также поддерживает международные макеты текста. [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] В<xref:System.Windows.Media.TextFormatting.TextFormatter> отличие от традиционного текста, взаимодействует с клиентом макета текста через набор методов обратного вызова. Он требует, чтобы клиент предоставил эти методы в реализации <xref:System.Windows.Media.TextFormatting.TextSource> класса. В следующем списке описаны три члена, которые необходимо переопределить.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: Извлекает значение <xref:System.Windows.Media.TextFormatting.TextRun> , начиная с указанной <xref:System.Windows.Media.TextFormatting.TextSource> позиции.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: Извлекает текстовую область непосредственно перед указанной <xref:System.Windows.Media.TextFormatting.TextSource> позицией.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: Возвращает значение, которое сопоставляет <xref:System.Windows.Media.TextFormatting.TextSource> индекс символа <xref:System.Windows.Media.TextEffect> с символьным индексом.  
  
> [!NOTE]
>  Полный пример кода, демонстрирующий реализацию производного <xref:System.Windows.Media.TextFormatting.TextSource> класса, см. в разделе [образец расширенного форматирования текста](https://go.microsoft.com/fwlink/?LinkID=159965) .  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.TextFormatting.TextFormatter" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">Образец расширенного форматирования текста</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Media.TextFormatting.TextSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecedingText">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText (int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText(int32 textSourceCharacterIndexLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrecedingText (textSourceCharacterIndexLimit As Integer) As TextSpan(Of CultureSpecificCharacterBufferRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::CultureSpecificCharacterBufferRange ^&gt; ^ GetPrecedingText(int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="F#" Value="abstract member GetPrecedingText : int -&gt; System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;" Usage="textSource.GetPrecedingText textSourceCharacterIndexLimit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndexLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndexLimit">Значение, указывающее позицию в виде индекса знака, где следует остановить извлечение текста.</param>
        <summary>Извлекает текстовый диапазон, находящийся непосредственно перед указанной позицией <see cref="T:System.Windows.Media.TextFormatting.TextSource" />.</summary>
        <returns>Значение типа <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" />, представляющее текстовый диапазон, находящийся непосредственно перед позицией <paramref name="textSourceCharacterIndexLimit" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод возвращает пустое <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> значение, если текст находится непосредственно перед `textSourceCharacterIndexLimit` не содержит текста, например встроенного объекта или скрытого запуска. <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>  
  
 Этот метод возвращает текстовый диапазон нулевой длины, если отсутствуют предшествующие `textSourceCharacterIndexLimit`значения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextEffectCharacterIndexFromTextSourceCharacterIndex">
      <MemberSignature Language="C#" Value="public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextEffectCharacterIndexFromTextSourceCharacterIndex (textSourceCharacterIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextEffectCharacterIndexFromTextSourceCharacterIndex : int -&gt; int" Usage="textSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Сопоставляемый индекс знака <see cref="T:System.Windows.Media.TextFormatting.TextSource" />.</param>
        <summary>Получает значение, сопоставляющее индекс знака объекта <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> с индексом знака объекта <see cref="T:System.Windows.Media.TextEffect" />.</summary>
        <returns>Значение <see cref="T:System.Int32" />, представляющее индекс знака объекта <see cref="T:System.Windows.Media.TextEffect" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRun">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRun GetTextRun(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRun (textSourceCharacterIndex As Integer) As TextRun" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRun ^ GetTextRun(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextRun : int -&gt; System.Windows.Media.TextFormatting.TextRun" Usage="textSource.GetTextRun textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Указывает позицию текстового знака в объекте <see cref="T:System.Windows.Media.TextFormatting.TextSource" />, откуда извлекается текстовая цепочка <see cref="T:System.Windows.Media.TextFormatting.TextRun" />.</param>
        <summary>Извлекает текстовую цепочку <see cref="T:System.Windows.Media.TextFormatting.TextRun" />, начинающуюся с указанной позиции в объекте <see cref="T:System.Windows.Media.TextFormatting.TextSource" />.</summary>
        <returns>Значение, представляющее текстовую цепочку <see cref="T:System.Windows.Media.TextFormatting.TextRun" />, или объект класса, производного от <see cref="T:System.Windows.Media.TextFormatting.TextRun" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текстовый запуск — это последовательность символов, совместно использующих один набор свойств. Любое изменение формата, например семейство шрифтов, начертание шрифта, цвет переднего плана, оформление текста или любой другой результат форматирования, прерывает выполнение текста. Класс является корнем иерархии типов, представляющей несколько типов текстового содержимого, <xref:System.Windows.Media.TextFormatting.TextFormatter>обрабатываемых. <xref:System.Windows.Media.TextFormatting.TextRun> Каждый класс, производный от <xref:System.Windows.Media.TextFormatting.TextRun> , представляет отдельный тип текстового содержимого.  
  
|Класс|Описание|  
|-----------|-----------------|  
|<xref:System.Windows.Media.TextFormatting.TextRun>|Корень иерархии. Определяет группу символов, имеющих одинаковый набор свойств символов.|  
|<xref:System.Windows.Media.TextFormatting.TextCharacters>|Определяет коллекцию глифов символов из отдельной физической гарнитуры.|  
|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|Определяет тип текстового содержимого, в котором измерения, проверка попадания и рисование всего содержимого выполняются в виде отдельной сущности. Примером такого типа содержимого является кнопка в середине строки текста.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|Определяет код символа разрыва строки.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|Определяет код символа разрыва абзаца. Происходит от <xref:System.Windows.Media.TextFormatting.TextEndOfLine>.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|Определяет маркер разрыва сегмента.|  
|<xref:System.Windows.Media.TextFormatting.TextHidden>|Определяет диапазон невидимых символов.|  
|<xref:System.Windows.Media.TextFormatting.TextModifier>|Определяет начало области изменения.|  
  
   
  
## Examples  
 В следующем примере реализуется переопределение <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A> метода.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/CustomTextClasses.cs#textformattingsnippet4)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/customtextclasses.vb#textformattingsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение PixelsPerDip, при котором текст должен быть преобразован для просмотра.</summary>
        <value>Текущее значение <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Любой класс, который <xref:System.Windows.Media.TextFormatting.TextSource> расширяется <xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A> , должен обновляться каждый раз при изменении dpi для приложения, поддерживающего отслеживание dpi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
