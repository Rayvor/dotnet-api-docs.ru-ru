<Type Name="MenuBase" FullName="System.Windows.Controls.Primitives.MenuBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cbe42da7f5b65a33bbcf8860ace8fc84564d7c4b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70725429" /></Metadata><TypeSignature Language="C#" Value="public abstract class MenuBase : System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract MenuBase extends System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MenuBase&#xA;Inherits ItemsControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuBase abstract : System::Windows::Controls::ItemsControl" />
  <TypeSignature Language="F#" Value="type MenuBase = class&#xA;    inherit ItemsControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ItemsControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Menu)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="465e7-101">Представляет элемент управления, определяющий варианты выбора для пользователей.</span><span class="sxs-lookup"><span data-stu-id="465e7-101">Represents a control that defines choices for users to select.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="465e7-102"><xref:System.Windows.Controls.Primitives.MenuBase> Является базовым классом для элементов управления, определяющих выбор пользователей.</span><span class="sxs-lookup"><span data-stu-id="465e7-102">The <xref:System.Windows.Controls.Primitives.MenuBase> is the base class for controls that define choices for users to select.</span></span> <span data-ttu-id="465e7-103">И наследуют от <xref:System.Windows.Controls.Primitives.MenuBase>  и позволяют пользователю выбрать элемент для вызова какого либо действия. <xref:System.Windows.Controls.ContextMenu> <xref:System.Windows.Controls.Menu></span><span class="sxs-lookup"><span data-stu-id="465e7-103">The <xref:System.Windows.Controls.Menu> and <xref:System.Windows.Controls.ContextMenu> inherit from <xref:System.Windows.Controls.Primitives.MenuBase> and allow the user to select an item to invoke some action.</span></span>  
  
 <span data-ttu-id="465e7-104"><xref:System.Windows.Controls.Primitives.MenuBase>— Это <xref:System.Windows.Controls.ItemsControl>, то есть может содержать коллекцию объектов любого типа (например, строку, изображение или панель).</span><span class="sxs-lookup"><span data-stu-id="465e7-104"><xref:System.Windows.Controls.Primitives.MenuBase> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="465e7-105">Дополнительные сведения см. в описании класса <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="465e7-105">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MenuBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MenuBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="465e7-106">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Controls.Primitives.MenuBase" />.</span><span class="sxs-lookup"><span data-stu-id="465e7-106">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.MenuBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="menuBase.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="465e7-107">Создает или идентифицирует элемент, используемый для отображения заданного элемента.</span><span class="sxs-lookup"><span data-stu-id="465e7-107">Creates or identifies the element used to display the specified item.</span></span></summary>
        <returns><span data-ttu-id="465e7-108">Объект, используемый для отображения указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="465e7-108">The element used to display the specified item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleMouseButton">
      <MemberSignature Language="C#" Value="protected virtual void HandleMouseButton (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HandleMouseButton(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub HandleMouseButton (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void HandleMouseButton(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member HandleMouseButton : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.HandleMouseButton : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menuBase.HandleMouseButton e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="465e7-109">Данные для события мыши.</span><span class="sxs-lookup"><span data-stu-id="465e7-109">The event data for a mouse event.</span></span></param>
        <summary><span data-ttu-id="465e7-110">Вызывается при нажатии или отпускании кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="465e7-110">Called when a mouse button is pressed or released.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="menuBase.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="465e7-111">Элемент для которого нужно проверить, является ли он контейнером элементов.</span><span class="sxs-lookup"><span data-stu-id="465e7-111">The item to check whether it is an item container.</span></span></param>
        <summary><span data-ttu-id="465e7-112">Определяет, является ли заданный элемент (или может являться) контейнером собственных элементов.</span><span class="sxs-lookup"><span data-stu-id="465e7-112">Determines whether the specified item is, or is eligible to be, its own item container.</span></span></summary>
        <returns><span data-ttu-id="465e7-113"><see langword="true" />, если элемент является <see cref="T:System.Windows.Controls.MenuItem" /> или <see cref="T:System.Windows.Controls.Separator" />; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="465e7-113"><see langword="true" /> if the item is a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.Separator" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerTemplateSelector As ItemContainerTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemContainerTemplateSelector ^ ItemContainerTemplateSelector { System::Windows::Controls::ItemContainerTemplateSelector ^ get(); void set(System::Windows::Controls::ItemContainerTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerTemplateSelector : System.Windows.Controls.ItemContainerTemplateSelector with get, set" Usage="System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="465e7-114">Возвращает или задает пользовательскую логику для выбора шаблона, используемого для отображения каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="465e7-114">Gets or sets the custom logic for choosing a template used to display each item.</span></span></summary>
        <value><span data-ttu-id="465e7-115">Пользовательский объект, предоставляющий логику и возвращающий контейнер элемента.</span><span class="sxs-lookup"><span data-stu-id="465e7-115">A custom object that provides logic and returns an item container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="465e7-116">Используйте, <xref:System.Windows.Controls.ItemContainerTemplateSelector> чтобы выбрать другие контейнеры элементов, если элементы в коллекции имеют один и тот же тип, и необходимо предоставить настраиваемую логику для выбора контейнера элементов.</span><span class="sxs-lookup"><span data-stu-id="465e7-116">Use an <xref:System.Windows.Controls.ItemContainerTemplateSelector> to choose different item containers if the items in your collection are the same type and you need to provide custom logic to choose the item container.</span></span>  
  
<a name="dependencyPropertyInfo_ItemContainerTemplateSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="465e7-117">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="465e7-117">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="465e7-118">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="465e7-118">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty>|  
|<span data-ttu-id="465e7-119">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="465e7-119">Metadata properties set to `true`</span></span>|<span data-ttu-id="465e7-120">Нет</span><span class="sxs-lookup"><span data-stu-id="465e7-120">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemContainerTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemContainerTemplateSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="465e7-121">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" />.</span><span class="sxs-lookup"><span data-stu-id="465e7-121">Identifies the <see cref="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="menuBase.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="465e7-122">Данные события <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />.</span><span class="sxs-lookup"><span data-stu-id="465e7-122">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="465e7-123">Отвечает на изменение свойства <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" />.</span><span class="sxs-lookup"><span data-stu-id="465e7-123">Responds to a change to the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="menuBase.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="465e7-124">Данные события <see cref="E:System.Windows.UIElement.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="465e7-124">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></param>
        <summary><span data-ttu-id="465e7-125">Предоставляет обработку класса для перенаправленного события <see cref="E:System.Windows.UIElement.KeyDown" />, которое происходит при нажатии клавиши пользователем.</span><span class="sxs-lookup"><span data-stu-id="465e7-125">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="465e7-126">Если пользователь нажимает клавишу ESC, ALT + ALT или Alt + F10, эта реализация помечает <xref:System.Windows.UIElement.KeyDown> событие как обработанное, <xref:System.Windows.RoutedEventArgs.Handled%2A> присвоив свойству данных `true`события значение.</span><span class="sxs-lookup"><span data-stu-id="465e7-126">If the user presses ESC, ALT+ALT, or ALT+F10, this implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="465e7-127">При переопределении <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />всегда вызывайте базовую реализацию в своей <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> реализации.</span><span class="sxs-lookup"><span data-stu-id="465e7-127">If you override <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="465e7-128">Сбой вызова базовой реализации не позволяет базовым классам обрабатывать событие с помощью обработчика класса, что может изменить поведение во время выполнения конечного класса.</span><span class="sxs-lookup"><span data-stu-id="465e7-128">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="465e7-129">Базовую реализацию можно вызвать как до, так и после специальной обработки в зависимости от требований.</span><span class="sxs-lookup"><span data-stu-id="465e7-129">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="menuBase.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="465e7-130">Данные события <see cref="E:System.Windows.UIElement.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="465e7-130">The event data for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</span></span></param>
        <summary><span data-ttu-id="465e7-131">Предоставляет обработку класса для маршрутизируемого события <see cref="E:System.Windows.UIElement.MouseLeave" />, которое генерируется, когда мышь покидает элемент управления.</span><span class="sxs-lookup"><span data-stu-id="465e7-131">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="465e7-132">Эта реализация не изменяет состояние обработки ( <xref:System.Windows.RoutedEventArgs.Handled%2A> свойство) <xref:System.Windows.UIElement.MouseLeave> данных события.</span><span class="sxs-lookup"><span data-stu-id="465e7-132">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.MouseLeave> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="465e7-133">При переопределении <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />всегда вызывайте базовую реализацию в своей <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> реализации.</span><span class="sxs-lookup"><span data-stu-id="465e7-133">If you override <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="465e7-134">Сбой вызова базовой реализации не позволяет базовым классам обрабатывать событие с помощью обработчика класса, что может изменить поведение во время выполнения конечного класса.</span><span class="sxs-lookup"><span data-stu-id="465e7-134">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="465e7-135">Базовую реализацию можно вызвать как до, так и после специальной обработки в зависимости от требований.</span><span class="sxs-lookup"><span data-stu-id="465e7-135">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplate">
      <MemberSignature Language="C#" Value="public bool UsesItemContainerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesItemContainerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesItemContainerTemplate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesItemContainerTemplate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsesItemContainerTemplate : bool with get, set" Usage="System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="465e7-136">Получает или задает значение, указывающее, выбирает ли меню разные контейнеры элементов в зависимости от типа элемента в базовой коллекции или какой-либо другой эвристики.</span><span class="sxs-lookup"><span data-stu-id="465e7-136">Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</span></span></summary>
        <value><span data-ttu-id="465e7-137">Значение <see langword="true" />, если меню выбирает другие контейнеры элементов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="465e7-137"><see langword="true" /> the menu selects different item containers; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="465e7-138">Зарегистрированное значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="465e7-138">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="465e7-139">Дополнительные сведения о том, что может влиять на это значение, см. в разделе [Приоритет значений свойств зависимостей](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="465e7-139">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="465e7-140">Это свойство полезно, если требуется создать меню путем привязки к коллекции.</span><span class="sxs-lookup"><span data-stu-id="465e7-140">This property is useful if you want to create a menu by binding to a collection.</span></span>  <span data-ttu-id="465e7-141">Контейнер элемента — это элемент пользовательского интерфейса, который отображает объект в коллекции.</span><span class="sxs-lookup"><span data-stu-id="465e7-141">The item container is the UI element that displays the object in a collection.</span></span> <span data-ttu-id="465e7-142">Если необходимо выполнить привязку к коллекции <xref:System.Windows.Controls.MenuItem> для создания меню, содержащего объекты и <xref:System.Windows.Controls.Separator> объекты, установите <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> свойство в значение true и создайте <xref:System.Windows.Controls.ItemContainerTemplate> для каждого типа объекта в коллекции.</span><span class="sxs-lookup"><span data-stu-id="465e7-142">If you want to bind to a collection to create a menu that contains <xref:System.Windows.Controls.MenuItem> objects and <xref:System.Windows.Controls.Separator> objects, set the <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> property to true and create an <xref:System.Windows.Controls.ItemContainerTemplate> for each type of object in your collection.</span></span>  <span data-ttu-id="465e7-143">Каждый <xref:System.Windows.Controls.ItemContainerTemplate> из них должен содержать <xref:System.Windows.Controls.MenuItem> <xref:System.Windows.Controls.Separator>либо.</span><span class="sxs-lookup"><span data-stu-id="465e7-143">Each <xref:System.Windows.Controls.ItemContainerTemplate> must contain either a <xref:System.Windows.Controls.MenuItem> or a <xref:System.Windows.Controls.Separator>.</span></span>  
  
<a name="dependencyPropertyInfo_UsesItemContainerTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="465e7-144">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="465e7-144">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="465e7-145">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="465e7-145">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty>|  
|<span data-ttu-id="465e7-146">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="465e7-146">Metadata properties set to `true`</span></span>|<span data-ttu-id="465e7-147">Нет</span><span class="sxs-lookup"><span data-stu-id="465e7-147">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UsesItemContainerTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UsesItemContainerTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UsesItemContainerTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="465e7-148">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="465e7-148">Identifies the <see cref="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
