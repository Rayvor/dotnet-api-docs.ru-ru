<Type Name="OutputCacheProfile" FullName="System.Web.Configuration.OutputCacheProfile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd34240527116ad52d8049057ce8d7c0b366205a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70435860" /></Metadata><TypeSignature Language="C#" Value="public sealed class OutputCacheProfile : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OutputCacheProfile extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.OutputCacheProfile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutputCacheProfile&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutputCacheProfile sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type OutputCacheProfile = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Настраивает профиль кэша вывода, который может использоваться страницами приложения. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс предоставляет способ программного доступа и `add` изменения элемента `outputCacheProfiles` раздела в `caching` разделе файла конфигурации. <xref:System.Web.Configuration.OutputCacheProfile>  
  
 <xref:System.Web.Configuration.OutputCacheProfile> Объект централизует часто используемые параметры конфигурации, такие как зависимости, расположение кэша и время истечения срока действия кэша, избавляя от необходимости указывать их на каждой странице.  
  
 Можно применить к странице `CacheProfile` с помощью атрибута директивы. <xref:System.Web.Configuration.OutputCacheProfile>  
  
> [!NOTE]
>  Директива может переопределять все параметры, содержащиеся <xref:System.Web.Configuration.OutputCacheProfile> в объекте, за <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A> исключением атрибута. Это необходимо для включения или отключения <xref:System.Web.Configuration.OutputCacheProfile> без изменения директив во всех страницах, которые могли быть переопределены.  
  
 <xref:System.Web.Caching.CacheDependency> Класс отслеживает зависимости таким образом, что при изменении любого кэшированного элемента кэшированный элемент будет автоматически удален.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.Configuration.OutputCacheSettingsSection.OutputCacheProfiles%2A> коллекцию для доступа к своим <xref:System.Web.Configuration.OutputCacheProfile> объектам.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#1)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.OutputCacheProfileCollection" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
    <related type="Article" href="https://msdn.microsoft.com/library/51149563-a347-4b2b-bdc2-57a317e12487">Как декларативно задать способ кэширования страницы.</related>
    <related type="Article" href="https://msdn.microsoft.com/library/659d419e-9418-46cc-90ce-646a785b24e2">Как настроить возможность кэширования страницы программным способом</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputCacheProfile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.OutputCacheProfile.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutputCacheProfile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.OutputCacheProfile : string -&gt; System.Web.Configuration.OutputCacheProfile" Usage="new System.Web.Configuration.OutputCacheProfile name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Значение имени для использования.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Configuration.OutputCacheProfile" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public int Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Duration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : int with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("duration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает промежуток времени, в течение которого выполняется кэширование страницы или элемента управления.</summary>
        <value>Промежуток времени в секундах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A> Представляет время в секундах, в течение которого кэшируется страница или пользовательский элемент управления. Установка этого свойства устанавливает политику срока действия для HTTP-ответов с страницы или элемента управления, к которой он применяется, и автоматически приводит к кэшированию выходных данных.  
  
> [!NOTE]
>  <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A> Должен быть определен в профиле или директиве страницы с помощью профиля.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#10)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCachePolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)">Кэширование страниц ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее включено ли кэширование.</summary>
        <value><see langword="true" />, если кэширование включено, в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A> Свойство позволяет включать или отключать механизм кэширования только в одном месте. Он влияет на все страницы или элементы управления, использующие <xref:System.Web.Configuration.OutputCacheProfile>этот объект.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#12)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#12)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)">Кэширование страниц ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Web.UI.OutputCacheLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.OutputCacheLocation Location" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As OutputCacheLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::OutputCacheLocation Location { System::Web::UI::OutputCacheLocation get(); void set(System::Web::UI::OutputCacheLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Web.UI.OutputCacheLocation with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("location")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.OutputCacheLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает расположение кэша вывода.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.OutputCacheLocation" />. Значение по умолчанию — <see langword="Any" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.Configuration.OutputCacheProfile.Location%2A> параметр имеет `Any`значение, то кэш вывода может находиться на клиенте браузера, где поступил запрос, на прокси-сервере или на любом другом сервере, участвующем в запросе, или на сервере, на котором был обработан запрос.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.Location%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#5)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.OutputCacheLocation" />
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)">Кэширование страниц ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя <see cref="T:System.Web.Configuration.OutputCacheProfile" />.</summary>
        <value>Имя <see cref="T:System.Web.Configuration.OutputCacheProfile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте, <xref:System.Web.Configuration.OutputCacheProfile.Name%2A> чтобы присвоить значение `CacheProfile` атрибуту директивы, если необходимо применить <xref:System.Web.Configuration.OutputCacheProfile> значения к странице или элементу управления.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.Name%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#11)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoStore">
      <MemberSignature Language="C#" Value="public bool NoStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoStore" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.NoStore" />
      <MemberSignature Language="VB.NET" Value="Public Property NoStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoStore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoStore : bool with get, set" Usage="System.Web.Configuration.OutputCacheProfile.NoStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("noStore", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее включено ли вторичное хранилище.</summary>
        <value><see langword="true" />, если вторичное хранилище включено, в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Страница, <xref:System.Web.Configuration.OutputCacheProfile.NoStore%2A?displayProperty=nameWithType> для `true` которой задано свойство, выдает ответ, указывающий в его заголовке, чтобы предотвратить использование дополнительного хранилища конфиденциальной информации.  
  
 Присвоение этому атрибуту `true` значения эквивалентно вызову <xref:System.Web.HttpCachePolicy.SetNoStore%2A?displayProperty=nameWithType> метода во время веб-запроса.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.NoStore%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#4)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.OutputCacheProfile.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDependency">
      <MemberSignature Language="C#" Value="public string SqlDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SqlDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlDependency : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.SqlDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sqlDependency")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает свойство <see cref="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" />.</summary>
        <value>Значение <see cref="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A> Определяет связь между веб-приложением и экземпляром SQL Server, что позволяет обнаруживать изменения в данных на сервере. <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A> Позволяет гарантировать, что выходные кэшированные страницы удаляются из кэша всякий раз, когда таблица SQL, от которой они зависят, изменяется.  
  
> [!NOTE]
>  <xref:System.Web.Caching.SqlCacheDependency> Класс отслеживает таблицу таким образом, что при изменении таблицы элемент будет автоматически удален из кэша. Этот класс не наследуется.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#7)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="VaryByContentEncoding">
      <MemberSignature Language="C#" Value="public string VaryByContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByContentEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByContentEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByContentEncoding : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByContentEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает разделенный точками с запятыми набор кодирований содержимого для кэширования.</summary>
        <value>Список кодирований содержимого.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметры являются теми же, которые используются `VaryByContentEncoding` атрибутом директивы. <xref:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding%2A>  
  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding%2A>вводится в .NET Framework версии 3,5.  Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.OutputCacheParameters.VaryByContentEncoding" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControl">
      <MemberSignature Language="C#" Value="public string VaryByControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByControl : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByControl")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает свойство <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" />.</summary>
        <value>Значение <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A> — Это разделенный точками с запятой набор идентификаторов элементов управления, которые кэшируются.  
  
 Дополнительные сведения см. в разделе [кэширование нескольких версий выходных данных пользовательского элемента управления](https://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad).  
  
> [!NOTE]
>  Параметры являются теми же, которые используются `VaryByControls` атрибутом директивы. <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A>  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#3)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad">Кэширование нескольких версий выходных данных пользовательского элемента управления</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1bcaf2d0-0803-49be-a831-c0714a60e81c">Как кэшировать несколько версий пользовательского элемента управления на основе параметров</related>
      </Docs>
    </Member>
    <Member MemberName="VaryByCustom">
      <MemberSignature Language="C#" Value="public string VaryByCustom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByCustom" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByCustom As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByCustom { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByCustom : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByCustom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByCustom")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает свойство <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" />.</summary>
        <value>Значение <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A> Может быть любым текстом, который представляет требования к пользовательскому кэшированию вывода. Если введена пользовательская строка, необходимо переопределить <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> метод в файле Global. asax приложения.  
  
> [!NOTE]
>  Параметры являются теми же, которые используются `VaryByCustom` атрибутом директивы. <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A>  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#9)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad">Кэширование нескольких версий выходных данных пользовательского элемента управления</related>
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)">Кэширование страниц ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0">Практические руководства. Кэширование версий страницы на основе пользовательских строк</related>
      </Docs>
    </Member>
    <Member MemberName="VaryByHeader">
      <MemberSignature Language="C#" Value="public string VaryByHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByHeader As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByHeader { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByHeader : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByHeader")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает свойство <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" />.</summary>
        <value>Значение <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A> — Это разделенный точкой с запятой набор заголовков, используемый для изменения кэшированных выходных данных. Это заголовки HTTP, связанные с запросом. Дополнительные сведения см. в разделе [кэширование нескольких версий страницы](https://msdn.microsoft.com/library/c60284a9-9899-4fdc-a97c-020766b7572e).  
  
> [!NOTE]
>  Параметры являются теми же, которые используются `VaryByHeader` атрибутом объекта. <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A> Изменение всех заголовков путем установки значения "*" не рекомендуется. Это может привести к переполнению кэша или атаке типа "отказ в обслуживании" на веб-сервере.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#2)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)">Кэширование страниц ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c60284a9-9899-4fdc-a97c-020766b7572e">Кэширование нескольких версий страницы</related>
      </Docs>
    </Member>
    <Member MemberName="VaryByParam">
      <MemberSignature Language="C#" Value="public string VaryByParam { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByParam" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByParam As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByParam { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByParam : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByParam" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByParam")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает свойство <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" />.</summary>
        <value>Значение <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A> — Это разделенный точками с запятой набор параметров, используемый для изменения кэшированных выходных данных. Он позволяет менять кэшированные выходные данные путем получения параметров строки запроса или формы POST. Например, можно изменить выходные данные пользовательского элемента управления в кэше, указав имя пользовательского элемента управления вместе со строкой запроса или параметром POST формы. Дополнительные сведения см. в разделе [кэширование нескольких версий выходных данных пользовательского элемента управления](https://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad).  
  
 Этот <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A> параметр должен быть определен либо в профиле, либо в директиве страницы с помощью профиля.  
  
> [!NOTE]
>  Параметры являются теми же, которые используются `VaryByParam` атрибутом объекта. <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A?displayProperty=nameWithType> Изменение всех параметров путем установки значения "*" не рекомендуется. Это может привести к переполнению кэша или атаке типа "отказ в обслуживании" на веб-сервере.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#8)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)">Кэширование страниц ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c60284a9-9899-4fdc-a97c-020766b7572e">Кэширование нескольких версий страницы</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1bcaf2d0-0803-49be-a831-c0714a60e81c">Как кэшировать несколько версий пользовательского элемента управления на основе параметров</related>
      </Docs>
    </Member>
  </Members>
</Type>
