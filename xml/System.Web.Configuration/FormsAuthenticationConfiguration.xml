<Type Name="FormsAuthenticationConfiguration" FullName="System.Web.Configuration.FormsAuthenticationConfiguration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc760dbc5f944b2b5ae3027aa1cfbcc33f1a1792" /><Meta Name="ms.sourcegitcommit" Value="8544f14c8194a55eb22d46721b0bbe46f345c063" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/21/2019" /><Meta Name="ms.locfileid" Value="69669113" /></Metadata><TypeSignature Language="C#" Value="public sealed class FormsAuthenticationConfiguration : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FormsAuthenticationConfiguration extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.FormsAuthenticationConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FormsAuthenticationConfiguration&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormsAuthenticationConfiguration sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type FormsAuthenticationConfiguration = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Настройка приложения ASP.NET на использование модальности форм <see cref="T:System.Web.Configuration.AuthenticationMode" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс предоставляет способ программного доступа и `forms` изменения элемента раздела конфигурации `authentication`. <xref:System.Web.Configuration.FormsAuthenticationConfiguration>  
  
 Этот тип является частью группы, включающей <xref:System.Web.Configuration.FormsAuthenticationCredentials> <xref:System.Web.Configuration.FormsAuthenticationUser> типы <xref:System.Web.Configuration.FormsAuthenticationUserCollection>, и. Типы, отличные от типа коллекции, непосредственно влияют на базовые теги конфигурации.  
  
> [!NOTE]
>  Может записывать сведения в связанный раздел файла конфигурации в соответствии с ограничениями, определенными свойством <xref:System.Configuration.SectionInformation.AllowDefinition%2A> раздела, значение которого равно <xref:System.Configuration.ConfigurationAllowDefinition.MachineToApplication>. <xref:System.Web.Configuration.FormsAuthenticationConfiguration> Любая попытка записи в файл конфигурации на уровне, недопустимом в иерархии, приведет к появлению сообщения об ошибке, созданного анализатором. Однако этот класс можно использовать для считывания сведений о конфигурации на любом уровне иерархии. Для обеспечения безопасности и масштабируемости рекомендуется использовать внешний репозиторий, например базу данных, для хранения учетных данных пользователей.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить <xref:System.Web.Configuration.FormsAuthenticationConfiguration> объект из файла конфигурации существующего веб-приложения. Этот объект можно использовать для доступа к его членам. Файл конфигурации будет содержать программу установки, аналогичную приведенной ниже.  
  
 **Примечание** . При использовании `credentials` раздела обязательно следуйте рекомендациям, изложенным в [ASP.NET Authentication](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)). Для обеспечения масштабируемости и лучшей безопасности рекомендуется использовать внешнюю базу данных для хранения учетных данных пользователей. Дополнительные сведения о создании защищенных ASP.NET приложений см. на веб-сайте Microsoft MSDN (msdn.microsoft.com) "Защита приложения ASP.NET" и "создание безопасных ASP.NET приложений". Проверка подлинности, авторизация и безопасная связь».  

 В этом примере используется SHA1. Из-за конфликта с SHA1 корпорация Майкрософт рекомендует использовать SHA256.  
 
```  
<authentication mode="Forms">  
  <forms name="MyAppCookie" loginUrl="login.aspx"  
    defaultUrl="default.aspx"  
    protection="Encryption" timeout="5" path="aspnetTest"  
    slidingExpiration="false"  
    cookieless="UseCookies" domain="domainName">  
    <credentials passwordFormat="SHA1">  
      <user name="aspnetuser1"  
        password="5BAA61E4C9B93F3F0682250B6CF8331B7EE68FD8"/>  
       <user name="aspnetuser2"  
         password="E38AD214943DAAD1D64C102FAEC29DE4AFE9DA3D"/>  
    </credentials>            
  </forms>  
</authentication>   
```  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#1)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)">Проверка подлинности ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/77e21ba2-bad1-4967-a8ec-74942dea7e47">Поставщик проверки подлинности форм</related>
    <related type="Article" href="https://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7">Проверка подлинности с помощью форм в приложениях</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthenticationConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.FormsAuthenticationConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormsAuthenticationConfiguration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Configuration.FormsAuthenticationConfiguration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Web.Configuration.FormsAuthenticationConfiguration> объект.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#2)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookieless">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode Cookieless { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode Cookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Cookieless" />
      <MemberSignature Language="VB.NET" Value="Public Property Cookieless As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieMode Cookieless { System::Web::HttpCookieMode get(); void set(System::Web::HttpCookieMode value); };" />
      <MemberSignature Language="F#" Value="member this.Cookieless : System.Web.HttpCookieMode with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Cookieless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieless", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее необходимость использования файлов cookie для проверки подлинности на основе форм.</summary>
        <value>Одно из значений <see cref="T:System.Web.HttpCookieMode" />. Значение по умолчанию — <see cref="F:System.Web.HttpCookieMode.UseDeviceProfile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Cookieless%2A> Свойство определяет, должна ли проверка подлинности на основе форм использовать файл cookie для обмена данными пользователя.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить доступ <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Cookieless%2A> к свойству. Сведения о том, как получить раздел <xref:System.Web.Configuration.FormsAuthenticationConfiguration> , см. в примере кода в разделе класс.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#5)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.Protection" />
        <related type="Article" href="https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)">Проверка подлинности ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/77e21ba2-bad1-4967-a8ec-74942dea7e47">Поставщик проверки подлинности форм</related>
      </Docs>
    </Member>
    <Member MemberName="CookieSameSite">
      <MemberSignature Language="C#" Value="public System.Web.SameSiteMode CookieSameSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SameSiteMode CookieSameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.CookieSameSite" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieSameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SameSiteMode CookieSameSite { System::Web::SameSiteMode get(); void set(System::Web::SameSiteMode value); };" />
      <MemberSignature Language="F#" Value="member this.CookieSameSite : System.Web.SameSiteMode with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.CookieSameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("cookieSameSite")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или устанавливает значение атрибута SameSite файла cookie.</summary>
        <value>Одно из значений перечисления, представляющее режим применения политик для файла cookie. Если приложение предназначено для платформы .NET Framework 4.7.2 или более поздней версии, по умолчанию устанавливается значение <see cref="F:System.Web.SameSiteMode.Lax" />, иначе по умолчанию устанавливается значение <see cref="F:System.Web.SameSiteMode.None" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.FormsAuthenticationCredentials Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.FormsAuthenticationCredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Credentials As FormsAuthenticationCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::FormsAuthenticationCredentials ^ Credentials { System::Web::Configuration::FormsAuthenticationCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Web.Configuration.FormsAuthenticationCredentials" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("credentials")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FormsAuthenticationCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возврат коллекции <see cref="T:System.Web.Configuration.FormsAuthenticationCredentials" />, в которой содержатся имена пользователей и пароли.</summary>
        <value>Коллекция <see cref="T:System.Web.Configuration.FormsAuthenticationCredentials" />, в которой содержатся имена пользователей и пароли.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Credentials%2A> Свойство получает имена пользователей и пароли, используемые при проверке подлинности на основе форм.  
  
> [!NOTE]
>  Если требуется обеспечение безопасности, следует использовать альтернативные способы хранения имен пользователей и паролей. Например, в хранилище базы данных. Если вы решили использовать эту коллекцию, следует использовать предоставленное средство шифрования.  
  
   
  
## Examples  
 В следующем примере кода показано, как осуществляется доступ к свойству <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Credentials%2A>. Сведения о том, как получить раздел <xref:System.Web.Configuration.FormsAuthenticationConfiguration> , см. в примере кода в разделе класс.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#14)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultUrl">
      <MemberSignature Language="C#" Value="public string DefaultUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.DefaultUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultUrl : string with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.DefaultUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("defaultUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает используемый по умолчанию URL-адрес.</summary>
        <value>URL-адрес, на который перенаправляется запрос после проверки подлинности. По умолчанию используется значение default.aspx.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используется <xref:System.Web.Configuration.FormsAuthenticationConfiguration.DefaultUrl%2A> , если пользователь напрямую обращается к странице входа или если не указан URL-адрес возврата.  
  
   
  
## Examples  
 В следующем примере кода показано, <xref:System.Web.Configuration.FormsAuthenticationConfiguration.DefaultUrl%2A>как получить доступ к. Сведения о том, как получить раздел <xref:System.Web.Configuration.FormsAuthenticationConfiguration> , см. в примере кода в разделе класс.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#4)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("domain", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя домена, которое передается в файлах cookie при проверке подлинности на основе форм.</summary>
        <value>Имя домена, которое передается в файлах cookie при проверке подлинности на основе форм. По умолчанию используется пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Domain%2A> Используется для файлов cookie проверки подлинности.  
  
 Это свойство соответствует значению <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType>.  
  
 Этот параметр имеет приоритет над `domain` атрибутом раздела для файлов cookie проверки подлинности форм.  
  
   
  
## Examples  
 В следующем примере кода показано, как осуществляется доступ к свойству <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Domain%2A>. Сведения о том, как получить раздел <xref:System.Web.Configuration.FormsAuthenticationConfiguration> , см. в примере кода в разделе класс.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#6)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementProperty">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationElementProperty ElementProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.ElementProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ElementProperty As ConfigurationElementProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationElementProperty ^ ElementProperty { System::Configuration::ConfigurationElementProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementProperty : System.Configuration.ConfigurationElementProperty" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.ElementProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCrossAppRedirects">
      <MemberSignature Language="C#" Value="public bool EnableCrossAppRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCrossAppRedirects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCrossAppRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCrossAppRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCrossAppRedirects : bool with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableCrossAppRedirects", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее возможность перенаправления пользователей, прошедших проверку подлинности, по URL-адресам других приложений.</summary>
        <value>true, если допускается перенаправление пользователей, прошедших проверку подлинности, по URL-адресам других приложений, иначе false. Значение по умолчанию – false.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства задает атрибут енаблекроссаппредиректс раздела в разделе Authentication конфигурации. `forms` <xref:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects%2A>  
  
 Свойство проверяется <xref:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects%2A> методом, когда перенаправление относится к URL-адресу, который отсутствует в текущем приложении. <xref:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects%2A> Если <xref:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects%2A> имеет значение true, перенаправление выполняется; в противном случае браузер перенаправляется на страницу, определенную <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> в свойстве.  
  
> [!NOTE]
>  При перенаправлении между приложениями необходимо убедиться, что несколько атрибутов в `form` разделе конфигурации дублируются по прошедшему проверку подлинности приложениям. Дополнительные сведения и пример см. в статье [Проверка подлинности с помощью форм в приложениях](https://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7).  
  
   
  
## Examples  
 В следующем примере кода показано, как осуществляется доступ к свойству <xref:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects%2A>. Сведения о том, как получить раздел <xref:System.Web.Configuration.FormsAuthenticationConfiguration> , см. в примере кода в разделе класс.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#8)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7">Проверка подлинности с помощью форм в приложениях</related>
      </Docs>
    </Member>
    <Member MemberName="LoginUrl">
      <MemberSignature Language="C#" Value="public string LoginUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoginUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.LoginUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property LoginUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LoginUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoginUrl : string with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.LoginUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("loginUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес, по которому перенаправляется запрос.</summary>
        <value>URL-адрес, по которому перенаправляется запрос при неуспешной проверке подлинности пользователя. По умолчанию используется значение login.aspx.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.LoginUrl%2A> Свойство указывает URL-адрес перенаправления для запроса, если пользователь не прошел проверку подлинности или не существует допустимого файла cookie проверки подлинности.  
  
   
  
## Examples  
 В следующем примере кода показано, <xref:System.Web.Configuration.FormsAuthenticationConfiguration.LoginUrl%2A>как получить доступ к. Сведения о том, как получить раздел <xref:System.Web.Configuration.FormsAuthenticationConfiguration> , см. в примере кода в разделе класс.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#3)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)">Проверка подлинности ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/77e21ba2-bad1-4967-a8ec-74942dea7e47">Поставщик проверки подлинности форм</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя файла cookie.</summary>
        <value>Имя файла cookie протокола HTTP, который используется для проверки подлинности запроса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как получить доступ <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Name%2A> к свойству см. в примере кода <xref:System.Web.Configuration.FormsAuthenticationConfiguration> в разделе класс, чтобы узнать, как извлечь раздел.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#21](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.aspx.cs#21)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.aspx.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("path", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает путь к файлу cookie.</summary>
        <value>Путь к файлу cookie протокола HTTP, который используется для проверки подлинности. По умолчанию используется знак косой черты (/), определяющий корневой каталог веб-приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Path%2A> Свойство указывает, где находится файл cookie проверки подлинности и передается вместе с самим файлом cookie проверки подлинности.  
  
   
  
## Examples  
 В следующем примере кода показано, как осуществляется доступ к свойству <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Path%2A>. Сведения о том, как получить раздел <xref:System.Web.Configuration.FormsAuthenticationConfiguration> , см. в примере кода в разделе класс.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#9)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.Protection" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protection">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.FormsProtectionEnum Protection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.FormsProtectionEnum Protection" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Protection" />
      <MemberSignature Language="VB.NET" Value="Public Property Protection As FormsProtectionEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::FormsProtectionEnum Protection { System::Web::Configuration::FormsProtectionEnum get(); void set(System::Web::Configuration::FormsProtectionEnum value); };" />
      <MemberSignature Language="F#" Value="member this.Protection : System.Web.Configuration.FormsProtectionEnum with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Protection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("protection", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FormsProtectionEnum</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает тип шифрования для файла cookie.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.Configuration.FormsProtectionEnum" />. Значение по умолчанию — <see langword="All" />.  
  
 **Примечание** . Обязательно используйте значение по умолчанию для этого свойства, если требуется проверка данных и шифрование для защиты файла cookie. Данный параметр использует сконфигурированный алгоритм проверки данных (на основе элемента <see langword="machineKey" />). Для шифрования используется тройной алгоритм DES (3DES) (если доступен сам алгоритм и ключ длиной не менее 48 байтов).  
  
Чтобы повысить степень защиты файла cookie, установите для свойства <see cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.RequireSSL" /> значение <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как осуществляется доступ к свойству <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Protection%2A>. Сведения о том, как получить раздел <xref:System.Web.Configuration.FormsAuthenticationConfiguration> , см. в примере кода в разделе класс.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#11)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)">Проверка подлинности ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RequireSSL">
      <MemberSignature Language="C#" Value="public bool RequireSSL { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.RequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireSSL { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireSSL : bool with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.RequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requireSSL", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, требуется ли подключение по протоколу SSL при передаче информации проверки подлинности.</summary>
        <value><see langword="true" />, если требуется подключение по SSL, в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.Configuration.FormsAuthenticationConfiguration.RequireSSL%2A> параметр `true`имеет значение, веб-приложение отклоняет все запросы проверки подлинности форм, не использующие SSL-соединение.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить доступ <xref:System.Web.Configuration.FormsAuthenticationConfiguration.RequireSSL%2A> к свойству см. в примере кода <xref:System.Web.Configuration.FormsAuthenticationConfiguration> в разделе класс, чтобы узнать, как извлечь раздел.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#2)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.Protection" />
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public bool SlidingExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property SlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SlidingExpiration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SlidingExpiration : bool with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.SlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("slidingExpiration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает скользящий срок действия проверки подлинности.</summary>
        <value><see langword="true" />, если включен скользящий срок действия; в ином случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство `true` <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Timeout%2A> имеет значение, интервал времени, в течение которого файл cookie проверки подлинности является допустимым, сбрасывается в значение свойства срок действия. <xref:System.Web.Configuration.FormsAuthenticationConfiguration.SlidingExpiration%2A> Это происходит, если после истечения половины времени ожидания пользователь просматривается. Например, если задать срок действия 20 минут с помощью скользящего срока действия, пользователь может посетить сайт по адресу 2:00 PM и получить файл cookie, срок действия которого истекает в 2:20 РМ. Срок действия обновляется только в том случае, если пользователь посещает сайт после 2:10 PM. Если пользователь посещает сайт по адресу 2:09 PM, то файл cookie не обновляется, поскольку половина срока действия не прошла. Если пользователь затем ждет 12 минут, посетите сайт 2:21 PM, срок действия файла cookie истечет.  
  
   
  
## Examples  
 В следующем примере кода показано, как осуществляется доступ к свойству <xref:System.Web.Configuration.FormsAuthenticationConfiguration.SlidingExpiration%2A>. Сведения о том, как получить раздел <xref:System.Web.Configuration.FormsAuthenticationConfiguration> , см. в примере кода в разделе класс.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#7)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TicketCompatibilityMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.TicketCompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TicketCompatibilityMode As TicketCompatibilityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::TicketCompatibilityMode TicketCompatibilityMode { System::Web::Configuration::TicketCompatibilityMode get(); void set(System::Web::Configuration::TicketCompatibilityMode value); };" />
      <MemberSignature Language="F#" Value="member this.TicketCompatibilityMode : System.Web.Configuration.TicketCompatibilityMode with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.TicketCompatibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("ticketCompatibilityMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TicketCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, какое время используется для даты окончания срока действия билета при проверке подлинности форм: в формате UTC или местное.</summary>
        <value>Режим совместимости даты окончания срока действия билета.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение по умолчанию — местное время, выраженное <xref:System.Web.Configuration.TicketCompatibilityMode.Framework20> значением перечисления.  
  
   
  
## Examples  
 <xref:System.Web.Configuration.TicketCompatibilityMode>  
  
 [Элемент Forms для проверки подлинности (схема параметров ASP.NET)](https://msdn.microsoft.com/library/8163b8b5-ea6c-46c8-b5a9-c4c3de31c0b3)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanMinutesConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:01:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает время ожидания проверки подлинности.</summary>
        <value>Время в минутах, по истечении которого завершается срок действия проверки подлинности. Значение по умолчанию — 30 минут.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как осуществляется доступ к свойству <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Timeout%2A>. Сведения о том, как получить раздел <xref:System.Web.Configuration.FormsAuthenticationConfiguration> , см. в примере кода в разделе класс.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#10)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.SlidingExpiration" />
      </Docs>
    </Member>
  </Members>
</Type>
