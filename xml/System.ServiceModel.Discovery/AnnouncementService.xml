<Type Name="AnnouncementService" FullName="System.ServiceModel.Discovery.AnnouncementService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc89fcb9125fa3f7cfe4e59c078aab83cbb6125f" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73393240" /></Metadata><TypeSignature Language="C#" Value="public class AnnouncementService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnnouncementService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Discovery.AnnouncementService" />
  <TypeSignature Language="VB.NET" Value="Public Class AnnouncementService" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnnouncementService" />
  <TypeSignature Language="F#" Value="type AnnouncementService = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e4cb3-101">Резидентная реализация службы объявлений.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-101">A self-hosted implementation of the announcement service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cb3-102">Это класс прослушивает входящие сообщения в стандартной конечной точке объявлений (<xref:System.ServiceModel.Discovery.AnnouncementEndpoint>) и обеспечивает уведомление о событии при поступлении объявлений о входе в сеть и выходе из сети (Hello и Bye).</span><span class="sxs-lookup"><span data-stu-id="e4cb3-102">This class listens for incoming messages on a standard announcement endpoint (<xref:System.ServiceModel.Discovery.AnnouncementEndpoint>) and provides event notification when Hello or Bye announcement messages arrive.</span></span> <span data-ttu-id="e4cb3-103">Можно создать пользовательскую реализацию службы объявлений, производную от этого класса.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-103">You can provide a custom announcement service implementation by deriving from this class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e4cb3-104">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Discovery.AnnouncementService" />.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-104">Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnouncementService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.AnnouncementService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnouncementService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4cb3-105">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Discovery.AnnouncementService" />.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-105">Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnouncementService (int duplicateMessageHistoryLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 duplicateMessageHistoryLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.AnnouncementService.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (duplicateMessageHistoryLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnouncementService(int duplicateMessageHistoryLength);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Discovery.AnnouncementService : int -&gt; System.ServiceModel.Discovery.AnnouncementService" Usage="new System.ServiceModel.Discovery.AnnouncementService duplicateMessageHistoryLength" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="duplicateMessageHistoryLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="duplicateMessageHistoryLength"><span data-ttu-id="e4cb3-106">Максимальное количество хэшей сообщений, используемых транспортом для идентификации повторяющихся сообщений.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-106">The maximum number of message hashes used by the transport for identifying duplicate messages.</span></span> <span data-ttu-id="e4cb3-107">Значение по умолчанию — 0.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-107">The default value is 0.</span></span></param>
        <summary><span data-ttu-id="e4cb3-108">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> с указанной длиной журнала продублированных сообщений.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> class with the specified length of the duplicate message history.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OfflineAnnouncementReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ServiceModel.Discovery.AnnouncementEventArgs&gt; OfflineAnnouncementReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ServiceModel.Discovery.AnnouncementEventArgs&gt; OfflineAnnouncementReceived" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.Discovery.AnnouncementService.OfflineAnnouncementReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OfflineAnnouncementReceived As EventHandler(Of AnnouncementEventArgs) " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ServiceModel::Discovery::AnnouncementEventArgs ^&gt; ^ OfflineAnnouncementReceived;" />
      <MemberSignature Language="F#" Value="member this.OfflineAnnouncementReceived : EventHandler&lt;System.ServiceModel.Discovery.AnnouncementEventArgs&gt; " Usage="member this.OfflineAnnouncementReceived : System.EventHandler&lt;System.ServiceModel.Discovery.AnnouncementEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event OfflineAnnouncementReceived As EventHandler(Of AnnouncementEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ServiceModel.Discovery.AnnouncementEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4cb3-109">Происходит, когда поступает объявление о выходе из сети (Bye).</span><span class="sxs-lookup"><span data-stu-id="e4cb3-109">Occurs when an offline announcement (Bye) message is received,</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOfflineAnnouncement">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult OnBeginOfflineAnnouncement (System.ServiceModel.Discovery.DiscoveryMessageSequence messageSequence, System.ServiceModel.Discovery.EndpointDiscoveryMetadata endpointDiscoveryMetadata, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginOfflineAnnouncement(class System.ServiceModel.Discovery.DiscoveryMessageSequence messageSequence, class System.ServiceModel.Discovery.EndpointDiscoveryMetadata endpointDiscoveryMetadata, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOfflineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ OnBeginOfflineAnnouncement(System::ServiceModel::Discovery::DiscoveryMessageSequence ^ messageSequence, System::ServiceModel::Discovery::EndpointDiscoveryMetadata ^ endpointDiscoveryMetadata, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginOfflineAnnouncement : System.ServiceModel.Discovery.DiscoveryMessageSequence * System.ServiceModel.Discovery.EndpointDiscoveryMetadata * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.OnBeginOfflineAnnouncement : System.ServiceModel.Discovery.DiscoveryMessageSequence * System.ServiceModel.Discovery.EndpointDiscoveryMetadata * AsyncCallback * obj -&gt; IAsyncResult" Usage="announcementService.OnBeginOfflineAnnouncement (messageSequence, endpointDiscoveryMetadata, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Discovery.IAnnouncementServiceImplementation.OnBeginOfflineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageSequence" Type="System.ServiceModel.Discovery.DiscoveryMessageSequence" />
        <Parameter Name="endpointDiscoveryMetadata" Type="System.ServiceModel.Discovery.EndpointDiscoveryMetadata" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="messageSequence"><span data-ttu-id="e4cb3-110">Порядковый номер сообщения в последовательности для текущего уведомления.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-110">The position of this message in the sequence for the current notification.</span></span></param>
        <param name="endpointDiscoveryMetadata"><span data-ttu-id="e4cb3-111">Объект, представляющий метаданные конечной точки, например области, URI для прослушивания, имена контрактов и адрес конечной точки.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-111">An object that provides endpoint metadata, for example scopes, listen URI, contract names, and endpoint address.</span></span></param>
        <param name="callback"><span data-ttu-id="e4cb3-112">Метод, который вызывается после завершения асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-112">The method to call when the asynchronous operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e4cb3-113">Определенные инфраструктурой данные о состоянии.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-113">Infrastructure-defined state data.</span></span></param>
        <summary><span data-ttu-id="e4cb3-114">Начинает обработку входящих объявлений о выходе из сети (Bye).</span><span class="sxs-lookup"><span data-stu-id="e4cb3-114">Starts the processing of incoming offline announcement (Bye) messages.</span></span></summary>
        <returns><span data-ttu-id="e4cb3-115">Состояние отложенного асинхронного запроса.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-115">The status of the pending asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cb3-116">Классы, наследующие от <xref:System.ServiceModel.Discovery.AnnouncementService> для реализации пользовательской службы прослушивателя объявлений, должны переопределить этот метод и начать обработку входящих сообщений Bye.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-116">Classes that inherit from <xref:System.ServiceModel.Discovery.AnnouncementService> to implement a custom announcement listener service must override this method and begin to process incoming Bye messages.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOnlineAnnouncement">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult OnBeginOnlineAnnouncement (System.ServiceModel.Discovery.DiscoveryMessageSequence messageSequence, System.ServiceModel.Discovery.EndpointDiscoveryMetadata endpointDiscoveryMetadata, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginOnlineAnnouncement(class System.ServiceModel.Discovery.DiscoveryMessageSequence messageSequence, class System.ServiceModel.Discovery.EndpointDiscoveryMetadata endpointDiscoveryMetadata, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ OnBeginOnlineAnnouncement(System::ServiceModel::Discovery::DiscoveryMessageSequence ^ messageSequence, System::ServiceModel::Discovery::EndpointDiscoveryMetadata ^ endpointDiscoveryMetadata, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginOnlineAnnouncement : System.ServiceModel.Discovery.DiscoveryMessageSequence * System.ServiceModel.Discovery.EndpointDiscoveryMetadata * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.OnBeginOnlineAnnouncement : System.ServiceModel.Discovery.DiscoveryMessageSequence * System.ServiceModel.Discovery.EndpointDiscoveryMetadata * AsyncCallback * obj -&gt; IAsyncResult" Usage="announcementService.OnBeginOnlineAnnouncement (messageSequence, endpointDiscoveryMetadata, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Discovery.IAnnouncementServiceImplementation.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageSequence" Type="System.ServiceModel.Discovery.DiscoveryMessageSequence" />
        <Parameter Name="endpointDiscoveryMetadata" Type="System.ServiceModel.Discovery.EndpointDiscoveryMetadata" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="messageSequence"><span data-ttu-id="e4cb3-117">Порядковый номер сообщения в последовательности для текущего уведомления.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-117">The position of this message in the sequence for the current notification.</span></span></param>
        <param name="endpointDiscoveryMetadata"><span data-ttu-id="e4cb3-118">Объект, представляющий метаданные конечной точки, например области, URI для прослушивания, имена контрактов и адрес конечной точки.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-118">An object that provides endpoint metadata, for example scopes, listen URI, contract names, and endpoint address.</span></span></param>
        <param name="callback"><span data-ttu-id="e4cb3-119">Метод, который вызывается после завершения асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-119">The method to call when the asynchronous operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e4cb3-120">Определенные инфраструктурой данные о состоянии.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-120">Infrastructure-defined state data.</span></span></param>
        <summary><span data-ttu-id="e4cb3-121">Начинает обработку поступающих объявлений о входе в сеть (Hello).</span><span class="sxs-lookup"><span data-stu-id="e4cb3-121">Starts the processing of incoming online announcement (Hello) messages.</span></span></summary>
        <returns><span data-ttu-id="e4cb3-122">Состояние отложенного асинхронного запроса.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-122">The status of the pending asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cb3-123">Классы, наследующие от <xref:System.ServiceModel.Discovery.AnnouncementService> для реализации пользовательской службы прослушивателя объявлений, должны переопределить этот метод и начать обработку входящих сообщений Hello.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-123">Classes that inherit from <xref:System.ServiceModel.Discovery.AnnouncementService> to implement a custom announcement listener service must override this method and begin to process incoming Hello messages.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOfflineAnnouncement">
      <MemberSignature Language="C#" Value="protected virtual void OnEndOfflineAnnouncement (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndOfflineAnnouncement(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.AnnouncementService.OnEndOfflineAnnouncement(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndOfflineAnnouncement (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndOfflineAnnouncement(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndOfflineAnnouncement : IAsyncResult -&gt; unit&#xA;override this.OnEndOfflineAnnouncement : IAsyncResult -&gt; unit" Usage="announcementService.OnEndOfflineAnnouncement result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Discovery.IAnnouncementServiceImplementation.OnEndOfflineAnnouncement(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e4cb3-124">Асинхронный результат, возвращаемый соответствующим <see cref="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-124">An asynchronous result returned by the corresponding <see cref="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="e4cb3-125">Пользователи, наследующие от <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> для реализации пользовательской службы прослушивателя объявлений, должны переопределить этот метод и начать обработку входящих сообщений объявления в автономном режиме (Bye) здесь.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-125">Users that inherit from <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> to implement a custom announcement listener service must override this method and begin to process incoming offline announcement (Bye) messages here.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOnlineAnnouncement">
      <MemberSignature Language="C#" Value="protected virtual void OnEndOnlineAnnouncement (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndOnlineAnnouncement(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.AnnouncementService.OnEndOnlineAnnouncement(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndOnlineAnnouncement (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndOnlineAnnouncement(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndOnlineAnnouncement : IAsyncResult -&gt; unit&#xA;override this.OnEndOnlineAnnouncement : IAsyncResult -&gt; unit" Usage="announcementService.OnEndOnlineAnnouncement result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Discovery.IAnnouncementServiceImplementation.OnEndOnlineAnnouncement(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e4cb3-126">Асинхронный результат, возвращаемый соответствующим <see cref="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-126">An asynchronous result returned by the corresponding <see cref="M:System.ServiceModel.Discovery.AnnouncementService.OnBeginOnlineAnnouncement(System.ServiceModel.Discovery.DiscoveryMessageSequence,System.ServiceModel.Discovery.EndpointDiscoveryMetadata,System.AsyncCallback,System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="e4cb3-127">Пользователи, наследующие от <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> для реализации пользовательской службы прослушивателя объявлений, должны переопределить этот метод и начать обработку входящих сообщений объявления в автономном режиме (Bye) здесь.</span><span class="sxs-lookup"><span data-stu-id="e4cb3-127">Users that inherit from <see cref="T:System.ServiceModel.Discovery.AnnouncementService" /> to implement a custom announcement listener service must override this method and begin to process incoming offline announcement (Bye) messages here.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnlineAnnouncementReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ServiceModel.Discovery.AnnouncementEventArgs&gt; OnlineAnnouncementReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ServiceModel.Discovery.AnnouncementEventArgs&gt; OnlineAnnouncementReceived" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.Discovery.AnnouncementService.OnlineAnnouncementReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnlineAnnouncementReceived As EventHandler(Of AnnouncementEventArgs) " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ServiceModel::Discovery::AnnouncementEventArgs ^&gt; ^ OnlineAnnouncementReceived;" />
      <MemberSignature Language="F#" Value="member this.OnlineAnnouncementReceived : EventHandler&lt;System.ServiceModel.Discovery.AnnouncementEventArgs&gt; " Usage="member this.OnlineAnnouncementReceived : System.EventHandler&lt;System.ServiceModel.Discovery.AnnouncementEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event OnlineAnnouncementReceived As EventHandler(Of AnnouncementEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ServiceModel.Discovery.AnnouncementEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4cb3-128">Происходит, когда поступает объявление о входе в сеть (Hello).</span><span class="sxs-lookup"><span data-stu-id="e4cb3-128">Occurs when an online announcement (Hello) is received.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
