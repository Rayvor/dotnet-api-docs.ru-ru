<Type Name="IListContract&lt;T&gt;" FullName="System.AddIn.Contract.IListContract&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="284a507276c32fb294140b2169bd33fef4cf4ca5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69337437" /></Metadata><TypeSignature Language="C#" Value="public interface IListContract&lt;T&gt; : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;T&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of T)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IListContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IListContract&lt;'T&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="b9c7a-101">Тип контракта объектов в списке.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-101">The contract type of the objects in the list.</span></span></typeparam>
    <summary><span data-ttu-id="b9c7a-102">Представляет список параметров настройки типов, которые определяются контрактом и используются для передачи коллекций этого типа контракта между узелом и надстройкой.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-102">Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c7a-103"><xref:System.AddIn.Pipeline.CollectionAdapters> Класс<xref:System.AddIn.Contract.IListContract%601> использует интерфейс для передачи коллекций в обоих направлениях между узлом и надстройкой.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-103">The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in.</span></span> <span data-ttu-id="b9c7a-104">Рекомендуется использовать <xref:System.AddIn.Pipeline.CollectionAdapters> класс вместо непосредственного использования этого класса в коде.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-104">It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code.</span></span> <span data-ttu-id="b9c7a-105">Пример см. в разделе [Пошаговое руководство. Передача коллекций между узлами и надстройками](https://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span><span class="sxs-lookup"><span data-stu-id="b9c7a-105">For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](https://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span></span>  
  
 <span data-ttu-id="b9c7a-106">Этот класс можно использовать для передачи объектов по ссылке между доменами приложений, так как объекты не сериализуются.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-106">This class can be used to pass objects by reference between application domains because the objects are not serialized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit" Usage="iListContract.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b9c7a-107">Добавляемый объект.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-107">The object to add.</span></span></param>
        <summary><span data-ttu-id="b9c7a-108">Добавляет объект в коллекцию <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-108">Adds an object to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c7a-109">`item` Параметр должен иметь тип, определенный контрактом.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-109">The `item` parameter must be of a type that is defined by the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iListContract.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9c7a-110">Удаляет все объекты из коллекции <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-110">Removes all objects from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool" Usage="iListContract.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b9c7a-111">Объект, поиск которого в коллекции необходимо выполнить.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-111">The object to look for in the collection.</span></span></param>
        <summary><span data-ttu-id="b9c7a-112">Определяет, присутствует ли указанный элемент в коллекции <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-112">Determines whether a specific item is in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="b9c7a-113"><see langword="true" />, если элемент <paramref name="item" /> присутствует в коллекции; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-113"><see langword="true" /> if <paramref name="item" /> is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public int GetCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCount();" />
      <MemberSignature Language="F#" Value="abstract member GetCount : unit -&gt; int" Usage="iListContract.GetCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9c7a-114">Возвращает число элементов коллекции <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-114">Gets the number of items in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="b9c7a-115">Количество элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-115">The number of items in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorContract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IEnumeratorContract&lt;T&gt; GetEnumeratorContract ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IEnumeratorContract`1&lt;!T&gt; GetEnumeratorContract() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumeratorContract () As IEnumeratorContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::IEnumeratorContract&lt;T&gt; ^ GetEnumeratorContract();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorContract : unit -&gt; System.AddIn.Contract.IEnumeratorContract&lt;'T&gt;" Usage="iListContract.GetEnumeratorContract " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IEnumeratorContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9c7a-116">Возвращает перечислитель, осуществляющий итерацию через <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-116">Returns an enumerator that iterates through an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="b9c7a-117">Перечислитель <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" />, осуществляющий итерацию в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-117">An <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> enumerator to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsReadOnly">
      <MemberSignature Language="C#" Value="public bool GetIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member GetIsReadOnly : unit -&gt; bool" Usage="iListContract.GetIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9c7a-118">Определяет, доступна ли коллекция <see cref="T:System.AddIn.Contract.IListContract`1" /> только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-118">Determines whether an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></summary>
        <returns><span data-ttu-id="b9c7a-119">Значение <see langword="true" />, если коллекция доступна только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-119"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public T GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : int -&gt; 'T" Usage="iListContract.GetItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b9c7a-120">Отсчитываемый с нуля индекс элемента, который необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-120">The zero-based index of the item to get.</span></span></param>
        <summary><span data-ttu-id="b9c7a-121">Возвращает элемент с заданным индексом в коллекции <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-121">Returns the item at the specified index of an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="b9c7a-122">Элемент по заданному индексу.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-122">The item at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c7a-123"><xref:System.AddIn.Contract.IListContract%601.GetItem%2A> Метод не удаляет элемент по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-123">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="b9c7a-124">Чтобы удалить элемент из <xref:System.AddIn.Contract.IListContract%601> коллекции, <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-124">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b9c7a-125">Значение параметра <paramref name="index" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-125"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="b9c7a-126">- или -</span><span class="sxs-lookup"><span data-stu-id="b9c7a-126">-or-</span></span> 
 <span data-ttu-id="b9c7a-127">Значение параметра <paramref name="index" /> равно или больше возвращаемого значения метода <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-127"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int" Usage="iListContract.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b9c7a-128">Элемент коллекции.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-128">An item in the collection.</span></span></param>
        <summary><span data-ttu-id="b9c7a-129">Возвращает индекс конкретного элемента в коллекции <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-129">Returns the index of a specific item in an <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="b9c7a-130">Индекс выбранного элемента.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-130">The index of the specified item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c7a-131">Если в коллекции есть несколько объектов одного типа, этот метод определяет индекс элемента, который является первым вхождением указанного типа в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-131">If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.</span></span>  
  
 <span data-ttu-id="b9c7a-132"><xref:System.AddIn.Contract.IListContract%601.GetItem%2A> Метод не удаляет элемент по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-132">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="b9c7a-133">Чтобы удалить элемент из <xref:System.AddIn.Contract.IListContract%601> коллекции, <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-133">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b9c7a-134">Значение параметра <paramref name="index" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-134"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="b9c7a-135">- или -</span><span class="sxs-lookup"><span data-stu-id="b9c7a-135">-or-</span></span> 
 <span data-ttu-id="b9c7a-136">Значение параметра <paramref name="index" /> равно или больше возвращаемого значения метода <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-136"><paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit" Usage="iListContract.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b9c7a-137">Отсчитываемый с нуля индекс, по которому должен быть вставлен параметр <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-137">The zero-based index at which to insert <paramref name="item" />.</span></span></param>
        <param name="item"><span data-ttu-id="b9c7a-138">Объект <see cref="T:System.AddIn.Contract.IContract" />, вставляемый в коллекцию <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-138">The <see cref="T:System.AddIn.Contract.IContract" /> object to insert in the <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></param>
        <summary><span data-ttu-id="b9c7a-139">Вставляет элемент по указанному индексу в коллекцию <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-139">Inserts an item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c7a-140">После вызова <xref:System.AddIn.Contract.IListContract%601.Insert%2A> метода элементы, которые следуют за точкой вставки, перемещаются в соответствии с новым элементом.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-140">After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item.</span></span> <span data-ttu-id="b9c7a-141">Также обновляются индексы перемещаемых элементов.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-141">The indexes of the items that are moved are also updated.</span></span> <span data-ttu-id="b9c7a-142">Чтобы заменить элемент по указанному индексу, используйте <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-142">To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="b9c7a-143">Чтобы определить, доступна <xref:System.AddIn.Contract.IListContract%601> ли коллекция только для чтения, <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-143">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b9c7a-144">Значение параметра <paramref name="index" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-144"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="b9c7a-145">- или -</span><span class="sxs-lookup"><span data-stu-id="b9c7a-145">-or-</span></span> 
 <span data-ttu-id="b9c7a-146">Значение параметра <paramref name="index" /> равно или больше возвращаемого значения метода <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-146"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b9c7a-147">Коллекция <see cref="T:System.AddIn.Contract.IListContract`1" /> доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-147">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool" Usage="iListContract.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b9c7a-148">Элемент, который нужно удалить из коллекции.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-148">The item to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="b9c7a-149">Удаляет элемент из коллекции <see cref="T:System.AddIn.Contract.IListContract`1" /> указанного типа.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-149">Removes an item from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection of a specified type.</span></span></summary>
        <returns><span data-ttu-id="b9c7a-150">Значение <see langword="true" /> если элемент удален; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-150"><see langword="true" /> if an item is removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c7a-151">Этот метод необходимо повторить для каждого объекта определенного типа в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-151">You must repeat this method for each object of a particular type in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iListContract.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b9c7a-152">Индекс удаляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-152">The index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="b9c7a-153">Удаляет элемент с указанным индексом в коллекции <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-153">Removes the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c7a-154">После вызова <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>элементы, следующие за удаленным элементом, перемещаются, чтобы занять освободившееся место.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-154">After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot.</span></span> <span data-ttu-id="b9c7a-155">Также обновляются индексы перемещаемых элементов.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-155">The indexes of the items that are moved are also updated.</span></span>  
  
 <span data-ttu-id="b9c7a-156">Чтобы определить, доступна <xref:System.AddIn.Contract.IListContract%601> ли коллекция только для чтения, <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-156">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b9c7a-157">Значение параметра <paramref name="index" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-157"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="b9c7a-158">-или-</span><span class="sxs-lookup"><span data-stu-id="b9c7a-158">-or-</span></span> 
 <span data-ttu-id="b9c7a-159">Значение параметра <paramref name="index" /> равно или больше возвращаемого значения метода <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-159"><paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b9c7a-160">Коллекция <see cref="T:System.AddIn.Contract.IListContract`1" /> доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-160">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'T -&gt; unit" Usage="iListContract.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b9c7a-161">Индекс (начиная с нуля) задаваемого элемента.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-161">The zero-based index at which to set the item.</span></span></param>
        <param name="item"><span data-ttu-id="b9c7a-162">Элемент, который необходимо вставить по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-162">The item to set at the specified index.</span></span></param>
        <summary><span data-ttu-id="b9c7a-163">Задает элемент с указанным индексу в коллекции <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-163">Sets the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c7a-164"><xref:System.AddIn.Contract.IListContract%601.SetItem%2A> Метод задает элемент по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-164">The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index.</span></span> <span data-ttu-id="b9c7a-165">Чтобы добавить элемент в <xref:System.AddIn.Contract.IListContract%601> коллекцию, <xref:System.AddIn.Contract.IListContract%601.Insert%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-165">To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="b9c7a-166">Чтобы определить, доступна <xref:System.AddIn.Contract.IListContract%601> ли коллекция только для чтения, <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-166">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b9c7a-167">Значение параметра <paramref name="index" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-167"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="b9c7a-168">-или-</span><span class="sxs-lookup"><span data-stu-id="b9c7a-168">-or-</span></span> 
 <span data-ttu-id="b9c7a-169">Значение параметра <paramref name="index" /> равно или больше возвращаемого значения метода <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-169"><paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b9c7a-170">Коллекция <see cref="T:System.AddIn.Contract.IListContract`1" /> доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b9c7a-170">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
