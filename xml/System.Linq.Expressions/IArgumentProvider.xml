<Type Name="IArgumentProvider" FullName="System.Linq.Expressions.IArgumentProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="978f18032b1aec687a3f90531a776cb2a47a2705" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67244480" /></Metadata><TypeSignature Language="C#" Value="public interface IArgumentProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IArgumentProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IArgumentProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IArgumentProvider" />
  <TypeSignature Language="F#" Value="type IArgumentProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bc57b-101">Предоставляет внутренний интерфейс для доступа к аргументам нескольких узлов дерева (DynamicExpression, ElementInit, MethodCallExpression, InvocationExpression, NewExpression и IndexExpression).</span><span class="sxs-lookup"><span data-stu-id="bc57b-101">Provides an internal interface for accessing the arguments of multiple tree nodes (DynamicExpression, ElementInit, MethodCallExpression, InvocationExpression, NewExpression, and IndexExpression).</span></span>  <span data-ttu-id="bc57b-102">Этот интерфейс API предназначен только для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="bc57b-102">This API is for internal use only.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
      
## Remarks

<span data-ttu-id="bc57b-103">Не следует использовать этот API.</span><span class="sxs-lookup"><span data-stu-id="bc57b-103">You should not use this API.</span></span>  <span data-ttu-id="bc57b-104">Он является открытым только из-за рефакторинга сборки и существует только для внутренней оптимизации производительности.</span><span class="sxs-lookup"><span data-stu-id="bc57b-104">It is public only due to assembly refactoring, and it exists only for internal performance optimizations.</span></span> <span data-ttu-id="bc57b-105">В результате два способа оптимизации, которые уменьшают размер деревьев:</span><span class="sxs-lookup"><span data-stu-id="bc57b-105">It enables two optimizations that reduce the size of the trees:</span></span>
  
1. <span data-ttu-id="bc57b-106">Он позволяет узлам держаться <xref:System.Collections.Generic.IList%601> вместо <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="bc57b-106">It enables the nodes to hold onto an <xref:System.Collections.Generic.IList%601> instead of a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  <span data-ttu-id="bc57b-107">Это уменьшает затраты на выделение только для чтения коллекцию для каждого узла.</span><span class="sxs-lookup"><span data-stu-id="bc57b-107">This saves the cost of allocating the read-only collection for each node.</span></span>
  
2. <span data-ttu-id="bc57b-108">Он позволяет специализированных подклассов создаваемого удержанием на определенное число аргументов (например, `Block2`, `Block2`, `Block4`).</span><span class="sxs-lookup"><span data-stu-id="bc57b-108">It enables specialized subclasses to be created that hold on to a specific number of arguments (for example, `Block2`, `Block2`, `Block4`).</span></span>  <span data-ttu-id="bc57b-109">Таким образом, эти узлы не, требуется выделять оба <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> и массив для хранения их элементов, что экономит 32 байта на каждый узел.</span><span class="sxs-lookup"><span data-stu-id="bc57b-109">Therefore, these nodes avoid allocating both a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> and an array for storing their elements, thus saving 32 bytes per node.</span></span>  <span data-ttu-id="bc57b-110">Этот прием используется в различных узлов, включая <xref:System.Linq.Expressions.BlockExpression>, <xref:System.Linq.Expressions.InvocationExpression>, и <xref:System.Linq.Expressions.MethodCallExpression>.</span><span class="sxs-lookup"><span data-stu-id="bc57b-110">This technique is used by various nodes, including <xref:System.Linq.Expressions.BlockExpression>, <xref:System.Linq.Expressions.InvocationExpression>, and <xref:System.Linq.Expressions.MethodCallExpression>.</span></span>
            
<span data-ttu-id="bc57b-111">Узлы дерева выражения по-прежнему предоставляют исходные свойства LINQ <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> объектов.</span><span class="sxs-lookup"><span data-stu-id="bc57b-111">The expression tree nodes continue to expose the original LINQ properties of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> objects.</span></span> <span data-ttu-id="bc57b-112">Это делается путем повторного использования поля для хранения массива или элемент, который обычно хранятся в массиве.</span><span class="sxs-lookup"><span data-stu-id="bc57b-112">They do this by reusing a field for storing both the array or an element that would normally be stored in the array.</span></span>
            
<span data-ttu-id="bc57b-113">В случае массива коллекции типизируется в <xref:System.Collections.Generic.IList%601> вместо <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="bc57b-113">For the array case, the collection is typed to <xref:System.Collections.Generic.IList%601> instead of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span> <span data-ttu-id="bc57b-114">Когда узел изначально создается, он является массивом.</span><span class="sxs-lookup"><span data-stu-id="bc57b-114">When the node is initially constructed, it is an array.</span></span>  <span data-ttu-id="bc57b-115">Компилятор или служебные программы в этой библиотеке доступа к элементам через этот интерфейс.</span><span class="sxs-lookup"><span data-stu-id="bc57b-115">The compiler or utilities in this library access the elements through this interface.</span></span> <span data-ttu-id="bc57b-116">Доступ к элементам массива повышает уровень массива для <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="bc57b-116">Accessing array elements promotes the array to a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>
            
<span data-ttu-id="bc57b-117">В случае объекта первый аргумент хранится в поле, типизированном в <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="bc57b-117">For the object case, the first argument is stored in a field typed to <xref:System.Object>.</span></span> <span data-ttu-id="bc57b-118">Когда узел изначально создается, это поле содержит <xref:System.Linq.Expressions.Expression> первого аргумента.</span><span class="sxs-lookup"><span data-stu-id="bc57b-118">When the node is initially constructed, this field holds the <xref:System.Linq.Expressions.Expression> of the first argument.</span></span>  <span data-ttu-id="bc57b-119">Когда компилятор и служебные программы в этой библиотеке доступа к аргументам, они снова использовать этот интерфейс и метод доступа для первого аргумента использует внутренний `Expression.ReturnObject<T>(System.Object)` вспомогательный метод для возврата объекта, который обрабатывает <xref:System.Linq.Expressions.Expression> или <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> случая.</span><span class="sxs-lookup"><span data-stu-id="bc57b-119">When the compiler and utilities in this library access the arguments, they again use this interface, and the accessor for the first argument uses the internal `Expression.ReturnObject<T>(System.Object)` helper method to return the object that handles the <xref:System.Linq.Expressions.Expression> or <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> case.</span></span> <span data-ttu-id="bc57b-120">Когда пользователь обращается к <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>, поле объекта обновляется для хранения непосредственно на <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="bc57b-120">When the user accesses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>, the object field is updated to hold directly onto the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>
            
<span data-ttu-id="bc57b-121">Очень важно, <xref:System.Linq.Expressions.Expression> свойства согласованно возвращает такой же <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="bc57b-121">It is important that <xref:System.Linq.Expressions.Expression> properties consistently return the same <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span> <span data-ttu-id="bc57b-122">В противном случае произойдет останов обход дерева перезаписи, используемые посетителей-выражений.</span><span class="sxs-lookup"><span data-stu-id="bc57b-122">Otherwise, the rewriter tree walker used by expression visitors will break.</span></span> <span data-ttu-id="bc57b-123">Это критическое изменение LINQ v1 для возврата различных <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> с использованием того же <xref:System.Linq.Expressions.Expression> узла.</span><span class="sxs-lookup"><span data-stu-id="bc57b-123">It is a breaking change from LINQ v1 to return different <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> from the same <xref:System.Linq.Expressions.Expression> node.</span></span> <span data-ttu-id="bc57b-124">В настоящее время пользователи могут использовать удостоверение объекта, чтобы определить, изменилась ли узел.</span><span class="sxs-lookup"><span data-stu-id="bc57b-124">Currently, users can rely on object identity to tell if the node has changed.</span></span>  <span data-ttu-id="bc57b-125">Хранение <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> в перегруженном поле оба позволяет сократить использование памяти и обеспечивает совместимость для открытого API-интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bc57b-125">Storing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> in an overloaded field both reduces memory usage and maintains compatibility for the public API.</span></span>

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgumentCount">
      <MemberSignature Language="C#" Value="public int ArgumentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArgumentCount" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArgumentCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentCount : int" Usage="System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc57b-126">Возвращает число аргументов для узла дерева выражения.</span><span class="sxs-lookup"><span data-stu-id="bc57b-126">Returns the number of arguments to the expression tree node.</span></span> <span data-ttu-id="bc57b-127">Этот интерфейс API предназначен только для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="bc57b-127">This API is for internal use only.</span></span></summary>
        <value><span data-ttu-id="bc57b-128">Число аргументов для узла дерева выражения в виде <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="bc57b-128">The number of arguments to the expression tree node as <see cref="T:System.Int32" />.</span></span></value>
        <remarks><span data-ttu-id="bc57b-129">Не следует использовать этот API.</span><span class="sxs-lookup"><span data-stu-id="bc57b-129">You should not use this API.</span></span> <span data-ttu-id="bc57b-130">Он является открытым только из-за рефакторинга сборки, и он используется системой для оптимизации производительности.</span><span class="sxs-lookup"><span data-stu-id="bc57b-130">It is public only due to assembly refactoring, and it is used internally for performance optimizations.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgument">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetArgument (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetArgument(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgument (index As Integer) As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ GetArgument(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetArgument : int -&gt; System.Linq.Expressions.Expression" Usage="iArgumentProvider.GetArgument index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bc57b-131">Индекс аргумента.</span><span class="sxs-lookup"><span data-stu-id="bc57b-131">The index of the argument.</span></span></param>
        <summary><span data-ttu-id="bc57b-132">Возвращает аргумент по индексу <paramref name="index" />, создавая исключение, если индекс <paramref name="index" /> находится вне допустимых границ.</span><span class="sxs-lookup"><span data-stu-id="bc57b-132">Returns the argument at <paramref name="index" />, throwing if <paramref name="index" /> is out of bounds.</span></span> <span data-ttu-id="bc57b-133">Этот интерфейс API предназначен только для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="bc57b-133">This API is for internal use only.</span></span></summary>
        <returns><span data-ttu-id="bc57b-134">Аргумент по индексу.</span><span class="sxs-lookup"><span data-stu-id="bc57b-134">The argument at index.</span></span></returns>
        <remarks><span data-ttu-id="bc57b-135">Не следует использовать этот API.</span><span class="sxs-lookup"><span data-stu-id="bc57b-135">You should not use this API.</span></span>  <span data-ttu-id="bc57b-136">Он является открытым только из-за рефакторинга сборки и используется внутренне для оптимизации производительности.</span><span class="sxs-lookup"><span data-stu-id="bc57b-136">It is only public due to assembly refactoring, and it is used internally for performance optimizations.</span></span></remarks>
      </Docs>
    </Member>
  </Members>
</Type>