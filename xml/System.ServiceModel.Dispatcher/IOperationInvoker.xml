<Type Name="IOperationInvoker" FullName="System.ServiceModel.Dispatcher.IOperationInvoker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3f2318f1f437be09ae8df4154bb7ac3a958893e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69150246" /></Metadata><TypeSignature Language="C#" Value="public interface IOperationInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationInvoker" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IOperationInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationInvoker" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOperationInvoker" />
  <TypeSignature Language="F#" Value="type IOperationInvoker = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c62f4-101">Объявляет методы, берущие объект и массив параметров, извлеченных из сообщения, вызывающие метод для этого объекта с этими параметрами и возвращающие выходное значение и параметры вывода метода.</span><span class="sxs-lookup"><span data-stu-id="c62f4-101">Declares methods that take an object and an array of parameters extracted from a message, invoke a method on that object with those parameters, and return the method's return value and output parameters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c62f4-102">Использует интерфейс <xref:System.ServiceModel.Dispatcher.IOperationInvoker> для управления преобразованием из не типизированного объекта и массива параметров в строго типизированный вызов метода этим объектом.</span><span class="sxs-lookup"><span data-stu-id="c62f4-102">Implement the <xref:System.ServiceModel.Dispatcher.IOperationInvoker> interface to control the conversion from an untyped object and array of parameters to a strongly-typed method call on that object.</span></span> <span data-ttu-id="c62f4-103">Имеет синхронный метод <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>, который берет экземпляр и набор входных данных объекта типа и возвращает объект и набор выходных данных объекта типа.</span><span class="sxs-lookup"><span data-stu-id="c62f4-103">It has a synchronous <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> method, which takes an instance and set of inputs of type object and returns an object and a set of outputs of type object.</span></span> <span data-ttu-id="c62f4-104">Он также имеет варианты метода <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> и <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd%2A>.</span><span class="sxs-lookup"><span data-stu-id="c62f4-104">It also has a <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> and <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd%2A> variant.</span></span>  <span data-ttu-id="c62f4-105">Свойство <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> указывает, какой метод нужно использовать: синхронный или асинхронный.</span><span class="sxs-lookup"><span data-stu-id="c62f4-105">The <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> property specifies whether the synchronous or asynchronous method should be used.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllocateInputs">
      <MemberSignature Language="C#" Value="public object[] AllocateInputs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] AllocateInputs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs" />
      <MemberSignature Language="VB.NET" Value="Public Function AllocateInputs () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ AllocateInputs();" />
      <MemberSignature Language="F#" Value="abstract member AllocateInputs : unit -&gt; obj[]" Usage="iOperationInvoker.AllocateInputs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c62f4-106">Возвращает <see cref="T:System.Array" /> объектов параметров.</span><span class="sxs-lookup"><span data-stu-id="c62f4-106">Returns an <see cref="T:System.Array" /> of parameter objects.</span></span></summary>
        <returns><span data-ttu-id="c62f4-107">Параметры, которые должны использоваться в качестве аргументов в операции.</span><span class="sxs-lookup"><span data-stu-id="c62f4-107">The parameters that are to be used as arguments to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c62f4-108">Примените этот метод для возвращения массива параметров для операции.</span><span class="sxs-lookup"><span data-stu-id="c62f4-108">Implement this to return an array of parameters for the operation.</span></span> <span data-ttu-id="c62f4-109">Этот массив заполняется средством форматирования и передается обратно вызывающему при вызове метода <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c62f4-109">This array is filled by the formatter and passed back to the invoker when <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <threadsafe><span data-ttu-id="c62f4-110">Реализация этого метода должна распределять входной массив при каждом вызове.</span><span class="sxs-lookup"><span data-stu-id="c62f4-110">An implementation of this method must allocate the input array on every call.</span></span> <span data-ttu-id="c62f4-111">Возврат одного и того же массива для нескольких вызовов может привести к непредсказуемому поведению.</span><span class="sxs-lookup"><span data-stu-id="c62f4-111">Returning the same array for multiple calls can result in unpredictable behavior.</span></span></threadsafe>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object instance, object[] inputs, out object[] outputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(object instance, object[] inputs, [out] object[]&amp; outputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (instance As Object, inputs As Object(), ByRef outputs As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ instance, cli::array &lt;System::Object ^&gt; ^ inputs, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % outputs);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : obj * obj[] *  -&gt; obj" Usage="iOperationInvoker.Invoke (instance, inputs, outputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="outputs" Type="System.Object[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c62f4-112">Вызываемый объект.</span><span class="sxs-lookup"><span data-stu-id="c62f4-112">The object to be invoked.</span></span></param>
        <param name="inputs"><span data-ttu-id="c62f4-113">Входные данные для метода.</span><span class="sxs-lookup"><span data-stu-id="c62f4-113">The inputs to the method.</span></span></param>
        <param name="outputs"><span data-ttu-id="c62f4-114">Выходные данные метода.</span><span class="sxs-lookup"><span data-stu-id="c62f4-114">The outputs from the method.</span></span></param>
        <summary><span data-ttu-id="c62f4-115">Возвращает объект и набор выходных данных объектов из экземпляра и набора входных значений объектов.</span><span class="sxs-lookup"><span data-stu-id="c62f4-115">Returns an object and a set of output objects from an instance and set of input objects.</span></span></summary>
        <returns><span data-ttu-id="c62f4-116">Возвращаемое значение.</span><span class="sxs-lookup"><span data-stu-id="c62f4-116">The return value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeBegin">
      <MemberSignature Language="C#" Value="public IAsyncResult InvokeBegin (object instance, object[] inputs, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult InvokeBegin(object instance, object[] inputs, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeBegin (instance As Object, inputs As Object(), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ InvokeBegin(System::Object ^ instance, cli::array &lt;System::Object ^&gt; ^ inputs, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member InvokeBegin : obj * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="iOperationInvoker.InvokeBegin (instance, inputs, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c62f4-117">Вызываемый объект.</span><span class="sxs-lookup"><span data-stu-id="c62f4-117">The object to be invoked.</span></span></param>
        <param name="inputs"><span data-ttu-id="c62f4-118">Входные данные для метода.</span><span class="sxs-lookup"><span data-stu-id="c62f4-118">The inputs to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="c62f4-119">Асинхронный обратный вызов объекта.</span><span class="sxs-lookup"><span data-stu-id="c62f4-119">The asynchronous callback object.</span></span></param>
        <param name="state"><span data-ttu-id="c62f4-120">Связанные данные состояния.</span><span class="sxs-lookup"><span data-stu-id="c62f4-120">Associated state data.</span></span></param>
        <summary><span data-ttu-id="c62f4-121">Асинхронная реализация метода <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" />.</span><span class="sxs-lookup"><span data-stu-id="c62f4-121">An asynchronous implementation of the <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> method.</span></span></summary>
        <returns><span data-ttu-id="c62f4-122">Объект <see cref="T:System.IAsyncResult" />, используемый для выполнения асинхронного вызова.</span><span class="sxs-lookup"><span data-stu-id="c62f4-122">A <see cref="T:System.IAsyncResult" /> used to complete the asynchronous call.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEnd">
      <MemberSignature Language="C#" Value="public object InvokeEnd (object instance, out object[] outputs, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeEnd(object instance, [out] object[]&amp; outputs, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeEnd (instance As Object, ByRef outputs As Object(), result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeEnd(System::Object ^ instance, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % outputs, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member InvokeEnd : obj *  * IAsyncResult -&gt; obj" Usage="iOperationInvoker.InvokeEnd (instance, outputs, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="outputs" Type="System.Object[]" RefType="out" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c62f4-123">Вызываемый объект.</span><span class="sxs-lookup"><span data-stu-id="c62f4-123">The object invoked.</span></span></param>
        <param name="outputs"><span data-ttu-id="c62f4-124">Выходные данные метода.</span><span class="sxs-lookup"><span data-stu-id="c62f4-124">The outputs from the method.</span></span></param>
        <param name="result"><span data-ttu-id="c62f4-125">Объект <see cref="T:System.IAsyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="c62f4-125">The <see cref="T:System.IAsyncResult" /> object.</span></span></param>
        <summary><span data-ttu-id="c62f4-126">Метод асинхронного завершения.</span><span class="sxs-lookup"><span data-stu-id="c62f4-126">The asynchronous end method.</span></span></summary>
        <returns><span data-ttu-id="c62f4-127">Возвращаемое значение.</span><span class="sxs-lookup"><span data-stu-id="c62f4-127">The return value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronous">
      <MemberSignature Language="C#" Value="public bool IsSynchronous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronous : bool" Usage="System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c62f4-128">Получает значение, указывающее какой из методов: <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> или <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" />, вызывается диспетчером.</span><span class="sxs-lookup"><span data-stu-id="c62f4-128">Gets a value that specifies whether the <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> or <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" /> method is called by the dispatcher.</span></span></summary>
        <value><span data-ttu-id="c62f4-129"><see langword="true" />, если диспетчер вызывает синхронную операцию; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c62f4-129"><see langword="true" /> if the dispatcher invokes the synchronous operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c62f4-130">Вызывающий по умолчанию передает сообщения путем синхронной операции по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c62f4-130">The default invoker dispatches messages to the synchronous operation by default.</span></span> <span data-ttu-id="c62f4-131">Это значение хранится в кэше диспетчера и поэтому не изменяется за время существования объекта, применяющего <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.</span><span class="sxs-lookup"><span data-stu-id="c62f4-131">This value is cached by the dispatcher and therefore should not change over the lifetime of the object that implements <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
