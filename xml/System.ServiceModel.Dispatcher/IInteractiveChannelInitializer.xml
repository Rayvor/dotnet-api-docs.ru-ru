<Type Name="IInteractiveChannelInitializer" FullName="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36905c449ac2de501306f46fbd3b089ed7a7ced4" /><Meta Name="ms.sourcegitcommit" Value="2b78f05b0c6fa92adaf5e1dfe5a50388f952efe7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/02/2019" /><Meta Name="ms.locfileid" Value="71808188" /></Metadata><TypeSignature Language="C#" Value="public interface IInteractiveChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInteractiveChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInteractiveChannelInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInteractiveChannelInitializer" />
  <TypeSignature Language="F#" Value="type IInteractiveChannelInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет методы, позволяющие приложению клиента отображать пользовательский интерфейс, чтобы собирать данные идентификации до создания канала.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализуйте интерфейс <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, чтобы разрешить приложению клиента отображать пользовательский интерфейс, что позволяет пользователю приложения создавать или выбирать учетные данные до открытия канала.  
  
 Чтобы применить экземпляр <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, выполните следующие шаги в <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:  
  
1.  Запросите пользователя и получите соответствующие <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.  
  
2.  Добавьте настраиваемый объект параметра канала в коллекцию, возвращаемую методом <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> в объекте <xref:System.ServiceModel.IClientChannel> с параметром типа <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>. Этот объект параметра канала используется настраиваемым средством <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> для установки маркеров безопасности для канала.  
  
3.  Возврат.  
  
 Для вставки <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:  
  
1.  Переопределите метод <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> в классе <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType>.  
  
2.  В этом методе определите, требует ли конечная точка объект <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, и если это так, то добавьте объект <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> в коллекцию <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType>.  
  
 Существует два пути использования вставленного объекта <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> разработчиками приложений. Клиентское приложение может вызвать либо <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType>, <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (или асинхронную версию) до открытия канала ( *явный* подход), либо просто вызвать первую операцию ( *неявный* подход).  
  
 Если использовать неявный подход, то приложение должно вызвать первую операцию в расширении <xref:System.ServiceModel.ClientBase%601> или <xref:System.ServiceModel.IClientChannel>. Если приложение вызовет что-либо другое вместо первой операции, будет создано исключение.  
  
 Если использовать явный подход, то приложение должно выполнить следующие шаги по порядку:  
  
1.  Вызывать либо <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType>, либо <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (или асинхронную версию).  
  
2.  После возвращения инициализаторов вызвать либо метод <xref:System.ServiceModel.ICommunicationObject.Open%2A> в объекте <xref:System.ServiceModel.IClientChannel>, либо в объекте <xref:System.ServiceModel.IClientChannel>, возвращенном из свойства <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType>.  
  
3.  Вызовите операции.  
  
 Рекомендуется, чтобы приложения качества работы управляли процессом взаимодействия пользователя с интерфейсом путем адаптации явного подхода.  
  
 Приложения, использующие неявный подход, вызывают инициализаторы интерфейса пользователя, но если пользователь приложения не сможет ответить в отведенный период времени привязки для отправки, то при возвращении пользовательского интерфейса создается исключение.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.ServiceModel.IClientChannel channel, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (channel As IClientChannel, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(System::ServiceModel::IClientChannel ^ channel, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDisplayInitializationUI : System.ServiceModel.IClientChannel * AsyncCallback * obj -&gt; IAsyncResult" Usage="iInteractiveChannelInitializer.BeginDisplayInitializationUI (channel, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel">Клиентский канал.</param>
        <param name="callback">Вызываемый обратно объект.</param>
        <param name="state">Данные в любом состоянии.</param>
        <summary>Асинхронный вызов для начала использования пользовательского интерфейса для получения учетных данных.</summary>
        <returns>Объект <see cref="T:System.IAsyncResult" />, используемый для обратного вызова после завершения обработки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы применить экземпляр <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, выполните следующие шаги в <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:  
  
1.  Запросите пользователя в нужном вам виде и получите соответствующие <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.  
  
2.  Добавьте настраиваемый объект параметра канала в коллекцию, возвращаемую методом <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> в объекте <xref:System.ServiceModel.IClientChannel> с параметром типа <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>. Этот объект параметра канала используется настраиваемым средством <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> для установки маркеров безопасности для канала.  
  
3.  Возврат.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDisplayInitializationUI : IAsyncResult -&gt; unit" Usage="iInteractiveChannelInitializer.EndDisplayInitializationUI result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />.</param>
        <summary>Вызывается при завершении свойства <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
