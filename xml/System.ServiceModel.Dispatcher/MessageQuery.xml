<Type Name="MessageQuery" FullName="System.ServiceModel.Dispatcher.MessageQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2232049d6ae5d69b2082525650f3a823b257cda5" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64101094" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQuery abstract" />
  <TypeSignature Language="F#" Value="type MessageQuery = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Определяет основные правила работы для классов, которые используются для поиска в сообщении данных, взаимосвязанных определенным образом.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.ServiceModel.Dispatcher.MessageQuery> аналогичен классу <xref:System.ServiceModel.Dispatcher.MessageFilter>,  однако метод <xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A> возвращает не совпадения, а результаты выполнения запроса к сообщению. Результатом запроса является значение из сообщения. Используйте это значение в качестве ключа для сопоставления сообщения с другими сообщениями. Чтобы добавить новое свойство для данных, используйте метод <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A> класса <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty>.  
  
> [!NOTE]
>  Конкретную реализацию <xref:System.ServiceModel.Dispatcher.MessageQuery> см. в описании класса <xref:System.ServiceModel.XPathMessageQuery>.  
  
## <a name="using-the-xpathmessagequery-and-messagequerycollection-classes"></a>Использование классов XPathMessageQuery и MessageQueryCollection  
 Чтобы оптимизировать процесс запроса, можно создать набор объектов запроса и вставить их в экземпляр класса <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>.  
  
> [!NOTE]
>  Конкретную реализацию <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> см. в описании класса <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>.  
  
 Распространенным вариантом применения является заполнение коллекции запросами, имеющими одинаковый предикат XPath и отличающимися только последним конечным значением. Например, следующие запросы XPath идентичны, за исключением последнего предложения. Первый запрос запрашивает все элементы с атрибутом quantity, равным 1, а второй запрос запрашивает элементы с атрибутом product, имеющим значение «Contoso»:  
  
```  
"/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]"  
"/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = 'Contoso']"  
```  
  
 Класс <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> позволяет создавать таблицы запросов, которые отличаются лишь незначительно, что повышает эффективность обработки.  
  
 Также можно использовать класс <xref:System.ServiceModel.Dispatcher.MessageQueryTable%601> для хранения и вычисления запросов к сообщениям.  
  
   
  
## Examples  
 В следующем примере создается сообщение и запросы сообщений XPath. Запросы вычисляются объектами <xref:System.ServiceModel.XPathMessageQuery>, содержащимися в объекте <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>. Результаты каждого запроса проверяются с помощью свойства <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> класса <xref:System.ServiceModel.Dispatcher.XPathResult>.  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.XPathMessageQuery" />
    <altmember cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" />
    <altmember cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
    <altmember cref="T:System.ServiceModel.Dispatcher.XPathResult" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageQuery();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageQuery" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageQueryCollection">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessageQueryCollection () As MessageQueryCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Dispatcher::MessageQueryCollection ^ CreateMessageQueryCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageQueryCollection : unit -&gt; System.ServiceModel.Dispatcher.MessageQueryCollection&#xA;override this.CreateMessageQueryCollection : unit -&gt; System.ServiceModel.Dispatcher.MessageQueryCollection" Usage="messageQuery.CreateMessageQueryCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageQueryCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает коллекцию запросов, которые возвращают определенный тип данных, связанный с запросом.</summary>
        <returns>Коллекция <see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" /> запросов, связанных с типом данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предназначен для использования классом <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Evaluate&lt;TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>При переопределении в производном классе выполняет запрос к сообщению и возвращает значение, удовлетворяющее запросу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Разница между двумя перегруженными вариантами состоит в том, что первый принимает параметр <xref:System.ServiceModel.Channels.Message> и не может проверять текст сообщения, а второй принимает параметр <xref:System.ServiceModel.Channels.MessageBuffer> и может проверять любую часть сообщения. Заголовки сообщений автоматически помещаются в буфер и могут запрашиваться без их получения. Однако если необходимо направить запрос к тексту сообщения, то все сообщение должно помещаться в буфер, поскольку небуферизованный текст сообщения может быть поглощен запросом.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract TResult Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract TResult Evaluate(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.Message -&gt; 'Result" Usage="messageQuery.Evaluate message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Тип возвращаемого значения.</typeparam>
        <param name="message">Сообщение для запроса.</param>
        <summary>При переопределении в производном классе выполняет запрос к сообщению и возвращает результат. Невозможно запросить текст сообщения.</summary>
        <returns><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />  
  
Перечислимая коллекция результатов, отвечающих запросу.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract TResult Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Evaluate(Of TResult) (buffer As MessageBuffer) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract TResult Evaluate(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.MessageBuffer -&gt; 'Result" Usage="messageQuery.Evaluate buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Тип возвращаемого объекта.</typeparam>
        <param name="buffer">Сообщение для запроса.</param>
        <summary>При переопределении в производном классе выполняет запрос к сообщению и возвращает результат.</summary>
        <returns><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />  
  
Перечислимая коллекция результатов, отвечающих запросу.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере создается сообщение и запросы сообщений XPath. Запросы вычисляются объектами <xref:System.ServiceModel.XPathMessageQuery>, содержащимися в объекте <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>. Результаты каждого запроса проверяются с помощью свойства <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> класса <xref:System.ServiceModel.Dispatcher.XPathResult>.  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>