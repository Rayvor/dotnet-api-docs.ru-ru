<Type Name="IErrorHandler" FullName="System.ServiceModel.Dispatcher.IErrorHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a2285d06910f16471e7937c8b9a352ed5e89fdf3" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70600305" /></Metadata><TypeSignature Language="C#" Value="public interface IErrorHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IErrorHandler" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IErrorHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IErrorHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IErrorHandler" />
  <TypeSignature Language="F#" Value="type IErrorHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d90fc-101">Позволяет разработчику управлять сообщениями об ошибках, возвращаемыми вызывающему объекту, и дополнительно выполнять пользовательскую обработку ошибок, например ведение журнала.</span><span class="sxs-lookup"><span data-stu-id="d90fc-101">Allows an implementer to control the fault message returned to the caller and optionally perform custom error processing such as logging.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d90fc-102">Чтобы явно управлять поведением приложения при возникновении исключения, реализуйте <xref:System.ServiceModel.Dispatcher.IErrorHandler> интерфейс и добавьте его <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="d90fc-102">To explicitly control the behavior of the application when an exception is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler> interface and add it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>'s <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span> <span data-ttu-id="d90fc-103"><xref:System.ServiceModel.Dispatcher.IErrorHandler> позволяет пользователю явно управлять сообщением SOAP об ошибке, принимать решение о том, отправлять ли сообщение назад клиенту, и выполнять соответствующие задачи, например по ведению журнала.</span><span class="sxs-lookup"><span data-stu-id="d90fc-103"><xref:System.ServiceModel.Dispatcher.IErrorHandler> enables you to explicitly control the SOAP fault generated, decide whether to send it back to the client, and perform associated tasks, such as logging.</span></span> <span data-ttu-id="d90fc-104">Обработчики ошибок вызываются в том порядке, в котором они добавлены к свойству <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-104">Error handlers are called in the order in which they were added to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 <span data-ttu-id="d90fc-105">Реализуйте метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> для управления сообщением об ошибке, которое возвращается клиенту.</span><span class="sxs-lookup"><span data-stu-id="d90fc-105">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method to control the fault message that is returned to the client.</span></span>  
  
 <span data-ttu-id="d90fc-106">Реализуйте метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, чтобы обеспечить поведения, связанные с ошибками, например, ведение журнала ошибок, быстрое прекращение работы, завершение приложения, и т. п.</span><span class="sxs-lookup"><span data-stu-id="d90fc-106">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method to ensure error-related behaviors, including error logging, assuring a fail fast, shutting down the application, and so on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d90fc-107">Поскольку метод<xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> можно вызвать из множества разных мест, гарантии относительно того, что метод будет вызван на каком-то конкретном потоке, отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="d90fc-107">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="d90fc-108">Не полагайтесь на метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, вызываемый на потоке операции.</span><span class="sxs-lookup"><span data-stu-id="d90fc-108">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method being called on the operation thread.</span></span>  
  
 <span data-ttu-id="d90fc-109">Все реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> вызываются первыми, перед отправлением ответного сообщения.</span><span class="sxs-lookup"><span data-stu-id="d90fc-109">All <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations are called first, prior to sending a response message.</span></span> <span data-ttu-id="d90fc-110">Если все реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> уже были вызваны и возвращены, и если параметр `fault` имеет значение, отличное от `null`, он отправляется обратно клиенту согласно контракту операции.</span><span class="sxs-lookup"><span data-stu-id="d90fc-110">When all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations have been called and return, and if `fault` is non-`null`, it is sent back to the client according to the operation contract.</span></span> <span data-ttu-id="d90fc-111">Если параметр `fault` имеет значение `null` после всех вызванных реализаций, ответное сообщение управляется значением свойства <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-111">If `fault` is `null` after all implementations have been called, the response message is controlled by the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d90fc-112">Исключения могут возникать после вызова всех реализаций <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> и передачи ответного сообщения каналу.</span><span class="sxs-lookup"><span data-stu-id="d90fc-112">Exceptions can occur after all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations are called and a response message is handed to the channel.</span></span> <span data-ttu-id="d90fc-113">Если возникает исключение канала (например, сложность сериализации сообщения) <xref:System.ServiceModel.Dispatcher.IErrorHandler> , уведомляются объекты.</span><span class="sxs-lookup"><span data-stu-id="d90fc-113">If a channel exception occurs (for example, difficulty serializing the message) <xref:System.ServiceModel.Dispatcher.IErrorHandler> objects are notified.</span></span> <span data-ttu-id="d90fc-114">В этом случае необходимо убедиться, что среда разработки перехватывает и отображает такие исключения, или использует трассировку для обнаружения проблемы.</span><span class="sxs-lookup"><span data-stu-id="d90fc-114">In this case, you should still make sure that your development environment catches and displays such exceptions to you or makes use of tracing to discover the problem.</span></span> <span data-ttu-id="d90fc-115">Дополнительные сведения о трассировке см. [в разделе Использование трассировки для устранения неполадок в приложении](~/docs/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application.md).</span><span class="sxs-lookup"><span data-stu-id="d90fc-115">For more information about tracing, see [Using Tracing to Troubleshoot Your Application](~/docs/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application.md).</span></span>  
  
 <span data-ttu-id="d90fc-116">После отправки ответного сообщения все реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> вызываются в том же порядке.</span><span class="sxs-lookup"><span data-stu-id="d90fc-116">After the response message has been sent, all <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> implementations are called in the same order.</span></span>  
  
 <span data-ttu-id="d90fc-117">Обычно реализация <xref:System.ServiceModel.Dispatcher.IErrorHandler> добавляется к свойству<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> в службе (и к клиенту в случае дуплексного обмена данными).</span><span class="sxs-lookup"><span data-stu-id="d90fc-117">Typically, an <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation is added to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property on the service (and the client in the case of duplex communication).</span></span>  
  
 <span data-ttu-id="d90fc-118">Можно добавить интерфейс <xref:System.ServiceModel.Dispatcher.IErrorHandler> к среде выполнения, реализовав поведение (<xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> или <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> объекта), и использовать поведение программным способом, из файла конфигурации или с пользовательским атрибутом для присоединения интерфейса <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-118">You can add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> to the runtime by implementing a behavior (either an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>, or <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> object) and use the behavior programmatically, from a configuration file or with a custom attribute to attach your <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span></span>  
  
 <span data-ttu-id="d90fc-119">Дополнительные сведения об использовании поведений для изменения среды выполнения см. в разделе [Настройка и расширение среды выполнения с помощью поведений](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span><span class="sxs-lookup"><span data-stu-id="d90fc-119">For more information about using behaviors to modify the runtime, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d90fc-120">В следующем примере кода демонстрируется служба, которая реализует интерфейс <xref:System.ServiceModel.Dispatcher.IErrorHandler>, возвращающий только исключение <xref:System.ServiceModel.FaultException%601> типа `GreetingFault`, когда метод службы создает управляемое исключение.</span><span class="sxs-lookup"><span data-stu-id="d90fc-120">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="d90fc-121">В следующем примере кода показано использование поведения службы для добавления реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler> к свойству<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-121">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="d90fc-122">В следующем примере кода показано, как настроить службу для загрузки поведения службы с помощью файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="d90fc-122">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="d90fc-123">Дополнительные сведения о том, как предоставить поведение службы в файле конфигурации, см. в разделе <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-123">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  

 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleError">
      <MemberSignature Language="C#" Value="public bool HandleError (Exception error);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception error) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleError (error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ error);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public bool HandleError (Exception exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception exception) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member HandleError : Exception -&gt; bool" Usage="iErrorHandler.HandleError exception" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member HandleError : Exception -&gt; bool" Usage="iErrorHandler.HandleError exception" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="d90fc-124">Исключение, созданное при обработке.</span><span class="sxs-lookup"><span data-stu-id="d90fc-124">The exception thrown during processing.</span></span></param>
        <param name="exception"><span data-ttu-id="d90fc-125">Исключение, созданное при обработке.</span><span class="sxs-lookup"><span data-stu-id="d90fc-125">The exception thrown during processing.</span></span></param>
        <summary><span data-ttu-id="d90fc-126">Включает обработку, связанную с ошибками, и возвращает значение, которое показывает, прерывает ли диспетчер в определенных случаях сеанс и контекст экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d90fc-126">Enables error-related processing and returns a value that indicates whether the dispatcher aborts the session and the instance context in certain cases.</span></span></summary>
        <returns><span data-ttu-id="d90fc-127">Значение <see langword="true" />, если служба Windows Communication Foundation (WCF) не должна прерывать сеанс (если он имеется) и контекст экземпляра, если только этим контекстом не является <see cref="F:System.ServiceModel.InstanceContextMode.Single" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d90fc-127"><see langword="true" /> if Windows Communication Foundation (WCF) should not abort the session (if there is one) and instance context if the instance context is not <see cref="F:System.ServiceModel.InstanceContextMode.Single" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d90fc-128">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d90fc-128">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d90fc-129">Используйте метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> для реализации поведений, связанных с ошибками, например, ведения журнала ошибок, системных уведомлений, завершения приложения и т. п., а также для возвращения значения, которое указывает, было ли исключение обработано правильно.</span><span class="sxs-lookup"><span data-stu-id="d90fc-129">Use the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method to implement error-related behaviors such as error logging, system notifications, shutting down the application, and so on, and return a value that specifies whether the exception has been handled appropriately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d90fc-130">Поскольку метод<xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> можно вызвать из множества разных мест, гарантии относительно того, что метод будет вызван на каком-то конкретном потоке, отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="d90fc-130">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="d90fc-131">Не полагайтесь на метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, вызываемый на потоке операции.</span><span class="sxs-lookup"><span data-stu-id="d90fc-131">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method being called on the operation thread.</span></span>  
  
 <span data-ttu-id="d90fc-132">Вызываются все реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-132">All <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementations are called.</span></span> <span data-ttu-id="d90fc-133">По умолчанию (если возвращаемое значение `false`равно), если возникает исключение, диспетчер прерывает любой сеанс и прерывает, <xref:System.ServiceModel.InstanceContext> если является любым, <xref:System.ServiceModel.InstanceContextMode> отличным от <xref:System.ServiceModel.InstanceContextMode.Single>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-133">By default (when the return value is `false`), if there is an exception, the dispatcher aborts any session and aborts the <xref:System.ServiceModel.InstanceContext> if the <xref:System.ServiceModel.InstanceContextMode> is anything other than <xref:System.ServiceModel.InstanceContextMode.Single>.</span></span>  <span data-ttu-id="d90fc-134">Затем исключение считается необработанным, и любое состояние считается поврежденным.</span><span class="sxs-lookup"><span data-stu-id="d90fc-134">The exception is then considered unhandled and any state is considered corrupt.</span></span>  
  
 <span data-ttu-id="d90fc-135">Передайте значение `true` из метода <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, чтобы заблокировать это поведение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="d90fc-135">Return `true` from <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> to prevent this default behavior.</span></span> <span data-ttu-id="d90fc-136">Если какой-либо обработчик `true` ошибок возвращает, WCF может продолжать использовать состояние, связанное с неудачным запросом.</span><span class="sxs-lookup"><span data-stu-id="d90fc-136">If any error handler returns `true` it instructs WCF that it is safe to continue using state associated with the failed request.</span></span>  
  
 <span data-ttu-id="d90fc-137">Если ни один обработчик ошибок не возвращает значение `true` из метода <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, исключение считается необработанным и используется ответное сообщение по умолчанию, что может привести к прекращению работы <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> и канала, если используется взаимодействие через канал сеанса или если свойство <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> имеет значение, отличное от <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-137">If no error handler returns `true` from the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method the exception is considered unhandled and the default response applies, potentially resulting in an aborted <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> and channel when communicating on a session channel or the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property is not set to <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d90fc-138">Параметр `error` никогда не имеет значения `null` и содержит объект исключения, которое было создано.</span><span class="sxs-lookup"><span data-stu-id="d90fc-138">The `error` parameter is never `null` and contains the exception object that was thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d90fc-139">В следующем примере кода демонстрируется служба, которая реализует интерфейс <xref:System.ServiceModel.Dispatcher.IErrorHandler>, возвращающий только исключение <xref:System.ServiceModel.FaultException%601> типа `GreetingFault`, когда метод службы создает управляемое исключение.</span><span class="sxs-lookup"><span data-stu-id="d90fc-139">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="d90fc-140">В следующем примере кода показано использование поведения службы для добавления реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler> к свойству<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-140">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="d90fc-141">В следующем примере кода показано, как настроить службу для загрузки поведения службы с помощью файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="d90fc-141">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="d90fc-142">Дополнительные сведения о том, как предоставить поведение службы в файле конфигурации, см. в разделе <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-142">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideFault">
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception error, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception error, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProvideFault (error As Exception, version As MessageVersion, ByRef fault As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ error, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception exception, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception exception, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ exception, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ProvideFault : Exception * System.ServiceModel.Channels.MessageVersion *  -&gt; unit" Usage="iErrorHandler.ProvideFault (exception, version, fault)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ProvideFault : Exception * System.ServiceModel.Channels.MessageVersion *  -&gt; unit" Usage="iErrorHandler.ProvideFault (exception, version, fault)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" Index="1" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.Message" RefType="ref" Index="2" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="d90fc-143">Исключение <see cref="T:System.Exception" /> вызывается во время работы службы.</span><span class="sxs-lookup"><span data-stu-id="d90fc-143">The <see cref="T:System.Exception" /> object thrown in the course of the service operation.</span></span></param>
        <param name="exception"><span data-ttu-id="d90fc-144">Исключение <see cref="T:System.Exception" /> вызывается во время работы службы.</span><span class="sxs-lookup"><span data-stu-id="d90fc-144">The <see cref="T:System.Exception" /> object thrown in the course of the service operation.</span></span></param>
        <param name="version"><span data-ttu-id="d90fc-145">SOAP-версия сообщения.</span><span class="sxs-lookup"><span data-stu-id="d90fc-145">The SOAP version of the message.</span></span></param>
        <param name="fault"><span data-ttu-id="d90fc-146">Объект <see cref="T:System.ServiceModel.Channels.Message" />, который возвращается клиенту или службе (при наличии дуплексного взаимодействия).</span><span class="sxs-lookup"><span data-stu-id="d90fc-146">The <see cref="T:System.ServiceModel.Channels.Message" /> object that is returned to the client, or service, in the duplex case.</span></span></param>
        <summary><span data-ttu-id="d90fc-147">Позволяет создать пользовательское исключение <see cref="T:System.ServiceModel.FaultException`1" />, которое возвращается из исключения в ходе работы метода службы.</span><span class="sxs-lookup"><span data-stu-id="d90fc-147">Enables the creation of a custom <see cref="T:System.ServiceModel.FaultException`1" /> that is returned from an exception in the course of a service method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d90fc-148">Реализуйте метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> для создания пользовательского сообщения об ошибке, которое возвращается клиенту.</span><span class="sxs-lookup"><span data-stu-id="d90fc-148">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method to create a custom fault message that is returned to the client.</span></span>  <span data-ttu-id="d90fc-149"><xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> Метод всегда будет вызываться для исключений, которые оставляют операции, за исключением случаев, когда среда выполнения WCF распознает исключение как особенно неустранимое и выбрасывает само исключение.</span><span class="sxs-lookup"><span data-stu-id="d90fc-149">The <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method will always be called for exceptions that leave operations, except when the WCF runtime recognizes the exception as especially fatal and rethrows the exception itself.</span></span> <span data-ttu-id="d90fc-150">Если все реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> уже были вызваны, сообщение об ошибке отправляется клиенту обратно (если параметр `fault` имеет значение, отличное от `null`).</span><span class="sxs-lookup"><span data-stu-id="d90fc-150">When all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations have been called, the fault message is sent back to the client (if `fault` is non-`null`).</span></span> <span data-ttu-id="d90fc-151">Если параметр является `null` ошибкой по умолчанию, клиент отправляется клиенту. `fault`</span><span class="sxs-lookup"><span data-stu-id="d90fc-151">If the `fault` parameter is `null` the default fault is sent to the client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d90fc-152">Входящее сообщение, инициировавшее ошибку обработки, доступно в данном методе из свойства <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-152">The inbound message that caused the processing error is available during this method from the <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d90fc-153">Поскольку метод<xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> можно вызвать из множества разных мест, гарантии относительно того, что метод будет вызван на каком-то конкретном потоке, отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="d90fc-153">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="d90fc-154">Не полагайтесь на метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>, вызываемый на потоке операции.</span><span class="sxs-lookup"><span data-stu-id="d90fc-154">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method being called on the operation thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d90fc-155">В следующем примере кода демонстрируется служба, которая реализует интерфейс <xref:System.ServiceModel.Dispatcher.IErrorHandler>, возвращающий только исключение <xref:System.ServiceModel.FaultException%601> типа `GreetingFault`, когда метод службы создает управляемое исключение.</span><span class="sxs-lookup"><span data-stu-id="d90fc-155">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="d90fc-156">В следующем примере кода показано использование поведения службы для добавления реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler> к свойству<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-156">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="d90fc-157">В следующем примере кода показано, как настроить службу для загрузки поведения службы с помощью файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="d90fc-157">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="d90fc-158">Дополнительные сведения о том, как предоставить поведение службы в файле конфигурации, см. в разделе <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="d90fc-158">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
