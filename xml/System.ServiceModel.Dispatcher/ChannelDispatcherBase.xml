<Type Name="ChannelDispatcherBase" FullName="System.ServiceModel.Dispatcher.ChannelDispatcherBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7bc691c419e61fc2cd14606d6fe99b262000dcc8" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64033574" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelDispatcherBase extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelDispatcherBase&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcherBase abstract : System::ServiceModel::Channels::CommunicationObject" />
  <TypeSignature Language="F#" Value="type ChannelDispatcherBase = class&#xA;    inherit CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Абстрактный базовый класс для канального диспетчера, который принимает каналы и привязывает их к службам.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используется разработчиками, которые нужно сохранить модель программирования Windows Communication Foundation (WCF), но замените предоставляемых системой среды выполнения. Такие приложения будут рассылать сообщения по каналам и управлять ими с помощью диспетчеров, управляемых пользователями. Чтобы использовать объект <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>, создайте класс, производный от него, расширьте объект <xref:System.ServiceModel.ServiceHost> и переопределите объект <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, добавляя экземпляры класса, производного от объекта <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>, в коллекцию <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 Объекты <xref:System.ServiceModel.Channels.IChannelListener> и <xref:System.ServiceModel.ServiceHost>, связанные с объектом <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>, доступны для проверки или изменения при использовании объекта <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> и объекта <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>, соответственно.  
  
 Объект <xref:System.ServiceModel.ServiceHost> вызывает методы <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> или <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> при добавлении или удалении объекта <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> из коллекции <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 <xref:System.ServiceModel.ServiceHost> вызывает метод <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> во время закрытия перед закрытием InstanceContexts. Windows Communication Foundation (WCF) использует этот вызов для закрытия каналов датаграмм и ожидания все сообщения перейдут в InstanceContext.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelDispatcherBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelDispatcherBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected virtual void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Attach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Attach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Attach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">Объект <see cref="T:System.ServiceModel.ServiceHostBase" /> для службы.</param>
        <summary>При переопределении в производном классе прикрепляет диспетчер каналов к указанному узлу размещения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задание данного метода возможно, только когда экземпляр класса <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> находится в состоянии <xref:System.ServiceModel.CommunicationState.Created>, так как это единственное состояние, которое одновременно является изменяемым и не удаляется.  
  
 Объект <xref:System.ServiceModel.ServiceHost> вызывает этот метод, когда объект <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> добавляется в его коллекцию <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  Благодаря этому объект <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> может обработать события и проверить объект <xref:System.ServiceModel.ServiceHost>, и предоставляет значение, которое должно быть получено из свойства <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="host" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />, или узел размещения уже задан.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public virtual void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseInput();" />
      <MemberSignature Language="F#" Value="abstract member CloseInput : unit -&gt; unit&#xA;override this.CloseInput : unit -&gt; unit" Usage="channelDispatcherBase.CloseInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении в производном классе удаляет диспетчеры конечной точки, связанные с диспетчером канала.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceHost> вызывает метод во время закрытия, чтобы диспетчер мог завершить сообщения. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> использует этот вызов для закрытия каналов датаграмм.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected virtual void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Detach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Detach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Detach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host"><see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
        <summary>При переопределении в производном классе открепляет диспетчер каналов от указанного узла размещения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.ServiceModel.ServiceHostBase> может быть откреплен, только когда экземпляр объекта <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> находится в состоянии <xref:System.ServiceModel.CommunicationState.Created>, так как это единственное состояние, которое одновременно является изменяемым и не удаляется.  
  
 Должен присваивать объекту <xref:System.ServiceModel.ServiceHostBase>, связанному с диспетчером каналов, значение `null`.  
  
 Объект <xref:System.ServiceModel.ServiceHost> вызывает этот метод, когда объект <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> удаляется из его коллекции <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>. Объекту <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> предоставляется возможность не обрабатывать события и проверить объект <xref:System.ServiceModel.ServiceHost>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="host" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Opening" /> или <see cref="F:System.ServiceModel.CommunicationState.Opened" />, или узел размещения уже задан.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Closing" /> или <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Объект связи находится в состоянии <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.ServiceModel.ServiceHostBase" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении в производном классе получает размещение узла, связанного с диспетчером канала.</summary>
        <value>Объект <see cref="T:System.ServiceModel.ServiceHostBase" /> для службы, связанной с диспетчером.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый объект <xref:System.ServiceModel.ServiceHost> может иметь множество объектов <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, каждый из которых связан с различными объектами <xref:System.ServiceModel.Channels.IChannelListener> для данной службы. Узел размещения хранит список этих объектов <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> в коллекции <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listener : System.ServiceModel.Channels.IChannelListener" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении в производном классе получает прослушивателя канала, связанного с диспетчером канала.</summary>
        <value>Объект <see cref="T:System.ServiceModel.Channels.IChannelListener" />, связанный с данным диспетчером каналов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> связывает объект <xref:System.ServiceModel.Channels.IChannelListener>, чьи каналы и сообщения этот объект <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> передает.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>