<Type Name="JsonQueryStringConverter" FullName="System.ServiceModel.Dispatcher.JsonQueryStringConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4532a62a568bea70497c6396d9fd387ca90d4b62" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69235799" /></Metadata><TypeSignature Language="C#" Value="public class JsonQueryStringConverter : System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonQueryStringConverter extends System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonQueryStringConverter&#xA;Inherits QueryStringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonQueryStringConverter : System::ServiceModel::Dispatcher::QueryStringConverter" />
  <TypeSignature Language="F#" Value="type JsonQueryStringConverter = class&#xA;    inherit QueryStringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.QueryStringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Этот класс преобразует значение параметра в нотацию объекта JavaScript (JSON) и обратно.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметры могут задаваться в строке запроса JSON внутри URL-адреса. Этот класс управляет сопоставлением параметров строк запроса JSON с параметрами операций служб, когда для обработки HTTP-запросов из клиентов ASP.NET AJAX на базе браузера используется <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>.  
  
 Этот класс используется внутренне классом Windows Communication Foundation (WCF)<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> для конечных точек, настроенных для приема запросов HTTP Get/POST с параметрами, закодированными в строке запроса URI. Этот класс используется для преобразования между объектами среды CLR и значениями параметров отдельных операций запроса в строке запроса URI. В отличие от своего базового типа этот класс поддерживает значения и примитивного, и сложного типов.  
  
 Класс <xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> выводится из класса <xref:System.ServiceModel.Dispatcher.QueryStringConverter> и поддерживает следующие типы  
  
-   <xref:System.Byte>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
-   <xref:System.Single>  
  
-   <xref:System.Double>  
  
-   <xref:System.Char>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.String>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Array> типа <xref:System.Byte>.  
  
-   <xref:System.Uri>  
  
-   <xref:System.Object>  
  
 В отличии от своего базового типа этот преобразователь может обрабатывать любой тип, относящийся к модели контракта данных. Преобразователь переопределяет метод <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> так, что каждый параметр сериализуется в JSON при помощи средства по умолчанию <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> и средства JSON XML Writer, настроенного на использование кодировки UTF-8. `null`параметры возвращаются в виде `null`.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonQueryStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonQueryStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public override bool CanConvert (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvert(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvert(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanConvert : Type -&gt; bool" Usage="jsonQueryStringConverter.CanConvert type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" /> для проверки.</param>
        <summary>Получает значение, обозначающее, является ли указанный тип среды CLR известным типом, который можно сериализовать и десериализовать.</summary>
        <returns><see langword="true" />, если тип можно сериализовать; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Проверяется, может ли тип среды CLR использоваться в строке запроса JSON. Типы среды CLR, которые можно использовать в таких строках, поддерживаются <xref:System.Runtime.Serialization.DataContractSerializer>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="type" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="public override object ConvertStringToValue (string parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertStringToValue(string parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertStringToValue (parameter As String, parameterType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertStringToValue(System::String ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="override this.ConvertStringToValue : string * Type -&gt; obj" Usage="jsonQueryStringConverter.ConvertStringToValue (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter">Форма JSON значения параметра.</param>
        <param name="parameterType"><see cref="T:System.Type" />, в который десериализуется параметр.</param>
        <summary>Десериализует параметр строки запроса JSON в указанный тип среды CLR.</summary>
        <returns>Экземпляр типа среды CLR, в который преобразуется значение параметра.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="public override string ConvertValueToString (object parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ConvertValueToString(object parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertValueToString (parameter As Object, parameterType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ConvertValueToString(System::Object ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="override this.ConvertValueToString : obj * Type -&gt; string" Usage="jsonQueryStringConverter.ConvertValueToString (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter">Преобразуемое значение параметра.</param>
        <param name="parameterType"><see cref="T:System.Type" />, в который сериализуется параметр.</param>
        <summary>Сериализует тип параметра среды CLR в представление JSON.</summary>
        <returns>Сериализация типа среды CLR в параметр строки запроса JSON. Значение <see langword="null" /> возвращается, если параметр имеет значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразователь переопределяет метод <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> так, что каждый параметр сериализуется в JSON при помощи средства по умолчанию <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> и средства JSON XML Writer, настроенного на использование кодировки UTF-8. В отличии от своего базового типа этот преобразователь может обрабатывать любой тип, относящийся к модели контракта данных.  
  
   
  
## Examples  
 Рассмотрим следующую операцию.  
  
```  
[WebGet]  
[OperationContract] public int GetOptionQuote(string ticker, DateTime dte, Option opt);  
```  
  
 Эта операции создает URL-адрес, который является URL-закодированной версией следующего.  
  
```  
http://localhost/quote.svc/GetOptionQuote?ticker="MSFT"&dte="\/Date(50067823)\/"&opt={"type":"call","strikePrice":"35"}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
