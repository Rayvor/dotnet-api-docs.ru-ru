<Type Name="MessageQueryCollection" FullName="System.ServiceModel.Dispatcher.MessageQueryCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2d743b2cd08e3e8e6fee7c1722b06c7608b7b05" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70702199" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageQueryCollection : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageQuery&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageQueryCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Dispatcher.MessageQuery&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageQueryCollection&#xA;Inherits Collection(Of MessageQuery)" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueryCollection abstract : System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::MessageQuery ^&gt;" />
  <TypeSignature Language="F#" Value="type MessageQueryCollection = class&#xA;    inherit Collection&lt;MessageQuery&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageQuery&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.ServiceModel.Dispatcher.MessageQuery</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="200ea-101">Коллекция объектов запроса сообщений.</span><span class="sxs-lookup"><span data-stu-id="200ea-101">A collection of message query objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="200ea-102">Конкретную реализацию см. в классе <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>.</span><span class="sxs-lookup"><span data-stu-id="200ea-102">See the <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> class for a concrete implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="200ea-103">В следующем примере создается сообщение и запросы сообщений XPath.</span><span class="sxs-lookup"><span data-stu-id="200ea-103">The following example creates a message and XPath message queries.</span></span> <span data-ttu-id="200ea-104">Запросы вычисляются объектами <xref:System.ServiceModel.XPathMessageQuery>, содержащимися в объекте <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>.</span><span class="sxs-lookup"><span data-stu-id="200ea-104">The queries are evaluated by the <xref:System.ServiceModel.XPathMessageQuery> objects contained in an <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> object.</span></span> <span data-ttu-id="200ea-105">Результаты каждого запроса проверяются с помощью свойства <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> класса <xref:System.ServiceModel.Dispatcher.XPathResult>.</span><span class="sxs-lookup"><span data-stu-id="200ea-105">The results of each query are tested using the <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> property of the <xref:System.ServiceModel.Dispatcher.XPathResult> class.</span></span>  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageQueryCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageQueryCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="200ea-106">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />.</span><span class="sxs-lookup"><span data-stu-id="200ea-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Evaluate&lt;TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="200ea-107">Выполняет запрос к сообщению и возвращает значение, удовлетворяющее запросу.</span><span class="sxs-lookup"><span data-stu-id="200ea-107">Runs a query against the message and returns a value that satisfies the query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="200ea-108">Разница между двумя перегрузками состоит в том, что одна перегрузка берет параметр <xref:System.ServiceModel.Channels.Message> и не может проверять текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="200ea-108">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the body.</span></span> <span data-ttu-id="200ea-109">Вторая же перегрузка берет параметр <xref:System.ServiceModel.Channels.MessageBuffer> и имеет право проверять любую часть сообщения.</span><span class="sxs-lookup"><span data-stu-id="200ea-109">The other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="200ea-110">Заголовки сообщений автоматически помещаются в буфер и могут запрашиваться без их получения.</span><span class="sxs-lookup"><span data-stu-id="200ea-110">Message headers are automatically buffered and can be queried without being consumed.</span></span> <span data-ttu-id="200ea-111">Однако если необходимо направить запрос к тексту сообщения, то все сообщение должно помещаться в буфер, поскольку небуферизованный текст сообщения может быть поглощен запросом.</span><span class="sxs-lookup"><span data-stu-id="200ea-111">However, if the body is to be queried, then the entire message must be buffered because an unbuffered message body can be consumed by the query.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt; Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !!TResult&gt;&gt; Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TResult&gt;&gt; ^ Evaluate(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.Message -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery, 'Result&gt;&gt;" Usage="messageQueryCollection.Evaluate message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="200ea-112">Тип результата запроса.</span><span class="sxs-lookup"><span data-stu-id="200ea-112">The type of the result of the query.</span></span></typeparam>
        <param name="message"><span data-ttu-id="200ea-113">Сообщение, к которому должен выполняться запрос.</span><span class="sxs-lookup"><span data-stu-id="200ea-113">The message to run the query against.</span></span></param>
        <summary><span data-ttu-id="200ea-114">Выполняет запрос к сообщению и возвращает результат.</span><span class="sxs-lookup"><span data-stu-id="200ea-114">Runs a query against the message and returns a result.</span></span> <span data-ttu-id="200ea-115">Невозможно запросить текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="200ea-115">The body cannot be queried.</span></span></summary>
        <returns><span data-ttu-id="200ea-116">Результат запроса.</span><span class="sxs-lookup"><span data-stu-id="200ea-116">The result of the query.</span></span> <span data-ttu-id="200ea-117">Тип определяется универсальным аргументом <paramref name="TResult" />.</span><span class="sxs-lookup"><span data-stu-id="200ea-117">The type is determined by the generic <paramref name="TResult" /> argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt; Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !!TResult&gt;&gt; Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Evaluate(Of TResult) (buffer As MessageBuffer) As IEnumerable(Of KeyValuePair(Of MessageQuery, TResult))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TResult&gt;&gt; ^ Evaluate(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.MessageBuffer -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery, 'Result&gt;&gt;" Usage="messageQueryCollection.Evaluate buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="200ea-118">Тип возвращаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="200ea-118">The type of the object to return.</span></span></typeparam>
        <param name="buffer"><span data-ttu-id="200ea-119">Сообщение, к которому должен выполняться запрос.</span><span class="sxs-lookup"><span data-stu-id="200ea-119">The message to run the query against.</span></span></param>
        <summary><span data-ttu-id="200ea-120">Выполняет запрос к сообщению и возвращает результат.</span><span class="sxs-lookup"><span data-stu-id="200ea-120">Runs a query against the message and returns a result.</span></span></summary>
        <returns><span data-ttu-id="200ea-121">Результат запроса.</span><span class="sxs-lookup"><span data-stu-id="200ea-121">The result of the query.</span></span> <span data-ttu-id="200ea-122">Тип определяется универсальным аргументом <paramref name="TResult" />.</span><span class="sxs-lookup"><span data-stu-id="200ea-122">The type is determined by the generic <paramref name="TResult" /> argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
