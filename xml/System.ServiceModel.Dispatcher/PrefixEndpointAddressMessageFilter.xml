<Type Name="PrefixEndpointAddressMessageFilter" FullName="System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77683ecaaace678002609ccb15237caac04edef8" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70547025" /></Metadata><TypeSignature Language="C#" Value="public class PrefixEndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrefixEndpointAddressMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class PrefixEndpointAddressMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrefixEndpointAddressMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <TypeSignature Language="F#" Value="type PrefixEndpointAddressMessageFilter = class&#xA;    inherit MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3d9ce-101">Представляет запрос, проверяющий, соответствует ли сообщение адресу конечной точки, при помощи метода *соответствия самого длинного префикса* для компонента URI.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-101">Represents a query that tests whether a message matches an EndpointAddress using a *Longest-Prefix Match* for the URI component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d9ce-102">Объект <xref:System.ServiceModel.EndpointAddress> включает URI и необязательную коллекцию заголовков адресации.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-102">An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers.</span></span> <span data-ttu-id="3d9ce-103">Адресация и заголовки сообщения канонизируются, чтобы обеспечить возможность проверки на равенство.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-103">The addressing and message headers are canonicalized to be compared for equality.</span></span> <span data-ttu-id="3d9ce-104">Если в объекте <xref:System.ServiceModel.EndpointAddress> параметр появляется более одного раза, соответствующий заголовок должен присутствовать в сообщении не меньшее количество раз.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-104">If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.</span></span>  
  
 <span data-ttu-id="3d9ce-105">Этот фильтр производит такой же запрос, что и экземпляр <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, за исключением того, что проверка, отвечает ли сообщение адресу конечной точки, производится методом *Соответствия самого длинного префикса*.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-105">This filter performs the same query as <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, except that the test for whether a message matches an endpoint address is done by a *Longest-Prefix Match*.</span></span> <span data-ttu-id="3d9ce-106">Это означает, что указанный в фильтре универсальный код ресурса (URI) не должен соответствовать целиком URI сообщения, но должен содержаться в этом URI в качестве префикса.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-106">This means that the URI specified in the filter does not have to match the message's URI exactly, but must be contained in that URI as a prefix.</span></span> <span data-ttu-id="3d9ce-107">Например, если фильтр указывает адрес «www.foo.com», а сообщение адресовано «www.foo.com/customerA», то часть URI будет отвечать условию запроса фильтра.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-107">For example, if a filter specifies the address "www.foo.com", and a message is addressed to "www.foo.com/customerA", then the URI part of the filter query condition will be met.</span></span> <span data-ttu-id="3d9ce-108">Однако, проверку хотя бы заголовка запроса фильтра необходимо делать.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-108">However, the header portion of the filter query still has to be done.</span></span>  
  
 <span data-ttu-id="3d9ce-109">Службы IIS и соответствующая файловая система (NTFS или FAT) не чувствительны к регистру.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-109">Internet Information Services (IIS) and the underlying file system (NTFS or FAT) are case-insensitive.</span></span> <span data-ttu-id="3d9ce-110">В сравнениях URI, выполняемых данным классом, регистр также не учитывается.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-110">URI comparisons done by this class are also case-insensitive.</span></span> <span data-ttu-id="3d9ce-111">Например, `http://www.microsoft.com` выражение вычисляется как `http://WWW.microsoft.com`равное.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-111">So, for example, `http://www.microsoft.com` is evaluated as equal to `http://WWW.microsoft.com`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3d9ce-112">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrefixEndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter : System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" Usage="new System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="3d9ce-113">Свидетельство <see cref="T:System.ServiceModel.EndpointAddress" />, по которому производится проверка сообщений.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <summary><span data-ttu-id="3d9ce-114">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-114">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3d9ce-115">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-115"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, includeHostNameInComparison As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrefixEndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address, bool includeHostNameInComparison);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter : System.ServiceModel.EndpointAddress * bool -&gt; System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" Usage="new System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter (address, includeHostNameInComparison)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="includeHostNameInComparison" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="3d9ce-116">Свидетельство <see cref="T:System.ServiceModel.EndpointAddress" />, по которому производится проверка сообщений.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-116">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <param name="includeHostNameInComparison"><span data-ttu-id="3d9ce-117">Значение<see langword="true" /> , если имя узла включается в сравнение адресов конечной точки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-117"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3d9ce-118">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="3d9ce-119">Если на локальном компьютере установлена веб-служба, существует множество эквивалентных способов указания на нее:</span><span class="sxs-lookup"><span data-stu-id="3d9ce-119">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  

- `http://localhost/foo.svc`
- `http://192.168.1.100/foo.svc`
- `http://[my-machine-name]/foo.svc`
- `http://[my-machine-name].[my-company].com/foo.svc`
  
 <span data-ttu-id="3d9ce-120">Если параметр `includeHostNameInComparison` имеет значение`false`, URI верхнего уровня относятся к той же конечной точке.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-120">If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3d9ce-121">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-121"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ Address { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d9ce-122">Получает адрес конечной точки, для которого класс <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> проверяет сообщения.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-122">Gets the Endpoint Address that the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> tests messages against.</span></span></summary>
        <value><span data-ttu-id="3d9ce-123">Конечная точка <see cref="T:System.ServiceModel.EndpointAddress" />, по которой сообщения проверяются фильтром <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-123">The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> tests messages against.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="prefixEndpointAddressMessageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="3d9ce-124">Данные, связанные с фильтрами в таблице.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-124">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="3d9ce-125">Создает новую таблицу фильтров, одновременно проверяющую сообщения по нескольким адресам конечной точки.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-125">Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</span></span></summary>
        <returns><span data-ttu-id="3d9ce-126">Объект, реализующий интерфейс <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />, который может содержать фильтры <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> со связанным параметром <paramref name="FilterData" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-126">An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d9ce-127">Метод возвращает экземпляр <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>, оптимизированный для проверки заданных конечных точек сообщения.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-127">The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.</span></span>  
  
 <span data-ttu-id="3d9ce-128">Этот метод предназначен для использования объектом <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-128">This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeHostNameInComparison">
      <MemberSignature Language="C#" Value="public bool IncludeHostNameInComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostNameInComparison" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeHostNameInComparison As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostNameInComparison { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostNameInComparison : bool" Usage="System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d9ce-129">Возвращает значение, которое указывает, включено ли имя узла в сравнение адресов конечной точки.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-129">Gets a value that indicates whether the host name is included in the endpoint address comparison.</span></span></summary>
        <value><span data-ttu-id="3d9ce-130">Значение<see langword="true" /> , если имя узла включается в сравнение адресов конечной точки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-130"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="3d9ce-131">Если на локальном компьютере установлена веб-служба, существует множество эквивалентных способов указания на нее:</span><span class="sxs-lookup"><span data-stu-id="3d9ce-131">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  

- `http://localhost/foo.svc`
- `http://192.168.1.100/foo.svc`
- `http://[my-machine-name]/foo.svc`
- `http://[my-machine-name].[my-company].com/foo.svc`
  
 <span data-ttu-id="3d9ce-132">Значением по умолчанию для данного свойства является `false`, таким образом все URI верхнего уровня относятся к той же конечной точке, если только это свойство не будет изменено.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-132">The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3d9ce-133">Проверяет, удовлетворяет ли сообщение или буферизованное сообщение критериям фильтра конечной точки.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-133">Tests whether a message or buffered message satisfies the criteria of the endpoint filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d9ce-134">Две перегрузки этого метода равнозначны, так как этот фильтр не проверяет тело сообщения, а только адрес для поиска соответствия самого длинного префикса, а затем заголовки.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-134">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="prefixEndpointAddressMessageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="3d9ce-135">Объект <see cref="T:System.ServiceModel.Channels.Message" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-135">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span></span></param>
        <summary><span data-ttu-id="3d9ce-136">Проверяет, соответствует ли сообщение указанному адресу конечной точки.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-136">Tests whether a message satisfies the specified endpoint address.</span></span></summary>
        <returns><span data-ttu-id="3d9ce-137">Значение<see langword="true" /> , если объект <see cref="T:System.ServiceModel.Channels.Message" /> соответствует адресу конечной точки, указанному в фильтре; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-137"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d9ce-138">Две перегрузки этого метода равнозначны, так как этот фильтр не проверяет тело сообщения, а только адрес для поиска соответствия самого длинного префикса, а затем заголовки.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-138">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3d9ce-139">Свойство <paramref name="message" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-139"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="prefixEndpointAddressMessageFilter.Match messageBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="3d9ce-140">Объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-140">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span></span></param>
        <summary><span data-ttu-id="3d9ce-141">Проверяет, удовлетворяет ли буферизованное сообщение указанному адресу конечной точки.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-141">Tests whether a buffered message satisfies the specified endpoint address.</span></span></summary>
        <returns><span data-ttu-id="3d9ce-142">Значение <see langword="true" />, если объект <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> соответствует адресу конечной точки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-142"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d9ce-143">Две перегрузки этого метода равнозначны, так как этот фильтр не проверяет тело сообщения, а только адрес для поиска соответствия самого длинного префикса, а затем заголовки.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-143">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3d9ce-144">Свойство <paramref name="messageBuffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3d9ce-144"><paramref name="messageBuffer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
