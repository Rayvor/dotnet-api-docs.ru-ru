<Type Name="LicenseManager" FullName="System.ComponentModel.LicenseManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cfe661ddaf5471c9193b23537ada27f4428696dc" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73374445" /></Metadata><TypeSignature Language="C#" Value="public sealed class LicenseManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LicenseManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LicenseManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicenseManager sealed" />
  <TypeSignature Language="F#" Value="type LicenseManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e4895-101">Предоставляет свойства и методы для добавления лицензии в компонент и для управления поставщиком <see cref="T:System.ComponentModel.LicenseProvider" />.</span><span class="sxs-lookup"><span data-stu-id="e4895-101">Provides properties and methods to add a license to a component and to manage a <see cref="T:System.ComponentModel.LicenseProvider" />.</span></span> <span data-ttu-id="e4895-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="e4895-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4895-103">Класс <xref:System.ComponentModel.LicenseManager> предоставляет следующие свойства `static`: <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> и <xref:System.ComponentModel.LicenseManager.UsageMode%2A>.</span><span class="sxs-lookup"><span data-stu-id="e4895-103">The <xref:System.ComponentModel.LicenseManager> class provides the following `static` properties: <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> and <xref:System.ComponentModel.LicenseManager.UsageMode%2A>.</span></span> <span data-ttu-id="e4895-104">Класс также предоставляет следующие методы `static`: <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A>, <xref:System.ComponentModel.LicenseManager.IsValid%2A>и <xref:System.ComponentModel.LicenseManager.Validate%2A>.</span><span class="sxs-lookup"><span data-stu-id="e4895-104">The class also provides the following `static` methods: <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A>, <xref:System.ComponentModel.LicenseManager.IsValid%2A>, and <xref:System.ComponentModel.LicenseManager.Validate%2A>.</span></span>  
  
 <span data-ttu-id="e4895-105">При создании компонента, для которого необходимо создать лицензию, необходимо выполнить следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e4895-105">When you create a component that you want to license, you must do the following:</span></span>  
  
1.  <span data-ttu-id="e4895-106">Укажите <xref:System.ComponentModel.LicenseProvider>, пометив компонент <xref:System.ComponentModel.LicenseProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e4895-106">Specify the <xref:System.ComponentModel.LicenseProvider> by marking the component with a <xref:System.ComponentModel.LicenseProviderAttribute>.</span></span>  
  
2.  <span data-ttu-id="e4895-107">Вызовите <xref:System.ComponentModel.LicenseManager.Validate%2A> или <xref:System.ComponentModel.LicenseManager.IsValid%2A> в конструкторе компонента.</span><span class="sxs-lookup"><span data-stu-id="e4895-107">Call <xref:System.ComponentModel.LicenseManager.Validate%2A> or <xref:System.ComponentModel.LicenseManager.IsValid%2A> in the constructor of the component.</span></span> <span data-ttu-id="e4895-108"><xref:System.ComponentModel.LicenseManager.Validate%2A> создает исключение <xref:System.ComponentModel.LicenseException> при попытке создать экземпляр без действительной лицензии.</span><span class="sxs-lookup"><span data-stu-id="e4895-108"><xref:System.ComponentModel.LicenseManager.Validate%2A> throws a <xref:System.ComponentModel.LicenseException> when it tries to create an instance without a valid license.</span></span> <span data-ttu-id="e4895-109"><xref:System.ComponentModel.LicenseManager.IsValid%2A> не создает исключение.</span><span class="sxs-lookup"><span data-stu-id="e4895-109"><xref:System.ComponentModel.LicenseManager.IsValid%2A> does not throw an exception.</span></span>  
  
3.  <span data-ttu-id="e4895-110">Вызовите <xref:System.ComponentModel.License.Dispose%2A> для любой лицензии, которая предоставляется при удалении или завершении компонента.</span><span class="sxs-lookup"><span data-stu-id="e4895-110">Call <xref:System.ComponentModel.License.Dispose%2A> on any license that is granted when the component is disposed or finalized.</span></span>  
  
 <span data-ttu-id="e4895-111">Дополнительные сведения о лицензировании см. в разделе [руководство. Лицензирование компонентов и элементов управления](https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span><span class="sxs-lookup"><span data-stu-id="e4895-111">For more information on licensing, see [How to: License Components and Controls](https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4895-112">В следующем примере кода создается лицензированный элемент управления с помощью метода <xref:System.ComponentModel.LicenseManager.Validate%2A>.</span><span class="sxs-lookup"><span data-stu-id="e4895-112">The following code example creates a licensed control using the <xref:System.ComponentModel.LicenseManager.Validate%2A> method.</span></span> <span data-ttu-id="e4895-113">Он использует <xref:System.ComponentModel.LicenseProvider>, реализованный классом <xref:System.ComponentModel.LicFileLicenseProvider>.</span><span class="sxs-lookup"><span data-stu-id="e4895-113">It uses a <xref:System.ComponentModel.LicenseProvider> that is implemented by the <xref:System.ComponentModel.LicFileLicenseProvider> class.</span></span>  
  
 [!code-cpp[Classic LicenseManager Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LicenseManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LicenseManager Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LicenseManager Example/CS/source.cs#1)]
 [!code-vb[Classic LicenseManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LicenseManager Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseContext" />
    <altmember cref="T:System.ComponentModel.LicenseException" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateWithContext">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e4895-114">Создает экземпляр типа объекта с контекстом лицензии.</span><span class="sxs-lookup"><span data-stu-id="e4895-114">Creates an instance of an object type with a license context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateWithContext">
      <MemberSignature Language="C#" Value="public static object CreateWithContext (Type type, System.ComponentModel.LicenseContext creationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateWithContext(class System.Type type, class System.ComponentModel.LicenseContext creationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateWithContext(Type ^ type, System::ComponentModel::LicenseContext ^ creationContext);" />
      <MemberSignature Language="F#" Value="static member CreateWithContext : Type * System.ComponentModel.LicenseContext -&gt; obj" Usage="System.ComponentModel.LicenseManager.CreateWithContext (type, creationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="creationContext" Type="System.ComponentModel.LicenseContext" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e4895-115">Объект <see cref="T:System.Type" />, представляющий создаваемый тип.</span><span class="sxs-lookup"><span data-stu-id="e4895-115">A <see cref="T:System.Type" /> that represents the type to create.</span></span></param>
        <param name="creationContext"><span data-ttu-id="e4895-116">Объект <see cref="T:System.ComponentModel.LicenseContext" />, определяющий, когда можно использовать лицензированный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="e4895-116">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies when you can use the licensed instance.</span></span></param>
        <summary><span data-ttu-id="e4895-117">Создает экземпляр указанного типа, задавая контекст, в котором можно использовать лицензированный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="e4895-117">Creates an instance of the specified type, given a context in which you can use the licensed instance.</span></span></summary>
        <returns><span data-ttu-id="e4895-118">Экземпляр указанного типа.</span><span class="sxs-lookup"><span data-stu-id="e4895-118">An instance of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4895-119"><xref:System.ComponentModel.LicenseContext>, указываемый в качестве параметра `creationContext`, используется в качестве <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> для жизненного цикла этого <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="e4895-119">The <xref:System.ComponentModel.LicenseContext> you specify as the `creationContext` parameter is used as the <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> for the life of this <xref:System.ComponentModel.License>.</span></span> <span data-ttu-id="e4895-120">Метод <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A> блокирует все остальные потоки в <xref:System.AppDomain> от изменения <xref:System.ComponentModel.LicenseManager.CurrentContext%2A>, позволяя <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A> работать как атомарная операция.</span><span class="sxs-lookup"><span data-stu-id="e4895-120">The <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A> method blocks all other threads in the <xref:System.AppDomain> from modifying the <xref:System.ComponentModel.LicenseManager.CurrentContext%2A>, allowing <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A> to behave as an atomic operation.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="e4895-121">для доступа к закрытым членам класса и метаданным.</span><span class="sxs-lookup"><span data-stu-id="e4895-121">for access to private class members and metadata.</span></span> <span data-ttu-id="e4895-122">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="e4895-122">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="CreateWithContext">
      <MemberSignature Language="C#" Value="public static object CreateWithContext (Type type, System.ComponentModel.LicenseContext creationContext, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateWithContext(class System.Type type, class System.ComponentModel.LicenseContext creationContext, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateWithContext(Type ^ type, System::ComponentModel::LicenseContext ^ creationContext, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateWithContext : Type * System.ComponentModel.LicenseContext * obj[] -&gt; obj" Usage="System.ComponentModel.LicenseManager.CreateWithContext (type, creationContext, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="creationContext" Type="System.ComponentModel.LicenseContext" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e4895-123">Объект <see cref="T:System.Type" />, представляющий создаваемый тип.</span><span class="sxs-lookup"><span data-stu-id="e4895-123">A <see cref="T:System.Type" /> that represents the type to create.</span></span></param>
        <param name="creationContext"><span data-ttu-id="e4895-124">Объект <see cref="T:System.ComponentModel.LicenseContext" />, определяющий, когда можно использовать лицензированный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="e4895-124">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies when you can use the licensed instance.</span></span></param>
        <param name="args"><span data-ttu-id="e4895-125">Массив типа <see cref="T:System.Object" />, представляющий аргументы для типа.</span><span class="sxs-lookup"><span data-stu-id="e4895-125">An array of type <see cref="T:System.Object" /> that represents the arguments for the type.</span></span></param>
        <summary><span data-ttu-id="e4895-126">Создает экземпляр указанного типа с заданными аргументами, задавая контекст, в котором можно использовать лицензированный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="e4895-126">Creates an instance of the specified type with the specified arguments, given a context in which you can use the licensed instance.</span></span></summary>
        <returns><span data-ttu-id="e4895-127">Экземпляр указанного типа с заданным массивом аргументов.</span><span class="sxs-lookup"><span data-stu-id="e4895-127">An instance of the specified type with the given array of arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4895-128"><xref:System.ComponentModel.LicenseContext>, указываемый в качестве параметра `creationContext`, используется в качестве <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> для жизненного цикла этого <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="e4895-128">The <xref:System.ComponentModel.LicenseContext> you specify as the `creationContext` parameter is used as the <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> for the life of this <xref:System.ComponentModel.License>.</span></span> <span data-ttu-id="e4895-129">Этот метод блокирует все остальные потоки в <xref:System.AppDomain> изменяя <xref:System.ComponentModel.LicenseManager.CurrentContext%2A>, позволяя <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A> работать как атомарная операция.</span><span class="sxs-lookup"><span data-stu-id="e4895-129">This method blocks all other threads in the <xref:System.AppDomain> from modifying the <xref:System.ComponentModel.LicenseManager.CurrentContext%2A>, allowing <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A> to behave as an atomic operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="CurrentContext">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.LicenseContext CurrentContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.LicenseContext CurrentContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseManager.CurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentContext As LicenseContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::LicenseContext ^ CurrentContext { System::ComponentModel::LicenseContext ^ get(); void set(System::ComponentModel::LicenseContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentContext : System.ComponentModel.LicenseContext with get, set" Usage="System.ComponentModel.LicenseManager.CurrentContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.LicenseContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4895-130">Возвращает или задает текущий контекст <see cref="T:System.ComponentModel.LicenseContext" />, определяющий, когда можно использовать лицензированный объект.</span><span class="sxs-lookup"><span data-stu-id="e4895-130">Gets or sets the current <see cref="T:System.ComponentModel.LicenseContext" />, which specifies when you can use the licensed object.</span></span></summary>
        <value><span data-ttu-id="e4895-131">Объект <see cref="T:System.ComponentModel.LicenseContext" />, который указывает, когда можно использовать лицензированный объект.</span><span class="sxs-lookup"><span data-stu-id="e4895-131">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies when you can use the licensed object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4895-132">Когда пользователь запрашивает допустимое <xref:System.ComponentModel.License>, пользователь должен предоставить контекст, в котором <xref:System.ComponentModel.License> является допустимым для метода <xref:System.ComponentModel.LicenseProvider.GetLicense%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e4895-132">When the user requests a valid <xref:System.ComponentModel.License>, the user must give the context in which the <xref:System.ComponentModel.License> is valid to the <xref:System.ComponentModel.LicenseProvider.GetLicense%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e4895-133"><xref:System.ComponentModel.LicenseContext>, возвращаемые этим свойством, должны передаваться во все классы <xref:System.ComponentModel.LicenseProvider>.</span><span class="sxs-lookup"><span data-stu-id="e4895-133">The <xref:System.ComponentModel.LicenseContext> returned by this property should be passed to all <xref:System.ComponentModel.LicenseProvider> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e4895-134">Свойство <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" /> в данный момент блокировано и не может быть изменено.</span><span class="sxs-lookup"><span data-stu-id="e4895-134">The <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" /> property is currently locked and cannot be changed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="IsLicensed">
      <MemberSignature Language="C#" Value="public static bool IsLicensed (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLicensed(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.IsLicensed(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLicensed(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member IsLicensed : Type -&gt; bool" Usage="System.ComponentModel.LicenseManager.IsLicensed type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e4895-135">Объект <see cref="T:System.Type" /> для поиска действительной лицензии.</span><span class="sxs-lookup"><span data-stu-id="e4895-135">The <see cref="T:System.Type" /> to find a valid license for.</span></span></param>
        <summary><span data-ttu-id="e4895-136">Возвращает значение, показывающее, обладает ли данный тип действительной лицензией.</span><span class="sxs-lookup"><span data-stu-id="e4895-136">Returns whether the given type has a valid license.</span></span></summary>
        <returns><span data-ttu-id="e4895-137">Значение <see langword="true" />, если данный тип является лицензированным; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e4895-137"><see langword="true" /> if the given type is licensed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e4895-138">Определяет, может ли быть предоставлена действительная лицензия.</span><span class="sxs-lookup"><span data-stu-id="e4895-138">Determines whether a valid license can be granted.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.IsValid(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValid(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member IsValid : Type -&gt; bool" Usage="System.ComponentModel.LicenseManager.IsValid type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e4895-139">Объект <see cref="T:System.Type" />, который представляет тип объекта, запрашивающего <see cref="T:System.ComponentModel.License" />.</span><span class="sxs-lookup"><span data-stu-id="e4895-139">A <see cref="T:System.Type" /> that represents the type of object that requests the <see cref="T:System.ComponentModel.License" />.</span></span></param>
        <summary><span data-ttu-id="e4895-140">Определяет, может ли быть предоставлена действительная лицензия для указанного типа.</span><span class="sxs-lookup"><span data-stu-id="e4895-140">Determines whether a valid license can be granted for the specified type.</span></span></summary>
        <returns><span data-ttu-id="e4895-141">Значение <see langword="true" />, если действительная лицензия может быть предоставлена; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e4895-141"><see langword="true" /> if a valid license can be granted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4895-142">Метод <xref:System.ComponentModel.LicenseManager.IsValid%2A> возвращает `true`, если тип либо не является лицензированным, либо является лицензированным и лицензия действительна.</span><span class="sxs-lookup"><span data-stu-id="e4895-142">The <xref:System.ComponentModel.LicenseManager.IsValid%2A> method returns `true` when the type is either not licensed, or is licensed and the license is valid.</span></span>  
  
 <span data-ttu-id="e4895-143">Этот метод не создает <xref:System.ComponentModel.LicenseException>, когда не может предоставить допустимый <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="e4895-143">This method does not throw a <xref:System.ComponentModel.LicenseException> when it cannot grant a valid <xref:System.ComponentModel.License>.</span></span> <span data-ttu-id="e4895-144">Метод <xref:System.ComponentModel.LicenseManager.Validate%2A> создает исключения.</span><span class="sxs-lookup"><span data-stu-id="e4895-144">The <xref:System.ComponentModel.LicenseManager.Validate%2A> method throws exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (Type type, object instance, out System.ComponentModel.License license);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(class System.Type type, object instance, [out] class System.ComponentModel.License&amp; license) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.IsValid(System.Type,System.Object,System.ComponentModel.License@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValid(Type ^ type, System::Object ^ instance, [Runtime::InteropServices::Out] System::ComponentModel::License ^ % license);" />
      <MemberSignature Language="F#" Value="static member IsValid : Type * obj * License -&gt; bool" Usage="System.ComponentModel.LicenseManager.IsValid (type, instance, license)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="license" Type="System.ComponentModel.License" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e4895-145">Объект <see cref="T:System.Type" />, который представляет тип объекта, запрашивающего лицензию.</span><span class="sxs-lookup"><span data-stu-id="e4895-145">A <see cref="T:System.Type" /> that represents the type of object that requests the license.</span></span></param>
        <param name="instance"><span data-ttu-id="e4895-146">Объект указанного типа или типа, производного от указанного типа.</span><span class="sxs-lookup"><span data-stu-id="e4895-146">An object of the specified type or a type derived from the specified type.</span></span></param>
        <param name="license"><span data-ttu-id="e4895-147">Объект <see cref="T:System.ComponentModel.License" />, являющийся действительной лицензией или значением <see langword="null" />, если действительная лицензия не может быть предоставлена.</span><span class="sxs-lookup"><span data-stu-id="e4895-147">A <see cref="T:System.ComponentModel.License" /> that is a valid license, or <see langword="null" /> if a valid license cannot be granted.</span></span></param>
        <summary><span data-ttu-id="e4895-148">Определяет, может ли быть предоставлена действительная лицензия для указанного экземпляра типа.</span><span class="sxs-lookup"><span data-stu-id="e4895-148">Determines whether a valid license can be granted for the specified instance of the type.</span></span> <span data-ttu-id="e4895-149">Этот метод создает действительный объект <see cref="T:System.ComponentModel.License" />.</span><span class="sxs-lookup"><span data-stu-id="e4895-149">This method creates a valid <see cref="T:System.ComponentModel.License" />.</span></span></summary>
        <returns><span data-ttu-id="e4895-150">Значение <see langword="true" />, если может быть предоставлена действительная лицензия <see cref="T:System.ComponentModel.License" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e4895-150"><see langword="true" /> if a valid <see cref="T:System.ComponentModel.License" /> can be granted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4895-151">Метод <xref:System.ComponentModel.LicenseManager.IsValid%2A> возвращает `true`, если параметр `type` не лицензирован или если он лицензирован, а параметр `license` является допустимым.</span><span class="sxs-lookup"><span data-stu-id="e4895-151">The <xref:System.ComponentModel.LicenseManager.IsValid%2A> method returns `true` when the `type` parameter is not licensed, or when it is licensed and the `license` parameter is valid.</span></span>  
  
 <span data-ttu-id="e4895-152">Этот метод не создает <xref:System.ComponentModel.LicenseException>, когда не может предоставить допустимый <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="e4895-152">This method does not throw a <xref:System.ComponentModel.LicenseException> when it cannot grant a valid <xref:System.ComponentModel.License>.</span></span> <span data-ttu-id="e4895-153">Метод <xref:System.ComponentModel.LicenseManager.Validate%2A> создает исключения.</span><span class="sxs-lookup"><span data-stu-id="e4895-153">The <xref:System.ComponentModel.LicenseManager.Validate%2A> method throws exceptions.</span></span>  
  
 <span data-ttu-id="e4895-154">Если `license` параметр не `null` после этого вызова, объект, запрашивающий <xref:System.ComponentModel.License>, должен удалить лицензию, вызвав метод <xref:System.ComponentModel.License.Dispose%2A>, когда объект удален или завершен.</span><span class="sxs-lookup"><span data-stu-id="e4895-154">If the `license` parameter is not `null` after this call, the object asking for a <xref:System.ComponentModel.License> must dispose of the license by calling the <xref:System.ComponentModel.License.Dispose%2A> method when the object is disposed of or finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="LockContext">
      <MemberSignature Language="C#" Value="public static void LockContext (object contextUser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LockContext(object contextUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.LockContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LockContext (contextUser As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LockContext(System::Object ^ contextUser);" />
      <MemberSignature Language="F#" Value="static member LockContext : obj -&gt; unit" Usage="System.ComponentModel.LicenseManager.LockContext contextUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextUser" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contextUser"><span data-ttu-id="e4895-155">Объект, текущий контекст которого нужно заблокировать.</span><span class="sxs-lookup"><span data-stu-id="e4895-155">The object whose current context you want to lock.</span></span></param>
        <summary><span data-ttu-id="e4895-156">Не допускает внесения изменений в текущий контекст <see cref="T:System.ComponentModel.LicenseContext" /> данного объекта.</span><span class="sxs-lookup"><span data-stu-id="e4895-156">Prevents changes being made to the current <see cref="T:System.ComponentModel.LicenseContext" /> of the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4895-157">Используйте <xref:System.ComponentModel.LicenseContext>, чтобы получить <xref:System.ComponentModel.License> объекта.</span><span class="sxs-lookup"><span data-stu-id="e4895-157">Use the <xref:System.ComponentModel.LicenseContext> to get the <xref:System.ComponentModel.License> of an object.</span></span> <span data-ttu-id="e4895-158">Этот метод блокирует <xref:System.ComponentModel.LicenseContext>, предотвращая извлечение <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="e4895-158">This method locks the <xref:System.ComponentModel.LicenseContext>, preventing the <xref:System.ComponentModel.License> from being retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e4895-159">Контекст уже заблокирован.</span><span class="sxs-lookup"><span data-stu-id="e4895-159">The context is already locked.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockContext">
      <MemberSignature Language="C#" Value="public static void UnlockContext (object contextUser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnlockContext(object contextUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.UnlockContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UnlockContext (contextUser As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UnlockContext(System::Object ^ contextUser);" />
      <MemberSignature Language="F#" Value="static member UnlockContext : obj -&gt; unit" Usage="System.ComponentModel.LicenseManager.UnlockContext contextUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextUser" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contextUser"><span data-ttu-id="e4895-160">Объект, текущий контекст которого нужно разблокировать.</span><span class="sxs-lookup"><span data-stu-id="e4895-160">The object whose current context you want to unlock.</span></span></param>
        <summary><span data-ttu-id="e4895-161">Позволяет вносить изменения в текущий контекст <see cref="T:System.ComponentModel.LicenseContext" /> данного объекта.</span><span class="sxs-lookup"><span data-stu-id="e4895-161">Allows changes to be made to the current <see cref="T:System.ComponentModel.LicenseContext" /> of the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4895-162">Используйте <xref:System.ComponentModel.LicenseContext>, чтобы получить <xref:System.ComponentModel.License> объекта.</span><span class="sxs-lookup"><span data-stu-id="e4895-162">Use the <xref:System.ComponentModel.LicenseContext> to get the <xref:System.ComponentModel.License> of an object.</span></span> <span data-ttu-id="e4895-163">Этот метод разблокирует <xref:System.ComponentModel.LicenseContext>, позволяя получить <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="e4895-163">This method unlocks the <xref:System.ComponentModel.LicenseContext>, allowing the <xref:System.ComponentModel.License> to be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e4895-164">Параметр <paramref name="contextUser" /> представляет пользователя, отличающегося от заданного в предыдущем вызове метода <see cref="M:System.ComponentModel.LicenseManager.LockContext(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="e4895-164"><paramref name="contextUser" /> represents a different user than the one specified in a previous call to <see cref="M:System.ComponentModel.LicenseManager.LockContext(System.Object)" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UsageMode">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.LicenseUsageMode UsageMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ComponentModel.LicenseUsageMode UsageMode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseManager.UsageMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UsageMode As LicenseUsageMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::LicenseUsageMode UsageMode { System::ComponentModel::LicenseUsageMode get(); };" />
      <MemberSignature Language="F#" Value="member this.UsageMode : System.ComponentModel.LicenseUsageMode" Usage="System.ComponentModel.LicenseManager.UsageMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.LicenseUsageMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4895-165">Возвращает объект <see cref="T:System.ComponentModel.LicenseUsageMode" />, определяющий, когда можно использовать лицензированный объект для контекста <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" />.</span><span class="sxs-lookup"><span data-stu-id="e4895-165">Gets the <see cref="T:System.ComponentModel.LicenseUsageMode" /> which specifies when you can use the licensed object for the <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" />.</span></span></summary>
        <value><span data-ttu-id="e4895-166">Одно из значений <see cref="T:System.ComponentModel.LicenseUsageMode" />, как указано в свойстве <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" />.</span><span class="sxs-lookup"><span data-stu-id="e4895-166">One of the <see cref="T:System.ComponentModel.LicenseUsageMode" /> values, as specified in the <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4895-167">Если это свойство не может найти значение <xref:System.ComponentModel.LicenseManager.CurrentContext%2A>, оно возвращает <xref:System.ComponentModel.LicenseUsageMode.Runtime>.</span><span class="sxs-lookup"><span data-stu-id="e4895-167">If this property cannot find a <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> value, it returns <xref:System.ComponentModel.LicenseUsageMode.Runtime>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.LicenseManager.CurrentContext" />
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e4895-168">Определяет, может ли быть предоставлена лицензия.</span><span class="sxs-lookup"><span data-stu-id="e4895-168">Determines whether a license can be granted.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public static void Validate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Validate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.Validate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Validate(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Validate : Type -&gt; unit" Usage="System.ComponentModel.LicenseManager.Validate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e4895-169">Объект <see cref="T:System.Type" />, который представляет тип объекта, запрашивающего лицензию.</span><span class="sxs-lookup"><span data-stu-id="e4895-169">A <see cref="T:System.Type" /> that represents the type of object that requests the license.</span></span></param>
        <summary><span data-ttu-id="e4895-170">Определяет, может ли быть предоставлена лицензия для указанного типа.</span><span class="sxs-lookup"><span data-stu-id="e4895-170">Determines whether a license can be granted for the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4895-171">Этот метод создает исключение <xref:System.ComponentModel.LicenseException>, если не удается предоставить допустимый <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="e4895-171">This method throws a <xref:System.ComponentModel.LicenseException> when a valid <xref:System.ComponentModel.License> cannot be granted.</span></span> <span data-ttu-id="e4895-172">Метод <xref:System.ComponentModel.LicenseManager.IsValid%2A> не создает исключение.</span><span class="sxs-lookup"><span data-stu-id="e4895-172">The <xref:System.ComponentModel.LicenseManager.IsValid%2A> method does not throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.LicenseException"><span data-ttu-id="e4895-173">Лицензия <see cref="T:System.ComponentModel.License" /> не может быть предоставлена.</span><span class="sxs-lookup"><span data-stu-id="e4895-173">A <see cref="T:System.ComponentModel.License" /> cannot be granted.</span></span></exception>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.License Validate (Type type, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.License Validate(class System.Type type, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.Validate(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::License ^ Validate(Type ^ type, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Validate : Type * obj -&gt; System.ComponentModel.License" Usage="System.ComponentModel.LicenseManager.Validate (type, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.License</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e4895-174">Объект <see cref="T:System.Type" />, который представляет тип объекта, запрашивающего лицензию.</span><span class="sxs-lookup"><span data-stu-id="e4895-174">A <see cref="T:System.Type" /> that represents the type of object that requests the license.</span></span></param>
        <param name="instance"><span data-ttu-id="e4895-175">Объект <see cref="T:System.Object" /> указанного типа или типа, производного от указанного типа.</span><span class="sxs-lookup"><span data-stu-id="e4895-175">An <see cref="T:System.Object" /> of the specified type or a type derived from the specified type.</span></span></param>
        <summary><span data-ttu-id="e4895-176">Определяет, может ли быть предоставлена лицензия для экземпляра указанного типа.</span><span class="sxs-lookup"><span data-stu-id="e4895-176">Determines whether a license can be granted for the instance of the specified type.</span></span></summary>
        <returns><span data-ttu-id="e4895-177">Допустимый класс <see cref="T:System.ComponentModel.License" />.</span><span class="sxs-lookup"><span data-stu-id="e4895-177">A valid <see cref="T:System.ComponentModel.License" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4895-178">Этот метод создает исключение <xref:System.ComponentModel.LicenseException>, если не удается предоставить допустимый <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="e4895-178">This method throws a <xref:System.ComponentModel.LicenseException> when a valid <xref:System.ComponentModel.License> cannot be granted.</span></span> <span data-ttu-id="e4895-179">Метод <xref:System.ComponentModel.LicenseManager.IsValid%2A> не создает исключение.</span><span class="sxs-lookup"><span data-stu-id="e4895-179">The <xref:System.ComponentModel.LicenseManager.IsValid%2A> method does not throw an exception.</span></span>  
  
 <span data-ttu-id="e4895-180">Все объекты, запрашивающие <xref:System.ComponentModel.License>, должны удалить лицензию, вызвав метод <xref:System.ComponentModel.License.Dispose%2A>, когда объект удаляется или завершается.</span><span class="sxs-lookup"><span data-stu-id="e4895-180">All objects asking for a <xref:System.ComponentModel.License> must dispose of the license by calling the <xref:System.ComponentModel.License.Dispose%2A> method when the object is disposed of or finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.LicenseException"><span data-ttu-id="e4895-181">Тип лицензирован, но лицензия <see cref="T:System.ComponentModel.License" /> не может быть предоставлена.</span><span class="sxs-lookup"><span data-stu-id="e4895-181">The type is licensed, but a <see cref="T:System.ComponentModel.License" /> cannot be granted.</span></span></exception>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>
