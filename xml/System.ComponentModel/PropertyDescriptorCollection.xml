<Type Name="PropertyDescriptorCollection" FullName="System.ComponentModel.PropertyDescriptorCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd5788d4c071a655aec17f59cd7bee2f67f3d364" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69346052" /></Metadata><TypeSignature Language="C#" Value="public class PropertyDescriptorCollection : System.Collections.IDictionary, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyDescriptorCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyDescriptorCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyDescriptorCollection&#xA;Implements IDictionary, IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyDescriptorCollection : System::Collections::IDictionary, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type PropertyDescriptorCollection = class&#xA;    interface ICollection&#xA;    interface IList&#xA;    interface IDictionary&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0b90f-101">Представляет коллекцию объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-101">Represents a collection of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b90f-102"><xref:System.ComponentModel.PropertyDescriptorCollection>доступен только для чтения; Он не реализует методы, которые добавляют или удаляют свойства.</span><span class="sxs-lookup"><span data-stu-id="0b90f-102"><xref:System.ComponentModel.PropertyDescriptorCollection> is read-only; it does not implement methods that add or remove properties.</span></span> <span data-ttu-id="0b90f-103">Для реализации этих методов необходимо наследовать от этого класса.</span><span class="sxs-lookup"><span data-stu-id="0b90f-103">You must inherit from this class to implement these methods.</span></span>  
  
 <span data-ttu-id="0b90f-104">Используя свойства, доступные в <xref:System.ComponentModel.PropertyDescriptorCollection> классе, можно запросить коллекцию о его содержимом.</span><span class="sxs-lookup"><span data-stu-id="0b90f-104">Using the properties available in the <xref:System.ComponentModel.PropertyDescriptorCollection> class, you can query the collection about its contents.</span></span> <span data-ttu-id="0b90f-105">Для определения количества элементов в коллекции используется свойство <xref:System.ComponentModel.PropertyDescriptorCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0b90f-105">Use the <xref:System.ComponentModel.PropertyDescriptorCollection.Count%2A> property to determine the number of elements in the collection.</span></span> <span data-ttu-id="0b90f-106"><xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> Используйте свойство, чтобы получить конкретное свойство по номеру индекса или по имени.</span><span class="sxs-lookup"><span data-stu-id="0b90f-106">Use the <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> property to get a specific property by index number or by name.</span></span>  
  
 <span data-ttu-id="0b90f-107">В дополнение к свойствам можно использовать <xref:System.ComponentModel.PropertyDescriptorCollection.Find%2A> метод, чтобы получить описание свойства с указанным именем из коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-107">In addition to properties, you can use the <xref:System.ComponentModel.PropertyDescriptorCollection.Find%2A> method to get a description of the property with the specified name from the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b90f-108">В следующем примере кода создается новый <xref:System.ComponentModel.PropertyDescriptorCollection> с использованием свойств в. `button1`</span><span class="sxs-lookup"><span data-stu-id="0b90f-108">The following code example creates a new <xref:System.ComponentModel.PropertyDescriptorCollection> using the properties on `button1`.</span></span> <span data-ttu-id="0b90f-109">Для этого требуется `button1` , чтобы экземпляр был создан в форме.</span><span class="sxs-lookup"><span data-stu-id="0b90f-109">It requires that `button1` has been instantiated on a form.</span></span>  
  
 [!code-cpp[Classic PropertyDescriptorCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyDescriptorCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyDescriptorCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PropertyDescriptorCollection Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0b90f-110">Следующий пример выводит все свойства кнопки в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="0b90f-110">The next example prints all the properties on a button in a text box.</span></span> <span data-ttu-id="0b90f-111">Для этого требуется `button1` , `textBox1` чтобы экземпляр и был создан в форме.</span><span class="sxs-lookup"><span data-stu-id="0b90f-111">It requires that `button1` and `textBox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[Classic PropertyDescriptorCollection Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection Example/CPP/source.cpp#2)]
 [!code-csharp[Classic PropertyDescriptorCollection Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection Example/CS/source.cs#2)]
 [!code-vb[Classic PropertyDescriptorCollection Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PropertyDescriptorCollection Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b90f-112">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-112">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> class.</span></span></summary>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyDescriptorCollection (System.ComponentModel.PropertyDescriptor[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.PropertyDescriptor[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As PropertyDescriptor())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyDescriptorCollection(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptorCollection : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="new System.ComponentModel.PropertyDescriptorCollection properties" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="0b90f-113">Массив типа <see cref="T:System.ComponentModel.PropertyDescriptor" />, предоставляющий свойства для данной коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-113">An array of type <see cref="T:System.ComponentModel.PropertyDescriptor" /> that provides the properties for this collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-114">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-114">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyDescriptorCollection (System.ComponentModel.PropertyDescriptor[] properties, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.PropertyDescriptor[] properties, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As PropertyDescriptor(), readOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyDescriptorCollection(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ properties, bool readOnly);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptorCollection : System.ComponentModel.PropertyDescriptor[] * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="new System.ComponentModel.PropertyDescriptorCollection (properties, readOnly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="properties" Type="System.ComponentModel.PropertyDescriptor[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="readOnly" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="0b90f-115">Массив типа <see cref="T:System.ComponentModel.PropertyDescriptor" />, предоставляющий свойства для данной коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-115">An array of type <see cref="T:System.ComponentModel.PropertyDescriptor" /> that provides the properties for this collection.</span></span></param>
        <param name="readOnly"><span data-ttu-id="0b90f-116">Значение <see langword="true" /> определяет, что эта коллекция не может быть изменена.</span><span class="sxs-lookup"><span data-stu-id="0b90f-116">If <see langword="true" />, specifies that the collection cannot be modified.</span></span></param>
        <summary><span data-ttu-id="0b90f-117">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, который может быть экземпляром только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-117">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> class, which is optionally read-only.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.ComponentModel.PropertyDescriptor value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.ComponentModel.PropertyDescriptor value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As PropertyDescriptor) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::ComponentModel::PropertyDescriptor ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ComponentModel.PropertyDescriptor -&gt; int" Usage="propertyDescriptorCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b90f-118">Параметр <see cref="T:System.ComponentModel.PropertyDescriptor" /> для добавления в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="0b90f-118">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-119">Добавляет указанный параметр <see cref="T:System.ComponentModel.PropertyDescriptor" /> в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="0b90f-119">Adds the specified <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the collection.</span></span></summary>
        <returns><span data-ttu-id="0b90f-120">Индекс объекта <see cref="T:System.ComponentModel.PropertyDescriptor" />, который был добавлен к коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-120">The index of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that was added to the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0b90f-121">Коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-121">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="propertyDescriptorCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b90f-122">Удаляет все объекты <see cref="T:System.ComponentModel.PropertyDescriptor" /> из коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-122">Removes all <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0b90f-123">Коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-123">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.ComponentModel.PropertyDescriptor value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.ComponentModel.PropertyDescriptor value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As PropertyDescriptor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::ComponentModel::PropertyDescriptor ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.ComponentModel.PropertyDescriptor -&gt; bool" Usage="propertyDescriptorCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b90f-124">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />, который нужно найти в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-124">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to find in the collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-125">Возвращает значение, показывающее, содержит ли коллекция данный дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> .</span><span class="sxs-lookup"><span data-stu-id="0b90f-125">Returns whether the collection contains the given <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="0b90f-126">Значение <see langword="true" />, если коллекция содержит данный дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-126"><see langword="true" /> if the collection contains the given <see cref="T:System.ComponentModel.PropertyDescriptor" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="propertyDescriptorCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="0b90f-127">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, в которые нужно занести элементы коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-127">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to copy elements of the collection to.</span></span></param>
        <param name="index"><span data-ttu-id="0b90f-128">Индекс в параметре <paramref name="array" />, с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="0b90f-128">The index of the <paramref name="array" /> parameter at which copying begins.</span></span></param>
        <summary><span data-ttu-id="0b90f-129">Копирует всю коллекцию в массив, начиная с заданного индекса.</span><span class="sxs-lookup"><span data-stu-id="0b90f-129">Copies the entire collection to an array, starting at the specified index number.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.ComponentModel.PropertyDescriptorCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b90f-130">Возвращает количество дескрипторов свойств в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-130">Gets the number of property descriptors in the collection.</span></span></summary>
        <value><span data-ttu-id="0b90f-131">Количество дескрипторов свойств в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-131">The number of property descriptors in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b90f-132"><xref:System.ComponentModel.PropertyDescriptorCollection.Count%2A> Свойство можно использовать для установки ограничений цикла, который выполняет итерацию по коллекции объектов.</span><span class="sxs-lookup"><span data-stu-id="0b90f-132">You can use the <xref:System.ComponentModel.PropertyDescriptorCollection.Count%2A> property to set the limits of a loop that iterates through a collection of objects.</span></span> <span data-ttu-id="0b90f-133">Поскольку коллекция отсчитывается от нуля, обязательно используйте `Count - 1` в качестве верхней границы цикла.</span><span class="sxs-lookup"><span data-stu-id="0b90f-133">Because the collection is zero-based, be sure to use `Count - 1` as the upper boundary of the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b90f-134">В следующем примере кода <xref:System.ComponentModel.PropertyDescriptorCollection.Count%2A> свойство используется для печати числа свойств в. `button1`</span><span class="sxs-lookup"><span data-stu-id="0b90f-134">The following code example uses the <xref:System.ComponentModel.PropertyDescriptorCollection.Count%2A> property to print the number of properties on `button1`.</span></span> <span data-ttu-id="0b90f-135">Для этого требуется `button1` , `textBox1` чтобы экземпляр и был создан в форме.</span><span class="sxs-lookup"><span data-stu-id="0b90f-135">It requires that `button1` and `textBox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[Classic PropertyDescriptorCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyDescriptorCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyDescriptorCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.PropertyDescriptorCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.PropertyDescriptorCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.PropertyDescriptorCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As PropertyDescriptorCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::PropertyDescriptorCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.PropertyDescriptorCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b90f-136">Задает пустую коллекцию, которую можно использовать вместо создания ново коллекции без элементов.</span><span class="sxs-lookup"><span data-stu-id="0b90f-136">Specifies an empty collection that you can use instead of creating a new one with no items.</span></span> <span data-ttu-id="0b90f-137">Это статическое (<see langword="static" />) поле доступно только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-137">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor Find (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor Find(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Find (name As String, ignoreCase As Boolean) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptor ^ Find(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member Find : string * bool -&gt; System.ComponentModel.PropertyDescriptor&#xA;override this.Find : string * bool -&gt; System.ComponentModel.PropertyDescriptor" Usage="propertyDescriptorCollection.Find (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0b90f-138">Имя объекта <see cref="T:System.ComponentModel.PropertyDescriptor" />, которое нужно возвратить из коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-138">The name of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to return from the collection.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="0b90f-139">Значение <see langword="true" />, если регистр в имени свойства не нужно учитывать, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-139"><see langword="true" /> if you want to ignore the case of the property name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0b90f-140">Возвращает объект <see cref="T:System.ComponentModel.PropertyDescriptor" /> с заданным именем, используя логическое значение, чтобы показать, игнорируется ли регистр знаков.</span><span class="sxs-lookup"><span data-stu-id="0b90f-140">Returns the <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the specified name, using a Boolean to indicate whether to ignore case.</span></span></summary>
        <returns><span data-ttu-id="0b90f-141">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> с заданным именем или <see langword="null" />, если свойство не существует.</span><span class="sxs-lookup"><span data-stu-id="0b90f-141">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the specified name, or <see langword="null" /> if the property does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0b90f-142">В следующем примере кода выполняется поиск конкретного <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0b90f-142">The following code example finds a specific <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="0b90f-143">Он выводит тип компонента для этого <xref:System.ComponentModel.PropertyDescriptor> в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="0b90f-143">It prints the type of component for this <xref:System.ComponentModel.PropertyDescriptor> in a text box.</span></span> <span data-ttu-id="0b90f-144">Для этого требуется `button1` , `textBox1` чтобы экземпляр и был создан в форме.</span><span class="sxs-lookup"><span data-stu-id="0b90f-144">It requires that `button1` and `textBox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[Classic PropertyDescriptorCollection.Find Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.Find Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyDescriptorCollection.Find Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.Find Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyDescriptorCollection.Find Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.Find Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="propertyDescriptorCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b90f-145">Возвращает перечислитель для этого класса.</span><span class="sxs-lookup"><span data-stu-id="0b90f-145">Returns an enumerator for this class.</span></span></summary>
        <returns><span data-ttu-id="0b90f-146">Перечислитель типа <see cref="T:System.Collections.IEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-146">An enumerator of type <see cref="T:System.Collections.IEnumerator" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0b90f-147">В следующем примере кода возвращается перечислитель для свойств в `button1`.</span><span class="sxs-lookup"><span data-stu-id="0b90f-147">The following code example gets an enumerator for the properties on `button1`.</span></span> <span data-ttu-id="0b90f-148">Он использует перечислитель для вывода имен свойств в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-148">It uses the enumerator to print the names of the properties in the collection.</span></span> <span data-ttu-id="0b90f-149">Для этого требуется `button1` , `textBox1` чтобы экземпляр и был создан в форме.</span><span class="sxs-lookup"><span data-stu-id="0b90f-149">It requires that `button1` and `textBox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.ComponentModel.PropertyDescriptor value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.ComponentModel.PropertyDescriptor value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As PropertyDescriptor) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::ComponentModel::PropertyDescriptor ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.ComponentModel.PropertyDescriptor -&gt; int" Usage="propertyDescriptorCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b90f-150">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />, для которого возвращается индекс.</span><span class="sxs-lookup"><span data-stu-id="0b90f-150">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to return the index of.</span></span></param>
        <summary><span data-ttu-id="0b90f-151">Возвращает индекс данного дескриптора <see cref="T:System.ComponentModel.PropertyDescriptor" /> .</span><span class="sxs-lookup"><span data-stu-id="0b90f-151">Returns the index of the given <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="0b90f-152">Индекс заданного объекта <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-152">The index of the given <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.ComponentModel.PropertyDescriptor value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.ComponentModel.PropertyDescriptor value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As PropertyDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::ComponentModel::PropertyDescriptor ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.ComponentModel.PropertyDescriptor -&gt; unit" Usage="propertyDescriptorCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0b90f-153">Индекс в коллекции, в позицию которого нужно добавить параметр <paramref name="value" /> .</span><span class="sxs-lookup"><span data-stu-id="0b90f-153">The index at which to add the <paramref name="value" /> parameter to the collection.</span></span></param>
        <param name="value"><span data-ttu-id="0b90f-154">Параметр <see cref="T:System.ComponentModel.PropertyDescriptor" /> для добавления в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="0b90f-154">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-155">Добавляет в коллекцию дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> в позицию с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="0b90f-155">Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the collection at the specified index number.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0b90f-156">Коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-156">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InternalSort">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b90f-157">Сортирует членов коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-157">Sorts the members of this collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InternalSort">
      <MemberSignature Language="C#" Value="protected void InternalSort (System.Collections.IComparer sorter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InternalSort(class System.Collections.IComparer sorter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InternalSort (sorter As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InternalSort(System::Collections::IComparer ^ sorter);" />
      <MemberSignature Language="F#" Value="member this.InternalSort : System.Collections.IComparer -&gt; unit" Usage="propertyDescriptorCollection.InternalSort sorter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sorter" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="sorter"><span data-ttu-id="0b90f-158">Средство сравнения, которое нужно использовать для сортировки объектов <see cref="T:System.ComponentModel.PropertyDescriptor" /> в данной коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-158">A comparer to use to sort the <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects in this collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-159">Сортирует члены данной коллекции, используя заданный интерфейс <see cref="T:System.Collections.IComparer" /> .</span><span class="sxs-lookup"><span data-stu-id="0b90f-159">Sorts the members of this collection, using the specified <see cref="T:System.Collections.IComparer" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="InternalSort">
      <MemberSignature Language="C#" Value="protected void InternalSort (string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InternalSort(string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InternalSort (names As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InternalSort(cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.InternalSort : string[] -&gt; unit" Usage="propertyDescriptorCollection.InternalSort names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="names"><span data-ttu-id="0b90f-160">Массив строк, описывающий порядок сортировки для объектов <see cref="T:System.ComponentModel.PropertyDescriptor" /> в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-160">An array of strings describing the order in which to sort the <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects in this collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-161">Сортирует членов коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-161">Sorts the members of this collection.</span></span> <span data-ttu-id="0b90f-162">Сначала выполняется сортировка в указанном порядке, затем используется порядок сортировки по умолчанию, обычно являющийся алфавитным,.</span><span class="sxs-lookup"><span data-stu-id="0b90f-162">The specified order is applied first, followed by the default sort for this collection, which is usually alphabetical.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0b90f-163">В следующем примере кода определяется порядок сортировки для <xref:System.ComponentModel.PropertyDescriptorCollection.InternalSort%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="0b90f-163">The following code example defines the sort order for the <xref:System.ComponentModel.PropertyDescriptorCollection.InternalSort%2A> method.</span></span> <span data-ttu-id="0b90f-164">`A` `D`Если содержит четыре <xref:System.ComponentModel.PropertyDescriptor> объекта с именами `B` `B`, ,`C` и`D`, свойства будутотсортированывпорядке,,`myNewColl` <xref:System.ComponentModel.PropertyDescriptorCollection> `A`и .`C`</span><span class="sxs-lookup"><span data-stu-id="0b90f-164">If the <xref:System.ComponentModel.PropertyDescriptorCollection> contains four <xref:System.ComponentModel.PropertyDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.</span></span>  
  
 [!code-cpp[Classic EventDescriptorCollection.InternalSort Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic EventDescriptorCollection.InternalSort Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventDescriptorCollection.InternalSort Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic EventDescriptorCollection.InternalSort Example/CS/source.cs#1)]
 [!code-vb[Classic EventDescriptorCollection.InternalSort Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic EventDescriptorCollection.InternalSort Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b90f-165">Получает или задает указанный объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-165">Gets or sets the specified <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ default[int] { System::ComponentModel::PropertyDescriptor ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.PropertyDescriptorCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0b90f-166">Индекс (с нуля) возвращаемого или задаваемого <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-166">The zero-based index of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to get or set.</span></span></param>
        <summary><span data-ttu-id="0b90f-167">Получает или задает дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="0b90f-167">Gets or sets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> at the specified index number.</span></span></summary>
        <value><span data-ttu-id="0b90f-168">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" /> с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="0b90f-168">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the specified index number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b90f-169">Номер индекса отсчитывается от нуля.</span><span class="sxs-lookup"><span data-stu-id="0b90f-169">The index number is zero-based.</span></span> <span data-ttu-id="0b90f-170">Поэтому необходимо вычесть 1 из числового расположения конкретного <xref:System.ComponentModel.PropertyDescriptor> объекта, <xref:System.ComponentModel.PropertyDescriptor>чтобы получить доступ к нему.</span><span class="sxs-lookup"><span data-stu-id="0b90f-170">Therefore, you must subtract 1 from the numerical position of a particular <xref:System.ComponentModel.PropertyDescriptor> to access that <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="0b90f-171">Например, чтобы получить третий <xref:System.ComponentModel.PropertyDescriptor>объект, необходимо указать. `myColl[2]`</span><span class="sxs-lookup"><span data-stu-id="0b90f-171">For example, to get the third <xref:System.ComponentModel.PropertyDescriptor>, you need to specify `myColl[2]`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b90f-172">В следующем примере кода <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> свойство используется для печати имени объекта, <xref:System.ComponentModel.PropertyDescriptor> указанного с помощью номера индекса в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="0b90f-172">The following code example uses the <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> property to print the name of the <xref:System.ComponentModel.PropertyDescriptor> specified by the index number in a text box.</span></span> <span data-ttu-id="0b90f-173">Поскольку номер индекса основан на отсчете от нуля, в этом примере выводится <xref:System.ComponentModel.PropertyDescriptor>имя второй.</span><span class="sxs-lookup"><span data-stu-id="0b90f-173">Because the index number is zero-based, this example prints the name of the second <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="0b90f-174">Для этого требуется `button1` , чтобы экземпляр был создан в форме.</span><span class="sxs-lookup"><span data-stu-id="0b90f-174">It requires that `button1` has been instantiated on a form.</span></span>  
  
 [!code-cpp[Classic PropertyDescriptorCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyDescriptorCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyDescriptorCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0b90f-175">Параметр <paramref name="index" /> является недопустимым индексом <see cref="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)" /> .</span><span class="sxs-lookup"><span data-stu-id="0b90f-175">The <paramref name="index" /> parameter is not a valid index for <see cref="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ default[System::String ^] { System::ComponentModel::PropertyDescriptor ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.PropertyDescriptorCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0b90f-176">Имя дескриптора <see cref="T:System.ComponentModel.PropertyDescriptor" />, который нужно получить из коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-176">The name of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to get from the collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-177">Возвращает или задает объект <see cref="T:System.ComponentModel.PropertyDescriptor" /> с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="0b90f-177">Gets or sets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the specified name.</span></span></summary>
        <value><span data-ttu-id="0b90f-178">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> с заданным именем или <see langword="null" />, если свойство не существует.</span><span class="sxs-lookup"><span data-stu-id="0b90f-178">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the specified name, or <see langword="null" /> if the property does not exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b90f-179">При <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> поиске имен в свойстве учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="0b90f-179">The <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> property is case-sensitive when searching for names.</span></span> <span data-ttu-id="0b90f-180">То есть имена "pname" и "pname" считаются двумя разными свойствами.</span><span class="sxs-lookup"><span data-stu-id="0b90f-180">That is, the names "Pname" and "pname" are considered to be two different properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b90f-181">В следующем примере кода <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> свойство используется для печати типа компонента для объекта, <xref:System.ComponentModel.PropertyDescriptor> указанного в индексе.</span><span class="sxs-lookup"><span data-stu-id="0b90f-181">The following code example uses the <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> property to print the type of component for the <xref:System.ComponentModel.PropertyDescriptor> specified by the index.</span></span> <span data-ttu-id="0b90f-182">Для этого требуется `button1` , `textBox1` чтобы экземпляр и был создан в форме.</span><span class="sxs-lookup"><span data-stu-id="0b90f-182">It requires that `button1` and `textBox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[Classic PropertyDescriptorCollection.this1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.this1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyDescriptorCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyDescriptorCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.ComponentModel.PropertyDescriptor value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.ComponentModel.PropertyDescriptor value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As PropertyDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::ComponentModel::PropertyDescriptor ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.ComponentModel.PropertyDescriptor -&gt; unit" Usage="propertyDescriptorCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b90f-183">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />, который требуется удалить из коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-183">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-184">Удаляет указанный объект <see cref="T:System.ComponentModel.PropertyDescriptor" /> из коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-184">Removes the specified <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0b90f-185">Коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-185">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="propertyDescriptorCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0b90f-186">Индекс дескриптора <see cref="T:System.ComponentModel.PropertyDescriptor" />, который нужно удалить из коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-186">The index of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-187">Удаляет из коллекции дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="0b90f-187">Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> at the specified index from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0b90f-188">Коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-188">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b90f-189">Сортирует членов коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-189">Sorts the members of this collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sort () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ Sort();" />
      <MemberSignature Language="F#" Value="abstract member Sort : unit -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.Sort : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptorCollection.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b90f-190">Сортирует члены данной коллекции, используя порядок сортировки, установленный по умолчанию для этой коллекции, являющийся обычно порядком сортировки по алфавиту.</span><span class="sxs-lookup"><span data-stu-id="0b90f-190">Sorts the members of this collection, using the default sort for this collection, which is usually alphabetical.</span></span></summary>
        <returns><span data-ttu-id="0b90f-191">Новая коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, содержащая отсортированные объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-191">A new <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sort (comparer As IComparer) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ Sort(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Collections.IComparer -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.Sort : System.Collections.IComparer -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptorCollection.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="0b90f-192">Средство сравнения, которое нужно использовать для сортировки объектов <see cref="T:System.ComponentModel.PropertyDescriptor" /> в данной коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-192">A comparer to use to sort the <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects in this collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-193">Сортирует члены данной коллекции, используя заданный интерфейс <see cref="T:System.Collections.IComparer" /> .</span><span class="sxs-lookup"><span data-stu-id="0b90f-193">Sorts the members of this collection, using the specified <see cref="T:System.Collections.IComparer" />.</span></span></summary>
        <returns><span data-ttu-id="0b90f-194">Новая коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, содержащая отсортированные объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-194">A new <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection Sort (string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection Sort(string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sort (names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ Sort(cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="abstract member Sort : string[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.Sort : string[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptorCollection.Sort names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="names"><span data-ttu-id="0b90f-195">Массив строк, описывающий порядок сортировки для объектов <see cref="T:System.ComponentModel.PropertyDescriptor" /> в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-195">An array of strings describing the order in which to sort the <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects in this collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-196">Сортирует членов коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-196">Sorts the members of this collection.</span></span> <span data-ttu-id="0b90f-197">Сначала выполняется сортировка в указанном порядке, затем используется порядок сортировки по умолчанию, обычно являющийся алфавитным,.</span><span class="sxs-lookup"><span data-stu-id="0b90f-197">The specified order is applied first, followed by the default sort for this collection, which is usually alphabetical.</span></span></summary>
        <returns><span data-ttu-id="0b90f-198">Новая коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, содержащая отсортированные объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-198">A new <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0b90f-199">В следующем примере кода определяется порядок сортировки для <xref:System.ComponentModel.PropertyDescriptorCollection.Sort%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="0b90f-199">The following code example defines the sort order for the <xref:System.ComponentModel.PropertyDescriptorCollection.Sort%2A> method.</span></span> <span data-ttu-id="0b90f-200">`A` `D`Если содержит четыре <xref:System.ComponentModel.PropertyDescriptor> объекта с именами `B` `B`, ,`C` и`D`, свойства будутотсортированывпорядке,,`myNewColl` <xref:System.ComponentModel.PropertyDescriptorCollection> `A`и .`C`</span><span class="sxs-lookup"><span data-stu-id="0b90f-200">If the <xref:System.ComponentModel.PropertyDescriptorCollection> contains four <xref:System.ComponentModel.PropertyDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.</span></span>  
  
 [!code-cpp[classic eventdescriptorcollection.sort example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic EventDescriptorCollection.Sort Example/CPP/source.cpp#1)]
 [!code-csharp[classic eventdescriptorcollection.sort example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic EventDescriptorCollection.Sort Example/CS/source.cs#1)]
 [!code-vb[classic eventdescriptorcollection.sort example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic EventDescriptorCollection.Sort Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection Sort (string[] names, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection Sort(string[] names, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sort (names As String(), comparer As IComparer) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ Sort(cli::array &lt;System::String ^&gt; ^ names, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : string[] * System.Collections.IComparer -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.Sort : string[] * System.Collections.IComparer -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptorCollection.Sort (names, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="names"><span data-ttu-id="0b90f-201">Массив строк, описывающий порядок сортировки для объектов <see cref="T:System.ComponentModel.PropertyDescriptor" /> в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-201">An array of strings describing the order in which to sort the <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects in this collection.</span></span></param>
        <param name="comparer"><span data-ttu-id="0b90f-202">Средство сравнения, которое нужно использовать для сортировки объектов <see cref="T:System.ComponentModel.PropertyDescriptor" /> в данной коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-202">A comparer to use to sort the <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects in this collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-203">Сортирует членов коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-203">Sorts the members of this collection.</span></span> <span data-ttu-id="0b90f-204">Вслед за выполнением сортировки в указанном порядке производится сортировка с использованием средства <see cref="T:System.Collections.IComparer" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-204">The specified order is applied first, followed by the sort using the specified <see cref="T:System.Collections.IComparer" />.</span></span></summary>
        <returns><span data-ttu-id="0b90f-205">Новая коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, содержащая отсортированные объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-205">A new <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0b90f-206">В следующем примере кода определяется порядок сортировки для <xref:System.ComponentModel.PropertyDescriptorCollection.Sort%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="0b90f-206">The following code example defines the sort order for the <xref:System.ComponentModel.PropertyDescriptorCollection.Sort%2A> method.</span></span> <span data-ttu-id="0b90f-207">`A` `D`Если содержит четыре <xref:System.ComponentModel.PropertyDescriptor> объекта с именами `B` `B`, ,`C` и`D`, свойства будутотсортированывпорядке,,`myNewColl` <xref:System.ComponentModel.PropertyDescriptorCollection> `A`и .`C`</span><span class="sxs-lookup"><span data-stu-id="0b90f-207">If the <xref:System.ComponentModel.PropertyDescriptorCollection> contains four <xref:System.ComponentModel.PropertyDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.</span></span>  
  
 [!code-cpp[classic eventdescriptorcollection.sort example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic EventDescriptorCollection.Sort Example/CPP/source.cpp#1)]
 [!code-csharp[classic eventdescriptorcollection.sort example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic EventDescriptorCollection.Sort Example/CS/source.cs#1)]
 [!code-vb[classic eventdescriptorcollection.sort example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic EventDescriptorCollection.Sort Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b90f-208">Возвращает количество элементов, содержащихся в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-208">Gets the number of elements contained in the collection.</span></span></summary>
        <value><span data-ttu-id="0b90f-209">Количество элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-209">The number of elements contained in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b90f-210">Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="0b90f-210">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="0b90f-211">Значение <see langword="true" />, если доступ к коллекции синхронизирован (потокобезопасен); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-211"><see langword="true" /> if access to the collection is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b90f-212">Возвращает объект, который можно использовать для синхронизации доступа к коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-212">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="0b90f-213">Объект, который можно использовать для синхронизации доступа к коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-213">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0b90f-214">Объект <see cref="T:System.Object" /> используется в качестве ключа добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="0b90f-214">The <see cref="T:System.Object" /> to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="0b90f-215">Объект <see cref="T:System.Object" /> используется в качестве значения добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="0b90f-215">The <see cref="T:System.Object" /> to use as the value of the element to add.</span></span></param>
        <summary><span data-ttu-id="0b90f-216">Добавляет элемент с указанными ключом и значением в <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-216">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0b90f-217">Коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-217">The collection is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0b90f-218">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-218"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Clear">
      <MemberSignature Language="C#" Value="void IDictionary.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IDictionary.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Clear() = System::Collections::IDictionary::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b90f-219">Удаляет из коллекции <see cref="T:System.Collections.IDictionary" /> все элементы.</span><span class="sxs-lookup"><span data-stu-id="0b90f-219">Removes all elements from the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0b90f-220">Ключ, который требуется найти в <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-220">The key to locate in the <see cref="T:System.Collections.IDictionary" />.</span></span></param>
        <summary><span data-ttu-id="0b90f-221">Определяет, содержится ли элемент с указанным ключом в <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-221">Determines whether the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="0b90f-222">Значение <see langword="true" />, если в <see cref="T:System.Collections.IDictionary" /> содержится элемент с данным ключом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-222"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b90f-223">Возвращает перечислитель для этого класса.</span><span class="sxs-lookup"><span data-stu-id="0b90f-223">Returns an enumerator for this class.</span></span></summary>
        <returns><span data-ttu-id="0b90f-224">Перечислитель типа <see cref="T:System.Collections.IEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-224">An enumerator of type <see cref="T:System.Collections.IEnumerator" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0b90f-225">В следующем примере кода возвращается перечислитель для свойств в `button1`.</span><span class="sxs-lookup"><span data-stu-id="0b90f-225">The following code example gets an enumerator for the properties on `button1`.</span></span> <span data-ttu-id="0b90f-226">Он использует перечислитель для вывода имен свойств в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-226">It uses the enumerator to print the names of the properties in the collection.</span></span> <span data-ttu-id="0b90f-227">Для этого требуется `button1` , `textBox1` чтобы экземпляр и был создан в форме.</span><span class="sxs-lookup"><span data-stu-id="0b90f-227">It requires that `button1` and `textBox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PropertyDescriptorCollection.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b90f-228">Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.IDictionary" /> фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="0b90f-228">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="0b90f-229">Значение <see langword="true" />, если словарь <see cref="T:System.Collections.IDictionary" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-229"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b90f-230">Получает значение, указывающее, является ли объект <see cref="T:System.Collections.IDictionary" /> доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-230">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="0b90f-231">Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.IDictionary" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-231"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0b90f-232">Ключ элемента, который требуется получить или задать.</span><span class="sxs-lookup"><span data-stu-id="0b90f-232">The key of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="0b90f-233">Возвращает или задает элемент с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="0b90f-233">Gets or sets the element with the specified key.</span></span></summary>
        <value><span data-ttu-id="0b90f-234">Элемент с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="0b90f-234">The element with the specified key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b90f-235">Возвращает интерфейс <see cref="T:System.Collections.ICollection" />, содержащий ключи <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-235">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="0b90f-236">Коллекция <see cref="T:System.Collections.ICollection" />, содержащая ключи из словаря <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-236">An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0b90f-237">Ключ элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="0b90f-237">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="0b90f-238">Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-238">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b90f-239">Возвращает интерфейс <see cref="T:System.Collections.ICollection" />, содержащий значения из <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-239">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="0b90f-240">Коллекция <see cref="T:System.Collections.ICollection" />, содержащая значения из словаря <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-240">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b90f-241">Возвращает перечислитель <see cref="T:System.Collections.IEnumerator" /> для словаря <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-241">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <returns><span data-ttu-id="0b90f-242">Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-242">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b90f-243">Элемент для добавления в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="0b90f-243">The item to add to the collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-244">Добавляет элемент в коллекцию <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-244">Adds an item to the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="0b90f-245">Позиция, на которую вставлен новый элемент.</span><span class="sxs-lookup"><span data-stu-id="0b90f-245">The position into which the new element was inserted.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b90f-246">Удаляет все элементы из коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-246">Removes all items from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0b90f-247">Коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-247">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b90f-248">Элемент, помещаемый в эту коллекцию.</span><span class="sxs-lookup"><span data-stu-id="0b90f-248">The item to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-249">Определяет, содержит ли коллекция указанное значение.</span><span class="sxs-lookup"><span data-stu-id="0b90f-249">Determines whether the collection contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="0b90f-250">Значение <see langword="true" />, если элемент найден в коллекции; в обратном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-250"><see langword="true" /> if the item is found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b90f-251">Элемент, помещаемый в эту коллекцию.</span><span class="sxs-lookup"><span data-stu-id="0b90f-251">The item to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-252">Определяет индекс указанного элемента коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-252">Determines the index of a specified item in the collection.</span></span></summary>
        <returns><span data-ttu-id="0b90f-253">Индекс параметра <paramref name="value" />, если он найден в списке; в противном случае -1.</span><span class="sxs-lookup"><span data-stu-id="0b90f-253">The index of <paramref name="value" /> if found in the list, otherwise -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0b90f-254">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-254">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="0b90f-255">Элемент, вставляемый в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="0b90f-255">The item to insert into the collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-256">Вставляет элемент в коллекцию по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="0b90f-256">Inserts an item into the collection at a specified index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0b90f-257">Коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-257">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b90f-258">Возвращает значение, указывающее, имеет ли коллекция фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="0b90f-258">Gets a value indicating whether the collection has a fixed size.</span></span></summary>
        <value><span data-ttu-id="0b90f-259">Значение <see langword="true" />, если коллекция имеет фиксированный размер; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-259"><see langword="true" /> if the collection has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b90f-260">Возвращает значение, указывающее, является ли коллекция доступной только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-260">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="0b90f-261">Значение <see langword="true" />, если коллекция доступна только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-261"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0b90f-262">Отсчитываемый от нуля индекс получаемого или задаваемого элемента.</span><span class="sxs-lookup"><span data-stu-id="0b90f-262">The zero-based index of the item to get or set.</span></span></param>
        <summary><span data-ttu-id="0b90f-263">Возвращает или задает элемент, расположенный в коллекции по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="0b90f-263">Gets or sets an item from the collection at a specified index.</span></span></summary>
        <value><span data-ttu-id="0b90f-264">Элемент, расположенный по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="0b90f-264">The element at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0b90f-265">Коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-265">The collection is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0b90f-266"><paramref name="value" /> не является объектом <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-266"><paramref name="value" /> is not a <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0b90f-267">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="0b90f-267"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="0b90f-268">-или-</span><span class="sxs-lookup"><span data-stu-id="0b90f-268">-or-</span></span> 
 <span data-ttu-id="0b90f-269">Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.ComponentModel.EventDescriptorCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="0b90f-269"><paramref name="index" /> is equal to or greater than <see cref="P:System.ComponentModel.EventDescriptorCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b90f-270">Элемент, который нужно удалить из коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-270">The item to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="0b90f-271">Удаляет первое вхождение указанного значения из коллекции.</span><span class="sxs-lookup"><span data-stu-id="0b90f-271">Removes the first occurrence of a specified value from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0b90f-272">Коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-272">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0b90f-273">Отсчитываемый от нуля индекс удаляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="0b90f-273">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="0b90f-274">Удаляет элемент с указанным индексом.</span><span class="sxs-lookup"><span data-stu-id="0b90f-274">Removes the item at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0b90f-275">Коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0b90f-275">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
