<Type Name="VersionConverter" FullName="System.ComponentModel.VersionConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a45c0f75dbf0d939bfecbc09e716cb8f8a452ad3" /><Meta Name="ms.sourcegitcommit" Value="385ff23cc00fe9aa1c93460c62603b45c2041d0b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/22/2019" /><Meta Name="ms.locfileid" Value="74387017" /></Metadata><TypeSignature Language="C#" Value="public class VersionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VersionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.VersionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class VersionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class VersionConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type VersionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ada26-101">Предоставляет преобразователь типов для преобразования объектов <see cref="T:System.Version" /> в прочие представления и обратно.</span><span class="sxs-lookup"><span data-stu-id="ada26-101">Provides a type converter to convert <see cref="T:System.Version" /> objects to and from various other representations.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VersionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.VersionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VersionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ada26-102">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.VersionConverter" />.</span><span class="sxs-lookup"><span data-stu-id="ada26-102">Initializes a new instance of the <see cref="T:System.ComponentModel.VersionConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.VersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="versionConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ada26-103">Объект, предоставляющий контекстную информацию.</span><span class="sxs-lookup"><span data-stu-id="ada26-103">An object that provides contextual information.</span></span></param>
        <param name="sourceType"><span data-ttu-id="ada26-104">Тип преобразуемого объекта.</span><span class="sxs-lookup"><span data-stu-id="ada26-104">The type of the object to be converted.</span></span></param>
        <summary><span data-ttu-id="ada26-105">Возвращает значение, показывающее, может ли этот преобразователь преобразовать объект заданного исходного типа в <see cref="T:System.Version" />.</span><span class="sxs-lookup"><span data-stu-id="ada26-105">Gets a value indicating whether this converter can convert an object in the given source type to a <see cref="T:System.Version" />.</span></span></summary>
        <returns><span data-ttu-id="ada26-106">Значение <see langword="true" />, если этот преобразователь может преобразовать `sourceType` в <see cref="T:System.Version" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ada26-106"><see langword="true" /> if this converter can convert `sourceType` to a <see cref="T:System.Version" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.VersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="versionConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ada26-107">Объект, предоставляющий контекстную информацию.</span><span class="sxs-lookup"><span data-stu-id="ada26-107">An object that provides contextual information.</span></span></param>
        <param name="destinationType"><span data-ttu-id="ada26-108">Тип целевого объекта для преобразования.</span><span class="sxs-lookup"><span data-stu-id="ada26-108">The target type for the conversion.</span></span></param>
        <summary><span data-ttu-id="ada26-109">Возвращает значение, указывающее, может ли данный преобразователь преобразовать объект с помощью контекста в заданный конечный тип.</span><span class="sxs-lookup"><span data-stu-id="ada26-109">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span></span></summary>
        <returns><span data-ttu-id="ada26-110">Значение <see langword="true" />, если преобразователь может преобразовать объект в заданный конечный тип; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ada26-110"><see langword="true" /> if the converter can convert an object to the given destination type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.VersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="versionConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ada26-111">Объект, предоставляющий контекстную информацию.</span><span class="sxs-lookup"><span data-stu-id="ada26-111">An object that provides contextual information.</span></span></param>
        <param name="culture"><span data-ttu-id="ada26-112">Язык и региональные параметры, используемые для преобразования.</span><span class="sxs-lookup"><span data-stu-id="ada26-112">The culture to use for the conversion.</span></span></param>
        <param name="value"><span data-ttu-id="ada26-113">Значение, которое необходимо преобразовать в тип <see cref="T:System.Version" />.</span><span class="sxs-lookup"><span data-stu-id="ada26-113">The value to convert to a <see cref="T:System.Version" />.</span></span></param>
        <summary><span data-ttu-id="ada26-114">Преобразует указанный объект в <see cref="T:System.Version" />.</span><span class="sxs-lookup"><span data-stu-id="ada26-114">Converts the specified object to a <see cref="T:System.Version" />.</span></span></summary>
        <returns><span data-ttu-id="ada26-115">Значение <paramref name="value" />, преобразованное в <see cref="T:System.Version" />.</span><span class="sxs-lookup"><span data-stu-id="ada26-115"><paramref name="value" /> converted to a <see cref="T:System.Version" /> value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="ada26-116">Параметр <paramref name="value" /> не является допустимой строкой <see cref="T:System.Version" />.</span><span class="sxs-lookup"><span data-stu-id="ada26-116"><paramref name="value" /> is not a valid <see cref="T:System.Version" /> string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.VersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="versionConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ada26-117">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="ada26-117">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="ada26-118">Язык и региональные параметры, которые предоставляют сведения о форматировании для преобразования.</span><span class="sxs-lookup"><span data-stu-id="ada26-118">The culture that supplies formatting information for the conversion.</span></span></param>
        <param name="value"><span data-ttu-id="ada26-119">Преобразуемое значение.</span><span class="sxs-lookup"><span data-stu-id="ada26-119">The value to be converted.</span></span></param>
        <param name="destinationType"><span data-ttu-id="ada26-120">Тип, в который преобразуется параметр значения.</span><span class="sxs-lookup"><span data-stu-id="ada26-120">The type to convert the value parameter to.</span></span></param>
        <summary><span data-ttu-id="ada26-121">Преобразует указанное значение в конечный тип с использованием заданного контекста и аргументов.</span><span class="sxs-lookup"><span data-stu-id="ada26-121">Converts the specified value to the specified destination type using the specified context and arguments.</span></span></summary>
        <returns><span data-ttu-id="ada26-122">Объект, представляющий преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="ada26-122">An object that represents the converted value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.VersionConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool" Usage="versionConverter.IsValid (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ada26-123">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="ada26-123">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="ada26-124">Объект, допустимость которого требуется проверить.</span><span class="sxs-lookup"><span data-stu-id="ada26-124">The object to test for validity.</span></span></param>
        <summary><span data-ttu-id="ada26-125">Возвращает значение, показывающее, допустимо ли данное значение для этого типа и для заданного контекста.</span><span class="sxs-lookup"><span data-stu-id="ada26-125">Returns a value that indicates whether the given value object is valid for this type and for the specified context.</span></span></summary>
        <returns><span data-ttu-id="ada26-126">Значение <see langword="true" />, если указанное значение является допустимым для данного объекта; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ada26-126"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>
