<Type Name="AsyncOperationManager" FullName="System.ComponentModel.AsyncOperationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0758038abe314d7edf4ae6dd21fb9aae6a993bd" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63898417" /></Metadata><TypeSignature Language="C#" Value="public static class AsyncOperationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AsyncOperationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncOperationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type AsyncOperationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="590bf-101">Обеспечивает управление параллельным выполнением для классов, поддерживающих асинхронные вызовы метода.</span><span class="sxs-lookup"><span data-stu-id="590bf-101">Provides concurrency management for classes that support asynchronous method calls.</span></span> <span data-ttu-id="590bf-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="590bf-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590bf-103">Если ваш класс должен обеспечивать асинхронное поведение в соответствии с [Обзор асинхронной модели на основе событий](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), возникнет ряд проблем управления параллелизмом.</span><span class="sxs-lookup"><span data-stu-id="590bf-103">If your class needs to provide asynchronous behavior according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you will encounter a number of concurrency management issues.</span></span> <span data-ttu-id="590bf-104">Среди них — требование, чтобы убедиться, что обработчики событий вызываются из потока или контекста, соответствующего модели приложения (например, приложения Windows Forms, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] приложений, консольные приложения и т. д.).</span><span class="sxs-lookup"><span data-stu-id="590bf-104">Among these is the requirement to ensure that event handlers are called on a thread or context that is appropriate for the application model (for example, Windows Forms applications, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applications, console applications, and so on).</span></span> <span data-ttu-id="590bf-105"><xref:System.ComponentModel.AsyncOperationManager> Предоставляет удобный способ создать класс, который будет правильно работать в группе все модели приложений, поддерживаемых [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="590bf-105">The <xref:System.ComponentModel.AsyncOperationManager> provides a convenient way to create a class that runs properly under all application models supported by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="590bf-106"><xref:System.ComponentModel.AsyncOperationManager> Класса содержит один метод <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, который возвращает <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> , можно использовать для контроля длительности конкретной асинхронной задачи.</span><span class="sxs-lookup"><span data-stu-id="590bf-106">The <xref:System.ComponentModel.AsyncOperationManager> class has one method, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, which returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that can be used to track the duration of a particular asynchronous task.</span></span> <span data-ttu-id="590bf-107"><xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> Для задачи может использоваться для оповещения клиентов, когда задача завершается.</span><span class="sxs-lookup"><span data-stu-id="590bf-107">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for a task can be used to alert clients when a task completes.</span></span> <span data-ttu-id="590bf-108">Он может также использоваться для передачи обновлений хода выполнения и добавочных результатов без завершения операции.</span><span class="sxs-lookup"><span data-stu-id="590bf-108">It can also be used to post progress updates and incremental results without terminating the operation.</span></span>  
  
 <span data-ttu-id="590bf-109">Дополнительные сведения о реализации асинхронных классов см. в разделе [реализации асинхронной модели на основе событий](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="590bf-109">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590bf-110">В следующем примере кода показано использование <xref:System.ComponentModel.AsyncOperationManager> класс, чтобы создать класс, который поддерживает асинхронные операции для любой модели приложения.</span><span class="sxs-lookup"><span data-stu-id="590bf-110">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager> class to create a class that supports asynchronous operations for any application model.</span></span> <span data-ttu-id="590bf-111">Показано, как реализовать класс, который проверяет номер, чтобы определить, является ли оно простым.</span><span class="sxs-lookup"><span data-stu-id="590bf-111">It shows how to implement a class that tests a number to determine whether it is prime.</span></span> <span data-ttu-id="590bf-112">Это вычисление может занять много времени, поэтому оно выполняется в отдельном потоке.</span><span class="sxs-lookup"><span data-stu-id="590bf-112">This calculation can be time consuming, so it is done on a separate thread.</span></span> <span data-ttu-id="590bf-113">Отчеты о ходе выполнения, добавочных результатов и уведомлений о завершении обрабатываются <xref:System.ComponentModel.AsyncOperation> класс, который гарантирует, что обработчики событий клиента вызываются в правильном потоке или контексте.</span><span class="sxs-lookup"><span data-stu-id="590bf-113">Progress reports, incremental results, and completion notifications are handled by the <xref:System.ComponentModel.AsyncOperation> class, which ensures that the client's event handlers are called on the proper thread or context.</span></span>  
  
 <span data-ttu-id="590bf-114">Полный листинг кода, см. в разделе [как: Реализация компонента, поддерживающего асинхронную модель на основе событий](https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="590bf-114">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="590bf-115">Полный листинг кода для клиентской формы, см. в разделе [как: Реализация клиента асинхронной модели на основе событий](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="590bf-115">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa"><span data-ttu-id="590bf-116">Реализация асинхронной модели, основанной на событиях</span><span class="sxs-lookup"><span data-stu-id="590bf-116">Implementing the Event-based Asynchronous Pattern</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="590bf-117">Рекомендации по работе с потоками</span><span class="sxs-lookup"><span data-stu-id="590bf-117">Managed Threading Best Practices</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CreateOperation">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AsyncOperation CreateOperation (object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AsyncOperation CreateOperation(object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOperation (userSuppliedState As Object) As AsyncOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AsyncOperation ^ CreateOperation(System::Object ^ userSuppliedState);" />
      <MemberSignature Language="F#" Value="static member CreateOperation : obj -&gt; System.ComponentModel.AsyncOperation" Usage="System.ComponentModel.AsyncOperationManager.CreateOperation userSuppliedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userSuppliedState"><span data-ttu-id="590bf-118">Объект, используемый для связи элемента состояния клиента, например идентификатора задачи, с конкретной асинхронной операцией.</span><span class="sxs-lookup"><span data-stu-id="590bf-118">An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="590bf-119">Возвращает объект <see cref="T:System.ComponentModel.AsyncOperation" /> для контроля длительности конкретной асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="590bf-119">Returns an <see cref="T:System.ComponentModel.AsyncOperation" /> for tracking the duration of a particular asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="590bf-120">Объект <see cref="T:System.ComponentModel.AsyncOperation" />, который можно использовать для контроля длительности вызова асинхронного метода.</span><span class="sxs-lookup"><span data-stu-id="590bf-120">An <see cref="T:System.ComponentModel.AsyncOperation" /> that you can use to track the duration of an asynchronous method invocation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590bf-121"><xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> Возвращает метод <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> , можно использовать для контроля длительности конкретной асинхронной операции и оповещать модели приложения, после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="590bf-121">The <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that you can use to track the duration of a particular asynchronous operation and to alert the application model when the operation completes.</span></span> <span data-ttu-id="590bf-122">Его также можно использовать для передачи обновлений хода выполнения и добавочных результатов без завершения операции.</span><span class="sxs-lookup"><span data-stu-id="590bf-122">You can also use it to post progress updates and incremental results without terminating the operation.</span></span> <span data-ttu-id="590bf-123"><xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> Правильно упаковывает и передает эти вызовы в правильном потоке или контексте для модели приложения.</span><span class="sxs-lookup"><span data-stu-id="590bf-123">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> will correctly marshal these calls to the appropriate thread or context for the application model.</span></span>  
  
 <span data-ttu-id="590bf-124">Если при реализации класса, поддерживающего асинхронную модель на основе событий, ваш класс должен вызывать <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> каждый раз вашей *имя_метода* `Async` вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="590bf-124">If you implement a class that supports the Event-based Asynchronous Pattern, your class should call <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> each time your *MethodName*`Async` method is called.</span></span> <span data-ttu-id="590bf-125">Можно использовать клиентское приложение, которое вызывает метод `userSuppliedState` параметр для уникальной идентификации каждого вызова, чтобы различать события, формируемые при выполнении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="590bf-125">The client application that makes calls to the method can use the `userSuppliedState` parameter to uniquely identify each invocation, so as to distinguish events raised during the execution of the asynchronous operation.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="590bf-126">Код клиента необходимо предоставить уникальное значение для `userSuppliedState` параметра.</span><span class="sxs-lookup"><span data-stu-id="590bf-126">Client code must provide a unique value for the `userSuppliedState` parameter.</span></span> <span data-ttu-id="590bf-127">Неуникальные идентификаторы задач может привести к реализации неправильно сообщать о ходе выполнения и другие события.</span><span class="sxs-lookup"><span data-stu-id="590bf-127">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="590bf-128">Код должен проверить-уникального идентификатора задачи и вызывать <xref:System.ArgumentException?displayProperty=nameWithType> если она будет обнаружена.</span><span class="sxs-lookup"><span data-stu-id="590bf-128">Your code should check for a non-unique task ID and throw an <xref:System.ArgumentException?displayProperty=nameWithType> if one is detected.</span></span>  
  
 <span data-ttu-id="590bf-129">Ваш код должен отслеживать каждый <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> возвращаемые <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> и использовать объект в соответствующей базовой асинхронной операции для публикации обновлений и завершить операцию.</span><span class="sxs-lookup"><span data-stu-id="590bf-129">Your code should track every <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> returned by <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> and use the object in the corresponding underlying asynchronous operation to post updates and terminate the operation.</span></span> <span data-ttu-id="590bf-130">Такое отслеживание может быть сложнее, чем передача <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> как параметр вместе с делегатами.</span><span class="sxs-lookup"><span data-stu-id="590bf-130">This tracking can be as simple as passing the <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> as a parameter among delegates.</span></span> <span data-ttu-id="590bf-131">В более сложных схемах, ваш класс может поддерживать коллекцию <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> объекты, добавление объектов, при запуске задач и их удаления, когда задача завершена или отменена.</span><span class="sxs-lookup"><span data-stu-id="590bf-131">In more sophisticated designs, your class can maintain a collection of <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objects, adding objects when tasks are started and removing them when tasks are completed or canceled.</span></span> <span data-ttu-id="590bf-132">Такой подход позволяет на наличие уникальные `userSuppliedState` параметра значения, и является методом, следует использовать при работе с классами, которые поддерживают несколько одновременных вызовов.</span><span class="sxs-lookup"><span data-stu-id="590bf-132">This approach allows you to check for unique `userSuppliedState` parameter values, and is the method you should use when working with classes that support multiple concurrent invocations.</span></span>  
  
 <span data-ttu-id="590bf-133">Дополнительные сведения о реализации асинхронных классов см. в разделе [реализации асинхронной модели на основе событий](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="590bf-133">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590bf-134">В следующем примере кода показано использование <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> метод для создания <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> для контроля длительности асинхронных операций.</span><span class="sxs-lookup"><span data-stu-id="590bf-134">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for tracking the duration of asynchronous operations.</span></span> <span data-ttu-id="590bf-135">Данный пример кода является частью большего примера для <xref:System.ComponentModel.AsyncOperationManager> класса.</span><span class="sxs-lookup"><span data-stu-id="590bf-135">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
        <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa"><span data-ttu-id="590bf-136">Реализация асинхронной модели, основанной на событиях</span><span class="sxs-lookup"><span data-stu-id="590bf-136">Implementing the Event-based Asynchronous Pattern</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="590bf-137">Рекомендации по работе с потоками</span><span class="sxs-lookup"><span data-stu-id="590bf-137">Managed Threading Best Practices</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public static System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext with get, set" Usage="System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590bf-138">Получает или задает контекст синхронизации для асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="590bf-138">Gets or sets the synchronization context for the asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="590bf-139">Контекст синхронизации для асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="590bf-139">The synchronization context for the asynchronous operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590bf-140">Реализация по умолчанию является реализацией свободных потоков.</span><span class="sxs-lookup"><span data-stu-id="590bf-140">The default implementation is the free-threaded implementation.</span></span>  
  
 <span data-ttu-id="590bf-141">Следует задать поток <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> свойства `null` освобождать фабрики свободнопоточный в том случае, если это делается, в противном случае никогда не удаляется его фабрики.</span><span class="sxs-lookup"><span data-stu-id="590bf-141">A thread should set the <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> property to `null` to release the free-threaded factory when it is done, or else its factory will never be disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="590bf-142">для настройки контекста синхронизации.</span><span class="sxs-lookup"><span data-stu-id="590bf-142">for setting the synchronization context.</span></span> <span data-ttu-id="590bf-143">Значение запроса: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="590bf-143">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="590bf-144">Связанное состояние:</span><span class="sxs-lookup"><span data-stu-id="590bf-144">Associated state:</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>