<Type Name="BackgroundWorker" FullName="System.ComponentModel.BackgroundWorker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27c562ecd887d8e5320be4d49056a5c041642f82" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73374627" /></Metadata><TypeSignature Language="C#" Value="public class BackgroundWorker : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackgroundWorker extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.BackgroundWorker" />
  <TypeSignature Language="VB.NET" Value="Public Class BackgroundWorker&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class BackgroundWorker : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type BackgroundWorker = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
      <AttributeName>System.ComponentModel.DefaultEvent("DoWork")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0c4e2-101">Выполняет операцию в отдельном потоке.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-101">Executes an operation on a separate thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-102">Класс <xref:System.ComponentModel.BackgroundWorker> позволяет выполнять операцию в отдельном выделенном потоке.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-102">The <xref:System.ComponentModel.BackgroundWorker> class allows you to run an operation on a separate, dedicated thread.</span></span> <span data-ttu-id="0c4e2-103">Длительные операции, такие как загрузка и транзакции базы данных, могут привести к тому, что пользовательский интерфейс будет выглядеть так, будто он перестает отвечать на запросы во время работы.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-103">Time-consuming operations like downloads and database transactions can cause your user interface (UI) to seem as though it has stopped responding while they are running.</span></span> <span data-ttu-id="0c4e2-104">Если вам нужен пользовательский интерфейс для реагирования и вы столкнулись с долгими задержками, связанными с такими операциями, класс <xref:System.ComponentModel.BackgroundWorker> предоставляет удобное решение.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-104">When you want a responsive UI and you are faced with long delays associated with such operations, the <xref:System.ComponentModel.BackgroundWorker> class provides a convenient solution.</span></span>  
  
 <span data-ttu-id="0c4e2-105">Чтобы выполнить трудоемкую операцию в фоновом режиме, создайте <xref:System.ComponentModel.BackgroundWorker> и прослушайте события, которые сообщают о ходе выполнения операции и подают сигнал о завершении операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-105">To execute a time-consuming operation in the background, create a <xref:System.ComponentModel.BackgroundWorker> and listen for events that report the progress of your operation and signal when your operation is finished.</span></span> <span data-ttu-id="0c4e2-106">Можно создать <xref:System.ComponentModel.BackgroundWorker> программным способом или перетащить его на форму с вкладки **компоненты** **панели элементов**.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-106">You can create the <xref:System.ComponentModel.BackgroundWorker> programmatically or you can drag it onto your form from the **Components** tab of the **Toolbox**.</span></span> <span data-ttu-id="0c4e2-107">Если вы создадите <xref:System.ComponentModel.BackgroundWorker> в конструктор Windows Forms, он появится в области компонентов, а его свойства будут отображаться в окно свойств.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-107">If you create the <xref:System.ComponentModel.BackgroundWorker> in the Windows Forms Designer, it will appear in the Component Tray, and its properties will be displayed in the Properties window.</span></span>  
  
 <span data-ttu-id="0c4e2-108">Чтобы настроить фоновую операцию, добавьте обработчик событий для события <xref:System.ComponentModel.BackgroundWorker.DoWork>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-108">To set up for a background operation, add an event handler for the <xref:System.ComponentModel.BackgroundWorker.DoWork> event.</span></span> <span data-ttu-id="0c4e2-109">Вызовите операцию, требующую много времени, в этом обработчике событий.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-109">Call your time-consuming operation in this event handler.</span></span> <span data-ttu-id="0c4e2-110">Чтобы начать операцию, вызовите <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-110">To start the operation, call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span> <span data-ttu-id="0c4e2-111">Чтобы получать уведомления об обновлениях хода выполнения, Обрабатывайте событие <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-111">To receive notifications of progress updates, handle the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="0c4e2-112">Чтобы получить уведомление о завершении операции, обработайте событие <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-112">To receive a notification when the operation is completed, handle the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c4e2-113">Необходимо следить за тем, чтобы не манипулировать объектами пользовательского интерфейса в обработчике событий <xref:System.ComponentModel.BackgroundWorker.DoWork>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-113">You must be careful not to manipulate any user-interface objects in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span> <span data-ttu-id="0c4e2-114">Вместо этого следует взаимодействовать с пользовательским интерфейсом с помощью событий <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> и <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-114">Instead, communicate to the user interface through the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> and <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> events.</span></span>  
>   
>  <span data-ttu-id="0c4e2-115"><xref:System.ComponentModel.BackgroundWorker>ные события не маршалируются в границах <xref:System.AppDomain>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-115"><xref:System.ComponentModel.BackgroundWorker> events are not marshaled across <xref:System.AppDomain> boundaries.</span></span> <span data-ttu-id="0c4e2-116">Не используйте компонент <xref:System.ComponentModel.BackgroundWorker> для выполнения многопоточных операций более чем в одном <xref:System.AppDomain>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-116">Do not use a <xref:System.ComponentModel.BackgroundWorker> component to perform multithreaded operations in more than one <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="0c4e2-117">Если для фоновой операции требуется параметр, вызовите <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> с помощью параметра.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-117">If your background operation requires a parameter, call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> with your parameter.</span></span> <span data-ttu-id="0c4e2-118">В обработчике <xref:System.ComponentModel.BackgroundWorker.DoWork> событий можно извлечь параметр из свойства <xref:System.ComponentModel.DoWorkEventArgs.Argument%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-118">Inside the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler, you can extract the parameter from the <xref:System.ComponentModel.DoWorkEventArgs.Argument%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="0c4e2-119">Дополнительные сведения о <xref:System.ComponentModel.BackgroundWorker> см. в статье [Практическое руководство. Фоновое выполнение операции](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).</span><span class="sxs-lookup"><span data-stu-id="0c4e2-119">For more information about <xref:System.ComponentModel.BackgroundWorker>, see [How to: Run an Operation in the Background](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c4e2-120">В следующем примере кода показаны основы класса <xref:System.ComponentModel.BackgroundWorker> для асинхронного выполнения длительной операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-120">The following code example demonstrates the basics of the <xref:System.ComponentModel.BackgroundWorker> class for executing a time-consuming operation asynchronously.</span></span> <span data-ttu-id="0c4e2-121">На следующем рисунке показан пример выходных данных.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-121">The following illustration shows an example of the output.</span></span>  
  
 <span data-ttu-id="0c4e2-122">![Простой пример для BackgroundWorker](~/add/media/backgroundworker-simple.png "Простой пример компонента BackgroundWorker")</span><span class="sxs-lookup"><span data-stu-id="0c4e2-122">![BackgroundWorker simple example](~/add/media/backgroundworker-simple.png "BackgroundWorker simple example")</span></span>  
  
 <span data-ttu-id="0c4e2-123">Чтобы попробовать этот код, создайте приложение Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-123">To try this code, create a Windows Forms application.</span></span> <span data-ttu-id="0c4e2-124">Добавьте элемент управления <xref:System.Windows.Forms.Label> с именем `resultLabel` и добавьте два элемента управления <xref:System.Windows.Forms.Button> с именами `startAsyncButton` и `cancelAsyncButton`.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-124">Add a <xref:System.Windows.Forms.Label> control named `resultLabel` and add two <xref:System.Windows.Forms.Button> controls named `startAsyncButton` and `cancelAsyncButton`.</span></span> <span data-ttu-id="0c4e2-125">Создайте обработчики событий <xref:System.Windows.Forms.Control.Click> для обеих кнопок.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-125">Create <xref:System.Windows.Forms.Control.Click> event handlers for both buttons.</span></span> <span data-ttu-id="0c4e2-126">На вкладке **компоненты** панели элементов добавьте компонент <xref:System.ComponentModel.BackgroundWorker> с именем `backgroundWorker1`.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-126">From the **Components** tab of the Toolbox, add a <xref:System.ComponentModel.BackgroundWorker> component named `backgroundWorker1`.</span></span> <span data-ttu-id="0c4e2-127">Создание <xref:System.ComponentModel.BackgroundWorker.DoWork>, <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>и <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> обработчиков событий для <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-127">Create <xref:System.ComponentModel.BackgroundWorker.DoWork>, <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>, and <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handlers for the <xref:System.ComponentModel.BackgroundWorker>.</span></span> <span data-ttu-id="0c4e2-128">В коде для формы замените существующий код следующим кодом.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-128">In the code for the form, replace the existing code with the following code.</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorkerSimple#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.componentmodel.backgroundworkersimple/cs/form1.cs#1)]
 [!code-vb[System.ComponentModel.BackgroundWorkerSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.componentmodel.backgroundworkersimple/vb/form1.vb#1)]  
  
 <span data-ttu-id="0c4e2-129">В следующем примере кода показано использование класса <xref:System.ComponentModel.BackgroundWorker> для асинхронного выполнения операции, требующей много времени.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-129">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker> class for executing a time-consuming operation asynchronously.</span></span> <span data-ttu-id="0c4e2-130">На следующем рисунке показан пример выходных данных.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-130">The following illustration shows an example of the output.</span></span>  
  
 <span data-ttu-id="0c4e2-131">![Пример последовательности Фибоначчи для BackgroundWorker](~/add/media/backgroundworker-fibonacci.png "Пример компонента BackgroundWorker с применением вычисления Фибоначчи")</span><span class="sxs-lookup"><span data-stu-id="0c4e2-131">![BackgroundWorker Fibonacci example](~/add/media/backgroundworker-fibonacci.png "BackgroundWorker Fibonacci example")</span></span>  
  
 <span data-ttu-id="0c4e2-132">Операция вычисляет выбранное число Фибоначчи, сообщает об обновлениях хода выполнения по мере выполнения вычисления и разрешает отмену ожидающего вычисления.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-132">The operation computes the selected Fibonacci number, reports progress updates as the calculation proceeds, and permits a pending calculation to be canceled.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#1)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#1)]
 [!code-vb[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-133">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-133">How to: Run an Operation in the Background</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="0c4e2-134">Рекомендации по работе с потоками</span><span class="sxs-lookup"><span data-stu-id="0c4e2-134">Managed Threading Best Practices</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-135">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-135">How to: Download a File in the Background</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackgroundWorker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BackgroundWorker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c4e2-136">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.BackgroundWorker" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-136">Initializes a new instance of the <see cref="T:System.ComponentModel.BackgroundWorker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-137">Этот конструктор инициализирует <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-137">This constructor initializes a <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-138">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-138">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-139">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-139">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="backgroundWorker.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c4e2-140">Запрашивает отмену отложенной фоновой операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-140">Requests cancellation of a pending background operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-141"><xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> отправляет запрос на завершение ожидающей операции в фоновом режиме и устанавливает для свойства <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-141"><xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> submits a request to terminate the pending background operation and sets the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="0c4e2-142">При вызове <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>в рабочем методе можно прекратить выполнение и выйти из него.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-142">When you call <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>, your worker method has an opportunity to stop its execution and exit.</span></span> <span data-ttu-id="0c4e2-143">Рабочий код должен периодически проверять свойство <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A>, чтобы определить, установлено ли для него значение `true`.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-143">The worker code should periodically check the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to see if it has been set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0c4e2-144">Имейте в виду, что код в обработчике событий <xref:System.ComponentModel.BackgroundWorker.DoWork> может завершить свою работу в ходе выполнения запроса на отмену, и ваш цикл опроса может пропускаться <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> заданным значением `true`.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-144">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="0c4e2-145">В этом случае <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> флаг <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> в обработчике событий <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> не будет установлен в значение `true`, даже если был сделан запрос на отмену.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-145">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="0c4e2-146">Такая ситуация называется состоянием *гонки* и является распространенной проблемой в многопоточном программировании.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-146">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="0c4e2-147">Дополнительные сведения о проблемах многопоточной разработки см. в разделе рекомендации по работе с [потоками](~/docs/standard/threading/managed-threading-best-practices.md).</span><span class="sxs-lookup"><span data-stu-id="0c4e2-147">For more information about multithreading design issues, see [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c4e2-148">В следующем примере кода показано использование метода <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> для отмены асинхронной ("фоновой") операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-148">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method to cancel an asynchronous ("background") operation.</span></span> <span data-ttu-id="0c4e2-149">Этот пример кода является частью большого примера, приведенного для класса <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-149">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#4)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#4)]
 [!code-vb[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0c4e2-150">Свойство <see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> имеет значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-150"><see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> is <see langword="false" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-151">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-151">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-152">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-152">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CancellationPending">
      <MemberSignature Language="C#" Value="public bool CancellationPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancellationPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.CancellationPending" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancellationPending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CancellationPending : bool" Usage="System.ComponentModel.BackgroundWorker.CancellationPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c4e2-153">Возвращает значение, показывающее, запросило ли приложение отмену фоновой операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-153">Gets a value indicating whether the application has requested cancellation of a background operation.</span></span></summary>
        <value><span data-ttu-id="0c4e2-154">Значение <see langword="true" />, если приложение запросило отмену фоновой операции; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-154"><see langword="true" /> if the application has requested cancellation of a background operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0c4e2-155">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-155">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-156">Если <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> `true`, то для <xref:System.ComponentModel.BackgroundWorker>был вызван метод <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-156">If <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> is `true`, then the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method has been called on the <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 <span data-ttu-id="0c4e2-157">Это свойство предназначено для использования рабочим потоком, который должен периодически проверять <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> и прерывать фоновую операцию, если для нее задано значение `true`.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-157">This property is meant for use by the worker thread, which should periodically check <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> and abort the background operation when it is set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c4e2-158">В следующем примере кода показано использование свойства <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> для запроса <xref:System.ComponentModel.BackgroundWorker> о состоянии отмены.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-158">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to query a <xref:System.ComponentModel.BackgroundWorker> about its cancellation state.</span></span> <span data-ttu-id="0c4e2-159">Этот пример кода является частью большого примера, приведенного для класса <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-159">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#8)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#8)]
 [!code-vb[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-160">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-160">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-161">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-161">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="backgroundWorker.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="backgroundWorker.Dispose disposing" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="backgroundWorker.Dispose disposing" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoWork">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.DoWorkEventHandler DoWork;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.DoWorkEventHandler DoWork" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.DoWork" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoWork As DoWorkEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::DoWorkEventHandler ^ DoWork;" />
      <MemberSignature Language="F#" Value="member this.DoWork : System.ComponentModel.DoWorkEventHandler " Usage="member this.DoWork : System.ComponentModel.DoWorkEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DoWorkEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c4e2-162">Возникает при вызове метода <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-162">Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" /> is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-163">Это событие возникает при вызове метода <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-163">This event is raised when you call the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method.</span></span> <span data-ttu-id="0c4e2-164">Здесь вы запускаете операцию, которая выполняет потенциально длительную работу.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-164">This is where you start the operation that performs the potentially time-consuming work.</span></span>  
  
 <span data-ttu-id="0c4e2-165">Код в обработчике событий <xref:System.ComponentModel.BackgroundWorker.DoWork> должен периодически проверять значение свойства <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> и прерывать операцию, если она `true`.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-165">Your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler should periodically check the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property value and abort the operation if it is `true`.</span></span> <span data-ttu-id="0c4e2-166">В этом случае можно установить флаг <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> в значение `true`, а флаг <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> в обработчике событий <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> будет иметь значение `true`.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-166">When this occurs, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag of <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> to `true`, and the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will be set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0c4e2-167">Имейте в виду, что код в обработчике событий <xref:System.ComponentModel.BackgroundWorker.DoWork> может завершить свою работу в ходе выполнения запроса на отмену, и ваш цикл опроса может пропускаться <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> заданным значением `true`.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-167">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="0c4e2-168">В этом случае <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> флаг <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> в обработчике событий <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> не будет установлен в значение `true`, даже если был сделан запрос на отмену.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-168">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="0c4e2-169">Такая ситуация называется состоянием *гонки* и является распространенной проблемой в многопоточном программировании.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-169">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="0c4e2-170">Дополнительные сведения о проблемах многопоточной разработки см. в разделе рекомендации по работе с [потоками](~/docs/standard/threading/managed-threading-best-practices.md).</span><span class="sxs-lookup"><span data-stu-id="0c4e2-170">For more information about multithreading design issues, see [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span></span>  
  
 <span data-ttu-id="0c4e2-171">Если операция дает результат, можно присвоить результат свойству <xref:System.ComponentModel.DoWorkEventArgs.Result%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-171">If your operation produces a result, you can assign the result to the <xref:System.ComponentModel.DoWorkEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0c4e2-172">Он будет доступен обработчику событий <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> в свойстве <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-172">This will be available to the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler in the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="0c4e2-173">Если операция создает исключение, которое не обрабатывается кодом, <xref:System.ComponentModel.BackgroundWorker> перехватывает исключение и передает его в обработчик событий <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted>, где он предоставляется как свойство <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-173">If the operation raises an exception that your code does not handle, the <xref:System.ComponentModel.BackgroundWorker> catches the exception and passes it into the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler, where it is exposed as the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0c4e2-174">Если вы используете отладчик Visual Studio, отладчик прервется в точке обработчика событий <xref:System.ComponentModel.BackgroundWorker.DoWork>, где возникло необработанное исключение.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-174">If you are running under the Visual Studio debugger, the debugger will break at the point in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler where the unhandled exception was raised.</span></span> <span data-ttu-id="0c4e2-175">Если у вас несколько <xref:System.ComponentModel.BackgroundWorker>, не следует ссылаться ни на один из них напрямую, так как это приведет к взаимосвязанию обработчика событий <xref:System.ComponentModel.BackgroundWorker.DoWork> с конкретным экземпляром <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-175">If you have more than one <xref:System.ComponentModel.BackgroundWorker>, you should not reference any of them directly, as this would couple your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler to a specific instance of <xref:System.ComponentModel.BackgroundWorker>.</span></span> <span data-ttu-id="0c4e2-176">Вместо этого необходимо получить доступ к <xref:System.ComponentModel.BackgroundWorker>, приведя параметр `sender` в обработчике событий <xref:System.ComponentModel.BackgroundWorker.DoWork>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-176">Instead, you should access your <xref:System.ComponentModel.BackgroundWorker> by casting the `sender` parameter in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span>  
  
 <span data-ttu-id="0c4e2-177">Необходимо следить за тем, чтобы не манипулировать объектами пользовательского интерфейса в обработчике событий <xref:System.ComponentModel.BackgroundWorker.DoWork>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-177">You must be careful not to manipulate any user-interface objects in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span> <span data-ttu-id="0c4e2-178">Вместо этого следует взаимодействовать с пользовательским интерфейсом через события <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-178">Instead, communicate to the user interface through the <xref:System.ComponentModel.BackgroundWorker> events.</span></span>  
  
 <span data-ttu-id="0c4e2-179">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0c4e2-179">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c4e2-180">В следующем примере кода показано использование события <xref:System.ComponentModel.BackgroundWorker.DoWork> для запуска асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-180">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.DoWork> event to start an asynchronous operation.</span></span> <span data-ttu-id="0c4e2-181">Этот пример кода является частью большого примера, приведенного для класса <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-181">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#5)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#5)]
 [!code-vb[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-182">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-182">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="0c4e2-183">Рекомендации по работе с потоками</span><span class="sxs-lookup"><span data-stu-id="0c4e2-183">Managed Threading Best Practices</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-184">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-184">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.ComponentModel.BackgroundWorker.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c4e2-185">Возвращает значение, показывающее, выполняет ли объект <see cref="T:System.ComponentModel.BackgroundWorker" /> асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-185">Gets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> is running an asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="0c4e2-186">Значение <see langword="true" />, если объект <see cref="T:System.ComponentModel.BackgroundWorker" /> выполняет асинхронную операцию; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-186"><see langword="true" />, if the <see cref="T:System.ComponentModel.BackgroundWorker" /> is running an asynchronous operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-187"><xref:System.ComponentModel.BackgroundWorker> запускает асинхронную операцию при вызове <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-187">The <xref:System.ComponentModel.BackgroundWorker> starts an asynchronous operation when you call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c4e2-188">В следующем примере кода показано, как использовать свойство <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> для ожидания завершения операции <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-188">The following code example demonstrates how to use the <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> property to wait for completion of a <xref:System.ComponentModel.BackgroundWorker> operation.</span></span> <span data-ttu-id="0c4e2-189">Этот пример кода является частью более крупного примера, описанного в разделе [как скачать файл в фоновом режиме](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span><span class="sxs-lookup"><span data-stu-id="0c4e2-189">This code example is part of a larger example described in [How to: Download a File in the Background](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="Overload:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-190">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-190">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-191">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-191">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDoWork">
      <MemberSignature Language="C#" Value="protected virtual void OnDoWork (System.ComponentModel.DoWorkEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoWork(class System.ComponentModel.DoWorkEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoWork (e As DoWorkEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoWork(System::ComponentModel::DoWorkEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoWork : System.ComponentModel.DoWorkEventArgs -&gt; unit&#xA;override this.OnDoWork : System.ComponentModel.DoWorkEventArgs -&gt; unit" Usage="backgroundWorker.OnDoWork e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.DoWorkEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0c4e2-192">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-192">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0c4e2-193">Вызывает событие <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-193">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProgressChanged (System.ComponentModel.ProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressChanged(class System.ComponentModel.ProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressChanged (e As ProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressChanged(System::ComponentModel::ProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProgressChanged : System.ComponentModel.ProgressChangedEventArgs -&gt; unit&#xA;override this.OnProgressChanged : System.ComponentModel.ProgressChangedEventArgs -&gt; unit" Usage="backgroundWorker.OnProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0c4e2-194">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-194">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0c4e2-195">Вызывает событие <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-195">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-196">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-196">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c4e2-197">Дополнительные сведения см. в разделе [Обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0c4e2-197">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="0c4e2-198">Метод <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-198">The <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0c4e2-199">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-199">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c4e2-200">В следующем примере кода показано использование метода <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> для сообщения о ходе выполнения асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-200">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> method to report the progress of an asynchronous operation.</span></span> <span data-ttu-id="0c4e2-201">Этот пример кода является частью большого примера, приведенного для класса <xref:System.ComponentModel.AsyncOperationManager>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-201">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#24)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#24)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0c4e2-202">При переопределении метода <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-202">When overriding <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-203">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-203">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-204">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-204">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRunWorkerCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRunWorkerCompleted (System.ComponentModel.RunWorkerCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRunWorkerCompleted(class System.ComponentModel.RunWorkerCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRunWorkerCompleted (e As RunWorkerCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRunWorkerCompleted(System::ComponentModel::RunWorkerCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventArgs -&gt; unit&#xA;override this.OnRunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventArgs -&gt; unit" Usage="backgroundWorker.OnRunWorkerCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.RunWorkerCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0c4e2-205">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-205">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="0c4e2-206">Вызывает событие <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-206">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-207">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-207">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c4e2-208">Дополнительные сведения см. в разделе [Обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0c4e2-208">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="0c4e2-209">Метод <xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-209">The <xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0c4e2-210">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-210">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0c4e2-211">При переопределении метода <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-211">When overriding <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-212">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-212">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-213">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-213">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ProgressChangedEventHandler ProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProgressChanged As ProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::ProgressChangedEventHandler ^ ProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ProgressChanged : System.ComponentModel.ProgressChangedEventHandler " Usage="member this.ProgressChanged : System.ComponentModel.ProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c4e2-214">Возникает при вызове метода <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-214">Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" /> is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-215">Это событие возникает при вызове метода <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-215">This event is raised when you call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method.</span></span>  
  
 <span data-ttu-id="0c4e2-216">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0c4e2-216">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c4e2-217">В следующем примере кода показано использование события <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> для сообщения о ходе асинхронной операции пользователю.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-217">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="0c4e2-218">Этот пример кода является частью большого примера, приведенного для класса <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-218">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#7)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#7)]
 [!code-vb[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-219">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-219">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-220">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-220">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReportProgress">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c4e2-221">Вызывает событие <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-221">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportProgress(int32 percentProgress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportProgress (percentProgress As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportProgress(int percentProgress);" />
      <MemberSignature Language="F#" Value="member this.ReportProgress : int -&gt; unit" Usage="backgroundWorker.ReportProgress percentProgress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentProgress" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percentProgress"><span data-ttu-id="0c4e2-222">Выполненный процент, от 0 до 100, фоновой операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-222">The percentage, from 0 to 100, of the background operation that is complete.</span></span></param>
        <summary><span data-ttu-id="0c4e2-223">Создает событие <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-223">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-224">Если требуется фоновая операция для получения сведений о ходе выполнения, можно вызвать метод <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A>, чтобы вызвать событие <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-224">If you need the background operation to report on its progress, you can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="0c4e2-225">Значение свойства <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> должно быть `true`или <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> выдаст исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-225">The <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property value must be `true`, or <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="0c4e2-226">Вы можете реализовать осмысленный способ измерения хода выполнения фоновой операции в процентах от общего количества выполненных задач.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-226">It is up to you to implement a meaningful way of measuring your background operation's progress as a percentage of the total task completed.</span></span>  
  
 <span data-ttu-id="0c4e2-227">Вызов метода <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> является асинхронным и возвращается немедленно.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-227">The call to the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method is asynchronous and returns immediately.</span></span> <span data-ttu-id="0c4e2-228">Обработчик событий <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> выполняется в потоке, который создал <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-228">The <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event handler executes on the thread that created the <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c4e2-229">В следующем примере кода показано использование метода <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> для сообщения о ходе асинхронной операции пользователю.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-229">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="0c4e2-230">Этот пример кода является частью большого примера, приведенного для класса <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-230">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#8)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#8)]
 [!code-vb[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0c4e2-231">Свойству <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> задано значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-231">The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> property is set to <see langword="false" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-232">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-232">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-233">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-233">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportProgress(int32 percentProgress, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportProgress (percentProgress As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportProgress(int percentProgress, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ReportProgress : int * obj -&gt; unit" Usage="backgroundWorker.ReportProgress (percentProgress, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentProgress" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="percentProgress"><span data-ttu-id="0c4e2-234">Выполненный процент, от 0 до 100, фоновой операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-234">The percentage, from 0 to 100, of the background operation that is complete.</span></span></param>
        <param name="userState"><span data-ttu-id="0c4e2-235">Уникальный объект <see cref="T:System.Object" />, показывающий пользовательское состояние.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-235">A unique <see cref="T:System.Object" /> indicating the user state.</span></span> <span data-ttu-id="0c4e2-236">Возвращается как свойство <see cref="P:System.ComponentModel.ProgressChangedEventArgs.UserState" /> для <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-236">Returned as the <see cref="P:System.ComponentModel.ProgressChangedEventArgs.UserState" /> property of the <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="0c4e2-237">Создает событие <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-237">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-238">Если требуется фоновая операция для получения сведений о ходе выполнения, можно вызвать метод <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A>, чтобы вызвать событие <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-238">If you need the background operation to report on its progress, you can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="0c4e2-239">Значение свойства <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> должно `true`, или <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> выдаст <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-239">The <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property value must `true`, or <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="0c4e2-240">Вы можете реализовать осмысленный способ измерения хода выполнения фоновой операции в процентах от общего количества выполненных задач.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-240">It is up to you to implement a meaningful way of measuring your background operation's progress as a percentage of the total task completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c4e2-241">В следующем примере кода показано использование метода <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> для сообщения о ходе асинхронной операции пользователю.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-241">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="0c4e2-242">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Windows.Forms.ToolStripProgressBar>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-242">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ToolStripProgressBar> class.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripProgressBar#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripProgressBar/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.ToolStripProgressBar#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripProgressBar/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0c4e2-243">Свойству <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> задано значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-243">The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> property is set to <see langword="false" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-244">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-244">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-245">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-245">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RunWorkerAsync">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c4e2-246">Запускает выполнение фоновой операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-246">Starts execution of a background operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RunWorkerAsync">
      <MemberSignature Language="C#" Value="public void RunWorkerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunWorkerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunWorkerAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunWorkerAsync();" />
      <MemberSignature Language="F#" Value="member this.RunWorkerAsync : unit -&gt; unit" Usage="backgroundWorker.RunWorkerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c4e2-247">Запускает выполнение фоновой операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-247">Starts execution of a background operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-248">Метод <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> отправляет запрос на запуск операции, выполняемой асинхронно.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-248">The <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method submits a request to start the operation running asynchronously.</span></span> <span data-ttu-id="0c4e2-249">При обслуживании запроса возникает событие <xref:System.ComponentModel.BackgroundWorker.DoWork>, которое, в свою очередь, начинает выполнение фоновой операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-249">When the request is serviced, the <xref:System.ComponentModel.BackgroundWorker.DoWork> event is raised, which in turn starts execution of your background operation.</span></span>  
  
 <span data-ttu-id="0c4e2-250">Если фоновая операция уже выполняется, вызов <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> снова вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-250">If the background operation is already running, calling <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> again will raise an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c4e2-251">В следующем примере кода показано использование метода <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> для запуска асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-251">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method to start an asynchronous operation.</span></span> <span data-ttu-id="0c4e2-252">Он является частью более крупного примера, описанного в разделе [как скачать файл в фоновом режиме](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span><span class="sxs-lookup"><span data-stu-id="0c4e2-252">It is part of a larger example described in [How to: Download a File in the Background](~/docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0c4e2-253">Свойство <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> имеет значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-253"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> is <see langword="true" />.</span></span></exception>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-254">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-254">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="0c4e2-255">Рекомендации по работе с потоками</span><span class="sxs-lookup"><span data-stu-id="0c4e2-255">Managed Threading Best Practices</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-256">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-256">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RunWorkerAsync">
      <MemberSignature Language="C#" Value="public void RunWorkerAsync (object argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunWorkerAsync(object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunWorkerAsync (argument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunWorkerAsync(System::Object ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RunWorkerAsync : obj -&gt; unit" Usage="backgroundWorker.RunWorkerAsync argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="0c4e2-257">Параметр, для использования фоновой операцией, выполняемой в обработчике событий <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-257">A parameter for use by the background operation to be executed in the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event handler.</span></span></param>
        <summary><span data-ttu-id="0c4e2-258">Запускает выполнение фоновой операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-258">Starts execution of a background operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-259">Метод <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> отправляет запрос на запуск операции, выполняемой асинхронно.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-259">The <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method submits a request to start the operation running asynchronously.</span></span> <span data-ttu-id="0c4e2-260">При обслуживании запроса возникает событие <xref:System.ComponentModel.BackgroundWorker.DoWork>, которое, в свою очередь, начинает выполнение фоновой операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-260">When the request is serviced, the <xref:System.ComponentModel.BackgroundWorker.DoWork> event is raised, which in turn starts execution of your background operation.</span></span>  
  
 <span data-ttu-id="0c4e2-261">Если для операции требуется параметр, его можно указать в качестве параметра `argument` для <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-261">If your operation requires a parameter, you can provide it as the `argument` parameter to <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span>  
  
 <span data-ttu-id="0c4e2-262">Если фоновая операция уже выполняется, вызов <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> снова вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-262">If the background operation is already running, calling <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> again will raise an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c4e2-263">В следующем примере кода показано использование метода <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> для запуска асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-263">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method to start an asynchronous operation.</span></span> <span data-ttu-id="0c4e2-264">Этот пример кода является частью большого примера, приведенного для класса <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-264">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#3)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#3)]
 [!code-vb[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0c4e2-265">Свойство <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> имеет значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-265"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> is <see langword="true" />.</span></span></exception>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-266">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-266">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-267">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-267">How to: Download a File in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="0c4e2-268">Рекомендации по работе с потоками</span><span class="sxs-lookup"><span data-stu-id="0c4e2-268">Managed Threading Best Practices</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RunWorkerCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RunWorkerCompleted As RunWorkerCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::RunWorkerCompletedEventHandler ^ RunWorkerCompleted;" />
      <MemberSignature Language="F#" Value="member this.RunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventHandler " Usage="member this.RunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RunWorkerCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c4e2-269">Возникает, когда выполнение фоновой операции завершено, отменено или вызвало исключение.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-269">Occurs when the background operation has completed, has been canceled, or has raised an exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-270">Это событие возникает, когда обработчик событий <xref:System.ComponentModel.BackgroundWorker.DoWork> возвращает.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-270">This event is raised when the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler returns.</span></span>  
  
 <span data-ttu-id="0c4e2-271">Если операция завершается успешно и ее результат назначается в обработчике событий <xref:System.ComponentModel.BackgroundWorker.DoWork>, можно получить доступ к результату через свойство <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-271">If the operation completes successfully and its result is assigned in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler, you can access the result through the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="0c4e2-272">Свойство <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> указывает, что операция была вызвана исключением.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-272">The <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indicates that an exception was thrown by the operation.</span></span>  
  
 <span data-ttu-id="0c4e2-273">Свойство <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> указывает, был ли запрос отмены обработан фоновой операцией.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-273">The <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indicates whether a cancellation request was processed by the background operation.</span></span> <span data-ttu-id="0c4e2-274">Если код в обработчике событий <xref:System.ComponentModel.BackgroundWorker.DoWork> обнаруживает запрос на отмену путем проверки флага <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> и установки флага <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> для <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> на `true`, <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> также будет установлено `true`.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-274">If your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler detects a cancellation request by checking the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> flag and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag of <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> to `true`, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> also will be set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0c4e2-275">Имейте в виду, что код в обработчике событий <xref:System.ComponentModel.BackgroundWorker.DoWork> может завершить свою работу в ходе выполнения запроса на отмену, и ваш цикл опроса может пропускаться <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> заданным значением `true`.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-275">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="0c4e2-276">В этом случае <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> флаг <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> в обработчике событий <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> не будет установлен в значение `true`, даже если был сделан запрос на отмену.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-276">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="0c4e2-277">Такая ситуация называется состоянием *гонки* и является распространенной проблемой в многопоточном программировании.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-277">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="0c4e2-278">Дополнительные сведения о проблемах многопоточной разработки см. в разделе рекомендации по работе с [потоками](~/docs/standard/threading/managed-threading-best-practices.md).</span><span class="sxs-lookup"><span data-stu-id="0c4e2-278">For more information about multithreading design issues, see [Managed Threading Best Practices](~/docs/standard/threading/managed-threading-best-practices.md).</span></span>  
  
 <span data-ttu-id="0c4e2-279">Обработчик событий <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> должен всегда проверять свойства <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=nameWithType> и <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A?displayProperty=nameWithType>, прежде чем обращаться к свойству <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-279">Your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler should always check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A?displayProperty=nameWithType> properties before accessing the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0c4e2-280">Если было вызвано исключение или операция была отменена, доступ к свойству <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-280">If an exception was raised or if the operation was canceled, accessing the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property raises an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c4e2-281">В следующем примере кода показано использование события <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> для управления результатом асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-281">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event to handle the result of an asynchronous operation.</span></span> <span data-ttu-id="0c4e2-282">Этот пример кода является частью большого примера, приведенного для класса <xref:System.ComponentModel.BackgroundWorker>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-282">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#6)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#6)]
 [!code-vb[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-283">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-283">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-284">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-284">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WorkerReportsProgress">
      <MemberSignature Language="C#" Value="public bool WorkerReportsProgress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WorkerReportsProgress" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkerReportsProgress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WorkerReportsProgress { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WorkerReportsProgress : bool with get, set" Usage="System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c4e2-285">Получает или задает значение, показывающее, может ли объект <see cref="T:System.ComponentModel.BackgroundWorker" /> сообщать о ходе выполнения.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-285">Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> can report progress updates.</span></span></summary>
        <value><span data-ttu-id="0c4e2-286">Значение <see langword="true" />, если объект <see cref="T:System.ComponentModel.BackgroundWorker" /> поддерживает обновление сведений о ходе выполнения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-286"><see langword="true" /> if the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports progress updates; otherwise <see langword="false" />.</span></span> <span data-ttu-id="0c4e2-287">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-287">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-288">Задайте для свойства <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> значение `true`, если требуется, чтобы <xref:System.ComponentModel.BackgroundWorker> поддерживала обновления хода выполнения.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-288">Set the <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property to `true` if you want the <xref:System.ComponentModel.BackgroundWorker> to support progress updates.</span></span> <span data-ttu-id="0c4e2-289">Если это свойство имеет значение `true`, Пользовательский код может вызвать метод <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A>, чтобы вызвать событие <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-289">When this property is `true`, user code can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-290">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-290">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-291">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-291">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WorkerSupportsCancellation">
      <MemberSignature Language="C#" Value="public bool WorkerSupportsCancellation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WorkerSupportsCancellation" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkerSupportsCancellation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WorkerSupportsCancellation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WorkerSupportsCancellation : bool with get, set" Usage="System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c4e2-292">Получает или задает значение, показывающее, поддерживает ли объект <see cref="T:System.ComponentModel.BackgroundWorker" /> отмену асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-292">Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports asynchronous cancellation.</span></span></summary>
        <value><span data-ttu-id="0c4e2-293">Значение <see langword="true" />, если объект <see cref="T:System.ComponentModel.BackgroundWorker" /> поддерживает отмену; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-293"><see langword="true" /> if the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports cancellation; otherwise <see langword="false" />.</span></span> <span data-ttu-id="0c4e2-294">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-294">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c4e2-295">Задайте для свойства <xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A> значение `true`, если требуется, чтобы <xref:System.ComponentModel.BackgroundWorker> поддерживал отмену.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-295">Set the <xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A> property to `true` if you want the <xref:System.ComponentModel.BackgroundWorker> to support cancellation.</span></span> <span data-ttu-id="0c4e2-296">Если это свойство имеет значение `true`, можно вызвать метод <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>, чтобы прервать фоновую операцию.</span><span class="sxs-lookup"><span data-stu-id="0c4e2-296">When this property is `true`, you can call the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method to interrupt a background operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
        <related type="Article" href="https://msdn.microsoft.com/library/5b56e2aa-dc05-444f-930c-2d7b23f9ad5b"><span data-ttu-id="0c4e2-297">Практическое руководство. Фоновое выполнение операции</span><span class="sxs-lookup"><span data-stu-id="0c4e2-297">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9b7bc5ae-051c-4904-9720-18f6667388bd"><span data-ttu-id="0c4e2-298">Практическое руководство. Фоновая загрузка файла</span><span class="sxs-lookup"><span data-stu-id="0c4e2-298">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
