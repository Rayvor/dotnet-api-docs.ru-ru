<Type Name="AttributeCollection" FullName="System.ComponentModel.AttributeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dbf7378a81e18413a351d314b89963bd874f6a25" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63898493" /></Metadata><TypeSignature Language="C#" Value="public class AttributeCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttributeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class AttributeCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type AttributeCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="192a1-101">Представляет коллекцию атрибутов.</span><span class="sxs-lookup"><span data-stu-id="192a1-101">Represents a collection of attributes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="192a1-102"><xref:System.ComponentModel.AttributeCollection> Класс доступен только для чтения; он не реализует методы, чтобы добавить или удалить атрибуты.</span><span class="sxs-lookup"><span data-stu-id="192a1-102">The <xref:System.ComponentModel.AttributeCollection> class is read-only; it does not implement methods to add or remove attributes.</span></span> <span data-ttu-id="192a1-103">Вы должны наследовать от этого класса для реализации этих методов.</span><span class="sxs-lookup"><span data-stu-id="192a1-103">You must inherit from this class to implement these methods.</span></span>  
  
 <span data-ttu-id="192a1-104">Используйте <xref:System.ComponentModel.AttributeCollection.Count%2A> свойство, чтобы найти количество атрибутов, которые существуют в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-104">Use the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to find the number of attributes that exist in the collection.</span></span>  
  
 <span data-ttu-id="192a1-105">Методы этого класса может использоваться для запроса о содержимом коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-105">You can also use the methods of this class to query the collection about its contents.</span></span> <span data-ttu-id="192a1-106">Вызовите <xref:System.ComponentModel.AttributeCollection.Contains%2A> метод, чтобы убедиться, что указанный атрибут или массив атрибутов существует в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-106">Call the <xref:System.ComponentModel.AttributeCollection.Contains%2A> method to verify that a specified attribute or attribute array exists in the collection.</span></span> <span data-ttu-id="192a1-107">Вызовите <xref:System.ComponentModel.AttributeCollection.Matches%2A> метод, чтобы убедиться, что указанный атрибут или массив атрибутов существует в коллекции и что значения заданных атрибутов совпадают значения в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-107">Call the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method to verify that a specified attribute or array of attributes exists in the collection, and that the values of the specified attributes are the same as the values in the collection.</span></span>  
  
 <span data-ttu-id="192a1-108">Хотя большинство атрибуты имеют значения по умолчанию, значения по умолчанию не требуются.</span><span class="sxs-lookup"><span data-stu-id="192a1-108">While most attributes have default values, default values are not required.</span></span> <span data-ttu-id="192a1-109">Если атрибут имеет значения по умолчанию, `null` возвращается из индексированного свойства, принимающего тип.</span><span class="sxs-lookup"><span data-stu-id="192a1-109">If an attribute has no default value, `null` is returned from the indexed property that takes a type.</span></span> <span data-ttu-id="192a1-110">При определении собственных атрибутов, можно объявить значение по умолчанию, предоставляющий конструктор, который не принимает аргументов, или определив открытое статическое поле для типа атрибута с именем «Default».</span><span class="sxs-lookup"><span data-stu-id="192a1-110">When defining your own attributes, you can declare a default value by either providing a constructor that takes no arguments, or defining a public static field of your attribute type named "Default".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="192a1-111">В первом примере код проверяет, является ли <xref:System.ComponentModel.BrowsableAttribute> установлена в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-111">The first code example checks to see whether the <xref:System.ComponentModel.BrowsableAttribute> has been set in this collection.</span></span> <span data-ttu-id="192a1-112">Второй пример кода возвращает фактическое значение <xref:System.ComponentModel.DescriptionAttribute> для кнопки.</span><span class="sxs-lookup"><span data-stu-id="192a1-112">The second code example gets the actual value of the <xref:System.ComponentModel.DescriptionAttribute> for a button.</span></span> <span data-ttu-id="192a1-113">В обоих примерах требуют `button1` и `textBox1` будут созданы в форме.</span><span class="sxs-lookup"><span data-stu-id="192a1-113">Both examples require that `button1` and `textBox1` have been created on a form.</span></span> <span data-ttu-id="192a1-114">При использовании атрибутов, убедитесь, что атрибута было задано, или доступ к значению.</span><span class="sxs-lookup"><span data-stu-id="192a1-114">When using attributes, verify that an attribute has been set, or access its value.</span></span>  
  
 [!code-cpp[Classic AttributeCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection Example/VB/source.vb#1)]  
  
 [!code-cpp[Classic AttributeCollection Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection Example/CPP/source.cpp#2)]
 [!code-csharp[Classic AttributeCollection Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection Example/CS/source.cs#2)]
 [!code-vb[Classic AttributeCollection Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
    <altmember cref="T:System.ComponentModel.DescriptionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="192a1-115">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.AttributeCollection" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-115">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AttributeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="192a1-116">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.AttributeCollection" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-116">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeCollection (params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeCollection(... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.AttributeCollection : Attribute[] -&gt; System.ComponentModel.AttributeCollection" Usage="new System.ComponentModel.AttributeCollection attributes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="192a1-117">Массив элементов типа <see cref="T:System.Attribute" />, предоставляющий атрибуты для этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-117">An array of type <see cref="T:System.Attribute" /> that provides the attributes for this collection.</span></span></param>
        <summary><span data-ttu-id="192a1-118">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.AttributeCollection" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-118">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="192a1-119">В следующем примере кода создается новый <xref:System.ComponentModel.AttributeCollection> с использованием атрибутов на `button1`.</span><span class="sxs-lookup"><span data-stu-id="192a1-119">The following code example creates a new <xref:System.ComponentModel.AttributeCollection> using the attributes on `button1`.</span></span> <span data-ttu-id="192a1-120">Предполагается, что `button1` будет создана в форме.</span><span class="sxs-lookup"><span data-stu-id="192a1-120">It assumes that `button1` has been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="192a1-121"><paramref name="attributes" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-121"><paramref name="attributes" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="protected virtual Attribute[] Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute[] Attributes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Attributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Attributes As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;Attribute ^&gt; ^ Attributes { cli::array &lt;Attribute ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : Attribute[]" Usage="System.ComponentModel.AttributeCollection.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="192a1-122">Получает коллекцию атрибутов.</span><span class="sxs-lookup"><span data-stu-id="192a1-122">Gets the attribute collection.</span></span></summary>
        <value><span data-ttu-id="192a1-123">Коллекция атрибутов.</span><span class="sxs-lookup"><span data-stu-id="192a1-123">The attribute collection.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="192a1-124">Определяет, содержит ли коллекция атрибутов указанный атрибут или массив атрибутов.</span><span class="sxs-lookup"><span data-stu-id="192a1-124">Determines whether this collection of attributes has the specified attribute or array of attributes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Attribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Attribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(Attribute ^ attribute);" />
      <MemberSignature Language="F#" Value="member this.Contains : Attribute -&gt; bool" Usage="attributeCollection.Contains attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Attribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="192a1-125">Элемент класса <see cref="T:System.Attribute" />, который нужно найти в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-125">An <see cref="T:System.Attribute" /> to find in the collection.</span></span></param>
        <summary><span data-ttu-id="192a1-126">Определяет, содержит ли коллекция атрибутов указанный атрибут.</span><span class="sxs-lookup"><span data-stu-id="192a1-126">Determines whether this collection of attributes has the specified attribute.</span></span></summary>
        <returns><span data-ttu-id="192a1-127">Значение <see langword="true" />, если коллекция содержит атрибут или является атрибутом по умолчанию для этого типа атрибута; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-127"><see langword="true" /> if the collection contains the attribute or is the default attribute for the type of attribute; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="192a1-128">Коллекция содержит указанный атрибут, если коллекция содержит указанный тип атрибута, и значение указанного атрибута является таким же, как значения экземпляра атрибута в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-128">This collection has the specified attribute if the specified type of attribute exists in the collection, and if the value of the specified attribute is the same as the value of the instance of the attribute in the collection.</span></span>  
  
 <span data-ttu-id="192a1-129">Разница между <xref:System.ComponentModel.AttributeCollection.Matches%2A> и <xref:System.ComponentModel.AttributeCollection.Contains%2A> методов является то, что <xref:System.ComponentModel.AttributeCollection.Matches%2A> вызовы <xref:System.Attribute.Match%2A> метод на атрибуте, и <xref:System.ComponentModel.AttributeCollection.Contains%2A> вызовы <xref:System.Object.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="192a1-129">The difference between the <xref:System.ComponentModel.AttributeCollection.Matches%2A> and <xref:System.ComponentModel.AttributeCollection.Contains%2A> methods is that <xref:System.ComponentModel.AttributeCollection.Matches%2A> calls the <xref:System.Attribute.Match%2A> method on an attribute, and <xref:System.ComponentModel.AttributeCollection.Contains%2A> calls the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="192a1-130">Для большинства атрибутов эти методы выполняют то же самое.</span><span class="sxs-lookup"><span data-stu-id="192a1-130">For most attributes, these methods do the same thing.</span></span> <span data-ttu-id="192a1-131">Для атрибутов, которые могут иметь несколько флагов, однако <xref:System.Attribute.Match%2A> обычно реализуется, чтобы он возвращал `true` Если любой из флагов выполнено.</span><span class="sxs-lookup"><span data-stu-id="192a1-131">For attributes that may have multiple flags, however, <xref:System.Attribute.Match%2A> is typically implemented so that it returns `true` if any of the flags are satisfied.</span></span> <span data-ttu-id="192a1-132">Например рассмотрим атрибут привязки данных с логическими флагами «SupportsSql», «SupportsOleDb» и «SupportsXml».</span><span class="sxs-lookup"><span data-stu-id="192a1-132">For example, consider a data binding attribute with the Boolean flags "SupportsSql", "SupportsOleDb", and "SupportsXml".</span></span> <span data-ttu-id="192a1-133">Этот атрибут может присутствовать свойство, которое поддерживает все три подхода привязки данных.</span><span class="sxs-lookup"><span data-stu-id="192a1-133">This attribute may be present on a property that supports all three data-binding approaches.</span></span> <span data-ttu-id="192a1-134">Часто будет так, программисту нужно знать, только если конкретный подход, не все три.</span><span class="sxs-lookup"><span data-stu-id="192a1-134">It will often be the case that a programmer needs to know only if a particular approach is available, not all three.</span></span> <span data-ttu-id="192a1-135">Таким образом, программист может выполнить <xref:System.Attribute.Match%2A> с помощью экземпляра атрибута, содержащий только флаги программист должен.</span><span class="sxs-lookup"><span data-stu-id="192a1-135">Therefore, a programmer could use <xref:System.Attribute.Match%2A> with an instance of the attribute containing only the flags the programmer needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="192a1-136">В следующем коде пример проверяет, имеет ли коллекция <xref:System.ComponentModel.BrowsableAttribute> присвоено `true`.</span><span class="sxs-lookup"><span data-stu-id="192a1-136">The following code example checks to see whether the collection has a <xref:System.ComponentModel.BrowsableAttribute> set to `true`.</span></span> <span data-ttu-id="192a1-137">Предполагается, что `button1` и `textBox1` будут созданы в форме.</span><span class="sxs-lookup"><span data-stu-id="192a1-137">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (attributes As Attribute()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Contains : Attribute[] -&gt; bool" Usage="attributeCollection.Contains attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="192a1-138">Массив элементов типа <see cref="T:System.Attribute" />, которые нужно найти в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-138">An array of type <see cref="T:System.Attribute" /> to find in the collection.</span></span></param>
        <summary><span data-ttu-id="192a1-139">Определяет, содержит ли коллекция атрибутов все указанные атрибуты в массиве атрибутов.</span><span class="sxs-lookup"><span data-stu-id="192a1-139">Determines whether this attribute collection contains all the specified attributes in the attribute array.</span></span></summary>
        <returns><span data-ttu-id="192a1-140">Значение <see langword="true" />, если коллекция содержит все атрибуты; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-140"><see langword="true" /> if the collection contains all the attributes; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="192a1-141">Эта коллекция содержит заданный массив атрибутов, если все указанные типы атрибутов существует в коллекции и если каждый атрибут в указанном массиве совпадает со значением атрибута в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-141">This collection has the specified array of attributes if all the specified attribute types exist in the collection and if each attribute in the specified array is the same as an attribute in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="192a1-142">В следующем примере сравниваются атрибуты `button1` и `textBox1` чтобы увидеть, содержатся ли атрибуты для кнопки в атрибутах для текстового поля.</span><span class="sxs-lookup"><span data-stu-id="192a1-142">The following code example compares the attributes in `button1` and `textBox1` to see whether the attributes for the button are contained in the attributes for the text box.</span></span> <span data-ttu-id="192a1-143">Предполагается, что оба `button1` и `textBox1` будут созданы в форме.</span><span class="sxs-lookup"><span data-stu-id="192a1-143">It assumes that both `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="attributeCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="192a1-144">Массив типа <see cref="T:System.Array" />, в который копируется коллекция.</span><span class="sxs-lookup"><span data-stu-id="192a1-144">The <see cref="T:System.Array" /> to copy the collection to.</span></span></param>
        <param name="index"><span data-ttu-id="192a1-145">Индекс, с которого должна начаться операция.</span><span class="sxs-lookup"><span data-stu-id="192a1-145">The index to start from.</span></span></param>
        <summary><span data-ttu-id="192a1-146">Копирует коллекцию в массив, начиная с указанного индекса.</span><span class="sxs-lookup"><span data-stu-id="192a1-146">Copies the collection to an array, starting at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.ComponentModel.AttributeCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="192a1-147">Возвращает количество атрибутов.</span><span class="sxs-lookup"><span data-stu-id="192a1-147">Gets the number of attributes.</span></span></summary>
        <value><span data-ttu-id="192a1-148">Количество атрибутов.</span><span class="sxs-lookup"><span data-stu-id="192a1-148">The number of attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="192a1-149">Можно использовать <xref:System.ComponentModel.AttributeCollection.Count%2A> свойство для задания ограничений на цикл, который используется для итерации по коллекции объектов.</span><span class="sxs-lookup"><span data-stu-id="192a1-149">You can use the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to set the limits of a loop that iterates through a collection of objects.</span></span> <span data-ttu-id="192a1-150">Если коллекция является (с нуля), обязательно используйте `Count - 1` , то верхняя граница цикла.</span><span class="sxs-lookup"><span data-stu-id="192a1-150">If the collection is zero-based, be sure to use `Count - 1` as the upper boundary of the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="192a1-151">В следующем примере кода используется <xref:System.ComponentModel.AttributeCollection.Count%2A> свойство на печать число свойств в `button1` в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="192a1-151">The following code example uses the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to print the number of properties on `button1` in a text box.</span></span> <span data-ttu-id="192a1-152">Предполагается, что `button1` и `textBox1` будут созданы в форме.</span><span class="sxs-lookup"><span data-stu-id="192a1-152">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.AttributeCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.AttributeCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.AttributeCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As AttributeCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::AttributeCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.AttributeCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="192a1-153">Определяет пустую коллекцию, которую можно использовать, не прибегая к созданию новой.</span><span class="sxs-lookup"><span data-stu-id="192a1-153">Specifies an empty collection that you can use, rather than creating a new one.</span></span> <span data-ttu-id="192a1-154">Это поле доступно только для чтения.</span><span class="sxs-lookup"><span data-stu-id="192a1-154">This field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromExisting">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection FromExisting (System.ComponentModel.AttributeCollection existing, params Attribute[] newAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection FromExisting(class System.ComponentModel.AttributeCollection existing, class System.Attribute[] newAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromExisting (existing As AttributeCollection, ParamArray newAttributes As Attribute()) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ FromExisting(System::ComponentModel::AttributeCollection ^ existing, ... cli::array &lt;Attribute ^&gt; ^ newAttributes);" />
      <MemberSignature Language="F#" Value="static member FromExisting : System.ComponentModel.AttributeCollection * Attribute[] -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.AttributeCollection.FromExisting (existing, newAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existing" Type="System.ComponentModel.AttributeCollection" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="newAttributes" Type="System.Attribute[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="existing"><span data-ttu-id="192a1-155">Коллекция <see cref="T:System.ComponentModel.AttributeCollection" />, используемая для создания копии.</span><span class="sxs-lookup"><span data-stu-id="192a1-155">An <see cref="T:System.ComponentModel.AttributeCollection" /> from which to create the copy.</span></span></param>
        <param name="newAttributes"><span data-ttu-id="192a1-156">Массив элементов типа <see cref="T:System.Attribute" />, предоставляющий атрибуты для этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-156">An array of type <see cref="T:System.Attribute" /> that provides the attributes for this collection.</span></span> <span data-ttu-id="192a1-157">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-157">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="192a1-158">Создает новую коллекцию <see cref="T:System.ComponentModel.AttributeCollection" /> из существующей коллекции <see cref="T:System.ComponentModel.AttributeCollection" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-158">Creates a new <see cref="T:System.ComponentModel.AttributeCollection" /> from an existing <see cref="T:System.ComponentModel.AttributeCollection" />.</span></span></summary>
        <returns><span data-ttu-id="192a1-159">Новая коллекция <see cref="T:System.ComponentModel.AttributeCollection" />, являющаяся копией коллекции <paramref name="existing" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-159">A new <see cref="T:System.ComponentModel.AttributeCollection" /> that is a copy of <paramref name="existing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="192a1-160">Если `newAttributes` параметр указан, его <xref:System.Attribute> записи объединяются с соответствующими `existing` параметра.</span><span class="sxs-lookup"><span data-stu-id="192a1-160">If the `newAttributes` parameter is provided, its <xref:System.Attribute> entries are merged with those of the `existing` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="192a1-161"><paramref name="existing" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-161"><paramref name="existing" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultAttribute">
      <MemberSignature Language="C#" Value="protected Attribute GetDefaultAttribute (Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Attribute GetDefaultAttribute(class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultAttribute (attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Attribute ^ GetDefaultAttribute(Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultAttribute : Type -&gt; Attribute" Usage="attributeCollection.GetDefaultAttribute attributeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="192a1-162">Тип <see cref="T:System.Type" /> извлекаемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="192a1-162">The <see cref="T:System.Type" /> of the attribute to retrieve.</span></span></param>
        <summary><span data-ttu-id="192a1-163">Возвращает <see cref="T:System.Attribute" /> по умолчанию с заданным типом <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-163">Returns the default <see cref="T:System.Attribute" /> of a given <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="192a1-164"><see cref="T:System.Attribute" /> по умолчанию с заданным типом <paramref name="attributeType" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-164">The default <see cref="T:System.Attribute" /> of a given <paramref name="attributeType" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="attributeCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="192a1-165">Возвращает перечислитель для этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-165">Gets an enumerator for this collection.</span></span></summary>
        <returns><span data-ttu-id="192a1-166">Перечислитель типа <see cref="T:System.Collections.IEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-166">An enumerator of type <see cref="T:System.Collections.IEnumerator" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="192a1-167">В следующем примере кода возвращается перечислитель для атрибутов `button1`.</span><span class="sxs-lookup"><span data-stu-id="192a1-167">The following code example gets an enumerator for the attributes on `button1`.</span></span> <span data-ttu-id="192a1-168">Этот перечислитель используется для печати имена атрибутов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-168">It uses the enumerator to print the names of the attributes in the collection.</span></span> <span data-ttu-id="192a1-169">Предполагается, что `button1` и `textBox1` будут созданы в форме.</span><span class="sxs-lookup"><span data-stu-id="192a1-169">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/CPP/Source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="192a1-170">Получает атрибут с указанным индексом.</span><span class="sxs-lookup"><span data-stu-id="192a1-170">Gets the attribute with the specified index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual Attribute this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Attribute ^ default[int] { Attribute ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Attribute" Usage="System.ComponentModel.AttributeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="192a1-171">Отсчитываемый от нуля индекс элемента <see cref="T:System.ComponentModel.AttributeCollection" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-171">The zero-based index of <see cref="T:System.ComponentModel.AttributeCollection" />.</span></span></param>
        <summary><span data-ttu-id="192a1-172">Возвращает атрибут с указанным номером индекса.</span><span class="sxs-lookup"><span data-stu-id="192a1-172">Gets the attribute with the specified index number.</span></span></summary>
        <value><span data-ttu-id="192a1-173">Объект <see cref="T:System.Attribute" /> с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="192a1-173">The <see cref="T:System.Attribute" /> with the specified index number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="192a1-174">Индекс (с нуля).</span><span class="sxs-lookup"><span data-stu-id="192a1-174">The index number is zero-based.</span></span> <span data-ttu-id="192a1-175">Таким образом, необходимо вычитать 1 балл из порядкового номера конкретной <xref:System.Attribute> обращаться к нему <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="192a1-175">Therefore, you must subtract 1 from the numerical position of a particular <xref:System.Attribute> to access that <xref:System.Attribute>.</span></span> <span data-ttu-id="192a1-176">Например, чтобы получить третий <xref:System.Attribute>, необходимо указать `myColl[2]`.</span><span class="sxs-lookup"><span data-stu-id="192a1-176">For example, to get the third <xref:System.Attribute>, you need to specify `myColl[2]`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="192a1-177">В следующем примере кода используется <xref:System.ComponentModel.AttributeCollection.Item%2A> свойства имя <xref:System.Attribute> определяемом этим номером индекса в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="192a1-177">The following code example uses the <xref:System.ComponentModel.AttributeCollection.Item%2A> property to print the name of the <xref:System.Attribute> specified by the index number in a text box.</span></span> <span data-ttu-id="192a1-178">Так как индекс (с нуля), этот пример кода выводит имя второго <xref:System.Attribute> в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="192a1-178">Because the index number is zero-based, this code example prints the name of the second <xref:System.Attribute> in a text box.</span></span> <span data-ttu-id="192a1-179">Предполагается `button1` и `textBox1` будут созданы в форме.</span><span class="sxs-lookup"><span data-stu-id="192a1-179">It assumes `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual Attribute this[Type attributeType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Attribute ^ default[Type ^] { Attribute ^ get(Type ^ attributeType); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : Attribute" Usage="System.ComponentModel.AttributeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="192a1-180">Тип <see cref="T:System.Type" /> атрибута <see cref="T:System.Attribute" />, извлекаемого из коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-180">The <see cref="T:System.Type" /> of the <see cref="T:System.Attribute" /> to get from the collection.</span></span></param>
        <summary><span data-ttu-id="192a1-181">Возвращает атрибут указанного типа.</span><span class="sxs-lookup"><span data-stu-id="192a1-181">Gets the attribute with the specified type.</span></span></summary>
        <value><span data-ttu-id="192a1-182">Возвращает атрибут <see cref="T:System.Attribute" /> указанного типа, а если такого атрибута не существует, то значение по умолчанию для типа этого атрибута.</span><span class="sxs-lookup"><span data-stu-id="192a1-182">The <see cref="T:System.Attribute" /> with the specified type or, if the attribute does not exist, the default value for the attribute type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="192a1-183">Если атрибут не существует в коллекции, это свойство возвращает значение по умолчанию для типа атрибута.</span><span class="sxs-lookup"><span data-stu-id="192a1-183">If the attribute does not exist in the collection, this property returns the default value for the attribute type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="192a1-184">В следующем коде получается пример <xref:System.ComponentModel.DesignerAttribute> из коллекции и печатает его значение.</span><span class="sxs-lookup"><span data-stu-id="192a1-184">The following code example gets the <xref:System.ComponentModel.DesignerAttribute> from the collection and prints its value.</span></span> <span data-ttu-id="192a1-185">Предполагается, что `button1` и `textBox1` будут созданы в форме.</span><span class="sxs-lookup"><span data-stu-id="192a1-185">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 <span data-ttu-id="192a1-186">Для этого примера кода для запуска необходимо указать полное имя сборки.</span><span class="sxs-lookup"><span data-stu-id="192a1-186">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="192a1-187">Сведения о том, как получить полное имя сборки, см. в разделе [имена сборок](~/docs/framework/app-domains/assembly-names.md).</span><span class="sxs-lookup"><span data-stu-id="192a1-187">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[Classic AttributeCollection.this1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="192a1-188">Определяет, совпадает ли указанный атрибут или массив атрибутов с атрибутом или массивом атрибутов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-188">Determines whether a specified attribute or array of attributes is the same as an attribute or array of attributes in the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (Attribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Attribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(Attribute ^ attribute);" />
      <MemberSignature Language="F#" Value="member this.Matches : Attribute -&gt; bool" Usage="attributeCollection.Matches attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Attribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="192a1-189">Экземпляр атрибута <see cref="T:System.Attribute" />, сравниваемый с атрибутами в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-189">An instance of <see cref="T:System.Attribute" /> to compare with the attributes in this collection.</span></span></param>
        <summary><span data-ttu-id="192a1-190">Определяет, совпадает ли указанный атрибут с атрибутом в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-190">Determines whether a specified attribute is the same as an attribute in the collection.</span></span></summary>
        <returns><span data-ttu-id="192a1-191">Значение <see langword="true" />, если атрибут содержится в коллекции и имеет то же значение, что и атрибут в коллекции; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-191"><see langword="true" /> if the attribute is contained within the collection and has the same value as the attribute in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="192a1-192">Атрибут может предоставить поддержку для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="192a1-192">An attribute can provide support for matching.</span></span>  
  
 <span data-ttu-id="192a1-193">Разница между <xref:System.ComponentModel.AttributeCollection.Matches%2A> и <xref:System.ComponentModel.AttributeCollection.Contains%2A> методов является то, что <xref:System.ComponentModel.AttributeCollection.Matches%2A> вызовы <xref:System.Attribute.Match%2A> метод на атрибуте, и <xref:System.ComponentModel.AttributeCollection.Contains%2A> вызовы <xref:System.Object.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="192a1-193">The difference between the <xref:System.ComponentModel.AttributeCollection.Matches%2A> and <xref:System.ComponentModel.AttributeCollection.Contains%2A> methods is that <xref:System.ComponentModel.AttributeCollection.Matches%2A> calls the <xref:System.Attribute.Match%2A> method on an attribute, and <xref:System.ComponentModel.AttributeCollection.Contains%2A> calls the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="192a1-194">Для большинства атрибутов эти методы выполняют то же самое.</span><span class="sxs-lookup"><span data-stu-id="192a1-194">For most attributes, these methods do the same thing.</span></span> <span data-ttu-id="192a1-195">Для атрибутов, которые могут иметь несколько флагов, однако <xref:System.Attribute.Match%2A> обычно реализуется, чтобы он возвращал `true` Если любой из флагов выполнено.</span><span class="sxs-lookup"><span data-stu-id="192a1-195">For attributes that may have multiple flags, however, <xref:System.Attribute.Match%2A> is typically implemented so that it returns `true` if any of the flags are satisfied.</span></span> <span data-ttu-id="192a1-196">Например рассмотрим атрибут привязки данных с логическими флагами «SupportsSql», «SupportsOleDb» и «SupportsXml».</span><span class="sxs-lookup"><span data-stu-id="192a1-196">For example, consider a data binding attribute with the Boolean flags "SupportsSql", "SupportsOleDb", and "SupportsXml".</span></span> <span data-ttu-id="192a1-197">Этот атрибут может присутствовать свойство, которое поддерживает все три метода связывания данных.</span><span class="sxs-lookup"><span data-stu-id="192a1-197">This attribute may be present on a property that supports all three data binding approaches.</span></span> <span data-ttu-id="192a1-198">Часто будет так, программисту нужно знать, только если конкретный подход, не все три.</span><span class="sxs-lookup"><span data-stu-id="192a1-198">It will often be the case that a programmer needs to know only if a particular approach is available, not all three.</span></span> <span data-ttu-id="192a1-199">Таким образом, программист может выполнить <xref:System.Attribute.Match%2A> с помощью экземпляра атрибута, содержащий только флаги программист должен.</span><span class="sxs-lookup"><span data-stu-id="192a1-199">Therefore, a programmer could use <xref:System.Attribute.Match%2A> with an instance of the attribute containing only the flags the programmer needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="192a1-200">В следующем примере кода проверяет, что <xref:System.ComponentModel.BrowsableAttribute> является членом коллекции, и ему было присвоено `true`.</span><span class="sxs-lookup"><span data-stu-id="192a1-200">The following code example verifies that the <xref:System.ComponentModel.BrowsableAttribute> is a member of the collection and that it has been set to `true`.</span></span> <span data-ttu-id="192a1-201">Предполагается, что `button1` и `textBox1` будут созданы в форме.</span><span class="sxs-lookup"><span data-stu-id="192a1-201">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Matches Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Matches Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Matches Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (attributes As Attribute()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Matches : Attribute[] -&gt; bool" Usage="attributeCollection.Matches attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="192a1-202">Массив атрибутов <see cref="T:System.CodeDom.MemberAttributes" />, сравниваемых с атрибутами в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-202">An array of <see cref="T:System.CodeDom.MemberAttributes" /> to compare with the attributes in this collection.</span></span></param>
        <summary><span data-ttu-id="192a1-203">Определяет, совпадают ли атрибуты в указанном массиве атрибутов с атрибутами в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-203">Determines whether the attributes in the specified array are the same as the attributes in the collection.</span></span></summary>
        <returns><span data-ttu-id="192a1-204">Значение <see langword="true" />, если все атрибуты, входящие в массив, содержатся в коллекции и их значения совпадают со значениями атрибутов в коллекции; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-204"><see langword="true" /> if all the attributes in the array are contained in the collection and have the same values as the attributes in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="192a1-205">Атрибут может предоставить поддержку для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="192a1-205">An attribute can provide support for matching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="192a1-206">В следующем примере кода сравнивает атрибуты в кнопку и текстовое поле, чтобы увидеть, соответствуют ли они.</span><span class="sxs-lookup"><span data-stu-id="192a1-206">The following code example compares the attributes in a button and a text box to see whether they match.</span></span> <span data-ttu-id="192a1-207">Предполагается, что `button1` и `textBox1` будут созданы в форме.</span><span class="sxs-lookup"><span data-stu-id="192a1-207">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="192a1-208">Возвращает количество элементов, содержащихся в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-208">Gets the number of elements contained in the collection.</span></span></summary>
        <value><span data-ttu-id="192a1-209">Количество элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-209">The number of elements contained in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="192a1-210">Получает значение, указывающее на то, синхронизирован ли доступ к коллекции (потокобезопасный).</span><span class="sxs-lookup"><span data-stu-id="192a1-210">Gets a value indicating whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="192a1-211">Значение <see langword="true" />, если доступ к коллекции синхронизирован (потокобезопасен); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-211"><see langword="true" /> if access to the collection is synchronized (thread-safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="192a1-212">Возвращает объект, который можно использовать для синхронизации доступа к коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-212">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="192a1-213">Объект, который можно использовать для синхронизации доступа к коллекции.</span><span class="sxs-lookup"><span data-stu-id="192a1-213">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="192a1-214">Возвращает перечислитель <see cref="T:System.Collections.IEnumerator" /> для словаря <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-214">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <returns><span data-ttu-id="192a1-215">Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="192a1-215">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>