<Type Name="PropertyChangedEventManager" FullName="System.ComponentModel.PropertyChangedEventManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="49301f20d778a497fd6fc5cee6b7e3f020430216" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75146288" /></Metadata><TypeSignature Language="C#" Value="public class PropertyChangedEventManager : System.Windows.WeakEventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyChangedEventManager extends System.Windows.WeakEventManager" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyChangedEventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyChangedEventManager&#xA;Inherits WeakEventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyChangedEventManager : System::Windows::WeakEventManager" />
  <TypeSignature Language="F#" Value="type PropertyChangedEventManager = class&#xA;    inherit WeakEventManager" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.WeakEventManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет реализацию <see cref="T:System.Windows.WeakEventManager" /> таким образом, что пользователь может использовать шаблон "слабого прослушивателя событий" для присоединения прослушивателей для события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы использовать прослушиватели в этом шаблоне, объекты прослушивателя должны реализовывать <xref:System.Windows.IWeakEventListener>. Не нужно реализовывать <xref:System.Windows.IWeakEventListener> в классе, который является источником событий.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.IWeakEventListener" />
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static void AddHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHandler(class System.ComponentModel.INotifyPropertyChanged source, class System.EventHandler`1&lt;class System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHandler (source As INotifyPropertyChanged, handler As EventHandler(Of PropertyChangedEventArgs), propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHandler(System::ComponentModel::INotifyPropertyChanged ^ source, EventHandler&lt;System::ComponentModel::PropertyChangedEventArgs ^&gt; ^ handler, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member AddHandler : System.ComponentModel.INotifyPropertyChanged * EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; * string -&gt; unit" Usage="System.ComponentModel.PropertyChangedEventManager.AddHandler (source, handler, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt;" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="propertyName" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
        <param name="handler">Делегат, обрабатывающий событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
        <param name="propertyName">Имя свойства, существующего для параметра <paramref name="source" />, изменения которого прослушиваются. Значение <see cref="F:System.String.Empty" /> используется, чтобы задать "любое свойство".</param>
        <summary>Добавляет указанный обработчик событий, вызываемый, когда указанный источник вызывает событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> для заданного свойства.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод, чтобы указать обработчик событий, который будет использоваться для подписки на событие <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>. При использовании этого метода объекту прослушивателя не требуется реализовывать интерфейс <xref:System.Windows.IWeakEventListener>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="handler" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">С <paramref name="handler" /> связано более одного метода.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddListener">
      <MemberSignature Language="C#" Value="public static void AddListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddListener(class System.ComponentModel.INotifyPropertyChanged source, class System.Windows.IWeakEventListener listener, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddListener (source As INotifyPropertyChanged, listener As IWeakEventListener, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddListener(System::ComponentModel::INotifyPropertyChanged ^ source, System::Windows::IWeakEventListener ^ listener, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member AddListener : System.ComponentModel.INotifyPropertyChanged * System.Windows.IWeakEventListener * string -&gt; unit" Usage="System.ComponentModel.PropertyChangedEventManager.AddListener (source, listener, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Объект с событием.</param>
        <param name="listener">Объект, добавляемый в качестве прослушивателя.</param>
        <param name="propertyName">Имя свойства, существующего для параметра <paramref name="source" />, изменения которого прослушиваются. Значение <see cref="F:System.String.Empty" /> используется, чтобы задать "любое свойство".</param>
        <summary>Добавляет заданный прослушиватель в список прослушивателей указанного источника.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="NewListenerList">
      <MemberSignature Language="C#" Value="protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.WeakEventManager/ListenerList NewListenerList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function NewListenerList () As WeakEventManager.ListenerList" />
      <MemberSignature Language="F#" Value="override this.NewListenerList : unit -&gt; System.Windows.WeakEventManager.ListenerList" Usage="propertyChangedEventManager.NewListenerList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает новый объект для добавления прослушивателей в событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
        <returns>Новый объект для добавления прослушивателей в событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="protected override bool Purge (object source, object data, bool purgeAll);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool Purge(object source, object data, bool purgeAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Purge (source As Object, data As Object, purgeAll As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool Purge(System::Object ^ source, System::Object ^ data, bool purgeAll);" />
      <MemberSignature Language="F#" Value="override this.Purge : obj * obj * bool -&gt; bool" Usage="propertyChangedEventManager.Purge (source, data, purgeAll)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="purgeAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">Исходный объект, для которого удаляются все прослушиватели.</param>
        <param name="data">Очищаемые данные. Предполагается, что это — <see cref="T:System.Collections.Specialized.HybridDictionary" />.</param>
        <param name="purgeAll">Равно <see langword="true" />, чтобы остановить прослушивание и для полного удаления всех данных.</param>
        <summary>Удаляет прослушиватели, ставшие неактивными, из данных для предоставленного источника.</summary>
        <returns>Значение <see langword="true" />, если некоторые записи удалены; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHandler(class System.ComponentModel.INotifyPropertyChanged source, class System.EventHandler`1&lt;class System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHandler (source As INotifyPropertyChanged, handler As EventHandler(Of PropertyChangedEventArgs), propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHandler(System::ComponentModel::INotifyPropertyChanged ^ source, EventHandler&lt;System::ComponentModel::PropertyChangedEventArgs ^&gt; ^ handler, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member RemoveHandler : System.ComponentModel.INotifyPropertyChanged * EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; * string -&gt; unit" Usage="System.ComponentModel.PropertyChangedEventManager.RemoveHandler (source, handler, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt;" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="propertyName" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
        <param name="handler">Делегат, обрабатывающий событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
        <param name="propertyName">Имя свойства, существующего для параметра <paramref name="source" />, для которого останавливается прослушивание изменений. Значение <see cref="F:System.String.Empty" /> используется, чтобы задать "любое свойство".</param>
        <summary>Удаляет заданный обработчик событий из заданного источника.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="handler" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">С <paramref name="handler" /> связано более одного метода.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveListener">
      <MemberSignature Language="C#" Value="public static void RemoveListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveListener(class System.ComponentModel.INotifyPropertyChanged source, class System.Windows.IWeakEventListener listener, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveListener (source As INotifyPropertyChanged, listener As IWeakEventListener, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveListener(System::ComponentModel::INotifyPropertyChanged ^ source, System::Windows::IWeakEventListener ^ listener, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member RemoveListener : System.ComponentModel.INotifyPropertyChanged * System.Windows.IWeakEventListener * string -&gt; unit" Usage="System.ComponentModel.PropertyChangedEventManager.RemoveListener (source, listener, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Объект, для которого удаляется прослушиватель.</param>
        <param name="listener">Удаляемый прослушиватель.</param>
        <param name="propertyName">Имя свойства, существующего для параметра <paramref name="source" />, для которого останавливается прослушивание изменений. Значение <see cref="F:System.String.Empty" /> используется, чтобы задать "любое свойство".</param>
        <summary>Удаляет заданный прослушиватель из списка прослушивателей для предоставленного источника.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="protected override void StartListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StartListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StartListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StartListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="override this.StartListening : obj -&gt; unit" Usage="propertyChangedEventManager.StartListening source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Объект, для которого начинается прослушивание события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
        <summary>Начинает прослушивание для события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> предоставленного источника.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При этом не указывается свойство; После запуска диспетчера событий все свойства источника будут иметь <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> уведомления включено.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="protected override void StopListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StopListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StopListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StopListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="override this.StopListening : obj -&gt; unit" Usage="propertyChangedEventManager.StopListening source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Исходный объект, для которого останавливается прослушивание события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
        <summary>Останавливает прослушивание для события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> предоставленного источника.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
  </Members>
</Type>
