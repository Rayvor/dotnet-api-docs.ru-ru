<Type Name="NestedContainer" FullName="System.ComponentModel.NestedContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef3442c5ad2e368a69f3364685383f808bae3662" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75146457" /></Metadata><TypeSignature Language="C#" Value="public class NestedContainer : System.ComponentModel.Container, IDisposable, System.ComponentModel.INestedContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NestedContainer extends System.ComponentModel.Container implements class System.ComponentModel.IContainer, class System.ComponentModel.INestedContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.NestedContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class NestedContainer&#xA;Inherits Container&#xA;Implements IDisposable, INestedContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class NestedContainer : System::ComponentModel::Container, IDisposable, System::ComponentModel::INestedContainer" />
  <TypeSignature Language="F#" Value="type NestedContainer = class&#xA;    inherit Container&#xA;    interface INestedContainer&#xA;    interface IContainer&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Container</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INestedContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d0d29-101">Предоставляет базовую реализацию интерфейса <see cref="T:System.ComponentModel.INestedContainer" />, позволяющую использовать компонент-владелец для контейнеров.</span><span class="sxs-lookup"><span data-stu-id="d0d29-101">Provides the base implementation for the <see cref="T:System.ComponentModel.INestedContainer" /> interface, which enables containers to have an owning component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0d29-102">Класс <xref:System.ComponentModel.NestedContainer> является простой реализацией интерфейса <xref:System.ComponentModel.INestedContainer>, который определяет компонент, который логически содержит ноль или более других компонентов и принадлежит родительскому компоненту.</span><span class="sxs-lookup"><span data-stu-id="d0d29-102">The <xref:System.ComponentModel.NestedContainer> class is a simple implementation of the <xref:System.ComponentModel.INestedContainer> interface, which defines a component that logically contains zero or more other components and is owned by a parent component.</span></span> <span data-ttu-id="d0d29-103">Поведение вложенных контейнеров отличается от стандартного <xref:System.ComponentModel.Container> несколькими способами, включая следующие:</span><span class="sxs-lookup"><span data-stu-id="d0d29-103">The behavior of nested containers differs from a standard <xref:System.ComponentModel.Container> in a number of ways, including the following:</span></span>  
  
-   <span data-ttu-id="d0d29-104">Характеристики сайта, такие как <xref:System.ComponentModel.Component.DesignMode%2A> и <xref:System.ComponentModel.Component.GetService%2A>, направляются через сайт компонента-владельца.</span><span class="sxs-lookup"><span data-stu-id="d0d29-104">Site characteristics such as <xref:System.ComponentModel.Component.DesignMode%2A> and <xref:System.ComponentModel.Component.GetService%2A> are routed through the owning component's site.</span></span>  
  
-   <span data-ttu-id="d0d29-105">Свойство <xref:System.ComponentModel.ISite.Name%2A> сайта — это полное имя, включающее в себя имя компонента-владельца, за которым следует точка (.) и имя дочернего компонента.</span><span class="sxs-lookup"><span data-stu-id="d0d29-105">The site's <xref:System.ComponentModel.ISite.Name%2A> property is a qualified name that includes the owning component's name followed by a period (.) and the child component's name.</span></span>  
  
-   <span data-ttu-id="d0d29-106"><xref:System.ComponentModel.NestedContainer.GetService%2A> обеспечивает поддержку <xref:System.ComponentModel.INestedContainer> в качестве службы.</span><span class="sxs-lookup"><span data-stu-id="d0d29-106"><xref:System.ComponentModel.NestedContainer.GetService%2A> provides support for the <xref:System.ComponentModel.INestedContainer> as a service.</span></span>  
  
-   <span data-ttu-id="d0d29-107">При удалении компонента-владельца контейнер также удаляется.</span><span class="sxs-lookup"><span data-stu-id="d0d29-107">When the owning component is disposed, the container is disposed as well.</span></span>  
  
 <span data-ttu-id="d0d29-108">Кроме того, конструкторы разрабатывают вложенные контейнеры по-разному.</span><span class="sxs-lookup"><span data-stu-id="d0d29-108">In addition, designers treat nested containers differently.</span></span> <span data-ttu-id="d0d29-109">Узел конструктора заинтересован в одном контейнере, связанном с узлом.</span><span class="sxs-lookup"><span data-stu-id="d0d29-109">A designer host is only interested in one container - the one associated with the host.</span></span> <span data-ttu-id="d0d29-110">Поэтому события добавления и удаления компонентов не вызываются при добавлении или удалении компонента из вложенного контейнера.</span><span class="sxs-lookup"><span data-stu-id="d0d29-110">Therefore, component add and remove events are not raised when a component is added to or removed from a nested container.</span></span> <span data-ttu-id="d0d29-111">Однако, поскольку службы проходят через вложенный контейнер, события изменения компонента вызываются при изменении компонента во вложенном контейнере.</span><span class="sxs-lookup"><span data-stu-id="d0d29-111">However, because services flow through to the nested container, component change events are raised when a component in a nested container is changed.</span></span>  
  
 <span data-ttu-id="d0d29-112">Такое нарушение четности при отслеживании событий также влияет на функциональность отмены, которая тесно связана с сериализацией.</span><span class="sxs-lookup"><span data-stu-id="d0d29-112">This disparity in event tracking also impacts undo functionality, which is closely tied to serialization.</span></span> <span data-ttu-id="d0d29-113">Стандартный механизм отмены использует <xref:System.ComponentModel.Design.IReferenceService> для наблюдения за изменениями, внесенными в компоненты.</span><span class="sxs-lookup"><span data-stu-id="d0d29-113">The standard undo engine uses <xref:System.ComponentModel.Design.IReferenceService> to track changes made to components.</span></span> <span data-ttu-id="d0d29-114">Если подсистема отмены не может опознать имя для компонента через справочную службу, то ядро будет игнорировать все изменения для этого компонента.</span><span class="sxs-lookup"><span data-stu-id="d0d29-114">If the undo engine cannot identify a name for a component through the reference service, the engine will ignore any changes for that component.</span></span> <span data-ttu-id="d0d29-115">Эта служба автоматически распознает изменения в автономных компонентах только в том случае, если они предоставляются как открытые свойства только для чтения с тем же именем в своих владельцах.</span><span class="sxs-lookup"><span data-stu-id="d0d29-115">This service automatically recognizes changes to contained components only if they are exposed as public read-only properties of the same name in their owners.</span></span> <span data-ttu-id="d0d29-116">В противном случае разработчик должен передать события изменения компонентов вплоть до владельца.</span><span class="sxs-lookup"><span data-stu-id="d0d29-116">Otherwise, the developer must pass component change events up to the owner.</span></span> <span data-ttu-id="d0d29-117">Например, если свойство `Text` вложенного компонента передается на свой компонент-владелец как свойство `Address`, то при изменении свойства `Text` необходимо программно изменить свойство для соответствующего свойства `Address`, иначе изменения не будут относиться к этому изменению при отмене.</span><span class="sxs-lookup"><span data-stu-id="d0d29-117">For example, if a nested component's `Text` property is resurfaced on its owning component as an `Address` property, when the `Text` property is changed, a property change must be programmatically made for the corresponding `Address` property or else that change will not be tracked by undo.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.INestedContainer" />
    <altmember cref="T:System.ComponentModel.IContainer" />
    <altmember cref="T:System.ComponentModel.ISite" />
    <altmember cref="T:System.ComponentModel.Design.IReferenceService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NestedContainer (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NestedContainer(System::ComponentModel::IComponent ^ owner);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.NestedContainer : System.ComponentModel.IComponent -&gt; System.ComponentModel.NestedContainer" Usage="new System.ComponentModel.NestedContainer owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="d0d29-118">Интерфейс <see cref="T:System.ComponentModel.IComponent" />, являющийся владельцем этого вложенного контейнера.</span><span class="sxs-lookup"><span data-stu-id="d0d29-118">The <see cref="T:System.ComponentModel.IComponent" /> that owns this nested container.</span></span></param>
        <summary><span data-ttu-id="d0d29-119">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.NestedContainer" />.</span><span class="sxs-lookup"><span data-stu-id="d0d29-119">Initializes a new instance of the <see cref="T:System.ComponentModel.NestedContainer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0d29-120">Этот конструктор прикрепляется к событию <xref:System.ComponentModel.IComponent.Disposed> своего владельца, так что метод <xref:System.ComponentModel.NestedContainer.Dispose%2A> для вложенного контейнера будет автоматически вызван.</span><span class="sxs-lookup"><span data-stu-id="d0d29-120">This constructor enlists in its owner's <xref:System.ComponentModel.IComponent.Disposed> event so that the nested container's <xref:System.ComponentModel.NestedContainer.Dispose%2A> method will automatically be called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d0d29-121"><paramref name="owner" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d0d29-121"><paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.NestedContainer.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="CreateSite">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ComponentModel.ISite CreateSite(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateSite (component As IComponent, name As String) As ISite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ComponentModel::ISite ^ CreateSite(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.CreateSite : System.ComponentModel.IComponent * string -&gt; System.ComponentModel.ISite" Usage="nestedContainer.CreateSite (component, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="d0d29-122">Компонент <see cref="T:System.ComponentModel.IComponent" />, для которого создается узел.</span><span class="sxs-lookup"><span data-stu-id="d0d29-122">The <see cref="T:System.ComponentModel.IComponent" /> to create a site for.</span></span></param>
        <param name="name"><span data-ttu-id="d0d29-123">Имя, которое нужно присвоить параметру <paramref name="component" />, или <see langword="null" />, чтобы опустить назначение имени.</span><span class="sxs-lookup"><span data-stu-id="d0d29-123">The name to assign to <paramref name="component" />, or <see langword="null" /> to skip the name assignment.</span></span></param>
        <summary><span data-ttu-id="d0d29-124">Создает внутри контейнера узел для компонента.</span><span class="sxs-lookup"><span data-stu-id="d0d29-124">Creates a site for the component within the container.</span></span></summary>
        <returns><span data-ttu-id="d0d29-125">Вновь созданный <see cref="T:System.ComponentModel.ISite" />.</span><span class="sxs-lookup"><span data-stu-id="d0d29-125">The newly created <see cref="T:System.ComponentModel.ISite" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0d29-126">Если параметр `name` имеет значение `null`, <xref:System.ComponentModel.IComponent> добавляется в вложенный контейнер без идентифицирующего имени.</span><span class="sxs-lookup"><span data-stu-id="d0d29-126">If the `name` parameter is `null`, the <xref:System.ComponentModel.IComponent> is added to the nested container without an identifying name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d0d29-127"><paramref name="component" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d0d29-127"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="nestedContainer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d0d29-128">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="d0d29-128"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d0d29-129">Освобождает ресурсы, используемые вложенным контейнером.</span><span class="sxs-lookup"><span data-stu-id="d0d29-129">Releases the resources used by the nested container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0d29-130">Этот метод вызывается методом Public `Dispose()` и методом <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="d0d29-130">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="d0d29-131">`Dispose()` вызывает защищенный метод `Dispose(Boolean)` с параметром `disposing`, для которого задано значение `true`.</span><span class="sxs-lookup"><span data-stu-id="d0d29-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="d0d29-132"><xref:System.Object.Finalize%2A> вызывает `Dispose`, для `disposing` задано значение `false`.</span><span class="sxs-lookup"><span data-stu-id="d0d29-132"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="d0d29-133">Если параметр `disposing` имеет значение true, этот метод освобождает все ресурсы, удерживаемые всеми управляемыми объектами, на которые ссылается этот <xref:System.ComponentModel.NestedContainer>.</span><span class="sxs-lookup"><span data-stu-id="d0d29-133">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.NestedContainer> references.</span></span> <span data-ttu-id="d0d29-134">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="d0d29-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d0d29-135">Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="d0d29-135">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="d0d29-136">При переопределении <see langword="Dispose(Boolean)" /> следует избегать ссылок на объекты, которые ранее были удалены в предыдущем вызове <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="d0d29-136">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="d0d29-137">Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />см. в разделе [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="d0d29-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="d0d29-138">Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [Переопределение метода Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="d0d29-138">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
        <altmember cref="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected override object GetService (Type service);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetService(class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetService (service As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetService(Type ^ service);" />
      <MemberSignature Language="F#" Value="override this.GetService : Type -&gt; obj" Usage="nestedContainer.GetService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="d0d29-139">Тип <see cref="T:System.Type" /> извлекаемой службы.</span><span class="sxs-lookup"><span data-stu-id="d0d29-139">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="d0d29-140">Получает объект службы указанного типа, если он доступен.</span><span class="sxs-lookup"><span data-stu-id="d0d29-140">Gets the service object of the specified type, if it is available.</span></span></summary>
        <returns><span data-ttu-id="d0d29-141">Объект <see cref="T:System.Object" />, реализующий запрошенную службу, или значение <see langword="null" />, если служба не может быть разрешена.</span><span class="sxs-lookup"><span data-stu-id="d0d29-141">An <see cref="T:System.Object" /> that implements the requested service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0d29-142">Этот метод переопределяет метод <xref:System.ComponentModel.Container.GetService%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d0d29-142">This method overrides the <xref:System.ComponentModel.Container.GetService%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d0d29-143">Эта реализация позволяет разрешать запросы только для служб <xref:System.ComponentModel.INestedContainer> и <xref:System.ComponentModel.IContainer>.</span><span class="sxs-lookup"><span data-stu-id="d0d29-143">This implementation only resolves requests for the <xref:System.ComponentModel.INestedContainer> and <xref:System.ComponentModel.IContainer> services.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Container.GetService(System.Type)" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.NestedContainer.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Owner { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.ComponentModel.IComponent" Usage="System.ComponentModel.NestedContainer.Owner" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.INestedContainer.Owner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0d29-144">Возвращает компонент-владелец для этого вложенного контейнера.</span><span class="sxs-lookup"><span data-stu-id="d0d29-144">Gets the owning component for this nested container.</span></span></summary>
        <value><span data-ttu-id="d0d29-145">Интерфейс <see cref="T:System.ComponentModel.IComponent" />, являющийся владельцем этого вложенного контейнера.</span><span class="sxs-lookup"><span data-stu-id="d0d29-145">The <see cref="T:System.ComponentModel.IComponent" /> that owns this nested container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0d29-146">Компонент-владелец — это характеристика, которая отличает вложенные контейнеры от обычных контейнеров.</span><span class="sxs-lookup"><span data-stu-id="d0d29-146">The owning component is the characteristic that differentiates nested containers from ordinary containers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.IContainer" />
        <altmember cref="P:System.ComponentModel.INestedContainer.Owner" />
      </Docs>
    </Member>
    <Member MemberName="OwnerName">
      <MemberSignature Language="C#" Value="protected virtual string OwnerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OwnerName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.NestedContainer.OwnerName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property OwnerName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ OwnerName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerName : string" Usage="System.ComponentModel.NestedContainer.OwnerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0d29-147">Возвращает имя компонента-владельца.</span><span class="sxs-lookup"><span data-stu-id="d0d29-147">Gets the name of the owning component.</span></span></summary>
        <value><span data-ttu-id="d0d29-148">Имя компонента-владельца.</span><span class="sxs-lookup"><span data-stu-id="d0d29-148">The name of the owning component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0d29-149">Это свойство может быть переопределено для предоставления имени пользовательского владельца.</span><span class="sxs-lookup"><span data-stu-id="d0d29-149">This property may be overridden to provide a custom owner name.</span></span> <span data-ttu-id="d0d29-150">Реализация по умолчанию ищет на сайте владельца <xref:System.ComponentModel.INestedSite> и вызывает <xref:System.ComponentModel.INestedSite.FullName%2A>или <xref:System.ComponentModel.ISite.Name%2A>, если вложенный сайт отсутствует.</span><span class="sxs-lookup"><span data-stu-id="d0d29-150">The default implementation searches the owner's site for <xref:System.ComponentModel.INestedSite> and calls <xref:System.ComponentModel.INestedSite.FullName%2A>, or <xref:System.ComponentModel.ISite.Name%2A> if there is no nested site.</span></span> <span data-ttu-id="d0d29-151">Если ни один из них недоступен, это свойство возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="d0d29-151">If neither is available, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
