<Type Name="TypeDescriptionProvider" FullName="System.ComponentModel.TypeDescriptionProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca1aa60f7485f80f21130a2d69cd85c00fd950b0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70468570" /></Metadata><TypeSignature Language="C#" Value="public abstract class TypeDescriptionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeDescriptionProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptionProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeDescriptionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptionProvider abstract" />
  <TypeSignature Language="F#" Value="type TypeDescriptionProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b8080-101">Предоставляет дополнительные метаданные для <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-101">Provides supplemental metadata to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8080-102"><xref:System.ComponentModel.TypeDescriptionProvider> Класс динамически расширяет сведения о типе, связанные с типом или объектом, путем добавления, изменения или скрытия таких характеристик, как атрибуты, свойства и события.</span><span class="sxs-lookup"><span data-stu-id="b8080-102">The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</span></span> <span data-ttu-id="b8080-103">Может существовать несколько классов поставщиков описания типов, которые предлагают метаданные для одного <xref:System.ComponentModel.TypeDescriptor>типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-103">There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="b8080-104">Существует два способа связать <xref:System.ComponentModel.TypeDescriptionProvider> с a: <xref:System.ComponentModel.TypeDescriptor></span><span class="sxs-lookup"><span data-stu-id="b8080-104">There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:</span></span>  
  
-   <span data-ttu-id="b8080-105">Во время разработки, когда целевому классу может быть назначен соответствующий <xref:System.ComponentModel.TypeDescriptionProviderAttribute> тег.</span><span class="sxs-lookup"><span data-stu-id="b8080-105">At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.</span></span>  
  
-   <span data-ttu-id="b8080-106">Во время выполнения, когда может быть вызван <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> один из методов <xref:System.ComponentModel.TypeDescriptor> класса.</span><span class="sxs-lookup"><span data-stu-id="b8080-106">At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called.</span></span> <span data-ttu-id="b8080-107">Для этих перегруженных методов требуется либо целевой объект, либо тип его класса.</span><span class="sxs-lookup"><span data-stu-id="b8080-107">These overloaded methods require either the target object or its class type.</span></span>  
  
 <span data-ttu-id="b8080-108"><xref:System.ComponentModel.TypeDescriptionProvider> Класс полагается на родительский объект того же типа, который указывается во время создания.</span><span class="sxs-lookup"><span data-stu-id="b8080-108">The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction.</span></span> <span data-ttu-id="b8080-109">Это позволяет классам, производным <xref:System.ComponentModel.CustomTypeDescriptor> от, выполнять выборочное Переопределение методов.</span><span class="sxs-lookup"><span data-stu-id="b8080-109">This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.</span></span>  
  
 <span data-ttu-id="b8080-110"><xref:System.ComponentModel.TypeDescriptionProvider> Экземпляры создаются только по запросу, что сводит к минимуму влияние пользовательской информации о типах на производительность.</span><span class="sxs-lookup"><span data-stu-id="b8080-110">Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance.</span></span>
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="b8080-111">Производный тип может быть помечен как <see langword="internal" /> или <see langword="private" />, но экземпляр типа <see cref="T:System.ComponentModel.TypeDescriptor" /> можно создать с помощью класса.</span><span class="sxs-lookup"><span data-stu-id="b8080-111">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span> <span data-ttu-id="b8080-112">Не записывайте небезопасный код, предполагая, что вызывающий объект является доверенным.</span><span class="sxs-lookup"><span data-stu-id="b8080-112">Do not write insecure code by assuming the caller is trusted.</span></span> <span data-ttu-id="b8080-113">Вместо этого следует предположить, что вызывающие объекты могут создавать экземпляры вашего типа при частичном доверии.</span><span class="sxs-lookup"><span data-stu-id="b8080-113">Assume instead that callers might create instances of your type in partial trust.</span></span></para></block>
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
    <altmember cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
    <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b8080-114">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-114">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8080-115">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-115">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8080-116">Этот конструктор эквивалентен вызову другого <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> конструктора со значением параметра, равным. `null`</span><span class="sxs-lookup"><span data-stu-id="b8080-116">This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.TypeDescriptionProvider parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parent As TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider(System::ComponentModel::TypeDescriptionProvider ^ parent);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeDescriptionProvider : System.ComponentModel.TypeDescriptionProvider -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="new System.ComponentModel.TypeDescriptionProvider parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="b8080-117">Поставщик описания родительского типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-117">The parent type description provider.</span></span></param>
        <summary><span data-ttu-id="b8080-118">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.TypeDescriptionProvider" />, используя поставщика описания родительского типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-118">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class using a parent type description provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8080-119">Если параметр имеет `null`значение, все <xref:System.ComponentModel.TypeDescriptionProvider> методы будут возвращать значения по умолчанию. `parent`</span><span class="sxs-lookup"><span data-stu-id="b8080-119">If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values.</span></span> <span data-ttu-id="b8080-120">В противном <xref:System.ComponentModel.TypeDescriptionProvider> случае все методы будут делегировать `parent`методы.</span><span class="sxs-lookup"><span data-stu-id="b8080-120">Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.</span></span>  
  
 <span data-ttu-id="b8080-121">В следующей таблице показаны возвращаемые по умолчанию <xref:System.ComponentModel.TypeDescriptionProvider> значения для методов.</span><span class="sxs-lookup"><span data-stu-id="b8080-121">The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.</span></span>  
  
|<span data-ttu-id="b8080-122">Метод</span><span class="sxs-lookup"><span data-stu-id="b8080-122">Method</span></span>|<span data-ttu-id="b8080-123">Возвращаемое значение по умолчанию</span><span class="sxs-lookup"><span data-stu-id="b8080-123">Default return value</span></span>|  
|------------|--------------------------|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  
|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|<span data-ttu-id="b8080-124">Вновь созданный объект посредством вызова <xref:System.Activator.CreateInstance%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="b8080-124">A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|<span data-ttu-id="b8080-125">Экземпляр <xref:System.ComponentModel.CustomTypeDescriptor> класса по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="b8080-125">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|<span data-ttu-id="b8080-126">Экземпляр <xref:System.ComponentModel.CustomTypeDescriptor> класса по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="b8080-126">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|<span data-ttu-id="b8080-127">`objectType` Первый параметр.</span><span class="sxs-lookup"><span data-stu-id="b8080-127">The `objectType` first parameter.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CustomTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj&#xA;override this.CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="typeDescriptionProvider.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b8080-128">Необязательный поставщик услуги.</span><span class="sxs-lookup"><span data-stu-id="b8080-128">An optional service provider.</span></span></param>
        <param name="objectType"><span data-ttu-id="b8080-129">Тип создаваемого объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-129">The type of object to create.</span></span> <span data-ttu-id="b8080-130">Значением этого параметра никогда не может быть <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-130">This parameter is never <see langword="null" />.</span></span></param>
        <param name="argTypes"><span data-ttu-id="b8080-131">Необязательный массив типов, представляющих типы параметров, передаваемые конструктору объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-131">An optional array of types that represent the parameter types to be passed to the object's constructor.</span></span> <span data-ttu-id="b8080-132">Этот массив может быть представлять собой значение <see langword="null" /> или его длина может быть нулевой.</span><span class="sxs-lookup"><span data-stu-id="b8080-132">This array can be <see langword="null" /> or of zero length.</span></span></param>
        <param name="args"><span data-ttu-id="b8080-133">Необязательный массив значений параметров для передачи в конструктор объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-133">An optional array of parameter values to pass to the object's constructor.</span></span></param>
        <summary><span data-ttu-id="b8080-134">Создает объект, которым можно заменить другой тип данных.</span><span class="sxs-lookup"><span data-stu-id="b8080-134">Creates an object that can substitute for another data type.</span></span></summary>
        <returns><span data-ttu-id="b8080-135">Объект <see cref="T:System.Object" /> для подстановки</span><span class="sxs-lookup"><span data-stu-id="b8080-135">The substitute <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8080-136">Объект <xref:System.IServiceProvider> , заданный `provider` параметром, передается <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> методом <xref:System.ComponentModel.TypeDescriptor> класса.</span><span class="sxs-lookup"><span data-stu-id="b8080-136">The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="b8080-137">`provider` Если `null` параметр не имеет значение, поставщик услуг может использовать поставщик описания типа для получения дополнительного контекста о вызове создания.</span><span class="sxs-lookup"><span data-stu-id="b8080-137">If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.</span></span>  
  
 <span data-ttu-id="b8080-138">`virtual` `provider` По умолчанию `null`метод возвращает результат метода, если имеет значение. <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>  <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A></span><span class="sxs-lookup"><span data-stu-id="b8080-138">The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method if `provider` is `null`.</span></span> <span data-ttu-id="b8080-139">Если `provider` имеет `null`значение , <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>  этот метод вызовет метод родительского поставщика.</span><span class="sxs-lookup"><span data-stu-id="b8080-139">If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b8080-140">Если производный класс не заинтересован в предоставлении замещающего экземпляра, он должен просто вызвать базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="b8080-140">If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetCache">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary GetCache (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionary GetCache(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCache (instance As Object) As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionary ^ GetCache(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetCache : obj -&gt; System.Collections.IDictionary&#xA;override this.GetCache : obj -&gt; System.Collections.IDictionary" Usage="typeDescriptionProvider.GetCache instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b8080-141">Объект, для которого возвращается кэш.</span><span class="sxs-lookup"><span data-stu-id="b8080-141">The object for which to get the cache.</span></span></param>
        <summary><span data-ttu-id="b8080-142">Возвращает кэш на пообъектной основе, доступный как пары "ключ-значение" <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-142">Gets a per-object cache, accessed as an <see cref="T:System.Collections.IDictionary" /> of key/value pairs.</span></span></summary>
        <returns><span data-ttu-id="b8080-143">Интерфейс <see cref="T:System.Collections.IDictionary" />, если предоставленный объект поддерживает кэширование; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-143">An <see cref="T:System.Collections.IDictionary" /> if the provided object supports caching; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8080-144"><xref:System.ComponentModel.TypeDescriptor> Может потребоваться выполнить сложные операции с коллекциями метаданных.</span><span class="sxs-lookup"><span data-stu-id="b8080-144">A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata.</span></span> <span data-ttu-id="b8080-145">Поскольку типы не выгружаются для жизненного цикла домена, <xref:System.ComponentModel.TypeDescriptor> класс автоматически кэширует результаты этих операций на основе типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-145">Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type.</span></span> <span data-ttu-id="b8080-146">Однако некоторые операции используют экземпляры динамических объектов.</span><span class="sxs-lookup"><span data-stu-id="b8080-146">However, some operations use live object instances.</span></span> <span data-ttu-id="b8080-147">Эти операции не могут кэшироваться внутри <xref:System.ComponentModel.TypeDescriptor> класса, так как их кэширование не позволит сборщику мусора предотвратить сбор объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-147">These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected.</span></span> <span data-ttu-id="b8080-148">Вместо этого <xref:System.Collections.IDictionary> класс позволяет использовать для каждого объекта кэш, доступ к которому осуществляется как к парам «ключ-значение», чтобы существовать в объекте. <xref:System.ComponentModel.TypeDescriptor></span><span class="sxs-lookup"><span data-stu-id="b8080-148">Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object.</span></span> <span data-ttu-id="b8080-149"><xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> Метод возвращает экземпляр этого кэша.</span><span class="sxs-lookup"><span data-stu-id="b8080-149">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache.</span></span> <span data-ttu-id="b8080-150">Метод <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> возвратит `null`  значение, если для объекта нет поддерживаемого кэша.</span><span class="sxs-lookup"><span data-stu-id="b8080-150">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object.</span></span>  
  
 <span data-ttu-id="b8080-151">Значение по <xref:System.ComponentModel.TypeDescriptionProvider> умолчанию <xref:System.ComponentModel.TypeDescriptor> , используемое, проверяет объект на наличие веб-компонента, реализующего <xref:System.ComponentModel.Design.IDictionaryService> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="b8080-151">The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface.</span></span> <span data-ttu-id="b8080-152">Если объект имеет значение, для хранения кэша объекта используется служба словаря.</span><span class="sxs-lookup"><span data-stu-id="b8080-152">If the object is, it uses the dictionary service to store the object's cache.</span></span> <span data-ttu-id="b8080-153">В противном случае возвращается `null`объект.</span><span class="sxs-lookup"><span data-stu-id="b8080-153">Otherwise, the object it returns `null`.</span></span> <span data-ttu-id="b8080-154">Другие поставщики описаний типов могут предоставлять собственную реализацию здесь.</span><span class="sxs-lookup"><span data-stu-id="b8080-154">Other type description providers may provide their own implementation here.</span></span> <span data-ttu-id="b8080-155">Например, объекты зависимостей могут просто присоединять свойство типа <xref:System.Collections.IDictionary>.</span><span class="sxs-lookup"><span data-stu-id="b8080-155">For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.ComponentModel.Design.IDictionaryService" />
      </Docs>
    </Member>
    <Member MemberName="GetExtendedTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetExtendedTypeDescriptor(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetExtendedTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetExtendedTypeDescriptor instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b8080-156">Объект, для которого возвращается расширенный дескриптор типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-156">The object for which to get the extended type descriptor.</span></span></param>
        <summary><span data-ttu-id="b8080-157">Возвращает расширенный настраиваемый дескриптор типа для данного объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-157">Gets an extended custom type descriptor for the given object.</span></span></summary>
        <returns><span data-ttu-id="b8080-158">Интерфейс <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, который может предоставить расширенные метаданные для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-158">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide extended metadata for the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8080-159">Расширенный дескриптор типа — это пользовательский дескриптор типа, который предоставляет свойства, которые другие объекты добавляют к этому объекту, но не определены в объекте на самом деле.</span><span class="sxs-lookup"><span data-stu-id="b8080-159">An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</span></span> <span data-ttu-id="b8080-160">Например, в [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] модели компонентов объекты, <xref:System.ComponentModel.IExtenderProvider> реализующие интерфейс, могут вкладывать свойства в другие объекты, находящиеся в том же логическом контейнере.</span><span class="sxs-lookup"><span data-stu-id="b8080-160">For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container.</span></span> <span data-ttu-id="b8080-161">Перегруженные <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> методы не возвращают дескриптор типа, предоставляющий эти дополнительные расширенные свойства.</span><span class="sxs-lookup"><span data-stu-id="b8080-161">The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties.</span></span> <span data-ttu-id="b8080-162"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> Метод возвращает набор этих расширенных свойств.</span><span class="sxs-lookup"><span data-stu-id="b8080-162">The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties.</span></span> <span data-ttu-id="b8080-163"><xref:System.ComponentModel.TypeDescriptor> Будет автоматически объединять результаты этих двух коллекций свойств.</span><span class="sxs-lookup"><span data-stu-id="b8080-163">The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections.</span></span> <span data-ttu-id="b8080-164">Хотя модель <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> компонентов поддерживает только расширенные свойства, может использоваться для расширенных атрибутов, а также для событий, если поставщик описания типа поддерживает его. [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</span><span class="sxs-lookup"><span data-stu-id="b8080-164">While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it.</span></span>  
  
 <span data-ttu-id="b8080-165"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>`virtual` по умолчанию возвращает дескриптор пользовательского типа, который возвращает пустые результаты, если родительский поставщик не был передан.</span><span class="sxs-lookup"><span data-stu-id="b8080-165"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</span></span> <span data-ttu-id="b8080-166">Если был передан родительский поставщик, этот метод вызовет <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> метод родительского поставщика.</span><span class="sxs-lookup"><span data-stu-id="b8080-166">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetExtenderProviders">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IExtenderProvider[] GetExtenderProviders(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetExtenderProviders (instance As Object) As IExtenderProvider()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::ComponentModel::IExtenderProvider ^&gt; ^ GetExtenderProviders(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetExtenderProviders : obj -&gt; System.ComponentModel.IExtenderProvider[]&#xA;override this.GetExtenderProviders : obj -&gt; System.ComponentModel.IExtenderProvider[]" Usage="typeDescriptionProvider.GetExtenderProviders instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IExtenderProvider[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b8080-167">Объект, для которого необходимо получить поставщики расширителей.</span><span class="sxs-lookup"><span data-stu-id="b8080-167">The object to get extender providers for.</span></span></param>
        <summary><span data-ttu-id="b8080-168">Получает поставщики расширителей для заданного объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-168">Gets the extender providers for the specified object.</span></span></summary>
        <returns><span data-ttu-id="b8080-169">Массив поставщиков расширителей для параметра <paramref name="instance" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-169">An array of extender providers for <paramref name="instance" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b8080-170"><paramref name="instance" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-170"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetFullComponentName : obj -&gt; string&#xA;override this.GetFullComponentName : obj -&gt; string" Usage="typeDescriptionProvider.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b8080-171">Заданный компонент.</span><span class="sxs-lookup"><span data-stu-id="b8080-171">The specified component.</span></span></param>
        <summary><span data-ttu-id="b8080-172">Возвращает имя заданного компонента или <see langword="null" />, если у компонента нет имени.</span><span class="sxs-lookup"><span data-stu-id="b8080-172">Gets the name of the specified component, or <see langword="null" /> if the component has no name.</span></span></summary>
        <returns><span data-ttu-id="b8080-173">Имя заданного компонента.</span><span class="sxs-lookup"><span data-stu-id="b8080-173">The name of the specified component.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b8080-174">Свойство <paramref name="component" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-174"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b8080-175">Выполняет обычное отражение для объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-175">Performs normal reflection against an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetReflectionType : obj -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b8080-176">Экземпляр типа (не должен быть значением <see langword="null" />).</span><span class="sxs-lookup"><span data-stu-id="b8080-176">An instance of the type (should not be <see langword="null" />).</span></span></param>
        <summary><span data-ttu-id="b8080-177">Выполняет обычное отражение для данного объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-177">Performs normal reflection against the given object.</span></span></summary>
        <returns><span data-ttu-id="b8080-178">Тип отражения для этого объекта <paramref name="instance" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-178">The type of reflection for this <paramref name="instance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8080-179">Метод является версией <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> метода более низкого уровня. <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A></span><span class="sxs-lookup"><span data-stu-id="b8080-179">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="b8080-180">Если для объекта не удается найти дескриптор настраиваемого типа, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> вызывается для выполнения обычного отражения объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-180">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="b8080-181">Используйте эту перегрузку метода, если вы вызвали член дескриптора типа, который использует экземпляр вместо типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-181">Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b8080-182">Свойство <paramref name="instance" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-182"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (objectType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="member this.GetReflectionType : Type -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="b8080-183">Тип объекта, для которого возвращается интерфейс <see cref="T:System.Reflection.IReflect" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-183">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span></span></param>
        <summary><span data-ttu-id="b8080-184">Выполняет обычное отражение для типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-184">Performs normal reflection against a type.</span></span></summary>
        <returns><span data-ttu-id="b8080-185">Тип отражения для этого объекта <paramref name="objectType" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-185">The type of reflection for this <paramref name="objectType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8080-186">Метод является версией <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> метода более низкого уровня. <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A></span><span class="sxs-lookup"><span data-stu-id="b8080-186">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="b8080-187">Если для объекта не удается найти дескриптор настраиваемого типа, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> вызывается для выполнения обычного отражения объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-187">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="b8080-188">Используйте эту перегрузку метода, если вы вызвали член дескриптора типа, который использует тип вместо экземпляра.</span><span class="sxs-lookup"><span data-stu-id="b8080-188">Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b8080-189">Свойство <paramref name="objectType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-189"><paramref name="objectType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public virtual Type GetReflectionType (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReflectionType(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReflectionType (objectType As Type, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetReflectionType(Type ^ objectType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetReflectionType : Type * obj -&gt; Type&#xA;override this.GetReflectionType : Type * obj -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType (objectType, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="b8080-190">Тип объекта, для которого возвращается интерфейс <see cref="T:System.Reflection.IReflect" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-190">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span></span></param>
        <param name="instance"><span data-ttu-id="b8080-191">Экземпляр типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-191">An instance of the type.</span></span> <span data-ttu-id="b8080-192">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-192">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="b8080-193">Выполняет обычное отражение для заданного объекта с заданным типом.</span><span class="sxs-lookup"><span data-stu-id="b8080-193">Performs normal reflection against the given object with the given type.</span></span></summary>
        <returns><span data-ttu-id="b8080-194">Тип отражения для этого объекта <paramref name="objectType" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-194">The type of reflection for this <paramref name="objectType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8080-195">Метод является версией <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> метода более низкого уровня. <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A></span><span class="sxs-lookup"><span data-stu-id="b8080-195">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="b8080-196">Если для объекта не удается найти дескриптор настраиваемого типа, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> вызывается для выполнения обычного отражения объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-196">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b8080-197">Этот метод является прототипом <see langword="virtual" />, а по умолчанию возвращает <paramref name="objectType" /> , если родительский поставщик не был передан.</span><span class="sxs-lookup"><span data-stu-id="b8080-197">This method is prototyped as <see langword="virtual" />, and by default returns <paramref name="objectType" /> if no parent provider was passed.</span></span> <span data-ttu-id="b8080-198">Если был передан родительский поставщик, этот метод вызовет <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> метод родительского поставщика.</span><span class="sxs-lookup"><span data-stu-id="b8080-198">If a parent provider was passed, this method will invoke the parent provider's <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> method.</span></span></para></block>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public virtual Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeType : Type -&gt; Type&#xA;override this.GetRuntimeType : Type -&gt; Type" Usage="typeDescriptionProvider.GetRuntimeType reflectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reflectionType"><span data-ttu-id="b8080-199">Тип, который нужно преобразовать в соответствующий эквивалент среды выполнения.</span><span class="sxs-lookup"><span data-stu-id="b8080-199">The type to convert to its runtime equivalent.</span></span></param>
        <summary><span data-ttu-id="b8080-200">Преобразует тип отражения в тип среды выполнения.</span><span class="sxs-lookup"><span data-stu-id="b8080-200">Converts a reflection type into a runtime type.</span></span></summary>
        <returns><span data-ttu-id="b8080-201">Тип <see cref="T:System.Type" />, представляющий эквивалент среды выполнения для типа <paramref name="reflectionType" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-201">A <see cref="T:System.Type" /> that represents the runtime equivalent of <paramref name="reflectionType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8080-202">Метод обращается к методу, чтобы преобразовать тип отражения обратно в тип среды выполнения. <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A></span><span class="sxs-lookup"><span data-stu-id="b8080-202">The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type.</span></span> <span data-ttu-id="b8080-203">Использовать метод предпочтительнее, чем <xref:System.Type.UnderlyingSystemType%2A> использовать свойство, которое использовалось в более ранних версиях для возврата типа среды выполнения. <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A></span><span class="sxs-lookup"><span data-stu-id="b8080-203">Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b8080-204">Свойство <paramref name="reflectionType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-204"><paramref name="reflectionType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeDescriptor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b8080-205">Возвращает настраиваемый дескриптор типа для заданного типа или объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-205">Gets a custom type descriptor for the given type or object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b8080-206">Экземпляр типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-206">An instance of the type.</span></span> <span data-ttu-id="b8080-207">Может быть значением <see langword="null" />, если в дескриптор <see cref="T:System.ComponentModel.TypeDescriptor" /> не передан никакой экземпляр.</span><span class="sxs-lookup"><span data-stu-id="b8080-207">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="b8080-208">Возвращает настраиваемый дескриптор типа для заданного объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-208">Gets a custom type descriptor for the given object.</span></span></summary>
        <returns><span data-ttu-id="b8080-209">Дескриптор <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, который может предоставить метаданные для этого типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-209">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b8080-210">Свойство <paramref name="instance" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-210"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (objectType As Type) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="member this.GetTypeDescriptor : Type -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="b8080-211">Тип объекта, для которого возвращается дескриптор типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-211">The type of object for which to retrieve the type descriptor.</span></span></param>
        <summary><span data-ttu-id="b8080-212">Возвращает настраиваемый дескриптор типа для заданного типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-212">Gets a custom type descriptor for the given type.</span></span></summary>
        <returns><span data-ttu-id="b8080-213">Дескриптор <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, который может предоставить метаданные для этого типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-213">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeDescriptor (objectType As Type, instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeDescriptor : Type * obj -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetTypeDescriptor : Type * obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor (objectType, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="b8080-214">Тип объекта, для которого возвращается дескриптор типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-214">The type of object for which to retrieve the type descriptor.</span></span></param>
        <param name="instance"><span data-ttu-id="b8080-215">Экземпляр типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-215">An instance of the type.</span></span> <span data-ttu-id="b8080-216">Может быть значением <see langword="null" />, если в дескриптор <see cref="T:System.ComponentModel.TypeDescriptor" /> не передан никакой экземпляр.</span><span class="sxs-lookup"><span data-stu-id="b8080-216">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="b8080-217">Возвращает настраиваемый дескриптор типа для заданного типа и объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-217">Gets a custom type descriptor for the given type and object.</span></span></summary>
        <returns><span data-ttu-id="b8080-218">Дескриптор <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, который может предоставить метаданные для этого типа.</span><span class="sxs-lookup"><span data-stu-id="b8080-218">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8080-219">Этот метод является прототипом `virtual` , и по умолчанию возвращает пустой дескриптор, если родительский поставщик не был передан.</span><span class="sxs-lookup"><span data-stu-id="b8080-219">This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed.</span></span> <span data-ttu-id="b8080-220">Если был передан родительский поставщик, этот метод вызовет <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> метод родительского поставщика.</span><span class="sxs-lookup"><span data-stu-id="b8080-220">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b8080-221"><see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> Метод должен возвращать пользовательский дескриптор типа для объекта.</span><span class="sxs-lookup"><span data-stu-id="b8080-221">The <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> method should return a custom type descriptor for the object.</span></span> <span data-ttu-id="b8080-222">Если метод не предоставляет сведения о типе для объекта, он должен вернуть <see langword="null" />значение.</span><span class="sxs-lookup"><span data-stu-id="b8080-222">If the method does not provide type information for the object, it should return <see langword="null" />.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public virtual bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSupportedType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedType : Type -&gt; bool&#xA;override this.IsSupportedType : Type -&gt; bool" Usage="typeDescriptionProvider.IsSupportedType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b8080-223">Тип для проверки на совместимость.</span><span class="sxs-lookup"><span data-stu-id="b8080-223">The type to test for compatibility.</span></span></param>
        <summary><span data-ttu-id="b8080-224">Получает значение, указывающее, совместим ли заданный тип с описанием типа и его цепочкой поставщиков описаний типов.</span><span class="sxs-lookup"><span data-stu-id="b8080-224">Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</span></span></summary>
        <returns><span data-ttu-id="b8080-225">Значение <see langword="true" />, если тип <paramref name="type" /> совместим с описанием типа и его цепочкой поставщиков описаний типов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-225"><see langword="true" /> if <paramref name="type" /> is compatible with the type description and its chain of type description providers; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b8080-226">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b8080-226"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
