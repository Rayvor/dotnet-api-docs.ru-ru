<Type Name="LicenseException" FullName="System.ComponentModel.LicenseException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2cb4a462669b804bb26596da588282dff7e358a3" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70583745" /></Metadata><TypeSignature Language="C#" Value="public class LicenseException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit LicenseException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseException" />
  <TypeSignature Language="VB.NET" Value="Public Class LicenseException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicenseException : SystemException" />
  <TypeSignature Language="F#" Value="type LicenseException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6b076-101">Представляет исключение, возникающее, когда компоненту не может быть предоставлена лицензия.</span><span class="sxs-lookup"><span data-stu-id="6b076-101">Represents the exception thrown when a component cannot be granted a license.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b076-102">Метод <xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=nameWithType> вызывается <xref:System.ComponentModel.LicenseException> , когда компонент не может получить действительную лицензию.</span><span class="sxs-lookup"><span data-stu-id="6b076-102">The <xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=nameWithType> method throws <xref:System.ComponentModel.LicenseException> when a component cannot obtain a valid license.</span></span> <span data-ttu-id="6b076-103">Это происходит, когда компонент либо не лицензирован, либо имеет лицензию, но ему не может быть предоставлена действительная лицензия.</span><span class="sxs-lookup"><span data-stu-id="6b076-103">This occurs when a component is either not licensed, or is licensed but cannot be granted a valid license.</span></span>  
  
 <span data-ttu-id="6b076-104">Дополнительные сведения о лицензировании см. в разделе [руководство. Лицензирование компонентов и элементов управления](https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span><span class="sxs-lookup"><span data-stu-id="6b076-104">For more information on licensing, see [How to: License Components and Controls](https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b076-105">В следующем примере кода показано, как перехватить <xref:System.ComponentModel.LicenseException> и интерпретировать его содержимое.</span><span class="sxs-lookup"><span data-stu-id="6b076-105">The following code example shows how to catch a <xref:System.ComponentModel.LicenseException> and interpret its content.</span></span> <span data-ttu-id="6b076-106">В этом примере приложение вызывает <xref:System.ComponentModel.LicenseManager.Validate%2A> метод <xref:System.Windows.Forms.Form?displayProperty=nameWithType> для, который не имеет лицензии.</span><span class="sxs-lookup"><span data-stu-id="6b076-106">In the sample, the application calls the <xref:System.ComponentModel.LicenseManager.Validate%2A> method for a <xref:System.Windows.Forms.Form?displayProperty=nameWithType> that is not licensed.</span></span> <span data-ttu-id="6b076-107">После перехвата исключения в примере извлекается соответствующее сообщение об ошибке, тип компонента, которому не была предоставлена лицензия, трассировка стека и источник исключения.</span><span class="sxs-lookup"><span data-stu-id="6b076-107">Upon catching the exception, the sample fetches the respective error message, the type of component that was not granted a license, the stack trace, and the origin of the exception.</span></span>  
  
 <span data-ttu-id="6b076-108">В <xref:System.ComponentModel.LicenseProvider> этом примере требуется, чтобы был указан параметр, <xref:System.Windows.Forms.Form?displayProperty=nameWithType> помечающий <xref:System.ComponentModel.LicenseProviderAttribute> с помощью атрибута.</span><span class="sxs-lookup"><span data-stu-id="6b076-108">This example requires that you have specified the <xref:System.ComponentModel.LicenseProvider> by marking the <xref:System.Windows.Forms.Form?displayProperty=nameWithType> with a <xref:System.ComponentModel.LicenseProviderAttribute> attribute.</span></span> <span data-ttu-id="6b076-109">Дополнительные сведения о том, как это сделать, см. <xref:System.ComponentModel.LicenseManager> в разделе класс.</span><span class="sxs-lookup"><span data-stu-id="6b076-109">For more information on how to do this, see the <xref:System.ComponentModel.LicenseManager> class.</span></span>  
  
 [!code-cpp[LicenseException#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LicenseException/CPP/licenseex.cpp#1)]
 [!code-csharp[LicenseException#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LicenseException/CS/licenseex.cs#1)]
 [!code-vb[LicenseException#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LicenseException/VB/licenseex.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseContext" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6b076-110">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.LicenseException" />.</span><span class="sxs-lookup"><span data-stu-id="6b076-110">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseException (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseException(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.LicenseException : Type -&gt; System.ComponentModel.LicenseException" Usage="new System.ComponentModel.LicenseException type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6b076-111">Объект <see cref="T:System.Type" />, представляющий тип компонента, которому не была предоставлена лицензия.</span><span class="sxs-lookup"><span data-stu-id="6b076-111">A <see cref="T:System.Type" /> that represents the type of component that was not granted a license.</span></span></param>
        <summary><span data-ttu-id="6b076-112">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.LicenseException" /> для типа компонента, которому было отказано в лицензии.</span><span class="sxs-lookup"><span data-stu-id="6b076-112">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseException" /> class for the type of component that was denied a license.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LicenseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LicenseException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.LicenseException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.ComponentModel.LicenseException" Usage="new System.ComponentModel.LicenseException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="6b076-113">Метод <see cref="T:System.Runtime.Serialization.SerializationInfo" />, используемый для десериализации.</span><span class="sxs-lookup"><span data-stu-id="6b076-113">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to be used for deserialization.</span></span></param>
        <param name="context"><span data-ttu-id="6b076-114">Объект назначения, используемый для десериализации.</span><span class="sxs-lookup"><span data-stu-id="6b076-114">The destination to be used for deserialization.</span></span></param>
        <summary><span data-ttu-id="6b076-115">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.LicenseException" /> с заданными объектами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span><span class="sxs-lookup"><span data-stu-id="6b076-115">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseException" /> class with the given <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseException (Type type, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseException(Type ^ type, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.LicenseException : Type * obj -&gt; System.ComponentModel.LicenseException" Usage="new System.ComponentModel.LicenseException (type, instance)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6b076-116">Объект <see cref="T:System.Type" />, представляющий тип компонента, которому не была предоставлена лицензия.</span><span class="sxs-lookup"><span data-stu-id="6b076-116">A <see cref="T:System.Type" /> that represents the type of component that was not granted a license.</span></span></param>
        <param name="instance"><span data-ttu-id="6b076-117">Экземпляр компонента, которому не была предоставлена лицензия.</span><span class="sxs-lookup"><span data-stu-id="6b076-117">The instance of the component that was not granted a license.</span></span></param>
        <summary><span data-ttu-id="6b076-118">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.LicenseException" /> для типа и экземпляра компонента, которому было отказано в лицензии.</span><span class="sxs-lookup"><span data-stu-id="6b076-118">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseException" /> class for the type and the instance of the component that was denied a license.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseException (Type type, object instance, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, object instance, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseException(Type ^ type, System::Object ^ instance, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.LicenseException : Type * obj * string -&gt; System.ComponentModel.LicenseException" Usage="new System.ComponentModel.LicenseException (type, instance, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6b076-119">Объект <see cref="T:System.Type" />, представляющий тип компонента, которому не была предоставлена лицензия.</span><span class="sxs-lookup"><span data-stu-id="6b076-119">A <see cref="T:System.Type" /> that represents the type of component that was not granted a license.</span></span></param>
        <param name="instance"><span data-ttu-id="6b076-120">Экземпляр компонента, которому не была предоставлена лицензия.</span><span class="sxs-lookup"><span data-stu-id="6b076-120">The instance of the component that was not granted a license.</span></span></param>
        <param name="message"><span data-ttu-id="6b076-121">Отображаемое сообщение исключения.</span><span class="sxs-lookup"><span data-stu-id="6b076-121">The exception message to display.</span></span></param>
        <summary><span data-ttu-id="6b076-122">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.LicenseException" /> для типа и экземпляра компонента, которому было отказано в лицензии, вместе с выводимым сообщением.</span><span class="sxs-lookup"><span data-stu-id="6b076-122">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseException" /> class for the type and the instance of the component that was denied a license, along with a message to display.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseException (Type type, object instance, string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, object instance, string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseException(Type ^ type, System::Object ^ instance, System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.LicenseException : Type * obj * string * Exception -&gt; System.ComponentModel.LicenseException" Usage="new System.ComponentModel.LicenseException (type, instance, message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6b076-123">Объект <see cref="T:System.Type" />, представляющий тип компонента, которому не была предоставлена лицензия.</span><span class="sxs-lookup"><span data-stu-id="6b076-123">A <see cref="T:System.Type" /> that represents the type of component that was not granted a license.</span></span></param>
        <param name="instance"><span data-ttu-id="6b076-124">Экземпляр компонента, которому не была предоставлена лицензия.</span><span class="sxs-lookup"><span data-stu-id="6b076-124">The instance of the component that was not granted a license.</span></span></param>
        <param name="message"><span data-ttu-id="6b076-125">Отображаемое сообщение исключения.</span><span class="sxs-lookup"><span data-stu-id="6b076-125">The exception message to display.</span></span></param>
        <param name="innerException"><span data-ttu-id="6b076-126">Объект <see cref="T:System.Exception" />, представляющий исходное исключение.</span><span class="sxs-lookup"><span data-stu-id="6b076-126">An <see cref="T:System.Exception" /> that represents the original exception.</span></span></param>
        <summary><span data-ttu-id="6b076-127">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.LicenseException" /> для типа и экземпляра компонента, которому было отказано в лицензии, вместе с отображаемым сообщением и исходным вызываемым исключением.</span><span class="sxs-lookup"><span data-stu-id="6b076-127">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseException" /> class for the type and the instance of the component that was denied a license, along with a message to display and the original exception thrown.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="licenseException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="6b076-128">Метод <see cref="T:System.Runtime.Serialization.SerializationInfo" />, используемый для десериализации.</span><span class="sxs-lookup"><span data-stu-id="6b076-128">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to be used for deserialization.</span></span></param>
        <param name="context"><span data-ttu-id="6b076-129">Объект назначения, используемый для десериализации.</span><span class="sxs-lookup"><span data-stu-id="6b076-129">The destination to be used for deserialization.</span></span></param>
        <summary><span data-ttu-id="6b076-130">Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> сведениями об исключении.</span><span class="sxs-lookup"><span data-stu-id="6b076-130">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6b076-131">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6b076-131"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LicensedType">
      <MemberSignature Language="C#" Value="public Type LicensedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type LicensedType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseException.LicensedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LicensedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ LicensedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LicensedType : Type" Usage="System.ComponentModel.LicenseException.LicensedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b076-132">Возвращает тип компонента, которому не была предоставлена лицензия.</span><span class="sxs-lookup"><span data-stu-id="6b076-132">Gets the type of the component that was not granted a license.</span></span></summary>
        <value><span data-ttu-id="6b076-133">Объект <see cref="T:System.Type" />, представляющий тип компонента, которому не была предоставлена лицензия.</span><span class="sxs-lookup"><span data-stu-id="6b076-133">A <see cref="T:System.Type" /> that represents the type of component that was not granted a license.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>
