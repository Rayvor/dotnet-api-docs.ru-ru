<Type Name="HandledEventHandler" FullName="System.ComponentModel.HandledEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c5a173c9e9e66a50f915bef69d408bd8352d720" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75147198" /></Metadata><TypeSignature Language="C#" Value="public delegate void HandledEventHandler(object sender, HandledEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HandledEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.HandledEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub HandledEventHandler(sender As Object, e As HandledEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void HandledEventHandler(System::Object ^ sender, HandledEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type HandledEventHandler = delegate of obj * HandledEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.HandledEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="cfe00-101">Источник события.</span><span class="sxs-lookup"><span data-stu-id="cfe00-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="cfe00-102">Объект <see cref="T:System.ComponentModel.HandledEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="cfe00-102">A <see cref="T:System.ComponentModel.HandledEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="cfe00-103">Представляет метод, который может обрабатывать события, которые могут требовать или не требовать дальнейшей обработки после возвращения из обработчика событий.</span><span class="sxs-lookup"><span data-stu-id="cfe00-103">Represents a method that can handle events which may or may not require further processing after the event handler has returned.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe00-104">Этот делегат можно использовать с собственными событиями, если свойство <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> предоставляет достаточно данных событий.</span><span class="sxs-lookup"><span data-stu-id="cfe00-104">This delegate is available for use with your own events when the <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> property provides sufficient event data.</span></span> <span data-ttu-id="cfe00-105">Обработчик событий может задать свойству <xref:System.ComponentModel.HandledEventArgs.Handled%2A> значение `true`, если вся необходимая обработка завершена в обработчике.</span><span class="sxs-lookup"><span data-stu-id="cfe00-105">The event handler can set the <xref:System.ComponentModel.HandledEventArgs.Handled%2A> property to `true` if all necessary processing has been completed in the handler.</span></span>  
  
 <span data-ttu-id="cfe00-106">Как правило, события, требующие этой функции, также потребует дополнительных данных о событиях и будут использовать класс, производный от <xref:System.ComponentModel.HandledEventArgs>, а также соответствующий тип делегата с аналогичным именем.</span><span class="sxs-lookup"><span data-stu-id="cfe00-106">Typically, events that require this functionality will also require additional event data, and will use a class that derives from <xref:System.ComponentModel.HandledEventArgs> along with a corresponding, similarly-named delegate type.</span></span> <span data-ttu-id="cfe00-107">Например, событие <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> использует <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs> тип данных события и тип делегата <xref:System.Windows.Forms.DataGridViewRowPrePaintEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="cfe00-107">For example, the <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> event uses the <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs> event-data type and the <xref:System.Windows.Forms.DataGridViewRowPrePaintEventHandler> delegate type.</span></span> <span data-ttu-id="cfe00-108">Поскольку делегаты не наследуются, <xref:System.ComponentModel.HandledEventHandler> редко используются.</span><span class="sxs-lookup"><span data-stu-id="cfe00-108">Because delegates are not inherited, the <xref:System.ComponentModel.HandledEventHandler> is rarely used.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
