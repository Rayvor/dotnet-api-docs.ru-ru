<Type Name="CodeTaskFactory" FullName="Microsoft.Build.Tasks.CodeTaskFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe4100f80ff4eac6551ee81bd2c3585038435842" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69300824" /></Metadata><TypeSignature Language="C#" Value="public class CodeTaskFactory : Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeTaskFactory extends System.Object implements class Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.CodeTaskFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeTaskFactory&#xA;Implements ITaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeTaskFactory : Microsoft::Build::Framework::ITaskFactory" />
  <TypeSignature Language="F#" Value="type CodeTaskFactory = class&#xA;    interface ITaskFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a3f61-101">Фабрика задачи, которая может взять поддерживаемый кодом DOM язык и создать из него задачу.</span><span class="sxs-lookup"><span data-stu-id="a3f61-101">A task factory which can take a code DOM supported language and create a task from it.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTaskFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.CodeTaskFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTaskFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3f61-102">Создает фабрику задач.</span><span class="sxs-lookup"><span data-stu-id="a3f61-102">Creates the task factory.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupTask">
      <MemberSignature Language="C#" Value="public void CleanupTask (Microsoft.Build.Framework.ITask task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanupTask(class Microsoft.Build.Framework.ITask task) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.CodeTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CleanupTask (task As ITask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanupTask(Microsoft::Build::Framework::ITask ^ task);" />
      <MemberSignature Language="F#" Value="abstract member CleanupTask : Microsoft.Build.Framework.ITask -&gt; unit&#xA;override this.CleanupTask : Microsoft.Build.Framework.ITask -&gt; unit" Usage="codeTaskFactory.CleanupTask task" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="Microsoft.Build.Framework.ITask" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="a3f61-103">Задача для очистки.</span><span class="sxs-lookup"><span data-stu-id="a3f61-103">The task to clean up.</span></span></param>
        <summary><span data-ttu-id="a3f61-104">Удаляет контекст или состояние, используемые в задаче, если таковые имеются.</span><span class="sxs-lookup"><span data-stu-id="a3f61-104">Cleans up any context or state used in a task.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine loggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine loggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.CodeTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (loggingHost As IBuildEngine) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ loggingHost);" />
      <MemberSignature Language="F#" Value="abstract member CreateTask : Microsoft.Build.Framework.IBuildEngine -&gt; Microsoft.Build.Framework.ITask&#xA;override this.CreateTask : Microsoft.Build.Framework.IBuildEngine -&gt; Microsoft.Build.Framework.ITask" Usage="codeTaskFactory.CreateTask loggingHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="loggingHost"><span data-ttu-id="a3f61-105">Узел, на котором ведется журнал фабрики задач.</span><span class="sxs-lookup"><span data-stu-id="a3f61-105">The host that logs information from the task factory.</span></span></param>
        <summary><span data-ttu-id="a3f61-106">Создает экземпляр <c>taskfactory</c>, содержащий данные, которые необходимо обновлять между вызовами задачи.</span><span class="sxs-lookup"><span data-stu-id="a3f61-106">Create a <c>taskfactory</c> instance which contains the data that needs to be refreshed between task invocations.</span></span></summary>
        <returns><span data-ttu-id="a3f61-107">Новая задача.</span><span class="sxs-lookup"><span data-stu-id="a3f61-107">The new task.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FactoryName">
      <MemberSignature Language="C#" Value="public string FactoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FactoryName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.CodeTaskFactory.FactoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FactoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FactoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FactoryName : string" Usage="Microsoft.Build.Tasks.CodeTaskFactory.FactoryName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ITaskFactory.FactoryName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f61-108">Это свойство используется модулем MSBuild для ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="a3f61-108">The MSBuild engine uses this for logging.</span></span></summary>
        <value><span data-ttu-id="a3f61-109">Имя данной задачи.</span><span class="sxs-lookup"><span data-stu-id="a3f61-109">The name of the task.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskParameters">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.CodeTaskFactory.GetTaskParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTaskParameters () As TaskPropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ GetTaskParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetTaskParameters : unit -&gt; Microsoft.Build.Framework.TaskPropertyInfo[]&#xA;override this.GetTaskParameters : unit -&gt; Microsoft.Build.Framework.TaskPropertyInfo[]" Usage="codeTaskFactory.GetTaskParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.GetTaskParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.TaskPropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3f61-110">Получает сведения о типе для всех параметров задачи.</span><span class="sxs-lookup"><span data-stu-id="a3f61-110">Gets the type information for all task parameters.</span></span></summary>
        <returns><span data-ttu-id="a3f61-111">Массив сведений о типе для всех параметров задачи.</span><span class="sxs-lookup"><span data-stu-id="a3f61-111">An array of the type information for all task parameters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; taskParameters, string taskElementContents, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; taskParameters, string taskElementContents, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.CodeTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, taskParameters As IDictionary(Of String, TaskPropertyInfo), taskElementContents As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ taskParameters, System::String ^ taskElementContents, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool&#xA;override this.Initialize : string * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool" Usage="codeTaskFactory.Initialize (taskName, taskParameters, taskElementContents, taskFactoryLoggingHost)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="taskParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" />
        <Parameter Name="taskElementContents" Type="System.String" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskName"><span data-ttu-id="a3f61-112">Имя данной задачи.</span><span class="sxs-lookup"><span data-stu-id="a3f61-112">The name of the task.</span></span></param>
        <param name="taskParameters"><span data-ttu-id="a3f61-113">Параметры для задачи.</span><span class="sxs-lookup"><span data-stu-id="a3f61-113">The parameters for the task.</span></span></param>
        <param name="taskElementContents"><span data-ttu-id="a3f61-114">Содержимое элемента для задачи.</span><span class="sxs-lookup"><span data-stu-id="a3f61-114">The element contents for the task.</span></span></param>
        <param name="taskFactoryLoggingHost"><span data-ttu-id="a3f61-115">Узел, на котором ведется журнал, получающий сведения о задачах.</span><span class="sxs-lookup"><span data-stu-id="a3f61-115">The logging host that gets information about tasks.</span></span></param>
        <summary><span data-ttu-id="a3f61-116">Позволяет инициализировать фабрику задач.</span><span class="sxs-lookup"><span data-stu-id="a3f61-116">Initializes the task factory.</span></span></summary>
        <returns><span data-ttu-id="a3f61-117">Новая фабрика задач.</span><span class="sxs-lookup"><span data-stu-id="a3f61-117">The new task factory.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskType">
      <MemberSignature Language="C#" Value="public Type TaskType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TaskType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.CodeTaskFactory.TaskType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TaskType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TaskType : Type" Usage="Microsoft.Build.Tasks.CodeTaskFactory.TaskType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f61-118">Представляет тип задачи.</span><span class="sxs-lookup"><span data-stu-id="a3f61-118">Represents the type of task.</span></span></summary>
        <value><span data-ttu-id="a3f61-119">Тип задачи.</span><span class="sxs-lookup"><span data-stu-id="a3f61-119">The task type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
