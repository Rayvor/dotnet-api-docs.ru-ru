<Type Name="TcpChannel" FullName="System.Runtime.Remoting.Channels.Tcp.TcpChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1aa6a5969aa5becc336cb236a0da4932e7c2a1e6" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68398934" /></Metadata><TypeSignature Language="C#" Value="public class TcpChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.IChannelSender, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpChannel&#xA;Implements IChannelReceiver, IChannelSender, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpChannel : System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::IChannelSender, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <TypeSignature Language="F#" Value="type TcpChannel = class&#xA;    interface IChannelReceiver&#xA;    interface IChannel&#xA;    interface IChannelSender&#xA;    interface ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="fa847-101">Обеспечивает реализацию канала, в котором для передачи сообщений используется протокол TCP.</span><span class="sxs-lookup"><span data-stu-id="fa847-101">Provides a channel implementation that uses the TCP protocol to transmit messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="fa847-102">Каналы переносят сообщения между границами удаленного взаимодействия (например, между компьютерами в доменах приложений).</span><span class="sxs-lookup"><span data-stu-id="fa847-102">Channels transport messages across remoting boundaries (for example, between computers on application domains).</span></span> <span data-ttu-id="fa847-103">Класс является удобным классом, объединяющим функциональные возможности <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> класса и <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> класса. <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel></span><span class="sxs-lookup"><span data-stu-id="fa847-103">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> class is a convenience class combining the functionality of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> class and the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class.</span></span>  
  
 <span data-ttu-id="fa847-104">Каналы используются .NET Framework инфраструктурой удаленного взаимодействия для передачи удаленных вызовов.</span><span class="sxs-lookup"><span data-stu-id="fa847-104">Channels are used by the .NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="fa847-105">Когда клиент вызывает удаленный объект, вызов сериализуется в сообщение, которое отправляется по каналу клиента и получается по каналу сервера.</span><span class="sxs-lookup"><span data-stu-id="fa847-105">When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="fa847-106">Затем он десериализуется и обрабатывается.</span><span class="sxs-lookup"><span data-stu-id="fa847-106">It is then deserialized and processed.</span></span> <span data-ttu-id="fa847-107">Все возвращенные значения передаются по каналу сервера и принимаются по каналу клиента.</span><span class="sxs-lookup"><span data-stu-id="fa847-107">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="fa847-108">Для выполнения дополнительной обработки сообщений можно указать реализации <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> и <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> , с помощью которых передаются <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> все сообщения, обрабатываемые.</span><span class="sxs-lookup"><span data-stu-id="fa847-108">To perform additional processing of messages, you can specify implementations of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> and <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> are passed.</span></span>  
  
 <span data-ttu-id="fa847-109">Объект имеет связанные свойства конфигурации, которые можно задать во время выполнения либо в файле конфигурации (путем вызова статического <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> метода), либо <xref:System.Collections.IDictionary> программно (путем <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A> передачи коллекции в <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> конструктор).</span><span class="sxs-lookup"><span data-stu-id="fa847-109">A <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="fa847-110">Дополнительные сведения о свойствах конфигурации канала см. в разделе [Свойства конфигурации канала и модуля форматирования](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="fa847-110">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa847-111">Если компьютер сервера работает под управлением Windows 95/98/Me, сервер <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> нельзя указать как безопасный.</span><span class="sxs-lookup"><span data-stu-id="fa847-111">If the server computer is running Windows 95/98/Me, the server <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> cannot be specified as secure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa847-112">В следующем примере кода показано, <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> как использовать для настройки удаленного сервера и его клиента.</span><span class="sxs-lookup"><span data-stu-id="fa847-112">The following code example shows how to use a <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> to set up a remoting server and its client.</span></span> <span data-ttu-id="fa847-113">Пример содержит три части: сервер, клиент и удаленный объект, используемый сервером и клиентом.</span><span class="sxs-lookup"><span data-stu-id="fa847-113">The example contains three parts, a server, a client, and a remote object used by the server and the client.</span></span>  
  
 <span data-ttu-id="fa847-114">В следующем примере кода показан сервер:</span><span class="sxs-lookup"><span data-stu-id="fa847-114">The following code example shows a server:</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#1)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#1)]  
  
 <span data-ttu-id="fa847-115">В следующем примере кода показан клиент для этого сервера:</span><span class="sxs-lookup"><span data-stu-id="fa847-115">The following code example shows a client for this server:</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#10)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#10)]  
  
 <span data-ttu-id="fa847-116">В следующем примере кода показан удаленный объект, используемый сервером и клиентом:</span><span class="sxs-lookup"><span data-stu-id="fa847-116">The following code example shows the remote object used by the server and the client:</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#20](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/common.cpp#20)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#20](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/common.cs#20)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa847-117">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span><span class="sxs-lookup"><span data-stu-id="fa847-117">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpChannel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa847-118">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />, активируя только клиентский, но не серверный канал.</span><span class="sxs-lookup"><span data-stu-id="fa847-118">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class, activating only a client channel, and not a server channel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa847-119">Конструктор без параметров инициализирует все поля значениями по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="fa847-119">The parameterless constructor initializes all fields to their default values.</span></span> <span data-ttu-id="fa847-120">Если используется конструктор без параметров, канал работает только в качестве клиентского канала и не прослушивает порты.</span><span class="sxs-lookup"><span data-stu-id="fa847-120">If the parameterless constructor is used, the channel functions only as a client channel, and does not listen on any ports.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa847-121">В следующем примере кода показано, как использовать этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="fa847-121">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#11](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#11)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#11](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpChannel(int port);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpChannel : int -&gt; System.Runtime.Remoting.Channels.Tcp.TcpChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpChannel port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="fa847-122">Порт, прослушиваемый каналом сервера.</span><span class="sxs-lookup"><span data-stu-id="fa847-122">The port on which the server channel listens.</span></span></param>
        <summary><span data-ttu-id="fa847-123">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> с каналом сервера, который ожидает передачу данных для указанного порта межпроцессного взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="fa847-123">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class with a server channel that listens on the specified port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa847-124">Чтобы запросить, что система удаленного взаимодействия выбирает открытый порт от вашего имени, укажите порт 0 (ноль).</span><span class="sxs-lookup"><span data-stu-id="fa847-124">To request that the remoting system choose an open port on your behalf, specify port 0 (zero).</span></span> <span data-ttu-id="fa847-125">Будет создан <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> экземпляр для прослушивания запросов к динамически назначенному порту.</span><span class="sxs-lookup"><span data-stu-id="fa847-125">This will create a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance to listen for requests on the dynamically assigned port.</span></span> <span data-ttu-id="fa847-126">Обычно это делается на клиенте, чтобы убедиться, что <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> ожидает передачи методов обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="fa847-126">This is typically done on the client to make sure that a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> is listening for callback methods.</span></span>  
  
 <span data-ttu-id="fa847-127">Если в конструктор передается значение 0 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> , создается экземпляр для использования свободного порта.</span><span class="sxs-lookup"><span data-stu-id="fa847-127">If 0 is passed to the constructor the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> is instantiated to use a free port.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa847-128">В следующем примере кода демонстрируется использование этого метода.</span><span class="sxs-lookup"><span data-stu-id="fa847-128">The following code example demonstrates using this method.</span></span> <span data-ttu-id="fa847-129">Чтобы запросить динамическое назначение доступного порта, присвойте `port` параметру значение 0.</span><span class="sxs-lookup"><span data-stu-id="fa847-129">To request that an available port be dynamically assigned, set the `port` parameter to zero.</span></span>  
  
 [!code-cpp[RemotingConfiguration.ServerActivation#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ServerActivation#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ServerActivation#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/VB/server.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, clientSinkProvider As IClientChannelSinkProvider, serverSinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ clientSinkProvider, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ serverSinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IClientChannelSinkProvider * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Tcp.TcpChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpChannel (properties, clientSinkProvider, serverSinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="clientSinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
        <Parameter Name="serverSinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="fa847-130">Коллекция <see cref="T:System.Collections.IDictionary" />, которая определяет значения для свойств конфигурации, используемых в каналах клиента и сервера.</span><span class="sxs-lookup"><span data-stu-id="fa847-130">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the client and server channels.</span></span></param>
        <param name="clientSinkProvider"><span data-ttu-id="fa847-131">Реализация интерфейса <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> для использования каналом клиента.</span><span class="sxs-lookup"><span data-stu-id="fa847-131">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the client channel.</span></span></param>
        <param name="serverSinkProvider"><span data-ttu-id="fa847-132">Реализация интерфейса <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> для использования каналом сервера.</span><span class="sxs-lookup"><span data-stu-id="fa847-132">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the server channel.</span></span></param>
        <summary><span data-ttu-id="fa847-133">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> с указанными свойствами конфигурации и приемником.</span><span class="sxs-lookup"><span data-stu-id="fa847-133">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class with the specified configuration properties and sinks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa847-134">Дополнительные сведения о свойствах конфигурации канала см. в разделе [Свойства конфигурации канала и модуля форматирования](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="fa847-134">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa847-135">Если компьютер сервера работает под управлением Windows 95/98/Me, сервер <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> нельзя указать как безопасный.</span><span class="sxs-lookup"><span data-stu-id="fa847-135">If the server computer is running Windows 95/98/Me, the server <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> cannot be specified as secure.</span></span>  
  
 <span data-ttu-id="fa847-136">Приемники каналов предоставляют точку подключения, которая разрешает доступ к базовым сообщениям, передаваемым по каналу, а также потоку, используемому механизмом транспорта для отправки сообщений удаленному объекту.</span><span class="sxs-lookup"><span data-stu-id="fa847-136">Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object.</span></span> <span data-ttu-id="fa847-137">Приемники каналов также отвечают за переносить сообщения между клиентом и сервером.</span><span class="sxs-lookup"><span data-stu-id="fa847-137">Channel sinks are also responsible for transporting messages between the client and the server.</span></span> <span data-ttu-id="fa847-138">Приемники каналов связаны друг с другом в цепочку, и все сообщения каналов проходят через эту цепь приемников до того, как сообщение будет сериализовано и переработано.</span><span class="sxs-lookup"><span data-stu-id="fa847-138">Channel sinks are linked together in a chain, and all channel messages flow through this chain of sinks before the message is finally serialized and transported.</span></span> <span data-ttu-id="fa847-139">Если функции приемника не требуются, задайте `clientSinkProvider` для `null`параметров и `serverSinkProvider` значение.</span><span class="sxs-lookup"><span data-stu-id="fa847-139">If you do not require sink functionality, set the `clientSinkProvider` and `serverSinkProvider` parameters to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa847-140">В следующем примере кода показано, как использовать этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="fa847-140">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel2/CPP/server.cpp#1)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel2/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa847-141">Предоставленное свойство канала было отформатировано с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="fa847-141">A provided channel property was improperly formatted.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="fa847-142">Свойства конфигурации каналов и модуля форматирования</span><span class="sxs-lookup"><span data-stu-id="fa847-142">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelData : obj" Usage="System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannelReceiver.ChannelData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa847-143">Получает данные для указанного канала.</span><span class="sxs-lookup"><span data-stu-id="fa847-143">Gets the channel-specific data.</span></span></summary>
        <value><span data-ttu-id="fa847-144">Экземпляр <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" />, содержащий данные, относящиеся к каналу.</span><span class="sxs-lookup"><span data-stu-id="fa847-144">A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance that contains channel-specific data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa847-145">Несмотря на то <xref:System.Object?displayProperty=nameWithType>, что возвращается как экземпляр, значение этого свойства может быть приведено к <xref:System.Runtime.Remoting.Channels.ChannelDataStore> экземпляру, описывающему канал <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> , который прослушивает объект.</span><span class="sxs-lookup"><span data-stu-id="fa847-145">Although returned as an instance of <xref:System.Object?displayProperty=nameWithType>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> object listens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa847-146">В следующем примере кода показано, как использовать это свойство.</span><span class="sxs-lookup"><span data-stu-id="fa847-146">The following code example shows how to use this property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#5)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa847-147">Получает имя текущего канала.</span><span class="sxs-lookup"><span data-stu-id="fa847-147">Gets the name of the current channel.</span></span></summary>
        <value><span data-ttu-id="fa847-148">Объект <see cref="T:System.String" />, в котором содержится имя канала.</span><span class="sxs-lookup"><span data-stu-id="fa847-148">A <see cref="T:System.String" /> that contains the name of the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa847-149">Каждый зарегистрированный канал имеет уникальное имя.</span><span class="sxs-lookup"><span data-stu-id="fa847-149">Every registered channel has a unique name.</span></span> <span data-ttu-id="fa847-150">Имя используется для получения определенного канала при вызове <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa847-150">The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</span></span> <span data-ttu-id="fa847-151">Чтобы задать <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName%2A> свойство, присвойте значение индексированному свойству Name в словаре, переданном <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29> конструктору.</span><span class="sxs-lookup"><span data-stu-id="fa847-151">To set the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName%2A> property, assign the value to the "name" indexed property in the dictionary passed to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa847-152">В следующем примере кода показано, как использовать это свойство.</span><span class="sxs-lookup"><span data-stu-id="fa847-152">The following code example shows how to use this property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#3)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelPriority</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa847-153">Получает приоритет текущего канала.</span><span class="sxs-lookup"><span data-stu-id="fa847-153">Gets the priority of the current channel.</span></span></summary>
        <value><span data-ttu-id="fa847-154">Целое число, обозначающее приоритет, назначенный данному каналу.</span><span class="sxs-lookup"><span data-stu-id="fa847-154">An integer that represents the priority assigned to the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa847-155">В следующем примере кода показано, как использовать это свойство.</span><span class="sxs-lookup"><span data-stu-id="fa847-155">The following code example shows how to use this property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#4)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMessageSink (url As String, remoteChannelData As Object, ByRef objectURI As String) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageSink ^ CreateMessageSink(System::String ^ url, System::Object ^ remoteChannelData, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageSink : string * obj *  -&gt; System.Runtime.Remoting.Messaging.IMessageSink&#xA;override this.CreateMessageSink : string * obj *  -&gt; System.Runtime.Remoting.Messaging.IMessageSink" Usage="tcpChannel.CreateMessageSink (url, remoteChannelData, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink(System.String,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="fa847-156">URL-адрес, по которому новый приемник должен доставлять сообщения.</span><span class="sxs-lookup"><span data-stu-id="fa847-156">The URL to which the new sink should deliver messages.</span></span> <span data-ttu-id="fa847-157">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fa847-157">Can be <see langword="null" />.</span></span></param>
        <param name="remoteChannelData"><span data-ttu-id="fa847-158">Объект данных канала удаленного узла, которому новый приемник должен доставлять сообщения.</span><span class="sxs-lookup"><span data-stu-id="fa847-158">The channel data object of the remote host to which the new sink should deliver messages.</span></span> <span data-ttu-id="fa847-159">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fa847-159">Can be <see langword="null" />.</span></span></param>
        <param name="objectURI"><span data-ttu-id="fa847-160">Когда метод возвращает управление, содержит URI нового приемника сообщений канала, который доставляет сообщения объекту данных канала или по указанному URL-адресу.</span><span class="sxs-lookup"><span data-stu-id="fa847-160">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object.</span></span> <span data-ttu-id="fa847-161">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="fa847-161">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fa847-162">Возвращает приемник сообщений канала, который доставляет сообщения объекту данных канала или по указанному URL-адресу.</span><span class="sxs-lookup"><span data-stu-id="fa847-162">Returns a channel message sink that delivers messages to the specified URL or channel data object.</span></span></summary>
        <returns><span data-ttu-id="fa847-163">Приемник сообщений канала, который доставляет сообщения объекту данных канала или по указанному URL-адресу.</span><span class="sxs-lookup"><span data-stu-id="fa847-163">A channel message sink that delivers messages to the specified URL or channel data object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa847-164"><xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink%2A> Метод возвращает приемник сообщений канала, который доставляет сообщения либо в указанный URL-адрес, либо на объект данных канала.</span><span class="sxs-lookup"><span data-stu-id="fa847-164">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink%2A> method returns a channel message sink that delivers messages to either the specified URL or channel data object.</span></span> <span data-ttu-id="fa847-165">Если параметр имеет `null`значение, `remoteChannelData` то в качестве целевого объекта для приемника используется. `uri`</span><span class="sxs-lookup"><span data-stu-id="fa847-165">If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink.</span></span> <span data-ttu-id="fa847-166">`url` Параметр или `remoteChannelData` может иметь`null`значение, но не оба.</span><span class="sxs-lookup"><span data-stu-id="fa847-166">Either the `url` or `remoteChannelData` parameters can be `null`, but not both.</span></span>  
  
 <span data-ttu-id="fa847-167">Приемники каналов предоставляют точку подключения, которая разрешает доступ к базовым сообщениям, передаваемым по каналу, а также потоку, используемому механизмом транспорта для отправки сообщений удаленному объекту.</span><span class="sxs-lookup"><span data-stu-id="fa847-167">Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object.</span></span> <span data-ttu-id="fa847-168">Приемники каналов связаны друг с другом в цепочку `ChannelSinkProviders` , и все сообщения каналов проходят через эту цепь приемников до того, как сообщение будет сериализовано и перенаправлено.</span><span class="sxs-lookup"><span data-stu-id="fa847-168">Channel sinks are linked together in a chain of `ChannelSinkProviders` and all channel messages flow through this chain of sinks before the message is finally serialized and transported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa847-169">В следующем примере кода показано применение этого метода.</span><span class="sxs-lookup"><span data-stu-id="fa847-169">The following code example shows how to use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#12)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public string[] GetUrlsForUri (string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUrlsForUri (objectURI As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectURI);" />
      <MemberSignature Language="F#" Value="abstract member GetUrlsForUri : string -&gt; string[]&#xA;override this.GetUrlsForUri : string -&gt; string[]" Usage="tcpChannel.GetUrlsForUri objectURI" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.GetUrlsForUri(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectURI"><span data-ttu-id="fa847-170">URI объекта, для которого требуются URL-адреса.</span><span class="sxs-lookup"><span data-stu-id="fa847-170">The URI of the object for which URLs are required.</span></span></param>
        <summary><span data-ttu-id="fa847-171">Возвращает массив всех URL-адресов объекта с указанным универсальным кодом ресурса (URI), относящихся к текущему объекту <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span><span class="sxs-lookup"><span data-stu-id="fa847-171">Returns an array of all the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span></span></summary>
        <returns><span data-ttu-id="fa847-172">Массив URL-адресов для объекта с указанным универсальным кодом ресурса (URI), относящихся к текущему объекту <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span><span class="sxs-lookup"><span data-stu-id="fa847-172">An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa847-173">Этот метод используется <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fa847-173">This method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa847-174">В следующем примере кода показано применение этого метода.</span><span class="sxs-lookup"><span data-stu-id="fa847-174">The following code example shows how to use this method.</span></span>  
  
 [!code-cpp[TcpChannel.GetUrlsForUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/CPP/class1.cpp#1)]
 [!code-csharp[TcpChannel.GetUrlsForUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/CS/class1.cs#1)]
 [!code-vb[TcpChannel.GetUrlsForUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.ISecurableChannel.IsSecured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa847-175">Возвращает или задает логическое значение, позволяющее определить, является ли текущий канал безопасным.</span><span class="sxs-lookup"><span data-stu-id="fa847-175">Gets or sets a Boolean value that indicates whether the current channel is secure.</span></span></summary>
        <value><span data-ttu-id="fa847-176">Логическое значение, позволяющее определить, является ли текущий экземпляр безопасным.</span><span class="sxs-lookup"><span data-stu-id="fa847-176">A Boolean value that indicates whether the current instance is secure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa847-177">Это свойство не требуется задавать явным образом, поскольку для параметра <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>енсуресекурити достаточно установить значение.</span><span class="sxs-lookup"><span data-stu-id="fa847-177">This property need not be set explicitly, as it is sufficient to set the ensureSecurity parameter of <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string *  -&gt; string&#xA;override this.Parse : string *  -&gt; string" Usage="tcpChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="fa847-178">URL-адрес, из которого выделяется URI удаленного хорошо известного объекта.</span><span class="sxs-lookup"><span data-stu-id="fa847-178">The URL from which to extract the URI of the remote well-known object.</span></span></param>
        <param name="objectURI"><span data-ttu-id="fa847-179">Когда метод возвращает управление, то содержит строку <see cref="T:System.String" />, включающую универсальный код ресурса (URI) известного удаленного объекта.</span><span class="sxs-lookup"><span data-stu-id="fa847-179">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object.</span></span> <span data-ttu-id="fa847-180">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="fa847-180">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fa847-181">Выделяет универсальный код ресурса (URI) канала и универсальный код ресурса (URI) известного удаленного объекта из указанного URL-адреса.</span><span class="sxs-lookup"><span data-stu-id="fa847-181">Extracts the channel URI and the remote well-known object URI from the specified URL.</span></span></summary>
        <returns><span data-ttu-id="fa847-182">URI текущего канала.</span><span class="sxs-lookup"><span data-stu-id="fa847-182">The URI of the current channel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa847-183">Универсальный код ресурса (URI) объекта — это значение, уникально идентифицирующее конкретный экземпляр объекта.</span><span class="sxs-lookup"><span data-stu-id="fa847-183">A URI of an object is a value that uniquely identifies a specific object instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa847-184">В следующем примере кода показано применение этого метода.</span><span class="sxs-lookup"><span data-stu-id="fa847-184">The following code example shows how to use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#6)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : obj -&gt; unit&#xA;override this.StartListening : obj -&gt; unit" Usage="tcpChannel.StartListening data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.StartListening(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="fa847-185">Дополнительные сведения об инициализации.</span><span class="sxs-lookup"><span data-stu-id="fa847-185">Optional initialization information.</span></span></param>
        <summary><span data-ttu-id="fa847-186">Дает текущему каналу команду на отслеживание запросов.</span><span class="sxs-lookup"><span data-stu-id="fa847-186">Instructs the current channel to start listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa847-187">Нет необходимости вызывать этот метод, чтобы начать прослушивание только что инициализированного канала.</span><span class="sxs-lookup"><span data-stu-id="fa847-187">It is not necessary to call this method to begin listening on a newly initialized channel.</span></span>  
  
 <span data-ttu-id="fa847-188">Используйте этот метод, чтобы перезапустить прослушивание по каналу после <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="fa847-188">Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa847-189">Если канал использует динамически назначенный номер порта, номер порта может измениться при перезапуске прослушивания.</span><span class="sxs-lookup"><span data-stu-id="fa847-189">If your channel uses a dynamically assigned port number, your port number might change when you restart listening.</span></span>  
  
 <span data-ttu-id="fa847-190">`data` Параметр можно использовать для передачи определенного состояния инициализации в канал.</span><span class="sxs-lookup"><span data-stu-id="fa847-190">The `data` parameter can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="fa847-191">Если вы не хотите передавать определенное состояние каналу, задайте для `data` `null`параметра значение.</span><span class="sxs-lookup"><span data-stu-id="fa847-191">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StopListening : obj -&gt; unit&#xA;override this.StopListening : obj -&gt; unit" Usage="tcpChannel.StopListening data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.StopListening(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="fa847-192">Дополнительные сведения о состоянии канала.</span><span class="sxs-lookup"><span data-stu-id="fa847-192">Optional state information for the channel.</span></span></param>
        <summary><span data-ttu-id="fa847-193">Дает текущему каналу команду на прекращение отслеживания запросов.</span><span class="sxs-lookup"><span data-stu-id="fa847-193">Instructs the current channel to stop listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa847-194">Этот метод используется для прекращения прослушивания канала.</span><span class="sxs-lookup"><span data-stu-id="fa847-194">Use this method to stop listening on a channel.</span></span> <span data-ttu-id="fa847-195">Чтобы перезапустить прослушивание, <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="fa847-195">To restart listening, use the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> method.</span></span>  
  
 <span data-ttu-id="fa847-196">Если канал использует динамически назначенный номер порта, номер порта может измениться при перезапуске прослушивания.</span><span class="sxs-lookup"><span data-stu-id="fa847-196">If your channel uses a dynamically assigned port number, your port number might change when you restart listening.</span></span>  
  
 <span data-ttu-id="fa847-197">`data` Параметр можно использовать для передачи определенного состояния инициализации в канал.</span><span class="sxs-lookup"><span data-stu-id="fa847-197">The `data` parameter can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="fa847-198">Если вы не хотите передавать определенное состояние каналу, задайте для `data` `null`параметра значение.</span><span class="sxs-lookup"><span data-stu-id="fa847-198">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>