<Type Name="Cache" FullName="System.Web.Caching.Cache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b20db8e7e7f26c22b439e39913f75678bff9dc1c" /><Meta Name="ms.sourcegitcommit" Value="f991677a7374c45590a432ff7ab830beb05f2ccd" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/27/2019" /><Meta Name="ms.locfileid" Value="68591352" /></Metadata><TypeSignature Language="C#" Value="public sealed class Cache : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cache extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.Cache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cache&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cache sealed : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Cache = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Реализует кэш для веб-приложения. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Один экземпляр этого класса создается для каждого домена приложения и остается действительным, пока домен приложения остается активным. Сведения об экземпляре этого класса можно получить `Cache` с помощью свойства <xref:System.Web.HttpContext> объекта <xref:System.Web.UI.Page> или `Cache` свойства объекта.  
  
> [!NOTE]
>  <xref:System.Web.Caching.Cache> Класс не предназначен для использования за пределами ASP.NET приложений. Она была разработана и протестирована для использования в ASP.NET для обеспечения кэширования веб-приложений. Для других типов приложений, таких как консольные приложения или приложения Windows Forms, используйте <xref:System.Runtime.Caching.ObjectCache> класс.  
  
   
  
## Examples  
 В следующем примере показана страница, на которой пользователи получают значение, присвоенное элементу в кэше, а затем уведомляют их при удалении элемента из кэша. Он создает `RemovedCallback` метод, имеющий сигнатуру `CacheItemRemovedCallback` делегата, для уведомления пользователей об удалении элемента кэша и использует <xref:System.Web.Caching.CacheItemRemovedReason> перечисление, чтобы сообщить ему, почему он был удален. Кроме того, он использует <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> свойство для добавления объектов в кэш и получения значений этих объектов. В методе <xref:System.Web.Caching.Cache.Add%2A?displayProperty=nameWithType> используется метод для добавления элемента в кэш. `AddItemToCache` Чтобы использовать `CacheItemRemovedCallback` делегат, необходимо добавить элемент в кэш с помощью этого метода <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> или метода, чтобы ASP.NET мог автоматически делать соответствующие вызовы метода при удалении элемента. Пользовательский `RemoveItemFromCache` метод `RemovedCallback` использует метод для явного удаления элемента из кэша, что приводит к вызову метода. <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType>  
  
> [!NOTE]
>  Экземпляр кэша, к которому обращается фрагмент кода ниже, является членом <xref:System.Web.UI.Page> объекта, наследуемого этим образцом.  
  
 [!code-aspx-csharp[System.Web.Caching Examples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#1)]
 [!code-aspx-vb[System.Web.Caching Examples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>Данный тип потокобезопасен.</threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
    <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.Cache" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Add(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Add(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; obj" Usage="cache.Add (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Ключ кэша, используемый для ссылки на элемент.</param>
        <param name="value">Элемент, добавляемый в кэш.</param>
        <param name="dependencies">Зависимости файла или ключа кэша для элемента. Если какая-либо зависимость меняется, объект становится недопустимым и удаляется из кэша. Если зависимости отсутствуют, данный параметр имеет значение <see langword="null" />.</param>
        <param name="absoluteExpiration">Время истечения срока действия добавленного объекта и его удаления из кэша. Если используется скользящий срок действия, параметр <paramref name="absoluteExpiration" /> должен быть <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="slidingExpiration">Интервал между временем последнего обращения к добавленному объекту и временем истечения срока действия этого объекта. Если это значение равно 20 минутам, срок действия объекта истечет, и он будет удален из кэша через 20 минут после последнего обращения к этому объекту. Если используется абсолютный срок действия, параметр <paramref name="slidingExpiration" /> должен быть <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="priority">Относительная цена объекта, выраженная перечислением <see cref="T:System.Web.Caching.CacheItemPriority" />. Это значение используется в кэше при исключении объектов. Объекты с более низкой ценой удаляются из кэша раньше, чем объекты с более высокой ценой.</param>
        <param name="onRemoveCallback">При наличии делегата он вызывается в случае удаления объекта из кэша. Его можно использовать для уведомления приложений при удалении объектов из кэша.</param>
        <summary>Добавление указанного элемента в объект <see cref="T:System.Web.Caching.Cache" /> с зависимостями, политиками сроков действия и приоритетов, а также с делегатом, которого можно использовать для уведомления приложения при удалении вставленного элемента из <see langword="Cache" />.</summary>
        <returns>Объект, представляющий добавленный элемент, если элемент был сохранен в кэше ранее; в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовы этого метода будут завершаться сбоем автоматически, если элемент с таким же `key` параметром уже сохранен `Cache`в. Чтобы перезаписать существующий `Cache` элемент с помощью того же `key` параметра, используйте <xref:System.Web.Caching.Cache.Insert%2A> метод.  
  
 Нельзя задать оба `absoluteExpiration` параметра и `slidingExpiration` . Если вы планируете истечение срока действия элемента кэша в определенное время, задайте `absoluteExpiration` параметру определенное время, `slidingExpiration` а параметр <xref:System.Web.Caching.Cache.NoSlidingExpiration>— значение.  
  
 Если вы собираетесь истечь срок действия элемента кэша по истечении определенного промежутка времени с момента последнего обращения к элементу, задайте `slidingExpiration` для параметра значение интервал, `absoluteExpiration` а для <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>параметра — значение.  
  
   
  
## Examples  
 В следующем примере создается `AddItemToCache` метод. `itemRemoved` При вызове этого метода он устанавливает свойство в `false` значение и регистрирует `onRemove` метод с новым экземпляром <xref:System.Web.Caching.CacheItemRemovedCallback> делегата. Сигнатура делегата используется в `RemovedCallback` методе. Затем метод проверяет значение, связанное `Key1` с ключом в кэше. `AddItemToCache` Если `null`значение равно `Add` , метод помещает элемент в `Key1`кэш с ключом, значением `Value 1`, абсолютным сроком действия 60 секунд и высоким приоритетом кэша. В `onRemove` нем также используется метод в качестве аргумента. Это позволяет `RemovedCallback` вызывать метод при удалении этого элемента из кэша.  
  
> [!NOTE]
>  Примеры использования <xref:System.Web.Caching.CacheDependency> класса <xref:System.Web.Caching.CacheItemRemovedCallback> и делегата см. в разделе Кэширование [данных приложения](https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)).  
  
 [!code-csharp[System.Web.Caching Examples#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#3)]
 [!code-vb[System.Web.Caching Examples#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для параметра <paramref name="key" /> или <paramref name="value" /> указано значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Для параметра <paramref name="slidingExpiration" /> указано значение меньше <see langword="TimeSpan.Zero" /> или больше одного года.</exception>
        <exception cref="T:System.ArgumentException">Оба параметра — <paramref name="absoluteExpiration" /> и <paramref name="slidingExpiration" /> — заданы для элемента, который вы пытаетесь добавить в <see langword="Cache" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.Caching.Cache.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает количество элементов, хранимых в кэше.</summary>
        <value>Количество элементов, хранимых в кэше.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство может быть полезно при наблюдении за производительностью приложения или при использовании функции трассировки ASP.NET.  
  
   
  
## Examples  
 `Count` Следующий пример получает значение свойства, преобразует его в строку и присваивает строку <xref:System.Web.UI.WebControls.Label.Text%2A> свойству <xref:System.Web.UI.WebControls.Label> серверного веб-элемента управления, `Label1`.  
  
 [!code-csharp[System.Web.Caching.Cache.Count#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/CS/cachecountcs.aspx#1)]
 [!code-vb[System.Web.Caching.Cache.Count#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/VB/cachecountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectivePercentagePhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long EffectivePercentagePhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePercentagePhysicalMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePercentagePhysicalMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePercentagePhysicalMemoryLimit : int64" Usage="System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получение процента физической памяти, который может быть потреблен приложением до начала удаления элементов из кэша ASP.NET.</summary>
        <value>Процент физической памяти, доступный для приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> Свойство возвращает процент физической памяти, доступной приложению. Когда доступный процент оказывается низким, алгоритм кэша начинает удалять элементы из кэша.  
  
 Свойство можно задать `percentagePhysicalMemoryUsedLimit` с помощью атрибута [элемента cache для кэширования (схема параметров ASP.NET)](https://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299) в файле конфигурации приложения. <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> Если атрибут не задан, то алгоритм кэша определяет максимальный размер кэша, <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> а свойство вычисляется. `percentagePhysicalMemoryUsedLimit`  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>вводится в .NET Framework версии 3,5.  Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      </Docs>
    </Member>
    <Member MemberName="EffectivePrivateBytesLimit">
      <MemberSignature Language="C#" Value="public long EffectivePrivateBytesLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePrivateBytesLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePrivateBytesLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePrivateBytesLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePrivateBytesLimit : int64" Usage="System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получение количества байт, доступных для кэша.</summary>
        <value>Количество байт, доступных для кэша.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> Свойство возвращает число байтов, которое может использоваться процессом приложения. По достижении этого предела алгоритм кэша начинает агрессивно очищать кэш.  
  
 Свойство можно задать `privateBytesLimit` с помощью атрибута [элемента cache для кэширования (схема параметров ASP.NET)](https://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299) в файле конфигурации приложения. <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> Если атрибут не задан, то алгоритм кэша определяет максимальный размер кэша, <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> а свойство содержит размер, выбранный алгоритмом. `privateBytesLimit`  
  
   
  
## Examples  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; obj" Usage="cache.Get key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Идентификатор для элемента кэша, который необходимо извлечь.</param>
        <summary>Получение указанного элемента из объекта <see cref="T:System.Web.Caching.Cache" />.</summary>
        <returns>Полученный элемент кэша или <see langword="null" />, если ключ не найден.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как получить значение, кэшированное для серверного элемента управления "текстовое поле ASP.NET".  
  
 [!code-csharp[Classic Cache.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Get Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="cache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает перечислитель словаря, используемый для перебора параметров ключей и их значений, содержащихся в кэше.</summary>
        <returns>Перечислитель для итерации в объекте <see cref="T:System.Web.Caching.Cache" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элементы можно добавлять в кэш или удалять из него, пока этот метод перебирает элементы.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Collections.IDictionaryEnumerator> `CacheEnum`объект с помощью `GetEnumerator` метода. Перечислитель перемещается через кэш, преобразует значение каждого кэшированного элемента в строку, а затем записывает значения на страницу веб-форм.  
  
 [!code-csharp[Cache.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache.GetEnumerator/CS/getenumcs.aspx#1)]
 [!code-vb[Cache.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache.GetEnumerator/VB/getenumvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Вставка элемента в объект <see cref="T:System.Web.Caching.Cache" />. Для перезаписи существующего элемента <see langword="Cache" /> с тем же параметром <paramref name="key" /> используется одна из версий данного метода.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj -&gt; unit" Usage="cache.Insert (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">Ключ кэша, используемый для ссылки на элемент.</param>
        <param name="value">Объект для вставки в кэш.</param>
        <summary>Вставка элемента в объект <see cref="T:System.Web.Caching.Cache" /> с ключом кэша для ссылки на его расположение с помощью значений по умолчанию, предоставленных перечислением <see cref="T:System.Web.Caching.CacheItemPriority" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод будет перезаписывать существующий элемент кэша, ключ которого соответствует `key` параметру. Объект, добавленный в кэш с помощью `Insert` этой перегрузки метода, вставляется без зависимостей файла или кэша, <xref:System.Web.Caching.CacheItemPriority.Default>приоритет, значение <xref:System.Web.Caching.Cache.NoSlidingExpiration>скользящего срока действия и абсолютное значение <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>срока действия.  
  
   
  
## Examples  
 В следующем примере показано, как вставить элемент в кэш приложения.  
  
 [!code-csharp[Classic Cache.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="key" /> или параметра <paramref name="value" /> — <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency -&gt; unit" Usage="cache.Insert (key, value, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="key">Ключ кэша, используемый для определения элемента.</param>
        <param name="value">Объект для вставки в кэш.</param>
        <param name="dependencies">Зависимости файла или ключа кэша для вставленного объекта. Если какая-либо зависимость меняется, объект становится недопустимым и удаляется из кэша. Если зависимости отсутствуют, данный параметр имеет значение <see langword="null" />.</param>
        <summary>Вставка объекта в <see cref="T:System.Web.Caching.Cache" />, имеющий зависимости файла или ключа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод будет перезаписывать существующий элемент кэша, ключ которого соответствует `key` параметру. Объект, добавленный в кэш с помощью `Insert` этой перегрузки метода, вставляется без зависимостей файла или кэша, <xref:System.Web.Caching.CacheItemPriority.Default>приоритет, значение <xref:System.Web.Caching.Cache.NoSlidingExpiration>скользящего срока действия и абсолютное значение <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>срока действия.  
  
   
  
## Examples  
 В следующем примере показано, как вставить элемент в кэш приложения с зависимостью кэша от XML-файла конфигурации.  
  
 [!code-csharp[Classic Cache.Insert1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="key" /> или параметра <paramref name="value" /> — <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="key">Ключ кэша, используемый для ссылки на объект.</param>
        <param name="value">Объект для вставки в кэш.</param>
        <param name="dependencies">Зависимости файла или ключа кэша для вставленного объекта. Если какая-либо зависимость меняется, объект становится недопустимым и удаляется из кэша. Если зависимости отсутствуют, данный параметр имеет значение <see langword="null" />.</param>
        <param name="absoluteExpiration">Время истечения срока действия вставленного объекта и его удаления из кэша. Чтобы избежать возможных проблем с местным временем, например перехода от стандартного времени к летнему, используйте для этого параметра значение <see cref="P:System.DateTime.UtcNow" />, а не <see cref="P:System.DateTime.Now" />. Если используется абсолютный срок действия, параметр <paramref name="slidingExpiration" /> должен быть <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">Интервал между временем последнего обращения к вставленному объекту и временем истечения срока действия этого объекта. Если это значение равно 20 минутам, срок действия объекта истекает и он удаляется из кэша через 20 минут после последнего обращения. Если используется скользящий срок действия, параметр <paramref name="absoluteExpiration" /> должен быть <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <summary>Вставка объекта в <see cref="T:System.Web.Caching.Cache" /> с зависимостями и политиками сроков действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод будет перезаписывать существующий `Cache` элемент с тем же `key` параметром.  
  
 Если параметр имеет <xref:System.Web.Caching.Cache.NoSlidingExpiration>значение, скользящий срок действия отключен. `slidingExpiration` Если `slidingExpiration` для параметра задано значение <xref:System.TimeSpan.Zero>больше, то `absoluteExpiration` параметр `slidingExpiration` задается равным <xref:System.DateTime.Now%2A> плюс значению, содержащемуся в параметре. Если элемент запрашивается из кэша до `absoluteExpiration` времени, указанного параметром, элемент снова помещается в кэш и `absoluteExpiration` снова задается `DateTime.Now` в плюс значение, содержащееся в `slidingExpiration` параметре. Если элемент не запрашивается из кэша до даты в `absoluteExpiration` параметре, элемент удаляется из кэша. . Элемент, добавленный в кэш с помощью этой перегрузки метода Insert, вставляется с приоритетом <xref:System.Web.Caching.CacheItemPriority.Default>.  
  
   
  
## Examples  
 В следующем примере показано, как вставить элемент в кэш приложения с абсолютным сроком действия.  
  
> [!NOTE]
>  `Insert` Так как эта форма метода поддерживает зависимости кэша, если элемент не имеет зависимостей, необходимо `dependency` объявить параметр как `null` (`Nothing` в Visual Basic) в списке параметров, разделенных запятыми.  
  
 [!code-csharp[Classic Cache.Insert2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#1)]  
  
 В следующем примере показано, как вставить элемент в кэш с скользящей истечением срока действия.  
  
 [!code-csharp[Classic Cache.Insert2 Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.Insert2 Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="key" /> или параметра <paramref name="value" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Для параметра <paramref name="slidingExpiration" /> указывается значение меньше <see langword="TimeSpan.Zero" /> или больше одного года.</exception>
        <exception cref="T:System.ArgumentException">Оба параметра — <paramref name="absoluteExpiration" /> и <paramref name="slidingExpiration" /> — заданы для элемента, который вы пытаетесь добавить в <see langword="Cache" />.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, class System.Web.Caching.CacheItemUpdateCallback onUpdateCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, onUpdateCallback As CacheItemUpdateCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemUpdateCallback ^ onUpdateCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemUpdateCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, onUpdateCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUpdateCallback" Type="System.Web.Caching.CacheItemUpdateCallback" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Ключ кэша, используемый для ссылки на объект.</param>
        <param name="value">Объект, вставляемый в кэш.</param>
        <param name="dependencies">Зависимости файла или ключа кэша для элемента. Если какая-либо зависимость меняется, объект становится недопустимым и удаляется из кэша. Если зависимости отсутствуют, данный параметр имеет значение <see langword="null" />.</param>
        <param name="absoluteExpiration">Время истечения срока действия вставленного объекта и его удаления из кэша. Чтобы избежать возможных проблем с местным временем, например перехода от стандартного времени к летнему, используйте для этого параметра значение <see cref="P:System.DateTime.UtcNow" /> вместо <see cref="P:System.DateTime.Now" />. Если используется абсолютный срок действия, параметру <paramref name="slidingExpiration" /> следует присвоить значение <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">Интервал между временем последнего обращения к кэшируемому объекту и временем истечения срока действия этого объекта. Если это значение равно 20 минутам, срок действия объекта истекает и он удаляется из кэша через 20 минут после последнего обращения. Если используется скользящий срок действия, параметру <paramref name="absoluteExpiration" /> следует присвоить значение <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="onUpdateCallback">Делегат, который будет вызываться перед удалением объекта из кэша. Можно использовать этот вызов для обновления кэшируемого элемента, с тем чтобы он не был удален из кэша.</param>
        <summary>Вставляет в объект <see cref="T:System.Web.Caching.Cache" /> объект с зависимостями, политиками сроков действия и делегатом, который можно использовать для уведомления приложения перед удалением элемента из кэша.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.Insert%2A> Метод позволяет вставить новый элемент в кэш и предоставить делегат, вызываемый перед удалением элемента из кэша. В делегате можно обновить кэшированный элемент и, таким образом, предотвратить его удаление из кэша.  
  
 Этот метод будет перезаписывать существующий `Cache` элемент с тем же `key` параметром.  
  
 Нельзя задать оба `absoluteExpiration` параметра и `slidingExpiration` . Если вы планируете истечение срока действия элемента кэша в определенное время, задайте `absoluteExpiration` параметру определенное время, `slidingExpiration` а параметр <xref:System.Web.Caching.Cache.NoSlidingExpiration>— значение.  
  
 Если вы собираетесь истечь срок действия элемента кэша по истечении заданного периода времени с момента последнего обращения к элементу, `slidingExpiration` задайте для параметра значение интервал, а для `absoluteExpiration` <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>параметра — значение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" />, <paramref name="value" /> или <paramref name="onUpdateCallback" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Для параметра <paramref name="slidingExpiration" /> указывается значение меньше <see langword="TimeSpan.Zero" /> или больше одного года.</exception>
        <exception cref="T:System.ArgumentException">Оба параметра — <paramref name="absoluteExpiration" /> и <paramref name="slidingExpiration" /> — заданы для элемента, который вы пытаетесь добавить в <see langword="Cache" />.  
  
-или- 
Параметр <paramref name="dependencies" /> имеет значение <see langword="null" />, параметру <paramref name="absoluteExpiration" /> присвоено значение <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />, а параметру <paramref name="slidingExpiration" /> — <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheItemUpdateCallback" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Ключ кэша, используемый для ссылки на объект.</param>
        <param name="value">Объект для вставки в кэш.</param>
        <param name="dependencies">Зависимости файла или ключа кэша для элемента. Если какая-либо зависимость меняется, объект становится недопустимым и удаляется из кэша. Если зависимости отсутствуют, данный параметр имеет значение <see langword="null" />.</param>
        <param name="absoluteExpiration">Время истечения срока действия вставленного объекта и его удаления из кэша. Чтобы избежать возможных проблем с местным временем, например перехода от стандартного времени к летнему, используйте для этого параметра значение <see cref="P:System.DateTime.UtcNow" />, а не <see cref="P:System.DateTime.Now" />. Если используется абсолютный срок действия, параметр <paramref name="slidingExpiration" /> должен быть <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">Интервал между временем последнего обращения к вставленному объекту и временем истечения срока действия этого объекта. Если это значение равно 20 минутам, срок действия объекта истекает и он удаляется из кэша через 20 минут после последнего обращения. Если используется скользящий срок действия, параметр <paramref name="absoluteExpiration" /> должен быть <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="priority">Цена объекта относительно других элементов, сохраненных в кэше, выраженная перечислением <see cref="T:System.Web.Caching.CacheItemPriority" />. Это значение используется в кэше при исключении объектов. Объекты с более низкой ценой удаляются из кэша раньше, чем объекты с более высокой ценой.</param>
        <param name="onRemoveCallback">Делегат, который, будучи предоставленным, будет вызываться при удалении объекта из кэша. Его можно использовать для уведомления приложений при удалении объектов из кэша.</param>
        <summary>Вставка объекта в объект <see cref="T:System.Web.Caching.Cache" /> с зависимостями, политиками сроков действия и приоритетов, а также с делегатом, которого можно использовать для уведомления приложения при удалении вставленного элемента из <see langword="Cache" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод будет перезаписывать существующий `Cache` элемент с тем же `key` параметром.  
  
 Нельзя задать оба `absoluteExpiration` параметра и `slidingExpiration` . Если вы планируете истечение срока действия элемента кэша в определенное время, задайте `absoluteExpiration` параметру определенное время, `slidingExpiration` а параметр <xref:System.Web.Caching.Cache.NoSlidingExpiration>— значение.  
  
 Если вы собираетесь истечь срок действия элемента кэша по истечении определенного промежутка времени с момента последнего доступа к элементу, `slidingExpiration` параметру следует присвоить значение интервалу, `absoluteExpiration` а параметру <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>— значение.  
  
   
  
## Examples  
 В следующем примере показано, как назначить элементу высокий приоритет при вставке в `Cache` объект приложения.  
  
> [!NOTE]
>  Дополнительные сведения об использовании этого метода с <xref:System.Web.Caching.CacheItemRemovedCallback> делегатом см. в разделе как [ Уведомление приложения об удалении элемента из кэша](https://msdn.microsoft.com/library/38c33aa0-afe9-40ba-a1a4-1ebab95286ef).  
  
 [!code-csharp[Classic Cache.Insert3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert3 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="key" /> или параметра <paramref name="value" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Для параметра <paramref name="slidingExpiration" /> указывается значение меньше <see langword="TimeSpan.Zero" /> или больше одного года.</exception>
        <exception cref="T:System.ArgumentException">Оба параметра — <paramref name="absoluteExpiration" /> и <paramref name="slidingExpiration" /> — заданы для элемента, который вы пытаетесь добавить в <see langword="Cache" />.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Caching.Cache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Объект <see cref="T:System.String" />, который представляет ключ для элемента кэша.</param>
        <summary>Возвращает или задает элемент кэша при указанном ключе.</summary>
        <value>Указанный элемент кэша.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство можно использовать для получения значения указанного элемента кэша или для добавления элемента и ключа в кэш. Добавление элемента кэша с помощью <xref:System.Web.Caching.Cache.Item%2A> свойства эквивалентно <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> вызову метода.  
  
   
  
## Examples  
 В следующем примере `Item` свойство используется для получения значения кэшированного объекта, `Key1` связанного с ключом. Затем он использует <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType> метод для записи значения и вводного текста и HTML-элемента B на страницу веб-форм.  
  
 [!code-csharp[System.Web.Caching Examples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#5)]
 [!code-vb[System.Web.Caching Examples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#5)]  
  
 В следующем примере показано использование этого свойства для вставки значения текстового поля в кэш.  
  
 [!code-csharp[Classic Cache.this Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.this Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.this Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.this Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="NoAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime NoAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoAbsoluteExpiration As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoAbsoluteExpiration : DateTime" Usage="System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Используется в параметре <paramref name="absoluteExpiration" /> при вызове метода <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />, чтобы указать, что срок действия этого элемента никогда не истечет. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании это поле задает `absoluteExpiration` параметр <xref:System.DateTime.MaxValue>, равный, который представляет собой константу, представляющую максимально `DateTime` возможное значение 12/31/9999 11:59:59 PM.  
  
   
  
## Examples  
 В следующем примере показано, как использовать `NoAbsoluteExpiration` поле для отключения абсолютного срока действия при вставке элемента `Cache`в.  
  
 [!code-csharp[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Используется в качестве параметра <paramref name="slidingExpiration" /> в вызове метода <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> или <see cref="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" /> для отключения скользящих сроков действия. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании это поле задает `slidingExpiration` параметр <xref:System.TimeSpan.Zero?displayProperty=nameWithType> для поля, которое имеет постоянное значение, равное нулю. Срок действия кэшированного элемента истекает в соответствии `absoluteExpiration` с параметром, `Insert` связанным с вызовом метода или `Add` .  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод Insert для добавления элемента в <xref:System.Web.Caching.Cache> объект `NoSlidingExpiration` с помощью поля.  
  
 [!code-csharp[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.TimeSpan.Zero" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; obj" Usage="cache.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Идентификатор <see cref="T:System.String" /> для элемента кэша, который будет удален.</param>
        <summary>Удаление указанного элемента из объекта <see cref="T:System.Web.Caching.Cache" /> приложения.</summary>
        <returns>Элемент, удаленный из <see langword="Cache" />. Если значение в ключевом параметре не найдено, возвращает <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере создается `RemoveItemFromCache` метод. При вызове этого метода используется <xref:System.Web.Caching.Cache.Item%2A> свойство, чтобы проверить, содержит ли кэш объект, связанный `Key1` со значением ключа. Если это так, `Remove` вызывается метод для удаления объекта.  
  
 [!code-csharp[System.Web.Caching Examples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#4)]
 [!code-vb[System.Web.Caching Examples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращение перечислителя, который может осуществлять итерацию в коллекции объектов <see cref="T:System.Web.Caching.Cache" />.</summary>
        <returns>Перечислитель, который может осуществлять итерацию в коллекции объектов <see cref="T:System.Web.Caching.Cache" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
