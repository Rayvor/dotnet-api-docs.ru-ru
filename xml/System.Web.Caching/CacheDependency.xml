<Type Name="CacheDependency" FullName="System.Web.Caching.CacheDependency">
  <Metadata><Meta Name="ms.openlocfilehash" Value="90d98ec417feb3dab3e0f091c1a9c82997444de4" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73380526" /></Metadata><TypeSignature Language="C#" Value="public class CacheDependency : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CacheDependency extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.CacheDependency" />
  <TypeSignature Language="VB.NET" Value="Public Class CacheDependency&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheDependency : IDisposable" />
  <TypeSignature Language="F#" Value="type CacheDependency = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Устанавливает отношения зависимости между элементом, который хранится в объекте приложения ASP.NET <see cref="T:System.Web.Caching.Cache" />, и файлом, ключом кэша, массивом или другим объектом <see cref="T:System.Web.Caching.CacheDependency" />. Класс <see cref="T:System.Web.Caching.CacheDependency" /> отслеживает отношения зависимости на предмет изменений, автоматически удаляя кэшированный элемент.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При добавлении в кэш элемента, который зависит от другого объекта, например файла или массива файлов, зависимый элемент автоматически удаляется из кэша при изменении объекта. Например, предположим, что вы создаете объект <xref:System.Data.DataSet> на основе данных в XML-файле. Можно добавить <xref:System.Data.DataSet> в кэш с помощью объекта <xref:System.Web.Caching.CacheDependency>, который делает <xref:System.Data.DataSet> зависимым от XML-файла. Если XML-файл изменяется, <xref:System.Data.DataSet> удаляется из кэша.  
  
 Элементы с зависимостями можно добавлять в кэш приложения с помощью методов <xref:System.Web.Caching.Cache.Add%2A> и <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>. Нельзя использовать свойство <xref:System.Web.Caching.Cache.Item%2A> для добавления элементов в кэш с зависимостями.  
  
 Чтобы настроить зависимость, необходимо создать экземпляр класса <xref:System.Web.Caching.CacheDependency>, указав файлы, ключи или каталоги, от которых зависит элемент, а затем передать зависимость методу <xref:System.Web.Caching.Cache.Add%2A> или <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>. Экземпляр <xref:System.Web.Caching.CacheDependency> может представлять один файл или каталог, массив файлов или каталогов, а также массив файлов или папок вместе с массивом ключей кэша (они представляют другие элементы, хранящиеся в объекте <xref:System.Web.Caching.Cache>).  
  
   
  
## Examples  
 В следующем примере кода показано использование свойства <xref:System.Web.Caching.CacheDependency.HasChanged%2A> для определения, изменился ли <xref:System.Web.Caching.CacheDependency> с момента предыдущего запроса элемента в <xref:System.Web.Caching.Cache>. Значение `dt`, передаваемое в параметре `start`, устанавливается в значение <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Caching.Cache" />
    <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
    <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CacheDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CacheDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если вы хотите получить собственный класс от <xref:System.Web.Caching.CacheDependency>, реализуйте эту версию конструктора <xref:System.Web.Caching.CacheDependency.%23ctor%2A>.  
  
   
  
## Examples  
 В следующем примере кода представлен класс, реализующий эту версию конструктора <xref:System.Web.Caching.CacheDependency>, так как все классы, производные от <xref:System.Web.Caching.CacheDependency>, должны быть.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Путь к файлу или каталогу, от которого зависит кэшированный объект. При изменении ресурса кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения файла или каталога.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если каталог или файл, указанный в параметре `filename`, не найден в файловой системе, он будет считаться отсутствующим. Если каталог или файл отсутствует при добавлении объекта с зависимостью в <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании каталога или файла.  
  
 Например, предположим, что вы добавили объект в <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: к:\стоккс\ксиз.дат. Если этот файл не найден при создании объекта <xref:System.Web.Caching.CacheDependency>, но он создается позже, кэшированный объект удаляется после создания файла XYZ. dat.  
  
   
  
## Examples  
 В следующем примере кода создается экземпляр класса <xref:System.Web.Caching.CacheDependency> с зависимостью от XML-файла. Затем метод <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> добавляет элемент в <xref:System.Web.Caching.Cache>, который зависит от этого файла.  
  
 [!code-csharp[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/CS/source.cs#1)]
 [!code-vb[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/VB/source.vb#1)]  
  
 Можно также использовать следующий метод, чтобы добавить элемент в <xref:System.Web.Caching.Cache> с зависимостью от файла.  
  
 [!code-csharp[Single File Dependency Cache entry#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Single File Dependency Cache entry/CS/DependencySingleFilecs.aspx#1)]
 [!code-vb[Single File Dependency Cache entry#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Single File Dependency Cache entry/VB/DependencySingleFilevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency filenames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">Массив путей (к файлам или каталогам), от которого зависит кэшированный объект. При изменении любого из ресурсов кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения массива путей (к файлам или каталогам).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если какой-либо из файлов или каталогов в массиве изменяется или удаляется из массива, кэшированный элемент становится устаревшим и удаляется из объекта <xref:System.Web.Caching.Cache> приложения.  
  
 Кроме того, если какой-либо из каталогов или файлов, указанных в параметре `filenames`, не найден в файловой системе, он считается отсутствующим. Если каталог или файл отсутствует при добавлении объекта с зависимостью в <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании этого каталога или файла.  
  
 Например, предположим, что вы добавили объект в <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: к:\стоккс\ксиз.дат. Если этот файл не найден при создании объекта <xref:System.Web.Caching.CacheDependency>, но он создается позже, кэшированный объект удаляется после создания файла XYZ. dat.  
  
> [!NOTE]
>  При создании массива, содержащего зависимости файлов, необходимо определить число файлов, от которых зависит элемент, добавляемый к <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> для добавления элемента в <xref:System.Web.Caching.Cache> с зависимостями к массиву файлов. Также можно сделать элемент зависимым от массива каталогов.  
  
 [!code-csharp[Multiple file based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Multiple file based dependency/CS/DependencyMultiFilecs.aspx#1)]
 [!code-vb[Multiple file based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Multiple file based dependency/VB/DependencyMultiFilevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filename, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filename">Путь к файлу или каталогу, от которого зависит кэшированный объект. При изменении ресурса кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <param name="start">Время, по которому проверяется дата последнего изменения каталога или файла.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения файла или каталога.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если каталог или файл, указанный в параметре `filename`, не найден в файловой системе, он будет считаться отсутствующим. Если каталог или файл отсутствует при добавлении объекта с зависимостью в <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании каталога или файла.  
  
 Например, предположим, что вы добавили объект в <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: к:\стоккс\ксиз.дат. Если этот файл не найден при создании объекта <xref:System.Web.Caching.CacheDependency>, но он создается позже, кэшированный объект удаляется после создания файла XYZ. dat.  
  
> [!NOTE]
>  Отслеживание изменений начинается немедленно и не основывается непосредственно на параметре `start`. Используйте параметр `start` для передачи даты и времени в прошлом, по которым требуется проверить дату последнего изменения каталога или файла, переданного в параметре `filename`. Если Дата последнего изменения позже, чем дата и время, заданные в параметре `start`, кэшированный элемент удаляется из <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 В следующем примере кода этот конструктор используется для создания экземпляра объекта <xref:System.Web.Caching.CacheDependency>, а затем вставляется элемент в <xref:System.Web.Caching.Cache> с этой зависимостью. Значение `dt`, передаваемое в параметре `start`, устанавливается в значение <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">Массив путей (к файлам или каталогам), от которого зависит кэшированный объект. При изменении любого из ресурсов кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <param name="start">Время, по которому проверяется дата последнего изменения объектов массива.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения массива путей (к файлам или каталогам) и определяющий время начала отслеживания изменений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если какой-либо из каталогов или файлов, указанных в параметре `filenames`, не найден в файловой системе, он считается отсутствующим. Если каталог или файл отсутствует при добавлении объекта с зависимостью в <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании этого каталога или файла.  
  
 Например, предположим, что вы добавили объект в <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: к:\стоккс\ксиз.дат. Если этот файл не найден при создании объекта <xref:System.Web.Caching.CacheDependency>, но он создается позже, кэшированный объект удаляется после создания файла XYZ. dat.  
  
> [!NOTE]
>  Отслеживание изменений начинается немедленно и не основывается непосредственно на параметре `start`. Используйте параметр `start` для передачи даты и времени в прошлом, относительно которых требуется проверить дату последнего изменения массива, переданного в параметре `filenames`. Если Дата последнего изменения любого объекта в массиве превышает дату и время, заданные параметром `start`, кэшированный элемент удаляется из <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 В следующем примере кода создается объект <xref:System.Web.Caching.CacheDependency>, который передает два XML-файла и значение <xref:System.DateTime.Now%2A?displayProperty=nameWithType>, когда объект включается в качестве аргумента параметра в вызове метода <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[CacheDependency Constructor4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor4/CS/depmultifilestimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor4/VB/depmultifilestimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">Массив путей (к файлам или каталогам), от которого зависит кэшированный объект. При изменении любого из ресурсов кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <param name="cachekeys">Массив ключей кэша, изменения которых отслеживает новый объект. При изменении любого из ключей кэша кэшированный объект, связанный с этой зависимостью, становится устаревшим и удаляется из кэша.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения массива путей (к файлам или каталогам), массива ключей кэша, или обоих сразу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кроме того, если какой-либо из каталогов или файлов, указанных в параметре `filenames`, не найден в файловой системе, он считается отсутствующим. Если каталог или файл отсутствует при добавлении объекта с зависимостью в <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании этого каталога или файла.  
  
 Например, предположим, что вы добавили объект в <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: к:\стоккс\ксиз.дат. Если этот файл не найден при создании объекта <xref:System.Web.Caching.CacheDependency>, но он создается позже, кэшированный объект удаляется после создания файла XYZ. dat.  
  
 Однако зависимость `cachekeys` не работает таким же образом. Если хотя бы одно значение параметра `cachekeys` не существует во время вставки, вставка завершается ошибкой. Обратите внимание, что для этого сценария исключение не создается.  
  
## Examples  
 В следующем фрагменте кода показано, как вставить элемент в <xref:System.Web.Caching.Cache> приложения с зависимостью от ключа к другому элементу, помещенному в кэш. Поскольку этот метод использует синтаксис массива, необходимо определить число ключей, от которых зависит добавляемый к <xref:System.Web.Caching.Cache> элемент.  
  
 [!code-csharp[Key based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Key based dependency/CS/DependencyKeycs.aspx#1)]
 [!code-vb[Key based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Key based dependency/VB/DependencyKeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">Массив путей (к файлам или каталогам), от которого зависит кэшированный объект. При изменении любого из ресурсов кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <param name="cachekeys">Массив ключей кэша, изменения которых отслеживает новый объект. При изменении любого из ключей кэша кэшированный объект, связанный с этой зависимостью, становится устаревшим и удаляется из кэша.</param>
        <param name="start">Дата и время, по которым проверяется дата последнего изменения объектов, переданных в <paramref name="filenames" /> и <paramref name="cachekeys" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения массива путей (к файлам или каталогам), массива ключей кэша, или обоих сразу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кроме того, если какой-либо из каталогов или файлов, указанных в параметре `filenames`, не найден в файловой системе, он считается отсутствующим. Если каталог или файл отсутствует при добавлении объекта с зависимостью в <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании этого каталога или файла.  
  
 Например, предположим, что вы добавили объект в <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: к:\стоккс\ксиз.дат. Если этот файл не найден при создании объекта <xref:System.Web.Caching.CacheDependency>, но он создается позже, кэшированный объект удаляется после создания файла XYZ. dat.  
  
 Однако зависимость `cachekeys` не работает таким же образом. Если хотя бы одно значение параметра `cachekeys` не существует во время вставки, вставка завершается ошибкой. Обратите внимание, что для этого сценария исключение не создается.

> [!NOTE]
>  Отслеживание изменений начинается немедленно и не основывается непосредственно на параметре `start`. Используйте параметр `start` для передачи даты и времени в прошлом, по которым требуется проверить дату последнего изменения любого объекта, переданного в параметрах `filenames` или `cachekeys`. Если Дата последнего изменения любого из этих объектов позже, чем дата и время, заданные в параметре `start`, кэшированный элемент удаляется из <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 В следующем примере кода создается метод `CreateDependency`. При вызове этого метода создается объект <xref:System.DateTime>, а свойство <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> используется для добавления элемента в кэш с параметром `key` `key1` и значением `Value 1`. Затем создается массив строк `dependencyKey`, а также значение `key1`. Затем этот конструктор <xref:System.Web.Caching.CacheDependency> создает объект <xref:System.Web.Caching.CacheDependency>, который передает `dependencyKey` и объект <xref:System.DateTime> в качестве аргументов параметра. Метод <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> вызывается следующим образом, используя объект <xref:System.Web.Caching.CacheDependency> в качестве параметра. Это делает объект добавленным в кэш с помощью метода <xref:System.Web.Caching.Cache.Insert%2A>, зависящего от ключа `key1`.  
  
 [!code-csharp[CacheDependency Constructor6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor6/CS/depkeytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor6/VB/depkeytimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * System.Web.Caching.CacheDependency -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, dependency)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="filenames">Массив путей (к файлам или каталогам), от которого зависит кэшированный объект. При изменении любого из ресурсов кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <param name="cachekeys">Массив ключей кэша, изменения которых отслеживает новый объект. При изменении любого из ключей кэша кэшированный объект, связанный с этой зависимостью, становится устаревшим и удаляется из кэша.</param>
        <param name="dependency">Другой экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, от которого зависит этот экземпляр.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения массива путей (к файлам или каталогам), массива ключей кэша, или обоих сразу. Он также становится зависимым от отдельного экземпляра класса <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кроме того, если какой-либо из каталогов или файлов, указанных в параметре `filenames`, не найден в файловой системе, он считается отсутствующим. Если каталог или файл отсутствует при добавлении объекта с зависимостью в <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании этого каталога или файла.  
  
 Например, предположим, что вы добавили объект в <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: к:\стоккс\ксиз.дат. Если этот файл не найден при создании объекта <xref:System.Web.Caching.CacheDependency>, но он создается позже, кэшированный объект удаляется после создания файла XYZ. dat.  
  
 Однако зависимость `cachekeys` не работает таким же образом. Если хотя бы одно значение параметра `cachekeys` не существует во время вставки, вставка завершается ошибкой. Обратите внимание, что для этого сценария исключение не создается.
  
## Examples  
 В следующем примере кода создается метод `CreateDependency`. При вызове этого метода используется свойство <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> для добавления элемента в кэш с параметром `key` `key1` и значением `Value 1`. Затем создается массив строк `dependencyKey`, а также значение `key1`. Конструктор <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType> используется для создания объекта <xref:System.Web.Caching.CacheDependency>, `dep1`, который передает `dependencyKey` в качестве аргумента параметра. Второй <xref:System.Web.Caching.CacheDependency> объект, `dep2`, создается с помощью этого конструктора, в котором `dep1` передается в качестве третьего аргумента параметра. Эта вторая зависимость зависит от первой. Метод <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> вызывается следующим образом, используя второй объект <xref:System.Web.Caching.CacheDependency> в качестве параметра. Если первая зависимость изменяется каким бы то ни было образом, кэшированный элемент станет недействительным.  
  
 [!code-csharp[CacheDependency Constructor7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor7/CS/dependencycs.aspx#1)]
 [!code-vb[CacheDependency Constructor7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor7/VB/dependencyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * System.Web.Caching.CacheDependency * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, dependency, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">Массив путей (к файлам или каталогам), от которого зависит кэшированный объект. При изменении любого из ресурсов кэшированный объект становится устаревшим и удаляется из кэша.</param>
        <param name="cachekeys">Массив ключей кэша, изменения которых отслеживает новый объект. При изменении любого из ключей кэша кэшированный объект, связанный с этой зависимостью, становится устаревшим и удаляется из кэша.</param>
        <param name="dependency">Другой экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, от которого зависит этот экземпляр.</param>
        <param name="start">Время, по которому проверяется дата последнего изменения объектов массивов и объекта <see cref="T:System.Web.Caching.CacheDependency" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Caching.CacheDependency" />, отслеживающий изменения массива путей (к файлам или каталогам), массива ключей кэша, или обоих сразу. Он также становится зависимым от другого экземпляра класса <see cref="T:System.Web.Caching.CacheDependency" /> и времени начала отслеживания изменений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кроме того, если какой-либо из каталогов или файлов, указанных в параметре `filenames`, не найден в файловой системе, он считается отсутствующим. Если каталог или файл отсутствует при добавлении объекта с зависимостью в <xref:System.Web.Caching.Cache>, кэшированный объект будет удален из <xref:System.Web.Caching.Cache> при создании этого каталога или файла.  
  
 Например, предположим, что вы добавили объект в <xref:System.Web.Caching.Cache> с зависимостью от следующего пути к файлу: к:\стоккс\ксиз.дат. Если этот файл не найден при создании объекта <xref:System.Web.Caching.CacheDependency>, но он создается позже, кэшированный объект удаляется после создания файла XYZ. dat.  
 
 Однако зависимость `cachekeys` не работает таким же образом. Если хотя бы одно значение параметра `cachekeys` не существует во время вставки, вставка завершается ошибкой. Обратите внимание, что для этого сценария исключение не создается.

> [!NOTE]
>  Отслеживание изменений начинается немедленно и не основывается непосредственно на параметре `start`. Используйте параметр `start` для передачи даты и времени в прошлом, по которым требуется проверить дату последнего изменения любого объекта, переданного в параметрах `filenames`, `cachekeys`или `dependency`. Если Дата последнего изменения для любого из этих объектов позже даты и времени, переданных в параметре `start`, кэшированный элемент удаляется из <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 В следующем примере кода показан метод `CreateDependency`. При вызове этого метода создается объект <xref:System.DateTime>, а свойство <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> используется для добавления элемента в кэш с параметром ключа `key1` и значением `Value 1`. Затем создается массив строк, `dependencyKey`, со значением в первом (и единственном) индексе, равным значению `key1`. Затем конструктор <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType> используется для создания объекта <xref:System.Web.Caching.CacheDependency>, `dep1`, который передает `dependencyKey` в качестве аргумента параметра. Затем создается второй объект <xref:System.Web.Caching.CacheDependency>, `dep2`, с помощью этого конструктора с `dep1` и объектом <xref:System.DateTime>, передаваемым в качестве аргументов параметра. Вторая зависимость зависит от первой, а мониторинг зависимостей начнется через 10 секунд после вызова метода `CreateDependency`. Метод <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> вызывается следующим образом, используя второй объект <xref:System.Web.Caching.CacheDependency> в качестве параметра. Если первая зависимость изменяется каким бы то ни было образом, кэшированный элемент станет недействительным.  
  
 [!code-csharp[CacheDependency Constructor8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor8/CS/dependencytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor8/VB/dependencytimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="DependencyDispose">
      <MemberSignature Language="C#" Value="protected virtual void DependencyDispose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DependencyDispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.DependencyDispose" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DependencyDispose ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DependencyDispose();" />
      <MemberSignature Language="F#" Value="abstract member DependencyDispose : unit -&gt; unit&#xA;override this.DependencyDispose : unit -&gt; unit" Usage="cacheDependency.DependencyDispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает ресурсы, используемые классом <see cref="T:System.Web.Caching.CacheDependency" /> и любыми классами, производными от <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Любой класс, производный от класса <xref:System.Web.Caching.CacheDependency>, необходим для реализации этого метода для очистки ресурсов, используемых производным классом.  
  
   
  
## Examples  
 В следующем примере кода показан класс, наследующий от класса <xref:System.Web.Caching.CacheDependency> и переопределяющий метод <xref:System.Web.Caching.CacheDependency.DependencyDispose%2A>. При вызове этого метода он задает настраиваемое логическое свойство с именем `Disposed` для `true`.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cacheDependency.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishInit">
      <MemberSignature Language="C#" Value="protected internal void FinishInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void FinishInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.FinishInit" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub FinishInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void FinishInit();" />
      <MemberSignature Language="F#" Value="member this.FinishInit : unit -&gt; unit" Usage="cacheDependency.FinishInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Завершает инициализацию объекта <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.Caching.CacheDependency.FinishInit%2A> завершает инициализацию объекта <xref:System.Web.Caching.CacheDependency>. Этот метод вызывается всеми конструкторами <xref:System.Web.Caching.CacheDependency>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Метод <see cref="M:System.Web.Caching.CacheDependency.FinishInit" /> должен быть вызван в конце конструктора для производных классов, чтобы завершить инициализацию объекта <see cref="T:System.Web.Caching.CacheDependency" />.</para></block>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="GetFileDependencies">
      <MemberSignature Language="C#" Value="public virtual string[] GetFileDependencies ();" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFileDependencies() cil managed" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetFileDependencies" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDependencies () As String()" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFileDependencies();" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetFileDependencies : unit -&gt; string[]&#xA;override this.GetFileDependencies : unit -&gt; string[]" Usage="cacheDependency.GetFileDependencies " FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает зависимости файлов.</summary>
        <returns>Зависимости файлов.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueID">
      <MemberSignature Language="C#" Value="public virtual string GetUniqueID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUniqueID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetUniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUniqueID () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetUniqueID();" />
      <MemberSignature Language="F#" Value="abstract member GetUniqueID : unit -&gt; string&#xA;override this.GetUniqueID : unit -&gt; string" Usage="cacheDependency.GetUniqueID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает уникальный идентификатор для объекта <see cref="T:System.Web.Caching.CacheDependency" /> .</summary>
        <returns>Уникальный идентификатор объекта <see cref="T:System.Web.Caching.CacheDependency" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может быть особенно полезен для отслеживания нескольких экземпляров класса <xref:System.Web.Caching.CacheDependency>, связанных с элементом или приложением.  
  
 Идентификатор представляет собой сочетание имени файла (для файловой зависимости) или имени ключа (для зависимости от ключа кэша) и строки, которую этот метод присваивает зависимости. В классах, производных от класса <xref:System.Web.Caching.CacheDependency>, этот метод можно переопределить для настройки того, как он создает уникальный идентификатор.  
  
   
  
## Examples  
 В следующем примере кода создается объект <xref:System.Web.Caching.AggregateCacheDependency> с именем `aggDep`с двумя объектами <xref:System.Web.Caching.CacheDependency> в своем массиве. После создания экземпляра `aggDep` код вызывает метод <xref:System.Web.Caching.CacheDependency.GetUniqueID%2A>, чтобы создать уникальный идентификатор для обеих зависимостей, которые `aggDep` содержат, и отображает идентификаторы для содержащей страницы. Затем элемент добавляется в <xref:System.Web.Caching.Cache>с помощью метода <xref:System.Web.Caching.Cache.Insert%2A> с `aggDep` в качестве зависимости.  
  
 [!code-vb[CachingSamples_AggregateCacheDependency1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="System.Web.Caching.CacheDependency.HasChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, изменился ли объект <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <value><see langword="true" />, если объект <see cref="T:System.Web.Caching.CacheDependency" /> изменился; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы можете добавить элемент в <xref:System.Web.Caching.Cache> приложения ASP.NET с помощью <xref:System.Web.Caching.CacheDependency>. При изменении <xref:System.Web.Caching.CacheDependency> элемент, добавленный в <xref:System.Web.Caching.Cache>, становится недействительным и удаляется из кэша. Это свойство можно использовать для определения, изменился ли <xref:System.Web.Caching.CacheDependency>, и повторно создать элемент в <xref:System.Web.Caching.Cache>, если это произошло.  
  
   
  
## Examples  
 В следующем примере кода показано использование свойства <xref:System.Web.Caching.CacheDependency.HasChanged%2A> для определения, изменился ли <xref:System.Web.Caching.CacheDependency> с момента предыдущего запроса элемента в <xref:System.Web.Caching.Cache>. Значение `dt`, передаваемое в параметре `start`, устанавливается в значение <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="ItemRemoved">
      <MemberSignature Language="C#" Value="public void ItemRemoved ();" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ItemRemoved() cil managed" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.ItemRemoved" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub ItemRemoved ()" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ItemRemoved();" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ItemRemoved : unit -&gt; unit" Usage="cacheDependency.ItemRemoved " FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывается при удалении отслеживаемой записи кэша.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepDependenciesAlive">
      <MemberSignature Language="C#" Value="public void KeepDependenciesAlive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void KeepDependenciesAlive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.KeepDependenciesAlive" />
      <MemberSignature Language="VB.NET" Value="Public Sub KeepDependenciesAlive ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void KeepDependenciesAlive();" />
      <MemberSignature Language="F#" Value="member this.KeepDependenciesAlive : unit -&gt; unit" Usage="cacheDependency.KeepDependenciesAlive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет время последнего обращения к каждому элементу кэша, который зависит от этого элемента.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDependencyChanged">
      <MemberSignature Language="C#" Value="protected void NotifyDependencyChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifyDependencyChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NotifyDependencyChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void NotifyDependencyChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.NotifyDependencyChanged : obj * EventArgs -&gt; unit" Usage="cacheDependency.NotifyDependencyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="e" Type="System.EventArgs" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sender">Источник события.</param>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные о событии.</param>
        <summary>Уведомляет базовый объект <see cref="T:System.Web.Caching.CacheDependency" /> об изменении зависимости, представленной производным классом <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Любой класс, производный от класса <xref:System.Web.Caching.CacheDependency>, должен реализовывать этот метод.  
  
 При наследовании от класса <xref:System.Web.Caching.CacheDependency> используются базовые функции любого метода или свойства, которые не были переопределены. При создании экземпляра производного класса он представляет файлы, ключи кэша, таблицы базы данных или другие произвольные объекты, от которых требуется сделать кэшированный элемент. При изменении элемента зависимости этот метод уведомляет базовую функциональность класса <xref:System.Web.Caching.CacheDependency>, что элемент изменился, чтобы можно было обновить значения свойств <xref:System.Web.Caching.CacheDependency.HasChanged%2A> и <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A>.  
  
   
  
## Examples  
 В следующем примере кода показан класс, наследующий от класса <xref:System.Web.Caching.CacheDependency>. Он создает открытый метод `ResetDependency`, который использует метод <xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> для изменения времени изменения зависимости, а затем вызывает метод <xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A>.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="SetCacheDependencyChanged">
      <MemberSignature Language="C#" Value="public void SetCacheDependencyChanged (Action&lt;object,EventArgs&gt; dependencyChangedAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheDependencyChanged(class System.Action`2&lt;object, class System.EventArgs&gt; dependencyChangedAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheDependencyChanged (dependencyChangedAction As Action(Of Object, EventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheDependencyChanged(Action&lt;System::Object ^, EventArgs ^&gt; ^ dependencyChangedAction);" />
      <MemberSignature Language="F#" Value="member this.SetCacheDependencyChanged : Action&lt;obj, EventArgs&gt; -&gt; unit" Usage="cacheDependency.SetCacheDependencyChanged dependencyChangedAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyChangedAction" Type="System.Action&lt;System.Object,System.EventArgs&gt;" Index="0" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dependencyChangedAction">Действие изменения зависимости.</param>
        <summary>Добавляет метод действия для обработки уведомления заинтересованной стороны об изменениях в этой зависимости.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUtcLastModified">
      <MemberSignature Language="C#" Value="protected void SetUtcLastModified (DateTime utcLastModified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetUtcLastModified(valuetype System.DateTime utcLastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetUtcLastModified (utcLastModified As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetUtcLastModified(DateTime utcLastModified);" />
      <MemberSignature Language="F#" Value="member this.SetUtcLastModified : DateTime -&gt; unit" Usage="cacheDependency.SetUtcLastModified utcLastModified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utcLastModified" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="utcLastModified">Время последнего изменения зависимости.</param>
        <summary>Помечает время последнего изменения зависимости.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показан класс, наследующий от класса <xref:System.Web.Caching.CacheDependency>. Он создает открытый метод `ResetDependency`, который использует метод <xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> для изменения времени изменения зависимости, а затем вызывает метод <xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A>.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
    <Member MemberName="TakeOwnership">
      <MemberSignature Language="C#" Value="public bool TakeOwnership ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TakeOwnership() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.TakeOwnership" />
      <MemberSignature Language="VB.NET" Value="Public Function TakeOwnership () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TakeOwnership();" />
      <MemberSignature Language="F#" Value="member this.TakeOwnership : unit -&gt; bool" Usage="cacheDependency.TakeOwnership " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Позволяет первому пользователю объявлять монопольный доступ к этой зависимости.</summary>
        <returns><see langword="true" />, если элемент был первым владельцем; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод объявляет, что используется зависимость. Если другой элемент, который ранее вызывал этот метод и принял владение, возвращается `false`. <xref:System.Web.Caching.CacheDependency> может использоваться только одной записью кэша. Когда элемент добавляется в кэш с заданными зависимостями кэша, он должен стать владельцем этих зависимостей, чтобы убедиться в том, что они не используются в другом месте.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcLastModified">
      <MemberSignature Language="C#" Value="public DateTime UtcLastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcLastModified" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcLastModified As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcLastModified { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcLastModified : DateTime" Usage="System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает время последнего изменения зависимости.</summary>
        <value>Время последнего изменения зависимости.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство измеряется в формате UTC (также называется временем по Гринвичу).  
  
   
  
## Examples  
 В следующем примере кода класс <xref:System.Web.Caching.AggregateCacheDependency> используется для добавления элемента с двумя зависимостями <xref:System.Web.Caching.CacheDependency> объектов в <xref:System.Web.Caching.Cache>. Когда выполняется запрос <xref:System.Web.Caching.Cache> элемента, код проверяет, находится ли элемент в <xref:System.Web.Caching.Cache>. Если это так, то свойство <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> преобразуется в строку и отображается на странице. Если это не так, то элемент и его две зависимости создаются и добавляются в <xref:System.Web.Caching.Cache>.  
  
 [!code-vb[CachingSamples_AggregateCacheDependency1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Кэширование данных приложения</related>
      </Docs>
    </Member>
  </Members>
</Type>
