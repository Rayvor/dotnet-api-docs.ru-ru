<Type Name="ProfileOptimization" FullName="System.Runtime.ProfileOptimization">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc4eb4a6f0b443fa56224524d3ed86c4029390b7" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75082237" /></Metadata><TypeSignature Language="C#" Value="public static class ProfileOptimization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileOptimization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ProfileOptimization" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileOptimization" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileOptimization abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileOptimization = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Улучшает производительность при запуске доменов приложения в приложениях, требующих JIT-компилятора путем фоновой компиляции методов, выполнение которых ожидается, на основе профилей, созданных во время предыдущих компиляций.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Для оптимизации профиля требуется многоядерный компьютер. Методы игнорируются на других компьютерах.  
  
 При каждом запуске оптимизации профиля в домене приложения прочитается профиль, созданный во время предыдущего использования. Сведения в профиле используются для выполнения фоновой компиляции путем определения методов, которые, скорее всего, будут выполняться во время запуска. На многоядерных компьютерах это увеличивает вероятность того, что метод уже компилируется в нужное время, чтобы главный поток приложения не вызывал JIT-компилятор.  
  
 Файл профиля перезаписывается при каждом использовании, поэтому он всегда содержит самые последние сведения о методах, используемых во время запуска.  
  
 Профили оптимизации не ограничиваются запуском домена приложений. Их можно использовать для любого действия, которое потребует интенсивного использования JIT-компилятора. Можно поддерживать несколько профилей для домена приложения, чтобы каждое из них было иметь собственный профиль.  
  
 Чтобы использовать профили оптимизации в домене приложения, необходимо вызвать метод <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> и указать папку, в которой хранятся профили. Папка уже должна существовать. Чтобы начать работу с профилем, вызовите метод <xref:System.Runtime.ProfileOptimization.StartProfile%2A> и укажите имя файла профиля. Если файл не был записан ранее, он создается при первом использовании. При первом создании профиля преимущество производительности не имеет.  
  
 Оптимизация профиля не меняет порядок выполнения методов. Методы не выполняются в фоновом потоке; Если метод скомпилирован, но никогда не вызывается, он просто не используется. Если файл профиля поврежден или не может быть записан в указанную папку (например, потому, что папка не существует), выполнение программы продолжится без профилирования с оптимизацией.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetProfileRoot">
      <MemberSignature Language="C#" Value="public static void SetProfileRoot (string directoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProfileRoot(string directoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetProfileRoot (directoryPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetProfileRoot(System::String ^ directoryPath);" />
      <MemberSignature Language="F#" Value="static member SetProfileRoot : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.SetProfileRoot directoryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directoryPath">Полный путь к папке, где хранятся файлы профиля для текущего домена приложения.</param>
        <summary>Включает профилирование оптимизации для текущего домена приложения и задает каталог, в котором хранятся файлы профиля оптимизации. На одноядерном компьютере этот метод игнорируется.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод следует вызывать перед вызовом метода <xref:System.Runtime.ProfileOptimization.StartProfile%2A> в первый раз в текущем домене приложения. При вызове <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> несколько раз в одном домене приложения все вызовы после первого игнорируются.  
  
 Указанная папка уже должна существовать. Если он не существует, вызов этого метода не создает его, а профилирование не выполняется.  
  
 На компьютерах без нескольких ядер этот метод игнорируется.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">требуется полное доверие для немедленного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
    <Member MemberName="StartProfile">
      <MemberSignature Language="C#" Value="public static void StartProfile (string profile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartProfile(string profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.StartProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartProfile (profile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartProfile(System::String ^ profile);" />
      <MemberSignature Language="F#" Value="static member StartProfile : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.StartProfile profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="profile">Имя файла профиля для использования.</param>
        <summary>Запускает JIT-компиляцию методов, которые ранее были записаны в указанном файле профиля, в фоновом потоке. Запускает процесс записи текущего использования методов, который позже перезаписывает указанный файл профиля.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если указанный профиль существует в папке, указанной в методе <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>, содержащиеся в нем сведения используются для определения порядка, в котором методы компилируются в фоновом потоке. Метод <xref:System.Runtime.ProfileOptimization.StartProfile%2A> создает профиль, если он еще не существует, и инициирует запись использования метода.  
  
 Записываются только те методы, которые вызываются, независимо от того, были ли они скомпилированы в фоновом потоке или в основном потоке приложения. Метод компилируется в главном потоке приложения, если приложению необходимо вызвать его до того, как он будет скомпилирован в фоновом потоке.  
  
 Код, выполняющий запись, отслеживает скорость, с которой компилируются методы, включая методы, компилируемые как в фоновом, так и в основном потоке. Если ставка падает ниже предварительно определенного уровня, запись останавливается. Запись также останавливается, если частота JIT-компиляции превышает предварительно определенную верхнюю границу.  
  
 Если метод <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> не был вызван для текущего домена приложения или если компьютер не имеет несколько ядер, метод <xref:System.Runtime.ProfileOptimization.StartProfile%2A> не действует.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">требуется полное доверие для немедленного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
  </Members>
</Type>
