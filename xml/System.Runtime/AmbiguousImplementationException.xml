<Type Name="AmbiguousImplementationException" FullName="System.Runtime.AmbiguousImplementationException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76db1fa953140d05271fd551209100167490fb0d" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75082325" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbiguousImplementationException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbiguousImplementationException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.AmbiguousImplementationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbiguousImplementationException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbiguousImplementationException sealed : Exception" />
  <TypeSignature Language="F#" Value="type AmbiguousImplementationException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a5a2d-101">Исключение, возникающее при наличии нескольких несовместимых методов интерфейса, переопределяющих другой метод.</span><span class="sxs-lookup"><span data-stu-id="a5a2d-101">The exception that is thrown when there are multiple incompatible interface methods overriding another method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a5a2d-102">Как правило, при наличии нескольких несовместимых методов интерфейса, реализующих другой метод интерфейса, создается ошибка компиляции.</span><span class="sxs-lookup"><span data-stu-id="a5a2d-102">Normally, a compilation error is generated if there are multiple incompatible interface methods implementing another interface method.</span></span> <span data-ttu-id="a5a2d-103">`AmbiguousImplementationException` возникает, когда тип в зависимой сборке реализует интерфейс из сборки, которая была изменена.</span><span class="sxs-lookup"><span data-stu-id="a5a2d-103">`AmbiguousImplementationException` is thrown when a type in a dependent assembly implements an interface from an assembly that was modified.</span></span>

<span data-ttu-id="a5a2d-104">Чтобы устранить эту ошибку, необходимо предоставить наиболее конкретную реализацию метода интерфейса.</span><span class="sxs-lookup"><span data-stu-id="a5a2d-104">To resolve the error, the most specific implementation of the interface method has to be provided.</span></span> <span data-ttu-id="a5a2d-105">Наиболее конкретная реализация метода интерфейса может быть предоставлена в классе, реализующем интерфейс, или в другом интерфейсе, для которого требуется интерфейс, предоставляющий конфликтующую реализацию.</span><span class="sxs-lookup"><span data-stu-id="a5a2d-105">The most specific implementation of the interface method can be provided on the class that implements the interface, or on another interface that requires the interface providing the conflicting implementation.</span></span>

<span data-ttu-id="a5a2d-106">`AmbiguousImplementationException` использует `HRESULT COR_E_AMBIGUOUSIMPLEMENTATION`, значение которого равно `0x8013106A`.</span><span class="sxs-lookup"><span data-stu-id="a5a2d-106">`AmbiguousImplementationException` uses the `HRESULT COR_E_AMBIGUOUSIMPLEMENTATION`, which has a value of `0x8013106A`.</span></span>

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousImplementationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.AmbiguousImplementationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousImplementationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5a2d-107">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.AmbiguousImplementationException" />.</span><span class="sxs-lookup"><span data-stu-id="a5a2d-107">Initializes a new instance of the <see cref="T:System.Runtime.AmbiguousImplementationException" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousImplementationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.AmbiguousImplementationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousImplementationException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Runtime.AmbiguousImplementationException : string -&gt; System.Runtime.AmbiguousImplementationException" Usage="new System.Runtime.AmbiguousImplementationException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a5a2d-108">Строка локализованного сообщения об ошибке.</span><span class="sxs-lookup"><span data-stu-id="a5a2d-108">The localized error message string.</span></span></param>
        <summary><span data-ttu-id="a5a2d-109">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.AmbiguousImplementationException" /> с указанным сообщением об ошибке.</span><span class="sxs-lookup"><span data-stu-id="a5a2d-109">Initializes a new instance of the <see cref="T:System.Runtime.AmbiguousImplementationException" /> class with a specified error message.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousImplementationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.AmbiguousImplementationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousImplementationException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Runtime.AmbiguousImplementationException : string * Exception -&gt; System.Runtime.AmbiguousImplementationException" Usage="new System.Runtime.AmbiguousImplementationException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a5a2d-110">Строка с описанием ошибки.</span><span class="sxs-lookup"><span data-stu-id="a5a2d-110">A string that describes the error.</span></span></param>
        <param name="innerException"><span data-ttu-id="a5a2d-111">Исключение, которое является причиной текущего исключения.</span><span class="sxs-lookup"><span data-stu-id="a5a2d-111">The exception that is the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="a5a2d-112">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.AmbiguousImplementationException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</span><span class="sxs-lookup"><span data-stu-id="a5a2d-112">Initializes a new instance of the <see cref="T:System.Runtime.AmbiguousImplementationException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
