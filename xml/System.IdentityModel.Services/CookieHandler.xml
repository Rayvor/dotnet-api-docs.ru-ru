<Type Name="CookieHandler" FullName="System.IdentityModel.Services.CookieHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0d8d93dfd53ba9ba1ab337c386225511369a89eb" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70617196" /></Metadata><TypeSignature Language="C#" Value="public abstract class CookieHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CookieHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CookieHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CookieHandler abstract" />
  <TypeSignature Language="F#" Value="type CookieHandler = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет абстрактный базовый класс для операций чтения, записи и удаления файла " Cookie " сеанса клиента HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 (SAM) использует экземпляр <xref:System.IdentityModel.Services.CookieHandler> класса для чтения, записи и удаления файлов cookie или файлов cookie, содержащих объект <xref:System.IdentityModel.Tokens.SessionSecurityToken> в HTTP-клиенте. <xref:System.IdentityModel.Services.SessionAuthenticationModule> Файлы cookie (или файлы cookie, в случае разделения маркера сеанса по нескольким файлам cookie), которые содержат маркер сеанса, называются cookie сеанса.  
  
 Windows Identity Foundation (WIF) поставляется с обработчиком файлов cookie, называемым обработчиком фрагментированных файлов cookie, <xref:System.IdentityModel.Services.ChunkedCookieHandler> который реализуется классом. Обработчик фрагментированных файлов cookie разделяет маркер сеанса по одному или нескольким файлам cookie в соответствии с заданным размером фрагмента. Это соответствует ограничениям размера отдельных файлов cookie, накладываемых многими браузерами.  
  
 Вы можете создать собственный обработчик <xref:System.IdentityModel.Services.CookieHandler> файлов cookie, производный от. При этом необходимо переопределить <xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A>методы, <xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A>и <xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A> для выполнения фактической работы по удалению, чтению и записи файла cookie сеанса. Эти методы обычно считывают файл cookie из <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> коллекции и записывают или удаляют файлы cookie <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> через коллекцию. <xref:System.Web.HttpContext> Объект, через который можно получить доступ к запросу и ответу, предоставляется в качестве параметра для каждого из этих методов. Помимо требуемых методов, при необходимости можно переопределить другие свойства виртуальных методов, предоставляемые <xref:System.IdentityModel.Services.CookieHandler> классом, чтобы настроить поведение обработчика.  
  
 Класс, который задает поведение по <xref:System.IdentityModel.Services.CookieHandler> умолчанию и свойства для файла cookie сеанса, предоставляется в виде нескольких свойств. Свойства <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> и <xref:System.IdentityModel.Services.CookieHandler.Path%2A>  указывают базовое имя для файла cookie, домен, в котором он является допустимым, и путь, по которому он хранится на клиенте. <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> Свойство указывает, доступен ли файл cookie для скриптов на стороне клиента. <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> Свойство указывает, должен ли файл cookie передаваться только по защищенным соединениям (HTTPS). Если задано, <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> свойство используется для задания срока действия для постоянных сеансов, то есть для сеансов, которые остаются действительными даже после закрытия браузера. Все эти свойства имеют эквивалентные свойства, которые обычно задаются для <xref:System.Web.HttpCookie> базового объекта (или объектов) основными методами обработчика. Дополнительные сведения см. в документации по каждому свойству.  
  
 Обработчик файлов cookie, используемый SAM, может быть указан в конфигурации с помощью [ &lt;элемента кукиехандлер&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) . Обработчик файлов cookie, заданный этим элементом, может быть изменен в делегате события <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> для события, а также может быть задан или доступен напрямую <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=nameWithType> через свойство.  
  
   
  
## Examples  
 В следующем примере SAM настраивается для использования пользовательского обработчика файлов cookie типа `MyNamespace.MyCustomCookieHandler`.  
  
```xml  
<cookieHandler mode="Custom">  
    <customCookieHandler type="MyNamespace.MyCustomCookieHandler, MyAssembly" />  
</cookieHandler>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />
    <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;кукиехандлер&gt;</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CookieHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Вызывается из конструкторов в производных классах для инициализации класса <see cref="T:System.IdentityModel.Services.CookieHandler" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Удаляет файл cookie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="cookieHandler.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет файл cookie, связанный с текущим запросом, имеющий имя, домен и путь по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя, домен и путь указываются <xref:System.IdentityModel.Services.CookieHandler.Name%2A>свойствами, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>и <xref:System.IdentityModel.Services.CookieHandler.Path%2A> . Запрос определяется<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Delete : string -&gt; unit" Usage="cookieHandler.Delete name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя файла cookie.</param>
        <summary>Удаляет файл cookie, связанный с текущим запросом, имеющий заданное имя и домен и путь по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Домен и путь указываются <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> свойствами и. <xref:System.IdentityModel.Services.CookieHandler.Path%2A> Запрос определяется<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" /> или пуст.</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Информация <see cref="T:System.Web.HttpContext" /> для запроса.</param>
        <summary>Удаляет файл cookie, связанный с текущим запросом, имеющий имя, домен и путь по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя, домен и путь указываются <xref:System.IdentityModel.Services.CookieHandler.Name%2A>свойствами, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>и <xref:System.IdentityModel.Services.CookieHandler.Path%2A> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Имя файла cookie.</param>
        <param name="context">Информация <see cref="T:System.Web.HttpContext" /> для запроса.</param>
        <summary>Удаляет файл cookie, связанный с заданным запросом, имеющий заданное имя и домен и путь по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Домен и путь указываются <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> свойствами и. <xref:System.IdentityModel.Services.CookieHandler.Path%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" /> или пуст.</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : string * string * string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Имя файла cookie.</param>
        <param name="path">Путь к файлу cookie.</param>
        <param name="domain">Домен файла cookie.</param>
        <param name="context"><see cref="T:System.Web.HttpContext" /> для запроса.</param>
        <summary>Удаляет файл cookie, связанный с заданным запросом, имеющий заданные имя, домен и путь.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" /> или пуст.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteCore">
      <MemberSignature Language="C#" Value="protected abstract void DeleteCore (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteCore(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeleteCore (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeleteCore(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member DeleteCore : string * string * string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.DeleteCore (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Имя файла cookie</param>
        <param name="path">Путь к файлу cookie.</param>
        <param name="domain">Домен файла cookie.</param>
        <param name="context">Информация <see cref="T:System.Web.HttpContext" /> для запроса.</param>
        <summary>При переопределении в производном классе удаляет связанный с указанным запросом файл cookie, имеющий заданные имя, домен и путь.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается из перегруженных <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> методов для выполнения фактической работы по удалению файла cookie. <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> Методы гарантируют, что имя и путь не являются пустыми строками.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Этот метод необходимо переопределить. Реализация полностью зависит от разработчика. В типичном случае реализации заменяют указанный файл cookie в <see cref="P:System.Web.HttpResponse.Cookies" /> коллекции на файл cookie <see langword="null" /> с данными и сроком действия, установленным ранее текущего времени, однако это не является обязательным.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public virtual string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает домен, используемое для файлов cookie.</summary>
        <value>Домен, используемый для файлов cookie. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Соответствует свойству <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType>.  
  
 Свойство можно инициализировать, указав `domain` атрибут [ &lt;в элементе кукиехандлер&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) в конфигурации.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;кукиехандлер&gt;</related>
      </Docs>
    </Member>
    <Member MemberName="HideFromClientScript">
      <MemberSignature Language="C#" Value="public virtual bool HideFromClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromClientScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HideFromClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HideFromClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideFromClientScript : bool with get, set" Usage="System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, следует ли скрывать файл cookie от клиентского скрипта.</summary>
        <value>Значение <see langword="true" />, если файл cookie должен быть скрыт от клиентских скриптов; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Определяет, порождается ли флаг "HttpOnly" в заголовке Set-cookie для файлов cookie, записанных обработчиком. Некоторые веб-браузеры используют этот флаг, так как клиентский сценарий получает доступ к значению cookie.  
  
 Это свойство соответствует <xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=nameWithType> свойству.  
  
 Свойство можно инициализировать, указав `hideFromScript` атрибут [ &lt;в элементе кукиехандлер&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) в конфигурации.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCookiePath">
      <MemberSignature Language="C#" Value="public virtual string MatchCookiePath (Uri baseUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MatchCookiePath(class System.Uri baseUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchCookiePath (baseUri As Uri, targetUri As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MatchCookiePath(Uri ^ baseUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="abstract member MatchCookiePath : Uri * Uri -&gt; string&#xA;override this.MatchCookiePath : Uri * Uri -&gt; string" Usage="cookieHandler.MatchCookiePath (baseUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri">Базовый URL-адрес запроса.</param>
        <param name="targetUri">Универсальный код ресурса (URI) для сопоставления</param>
        <summary>Если целевой домен находится в пределах домена файла cookie и целевой путь находится в пределах пути к файлу cookie, сравнивается регистр части пути файла cookie.</summary>
        <returns>Возвращает <see cref="T:System.String" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает базовое имя для файлов cookie, записываемых обработчиком.</summary>
        <value>Базовое имя для файлов cookie. Значение по умолчанию — FedAuth.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство соответствует <xref:System.Web.HttpCookie.Name%2A?displayProperty=nameWithType> свойству.  
  
 Свойство можно инициализировать, указав `name` атрибут [ &lt;в элементе кукиехандлер&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) в конфигурации.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Предпринята попытка задать значение, равняющееся <see langword="null" /> или пустое.</exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает виртуальный путь для файлов cookie, записываемых обработчиком.</summary>
        <value>Виртуальный путь. По умолчанию — корневой каталог приложения ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство соответствует <xref:System.Web.HttpCookie.Path%2A?displayProperty=nameWithType> свойству.  
  
 Свойство можно инициализировать, указав `path` атрибут [ &lt;в элементе кукиехандлер&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) в конфигурации.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Предпринята попытка задать значение, равняющееся <see langword="null" /> или пустое.</exception>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PersistentSessionLifetime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentSessionLifetime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Время существования постоянных сеансов. Если значение равно нулю, всегда используются временные сеансы.</summary>
        <value>Время существования сеанса Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Билеты для постоянных сеансов хранятся в файлах cookie на основе файлов. Это означает, что сеанс входа может продолжаться после закрытия и повторного открытия веб-браузера.  
  
 Это свойство используется для задания <xref:System.Web.HttpCookie.Expires%2A?displayProperty=nameWithType> свойства.  
  
 Свойство можно инициализировать, указав `persistentSessionLifetime` атрибут [ &lt;в элементе кукиехандлер&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) в конфигурации.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Заданно значение меньше нуля.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Считывает файлы Cookie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read();" />
      <MemberSignature Language="F#" Value="member this.Read : unit -&gt; byte[]" Usage="cookieHandler.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Считывает файл cookie, связанный с текущим запросом, имеющий имя по умолчанию.</summary>
        <returns>Значение файла cookie или <see langword="null" />, если файл сookie не найден.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя файла cookie указывается <xref:System.IdentityModel.Services.CookieHandler.Name%2A> свойством. Запрос задается параметром <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Read : string -&gt; byte[]" Usage="cookieHandler.Read name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя файла cookie, который необходимо прочитать.</param>
        <summary>Считывает файл cookie, связанный с текущим запросом, имеющий указанное имя.</summary>
        <returns>Значение файла cookie или <see langword="null" />, если файл сookie не найден.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Запрос определяется<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение <see langword="null" /> или пуст.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Read : System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.Read context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Информация <see cref="T:System.Web.HttpContext" /> для запроса.</param>
        <summary>Считывает файл cookie, связанный с текущим запросом, имеющий имя, домен и путь по умолчанию.</summary>
        <returns>Значение файла cookie или <see langword="null" />, если файл сookie не найден.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя файла cookie указывается <xref:System.IdentityModel.Services.CookieHandler.Name%2A> свойством.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Read : string * System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.Read (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Имя файла cookie, который необходимо прочитать.</param>
        <param name="context">Информация <see cref="T:System.Web.HttpContext" /> для запроса.</param>
        <summary>Считывает файл cookie, связанный с заданным запросом, имеющий заданное имя и домен и путь по умолчанию.</summary>
        <returns>Значение файла cookie или <see langword="null" />, если файл сookie не найден.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение <see langword="null" /> или пуст.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadCore">
      <MemberSignature Language="C#" Value="protected abstract byte[] ReadCore (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ReadCore(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadCore (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ ReadCore(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ReadCore : string * System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.ReadCore (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Имя файла cookie</param>
        <param name="context">Информация <see cref="T:System.Web.HttpContext" /> для запроса.</param>
        <summary>При переопределении в производном классе считывает файл cookie, имеющий заданное имя и связанный с указанным запросом.</summary>
        <returns>Значение файла cookie или <see langword="null" />, если файл сookie не найден</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается из перегруженных <xref:System.IdentityModel.Services.CookieHandler.Read%2A> методов для выполнения фактической работы по чтению файла cookie. Методы будут гарантировать, что `name` является непустой строкой. <xref:System.IdentityModel.Services.CookieHandler.Read%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Этот метод необходимо переопределить. Реализация полностью зависит от разработчика. В типичном случае реализации считывают данные файлов cookie из <see cref="P:System.Web.HttpRequest.Cookies" /> коллекции, однако это не является обязательным требованием.</para></block>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public virtual bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequireSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequireSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireSsl : bool with get, set" Usage="System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, которое указывает, должны ли файлы cookie использоваться только с SSL.</summary>
        <value>Значение <see langword="true" />, если файл сookie должен использоваться только через SSL-соединение; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Определяет, порождается ли флаг "Secure" в заголовке Set-cookie для всех записанных файлов cookie. Если это значение равно `true`, то файлы cookie сеанса будут доступны только по протоколу HTTPS.  
  
 Это свойство соответствует <xref:System.Web.HttpCookie.Secure%2A?displayProperty=nameWithType> свойству.  
  
 Свойство можно инициализировать, указав `requireSSL` атрибут [ &lt;в элементе кукиехандлер&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) в конфигурации.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает файл cookie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, bool isPersistent, valuetype System.DateTime tokenExpirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), isPersistent As Boolean, tokenExpirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * bool * DateTime -&gt; unit" Usage="cookieHandler.Write (value, isPersistent, tokenExpirationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="tokenExpirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Значение файла Cookie.</param>
        <param name="isPersistent">значение <see langword="true" />, если файлы cookie сохраняются; значение <see langword="false" />, если файлы cookie только для сеанса, т. е. являются допустимыми только до тех пор пока браузер на клиенте не закрыт.</param>
        <param name="tokenExpirationTime">Время окончания действия базового токена.</param>
        <summary>Записывает связанный с текущим запросом файл cookie, имеющий заданные значение, сохраняемость и срок действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если параметр имеет `false`значение, то срок действия файла cookie устанавливается равным  <xref:System.DateTime.MinValue?displayProperty=nameWithType> .  `isPersistent` `null` <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> `null`Если параметр имеет `true`значение, то время истечения срока действия файла cookie устанавливается равным значению свойства, если оно не равно, или, если свойство имеет значение, то время истечения срока действия устанавливается равным значению `isPersistent`  `tokenExpirationTime` параметр.  
  
 Имя файла cookie, домен и путь указываются <xref:System.IdentityModel.Services.CookieHandler.Name%2A>свойствами, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>и <xref:System.IdentityModel.Services.CookieHandler.Path%2A> . Запрос задается параметром <xref:System.Web.HttpContext.Current%2A>. Указывает, должен ли файл cookie отправляться только по протоколу SSL <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> , задается свойством, и должен ли файл cookie быть скрытым от клиентского скрипта <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> , задается свойством.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" /> или пуст.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * DateTime -&gt; unit" Usage="cookieHandler.Write (value, name, expirationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Значение файла Cookie.</param>
        <param name="name">Имя файла cookie.</param>
        <param name="expirationTime">Время окончания срока действия для файла cookie или <see cref="F:System.DateTime.MinValue" /> для файла cookie сеанса (сеансового).</param>
        <summary>Записывает связанный с текущим запросом файл cookie, имеющий заданные имя, значение и срок действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Домен и путь cookie указываются <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> свойствами и. <xref:System.IdentityModel.Services.CookieHandler.Path%2A> Запрос задается параметром <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>.  Запрос задается параметром <xref:System.Web.HttpContext.Current%2A>. Указывает, должен ли файл cookie отправляться только по протоколу SSL <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> , задается свойством, и должен ли файл cookie быть скрытым от клиентского скрипта <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> , задается свойством.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" /> или пуст.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение <see langword="null" /> или пуст.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * DateTime * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Write (value, name, expirationTime, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Значение файла Cookie.</param>
        <param name="name">Имя файла cookie.</param>
        <param name="expirationTime">Время окончания срока действия для файла cookie или <see cref="F:System.DateTime.MinValue" /> для файла cookie сеанса (сеансового).</param>
        <param name="context">Информация <see cref="T:System.Web.HttpContext" /> для запроса.</param>
        <summary>Записывает связанный с указанным запросом файл cookie, имеющий заданные имя, значение и срок действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Домен и путь cookie указываются <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> свойствами и. <xref:System.IdentityModel.Services.CookieHandler.Path%2A> Запрос задается параметром <xref:System.Web.HttpContext.Current%2A>. Указывает, должен ли файл cookie отправляться только по протоколу SSL <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> , задается свойством, и должен ли файл cookie быть скрытым от клиентского скрипта <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> , задается свойством.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" /> или пуст.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение <see langword="null" /> или пуст.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, string path, string domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, requiresSsl As Boolean, hideFromClientScript As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Write (value, name, path, domain, expirationTime, requiresSsl, hideFromClientScript, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="requiresSsl" Type="System.Boolean" />
        <Parameter Name="hideFromClientScript" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Значение файла Cookie.</param>
        <param name="name">Имя файла cookie.</param>
        <param name="path">Путь к файлу cookie.</param>
        <param name="domain">Домен файла cookie.</param>
        <param name="expirationTime">Время окончания срока действия для файла cookie или <see cref="F:System.DateTime.MinValue" /> для файла cookie сеанса (сеансового).</param>
        <param name="requiresSsl">Значение <see langword="true" />, если файл сookie должен использоваться только через SSL-соединение; в противном случае — значение <see langword="false" />.</param>
        <param name="hideFromClientScript">Значение <see langword="true" />, если файл cookie должен быть скрыт от клиентских скриптов; в противном случае — значение <see langword="false" />.</param>
        <param name="context">Информация <see cref="T:System.Web.HttpContext" /> для запроса.</param>
        <summary>Записывает связанный с указанным запросом файл cookie, имеющий заданные имя, значение, домен, путь, срок действия и видимость.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" /> или пуст.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение <see langword="null" /> или пуст.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteCore (byte[] value, string name, string path, string domain, DateTime expirationTime, bool secure, bool httpOnly, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteCore(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool secure, bool httpOnly, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteCore (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, secure As Boolean, httpOnly As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteCore(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool secure, bool httpOnly, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member WriteCore : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.WriteCore (value, name, path, domain, expirationTime, secure, httpOnly, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="httpOnly" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Значение файла Cookie.</param>
        <param name="name">Имя файла cookie.</param>
        <param name="path">Путь к файлу cookie.</param>
        <param name="domain">Домен файла cookie.</param>
        <param name="expirationTime">Время окончания срока действия для файла cookie или <see cref="F:System.DateTime.MinValue" /> для файла cookie сеанса (сеансового).</param>
        <param name="secure">Значение <see langword="true" />, если файл сookie должен использоваться только через SSL-соединение; в противном случае — значение <see langword="false" />.</param>
        <param name="httpOnly">Значение <see langword="true" />, если файл cookie должен быть скрыт от клиентских скриптов; в противном случае — значение <see langword="false" />.</param>
        <param name="context">Информация <see cref="T:System.Web.HttpContext" /> для запроса.</param>
        <summary>При переопределении в производном классе записывает связанный с указанным запросом файл cookie, имеющий заданные имя, значение, домен, путь, срок действия, сохраняемость и видимость.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается из перегруженных <xref:System.IdentityModel.Services.CookieHandler.Write%2A> методов для выполнения фактической работы по написанию файла cookie. Методы гарантируют, что `value` является непустым массивом байтов и что `name` и `path` являются непустыми строками. <xref:System.IdentityModel.Services.CookieHandler.Write%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Этот метод необходимо переопределить. Реализация полностью зависит от разработчика. В типичном случае реализации записывают данные файла cookie в <see cref="P:System.Web.HttpResponse.Cookies" /> коллекцию, однако это не является обязательным требованием. Большинство параметров метода обычно используются для установки эквивалентных свойств одного или нескольких <see cref="T:System.Web.HttpCookie" /> объектов.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
