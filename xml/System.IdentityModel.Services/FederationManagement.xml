<Type Name="FederationManagement" FullName="System.IdentityModel.Services.FederationManagement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6fe356e09d6dd203321854f70a00901c7e8b9297" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70327072" /></Metadata><TypeSignature Language="C#" Value="public static class FederationManagement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FederationManagement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.FederationManagement" />
  <TypeSignature Language="VB.NET" Value="Public Class FederationManagement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FederationManagement abstract sealed" />
  <TypeSignature Language="F#" Value="type FederationManagement = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Определяет статические методы для создания документов метаданных Federation и обновления конфигурации приложения на основе документов метаданных Federation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о документах метаданных федерации см. в разделе 3 из следующей спецификации. [Язык WS-Federation версии 1.2](https://go.microsoft.com/fwlink/?LinkID=210152).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateApplicationFederationMetadata">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader CreateApplicationFederationMetadata (Uri applicationUri, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt; claimsRequired, System.IdentityModel.Services.ApplicationType applicationType, System.Collections.ObjectModel.Collection&lt;Uri&gt; audienceUris);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader CreateApplicationFederationMetadata(class System.Uri applicationUri, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.Collections.ObjectModel.Collection`1&lt;class System.IdentityModel.Metadata.DisplayClaim&gt; claimsRequired, valuetype System.IdentityModel.Services.ApplicationType applicationType, class System.Collections.ObjectModel.Collection`1&lt;class System.Uri&gt; audienceUris) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ CreateApplicationFederationMetadata(Uri ^ applicationUri, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, System::Collections::ObjectModel::Collection&lt;System::IdentityModel::Metadata::DisplayClaim ^&gt; ^ claimsRequired, System::IdentityModel::Services::ApplicationType applicationType, System::Collections::ObjectModel::Collection&lt;Uri ^&gt; ^ audienceUris);" />
      <MemberSignature Language="F#" Value="static member CreateApplicationFederationMetadata : Uri * System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt; * System.IdentityModel.Services.ApplicationType * System.Collections.ObjectModel.Collection&lt;Uri&gt; -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata (applicationUri, certificate, claimsRequired, applicationType, audienceUris)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationUri" Type="System.Uri" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="claimsRequired" Type="System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt;" />
        <Parameter Name="applicationType" Type="System.IdentityModel.Services.ApplicationType" />
        <Parameter Name="audienceUris" Type="System.Collections.ObjectModel.Collection&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationUri">Универсальный код ресурса (URI) приложения.</param>
        <param name="certificate">Сертификат X.509, используемый для подписывания метаданных.</param>
        <param name="claimsRequired">Утверждения, необходимые приложению.</param>
        <param name="applicationType">Одно из значений <see cref="T:System.IdentityModel.Services.ApplicationType" />, указывающее тип приложения, описываемого метаданными. Используется для определения конечных точек, которые требуется создать.</param>
        <param name="audienceUris">Коллекция допустимых URI, которая может быть использована для данного приложения.</param>
        <summary>Создает XML-документ, содержащий метаданные Federation.</summary>
        <returns>модуль чтения XML, который содержит документ метаданных, который был создан с помощью параметров.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateIdentityProviderTrustInfo">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Обновляет заданную конфигурацию приложения (при необходимости) на основе указанного документа метаданных федерации.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UpdateIdentityProviderTrustInfo (metadataReader As XmlReader, inputConfiguration As XmlReader, claimsOfferedUpdate As Boolean) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, bool claimsOfferedUpdate);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * bool -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, claimsOfferedUpdate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="claimsOfferedUpdate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Средство чтения XML, содержащее документ метаданных.</param>
        <param name="inputConfiguration">Средство чтения XML, содержащее конфигурацию.</param>
        <param name="claimsOfferedUpdate">Значение <see langword="true" />, если список предложенных утверждений должен быть обновлен; в противном случае — значение <see langword="false" />.</param>
        <summary>Обновляет заданную конфигурацию приложения (при необходимости) на основе указанного документа метаданных федерации и значения, определяющего, должен ли обновляться список предлагаемых утверждений.</summary>
        <returns>модуль чтения XML, который содержит обновленную конфигурацию или <see langword="null" /> если конфигурация не удалось обновить.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="metadataReader" /> имеет значение <see langword="null" />.  
  
- или - 
 Свойство <paramref name="inputConfiguration" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, class System.IdentityModel.Metadata.MetadataSerializer metadataSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, bool claimsOfferedUpdate, System::IdentityModel::Metadata::MetadataSerializer ^ metadataSerializer);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * bool * System.IdentityModel.Metadata.MetadataSerializer -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, claimsOfferedUpdate, metadataSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="claimsOfferedUpdate" Type="System.Boolean" />
        <Parameter Name="metadataSerializer" Type="System.IdentityModel.Metadata.MetadataSerializer" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Средство чтения XML, содержащее документ метаданных.</param>
        <param name="inputConfiguration">Средство чтения XML, содержащее конфигурацию.</param>
        <param name="claimsOfferedUpdate">Значение <see langword="true" />, если список предложенных утверждений должен быть обновлен; в противном случае — значение <see langword="false" />.</param>
        <param name="metadataSerializer">Сериализатор, используемый для считывания метаданных службы STS.</param>
        <summary>Обновляет заданную конфигурацию приложения (при необходимости) на основе указанного документа метаданных федерации и значения, определяющего, должен ли обновляться список предлагаемых утверждений. Также указан сериализатор, с помощью которого требуется выполнять чтение метаданных службы токенов безопасности (STS).</summary>
        <returns>модуль чтения XML, который содержит обновленную конфигурацию или <see langword="null" /> если конфигурация не удалось обновить.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="metadataReader" /> имеет значение <see langword="null" />.  
  
- или - 
 <paramref name="inputConfiguration" /> — <see langword="null" />.  
  
- или - 
 <paramref name="metadataSerializer" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, [out] class System.Xml.XmlNodeReader&amp; newIssuerNameRegistry, [out] class System.Xml.XmlNodeReader&amp; claimTypesOffered) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateIdentityProviderTrustInfo (metadataReader As XmlReader, inputConfiguration As XmlReader, ByRef newIssuerNameRegistry As XmlNodeReader, ByRef claimTypesOffered As XmlNodeReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % newIssuerNameRegistry, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % claimTypesOffered);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * XmlNodeReader * XmlNodeReader -&gt; unit" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, newIssuerNameRegistry, claimTypesOffered)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="newIssuerNameRegistry" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="claimTypesOffered" Type="System.Xml.XmlNodeReader" RefType="out" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Средство чтения XML, содержащее документ метаданных.</param>
        <param name="inputConfiguration">Средство чтения XML, содержащее конфигурацию.</param>
        <param name="newIssuerNameRegistry">Когда выполнение этого метода завершается, содержит модуль чтения узла XML, содержащий элементы, которые определяют реестр имен издателей. Значение <see langword="null" />, если реестр имен издателей не указан. Этот параметр обрабатывается как неинициализированный.</param>
        <param name="claimTypesOffered">Когда выполнение этого метода завершается, содержит модуль чтения узла XML, содержащий элементы, которые определяют новый список, если список предложенных типов утверждений был изменен. Если список не был изменен, возвращает значение <see langword="null" />. Этот параметр обрабатывается как неинициализированный.</param>
        <summary>Обновляет заданную конфигурацию приложения (при необходимости) на основе указанного документа метаданных федерации. Возвращает элементы конфигурации реестра имя издателя, так же как и элементы конфигурации для обновленного списка предлагаемых типов утверждений, если он был обновлен.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="metadataReader" /> имеет значение <see langword="null" />.  
  
- или - 
 <paramref name="inputConfiguration" /><paramref name="metadataReader" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, [out] class System.Xml.XmlNodeReader&amp; newIssuerNameRegistry, [out] class System.Xml.XmlNodeReader&amp; claimTypesOffered, class System.IdentityModel.Metadata.MetadataSerializer metadataSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % newIssuerNameRegistry, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % claimTypesOffered, System::IdentityModel::Metadata::MetadataSerializer ^ metadataSerializer);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * XmlNodeReader * XmlNodeReader * System.IdentityModel.Metadata.MetadataSerializer -&gt; unit" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, newIssuerNameRegistry, claimTypesOffered, metadataSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="newIssuerNameRegistry" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="claimTypesOffered" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="metadataSerializer" Type="System.IdentityModel.Metadata.MetadataSerializer" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Средство чтения XML, содержащее документ метаданных.</param>
        <param name="inputConfiguration">Средство чтения XML, содержащее конфигурацию.</param>
        <param name="newIssuerNameRegistry">Когда выполнение этого метода завершается, содержит модуль чтения узла XML, содержащий элементы, которые определяют реестр имен издателей. Значение <see langword="null" />, если реестр имен издателей не указан. Этот параметр обрабатывается как неинициализированный.</param>
        <param name="claimTypesOffered">Когда выполнение этого метода завершается, содержит модуль чтения узла XML, содержащий элементы, которые определяют новый список, если список предложенных типов утверждений был изменен. Если список не был изменен, возвращает значение <see langword="null" />. Этот параметр обрабатывается как неинициализированный.</param>
        <param name="metadataSerializer">Сериализатор, используемый для считывания метаданных службы STS.</param>
        <summary>Обновляет заданную конфигурацию приложения (при необходимости) на основе указанного документа метаданных федерации. Возвращает элементы конфигурации реестра имя издателя, так же как и элементы конфигурации для обновленного списка предлагаемых типов утверждений, если он был обновлен. Также указан сериализатор, с помощью которого требуется выполнять чтение метаданных службы токенов безопасности (STS).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="metadataReader" /> — <see langword="null" />.  
  
- или - 
 <paramref name="inputConfiguration" /> — <see langword="null" />.  
  
-или- 
 Свойство <paramref name="metadataSerializer" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
