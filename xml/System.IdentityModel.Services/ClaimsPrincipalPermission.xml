<Type Name="ClaimsPrincipalPermission" FullName="System.IdentityModel.Services.ClaimsPrincipalPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2fb06ec7390b39d257cf72931b0cf79b68925403" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69283107" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClaimsPrincipalPermission : System.Security.IPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ClaimsPrincipalPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClaimsPrincipalPermission&#xA;Implements IPermission, IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsPrincipalPermission sealed : System::Security::IPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type ClaimsPrincipalPermission = class&#xA;    interface IPermission&#xA;    interface ISecurityEncodable&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет разрешение, которое использует реализацию <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" />, чтобы определить, следует ли дать доступ к ресурсу активному субъекту. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс предоставляет возможность выполнять принудительные проверки доступа с <xref:System.Security.Claims.ClaimsAuthorizationManager> помощью компонента, настроенного для приложения. <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> Вызывая <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> метод или статический <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> метод, вы можете обеспечить защиту ресурсов из пути выполнения кода в соответствии с политикой авторизации, определенной для диспетчера проверки подлинности утверждений. Проверки декларативного доступа можно выполнить с помощью <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> класса.  
  
> [!IMPORTANT]
>  Класс использует диспетчер авторизации утверждений, настроенный <xref:System.IdentityModel.Configuration.IdentityConfiguration> <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> , который задается в свойстве. <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> Это справедливо во всех случаях даже в сценариях, где не используется WS-Federation. Например, активные (WCF) веб-приложения и консольные приложения. Диспетчер авторизации утверждений можно указать как в конфигурации, так и программно. Чтобы указать Диспетчер авторизации утверждений в файле конфигурации, установите [ &lt;элемент&gt; claimsAuthorizationManager](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) в [ &lt;элементе identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) и убедитесь, что этот на конфигурацию удостоверения ссылается `identityConfigurationName` [ &lt;элемент federationConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) , который загружается средой выполнения (например, путем установки атрибута). Чтобы настроить диспетчер авторизации утверждений программным образом, предоставьте обработчик для <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> события.  
  
 На одном уровне функциональные возможности, предоставляемые <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> , похожи на проверки доступа на основе ролей (RBAC), предоставляемые <xref:System.Security.Permissions.PrincipalPermission> через <xref:System.Security.Claims.ClaimsAuthorizationManager> класс, однако класс выполняет проверки на основе утверждений, представленных активным участником. Это обеспечивает гораздо более подробную степень детализации, чем доступно в чистом RBAC, где многие разрешения обычно собираются одной ролью. Возможно, что более важно, авторизация на основе заявок позволяет лучше отделить бизнес-логику и политику авторизации, так как разрешение может быть запрошено для определенного действия в отношении ресурса в коде и с помощью политики серверной части можно настроить, какие утверждения представление сущности должно обладать для удовлетворения спроса. Как и RBAC <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> , выполняет проверку доступа на основе пользователей, то есть, в отличие от управления доступом для кода, реализованных классами, <xref:System.Security.CodeAccessPermission> производными от класса, и использовать проверку стека, чтобы убедиться, что всем вызывающим объектам кода предоставлено разрешение, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission>выполняет проверку только для текущего участника.  
  
 Статический <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> метод проверяет доступ для указанного действия к указанному ресурсу. Ресурс и действие являются строками и обычно являются URI. Можно также инициализировать экземпляр <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> с действием и ресурсом и <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> вызвать метод. Хотя конструктор принимает только один ресурс и действие, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> объекты можно объединять <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> с помощью методов и <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> . Разрешение, созданное с помощью этих методов, может содержать несколько пар "ресурс-действие".  
  
 Оба метода определяют доступ, вызывая <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> метод настроенного диспетчера <xref:System.Security.Claims.AuthorizationContext> авторизации утверждений, состоящий из активного субъекта (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>), ресурса и действия. Они вызовут <xref:System.Security.SecurityException> исключение, если текущий участник не имеет разрешения на выполнение действия с ресурсом; в противном случае выполнение продолжается.  
  
 В случае с <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> , содержащим несколько пар ресурсов-действий <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> , вызывается метод для каждой пары "ресурс-действие", содержащейся в разрешении.  Чтобы вызов <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> был выполнен, активный участник должен быть разрешен для всех пар "ресурс-действие", содержащихся в разрешении.  
  
   
  
## Examples  
 В следующем примере показано <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> , как защитить ресурс с помощью метода, метода или <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> объявления. В каждом случае настроенный <xref:System.Security.Claims.ClaimsAuthorizationManager> метод вызывается для вычисления текущего участника на основе указанного ресурса и действия. Если текущий участник не имеет полномочий для указанного действия на указанном ресурсе, <xref:System.Security.SecurityException> создается исключение; в противном случае выполнение продолжается.  
  
 [!code-csharp[WifCppWithCam#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#1)]  
  
 В следующем коде XML показана минимальная конфигурация, необходимая для использования пользовательского диспетчера авторизации утверждений <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> с классом. Необходимо, как минимум, объявить `system.identityModel` `system.identityModel.services` и разделы в `<configSection>` элементе, [ &lt;а затем указать Диспетчер авторизации в элементе claimsAuthorizationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) в разделе Конфигурация удостоверения по умолчанию. Это обеспечит ссылку на диспетчер авторизации из конфигурации федерации по умолчанию. Кроме того, можно указать имя конфигурации удостоверения, в которой будет указан Диспетчер авторизации в `identityConfigurationName` атрибуте [ &lt;элемента federationConfiguration.&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md)  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
  <configSections>  
    <!-- WIF configuration sections -->  
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
  </configSections>  
  
  <startup>  
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
  </startup>  
  
  <system.identityModel>  
    <identityConfiguration>  
      <claimsAuthorizationManager type ="MyClaimsAuthorizationManager.MyClaimsAuthorizationManager, MyClaimsAuthorizationManager"/>  
    </identityConfiguration>  
  </system.identityModel>  
  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" />
    <altmember cref="P:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthorizationManager" />
    <related type="Article" href="https://msdn.microsoft.com/library/8b14054c-6d07-46ab-ab58-03f14beac0f2">&lt;federationConfiguration&gt;</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipalPermission (string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipalPermission(System::String ^ resource, System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.ClaimsPrincipalPermission : string * string -&gt; System.IdentityModel.Services.ClaimsPrincipalPermission" Usage="new System.IdentityModel.Services.ClaimsPrincipalPermission (resource, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resource">Ресурс, на котором должен быть авторизован субъект.</param>
        <param name="action">Действие, для которого должен быть авторизован субъект.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> Объект инициализируется с помощью указанной пары "ресурс-действие". Для выполнения проверки доступа <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> можно вызвать метод.  
  
 Хотя конструктор принимает только один ресурс и действие, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> объекты можно объединять <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> с помощью методов и <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> . Разрешение, созданное с помощью этих методов, может содержать несколько пар "ресурс-действие".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="resource" /> имеет значение <see langword="null" /> или является пустой строкой.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="action" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public static void CheckAccess (string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckAccess(string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckAccess (resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckAccess(System::String ^ resource, System::String ^ action);" />
      <MemberSignature Language="F#" Value="static member CheckAccess : string * string -&gt; unit" Usage="System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess (resource, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resource">Ресурс, на котором должен быть авторизован субъект.</param>
        <param name="action">Действие, для которого должен быть авторизован субъект.</param>
        <summary>Проверяет, является ли текущий субъект авторизованным для выполнения указанного действия с указанным ресурсом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Участник должен быть разрешен для указанного действия на указанном ресурсе, или <xref:System.Security.SecurityException> создается исключение.  
  
 Метод настроенного диспетчера авторизации утверждений вызывается с, <xref:System.Security.Claims.AuthorizationContext> состоящим из активного субъекта (<xref:System.Threading.Thread.CurrentPrincipal%2A>), ресурса и действия. <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 В следующем примере показано, как защитить ресурс с помощью <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> метода. Настроенный диспетчер авторизации утверждений вызывается для вычисления текущего участника на основе указанного ресурса и действия. Если текущий участник не имеет полномочий для указанного действия на указанном ресурсе, <xref:System.Security.SecurityException> создается исключение; в противном случае выполнение продолжается.  
  
 [!code-csharp[WifCppWithCam#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Текущий субъект не может быть назначен из объекта <see cref="T:System.Security.Claims.ClaimsPrincipal" />.  
  
-или- 
<see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> не настроен.</exception>
        <exception cref="T:System.Security.SecurityException">Проверка авторизации завершилась с ошибкой.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="claimsPrincipalPermission.Copy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Copy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает копию текущего экземпляра <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</summary>
        <returns>Объект <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />, скопированный из текущего экземпляра.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="claimsPrincipalPermission.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Проверяет, является ли текущий субъект авторизованным для пар ресурс-действие, связанных с текущим экземпляром.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текущий участник должен быть разрешен для всех пар "ресурс-действие", связанных с этим экземпляром, <xref:System.Security.SecurityException> или создается исключение.  
  
 Хотя конструктор принимает только один ресурс и действие, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> объекты можно объединять <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> с помощью методов и <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> . Разрешение, созданное с помощью этих методов, может содержать несколько пар "ресурс-действие".  
  
 Метод вызывает <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> метод настроенного диспетчера авторизации <xref:System.Security.Claims.AuthorizationContext> утверждений, состоящий из активного субъекта (<xref:System.Threading.Thread.CurrentPrincipal%2A>), ресурса и действия для каждой из пар "ресурс-действие", содержащихся <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> в разрешении. <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> Для успешности активного участника необходимо авторизовать все пары ресурсов, содержащиеся в разрешении.  
  
   
  
## Examples  
 В следующем примере показано, как защитить ресурс с помощью <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> метода. Настроенный диспетчер авторизации утверждений вызывается для вычисления текущего участника на основе указанного ресурса и действия. Если текущий участник не имеет полномочий для указанного действия на указанном ресурсе, <xref:System.Security.SecurityException> создается исключение; в противном случае выполнение продолжается.  
  
 [!code-csharp[WifCppWithCam#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Текущий субъект не может быть назначен из объекта <see cref="T:System.Security.Claims.ClaimsPrincipal" />.  
  
- или - 
<see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> не настроен.</exception>
        <exception cref="T:System.Security.SecurityException">Проверка авторизации завершилась с ошибкой.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (element As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="claimsPrincipalPermission.FromXml element" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="element">Кодировка XML, используемая для восстановления разрешения.</param>
        <summary>Восстанавливает текущее разрешение и его состояние из указанного XML-кодирования.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Восстанавливает разрешение из кодировки XML, созданной путем вызова <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A> метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Кодировка содержит нераспознанные элементы или атрибуты или неправильно сформированный XML-код.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="claimsPrincipalPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Intersect(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Разрешение, которое должно пересекаться с текущим разрешением. Должен быть экземпляром <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</param>
        <summary>Возвращает разрешение, представляющее пересечение объединение текущего и заданного разрешений.</summary>
        <returns>Новый объект <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />, представляющий пересечение текущего и заданного разрешений; либо значение <see langword="null" />, если <paramref name="target" /> имеет значение <paramref name="null" /> или не является экземпляром <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое разрешение имеет только пары "ресурс-действие", которые присутствовали как в текущем разрешении, так и в указанном разрешении. Пары "ресурс-действие", которые существовали только в одном или других разрешениях, не включаются. Для того <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> , чтобы успешно выполнить новое разрешение, текущий участник должен быть разрешен только для тех пар ресурсов, которые являются общими для текущего разрешения и указанного разрешения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="claimsPrincipalPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Разрешение, для которого требуется проверить отношение подмножества. Должен быть экземпляром <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</param>
        <summary>Возвращает значение, указывающее, является ли текущее разрешение подмножеством заданного разрешения.</summary>
        <returns>Значение <see langword="true" />, если текущее разрешение является подмножеством заданного разрешения; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текущее разрешение является подмножеством указанного разрешения, если все пары "ресурс-действие", содержащиеся в текущем разрешении, также существуют в указанном разрешении. Если `target` параметр `null` имеет значение или не <xref:System.IdentityModel.Services.ClaimsPrincipalPermission>является экземпляром, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf%2A> возвращается `false`значение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="claimsPrincipalPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, является ли разрешение неограниченным.</summary>
        <returns>Значение <see langword="true" />, если разрешение является неограниченным. В противном случае — значение <see langword="false" />. Всегда возвращает значение <see langword="true" />, указывающее, что разрешение неограниченное.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="claimsPrincipalPermission.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает XML в формате текущего разрешения и его состояние.</summary>
        <returns>XML в формате текущего разрешения и его состояние.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Субъект можно перестроить из своей формы в кодировке XML, вызвав <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="claimsPrincipalPermission.Union target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Union(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Разрешение, используемое в сочетании с текущим разрешением. Он должен иметь тип <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</param>
        <summary>Возвращает новое разрешение, представляющее объединение текущего и заданного разрешений. Объект <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />, который содержит все пары ресурс-действие, присутствующие в текущем экземпляре и целевом экземпляре.</summary>
        <returns>Новый объект <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />, представляющий объединение текущего и заданного разрешений; либо значение <see langword="null" />, если <paramref name="target" /> имеет значение <paramref name="null" /> или не является экземпляром <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое разрешение имеет все пары "ресурс-действие", которые имеются в текущем разрешении, и все пары "ресурс-действие", которые представляют указанное разрешение. Для того <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> , чтобы выполнить операцию с новым разрешением, текущий участник должен быть разрешен для всех пар "ресурс-действие", которые существовали в текущем разрешении, и всех пар "ресурс-действие", которые существовали в указанном разрешении.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
