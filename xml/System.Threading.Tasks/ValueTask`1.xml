<Type Name="ValueTask&lt;TResult&gt;" FullName="System.Threading.Tasks.ValueTask&lt;TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f4372b896320fcf53bf11ac0e31b51b6bcf2aba" /><Meta Name="ms.sourcegitcommit" Value="44248681576d2d3e55999de22512082227ce367c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/16/2019" /><Meta Name="ms.locfileid" Value="68238746" /></Metadata><TypeSignature Language="C#" Value="public struct ValueTask&lt;TResult&gt; : IEquatable&lt;System.Threading.Tasks.ValueTask&lt;TResult&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueTask`1&lt;TResult&gt; extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ValueTask`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueTask(Of TResult)&#xA;Implements IEquatable(Of ValueTask(Of TResult))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public value class ValueTask : IEquatable&lt;System::Threading::Tasks::ValueTask&lt;TResult&gt;&gt;" />
  <TypeSignature Language="F#" Value="type ValueTask&lt;'Result&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Threading.Tasks.ValueTask&lt;TResult&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.AsyncMethodBuilder(typeof(System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult"><span data-ttu-id="0a4d3-101">Результат.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-101">The result.</span></span></typeparam>
    <summary><span data-ttu-id="0a4d3-102">Предоставляет тип значения, который заключает в оболочку <see cref="T:System.Threading.Tasks.Task`1" /> и <typeparamref name="TResult" />, из которых используется только один.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-102">Provides a value type that wraps a <see cref="T:System.Threading.Tasks.Task`1" /> and a <typeparamref name="TResult" />, only one of which is used.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="0a4d3-103">Экземпляр может быть либо ожидающим, либо преобразованным <xref:System.Threading.Tasks.Task%601> в using <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A>. <xref:System.Threading.Tasks.ValueTask%601></span><span class="sxs-lookup"><span data-stu-id="0a4d3-103">A <xref:System.Threading.Tasks.ValueTask%601> instance may either be awaited or converted to a <xref:System.Threading.Tasks.Task%601> using <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A>.</span></span> <span data-ttu-id="0a4d3-104">Экземпляр можно ожидать только один раз, и потребители могут не вызываться <xref:System.Threading.Tasks.ValueTask%601.GetAwaiter> до завершения экземпляра. <xref:System.Threading.Tasks.ValueTask%601></span><span class="sxs-lookup"><span data-stu-id="0a4d3-104">A <xref:System.Threading.Tasks.ValueTask%601> instance may only be awaited once, and consumers may not call <xref:System.Threading.Tasks.ValueTask%601.GetAwaiter> until the instance has completed.</span></span> <span data-ttu-id="0a4d3-105">Если эти ограничения неприемлемы, преобразуйте <xref:System.Threading.Tasks.ValueTask%601> <xref:System.Threading.Tasks.Task%601> в в, вызвав <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-105">If these limitations are unacceptable, convert the <xref:System.Threading.Tasks.ValueTask%601> to a <xref:System.Threading.Tasks.Task%601> by calling <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A>.</span></span>

<span data-ttu-id="0a4d3-106">В <xref:System.Threading.Tasks.ValueTask%601> экземпляре никогда не следует выполнять следующие операции:</span><span class="sxs-lookup"><span data-stu-id="0a4d3-106">The following operations should never be performed on a <xref:System.Threading.Tasks.ValueTask%601> instance:</span></span>

  - <span data-ttu-id="0a4d3-107">Ожидание экземпляра несколько раз.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-107">Awaiting the instance multiple times.</span></span>
  - <span data-ttu-id="0a4d3-108">Вызов <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A> несколько раз.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-108">Calling <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A> multiple times.</span></span>
  - <span data-ttu-id="0a4d3-109">Использование `.Result` или`.GetAwaiter().GetResult()` , если операция еще не завершена, или использование их несколько раз.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-109">Using `.Result` or `.GetAwaiter().GetResult()` when the operation hasn't yet completed, or using them multiple times.</span></span>
  - <span data-ttu-id="0a4d3-110">Использование более чем одного из этих методов для использования экземпляра.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-110">Using more than one of these techniques to consume the instance.</span></span>

<span data-ttu-id="0a4d3-111">Если вы выполните одно из указанных выше действий, результаты не будут определены.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-111">If you do any of the above, the results are undefined.</span></span>

<span data-ttu-id="0a4d3-112">Метод может возвращать экземпляр этого типа значения, когда вполне вероятно, что результат его операции будет доступен синхронно, и когда ожидается его вызов, так часто затраты на выделение нового <xref:System.Threading.Tasks.Task%601> для каждого вызова будут недоступными.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-112">A method may return an instance of this value type when it's likely that the result of its operation will be available synchronously, and when it's expected to be invoked so frequently that the cost of allocating a new <xref:System.Threading.Tasks.Task%601> for each call will be prohibitive.</span></span>   

<span data-ttu-id="0a4d3-113">Существует компромиссное использование <xref:System.Threading.Tasks.ValueTask%601> вместо <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-113">There are tradeoffs to using a <xref:System.Threading.Tasks.ValueTask%601> instead of a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="0a4d3-114">Например, хотя <xref:System.Threading.Tasks.ValueTask%601> можно избежать выделения в случае, когда успешный результат доступен синхронно, он также содержит несколько полей, в <xref:System.Threading.Tasks.Task%601> то время как ссылочный тип является одним полем.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-114">For example, while a <xref:System.Threading.Tasks.ValueTask%601> can help avoid an allocation in the case where the successful result is available synchronously, it also contains multiple fields, whereas a <xref:System.Threading.Tasks.Task%601> as a reference type is a single field.</span></span> <span data-ttu-id="0a4d3-115">Это означает, что возврат <xref:System.Threading.Tasks.ValueTask%601> из метода приводит к копированию дополнительных данных.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-115">This means that returning a <xref:System.Threading.Tasks.ValueTask%601> from a method results in copying more data.</span></span> <span data-ttu-id="0a4d3-116">Это также означает, что если метод, возвращающий <xref:System.Threading.Tasks.ValueTask%601> значение, ожидает в асинхронном методе, конечный автомат для этого асинхронного метода будет больше, так как он должен хранить структуру, содержащую несколько полей, а не одну ссылку.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-116">It also means, that if a method that returns a <xref:System.Threading.Tasks.ValueTask%601> is awaited within an async method, the state machine for that async method will be larger, because it must store a struct containing multiple fields instead of a single reference.</span></span>   

<span data-ttu-id="0a4d3-117">Для использования, кроме использования результата асинхронной операции с использованием параметра await, <xref:System.Threading.Tasks.ValueTask%601> может привести к более сложные модели программирования, которая требует большего количества выделений.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-117">For uses other than consuming the result of an asynchronous operation using await, <xref:System.Threading.Tasks.ValueTask%601> can lead to a more convoluted programming model that requires more allocations.</span></span> <span data-ttu-id="0a4d3-118">Например, рассмотрим метод, возвращающий либо <xref:System.Threading.Tasks.Task%601> с кэшированной задачей, либо как общий результат. <xref:System.Threading.Tasks.ValueTask%601></span><span class="sxs-lookup"><span data-stu-id="0a4d3-118">For example, consider a method that could return either a <xref:System.Threading.Tasks.Task%601> with a cached task as a common result or a <xref:System.Threading.Tasks.ValueTask%601>.</span></span> <span data-ttu-id="0a4d3-119">Если потребитель результата хочет <xref:System.Threading.Tasks.Task%601> использовать его в качестве в методе, например <xref:System.Threading.Tasks.Task.WhenAll%2A> или <xref:System.Threading.Tasks.Task.WhenAny%2A>, <xref:System.Threading.Tasks.ValueTask%601> сначала необходимо преобразовать в объект <xref:System.Threading.Tasks.Task%601> с помощью <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A>, что привело бы к выделению, которое было бы продолжено, если в <xref:System.Threading.Tasks.Task%601> первую очередь использовались кэшированные.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-119">If the consumer of the result wants to use it as a <xref:System.Threading.Tasks.Task%601> in a method like <xref:System.Threading.Tasks.Task.WhenAll%2A> or <xref:System.Threading.Tasks.Task.WhenAny%2A>, the <xref:System.Threading.Tasks.ValueTask%601> must first be converted to a <xref:System.Threading.Tasks.Task%601> using <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A>, leading to an allocation that would have been avoided if a cached <xref:System.Threading.Tasks.Task%601> had been used in the first place.</span></span>   

<span data-ttu-id="0a4d3-120">Таким образом, по умолчанию любой асинхронный метод должен возвращать <xref:System.Threading.Tasks.Task> или. <xref:System.Threading.Tasks.Task%601></span><span class="sxs-lookup"><span data-stu-id="0a4d3-120">As such, the default choice for any asynchronous method should be to return a <xref:System.Threading.Tasks.Task> or <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="0a4d3-121">Только если анализ производительности доказывает, <xref:System.Threading.Tasks.ValueTask%601> что следует использовать вместо. <xref:System.Threading.Tasks.Task%601></span><span class="sxs-lookup"><span data-stu-id="0a4d3-121">Only if performance analysis proves it worthwhile should a <xref:System.Threading.Tasks.ValueTask%601> be used instead of a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="0a4d3-122">Неуниверсальная версия <xref:System.Threading.Tasks.ValueTask> не рекомендуется для большинства сценариев.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-122">The non generic version of <xref:System.Threading.Tasks.ValueTask> is not recommended for most scenarios.</span></span> <span data-ttu-id="0a4d3-123">Свойство следует использовать для обратного успешного завершения одноэлементного элемента в случае, когда метод, возвращающий завершение, <xref:System.Threading.Tasks.Task> синхронно и успешно завершается. <xref:System.Threading.Tasks.Task.CompletedTask></span><span class="sxs-lookup"><span data-stu-id="0a4d3-123">The <xref:System.Threading.Tasks.Task.CompletedTask> property should be used to hand back a successfully completed singleton in the case where a method returning a <xref:System.Threading.Tasks.Task> completes synchronously and successfully.</span></span>

> [!NOTE]
>  <span data-ttu-id="0a4d3-124">Использование <xref:System.Threading.Tasks.ValueTask%601> типа поддерживается начиная с C# 7,0 и не поддерживается ни одной версией Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-124">The use of the <xref:System.Threading.Tasks.ValueTask%601> type is supported starting with C# 7.0, and is not supported by any version of Visual Basic.</span></span>
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Task&lt;TResult&gt; task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Task`1&lt;!TResult&gt; task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (task As Task(Of TResult))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Task&lt;TResult&gt; ^ task);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.ValueTask&lt;'Result&gt; : System.Threading.Tasks.Task&lt;'Result&gt; -&gt; System.Threading.Tasks.ValueTask&lt;'Result&gt;" Usage="new System.Threading.Tasks.ValueTask&lt;'Result&gt; task" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="0a4d3-125">Задача.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-125">The task.</span></span></param>
        <summary><span data-ttu-id="0a4d3-126">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.ValueTask`1" />, используя указанную задачу, которая представляет операцию.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-126">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask`1" /> class using the supplied task that represents the operation.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a4d3-127">Аргумент <paramref name="task" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-127">The <paramref name="task" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(TResult result);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.ValueTask&lt;'Result&gt; : 'Result -&gt; System.Threading.Tasks.ValueTask&lt;'Result&gt;" Usage="new System.Threading.Tasks.ValueTask&lt;'Result&gt; result" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0a4d3-128">Результат.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-128">The result.</span></span></param>
        <summary><span data-ttu-id="0a4d3-129">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.ValueTask`1" />, используя указанный результат успешной операции.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-129">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask`1" /> class using the supplied result of a successful operation.</span></span></summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Sources.IValueTaskSource&lt;TResult&gt; source, short token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Sources.IValueTaskSource`1&lt;!TResult&gt; source, int16 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Sources.IValueTaskSource{`0},System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As IValueTaskSource(Of TResult), token As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Sources::IValueTaskSource&lt;TResult&gt; ^ source, short token);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.ValueTask&lt;'Result&gt; : System.Threading.Tasks.Sources.IValueTaskSource&lt;'Result&gt; * int16 -&gt; System.Threading.Tasks.ValueTask&lt;'Result&gt;" Usage="new System.Threading.Tasks.ValueTask&lt;'Result&gt; (source, token)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Sources.IValueTaskSource&lt;TResult&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="token" Type="System.Int16" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="0a4d3-130">Источник.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-130">The source.</span></span></param>
        <param name="token"><span data-ttu-id="0a4d3-131">Непрозрачное значение, которое передается в <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" />.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-131">An opaque value that is passed to the <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" />.</span></span></param>
        <summary><span data-ttu-id="0a4d3-132">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.ValueTask`1" />, используя объект <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource`1" />, который представляет операцию.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-132">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask`1" /> class with a <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource`1" /> object that represents the operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; AsTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; AsTask() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.AsTask" />
      <MemberSignature Language="VB.NET" Value="Public Function AsTask () As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask();" />
      <MemberSignature Language="F#" Value="member this.AsTask : unit -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="valueTask.AsTask " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4d3-133">Получает объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет <see cref="T:System.Threading.Tasks.ValueTask`1" />.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-133">Retrieves a <see cref="T:System.Threading.Tasks.Task`1" /> object that represents this <see cref="T:System.Threading.Tasks.ValueTask`1" />.</span></span></summary>
        <returns><span data-ttu-id="0a4d3-134">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который заключается в этот <see cref="T:System.Threading.Tasks.ValueTask`1" />, если таковой имеется, или новый объект <see cref="T:System.Threading.Tasks.Task`1" />, представляющий результат.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-134">The <see cref="T:System.Threading.Tasks.Task`1" /> object that is wrapped in this <see cref="T:System.Threading.Tasks.ValueTask`1" /> if one exists, or a new <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the result.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="0a4d3-135">Этот метод возвращает объект задачи с оболочкой, если он существует, или создает новый объект Task для представления результата.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-135">This method either returns the wrapped task object, if one exists, or it manufactures a new task object to represent the result.</span></span>
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAwait">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable&lt;TResult&gt; ConfigureAwait (bool continueOnCapturedContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1&lt;!TResult&gt; ConfigureAwait(bool continueOnCapturedContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureAwait (continueOnCapturedContext As Boolean) As ConfiguredValueTaskAwaitable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable&lt;TResult&gt; ConfigureAwait(bool continueOnCapturedContext);" />
      <MemberSignature Language="F#" Value="member this.ConfigureAwait : bool -&gt; System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable&lt;'Result&gt;" Usage="valueTask.ConfigureAwait continueOnCapturedContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="continueOnCapturedContext"><span data-ttu-id="0a4d3-136">Значение <see langword="true" />, чтобы попытаться выполнить маршалинг продолжения обратно в захваченный контекст; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-136"><see langword="true" /> to attempt to marshal the continuation back to the captured context; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0a4d3-137">Настраивает объект типа awaiter для этого значения.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-137">Configures an awaiter for this value.</span></span></summary>
        <returns><span data-ttu-id="0a4d3-138">Настроенный объект типа awaiter.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-138">The configured awaiter.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsyncMethodBuilder">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder&lt;TResult&gt; CreateAsyncMethodBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1&lt;!TResult&gt; CreateAsyncMethodBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAsyncMethodBuilder () As AsyncValueTaskMethodBuilder(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::CompilerServices::AsyncValueTaskMethodBuilder&lt;TResult&gt; CreateAsyncMethodBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateAsyncMethodBuilder : unit -&gt; System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder&lt;'Result&gt;" Usage="System.Threading.Tasks.ValueTask&lt;'Result&gt;.CreateAsyncMethodBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4d3-139">Создает построитель метода для использования с асинхронным методом.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-139">Creates a method builder for use with an async method.</span></span></summary>
        <returns><span data-ttu-id="0a4d3-140">Созданный построитель.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-140">The created builder.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueTask.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0a4d3-141">Объект, который требуется сравнить с текущим объектом.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-141">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="0a4d3-142">Определяет, равен ли заданный объект текущему объекту.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-142">Determines whether the specified object is equal to the current object.</span></span></summary>
        <returns><span data-ttu-id="0a4d3-143">Значение <see langword="true" />, если указанный объект равен текущему объекту; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-143"><see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.Tasks.ValueTask&lt;TResult&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ValueTask(Of TResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Threading::Tasks::ValueTask&lt;TResult&gt; other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Threading.Tasks.ValueTask&lt;'Result&gt; -&gt; bool" Usage="valueTask.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="0a4d3-144">Объект, который требуется сравнить с текущим объектом.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-144">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="0a4d3-145">Определяет, равен ли заданный объект <see cref="T:System.Threading.Tasks.ValueTask`1" /> текущему объекту <see cref="T:System.Threading.Tasks.ValueTask`1" />.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-145">Determines whether the specified <see cref="T:System.Threading.Tasks.ValueTask`1" /> object is equal to the current <see cref="T:System.Threading.Tasks.ValueTask`1" /> object.</span></span></summary>
        <returns><span data-ttu-id="0a4d3-146">Значение <see langword="true" />, если указанный объект равен текущему объекту; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-146"><see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ValueTaskAwaiter&lt;TResult&gt; GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ValueTaskAwaiter`1&lt;!TResult&gt; GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As ValueTaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ValueTaskAwaiter&lt;TResult&gt; GetAwaiter();" />
      <MemberSignature Language="F#" Value="member this.GetAwaiter : unit -&gt; System.Runtime.CompilerServices.ValueTaskAwaiter&lt;'Result&gt;" Usage="valueTask.GetAwaiter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ValueTaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4d3-147">Создает объект типа awaiter для этого значения.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-147">Creates an awaiter for this value.</span></span></summary>
        <returns><span data-ttu-id="0a4d3-148">Объект типа awaiter.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-148">The awaiter.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueTask.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4d3-149">Возвращает хэш-код данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-149">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="0a4d3-150">Хэш-код для текущего объекта.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-150">The hash code for the current object.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanceled">
      <MemberSignature Language="C#" Value="public bool IsCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCanceled" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsCanceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCanceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCanceled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCanceled : bool" Usage="System.Threading.Tasks.ValueTask&lt;'Result&gt;.IsCanceled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4d3-151">Возвращает значение, указывающее, представляет ли этот объект отмененную операцию.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-151">Gets a value that indicates whether this object represents a canceled operation.</span></span></summary>
        <value><span data-ttu-id="0a4d3-152"><see langword="true" />значение, если объект представляет отмененную операцию; в противном случае —. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="0a4d3-152"><see langword="true" /> if this object represents a canceled operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="0a4d3-153">Если объект <xref:System.Threading.Tasks.ValueTask`1> поддерживается в результате или <xref:System.Threading.Tasks.Sources.IValueTaskSource`1>, всегда будет возвращаться `false`значение.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-153">If the <xref:System.Threading.Tasks.ValueTask`1> is backed by a result or by a <xref:System.Threading.Tasks.Sources.IValueTaskSource`1>, this will always return `false`.</span></span>  <span data-ttu-id="0a4d3-154">Если он <xref:System.Threading.Tasks.Task>создается, то возвращается значение <xref:System.Threading.Tasks.Task.IsCanceled> свойства задачи.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-154">If it's backed by a <xref:System.Threading.Tasks.Task>, it'll return the value of the task's <xref:System.Threading.Tasks.Task.IsCanceled> property.</span></span>
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Threading.Tasks.ValueTask&lt;'Result&gt;.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4d3-155">Возвращает значение, указывающее, представляет ли этот объект завершенную операцию.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-155">Gets a value that indicates whether this object represents a completed operation.</span></span></summary>
        <value><span data-ttu-id="0a4d3-156"><see langword="true" />значение, если объект представляет завершенную операцию. в противном случае —. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="0a4d3-156"><see langword="true" /> if this object represents a completed operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompletedSuccessfully">
      <MemberSignature Language="C#" Value="public bool IsCompletedSuccessfully { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompletedSuccessfully" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompletedSuccessfully As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompletedSuccessfully { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompletedSuccessfully : bool" Usage="System.Threading.Tasks.ValueTask&lt;'Result&gt;.IsCompletedSuccessfully" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4d3-157">Возвращает значение, указывающее, представляет ли этот объект успешно завершенную операцию.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-157">Gets a value that indicates whether this object represents a successfully completed operation.</span></span></summary>
        <value><span data-ttu-id="0a4d3-158"><see langword="true" />значение, если объект представляет успешно завершенную операцию; в противном случае —. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="0a4d3-158"><see langword="true" /> if this object represents a successfully completed operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFaulted">
      <MemberSignature Language="C#" Value="public bool IsFaulted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFaulted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsFaulted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFaulted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFaulted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFaulted : bool" Usage="System.Threading.Tasks.ValueTask&lt;'Result&gt;.IsFaulted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4d3-159">Возвращает значение, указывающее, представляет ли этот объект операцию, завершившуюся ошибкой.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-159">Gets a value that indicates whether this object represents a failed operation.</span></span></summary>
        <value><span data-ttu-id="0a4d3-160"><see langword="true" />значение, если этот объект представляет сбойную операцию; в противном случае —. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="0a4d3-160"><see langword="true" /> if this object represents a failed operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.Tasks.ValueTask&lt;TResult&gt; left, System.Threading.Tasks.ValueTask&lt;TResult&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; left, valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ValueTask(Of TResult), right As ValueTask(Of TResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::Tasks::ValueTask&lt;TResult&gt; left, System::Threading::Tasks::ValueTask&lt;TResult&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Threading.Tasks.ValueTask&lt;'Result&gt; * System.Threading.Tasks.ValueTask&lt;'Result&gt; -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="0a4d3-161">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-161">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="0a4d3-162">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-162">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="0a4d3-163">Сравнивает два значения на предмет их равенства.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-163">Compares two values for equality.</span></span></summary>
        <returns><span data-ttu-id="0a4d3-164">Значение <see langword="true" />, если два значения <see cref="T:System.Threading.Tasks.ValueTask`1" /> равны; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-164"><see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask`1" /> values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.Tasks.ValueTask&lt;TResult&gt; left, System.Threading.Tasks.ValueTask&lt;TResult&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; left, valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ValueTask(Of TResult), right As ValueTask(Of TResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::Tasks::ValueTask&lt;TResult&gt; left, System::Threading::Tasks::ValueTask&lt;TResult&gt; right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Threading.Tasks.ValueTask&lt;'Result&gt; * System.Threading.Tasks.ValueTask&lt;'Result&gt; -&gt; bool" Usage="System.Threading.Tasks.ValueTask&lt;'Result&gt;.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="0a4d3-165">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-165">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="0a4d3-166">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-166">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="0a4d3-167">Определяет неравенство двух значений <see cref="T:System.Threading.Tasks.ValueTask`1" />.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-167">Determines whether two <see cref="T:System.Threading.Tasks.ValueTask`1" /> values are unequal.</span></span></summary>
        <returns><span data-ttu-id="0a4d3-168">Значение <see langword="true" />, если два значения <see cref="T:System.Threading.Tasks.ValueTask`1" /> не равны; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-168"><see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask`1" /> values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Preserve">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;TResult&gt; Preserve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; Preserve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.Preserve" />
      <MemberSignature Language="VB.NET" Value="Public Function Preserve () As ValueTask(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::ValueTask&lt;TResult&gt; Preserve();" />
      <MemberSignature Language="F#" Value="member this.Preserve : unit -&gt; System.Threading.Tasks.ValueTask&lt;'Result&gt;" Usage="valueTask.Preserve " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4d3-169">Получает объект <see cref="T:System.Threading.Tasks.ValueTask`1" />, который можно будет использовать в любой момент в будущем.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-169">Gets a <see cref="T:System.Threading.Tasks.ValueTask`1" /> that may be used at any point in the future.</span></span></summary>
        <returns><span data-ttu-id="0a4d3-170">Объект задачи для использования в будущем.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-170">A task object for future use.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public TResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TResult Result" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TResult Result { TResult get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : 'Result" Usage="System.Threading.Tasks.ValueTask&lt;'Result&gt;.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4d3-171">Возвращает результат.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-171">Gets the result.</span></span></summary>
        <value><span data-ttu-id="0a4d3-172">Результат.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-172">The result.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  
<span data-ttu-id="0a4d3-173">Доступ к этому свойству возможен только один раз и только после <xref:System.Threading.Tasks.ValueTask%601> этого.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-173">This property may only be accessed once, and only after this <xref:System.Threading.Tasks.ValueTask%601> has completed.</span></span>

<span data-ttu-id="0a4d3-174"><xref:System.Threading.Tasks.ValueTask%601> В случае успешного завершения это свойство возвращает результирующее значение.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-174">If this <xref:System.Threading.Tasks.ValueTask%601> has completed successfully, this property returns the resulting value.</span></span> <span data-ttu-id="0a4d3-175"><xref:System.Threading.Tasks.ValueTask%601> В случае сбоя это свойство вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-175">If this <xref:System.Threading.Tasks.ValueTask%601> has faulted, this property raises an exception.</span></span> <span data-ttu-id="0a4d3-176">Созданное исключение не заключено в <xref:System.AggregateException>.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-176">The thrown exception is not wrapped in an <xref:System.AggregateException>.</span></span>
]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="valueTask.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4d3-177">Возвращает строку, представляющую текущий объект.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-177">Returns a string that represents the current object.</span></span></summary>
        <returns><span data-ttu-id="0a4d3-178">Строка, представляющая текущий объект.</span><span class="sxs-lookup"><span data-stu-id="0a4d3-178">A string that represents the current object.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
