<Type Name="ValueTask" FullName="System.Threading.Tasks.ValueTask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d58ed24d138ed240c4dd2f5c35cae44cbd69e825" /><Meta Name="ms.sourcegitcommit" Value="61757d0366a172cdbc11436deb1c1ffa49d97238" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/28/2019" /><Meta Name="ms.locfileid" Value="67458216" /></Metadata><TypeSignature Language="C#" Value="public struct ValueTask : IEquatable&lt;System.Threading.Tasks.ValueTask&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueTask extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Threading.Tasks.ValueTask&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ValueTask" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueTask&#xA;Implements IEquatable(Of ValueTask)" />
  <TypeSignature Language="C++ CLI" Value="public value class ValueTask : IEquatable&lt;System::Threading::Tasks::ValueTask&gt;" />
  <TypeSignature Language="F#" Value="type ValueTask = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Threading.Tasks.ValueTask&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.AsyncMethodBuilder(typeof(System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9f8f7-101">Предоставляет ожидаемый результат асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-101">Provides an awaitable result of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="9f8f7-102">Объект `ValueTask` экземпляр может быть ожидается или преобразовать <xref:System.Threading.Tasks.Task> с помощью <xref:System.Threading.Tasks.ValueTask.AsTask%2A>.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-102">A `ValueTask` instance may either be awaited or converted to a <xref:System.Threading.Tasks.Task> using <xref:System.Threading.Tasks.ValueTask.AsTask%2A>.</span></span> <span data-ttu-id="9f8f7-103">Объект `ValueTask` экземпляр может ожидать только один раз, и потребители не может вызывать <xref:System.Threading.Tasks.ValueTask.GetAwaiter> до завершения экземпляра.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-103">A `ValueTask` instance may only be awaited once, and consumers may not call <xref:System.Threading.Tasks.ValueTask.GetAwaiter> until the instance has completed.</span></span> <span data-ttu-id="9f8f7-104">Если эти ограничения неприемлемы, преобразуйте `ValueTask` для <xref:System.Threading.Tasks.Task> путем вызова <xref:System.Threading.Tasks.ValueTask.AsTask%2A>.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-104">If these limitations are unacceptable, convert the `ValueTask` to a <xref:System.Threading.Tasks.Task> by calling <xref:System.Threading.Tasks.ValueTask.AsTask%2A>.</span></span>

<span data-ttu-id="9f8f7-105">Никогда не следует выполнять следующие операции на `ValueTask` экземпляр:</span><span class="sxs-lookup"><span data-stu-id="9f8f7-105">The following operations should never be performed on a `ValueTask` instance:</span></span>

- <span data-ttu-id="9f8f7-106">Ожидается экземпляр несколько раз.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-106">Awaiting the instance multiple times.</span></span>
- <span data-ttu-id="9f8f7-107">Вызов <xref:System.Threading.Tasks.ValueTask.AsTask%2A> несколько раз.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-107">Calling <xref:System.Threading.Tasks.ValueTask.AsTask%2A> multiple times.</span></span>
- <span data-ttu-id="9f8f7-108">С помощью более чем в одной из этих методов для использования экземпляра.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-108">Using more than one of these techniques to consume the instance.</span></span>

<span data-ttu-id="9f8f7-109">Если выполнять какие-либо из перечисленных выше, результаты будут неопределенными.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-109">If you do any of the above, the results are undefined.</span></span>

<span data-ttu-id="9f8f7-110">Объект `ValueTask` представляет собой структуру, можно включить либо <xref:System.Threading.Tasks.Task> или <xref:System.Threading.Tasks.Sources.IValueTaskSource> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-110">A `ValueTask` is a structure that can wrap either a <xref:System.Threading.Tasks.Task> or a <xref:System.Threading.Tasks.Sources.IValueTaskSource> instance.</span></span> <span data-ttu-id="9f8f7-111">Возвращение `ValueTask` , который служит оболочкой <xref:System.Threading.Tasks.Sources.IValueTaskSource> экземпляр из асинхронного метода, позволяет избежать выделений, используя пул для повторного использования приложений высокой пропускной способностью <xref:System.Threading.Tasks.Sources.IValueTaskSource> объектов.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-111">Returning a `ValueTask` that wraps a <xref:System.Threading.Tasks.Sources.IValueTaskSource> instance from an asynchronous method enables high-throughput applications to avoid allocations by using a pool of reusable <xref:System.Threading.Tasks.Sources.IValueTaskSource> objects.</span></span> <span data-ttu-id="9f8f7-112">Дополнительные сведения см. в разделе [основные сведения о причинах, что, когда и имеет из ValueTask](https://devblogs.microsoft.com/dotnet/understanding-the-whys-whats-and-whens-of-valuetask/).</span><span class="sxs-lookup"><span data-stu-id="9f8f7-112">For more information, see [Understanding the Whys, Whats, and Whens of ValueTask](https://devblogs.microsoft.com/dotnet/understanding-the-whys-whats-and-whens-of-valuetask/).</span></span>

<span data-ttu-id="9f8f7-113">С помощью `ValueTask` вместо <xref:System.Threading.Tasks.Task> вводит дополнительные издержки.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-113">Using a `ValueTask` instead of a <xref:System.Threading.Tasks.Task> introduces some overhead.</span></span> <span data-ttu-id="9f8f7-114">Так как `ValueTask` — это структура с несколькими полями, возвращая его из метода результаты при копировании данных по сравнению с возвратом одного <xref:System.Threading.Tasks.Task> ссылки.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-114">Because `ValueTask` is a structure with multiple fields, returning it from the method results in copying more data compared to returning a single <xref:System.Threading.Tasks.Task> reference.</span></span> <span data-ttu-id="9f8f7-115">Таким образом, выбор по умолчанию для любой асинхронный метод, который не возвращает результат должен быть для возврата <xref:System.Threading.Tasks.Task>.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-115">As such, the default choice for any asynchronous method that does not return a result should be to return a <xref:System.Threading.Tasks.Task>.</span></span> <span data-ttu-id="9f8f7-116">Следует только в том случае, если анализ производительности оказывается оправданной `ValueTask` использоваться вместо <xref:System.Threading.Tasks.Task>.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-116">Only if performance analysis proves it worthwhile should a `ValueTask` be used instead of a <xref:System.Threading.Tasks.Task>.</span></span> <span data-ttu-id="9f8f7-117"><xref:System.Threading.Tasks.Task.CompletedTask?displayProperty=nameWithType> Свойство должно использоваться передаваемое обратно в случае успешного завершения одноэлементный там, где метод возвратить <xref:System.Threading.Tasks.Task> завершается синхронно и успешно.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-117">The <xref:System.Threading.Tasks.Task.CompletedTask?displayProperty=nameWithType> property should be used to hand back a successfully completed singleton in the case where a method returning a <xref:System.Threading.Tasks.Task> completes synchronously and successfully.</span></span>

> [!NOTE]
> <span data-ttu-id="9f8f7-118">Использование `ValueTask` тип поддерживается, начиная с C# 7.0 и не поддерживается в любой версии Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-118">The use of the `ValueTask` type is supported starting with C# 7.0 and is not supported by any version of Visual Basic.</span></span>
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Task task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Task task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.#ctor(System.Threading.Tasks.Task)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Task ^ task);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.ValueTask : System.Threading.Tasks.Task -&gt; System.Threading.Tasks.ValueTask" Usage="new System.Threading.Tasks.ValueTask task" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="9f8f7-119">Задача, представляющая операцию.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-119">The task that represents the operation.</span></span></param>
        <summary><span data-ttu-id="9f8f7-120">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.ValueTask" />, используя указанную задачу, которая представляет операцию.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-120">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask" /> class using the supplied task that represents the operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Sources.IValueTaskSource source, short token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Sources.IValueTaskSource source, int16 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.#ctor(System.Threading.Tasks.Sources.IValueTaskSource,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As IValueTaskSource, token As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Sources::IValueTaskSource ^ source, short token);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.ValueTask : System.Threading.Tasks.Sources.IValueTaskSource * int16 -&gt; System.Threading.Tasks.ValueTask" Usage="new System.Threading.Tasks.ValueTask (source, token)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Sources.IValueTaskSource" />
        <Parameter Name="token" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f8f7-121">Объект, представляющий операцию.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-121">An object that represents the operation.</span></span></param>
        <param name="token"><span data-ttu-id="9f8f7-122">Непрозрачное значение, которое передается в <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" /></span><span class="sxs-lookup"><span data-stu-id="9f8f7-122">An opaque value that is passed through to the <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" /></span></span></param>
        <summary><span data-ttu-id="9f8f7-123">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.ValueTask" />, используя указанный объект <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" />, который представляет операцию.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-123">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask" /> class using the supplied <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" /> object that represents the operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AsTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AsTask() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.AsTask" />
      <MemberSignature Language="VB.NET" Value="Public Function AsTask () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AsTask();" />
      <MemberSignature Language="F#" Value="member this.AsTask : unit -&gt; System.Threading.Tasks.Task" Usage="valueTask.AsTask " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f8f7-124">Получает объект <see cref="T:System.Threading.Tasks.Task" />, который представляет <see cref="T:System.Threading.Tasks.ValueTask" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-124">Retrieves a <see cref="T:System.Threading.Tasks.Task" /> object that represents this <see cref="T:System.Threading.Tasks.ValueTask" />.</span></span></summary>        
        <returns><span data-ttu-id="9f8f7-125">Объект <see cref="T:System.Threading.Tasks.Task" />, который заключается в этот <see cref="T:System.Threading.Tasks.ValueTask" />, если таковой имеется, или новый объект <see cref="T:System.Threading.Tasks.Task" />, представляющий результат.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-125">The <see cref="T:System.Threading.Tasks.Task" /> object that is wrapped in this <see cref="T:System.Threading.Tasks.ValueTask" /> if one exists, or a new <see cref="T:System.Threading.Tasks.Task" /> object that represents the result.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAwait">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable ConfigureAwait (bool continueOnCapturedContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable ConfigureAwait(bool continueOnCapturedContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.ConfigureAwait(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureAwait (continueOnCapturedContext As Boolean) As ConfiguredValueTaskAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable ConfigureAwait(bool continueOnCapturedContext);" />
      <MemberSignature Language="F#" Value="member this.ConfigureAwait : bool -&gt; System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable" Usage="valueTask.ConfigureAwait continueOnCapturedContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="continueOnCapturedContext"><span data-ttu-id="9f8f7-126">Значение <see langword="true" />, чтобы попытаться выполнить маршалинг продолжения обратно в захваченный контекст; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-126"><see langword="true" /> to attempt to marshal the continuation back to the captured context; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9f8f7-127">Настраивает объект типа awaiter для этого значения.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-127">Configures an awaiter for this value.</span></span></summary>
        <returns><span data-ttu-id="9f8f7-128">Настроенный объект типа awaiter.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-128">The configured awaiter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueTask.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9f8f7-129">Объект, который требуется сравнить с текущим объектом.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-129">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="9f8f7-130">Определяет, равен ли текущий экземпляр <see cref="T:System.Threading.Tasks.ValueTask" /> указанному объекту.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-130">Determines whether the specified object is equal to the current <see cref="T:System.Threading.Tasks.ValueTask" /> instance.</span></span></summary>
        <returns><span data-ttu-id="9f8f7-131">Значение <see langword="true" />, если указанный объект равен текущему объекту; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-131"><see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="9f8f7-132">Два <xref:System.Threading.Tasks.ValueTask> экземпляры являются эквивалентными, если они же wrap <xref:System.Threading.Tasks.Task> или той же парой <xref:System.Threading.Tasks.Sources.IValueTaskSource> объект и маркер.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-132">Two <xref:System.Threading.Tasks.ValueTask> instances are equal when they wrap the same <xref:System.Threading.Tasks.Task> or the same pair of the <xref:System.Threading.Tasks.Sources.IValueTaskSource> object and the token.</span></span>

 ]]></format>
    </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.Tasks.ValueTask other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Threading.Tasks.ValueTask other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.Equals(System.Threading.Tasks.ValueTask)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ValueTask) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Threading::Tasks::ValueTask other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Threading.Tasks.ValueTask -&gt; bool" Usage="valueTask.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.Tasks.ValueTask" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="9f8f7-133">Объект, который требуется сравнить с текущим объектом.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-133">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="9f8f7-134">Определяет, равен ли заданный объект <see cref="T:System.Threading.Tasks.ValueTask" /> текущему объекту <see cref="T:System.Threading.Tasks.ValueTask" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-134">Determines whether the specified <see cref="T:System.Threading.Tasks.ValueTask" /> object is equal to the current <see cref="T:System.Threading.Tasks.ValueTask" /> object.</span></span></summary>
        <returns><span data-ttu-id="9f8f7-135">Значение <see langword="true" />, если указанный объект равен текущему объекту; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-135"><see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="9f8f7-136">Два <xref:System.Threading.Tasks.ValueTask> экземпляры являются эквивалентными, если они же wrap <xref:System.Threading.Tasks.Task> или той же парой <xref:System.Threading.Tasks.Sources.IValueTaskSource> объект и маркер.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-136">Two <xref:System.Threading.Tasks.ValueTask> instances are equal when they wrap the same <xref:System.Threading.Tasks.Task> or the same pair of the <xref:System.Threading.Tasks.Sources.IValueTaskSource> object and the token.</span></span>

 ]]></format>
    </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ValueTaskAwaiter GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ValueTaskAwaiter GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As ValueTaskAwaiter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ValueTaskAwaiter GetAwaiter();" />
      <MemberSignature Language="F#" Value="member this.GetAwaiter : unit -&gt; System.Runtime.CompilerServices.ValueTaskAwaiter" Usage="valueTask.GetAwaiter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ValueTaskAwaiter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f8f7-137">Создает объект типа awaiter для этого значения.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-137">Creates an awaiter for this value.</span></span></summary>
        <returns><span data-ttu-id="9f8f7-138">Объект типа awaiter.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-138">The awaiter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueTask.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f8f7-139">Возвращает хэш-код данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-139">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="9f8f7-140">Хэш-код для текущего объекта.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-140">The hash code for the current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanceled">
      <MemberSignature Language="C#" Value="public bool IsCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCanceled" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.IsCanceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCanceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCanceled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCanceled : bool" Usage="System.Threading.Tasks.ValueTask.IsCanceled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f8f7-141">Возвращает значение, указывающее, представляет ли этот объект отмененную операцию.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-141">Gets a value that indicates whether this object represents a canceled operation.</span></span></summary>
        <value><span data-ttu-id="9f8f7-142"><see langword="true" /> Если объект представляет отмененной операции; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-142"><see langword="true" /> if this object represents a canceled operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Threading.Tasks.ValueTask.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f8f7-143">Возвращает значение, указывающее, представляет ли этот объект завершенную операцию.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-143">Gets a value that indicates whether this object represents a completed operation.</span></span></summary>
        <value><span data-ttu-id="9f8f7-144"><see langword="true" /> Если этот объект представляет завершенную операцию; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-144"><see langword="true" /> if this object represents a completed operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompletedSuccessfully">
      <MemberSignature Language="C#" Value="public bool IsCompletedSuccessfully { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompletedSuccessfully" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.IsCompletedSuccessfully" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompletedSuccessfully As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompletedSuccessfully { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompletedSuccessfully : bool" Usage="System.Threading.Tasks.ValueTask.IsCompletedSuccessfully" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f8f7-145">Возвращает значение, указывающее, представляет ли этот объект успешно завершенную операцию.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-145">Gets a value that indicates whether this object represents a successfully completed operation.</span></span></summary>
        <value><span data-ttu-id="9f8f7-146"><see langword="true" /> Если этот объект представляет успешно завершенную операцию; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-146"><see langword="true" /> if this object represents a successfully completed operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFaulted">
      <MemberSignature Language="C#" Value="public bool IsFaulted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFaulted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.IsFaulted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFaulted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFaulted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFaulted : bool" Usage="System.Threading.Tasks.ValueTask.IsFaulted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f8f7-147">Возвращает значение, указывающее, представляет ли этот объект операцию, завершившуюся ошибкой.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-147">Gets a value that indicates whether this object represents a failed operation.</span></span></summary>
        <value><span data-ttu-id="9f8f7-148"><see langword="true" /> Если объект представляет сбойной операцией; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-148"><see langword="true" /> if this object represents a failed operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.Tasks.ValueTask left, System.Threading.Tasks.ValueTask right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.Tasks.ValueTask left, valuetype System.Threading.Tasks.ValueTask right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.op_Equality(System.Threading.Tasks.ValueTask,System.Threading.Tasks.ValueTask)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ValueTask, right As ValueTask) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::Tasks::ValueTask left, System::Threading::Tasks::ValueTask right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Threading.Tasks.ValueTask * System.Threading.Tasks.ValueTask -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f8f7-149">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-149">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="9f8f7-150">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-150">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="9f8f7-151">Сравнивает два значения <see cref="T:System.Threading.Tasks.ValueTask" /> на предмет их равенства.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-151">Compares two <see cref="T:System.Threading.Tasks.ValueTask" /> values for equality.</span></span></summary>
        <returns><span data-ttu-id="9f8f7-152">Значение <see langword="true" />, если два значения <see cref="T:System.Threading.Tasks.ValueTask" /> равны; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-152"><see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask" /> values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="9f8f7-153">Два <xref:System.Threading.Tasks.ValueTask> экземпляры являются эквивалентными, если они же wrap <xref:System.Threading.Tasks.Task> или той же парой <xref:System.Threading.Tasks.Sources.IValueTaskSource> объект и маркер.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-153">Two <xref:System.Threading.Tasks.ValueTask> instances are equal when they wrap the same <xref:System.Threading.Tasks.Task> or the same pair of the <xref:System.Threading.Tasks.Sources.IValueTaskSource> object and the token.</span></span>

 ]]></format>
    </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.Tasks.ValueTask left, System.Threading.Tasks.ValueTask right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.Tasks.ValueTask left, valuetype System.Threading.Tasks.ValueTask right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.op_Inequality(System.Threading.Tasks.ValueTask,System.Threading.Tasks.ValueTask)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ValueTask, right As ValueTask) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::Tasks::ValueTask left, System::Threading::Tasks::ValueTask right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Threading.Tasks.ValueTask * System.Threading.Tasks.ValueTask -&gt; bool" Usage="System.Threading.Tasks.ValueTask.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f8f7-154">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-154">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="9f8f7-155">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-155">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="9f8f7-156">Определяет неравенство двух значений <see cref="T:System.Threading.Tasks.ValueTask" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-156">Determines whether two <see cref="T:System.Threading.Tasks.ValueTask" /> values are unequal.</span></span></summary>
        <returns><span data-ttu-id="9f8f7-157">Значение <see langword="true" />, если два значения <see cref="T:System.Threading.Tasks.ValueTask" /> не равны; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-157"><see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask" /> values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="9f8f7-158">Два <xref:System.Threading.Tasks.ValueTask> экземпляры являются эквивалентными, если они же wrap <xref:System.Threading.Tasks.Task> или той же парой <xref:System.Threading.Tasks.Sources.IValueTaskSource> объект и маркер.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-158">Two <xref:System.Threading.Tasks.ValueTask> instances are equal when they wrap the same <xref:System.Threading.Tasks.Task> or the same pair of the <xref:System.Threading.Tasks.Sources.IValueTaskSource> object and the token.</span></span>

 ]]></format>
    </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preserve">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask Preserve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask Preserve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.Preserve" />
      <MemberSignature Language="VB.NET" Value="Public Function Preserve () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::ValueTask Preserve();" />
      <MemberSignature Language="F#" Value="member this.Preserve : unit -&gt; System.Threading.Tasks.ValueTask" Usage="valueTask.Preserve " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f8f7-159">Получает объект <see cref="T:System.Threading.Tasks.ValueTask" />, который можно будет использовать в любой момент в будущем.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-159">Gets a <see cref="T:System.Threading.Tasks.ValueTask" /> that may be used at any point in the future.</span></span></summary>
        <returns><span data-ttu-id="9f8f7-160">Сохраненный объект <see cref="T:System.Threading.Tasks.ValueTask" />.</span><span class="sxs-lookup"><span data-stu-id="9f8f7-160">The preserved <see cref="T:System.Threading.Tasks.ValueTask" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
