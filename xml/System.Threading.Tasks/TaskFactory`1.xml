<Type Name="TaskFactory&lt;TResult&gt;" FullName="System.Threading.Tasks.TaskFactory&lt;TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="389b84e684a1b9e4839d2eb66fcce77e213b7e71" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70430270" /></Metadata><TypeSignature Language="C#" Value="public class TaskFactory&lt;TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskFactory`1&lt;TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskFactory(Of TResult)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class TaskFactory" />
  <TypeSignature Language="F#" Value="type TaskFactory&lt;'Result&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult"><span data-ttu-id="1d90c-101">Возвращаемое значение объектов <see cref="T:System.Threading.Tasks.Task`1" />, созданных методами этого класса.</span><span class="sxs-lookup"><span data-stu-id="1d90c-101">The return value of the <see cref="T:System.Threading.Tasks.Task`1" /> objects that the methods of this class create.</span></span></typeparam>
    <summary><span data-ttu-id="1d90c-102">Предоставляет поддержку создания и планирования объектов <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-102">Provides support for creating and scheduling <see cref="T:System.Threading.Tasks.Task`1" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-103">.NET Framework предоставляет две фабрики для создания и планирования задач:</span><span class="sxs-lookup"><span data-stu-id="1d90c-103">The .NET Framework provides two factories for creating and scheduling tasks:</span></span>  
  
-   <span data-ttu-id="1d90c-104">Класс, который создает <xref:System.Threading.Tasks.Task> объекты и  <xref:System.Threading.Tasks.Task%601> . <xref:System.Threading.Tasks.TaskFactory></span><span class="sxs-lookup"><span data-stu-id="1d90c-104">The <xref:System.Threading.Tasks.TaskFactory> class, which creates <xref:System.Threading.Tasks.Task> and <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
-   <span data-ttu-id="1d90c-105">Класс, который создает <xref:System.Threading.Tasks.Task%601> объекты. <xref:System.Threading.Tasks.TaskFactory%601></span><span class="sxs-lookup"><span data-stu-id="1d90c-105">The <xref:System.Threading.Tasks.TaskFactory%601> class, which creates <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
 <span data-ttu-id="1d90c-106"><xref:System.Threading.Tasks.TaskFactory%601> Класс позволяет выполнять следующие действия:</span><span class="sxs-lookup"><span data-stu-id="1d90c-106">The <xref:System.Threading.Tasks.TaskFactory%601> class allows you to do the following:</span></span>  
  
-   <span data-ttu-id="1d90c-107">Создайте задачу и запустите ее немедленно, вызвав <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1d90c-107">Create a task and start it immediately by calling the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> method.</span></span> <span data-ttu-id="1d90c-108">Перегрузки этого метода можно вызывать для создания и выполнения задачи, для которой требуются аргументы, отличные от аргументов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-108">You can call the overloads of this method to create and execute a task that requires non-default arguments.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="1d90c-109">Начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)] <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> , метод предоставляет самый простой способ создать задачу со значениями конфигурации по умолчанию и немедленно запустить ее.</span><span class="sxs-lookup"><span data-stu-id="1d90c-109">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a task with default configuration values and start it immediately.</span></span>  
  
-   <span data-ttu-id="1d90c-110">Создайте задачу, которая запускается при завершении одной из задач в массиве путем вызова <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> метода или. <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A></span><span class="sxs-lookup"><span data-stu-id="1d90c-110">Create a task that starts when any one of the tasks in an array has completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> or   <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> method.</span></span>  
  
-   <span data-ttu-id="1d90c-111">Создайте задачу, которая запускается после завершения всех задач в массиве путем вызова <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> метода или. <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A></span><span class="sxs-lookup"><span data-stu-id="1d90c-111">Create a task that starts when all the tasks in an array have completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> or <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method.</span></span>  
  
 <span data-ttu-id="1d90c-112">Статическое <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> свойство возвращает объект по умолчанию <xref:System.Threading.Tasks.TaskFactory%601> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-112">The static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property returns a default <xref:System.Threading.Tasks.TaskFactory%601> object.</span></span> <span data-ttu-id="1d90c-113">Можно также вызвать один из <xref:System.Threading.Tasks.TaskFactory%601> конструкторов класса для <xref:System.Threading.Tasks.Task%601> настройки объектов, <xref:System.Threading.Tasks.TaskFactory%601> создаваемых классом.</span><span class="sxs-lookup"><span data-stu-id="1d90c-113">You can also call one of the <xref:System.Threading.Tasks.TaskFactory%601> class constructors to configure the <xref:System.Threading.Tasks.Task%601> objects that  the <xref:System.Threading.Tasks.TaskFactory%601> class creates.</span></span> <span data-ttu-id="1d90c-114">В следующем примере производится настройка нового <xref:System.Threading.Tasks.TaskFactory%601> объекта для создания задач с указанным токеном отмены, параметрами создания задач, параметрами продолжения и настраиваемым планировщиком задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-114">The following example configures a new <xref:System.Threading.Tasks.TaskFactory%601> object to create tasks that have a specified cancellation token, task creation options, continuation options, and a customized task scheduler.</span></span>  
  
 [!code-csharp[TPL_Factories#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_factories/cs/factoriestresult.cs#2)]
 [!code-vb[TPL_Factories#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_factories/vb/factoriestresult.vb#2)]  
  
 <span data-ttu-id="1d90c-115">В большинстве случаев нет необходимости создавать экземпляр нового <xref:System.Threading.Tasks.TaskFactory%601> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1d90c-115">In most cases, you do not have to instantiate a new <xref:System.Threading.Tasks.TaskFactory%601> instance.</span></span> <span data-ttu-id="1d90c-116">Вместо этого можно использовать статическое <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> свойство, которое возвращает объект фабрики, который использует значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-116">Instead, you can use the static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property, which returns a factory object that uses default values.</span></span> <span data-ttu-id="1d90c-117">Затем можно вызвать его методы для запуска новых задач или определения продолжений задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-117">You can then call its methods to start new tasks or define task continuations.</span></span> <span data-ttu-id="1d90c-118">Иллюстрации см. в примере.</span><span class="sxs-lookup"><span data-stu-id="1d90c-118">For an illustration, see the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d90c-119">В следующем примере свойство static <xref:System.Threading.Tasks.Task%601.Factory%2A> используется для выполнения двух вызовов <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> метода.</span><span class="sxs-lookup"><span data-stu-id="1d90c-119">The following example uses the static <xref:System.Threading.Tasks.Task%601.Factory%2A> property to make two calls to the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1d90c-120">Первая задача возвращает массив строк, который заполняется именами файлов в каталоге MyDocuments пользователя, а второй возвращает строковый массив, который заполняется именами подкаталогов каталога MyDocuments пользователя.</span><span class="sxs-lookup"><span data-stu-id="1d90c-120">The first task returns a string array that is populated with the names of files in the user's MyDocuments directory, while the second returns a string array that is populated with the names of subdirectories of the user's MyDocuments directory.</span></span> <span data-ttu-id="1d90c-121">Затем вызывается <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> метод, который отображает сведения о количестве файлов и каталогов в массивах, возвращаемых двумя задачами после завершения выполнения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-121">It then calls the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> method, which displays information about the number of files and directories in the arrays returned by the two tasks after they have completed execution.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.Factory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.factory/cs/factory2.cs#2)]
 [!code-vb[System.Threading.Tasks.Task.Factory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.factory/vb/factory2.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="1d90c-122">Все открытые и защищенные члены <see cref="T:System.Threading.Tasks.TaskFactory`1" /> являются потокобезопасными и могут использоваться одновременно из нескольких потоков.</span><span class="sxs-lookup"><span data-stu-id="1d90c-122">All public and protected members of <see cref="T:System.Threading.Tasks.TaskFactory`1" /> are thread-safe and may be used concurrently from multiple threads.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-123">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-123">Task Parallel Library (TPL)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d90c-124">Инициализирует экземпляр <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-124">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance.</span></span></summary>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-125">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-125">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d90c-126">Инициализирует экземпляр <see cref="T:System.Threading.Tasks.TaskFactory`1" /> конфигурацией по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-126">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-127">Этот конструктор создает <xref:System.Threading.Tasks.TaskFactory%601> экземпляр с конфигурацией по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-127">This constructor creates a <xref:System.Threading.Tasks.TaskFactory%601> instance with a default configuration.</span></span> <span data-ttu-id="1d90c-128"><xref:System.Threading.Tasks.TaskCreationOptions.None> <xref:System.Threading.Tasks.TaskContinuationOptions.None> <xref:System.Threading.Tasks.TaskScheduler.Current%2A> Свойство инициализируется <xref:System.Threading.Tasks.TaskScheduler>  значением, <xref:System.Threading.Tasks.TaskContinuationOptions> свойство инициализируется значением, а свойство инициализируется текущим планировщиком (см.). <xref:System.Threading.Tasks.TaskCreationOptions></span><span class="sxs-lookup"><span data-stu-id="1d90c-128">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-129">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-129">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.CancellationToken -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; cancellationToken" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="1d90c-130">Токен отмены по умолчанию, который будет назначен задачам, созданным данной фабрикой <see cref="T:System.Threading.Tasks.TaskFactory" />, если при вызове методов фабрики не задан явно другой токен отмены.</span><span class="sxs-lookup"><span data-stu-id="1d90c-130">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span></span></param>
        <summary><span data-ttu-id="1d90c-131">Инициализирует экземпляр <see cref="T:System.Threading.Tasks.TaskFactory`1" /> конфигурацией по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-131">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-132">Этот конструктор создает <xref:System.Threading.Tasks.TaskFactory%601> экземпляр с конфигурацией по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-132">This constructor creates a <xref:System.Threading.Tasks.TaskFactory%601> instance with a default configuration.</span></span> <span data-ttu-id="1d90c-133"><xref:System.Threading.Tasks.TaskCreationOptions.None> <xref:System.Threading.Tasks.TaskContinuationOptions.None> <xref:System.Threading.Tasks.TaskScheduler.Current%2A> Свойство инициализируется <xref:System.Threading.Tasks.TaskScheduler>  значением, <xref:System.Threading.Tasks.TaskContinuationOptions> свойство инициализируется значением, а свойство инициализируется текущим планировщиком (см.). <xref:System.Threading.Tasks.TaskCreationOptions></span><span class="sxs-lookup"><span data-stu-id="1d90c-133">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-134">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-134">Task Parallel Library (TPL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scheduler As TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; scheduler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="scheduler"><span data-ttu-id="1d90c-135">Планировщик, который нужно использовать при планировании задач, созданных с помощью данной фабрики <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-135">The scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span></span> <span data-ttu-id="1d90c-136">Значение NULL означает, что следует использовать текущий объект <see cref="T:System.Threading.Tasks.TaskScheduler" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-136">A null value indicates that the current <see cref="T:System.Threading.Tasks.TaskScheduler" /> should be used.</span></span></param>
        <summary><span data-ttu-id="1d90c-137">Инициализирует экземпляр <see cref="T:System.Threading.Tasks.TaskFactory`1" /> с заданной конфигурацией.</span><span class="sxs-lookup"><span data-stu-id="1d90c-137">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-138">При использовании этого конструктора <xref:System.Threading.Tasks.TaskCreationOptions> свойство инициализируется <xref:System.Threading.Tasks.TaskCreationOptions.None>значением, <xref:System.Threading.Tasks.TaskScheduler> <xref:System.Threading.Tasks.TaskContinuationOptions.None> <xref:System.Threading.Tasks.TaskContinuationOptions> свойство инициализируется значением, `null`а свойство инициализируется значением `scheduler`, если в в этом случае свойство инициализируется текущим планировщиком (см. раздел <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="1d90c-138">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's `null`, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-139">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-139">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-140">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-140">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-141">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-141">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions, continuationOptions As TaskContinuationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; (creationOptions, continuationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions"><span data-ttu-id="1d90c-142">Параметры по умолчанию, которые необходимо использовать при создании задач данной фабрикой <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-142">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="1d90c-143">Параметры по умолчанию, которые необходимо использовать при создании задач продолжения данной фабрикой <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-143">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span></span></param>
        <summary><span data-ttu-id="1d90c-144">Инициализирует экземпляр <see cref="T:System.Threading.Tasks.TaskFactory`1" /> с заданной конфигурацией.</span><span class="sxs-lookup"><span data-stu-id="1d90c-144">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-145"><xref:System.Threading.Tasks.TaskCreationOptions> При использовании этого конструктора свойство инициализируется `creationOptions`значением, <xref:System.Threading.Tasks.TaskScheduler> <xref:System.Threading.Tasks.TaskContinuationOptions> свойство инициализируется значением `continuationOptions`, а свойство инициализируется текущим планировщиком (см <xref:System.Threading.Tasks.TaskScheduler.Current%2A>.).</span><span class="sxs-lookup"><span data-stu-id="1d90c-145">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-146">Параметр <paramref name="creationOptions" /> или <paramref name="continuationOptions" /> имеет недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-146"><paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-147">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-147">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-148">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-148">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-149">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-149">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; (cancellationToken, creationOptions, continuationOptions, scheduler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="1d90c-150">Токен отмены по умолчанию, который будет назначен задачам, созданным данной фабрикой <see cref="T:System.Threading.Tasks.TaskFactory" />, если при вызове методов фабрики не задан явно другой токен отмены.</span><span class="sxs-lookup"><span data-stu-id="1d90c-150">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="1d90c-151">Параметры по умолчанию, которые необходимо использовать при создании задач данной фабрикой <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-151">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="1d90c-152">Параметры по умолчанию, которые необходимо использовать при создании задач продолжения данной фабрикой <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-152">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span></span></param>
        <param name="scheduler"><span data-ttu-id="1d90c-153">Планировщик по умолчанию, который нужно использовать при планировании задач, созданных с помощью данной фабрики <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-153">The default scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span></span> <span data-ttu-id="1d90c-154">Значение NULL указывает на то, что должно использоваться <see cref="P:System.Threading.Tasks.TaskScheduler.Current" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-154">A null value indicates that <see cref="P:System.Threading.Tasks.TaskScheduler.Current" /> should be used.</span></span></param>
        <summary><span data-ttu-id="1d90c-155">Инициализирует экземпляр <see cref="T:System.Threading.Tasks.TaskFactory`1" /> с заданной конфигурацией.</span><span class="sxs-lookup"><span data-stu-id="1d90c-155">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-156">При использовании этого конструктора <xref:System.Threading.Tasks.TaskCreationOptions> свойство инициализируется `creationOptions`значением, <xref:System.Threading.Tasks.TaskScheduler> `continuationOptions` <xref:System.Threading.Tasks.TaskContinuationOptions> свойство инициализируется значением, `null`а свойство инициализируется значением `scheduler`, если в в этом случае свойство инициализируется текущим планировщиком (см. раздел <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="1d90c-156">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's `null`, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-157">Параметр <paramref name="creationOptions" /> или <paramref name="continuationOptions" /> имеет недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-157"><paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-158">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-158">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-159">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-159">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-160">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-160">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d90c-161">Возвращает токен отмены по умолчанию для этой фабрики задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-161">Gets the default cancellation token for this task factory.</span></span></summary>
        <value><span data-ttu-id="1d90c-162">Токен отмены по умолчанию для этой фабрики задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-162">The default cancellation token for this task factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-163">Это свойство возвращает токен отмены по умолчанию, который будет назначен всем задачам, созданным этой фабрикой, если только другое значение токена отмены не указано явным образом во время вызова методов фабрики задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-163">This property returns the default cancellation token that will be assigned to all tasks created by this factory unless another cancellation token value is explicitly specified during the call to the task factory methods.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-164">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-164">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-165">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-165">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinuationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskContinuationOptions ContinuationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskContinuationOptions ContinuationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.ContinuationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContinuationOptions As TaskContinuationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskContinuationOptions ContinuationOptions { System::Threading::Tasks::TaskContinuationOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.ContinuationOptions : System.Threading.Tasks.TaskContinuationOptions" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.ContinuationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d90c-166">Возвращает значение перечисления <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> для этой фабрики задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-166">Gets the <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> enumeration value for this task factory.</span></span></summary>
        <value><span data-ttu-id="1d90c-167">Одно из значений перечисления, которое задает параметры продолжения по умолчанию для этой фабрики задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-167">One of the enumeration values that specifies the default continuation options for this task factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-168">Это свойство возвращает параметры продолжения по умолчанию для этой фабрики.</span><span class="sxs-lookup"><span data-stu-id="1d90c-168">This property returns the default continuation options for this factory.</span></span> <span data-ttu-id="1d90c-169">Они будут использоваться для создания всех задач продолжения, если другие параметры явно не указаны во время вызовов методов этой фабрики.</span><span class="sxs-lookup"><span data-stu-id="1d90c-169">They will be used to create all continuation tasks unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-170">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-170">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-171">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-171">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAll">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d90c-172">Создает задачу продолжения, которая будет запущена после выполнения набора указанных задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-172">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span></span></summary>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-173">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-173">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-174">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-174">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-175">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-175">Task Cancellation</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationFunction As Func(Of Task(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="1d90c-176">Массив задач, выполнение которых должно быть продолжено.</span><span class="sxs-lookup"><span data-stu-id="1d90c-176">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-177">Делегат функции, выполняемый асинхронно после завершения выполнения всех задач в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-177">The function delegate to execute asynchronously when all tasks in the <paramref name="tasks" /> array have completed.</span></span></param>
        <summary><span data-ttu-id="1d90c-178">Создает задачу продолжения, которая будет запущена после выполнения набора указанных задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-178">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span></span></summary>
        <returns><span data-ttu-id="1d90c-179">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-179">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-180">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-180">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-181">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-181">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-182">Массив <paramref name="tasks" /> равен <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-182"><paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-183">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-183">-or-</span></span> 
<span data-ttu-id="1d90c-184">Значение параметра <paramref name="continuationFunction" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-184">The <paramref name="continuationFunction" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-185">Массив <paramref name="tasks" /> содержит значение NULL или является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-185">The <paramref name="tasks" /> array contains a null value or is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-186">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-186">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-187">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-187">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-188">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-188">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="1d90c-189">Массив задач, выполнение которых должно быть продолжено.</span><span class="sxs-lookup"><span data-stu-id="1d90c-189">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-190">Делегат функции, выполняемый асинхронно после завершения выполнения всех задач в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-190">The function delegate to execute asynchronously when all tasks in the <paramref name="tasks" /> array have completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d90c-191">Токен отмены, который будет назначен новой задаче продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-191">The cancellation token that will be assigned to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="1d90c-192">Создает задачу продолжения, которая будет запущена после выполнения набора указанных задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-192">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span></span></summary>
        <returns><span data-ttu-id="1d90c-193">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-193">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-194">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-194">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-195">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-195">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
<span data-ttu-id="1d90c-196">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-196">-or-</span></span> 
<span data-ttu-id="1d90c-197">Класс <see cref="T:System.Threading.CancellationTokenSource" />, создавший <paramref name="cancellationToken" />, уже удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-197">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-198">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-198">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-199">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-199">-or-</span></span> 
 <span data-ttu-id="1d90c-200">Свойство <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-200"><paramref name="continuationFunction" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-201">Массив <paramref name="tasks" /> содержит значение NULL или является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-201">The <paramref name="tasks" /> array contains a null value or is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-202">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-202">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-203">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-203">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-204">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-204">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationFunction As Func(Of Task(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="1d90c-205">Массив задач, выполнение которых должно быть продолжено.</span><span class="sxs-lookup"><span data-stu-id="1d90c-205">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-206">Делегат функции, выполняемый асинхронно после завершения выполнения всех задач в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-206">The function delegate to execute asynchronously when all tasks in the <paramref name="tasks" /> array have completed.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="1d90c-207">Одно из значений перечисления, которое управляет поведением созданной задачи продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-207">One of the enumeration values that controls the behavior of the created continuation task.</span></span> <span data-ttu-id="1d90c-208">Значения <see langword="NotOn*" /> и <see langword="OnlyOn*" /> являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="1d90c-208">The <see langword="NotOn*" /> and <see langword="OnlyOn*" /> values are not valid.</span></span></param>
        <summary><span data-ttu-id="1d90c-209">Создает задачу продолжения, которое будет запущено после завершения выполнения набора указанных задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-209">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span></span></summary>
        <returns><span data-ttu-id="1d90c-210">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-210">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-211">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-211">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-212">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-212">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-213">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-213">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-214">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-214">-or-</span></span> 
<span data-ttu-id="1d90c-215">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-215">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-216">Аргумент <paramref name="continuationOptions" /> указывает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-216">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-217">Массив <paramref name="tasks" /> содержит значение NULL или является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-217">The <paramref name="tasks" /> array contains a null value or is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-218">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-218">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-219">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-219">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-220">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-220">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="1d90c-221">Массив задач, выполнение которых должно быть продолжено.</span><span class="sxs-lookup"><span data-stu-id="1d90c-221">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-222">Делегат функции, выполняемый асинхронно после завершения выполнения всех задач в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-222">The function delegate to execute asynchronously when all tasks in the <paramref name="tasks" /> array have completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d90c-223">Токен отмены, который будет назначен новой задаче продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-223">The cancellation token that will be assigned to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="1d90c-224">Одно из значений перечисления, которое управляет поведением созданной задачи продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-224">One of the enumeration values that controls the behavior of the created continuation task.</span></span> <span data-ttu-id="1d90c-225">Значения <see langword="NotOn*" /> и <see langword="OnlyOn*" /> являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="1d90c-225">The <see langword="NotOn*" /> and <see langword="OnlyOn*" /> values are not valid.</span></span></param>
        <param name="scheduler"><span data-ttu-id="1d90c-226">Планировщик, который используется для планирования созданной задачи продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-226">The scheduler that is used to schedule the created continuation task.</span></span></param>
        <summary><span data-ttu-id="1d90c-227">Создает задачу продолжения, которое будет запущено после завершения выполнения набора указанных задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-227">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span></span></summary>
        <returns><span data-ttu-id="1d90c-228">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-228">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-229">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-229">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-230">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-230">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-231">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-231">-or-</span></span> 
<span data-ttu-id="1d90c-232">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-232">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-233">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-233">-or-</span></span> 
<span data-ttu-id="1d90c-234">Аргумент <paramref name="scheduler" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-234">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-235">Массив <paramref name="tasks" /> содержит значение NULL или является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-235">The <paramref name="tasks" /> array contains a null value or is empty.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-236">Параметр <paramref name="continuationOptions" /> содержит недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-236"><paramref name="continuationOptions" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-237">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-237">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
<span data-ttu-id="1d90c-238">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-238">-or-</span></span> 
<span data-ttu-id="1d90c-239">Класс <see cref="T:System.Threading.CancellationTokenSource" />, создавший <paramref name="cancellationToken" />, уже удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-239">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-240">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-240">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-241">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-241">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-242">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-242">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="1d90c-243">Тип результата предыдущего объекта <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-243">The type of the result of the antecedent <paramref name="tasks" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="1d90c-244">Массив задач, выполнение которых должно быть продолжено.</span><span class="sxs-lookup"><span data-stu-id="1d90c-244">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-245">Делегат функции, выполняемый асинхронно после завершения выполнения всех задач в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-245">The function delegate to execute asynchronously when all tasks in the <paramref name="tasks" /> array have completed.</span></span></param>
        <summary><span data-ttu-id="1d90c-246">Создает задачу продолжения, которая будет запущена после выполнения набора указанных задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-246">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span></span></summary>
        <returns><span data-ttu-id="1d90c-247">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-247">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-248">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-248">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-249">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-249">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-250">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-250">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-251">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-251">-or-</span></span> 
<span data-ttu-id="1d90c-252">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-252">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-253">Массив <paramref name="tasks" /> содержит значение NULL или является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-253">The <paramref name="tasks" /> array contains a null value or is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-254">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-254">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-255">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-255">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-256">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-256">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="1d90c-257">Тип результата предыдущего объекта <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-257">The type of the result of the antecedent <paramref name="tasks" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="1d90c-258">Массив задач, выполнение которых должно быть продолжено.</span><span class="sxs-lookup"><span data-stu-id="1d90c-258">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-259">Делегат функции, выполняемый асинхронно после завершения выполнения всех задач в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-259">The function delegate to execute asynchronously when all tasks in the <paramref name="tasks" /> array have completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d90c-260">Токен отмены, который будет назначен новой задаче продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-260">The cancellation token that will be assigned to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="1d90c-261">Создает задачу продолжения, которая будет запущена после выполнения набора указанных задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-261">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span></span></summary>
        <returns><span data-ttu-id="1d90c-262">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-262">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-263">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-263">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-264">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-264">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
<span data-ttu-id="1d90c-265">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-265">-or-</span></span> 
<span data-ttu-id="1d90c-266">Класс <see cref="T:System.Threading.CancellationTokenSource" />, создавший <paramref name="cancellationToken" />, уже удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-266">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-267">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-267">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-268">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-268">-or-</span></span> 
<span data-ttu-id="1d90c-269">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-269">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-270">Массив <paramref name="tasks" /> содержит значение NULL или является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-270">The <paramref name="tasks" /> array contains a null value or is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-271">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-271">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-272">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-272">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-273">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-273">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="1d90c-274">Тип результата предыдущего объекта <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-274">The type of the result of the antecedent <paramref name="tasks" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="1d90c-275">Массив задач, выполнение которых должно быть продолжено.</span><span class="sxs-lookup"><span data-stu-id="1d90c-275">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-276">Делегат функции, выполняемый асинхронно после завершения выполнения всех задач в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-276">The function delegate to execute asynchronously when all tasks in the <paramref name="tasks" /> array have completed.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="1d90c-277">Одно из значений перечисления, которое управляет поведением созданной задачи продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-277">One of the enumeration values that controls the behavior of the created continuation task.</span></span> <span data-ttu-id="1d90c-278">Значения <see langword="NotOn*" /> и <see langword="OnlyOn*" /> являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="1d90c-278">The <see langword="NotOn*" /> and <see langword="OnlyOn*" /> values are not valid.</span></span></param>
        <summary><span data-ttu-id="1d90c-279">Создает задачу продолжения, которая будет запущена после выполнения набора указанных задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-279">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span></span></summary>
        <returns><span data-ttu-id="1d90c-280">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-280">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-281">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-281">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-282">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-282">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-283">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-283">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-284">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-284">-or-</span></span> 
<span data-ttu-id="1d90c-285">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-285">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-286">Аргумент <paramref name="continuationOptions" /> указывает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-286">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-287">Массив <paramref name="tasks" /> содержит значение NULL или является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-287">The <paramref name="tasks" /> array contains a null value or is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-288">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-288">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-289">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-289">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-290">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-290">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="1d90c-291">Тип результата предыдущего объекта <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-291">The type of the result of the antecedent <paramref name="tasks" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="1d90c-292">Массив задач, выполнение которых должно быть продолжено.</span><span class="sxs-lookup"><span data-stu-id="1d90c-292">The array of tasks from which to continue.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-293">Делегат функции, выполняемый асинхронно после завершения выполнения всех задач в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-293">The function delegate to execute asynchronously when all tasks in the <paramref name="tasks" /> array have completed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d90c-294">Токен отмены, который будет назначен новой задаче продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-294">The cancellation token that will be assigned to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="1d90c-295">Одно из значений перечисления, которое управляет поведением созданной задачи продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-295">One of the enumeration values that controls the behavior of the created continuation task.</span></span> <span data-ttu-id="1d90c-296">Значения <see langword="NotOn*" /> и <see langword="OnlyOn*" /> являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="1d90c-296">The <see langword="NotOn*" /> and <see langword="OnlyOn*" /> values are not valid.</span></span></param>
        <param name="scheduler"><span data-ttu-id="1d90c-297">Планировщик, который используется для планирования созданной задачи продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-297">The scheduler that is used to schedule the created continuation task.</span></span></param>
        <summary><span data-ttu-id="1d90c-298">Создает задачу продолжения, которая будет запущена после выполнения набора указанных задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-298">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span></span></summary>
        <returns><span data-ttu-id="1d90c-299">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-299">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-300">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-300">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-301">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-301">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-302">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-302">-or-</span></span> 
<span data-ttu-id="1d90c-303">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-303">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-304">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-304">-or-</span></span> 
<span data-ttu-id="1d90c-305">Аргумент <paramref name="scheduler" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-305">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-306">Массив <paramref name="tasks" /> содержит значение NULL или является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-306">The <paramref name="tasks" /> array contains a null value or is empty.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-307">Аргумент <paramref name="continuationOptions" /> указывает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-307">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-308">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-308">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
<span data-ttu-id="1d90c-309">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-309">-or-</span></span> 
<span data-ttu-id="1d90c-310">Класс <see cref="T:System.Threading.CancellationTokenSource" />, создавший <paramref name="cancellationToken" />, уже удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-310">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-311">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-311">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-312">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-312">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-313">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-313">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAny">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d90c-314">Создает задачу продолжения, которая будет запущена после выполнения любой задачи в указанном наборе.</span><span class="sxs-lookup"><span data-stu-id="1d90c-314">Creates a continuation task that will be started upon the completion of any task in the provided set.</span></span></summary>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-315">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-315">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-316">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-316">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-317">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-317">Task Cancellation</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationFunction As Func(Of Task, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="1d90c-318">Массив задач, выполнение которых должно быть продолжено после завершения выполнения одной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-318">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-319">Делегат функции, выполняемый асинхронно после завершения выполнения одной задачи в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-319">The function delegate to execute asynchronously when one task in the <paramref name="tasks" /> array completes.</span></span></param>
        <summary><span data-ttu-id="1d90c-320">Создает задачу продолжения, которая будет запущена после выполнения любой задачи в указанном наборе.</span><span class="sxs-lookup"><span data-stu-id="1d90c-320">Creates a continuation task that will be started upon the completion of any task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="1d90c-321">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-321">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-322">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-322">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-323">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-323">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-324">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-324">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-325">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-325">-or-</span></span> 
<span data-ttu-id="1d90c-326">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-326">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-327">Массив <paramref name="tasks" /> содержит значение NULL или является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-327">The <paramref name="tasks" /> array contains a null value or is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-328">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-328">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-329">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-329">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-330">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-330">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="1d90c-331">Массив задач, выполнение которых должно быть продолжено после завершения выполнения одной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-331">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-332">Делегат функции, выполняемый асинхронно после завершения выполнения одной задачи в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-332">The function delegate to execute asynchronously when one task in the <paramref name="tasks" /> array completes.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d90c-333">Токен отмены, который будет назначен новой задаче продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-333">The cancellation token that will be assigned to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="1d90c-334">Создает задачу продолжения, которая будет запущена после выполнения любой задачи в указанном наборе.</span><span class="sxs-lookup"><span data-stu-id="1d90c-334">Creates a continuation task that will be started upon the completion of any task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="1d90c-335">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-335">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-336">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-336">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-337">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-337">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
<span data-ttu-id="1d90c-338">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-338">-or-</span></span> 
<span data-ttu-id="1d90c-339">Класс <see cref="T:System.Threading.CancellationTokenSource" />, создавший <paramref name="cancellationToken" />, уже удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-339">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-340">Массив <paramref name="tasks" /> равняется NULL.</span><span class="sxs-lookup"><span data-stu-id="1d90c-340">The <paramref name="tasks" /> array is null.</span></span>  
  
<span data-ttu-id="1d90c-341">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-341">-or-</span></span> 
<span data-ttu-id="1d90c-342">Аргумент <paramref name="continuationFunction" /> имеет значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1d90c-342">The <paramref name="continuationFunction" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-343">Массив <paramref name="tasks" /> содержит значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1d90c-343">The <paramref name="tasks" /> array contains a null value.</span></span>  
  
<span data-ttu-id="1d90c-344">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-344">-or-</span></span> 
<span data-ttu-id="1d90c-345">Массив <paramref name="tasks" /> является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-345">The <paramref name="tasks" /> array is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-346">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-346">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-347">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-347">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-348">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-348">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationFunction As Func(Of Task, TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="1d90c-349">Массив задач, выполнение которых должно быть продолжено после завершения выполнения одной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-349">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-350">Делегат функции, выполняемый асинхронно после завершения выполнения одной задачи в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-350">The function delegate to execute asynchronously when one task in the <paramref name="tasks" /> array completes.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="1d90c-351">Одно из значений перечисления, которое управляет поведением созданной задачи продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-351">One of the enumeration values that controls the behavior of the created continuation task.</span></span> <span data-ttu-id="1d90c-352">Значения <see langword="NotOn*" /> и <see langword="OnlyOn*" /> являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="1d90c-352">The <see langword="NotOn*" /> and <see langword="OnlyOn*" /> values are not valid.</span></span></param>
        <summary><span data-ttu-id="1d90c-353">Создает задачу продолжения, которая будет запущена после выполнения любой задачи в указанном наборе.</span><span class="sxs-lookup"><span data-stu-id="1d90c-353">Creates a continuation task that will be started upon the completion of any task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="1d90c-354">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-354">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-355">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-355">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-356">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-356">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-357">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-357">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-358">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-358">-or-</span></span> 
<span data-ttu-id="1d90c-359">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-359">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-360">Аргумент <paramref name="continuationOptions" /> указывает недопустимое значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="1d90c-360">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-361">Массив <paramref name="tasks" /> содержит значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1d90c-361">The <paramref name="tasks" /> array contains a null value.</span></span>  
  
<span data-ttu-id="1d90c-362">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-362">-or-</span></span> 
<span data-ttu-id="1d90c-363">Массив <paramref name="tasks" /> является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-363">The <paramref name="tasks" /> array is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-364">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-364">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-365">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-365">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-366">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-366">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks"><span data-ttu-id="1d90c-367">Массив задач, выполнение которых должно быть продолжено после завершения выполнения одной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-367">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-368">Делегат функции, выполняемый асинхронно после завершения выполнения одной задачи в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-368">The function delegate to execute asynchronously when one task in the <paramref name="tasks" /> array completes.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d90c-369">Токен отмены, который будет назначен новой задаче продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-369">The cancellation token that will be assigned to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="1d90c-370">Одно из значений перечисления, которое управляет поведением созданной задачи продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-370">One of the enumeration values that controls the behavior of the created continuation task.</span></span> <span data-ttu-id="1d90c-371">Значения <see langword="NotOn*" /> и <see langword="OnlyOn*" /> являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="1d90c-371">The <see langword="NotOn*" /> and <see langword="OnlyOn*" /> values are not valid.</span></span></param>
        <param name="scheduler"><span data-ttu-id="1d90c-372">Планировщик задач, который используется для планирования созданной задачи продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-372">The task scheduler that is used to schedule the created continuation task.</span></span></param>
        <summary><span data-ttu-id="1d90c-373">Создает задачу продолжения, которая будет запущена после выполнения любой задачи в указанном наборе.</span><span class="sxs-lookup"><span data-stu-id="1d90c-373">Creates a continuation task that will be started upon the completion of any task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="1d90c-374">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-374">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-375">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-375">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-376">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-376">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-377">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-377">-or-</span></span> 
<span data-ttu-id="1d90c-378">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-378">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-379">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-379">-or-</span></span> 
<span data-ttu-id="1d90c-380">Аргумент <paramref name="scheduler" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-380">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-381">Массив <paramref name="tasks" /> содержит значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1d90c-381">The <paramref name="tasks" /> array contains a null value.</span></span>  
  
<span data-ttu-id="1d90c-382">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-382">-or-</span></span> 
<span data-ttu-id="1d90c-383">Массив <paramref name="tasks" /> является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-383">The <paramref name="tasks" /> array is empty.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-384">Аргумент <paramref name="continuationOptions" /> указывает недопустимое значение <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-384">The <paramref name="continuationOptions" /> argument specifies an invalid <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-385">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-385">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
<span data-ttu-id="1d90c-386">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-386">-or-</span></span> 
<span data-ttu-id="1d90c-387">Класс <see cref="T:System.Threading.CancellationTokenSource" />, создавший <paramref name="cancellationToken" />, уже удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-387">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.TaskScheduler" />
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-388">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-388">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-389">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-389">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-390">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-390">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="1d90c-391">Тип результата предыдущего объекта <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-391">The type of the result of the antecedent <paramref name="tasks" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="1d90c-392">Массив задач, выполнение которых должно быть продолжено после завершения выполнения одной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-392">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-393">Делегат функции, выполняемый асинхронно после завершения выполнения одной задачи в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-393">The function delegate to execute asynchronously when one task in the <paramref name="tasks" /> array completes.</span></span></param>
        <summary><span data-ttu-id="1d90c-394">Создает задачу продолжения, которая будет запущена после выполнения любой задачи в указанном наборе.</span><span class="sxs-lookup"><span data-stu-id="1d90c-394">Creates a continuation task that will be started upon the completion of any task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="1d90c-395">Новое продолжение <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-395">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-396">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-396">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-397">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-397">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-398">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-398">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-399">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-399">-or-</span></span> 
<span data-ttu-id="1d90c-400">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-400">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-401">Массив <paramref name="tasks" /> содержит значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1d90c-401">The <paramref name="tasks" /> array contains a null value.</span></span>  
  
<span data-ttu-id="1d90c-402">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-402">-or-</span></span> 
<span data-ttu-id="1d90c-403">Массив <paramref name="tasks" /> является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-403">The <paramref name="tasks" /> array is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-404">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-404">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-405">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-405">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-406">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-406">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="1d90c-407">Тип результата предыдущего объекта <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-407">The type of the result of the antecedent <paramref name="tasks" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="1d90c-408">Массив задач, выполнение которых должно быть продолжено после завершения выполнения одной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-408">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-409">Делегат функции, выполняемый асинхронно после завершения выполнения одной задачи в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-409">The function delegate to execute asynchronously when one task in the <paramref name="tasks" /> array completes.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d90c-410">Токен отмены, который будет назначен новой задаче продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-410">The cancellation token that will be assigned to the new continuation task.</span></span></param>
        <summary><span data-ttu-id="1d90c-411">Создает задачу продолжения, которая будет запущена после выполнения любой задачи в указанном наборе.</span><span class="sxs-lookup"><span data-stu-id="1d90c-411">Creates a continuation task that will be started upon the completion of any task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="1d90c-412">Новое задача продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-412">The new continuation task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-413">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-413">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-414">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-414">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
<span data-ttu-id="1d90c-415">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-415">-or-</span></span> 
<span data-ttu-id="1d90c-416">Класс <see cref="T:System.Threading.CancellationTokenSource" />, создавший <paramref name="cancellationToken" />, уже удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-416">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-417">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-417">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-418">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-418">-or-</span></span> 
<span data-ttu-id="1d90c-419">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-419">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-420">Массив <paramref name="tasks" /> содержит значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1d90c-420">The <paramref name="tasks" /> array contains a null value.</span></span>  
  
<span data-ttu-id="1d90c-421">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-421">-or-</span></span> 
<span data-ttu-id="1d90c-422">Массив <paramref name="tasks" /> является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-422">The <paramref name="tasks" /> array is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-423">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-423">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-424">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-424">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-425">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-425">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="1d90c-426">Тип результата предыдущего объекта <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-426">The type of the result of the antecedent <paramref name="tasks" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="1d90c-427">Массив задач, выполнение которых должно быть продолжено после завершения выполнения одной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-427">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-428">Делегат функции, выполняемый асинхронно после завершения выполнения одной задачи в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-428">The function delegate to execute asynchronously when one task in the <paramref name="tasks" /> array completes.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="1d90c-429">Одно из значений перечисления, которое управляет поведением созданной задачи продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-429">One of the enumeration values that controls the behavior of the created continuation task.</span></span> <span data-ttu-id="1d90c-430">Значения <see langword="NotOn*" /> и <see langword="OnlyOn*" /> являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="1d90c-430">The <see langword="NotOn*" /> and <see langword="OnlyOn*" /> values are not valid.</span></span></param>
        <summary><span data-ttu-id="1d90c-431">Создает задачу продолжения, которая будет запущена после выполнения любой задачи в указанном наборе.</span><span class="sxs-lookup"><span data-stu-id="1d90c-431">Creates a continuation task that will be started upon the completion of any task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="1d90c-432">Новое продолжение <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-432">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-433">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-433">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-434">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-434">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-435">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-435">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-436">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-436">-or-</span></span> 
<span data-ttu-id="1d90c-437">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-437">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-438">Аргумент <paramref name="continuationOptions" /> указывает недопустимое значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="1d90c-438">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-439">Массив <paramref name="tasks" /> содержит значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1d90c-439">The <paramref name="tasks" /> array contains a null value.</span></span>  
  
<span data-ttu-id="1d90c-440">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-440">-or-</span></span> 
<span data-ttu-id="1d90c-441">Массив <paramref name="tasks" /> является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-441">The <paramref name="tasks" /> array is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-442">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-442">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-443">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-443">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-444">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-444">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult"><span data-ttu-id="1d90c-445">Тип результата предыдущего объекта <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-445">The type of the result of the antecedent <paramref name="tasks" />.</span></span></typeparam>
        <param name="tasks"><span data-ttu-id="1d90c-446">Массив задач, выполнение которых должно быть продолжено после завершения выполнения одной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-446">The array of tasks from which to continue when one task completes.</span></span></param>
        <param name="continuationFunction"><span data-ttu-id="1d90c-447">Делегат функции, выполняемый асинхронно после завершения выполнения одной задачи в массиве <paramref name="tasks" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-447">The function delegate to execute asynchronously when one task in the <paramref name="tasks" /> array completes.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d90c-448">Токен отмены, который будет назначен новой задаче продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-448">The cancellation token that will be assigned to the new continuation task.</span></span></param>
        <param name="continuationOptions"><span data-ttu-id="1d90c-449">Одно из значений перечисления, которое управляет поведением созданной задачи продолжения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-449">One of the enumeration values that controls the behavior of the created continuation task.</span></span> <span data-ttu-id="1d90c-450">Значения <see langword="NotOn*" /> и <see langword="OnlyOn*" /> являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="1d90c-450">The <see langword="NotOn*" /> and <see langword="OnlyOn*" /> values are not valid.</span></span></param>
        <param name="scheduler"><span data-ttu-id="1d90c-451">Планировщик <see cref="T:System.Threading.Tasks.TaskScheduler" />, который используется для планирования созданной задачи продолжения <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-451">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="1d90c-452">Создает задачу продолжения, которая будет запущена после выполнения любой задачи в указанном наборе.</span><span class="sxs-lookup"><span data-stu-id="1d90c-452">Creates a continuation task that will be started upon the completion of any task in the provided set.</span></span></summary>
        <returns><span data-ttu-id="1d90c-453">Новое продолжение <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-453">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-454">После завершения задача находится в одном из следующих состояний: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>или <xref:System.Threading.Tasks.TaskStatus.Canceled> .</span><span class="sxs-lookup"><span data-stu-id="1d90c-454">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-455">Массив <paramref name="tasks" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-455">The <paramref name="tasks" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-456">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-456">-or-</span></span> 
<span data-ttu-id="1d90c-457">Аргумент <paramref name="continuationFunction" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-457">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-458">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-458">-or-</span></span> 
<span data-ttu-id="1d90c-459">Аргумент <paramref name="scheduler" /> имеет значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1d90c-459">The <paramref name="scheduler" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d90c-460">Массив <paramref name="tasks" /> содержит значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1d90c-460">The <paramref name="tasks" /> array contains a null value.</span></span>  
  
<span data-ttu-id="1d90c-461">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-461">-or-</span></span> 
<span data-ttu-id="1d90c-462">Массив <paramref name="tasks" /> является пустым.</span><span class="sxs-lookup"><span data-stu-id="1d90c-462">The <paramref name="tasks" /> array is empty.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-463">Аргумент <paramref name="continuationOptions" /> задает недопустимое значение для TaskContinuationOptions.</span><span class="sxs-lookup"><span data-stu-id="1d90c-463">The <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-464">Один из элементов массива <paramref name="tasks" /> удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-464">One of the elements in the <paramref name="tasks" /> array has been disposed.</span></span>  
  
<span data-ttu-id="1d90c-465">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-465">-or-</span></span> 
<span data-ttu-id="1d90c-466">Класс <see cref="T:System.Threading.CancellationTokenSource" />, создавший <paramref name="cancellationToken" />, уже удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-466">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-467">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-467">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md"><span data-ttu-id="1d90c-468">Создание цепочки задач с помощью задач продолжения</span><span class="sxs-lookup"><span data-stu-id="1d90c-468">Chaining Tasks by Using Continuation Tasks</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="1d90c-469">Отмена задач</span><span class="sxs-lookup"><span data-stu-id="1d90c-469">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskCreationOptions CreationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.CreationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreationOptions As TaskCreationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskCreationOptions CreationOptions { System::Threading::Tasks::TaskCreationOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.CreationOptions : System.Threading.Tasks.TaskCreationOptions" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.CreationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskCreationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d90c-470">Возвращает значение перечисления <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> для этой фабрики задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-470">Gets the <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> enumeration value for this task factory.</span></span></summary>
        <value><span data-ttu-id="1d90c-471">Одно из значений перечисления, которое задает параметры создания по умолчанию для этой фабрики задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-471">One of the enumeration values that specifies the default creation options for this task factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-472">Это свойство возвращает параметры создания по умолчанию для этой фабрики.</span><span class="sxs-lookup"><span data-stu-id="1d90c-472">This property returns the default creation options for this factory.</span></span> <span data-ttu-id="1d90c-473">Они будут использоваться для создания всех задач, если другие параметры явно не указаны во время вызовов методов этой фабрики.</span><span class="sxs-lookup"><span data-stu-id="1d90c-473">They will be used to create all tasks unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-474">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-474">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-475">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-475">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromAsync">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d90c-476">Создает экземпляр задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-476">Creates a task instance.</span></span></summary>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-477">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-477">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-478">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-478">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="1d90c-479">Интерфейс <see cref="T:System.IAsyncResult" />, завершение выполнения которого инициирует обработку <paramref name="endMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-479">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <paramref name="endMethod" />.</span></span></param>
        <param name="endMethod"><span data-ttu-id="1d90c-480">Делегат функции, который обрабатывает завершенный результат <paramref name="asyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-480">The function delegate that processes the completed <paramref name="asyncResult" />.</span></span></param>
        <summary><span data-ttu-id="1d90c-481">Создает задачу, которая выполняет функцию метода End по завершении заданного объекта <see cref="T:System.IAsyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-481">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span></span></summary>
        <returns><span data-ttu-id="1d90c-482">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-482">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-483">Аргумент <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-483">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-484">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-484">-or-</span></span> 
<span data-ttu-id="1d90c-485">Аргумент <paramref name="endMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-485">The <paramref name="endMethod" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-486">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-486">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-487">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-487">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginMethod"><span data-ttu-id="1d90c-488">Делегат, который начинает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-488">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="1d90c-489">Делегат, который заканчивает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-489">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="1d90c-490">Объект, содержащий данные, которые используются делегатом метода <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-490">An object containing data to be used by the <paramref name="beginMethod" /> delegate.</span></span></param>
        <summary><span data-ttu-id="1d90c-491">Создает задачу, которая представляет пару методов Begin и End, соответствующих шаблону модели асинхронного программирования.</span><span class="sxs-lookup"><span data-stu-id="1d90c-491">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="1d90c-492">Созданная задача, которая представляет асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-492">The created task that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-493">Этот метод создает исключения, вызванные `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="1d90c-493">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="1d90c-494">Исключения для `endmethod` вызываются при ожидании возвращенной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-494">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-495">Аргумент <paramref name="beginMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-495">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-496">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-496">-or-</span></span> 
<span data-ttu-id="1d90c-497">Аргумент <paramref name="endMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-497">The <paramref name="endMethod" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-498">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-498">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-499">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-499">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="1d90c-500">Интерфейс <see cref="T:System.IAsyncResult" />, завершение выполнения которого инициирует обработку <paramref name="endMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-500">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <paramref name="endMethod" />.</span></span></param>
        <param name="endMethod"><span data-ttu-id="1d90c-501">Делегат функции, который обрабатывает завершенный результат <paramref name="asyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-501">The function delegate that processes the completed <paramref name="asyncResult" />.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="1d90c-502">Одно из значений перечисления, которое управляет поведением созданной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-502">One of the enumeration values that controls the behavior of the created task.</span></span></param>
        <summary><span data-ttu-id="1d90c-503">Создает задачу, которая выполняет функцию метода End по завершении заданного объекта <see cref="T:System.IAsyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-503">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span></span></summary>
        <returns><span data-ttu-id="1d90c-504">Задача, представляющая асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-504">A task that represents the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-505">Аргумент <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-505">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-506">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-506">-or-</span></span> 
<span data-ttu-id="1d90c-507">Аргумент <paramref name="endMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-507">The <paramref name="endMethod" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-508">Аргумент <paramref name="creationOptions" /> указывает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-508">The <paramref name="creationOptions" /> argument specifies an invalid value.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-509">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-509">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-510">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-510">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="beginMethod"><span data-ttu-id="1d90c-511">Делегат, который начинает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-511">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="1d90c-512">Делегат, который заканчивает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-512">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="1d90c-513">Объект, содержащий данные, которые используются делегатом метода <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-513">An object containing data to be used by the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="1d90c-514">Одно из значений перечисления, которое управляет поведением созданной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-514">One of the enumeration values that controls the behavior of the created task.</span></span></param>
        <summary><span data-ttu-id="1d90c-515">Создает задачу, которая представляет пару методов Begin и End, соответствующих шаблону модели асинхронного программирования.</span><span class="sxs-lookup"><span data-stu-id="1d90c-515">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="1d90c-516">Созданный объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-516">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-517">Этот метод создает исключения, вызванные `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="1d90c-517">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="1d90c-518">Исключения для `endmethod` вызываются при ожидании возвращенной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-518">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-519">Аргумент <paramref name="beginMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-519">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-520">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-520">-or-</span></span> 
<span data-ttu-id="1d90c-521">Аргумент <paramref name="endMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-521">The <paramref name="endMethod" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-522">Аргумент <paramref name="creationOptions" /> указывает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-522">The <paramref name="creationOptions" /> argument specifies an invalid value.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-523">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-523">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-524">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-524">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions, scheduler As TaskScheduler) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="1d90c-525">Интерфейс <see cref="T:System.IAsyncResult" />, завершение выполнения которого инициирует обработку <paramref name="endMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-525">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <paramref name="endMethod" />.</span></span></param>
        <param name="endMethod"><span data-ttu-id="1d90c-526">Делегат функции, который обрабатывает завершенный результат <paramref name="asyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-526">The function delegate that processes the completed <paramref name="asyncResult" />.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="1d90c-527">Одно из значений перечисления, которое управляет поведением созданной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-527">One of the enumeration values that controls the behavior of the created task.</span></span></param>
        <param name="scheduler"><span data-ttu-id="1d90c-528">Планировщик задач, который используется для планирования задачи, выполняющей метод end.</span><span class="sxs-lookup"><span data-stu-id="1d90c-528">The task scheduler that is used to schedule the task that executes the end method.</span></span></param>
        <summary><span data-ttu-id="1d90c-529">Создает задачу, которая выполняет функцию метода End по завершении заданного объекта <see cref="T:System.IAsyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-529">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span></span></summary>
        <returns><span data-ttu-id="1d90c-530">Созданная задача, которая представляет асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-530">The created task that represents the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-531">Аргумент <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-531">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-532">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-532">-or-</span></span> 
<span data-ttu-id="1d90c-533">Аргумент <paramref name="endMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-533">The <paramref name="endMethod" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-534">-или-</span><span class="sxs-lookup"><span data-stu-id="1d90c-534">-or-</span></span> 
<span data-ttu-id="1d90c-535">Аргумент <paramref name="scheduler" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-535">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-536">Параметр <paramref name="creationOptions" /> задает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-536">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-537">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-537">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-538">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-538">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="1d90c-539">Тип первого аргумента, переданного делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-539">The type of the first argument passed to the <paramref name="beginMethod" /> delegate.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="1d90c-540">Делегат, который начинает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-540">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="1d90c-541">Делегат, который заканчивает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-541">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="1d90c-542">Первый аргумент, переданный делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-542">The first argument passed to the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="1d90c-543">Объект, содержащий данные, которые используются делегатом метода <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-543">An object containing data to be used by the <paramref name="beginMethod" /> delegate.</span></span></param>
        <summary><span data-ttu-id="1d90c-544">Создает задачу, которая представляет пару методов Begin и End, соответствующих шаблону модели асинхронного программирования.</span><span class="sxs-lookup"><span data-stu-id="1d90c-544">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="1d90c-545">Созданная задача, которая представляет асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-545">The created task that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-546">Этот метод создает исключения, вызванные `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="1d90c-546">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="1d90c-547">Исключения для `endmethod` вызываются при ожидании возвращенной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-547">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-548">Аргумент <paramref name="beginMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-548">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-549">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-549">-or-</span></span> 
<span data-ttu-id="1d90c-550">Аргумент <paramref name="endMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-550">The <paramref name="endMethod" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-551">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-551">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-552">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-552">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="1d90c-553">Тип первого аргумента, переданного делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-553">The type of the first argument passed to the <paramref name="beginMethod" /> delegate.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="1d90c-554">Делегат, который начинает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-554">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="1d90c-555">Делегат, который заканчивает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-555">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="1d90c-556">Первый аргумент, переданный делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-556">The first argument passed to the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="1d90c-557">Объект, содержащий данные, которые используются делегатом метода <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-557">An object containing data to be used by the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="1d90c-558">Одно из значений перечисления, которое управляет поведением созданной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-558">One of the enumeration values that controls the behavior of the created task.</span></span></param>
        <summary><span data-ttu-id="1d90c-559">Создает задачу, которая представляет пару методов Begin и End, соответствующих шаблону модели асинхронного программирования.</span><span class="sxs-lookup"><span data-stu-id="1d90c-559">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="1d90c-560">Созданная задача, которая представляет асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-560">The created task that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-561">Этот метод создает исключения, вызванные `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="1d90c-561">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="1d90c-562">Исключения для `endmethod` вызываются при ожидании возвращенной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-562">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-563">Аргумент <paramref name="beginMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-563">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-564">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-564">-or-</span></span> 
<span data-ttu-id="1d90c-565">Аргумент <paramref name="endMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-565">The <paramref name="endMethod" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-566">Параметр <paramref name="creationOptions" /> задает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-566">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-567">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-567">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-568">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-568">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="1d90c-569">Тип второго аргумента, переданного делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-569">The type of the second argument passed to <paramref name="beginMethod" /> delegate.</span></span></typeparam>
        <typeparam name="TArg2"><span data-ttu-id="1d90c-570">Тип первого аргумента, переданного делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-570">The type of the first argument passed to the <paramref name="beginMethod" /> delegate.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="1d90c-571">Делегат, который начинает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-571">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="1d90c-572">Делегат, который заканчивает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-572">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="1d90c-573">Первый аргумент, переданный делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-573">The first argument passed to the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="arg2"><span data-ttu-id="1d90c-574">Второй аргумент, переданный делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-574">The second argument passed to the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="1d90c-575">Объект, содержащий данные, которые используются делегатом метода <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-575">An object containing data to be used by the <paramref name="beginMethod" /> delegate.</span></span></param>
        <summary><span data-ttu-id="1d90c-576">Создает задачу, которая представляет пару методов Begin и End, соответствующих шаблону модели асинхронного программирования.</span><span class="sxs-lookup"><span data-stu-id="1d90c-576">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="1d90c-577">Созданная задача, которая представляет асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-577">The created task that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-578">Этот метод создает исключения, вызванные `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="1d90c-578">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="1d90c-579">Исключения для `endmethod` вызываются при ожидании возвращенной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-579">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-580">Аргумент <paramref name="beginMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-580">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-581">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-581">-or-</span></span> 
<span data-ttu-id="1d90c-582">Аргумент <paramref name="endMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-582">The <paramref name="endMethod" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-583">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-583">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-584">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-584">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="1d90c-585">Тип второго аргумента, переданного делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-585">The type of the second argument passed to <paramref name="beginMethod" /> delegate.</span></span></typeparam>
        <typeparam name="TArg2"><span data-ttu-id="1d90c-586">Тип первого аргумента, переданного делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-586">The type of the first argument passed to the <paramref name="beginMethod" /> delegate.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="1d90c-587">Делегат, который начинает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-587">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="1d90c-588">Делегат, который заканчивает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-588">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="1d90c-589">Первый аргумент, переданный делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-589">The first argument passed to the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="arg2"><span data-ttu-id="1d90c-590">Второй аргумент, переданный делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-590">The second argument passed to the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="1d90c-591">Объект, содержащий данные, которые используются делегатом метода <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-591">An object containing data to be used by the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="1d90c-592">Объект, которое управляет поведением созданной <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-592">An object that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="1d90c-593">Создает задачу, которая представляет пару методов Begin и End, соответствующих шаблону модели асинхронного программирования.</span><span class="sxs-lookup"><span data-stu-id="1d90c-593">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="1d90c-594">Созданная задача, которая представляет асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-594">The created task that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-595">Этот метод создает исключения, вызванные `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="1d90c-595">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="1d90c-596">Исключения для `endmethod` вызываются при ожидании возвращенной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-596">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-597">Аргумент <paramref name="beginMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-597">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-598">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-598">-or-</span></span> 
<span data-ttu-id="1d90c-599">Аргумент <paramref name="endMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-599">The <paramref name="endMethod" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-600">Параметр <paramref name="creationOptions" /> задает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-600">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-601">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-601">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-602">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-602">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="1d90c-603">Тип второго аргумента, переданного делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-603">The type of the second argument passed to <paramref name="beginMethod" /> delegate.</span></span></typeparam>
        <typeparam name="TArg2"><span data-ttu-id="1d90c-604">Тип третьего аргумента, переданного делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-604">The type of the third argument passed to <paramref name="beginMethod" /> delegate.</span></span></typeparam>
        <typeparam name="TArg3"><span data-ttu-id="1d90c-605">Тип первого аргумента, переданного делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-605">The type of the first argument passed to the <paramref name="beginMethod" /> delegate.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="1d90c-606">Делегат, который начинает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-606">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="1d90c-607">Делегат, который заканчивает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-607">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="1d90c-608">Первый аргумент, переданный делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-608">The first argument passed to the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="arg2"><span data-ttu-id="1d90c-609">Второй аргумент, переданный делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-609">The second argument passed to the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="arg3"><span data-ttu-id="1d90c-610">Третий аргумент, переданный делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-610">The third argument passed to the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="1d90c-611">Объект, содержащий данные, которые используются делегатом метода <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-611">An object containing data to be used by the <paramref name="beginMethod" /> delegate.</span></span></param>
        <summary><span data-ttu-id="1d90c-612">Создает задачу, которая представляет пару методов Begin и End, соответствующих шаблону модели асинхронного программирования.</span><span class="sxs-lookup"><span data-stu-id="1d90c-612">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="1d90c-613">Созданная задача, которая представляет асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-613">The created task that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-614">Этот метод создает исключения, вызванные `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="1d90c-614">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="1d90c-615">Исключения для `endmethod` вызываются при ожидании возвращенной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-615">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-616">Аргумент <paramref name="beginMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-616">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-617">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-617">-or-</span></span> 
<span data-ttu-id="1d90c-618">Аргумент <paramref name="endMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-618">The <paramref name="endMethod" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-619">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-619">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-620">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-620">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1"><span data-ttu-id="1d90c-621">Тип второго аргумента, переданного делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-621">The type of the second argument passed to <paramref name="beginMethod" /> delegate.</span></span></typeparam>
        <typeparam name="TArg2"><span data-ttu-id="1d90c-622">Тип третьего аргумента, переданного делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-622">The type of the third argument passed to <paramref name="beginMethod" /> delegate.</span></span></typeparam>
        <typeparam name="TArg3"><span data-ttu-id="1d90c-623">Тип первого аргумента, переданного делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-623">The type of the first argument passed to the <paramref name="beginMethod" /> delegate.</span></span></typeparam>
        <param name="beginMethod"><span data-ttu-id="1d90c-624">Делегат, который начинает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-624">The delegate that begins the asynchronous operation.</span></span></param>
        <param name="endMethod"><span data-ttu-id="1d90c-625">Делегат, который заканчивает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-625">The delegate that ends the asynchronous operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="1d90c-626">Первый аргумент, переданный делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-626">The first argument passed to the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="arg2"><span data-ttu-id="1d90c-627">Второй аргумент, переданный делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-627">The second argument passed to the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="arg3"><span data-ttu-id="1d90c-628">Третий аргумент, переданный делегату <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-628">The third argument passed to the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="1d90c-629">Объект, содержащий данные, которые используются делегатом метода <paramref name="beginMethod" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-629">An object containing data to be used by the <paramref name="beginMethod" /> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="1d90c-630">Объект, которое управляет поведением созданной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-630">An object that controls the behavior of the created task.</span></span></param>
        <summary><span data-ttu-id="1d90c-631">Создает задачу, которая представляет пару методов Begin и End, соответствующих шаблону модели асинхронного программирования.</span><span class="sxs-lookup"><span data-stu-id="1d90c-631">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span></span></summary>
        <returns><span data-ttu-id="1d90c-632">Созданная задача, которая представляет асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1d90c-632">The created task that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-633">Этот метод создает исключения, вызванные `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="1d90c-633">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="1d90c-634">Исключения для `endmethod` вызываются при ожидании возвращенной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-634">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-635">Аргумент <paramref name="beginMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-635">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-636">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-636">-or-</span></span> 
<span data-ttu-id="1d90c-637">Аргумент <paramref name="endMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-637">The <paramref name="endMethod" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-638">Параметр <paramref name="creationOptions" /> задает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-638">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-639">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-639">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-640">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-640">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Scheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler Scheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler Scheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.Scheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ Scheduler { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheduler : System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.Scheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d90c-641">Получает планировщик задач для этой фабрики задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-641">Gets the task scheduler for this task factory.</span></span></summary>
        <value><span data-ttu-id="1d90c-642">Планировщик задач для этой фабрики задач.</span><span class="sxs-lookup"><span data-stu-id="1d90c-642">The task scheduler for this task factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-643">Это свойство возвращает планировщик по умолчанию для этой фабрики.</span><span class="sxs-lookup"><span data-stu-id="1d90c-643">This property returns the default scheduler for this factory.</span></span> <span data-ttu-id="1d90c-644">Он будет использоваться для планирования всех задач, если только другой планировщик не указан явно во время вызовов методов этой фабрики.</span><span class="sxs-lookup"><span data-stu-id="1d90c-644">It will be used to schedule all tasks unless another scheduler is explicitly specified during calls to this factory's methods.</span></span>  
  
 <span data-ttu-id="1d90c-645">Если это свойство возвращает `null`, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> будет использоваться.</span><span class="sxs-lookup"><span data-stu-id="1d90c-645">If this property returns `null`, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> will be used.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-646">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-646">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-647">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-647">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartNew">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d90c-648">Создает и запускает задачу.</span><span class="sxs-lookup"><span data-stu-id="1d90c-648">Creates and starts a task.</span></span></summary>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-649">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-649">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-650">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-650">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew function" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="1d90c-651">Делегат функции, возвращающий будущий результат с использованием задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-651">A function delegate that returns the future result to be available through the task.</span></span></param>
        <summary><span data-ttu-id="1d90c-652">Создает и запускает задачу.</span><span class="sxs-lookup"><span data-stu-id="1d90c-652">Creates and starts a task.</span></span></summary>
        <returns><span data-ttu-id="1d90c-653">Запущенная задача.</span><span class="sxs-lookup"><span data-stu-id="1d90c-653">The started task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-654">Вызов `StartNew` функционально эквивалентен созданию задачи с помощью одного <xref:System.Threading.Tasks.Task%601> из конструкторов <xref:System.Threading.Tasks.Task.Start%2A> , а затем вызов метода для планирования его выполнения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-654">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors, and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="1d90c-655">Однако, если не нужно разделять создание и планирование `StartNew` , рекомендуется подходить как к простоте, так и к производительности.</span><span class="sxs-lookup"><span data-stu-id="1d90c-655">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-656">Аргумент <paramref name="function" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-656">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-657">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-657">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-658">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-658">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of Object, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="1d90c-659">Делегат функции, возвращающий будущий результат с использованием задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-659">A function delegate that returns the future result to be available through the task.</span></span></param>
        <param name="state"><span data-ttu-id="1d90c-660">Объект, содержащий данные для использования этим делегатом <paramref name="function" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-660">An object that contains data to be used by the <paramref name="function" /> delegate.</span></span></param>
        <summary><span data-ttu-id="1d90c-661">Создает и запускает задачу.</span><span class="sxs-lookup"><span data-stu-id="1d90c-661">Creates and starts a task.</span></span></summary>
        <returns><span data-ttu-id="1d90c-662">Запущенная задача.</span><span class="sxs-lookup"><span data-stu-id="1d90c-662">The started task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-663">Вызов `StartNew` функционально эквивалентен созданию задачи с помощью одного <xref:System.Threading.Tasks.Task%601> из конструкторов и вызову <xref:System.Threading.Tasks.Task.Start%2A> метода для планирования его выполнения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-663">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="1d90c-664">Однако, если не нужно разделять создание и планирование `StartNew` , рекомендуется подходить как к простоте, так и к производительности.</span><span class="sxs-lookup"><span data-stu-id="1d90c-664">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-665">Аргумент <paramref name="function" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-665">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-666">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-666">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-667">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-667">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="1d90c-668">Делегат функции, возвращающий будущий результат с использованием задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-668">A function delegate that returns the future result to be available through the task.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d90c-669">Токен отмены, который будет назначен новой задаче.</span><span class="sxs-lookup"><span data-stu-id="1d90c-669">The cancellation token that will be assigned to the new task.</span></span></param>
        <summary><span data-ttu-id="1d90c-670">Создает и запускает задачу.</span><span class="sxs-lookup"><span data-stu-id="1d90c-670">Creates and starts a task.</span></span></summary>
        <returns><span data-ttu-id="1d90c-671">Запущенная задача.</span><span class="sxs-lookup"><span data-stu-id="1d90c-671">The started task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-672">Вызов `StartNew` функционально эквивалентен созданию задачи с помощью одного <xref:System.Threading.Tasks.Task%601> из конструкторов и вызову <xref:System.Threading.Tasks.Task.Start%2A> метода для планирования его выполнения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-672">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="1d90c-673">Однако, если не нужно разделять создание и планирование `StartNew` , рекомендуется подходить как к простоте, так и к производительности.</span><span class="sxs-lookup"><span data-stu-id="1d90c-673">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-674">Источник токена отмены, создавший <paramref name="cancellationToken" />, был удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-674">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-675">Аргумент <paramref name="function" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-675">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-676">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-676">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-677">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-677">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="1d90c-678">Делегат функции, возвращающий будущий результат с использованием задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-678">A function delegate that returns the future result to be available through the task.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="1d90c-679">Одно из значений перечисления, которое управляет поведением созданной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-679">One of the enumeration values that controls the behavior of the created task.</span></span></param>
        <summary><span data-ttu-id="1d90c-680">Создает и запускает задачу.</span><span class="sxs-lookup"><span data-stu-id="1d90c-680">Creates and starts a task.</span></span></summary>
        <returns><span data-ttu-id="1d90c-681">Запущенная задача <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-681">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-682">Вызов `StartNew` функционально эквивалентен созданию задачи с помощью одного <xref:System.Threading.Tasks.Task%601> из конструкторов и вызову <xref:System.Threading.Tasks.Task.Start%2A> метода для планирования его выполнения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-682">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="1d90c-683">Однако, если не нужно разделять создание и планирование `StartNew` , рекомендуется подходить как к простоте, так и к производительности.</span><span class="sxs-lookup"><span data-stu-id="1d90c-683">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-684">Аргумент <paramref name="function" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-684">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-685">Параметр <paramref name="creationOptions" /> задает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-685">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-686">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-686">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-687">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-687">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="1d90c-688">Делегат функции, возвращающий будущий результат с использованием задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-688">A function delegate that returns the future result to be available through the task.</span></span></param>
        <param name="state"><span data-ttu-id="1d90c-689">Объект, содержащий данные для использования этим делегатом <paramref name="function" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-689">An object that contains data to be used by the <paramref name="function" /> delegate.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d90c-690">Токен отмены, который будет назначен новой задаче.</span><span class="sxs-lookup"><span data-stu-id="1d90c-690">The cancellation token that will be assigned to the new task.</span></span></param>
        <summary><span data-ttu-id="1d90c-691">Создает и запускает задачу.</span><span class="sxs-lookup"><span data-stu-id="1d90c-691">Creates and starts a task.</span></span></summary>
        <returns><span data-ttu-id="1d90c-692">Запущенная задача.</span><span class="sxs-lookup"><span data-stu-id="1d90c-692">The started task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-693">Вызов `StartNew` функционально эквивалентен созданию задачи с помощью одного <xref:System.Threading.Tasks.Task%601> из конструкторов и вызову <xref:System.Threading.Tasks.Task.Start%2A> метода для планирования его выполнения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-693">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="1d90c-694">Однако, если не нужно разделять создание и планирование `StartNew` , рекомендуется подходить как к простоте, так и к производительности.</span><span class="sxs-lookup"><span data-stu-id="1d90c-694">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-695">Источник токена отмены, создавший <paramref name="cancellationToken" />, был удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-695">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-696">Аргумент <paramref name="function" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-696">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-697">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-697">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-698">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-698">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of Object, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="1d90c-699">Делегат функции, возвращающий будущий результат с использованием задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-699">A function delegate that returns the future result to be available through the task.</span></span></param>
        <param name="state"><span data-ttu-id="1d90c-700">Объект, содержащий данные для использования этим делегатом <paramref name="function" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-700">An object that contains data to be used by the <paramref name="function" /> delegate.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="1d90c-701">Одно из значений перечисления, которое управляет поведением созданной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-701">One of the enumeration values that controls the behavior of the created task.</span></span></param>
        <summary><span data-ttu-id="1d90c-702">Создает и запускает задачу.</span><span class="sxs-lookup"><span data-stu-id="1d90c-702">Creates and starts a task.</span></span></summary>
        <returns><span data-ttu-id="1d90c-703">Запущенная задача.</span><span class="sxs-lookup"><span data-stu-id="1d90c-703">The started task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-704">Вызов `StartNew` функционально эквивалентен созданию задачи с помощью одного <xref:System.Threading.Tasks.Task%601> из конструкторов и вызову <xref:System.Threading.Tasks.Task.Start%2A> метода для планирования его выполнения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-704">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="1d90c-705">Однако, если не нужно разделять создание и планирование `StartNew` , рекомендуется подходить как к простоте, так и к производительности.</span><span class="sxs-lookup"><span data-stu-id="1d90c-705">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-706">Аргумент <paramref name="function" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-706">The <paramref name="function" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-707">Параметр <paramref name="creationOptions" /> задает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-707">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-708">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-708">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-709">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-709">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="1d90c-710">Делегат функции, возвращающий будущий результат с использованием задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-710">A function delegate that returns the future result to be available through the task.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d90c-711">Токен отмены, который будет назначен новой задаче.</span><span class="sxs-lookup"><span data-stu-id="1d90c-711">The cancellation token that will be assigned to the new task.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="1d90c-712">Одно из значений перечисления, которое управляет поведением созданной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-712">One of the enumeration values that controls the behavior of the created task.</span></span></param>
        <param name="scheduler"><span data-ttu-id="1d90c-713">Планировщик задач, который используется для планирования созданной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-713">The task scheduler that is used to schedule the created task.</span></span></param>
        <summary><span data-ttu-id="1d90c-714">Создает и запускает задачу.</span><span class="sxs-lookup"><span data-stu-id="1d90c-714">Creates and starts a task.</span></span></summary>
        <returns><span data-ttu-id="1d90c-715">Запущенная задача.</span><span class="sxs-lookup"><span data-stu-id="1d90c-715">The started task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-716">Вызов `StartNew` функционально эквивалентен созданию задачи с помощью одного <xref:System.Threading.Tasks.Task%601> из конструкторов и вызову <xref:System.Threading.Tasks.Task.Start%2A> метода для планирования его выполнения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-716">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="1d90c-717">Однако, если не нужно разделять создание и планирование `StartNew` , рекомендуется подходить как к простоте, так и к производительности.</span><span class="sxs-lookup"><span data-stu-id="1d90c-717">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-718">Источник токена отмены, создавший <paramref name="cancellationToken" />, был удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-718">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-719">Аргумент <paramref name="function" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-719">The <paramref name="function" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-720">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-720">-or-</span></span> 
<span data-ttu-id="1d90c-721">Аргумент <paramref name="scheduler" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-721">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-722">Параметр <paramref name="creationOptions" /> задает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-722">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-723">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-723">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-724">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-724">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="1d90c-725">Делегат функции, возвращающий будущий результат с использованием задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-725">A function delegate that returns the future result to be available through the task.</span></span></param>
        <param name="state"><span data-ttu-id="1d90c-726">Объект, содержащий данные для использования этим делегатом <paramref name="function" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-726">An object that contains data to be used by the <paramref name="function" /> delegate.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d90c-727">Токен отмены, который будет назначен новой задаче.</span><span class="sxs-lookup"><span data-stu-id="1d90c-727">The cancellation token that will be assigned to the new task.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="1d90c-728">Одно из значений перечисления, которое управляет поведением созданной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-728">One of the enumeration values that controls the behavior of the created task.</span></span></param>
        <param name="scheduler"><span data-ttu-id="1d90c-729">Планировщик задач, который используется для планирования созданной задачи.</span><span class="sxs-lookup"><span data-stu-id="1d90c-729">The task scheduler that is used to schedule the created task.</span></span></param>
        <summary><span data-ttu-id="1d90c-730">Создает и запускает задачу.</span><span class="sxs-lookup"><span data-stu-id="1d90c-730">Creates and starts a task.</span></span></summary>
        <returns><span data-ttu-id="1d90c-731">Запущенная задача.</span><span class="sxs-lookup"><span data-stu-id="1d90c-731">The started task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d90c-732">Вызов `StartNew` функционально эквивалентен созданию задачи с помощью одного <xref:System.Threading.Tasks.Task%601> из конструкторов и вызову <xref:System.Threading.Tasks.Task.Start%2A> метода для планирования его выполнения.</span><span class="sxs-lookup"><span data-stu-id="1d90c-732">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="1d90c-733">Однако, если не нужно разделять создание и планирование `StartNew` , рекомендуется подходить как к простоте, так и к производительности.</span><span class="sxs-lookup"><span data-stu-id="1d90c-733">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d90c-734">Источник токена отмены, создавший <paramref name="cancellationToken" />, был удален.</span><span class="sxs-lookup"><span data-stu-id="1d90c-734">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d90c-735">Аргумент <paramref name="function" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-735">The <paramref name="function" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1d90c-736">- или -</span><span class="sxs-lookup"><span data-stu-id="1d90c-736">-or-</span></span> 
<span data-ttu-id="1d90c-737">Аргумент <paramref name="scheduler" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d90c-737">The <paramref name="scheduler" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d90c-738">Параметр <paramref name="creationOptions" /> задает недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="1d90c-738">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md"><span data-ttu-id="1d90c-739">Библиотека параллельных задач (TPL)</span><span class="sxs-lookup"><span data-stu-id="1d90c-739">Task Parallel Library (TPL)</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="1d90c-740">Использование библиотеки параллельных задач с другими асинхронными шаблонами</span><span class="sxs-lookup"><span data-stu-id="1d90c-740">Using TPL with Other Asynchronous Patterns</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
