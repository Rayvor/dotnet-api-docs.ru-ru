<Type Name="ParallelOptions" FullName="System.Threading.Tasks.ParallelOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41147c8213421a6410b90743914718cacad192cb" /><Meta Name="ms.sourcegitcommit" Value="ea104bc7868886a205b1df30baed6ca34ff70ecb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/20/2019" /><Meta Name="ms.locfileid" Value="68368993" /></Metadata><TypeSignature Language="C#" Value="public class ParallelOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ParallelOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ParallelOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelOptions" />
  <TypeSignature Language="F#" Value="type ParallelOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Хранит параметры, настраивающие работу методов класса <see cref="T:System.Threading.Tasks.Parallel" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

По умолчанию методы <xref:System.Threading.Tasks.Parallel> класса пытаются использовать все доступные процессоры, не поддерживают отмену и предназначены для использования по умолчанию <xref:System.Threading.Tasks.TaskScheduler> (<xref:System.Threading.Tasks.TaskScheduler.Default?displayProperty=nameWithType>). <xref:System.Threading.Tasks.ParallelOptions>включает переопределение значений по умолчанию.

 ]]></format>
    </remarks>
    <threadsafe>Конструктор является потокобезопасным и может использоваться несколькими потоками одновременно для создания нескольких экземпляров. Ни один из других открытых членов не является потокобезопасным.</threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/data-parallelism-task-parallel-library.md">Параллелизм данных (библиотека параллельных задач)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ParallelOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует экземпляр со значениями по умолчанию. <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A>инициализируется значением-1, что означает, что нет верхнего ограничивающего набора для того, насколько нужно применять параллелизм. <xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A>инициализируется с маркером, не допускающим отмену, <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> и инициализируется планировщиком по умолчанию (TaskScheduler. Default).  
  
 Все эти значения по умолчанию могут быть перезаписаны с помощью методов доступа set свойств в экземпляре.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); void set(System::Threading::CancellationToken value); };" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken with get, set" Usage="System.Threading.Tasks.ParallelOptions.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Threading.CancellationToken" />, связанный с этим экземпляром <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
        <value>Токен, связанный с данным экземпляром.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.CancellationToken> Предоставление<xref:System.Threading.Tasks.Parallel> для метода позволяет завершить операцию на раннем этапе. Код, внешний для операции, может отменить маркер, и если операция обнаруживает заданный маркер, она может завершиться раньше, вызывая исключение <xref:System.OperationCanceledException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDegreeOfParallelism">
      <MemberSignature Language="C#" Value="public int MaxDegreeOfParallelism { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDegreeOfParallelism" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDegreeOfParallelism As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDegreeOfParallelism { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDegreeOfParallelism : int with get, set" Usage="System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает максимальное число параллельных задач, допускаемое этим экземпляром <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
        <value>Целое число, представляющее максимальную степень параллелизма.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство влияет на количество одновременных операций, <xref:System.Threading.Tasks.Parallel> выполняемых вызовами методов, которые прошли <xref:System.Threading.Tasks.ParallelOptions> данный экземпляр. <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> Положительное значение свойства ограничивает число параллельных операций до заданного значения. Если значение равно-1, количество параллельно выполняемых операций не ограничено.  
  
 По умолчанию <xref:System.Threading.Tasks.Parallel.For%2A> , <xref:System.Threading.Tasks.Parallel.ForEach%2A> и будет использовать многие потоки, предоставляемые базовым планировщиком, <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> поэтому изменение из значения по умолчанию ограничивает только количество одновременно используемых задач.  
  
 Как правило, изменять этот параметр не требуется. Однако вы можете явно задать его в сценариях расширенного использования:  
  
-   Если известно, что используемый алгоритм не будет масштабироваться сверх определенного числа ядер. Можно задать свойство, чтобы избежать лишних циклов на дополнительных ядрах.  
  
-   При одновременном запуске нескольких алгоритмов и необходимости вручную определять, какую часть системы может использовать каждый алгоритм. Можно задать значение для <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> каждого из них.  
  
-   Если эвристика пула потоков не может определить нужное количество потоков и может привести к внедрению слишком большого количества потоков. Например, в циклических итерациях текста цикла пул потоков может не иметь возможности определить разницу между разумным ходом выполнения или ливелокк или взаимоблокировкой и не может освободить потоки, добавленные для повышения производительности. В этом случае можно задать свойство, чтобы не использовать более разумное число потоков.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Свойство устанавливается равным нулю или значению, которое меньше -1.</exception>
      </Docs>
    </Member>
    <Member MemberName="TaskScheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler TaskScheduler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler TaskScheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskScheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ TaskScheduler { System::Threading::Tasks::TaskScheduler ^ get(); void set(System::Threading::Tasks::TaskScheduler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TaskScheduler : System.Threading.Tasks.TaskScheduler with get, set" Usage="System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Threading.Tasks.TaskScheduler" />, связанный с этим экземпляром <see cref="T:System.Threading.Tasks.ParallelOptions" />. Установка этого свойства на значение NULL означает, что следует использовать текущий планировщик.</summary>
        <value>Планировщик заданий, связанный с данным экземпляром.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
