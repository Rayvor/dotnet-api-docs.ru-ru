<Namespace Name="System.Diagnostics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef6aeaebe2981ce7e1b191a089dab9ae242e488a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70646286" /></Metadata><Docs>
    <summary>В пространстве имен <see cref="N:System.Diagnostics" /> предусмотрены классы, позволяющие осуществлять взаимодействие с системными процессами, журналами событий и счетчиками производительности.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <xref:System.Diagnostics.EventLog> Компонент предоставляет функциональные возможности для записи в журналы событий, чтения записей журнала событий, а также создания и удаления журналов событий и источников событий в сети. <xref:System.Diagnostics.EntryWrittenEventHandler> Предоставляет способ асинхронного взаимодействия с журналами событий. Вспомогательные классы предоставляют доступ к более подробному контролю, включая ограничения разрешений, возможность указывать типы журналов событий (которые управляют типом данных по умолчанию, записываемых с записью журнала событий), а также выполнять итерацию по коллекциям журнала событий. строки. Дополнительные сведения об этих задачах см. в <xref:System.Diagnostics.EventLogPermission>разделе <xref:System.Diagnostics.EventLogEntryType>классы, <xref:System.Diagnostics.EventLogEntryCollection> и.  
  
-   <xref:System.Diagnostics.Process> Класс предоставляет функциональные возможности для мониторинга системных процессов по сети, а также для запуска и завершения процессов локальной системы. Помимо получения списков запущенных процессов (с указанием компьютера, имени процесса или идентификатора процесса) или просмотра сведений о процессе, который в настоящее время имеет доступ к процессору, можно получить подробные сведения о потоках процесса и модули как через <xref:System.Diagnostics.Process> сам класс, так и с помощью взаимодействия <xref:System.Diagnostics.ProcessThread> с классами <xref:System.Diagnostics.ProcessModule> и. <xref:System.Diagnostics.ProcessStartInfo> Класс позволяет указать различные элементы, с помощью которых будет запущен новый процесс, например входные данные, выходные данные и потоки ошибок, рабочие каталоги, команды и аргументы командной строки. Они позволяют точно контролировать поведение процессов. Другие связанные классы позволяют задавать стили окон, приоритеты процессов и потоков, а также взаимодействовать с коллекциями потоков и модулей.  
  
-   Класс позволяет отслеживать производительность системы, в <xref:System.Diagnostics.PerformanceCounterCategory> то время как класс предоставляет способ создания новых пользовательских счетчиков и категорий. <xref:System.Diagnostics.PerformanceCounter> Можно выполнять запись в локальные счетчики и считывать как локальные, так и удаленные счетчики (системные и настраиваемые). Вы можете выполнять выборку счетчиков с помощью <xref:System.Diagnostics.PerformanceCounter> класса и вычислять результаты из последовательных образцов счетчиков производительности <xref:System.Diagnostics.CounterSample> с помощью класса. <xref:System.Diagnostics.CounterCreationData> Класс позволяет создать несколько счетчиков в категории и указать их типы. Другие классы, связанные с компонентом счетчика производительности, предоставляют доступ к коллекциям счетчиков, разрешению счетчиков и типам счетчиков.  
  
 <xref:System.Diagnostics> Пространство имен также предоставляет классы, позволяющие выполнять отладку приложения и отслеживать выполнение кода. Дополнительные сведения см. в описаниях классов <xref:System.Diagnostics.Trace> и <xref:System.Diagnostics.Debug>.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>