<Type Name="ManagementCommitAttribute" FullName="System.Management.Instrumentation.ManagementCommitAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd7c2a99d9dbd28d8933225f4126e3b84e46f656" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70534725" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManagementCommitAttribute : System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementCommitAttribute extends System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementCommitAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementCommitAttribute&#xA;Inherits ManagementMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementCommitAttribute sealed : System::Management::Instrumentation::ManagementMemberAttribute" />
  <TypeSignature Language="F#" Value="type ManagementCommitAttribute = class&#xA;    inherit ManagementMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Атрибут ManagementCommit указывает метод, который вызывается, если необходимо обновить набор свойств чтения и записи в рамках одной атомарной операции.  
  
Примечание. Работа над библиотеками .NET инструментария WMI завершена. В дальнейшем не предвидится никаких разработок, улучшений или обновлений в отношении не связанных с безопасностью проблем, влияющих на эти библиотеки. Для разработки новых приложений следует использовать [интерфейсы API MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства, доступные для чтения и записи класса, помечаются <xref:System.Management.Instrumentation.ManagementConfigurationAttribute> атрибутом. Кроме того, каждое свойство, доступное для чтения и записи, может иметь <xref:System.Management.Instrumentation.ManagementConfigurationType.Apply> один <xref:System.Management.Instrumentation.ManagementConfigurationType.OnCommit>из двух типов: или. Если класс имеет свойства, доступные для чтения и записи, настроенные как OnCommit, класс должен иметь метод, помеченный атрибутом Манажементкоммит. Связанный метод будет вызван, когда заданы все свойства OnCommit.  
  
 Помеченный метод не является потокобезопасным.  
  
 Если ни один из методов не помечен атрибутом Манажементкоммит, он управляет обновлениями конфигурации самостоятельно без указания на то, что обновление завершено.  
  
 Метод, помеченный атрибутом Манажементкоммит, не принимает никаких параметров и имеет тип возвращаемого значения void.  
  
   
  
## Examples  
  
```csharp  
public class Process  
{  
    /// Key attribute marks a key property. Keys are not changeable.  
    /// Keys have to be unique information.  
    [ManagementKey]  
    public int Id   
    {  
        get {    }  
    }  
  
    /// ManagementConfiguration stands for read/write manageable  
    /// property from a read/write field.  
    [ManagementConfiguration]  
    public string UserDefinedString;  
  
    [ManagementCommit]  
    void SaveOnDevice();  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Management.Instrumentation.ManagementConfigurationType" />
    <altmember cref="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementCommitAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementCommitAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementCommitAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.Instrumentation.ManagementCommitAttribute" />. Это конструктор без параметров.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
