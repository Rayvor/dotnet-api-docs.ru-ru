<Type Name="Registry" FullName="Microsoft.Win32.Registry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d9e36d9ba0212aaa2fa07a4ff7ddbbc7129175a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70642806" /></Metadata><TypeSignature Language="C#" Value="public static class Registry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Registry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.Registry" />
  <TypeSignature Language="VB.NET" Value="Public Class Registry" />
  <TypeSignature Language="C++ CLI" Value="public ref class Registry abstract sealed" />
  <TypeSignature Language="F#" Value="type Registry = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ba017-101">Предоставляет объекты <see cref="T:Microsoft.Win32.RegistryKey" />, представляющие корневые разделы в реестре Windows, и методы <see langword="static" /> для доступа к парам "раздел-значение".</span><span class="sxs-lookup"><span data-stu-id="ba017-101">Provides <see cref="T:Microsoft.Win32.RegistryKey" /> objects that represent the root keys in the Windows registry, and <see langword="static" /> methods to access key/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba017-102">Этот класс предоставляет набор стандартных корневых ключей, которые находятся в реестре на компьютерах под Windows.</span><span class="sxs-lookup"><span data-stu-id="ba017-102">This class provides the set of standard root keys found in the registry on machines running Windows.</span></span> <span data-ttu-id="ba017-103">Реестр — это средство хранения сведений о приложениях, пользователях и системных параметрах по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="ba017-103">The registry is a storage facility for information about applications, users, and default system settings.</span></span> <span data-ttu-id="ba017-104">Например, приложения могут использовать реестр для хранения сведений, которые необходимо сохранить после закрытия приложения, и получить доступ к той же информации при повторной загрузке приложения.</span><span class="sxs-lookup"><span data-stu-id="ba017-104">For example, applications can use the registry for storing information that needs to be preserved after the application is closed, and access that same information when the application is reloaded.</span></span> <span data-ttu-id="ba017-105">Например, можно сохранять настройки цвета, расположения экрана или размер окна.</span><span class="sxs-lookup"><span data-stu-id="ba017-105">For instance, you can store color preferences, screen locations, or the size of the window.</span></span> <span data-ttu-id="ba017-106">Эти данные можно контролировать для каждого пользователя, сохраняя их в другом месте реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-106">You can control this data for each user by storing the information in a different location in the registry.</span></span>  
  
 <span data-ttu-id="ba017-107">Базовые или корневые <xref:Microsoft.Win32.RegistryKey> экземпляры, предоставляемые `Registry` классом, обделяют базовый механизм хранения для подразделов и значений в реестре.</span><span class="sxs-lookup"><span data-stu-id="ba017-107">The base, or root <xref:Microsoft.Win32.RegistryKey> instances that are exposed by the `Registry` class delineate the basic storage mechanism for subkeys and values in the registry.</span></span> <span data-ttu-id="ba017-108">Все ключи доступны только для чтения, так как реестр зависит от их существования.</span><span class="sxs-lookup"><span data-stu-id="ba017-108">All keys are read-only because the registry depends on their existence.</span></span> <span data-ttu-id="ba017-109">Ключи, предоставляемые `Registry` :</span><span class="sxs-lookup"><span data-stu-id="ba017-109">The keys exposed by `Registry` are:</span></span>  
  
 <xref:Microsoft.Win32.Registry.CurrentUser>  
 <span data-ttu-id="ba017-110">Хранит сведения о предпочтениях пользователя.</span><span class="sxs-lookup"><span data-stu-id="ba017-110">Stores information about user preferences.</span></span>  
  
 <xref:Microsoft.Win32.Registry.LocalMachine>  
 <span data-ttu-id="ba017-111">Хранит сведения о конфигурации для локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="ba017-111">Stores configuration information for the local machine.</span></span>  
  
 <xref:Microsoft.Win32.Registry.ClassesRoot>  
 <span data-ttu-id="ba017-112">Хранит сведения о типах (и классах) и их свойствах.</span><span class="sxs-lookup"><span data-stu-id="ba017-112">Stores information about types (and classes) and their properties.</span></span>  
  
 <xref:Microsoft.Win32.Registry.Users>  
 <span data-ttu-id="ba017-113">Хранит сведения о пользовательской конфигурации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="ba017-113">Stores information about the default user configuration.</span></span>  
  
 <xref:Microsoft.Win32.Registry.PerformanceData>  
 <span data-ttu-id="ba017-114">Хранит сведения о производительности компонентов программного обеспечения.</span><span class="sxs-lookup"><span data-stu-id="ba017-114">Stores performance information for software components.</span></span>  
  
 <xref:Microsoft.Win32.Registry.CurrentConfig>  
 <span data-ttu-id="ba017-115">Хранит сведения об оборудовании, не относящемся к пользователю.</span><span class="sxs-lookup"><span data-stu-id="ba017-115">Stores non-user-specific hardware information.</span></span>  
  
 <xref:Microsoft.Win32.Registry.DynData>  
 <span data-ttu-id="ba017-116">Хранит динамические данные.</span><span class="sxs-lookup"><span data-stu-id="ba017-116">Stores dynamic data.</span></span>  
  
 <span data-ttu-id="ba017-117">Определив корневой ключ, в котором необходимо хранить или извлекать сведения из реестра, можно использовать <xref:Microsoft.Win32.RegistryKey> класс для добавления или удаления подразделов и управления значениями для данного ключа.</span><span class="sxs-lookup"><span data-stu-id="ba017-117">Once you have identified the root key under which you want to store/retrieve information from the registry, you can use the <xref:Microsoft.Win32.RegistryKey> class to add or remove subkeys, and manipulate the values for a given key.</span></span>  
  
 <span data-ttu-id="ba017-118">Аппаратные устройства могут автоматически размещать данные в реестре с помощью интерфейса Plug and Play.</span><span class="sxs-lookup"><span data-stu-id="ba017-118">Hardware devices can place information in the registry automatically using the Plug and Play interface.</span></span> <span data-ttu-id="ba017-119">Программное обеспечение для установки драйверов устройств может размещать сведения в реестре, записывая их в стандартные API.</span><span class="sxs-lookup"><span data-stu-id="ba017-119">Software for installing device drivers can place information in the registry by writing to standard APIs.</span></span>  
  
## <a name="static-methods-for-getting-and-setting-values"></a><span data-ttu-id="ba017-120">Статические методы для получения и установки значений</span><span class="sxs-lookup"><span data-stu-id="ba017-120">Static Methods for Getting and Setting Values</span></span>  
 <span data-ttu-id="ba017-121"><xref:Microsoft.Win32.Registry> В .NET Framework версии 2,0 класс также содержит `static` <xref:Microsoft.Win32.Registry.GetValue%2A> методы и <xref:Microsoft.Win32.Registry.SetValue%2A> для установки и получения значений из разделов реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-121">In the .NET Framework version 2.0, the <xref:Microsoft.Win32.Registry> class also contains `static`<xref:Microsoft.Win32.Registry.GetValue%2A> and <xref:Microsoft.Win32.Registry.SetValue%2A> methods for setting and retrieving values from registry keys.</span></span> <span data-ttu-id="ba017-122">Эти методы открывают и закрывают разделы реестра при каждом использовании, поэтому они не выполняют, а также аналогичные методы в <xref:Microsoft.Win32.RegistryKey> классе при доступе к большому количеству значений.</span><span class="sxs-lookup"><span data-stu-id="ba017-122">These methods open and close registry keys each time they are used, so they do not perform as well as analogous methods in the <xref:Microsoft.Win32.RegistryKey> class, when you access a large number of values.</span></span>  
  
 <span data-ttu-id="ba017-123"><xref:Microsoft.Win32.RegistryKey> Класс также предоставляет методы, позволяющие задать параметры безопасности управления доступом Windows для разделов реестра, чтобы проверить тип данных значения перед его получением и удалить ключи.</span><span class="sxs-lookup"><span data-stu-id="ba017-123">The <xref:Microsoft.Win32.RegistryKey> class also provides methods that allow you to set Windows access control security for registry keys, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba017-124">Этот раздел содержит два примера кода.</span><span class="sxs-lookup"><span data-stu-id="ba017-124">This section contains two code examples.</span></span> <span data-ttu-id="ba017-125">В первом примере показаны корневые ключи, а во втором примере `static` демонстрируются <xref:Microsoft.Win32.Registry.SetValue%2A> <xref:Microsoft.Win32.Registry.GetValue%2A> методы и.</span><span class="sxs-lookup"><span data-stu-id="ba017-125">The first example demonstrates root keys, and the second example demonstrates the `static`<xref:Microsoft.Win32.Registry.GetValue%2A> and <xref:Microsoft.Win32.Registry.SetValue%2A> methods.</span></span>  
  
 <span data-ttu-id="ba017-126">Пример 1</span><span class="sxs-lookup"><span data-stu-id="ba017-126">Example 1</span></span>  
  
 <span data-ttu-id="ba017-127">В следующем примере кода показано, как получить подразделы раздела HKEY_USERS и распечатать их имена на экране.</span><span class="sxs-lookup"><span data-stu-id="ba017-127">The following code example demonstrates how to retrieve the subkeys of the HKEY_USERS key, and print their names to the screen.</span></span> <span data-ttu-id="ba017-128"><xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Используйте метод, чтобы создать экземпляр определенного подраздела, представляющего интерес.</span><span class="sxs-lookup"><span data-stu-id="ba017-128">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="ba017-129">Затем можно использовать другие операции в `RegistryKey` для управления этим ключом.</span><span class="sxs-lookup"><span data-stu-id="ba017-129">You can then use other operations in `RegistryKey` to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ba017-130">Пример 2</span><span class="sxs-lookup"><span data-stu-id="ba017-130">Example 2</span></span>  
  
 <span data-ttu-id="ba017-131">Следующий пример кода сохраняет значения нескольких типов данных в примере ключа, создавая ключ, как это делает, а затем извлекает и отображает значения.</span><span class="sxs-lookup"><span data-stu-id="ba017-131">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="ba017-132">В примере демонстрируется хранение и извлечение пары "имя-значение" по умолчанию (без имени) и использования `defaultValue` , если пара "имя-значение" не существует.</span><span class="sxs-lookup"><span data-stu-id="ba017-132">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.RegistryHive" />
    <altmember cref="T:Microsoft.Win32.RegistryKey" />
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey ClassesRoot;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassesRoot As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ ClassesRoot;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClassesRoot : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.ClassesRoot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba017-133">Определяет типы (или классы) документов и свойства, связанные с этими типами.</span><span class="sxs-lookup"><span data-stu-id="ba017-133">Defines the types (or classes) of documents and the properties associated with those types.</span></span> <span data-ttu-id="ba017-134">Это поле считывает базовый раздел реестра Windows HKEY_CLASSES_ROOT.</span><span class="sxs-lookup"><span data-stu-id="ba017-134">This field reads the Windows registry base key HKEY_CLASSES_ROOT.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba017-135">Как обычные приложения, так и приложения OLE используют данные, хранящиеся в этом разделе.</span><span class="sxs-lookup"><span data-stu-id="ba017-135">Both conventional applications and OLE applications use data that is stored under this key.</span></span> <span data-ttu-id="ba017-136">Этот ключ также обеспечивает обратную совместимость с базой данных регистрации Windows 3,1, сохраняя сведения для поддержки DDE и OLE.</span><span class="sxs-lookup"><span data-stu-id="ba017-136">This key also provides backward compatibility with the Windows 3.1 registration database by storing information for DDE and OLE support.</span></span> <span data-ttu-id="ba017-137">Средства просмотра файлов и расширения пользовательского интерфейса хранят идентификаторы классов OLE в этом ключе, а серверы обработки регистрируются в этом разделе.</span><span class="sxs-lookup"><span data-stu-id="ba017-137">File viewers and user interface extensions store their OLE class identifiers in this key, and processing servers are registered in this key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba017-138">В следующем примере показано, как получить подразделы этого раздела и выводит на экран их имена.</span><span class="sxs-lookup"><span data-stu-id="ba017-138">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="ba017-139"><xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Используйте метод, чтобы создать экземпляр определенного подраздела, представляющего интерес.</span><span class="sxs-lookup"><span data-stu-id="ba017-139">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="ba017-140">Затем можно использовать другие операции в <xref:Microsoft.Win32.RegistryKey> для управления этим ключом.</span><span class="sxs-lookup"><span data-stu-id="ba017-140">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.ClassesRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentConfig;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentConfig As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentConfig;" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentConfig : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.CurrentConfig" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba017-141">Содержит сведения о конфигурации, относящиеся к оборудованию, не связанному с конкретным пользователем.</span><span class="sxs-lookup"><span data-stu-id="ba017-141">Contains configuration information pertaining to the hardware that is not specific to the user.</span></span> <span data-ttu-id="ba017-142">Это поле считывает базовый раздел реестра Windows HKEY_CURRENT_CONFIG.</span><span class="sxs-lookup"><span data-stu-id="ba017-142">This field reads the Windows registry base key HKEY_CURRENT_CONFIG.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba017-143">Этот элемент сопоставляется с подразделом <xref:Microsoft.Win32.Registry.LocalMachine>в.</span><span class="sxs-lookup"><span data-stu-id="ba017-143">This member is mapped to a subkey within <xref:Microsoft.Win32.Registry.LocalMachine>.</span></span>  
  
 <span data-ttu-id="ba017-144">Примером использования этого члена является приложение, в котором хранится другое имя сервера для своих данных в зависимости от того, подключена ли система к сети.</span><span class="sxs-lookup"><span data-stu-id="ba017-144">An example of using this member is an application that stores a different server name for its data depending on whether the system is attached to a network.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba017-145">В следующем примере показано, как получить подразделы этого раздела и выводит на экран их имена.</span><span class="sxs-lookup"><span data-stu-id="ba017-145">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="ba017-146"><xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Используйте метод, чтобы создать экземпляр определенного подраздела, представляющего интерес.</span><span class="sxs-lookup"><span data-stu-id="ba017-146">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="ba017-147">Затем можно использовать другие операции в <xref:Microsoft.Win32.RegistryKey> для управления этим ключом.</span><span class="sxs-lookup"><span data-stu-id="ba017-147">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentConfig Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentUser;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentUser As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentUser;" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentUser : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.CurrentUser" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba017-148">Содержит сведения о текущих пользовательских параметрах.</span><span class="sxs-lookup"><span data-stu-id="ba017-148">Contains information about the current user preferences.</span></span> <span data-ttu-id="ba017-149">Это поле считывает базовый раздел реестра Windows HKEY_CURRENT_USER.</span><span class="sxs-lookup"><span data-stu-id="ba017-149">This field reads the Windows registry base key HKEY_CURRENT_USER.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba017-150">Сведения, хранящиеся в этом разделе, включают параметры переменных среды и данные о группах программ, цветах, принтерах, сетевых подключениях и предпочтениях приложений.</span><span class="sxs-lookup"><span data-stu-id="ba017-150">Information stored in this key includes the settings of environment variables and data about program groups, colors, printers, network connections, and application preferences.</span></span> <span data-ttu-id="ba017-151">Этот ключ упрощает установку параметров текущего пользователя.</span><span class="sxs-lookup"><span data-stu-id="ba017-151">This key makes it easier to establish the current user's settings.</span></span> <span data-ttu-id="ba017-152">В этом разделе поставщики программного обеспечения хранят текущие предпочтения пользователя для использования в своих приложениях.</span><span class="sxs-lookup"><span data-stu-id="ba017-152">In this key, software vendors store the current user-specific preferences to be used within their applications.</span></span> <span data-ttu-id="ba017-153">Корпорация Майкрософт, например, создает ключ HKEY_CURRENT_USER\Software\Microsoft для используемых приложений, при этом каждое приложение создается в собственном подразделе в разделе Microsoft Key.</span><span class="sxs-lookup"><span data-stu-id="ba017-153">Microsoft, for example, creates the HKEY_CURRENT_USER\Software\Microsoft key for its applications to use, with each application creating its own subkey under the Microsoft key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba017-154">В следующем примере показано, как получить подразделы этого раздела и выводит на экран их имена.</span><span class="sxs-lookup"><span data-stu-id="ba017-154">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="ba017-155"><xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Используйте метод, чтобы создать экземпляр определенного подраздела, представляющего интерес.</span><span class="sxs-lookup"><span data-stu-id="ba017-155">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="ba017-156">Затем можно использовать другие операции в <xref:Microsoft.Win32.RegistryKey> для управления этим ключом.</span><span class="sxs-lookup"><span data-stu-id="ba017-156">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.CurrentUser Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentUser Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentUser Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey DynData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.DynData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DynData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ DynData;" />
      <MemberSignature Language="F#" Value=" staticval mutable DynData : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.DynData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use PerformanceData instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The DynData registry key only works on Win9x, which is no longer supported by the CLR.  On NT-based operating systems, use the PerformanceData registry key instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba017-157">Содержит динамические данные реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-157">Contains dynamic registry data.</span></span> <span data-ttu-id="ba017-158">Это поле считывает базовый раздел реестра Windows HKEY_DYN_DATA.</span><span class="sxs-lookup"><span data-stu-id="ba017-158">This field reads the Windows registry base key HKEY_DYN_DATA.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba017-159">Реестр Windows 98/Windows Me поддерживает как статические данные (которые хранятся на диске в реестре), так и динамические данные (которые часто меняются, например статистика о производительности).</span><span class="sxs-lookup"><span data-stu-id="ba017-159">The Windows 98/Windows Me registry supports both static data (which is stored on disk in the registry) and dynamic data (which changes frequently, such as performance statistics).</span></span> <span data-ttu-id="ba017-160">Эта область динамических данных — это механизм, позволяющий драйверам виртуальных устройств (VxD) предоставлять данные в режиме реального времени приложениям Win32, которые могут выполняться удаленно, а также локально.</span><span class="sxs-lookup"><span data-stu-id="ba017-160">This dynamic data area is the mechanism that allows Virtual Device Drivers (VxDs) to provide real-time data to Win32 applications that can run remotely as well as locally.</span></span> <span data-ttu-id="ba017-161">Он также позволяет системному монитору предоставлять статистику производительности для удаленных систем Windows 98/Windows Me.</span><span class="sxs-lookup"><span data-stu-id="ba017-161">It also allows the system monitor to provide performance statistics on remote Windows 98/Windows Me systems.</span></span>  
  
 <span data-ttu-id="ba017-162">VxD не ограничиваются данными производительности.</span><span class="sxs-lookup"><span data-stu-id="ba017-162">VxDs are not limited to performance data.</span></span> <span data-ttu-id="ba017-163">Они могут предоставить любые данные, которые они хотят передать из кольца 0 в кольцо 3, без монопольного использования ЦП.</span><span class="sxs-lookup"><span data-stu-id="ba017-163">They can provide any data they want to pass from Ring 0 to Ring 3 efficiently without monopolizing the CPU.</span></span> <span data-ttu-id="ba017-164">Реестр поддерживает динамические данные, сохраняя указатель на функцию, которая возвращает значение (или несколько значений).</span><span class="sxs-lookup"><span data-stu-id="ba017-164">The registry supports dynamic data by storing a pointer to a function that returns a value (or many values).</span></span> <span data-ttu-id="ba017-165">Когда вызов реестра запрашивает значения, связанные с динамическим ключом, вызывается эта функция для возврата желаемого значения или значений.</span><span class="sxs-lookup"><span data-stu-id="ba017-165">When a Registry call queries values associated with a dynamic key, that function is called to return the desired value or values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba017-166">Динамические ключи появились в Microsoft Windows 95 для управления динамическими данными реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-166">Dynamic keys were introduced in Microsoft Windows 95 to handle dynamic Registry data.</span></span> <span data-ttu-id="ba017-167">Они поддерживаются только в Windows 98 и Windows Me.</span><span class="sxs-lookup"><span data-stu-id="ba017-167">They are supported only in Windows 98/Windows Me.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba017-168">В следующем примере показано, как получить подразделы этого раздела и выводит на экран их имена.</span><span class="sxs-lookup"><span data-stu-id="ba017-168">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="ba017-169"><xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Используйте метод, чтобы создать экземпляр определенного подраздела, представляющего интерес.</span><span class="sxs-lookup"><span data-stu-id="ba017-169">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="ba017-170">Затем можно использовать другие операции в <xref:Microsoft.Win32.RegistryKey> для управления этим ключом.</span><span class="sxs-lookup"><span data-stu-id="ba017-170">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span> <span data-ttu-id="ba017-171">Обратите внимание, что этот пример может не возвращать результатов, так как динамические данные могут быть недоступны или вы не работаете с Windows 98/ME.</span><span class="sxs-lookup"><span data-stu-id="ba017-171">Note that this example can return no results, since there might not be dynamic data available, or you might not be running Windows 98/ME.</span></span> <span data-ttu-id="ba017-172">Использование этого ключа может вызвать ошибку в других системах.</span><span class="sxs-lookup"><span data-stu-id="ba017-172">Using this key may cause an error on other systems.</span></span>  
  
 [!code-cpp[Classic Registry.DynData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.DynData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.DynData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.DynData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ba017-173">Операционная система не поддерживает платформу динамических данных, то есть она не может быть Windows 98, Windows 98 Second Edition или Windows Millennium Edition (Windows Me).</span><span class="sxs-lookup"><span data-stu-id="ba017-173">The operating system does not support dynamic data; that is, it is not Windows 98, Windows 98 Second Edition, or Windows Millennium Edition (Windows Me).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public static object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="static member GetValue : string * string * obj -&gt; obj" Usage="Microsoft.Win32.Registry.GetValue (keyName, valueName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="valueName" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultValue" Type="System.Object" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="ba017-174">Полный путь к разделу реестра, начинающийся с правильного корневого раздела реестра, такого как HKEY_CURRENT_USER.</span><span class="sxs-lookup"><span data-stu-id="ba017-174">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span></span></param>
        <param name="valueName"><span data-ttu-id="ba017-175">Имя в паре "имя-значение".</span><span class="sxs-lookup"><span data-stu-id="ba017-175">The name of the name/value pair.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="ba017-176">Возвращаемое значение, если параметр <paramref name="valueName" /> не существует.</span><span class="sxs-lookup"><span data-stu-id="ba017-176">The value to return if <paramref name="valueName" /> does not exist.</span></span></param>
        <summary><span data-ttu-id="ba017-177">Извлекает значение, связанное с указанным именем, в указанном разделе реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-177">Retrieves the value associated with the specified name, in the specified registry key.</span></span> <span data-ttu-id="ba017-178">Если имя не найдено в указанном разделе, возвращает предоставленное значение по умолчанию или значение <see langword="null" />, если указанный раздел не существует.</span><span class="sxs-lookup"><span data-stu-id="ba017-178">If the name is not found in the specified key, returns a default value that you provide, or <see langword="null" /> if the specified key does not exist.</span></span></summary>
        <returns><span data-ttu-id="ba017-179">Значение <see langword="null" />, если вложенный раздел, заданный параметром <paramref name="keyName" />, не существует; в противном случае — значение, связанное с параметром <paramref name="valueName" />, или <paramref name="defaultValue" />, если значение параметра <paramref name="valueName" /> не найдено.</span><span class="sxs-lookup"><span data-stu-id="ba017-179"><see langword="null" /> if the subkey specified by <paramref name="keyName" /> does not exist; otherwise, the value associated with <paramref name="valueName" />, or <paramref name="defaultValue" /> if <paramref name="valueName" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba017-180">Строка `valueName` не учитывает регистр.</span><span class="sxs-lookup"><span data-stu-id="ba017-180">The string `valueName` is not case-sensitive.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba017-181">Раздел реестра может содержать одно значение, не связанное ни с одним именем.</span><span class="sxs-lookup"><span data-stu-id="ba017-181">A registry key can contain one value that is not associated with any name.</span></span> <span data-ttu-id="ba017-182">Если это неименованное значение отображается в редакторе реестра, вместо имени отображается строка "(по умолчанию)".</span><span class="sxs-lookup"><span data-stu-id="ba017-182">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="ba017-183">Чтобы получить это безымянное значение, укажите либо `null` пустую строку ("") для. `valueName`</span><span class="sxs-lookup"><span data-stu-id="ba017-183">To retrieve this unnamed value, specify either `null` or the empty string ("") for `valueName`.</span></span>  
  
 <span data-ttu-id="ba017-184">Допустимые корневые имена: HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG и HKEY_DYN_DATA.</span><span class="sxs-lookup"><span data-stu-id="ba017-184">Valid root names are HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</span></span> <span data-ttu-id="ba017-185">Например, в Visual Basic строка "HKEY_CURRENT_USER\MyTestKey" обращается к парам "ключ-значение" для подраздела "Митесткэй" в корне HKEY_CURRENT_USER.</span><span class="sxs-lookup"><span data-stu-id="ba017-185">For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" accesses key/value pairs for the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</span></span>  
  
 <span data-ttu-id="ba017-186">Когда метод получает расширяемые строковые значения (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), он расширяет строки среды, используя данные из локальной среды. <xref:Microsoft.Win32.RegistryKey.GetValue%2A></span><span class="sxs-lookup"><span data-stu-id="ba017-186">When the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method retrieves expandable string values (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), it expands environment strings using data from the local environment.</span></span> <span data-ttu-id="ba017-187">Если значение, содержащее расширяемые ссылки на переменные среды, сохранено как строка (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), а не как расширяемая строка (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> не расширяет ее.</span><span class="sxs-lookup"><span data-stu-id="ba017-187">If a value containing expandable references to environment variables has been stored as a string (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), rather than as an expandable string (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not expand it.</span></span> <span data-ttu-id="ba017-188">Вы можете развернуть такую строку после получения, вызвав <xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ba017-188">You can expand such a string after it has been retrieved by calling the <xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba017-189">Рекомендуемый способ извлечения данных из HKEY_PERFORMANCE_DATA — использовать класс, <xref:System.Diagnostics.PerformanceCounter> а <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> не метод.</span><span class="sxs-lookup"><span data-stu-id="ba017-189">The recommended way to retrieve data from HKEY_PERFORMANCE_DATA is to use the <xref:System.Diagnostics.PerformanceCounter> class rather than the <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ba017-190">Методы <xref:Microsoft.Win32.Registry.GetValue%2A> <xref:Microsoft.Win32.RegistryKey> и <xref:Microsoft.Win32.Registry.SetValue%2A> открывают и закрывают разделы реестра при каждом использовании, поэтому они не выполняются, а также методы класса при доступе к большому количеству значений.</span><span class="sxs-lookup"><span data-stu-id="ba017-190">The <xref:Microsoft.Win32.Registry.GetValue%2A> and <xref:Microsoft.Win32.Registry.SetValue%2A> methods open and close registry keys each time they are used, so they do not perform as well as the methods of the <xref:Microsoft.Win32.RegistryKey> class if you access a large number of values.</span></span>  
  
 <span data-ttu-id="ba017-191"><xref:Microsoft.Win32.RegistryKey>также предоставляет методы, позволяющие добавить список управления доступом (ACL) к разделу реестра, чтобы проверить тип данных значения перед его получением и удалить ключи.</span><span class="sxs-lookup"><span data-stu-id="ba017-191"><xref:Microsoft.Win32.RegistryKey> also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba017-192">Следующий пример кода сохраняет значения нескольких типов данных в примере ключа, создавая ключ, как это делает, а затем извлекает и отображает значения.</span><span class="sxs-lookup"><span data-stu-id="ba017-192">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="ba017-193">В примере демонстрируется хранение и извлечение пары "имя-значение" по умолчанию (без имени) и использования `defaultValue` , если пара "имя-значение" не существует.</span><span class="sxs-lookup"><span data-stu-id="ba017-193">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ba017-194">У пользователя отсутствуют разрешения, необходимые для чтения из раздела реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-194">The user does not have the permissions required to read from the registry key.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ba017-195">Раздел <see cref="T:Microsoft.Win32.RegistryKey" />, содержащий заданное значение, был помечен для удаления.</span><span class="sxs-lookup"><span data-stu-id="ba017-195">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba017-196">Параметр <paramref name="keyName" /> не начинается с правильного корневого раздела реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-196"><paramref name="keyName" /> does not begin with a valid registry root.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="ba017-197">для чтения из реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-197">to read from the registry.</span></span> <span data-ttu-id="ba017-198">Связанное перечисление:<see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="ba017-198">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="ba017-199">для чтения раздела реестра типа REG_EXPAND_SZ.</span><span class="sxs-lookup"><span data-stu-id="ba017-199">to read a registry key of type REG_EXPAND_SZ.</span></span> <span data-ttu-id="ba017-200">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="ba017-200">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey LocalMachine;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalMachine As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ LocalMachine;" />
      <MemberSignature Language="F#" Value=" staticval mutable LocalMachine : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.LocalMachine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba017-201">Содержит данные о конфигурации для локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="ba017-201">Contains the configuration data for the local machine.</span></span> <span data-ttu-id="ba017-202">Это поле считывает базовый раздел реестра Windows HKEY_LOCAL_MACHINE.</span><span class="sxs-lookup"><span data-stu-id="ba017-202">This field reads the Windows registry base key HKEY_LOCAL_MACHINE.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba017-203">`LocalMachine`содержит пять ключей:</span><span class="sxs-lookup"><span data-stu-id="ba017-203">`LocalMachine` contains five keys:</span></span>  
  
 <span data-ttu-id="ba017-204">Оборудование</span><span class="sxs-lookup"><span data-stu-id="ba017-204">Hardware</span></span>  
 <span data-ttu-id="ba017-205">Описывает физическое оборудование компьютера, способ, которым драйверы устройств используют это оборудование, а также сопоставления и связанные данные, связывающие драйверы режима ядра с кодом пользовательского режима.</span><span class="sxs-lookup"><span data-stu-id="ba017-205">Describes the physical hardware in the computer, the way device drivers use that hardware, and mappings and related data that link kernel-mode drivers with user-mode code.</span></span> <span data-ttu-id="ba017-206">Все данные в этом ключе создаются заново при каждом запуске системы.</span><span class="sxs-lookup"><span data-stu-id="ba017-206">All data in this key is recreated each time the system is started.</span></span> <span data-ttu-id="ba017-207">Подраздел Description описывает фактическое оборудование компьютера.</span><span class="sxs-lookup"><span data-stu-id="ba017-207">The Description subkey describes the actual computer hardware.</span></span> <span data-ttu-id="ba017-208">Подраздел Девицемап содержит различные данные в форматах, характерных для определенных классов драйверов.</span><span class="sxs-lookup"><span data-stu-id="ba017-208">The DeviceMap subkey contains miscellaneous data in formats specific to particular classes of drivers.</span></span> <span data-ttu-id="ba017-209">Подраздел Ресаурцемап описывает, какие драйверы устройств заявляют, какие аппаратные ресурсы.</span><span class="sxs-lookup"><span data-stu-id="ba017-209">The ResourceMap subkey describes which device drivers claim which hardware resources.</span></span> <span data-ttu-id="ba017-210">Программа диагностики Windows NT (Винмсдп. exe) может сообщать о ее содержимом в удобной для чтения форме.</span><span class="sxs-lookup"><span data-stu-id="ba017-210">The Windows NT Diagnostics program (Winmsdp.exe) can report on its contents in an easy-to-read form.</span></span>  
  
 <span data-ttu-id="ba017-211">SAM</span><span class="sxs-lookup"><span data-stu-id="ba017-211">SAM</span></span>  
 <span data-ttu-id="ba017-212">База данных служб каталогов сведений о безопасности для учетных записей пользователей и групп, а также для доменов в Windows 2000 Server (SAM является диспетчером учетных записей безопасности, называемым базой данных служб каталогов).</span><span class="sxs-lookup"><span data-stu-id="ba017-212">The directory services database of security information for user and group accounts, and for the domains in Windows 2000 Server (SAM is the Security Account Manager, known as the directory services database).</span></span>  
  
 <span data-ttu-id="ba017-213">Безопасность</span><span class="sxs-lookup"><span data-stu-id="ba017-213">Security</span></span>  
 <span data-ttu-id="ba017-214">Содержит локальную политику безопасности, например специальные права пользователя.</span><span class="sxs-lookup"><span data-stu-id="ba017-214">Contains the local security policy, such as specific user rights.</span></span> <span data-ttu-id="ba017-215">Этот ключ используется только подсистемой безопасности Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="ba017-215">This key is used only by the Windows 2000 security subsystem.</span></span>  
  
 <span data-ttu-id="ba017-216">Программное обеспечение</span><span class="sxs-lookup"><span data-stu-id="ba017-216">Software</span></span>  
 <span data-ttu-id="ba017-217">База данных программного обеспечения для компьютера.</span><span class="sxs-lookup"><span data-stu-id="ba017-217">The per-computer software database.</span></span> <span data-ttu-id="ba017-218">Этот раздел содержит данные о программном обеспечении, установленном на локальном компьютере, а также различные элементы различных данных конфигурации.</span><span class="sxs-lookup"><span data-stu-id="ba017-218">This key contains data about software installed on the local computer, along with various items of miscellaneous configuration data.</span></span>  
  
 <span data-ttu-id="ba017-219">Система</span><span class="sxs-lookup"><span data-stu-id="ba017-219">System</span></span>  
 <span data-ttu-id="ba017-220">Управляет запуском системы, загрузкой драйверов устройств, службами Windows 2000 и поведением операционной системы.</span><span class="sxs-lookup"><span data-stu-id="ba017-220">Controls system startup, device driver loading, Windows 2000 services, and operating system behavior.</span></span>  
  
 <span data-ttu-id="ba017-221">По соглашению, если аналогичные данные существуют <xref:Microsoft.Win32.Registry.CurrentUser> в и <xref:Microsoft.Win32.Registry.LocalMachine>под, данные в <xref:Microsoft.Win32.Registry.CurrentUser> имеют приоритет.</span><span class="sxs-lookup"><span data-stu-id="ba017-221">By convention, if similar data exists under <xref:Microsoft.Win32.Registry.CurrentUser> and under <xref:Microsoft.Win32.Registry.LocalMachine>, the data in <xref:Microsoft.Win32.Registry.CurrentUser> takes precedence.</span></span> <span data-ttu-id="ba017-222">Однако значения в этом ключе также могут расширять (а не заменить) данные в Registry. LocalMachine.</span><span class="sxs-lookup"><span data-stu-id="ba017-222">However, values in this key can also extend (rather than replace) data in Registry.LocalMachine.</span></span> <span data-ttu-id="ba017-223">Кроме того, некоторые элементы (например, записи загрузки драйвера устройства) не имеют смысла, если они происходят вне Registry. LocalMachine.</span><span class="sxs-lookup"><span data-stu-id="ba017-223">Also, some items (such as device driver loading entries) are meaningless if they occur outside of Registry.LocalMachine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba017-224">В следующем примере показано, как получить подразделы этого раздела и выводит на экран их имена.</span><span class="sxs-lookup"><span data-stu-id="ba017-224">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="ba017-225"><xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Используйте метод, чтобы создать экземпляр определенного подраздела, представляющего интерес.</span><span class="sxs-lookup"><span data-stu-id="ba017-225">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="ba017-226">Затем можно использовать другие операции в <xref:Microsoft.Win32.RegistryKey> для управления этим ключом.</span><span class="sxs-lookup"><span data-stu-id="ba017-226">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.LocalMachine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.LocalMachine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.LocalMachine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey PerformanceData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PerformanceData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ PerformanceData;" />
      <MemberSignature Language="F#" Value=" staticval mutable PerformanceData : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.PerformanceData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba017-227">Содержит сведения о производительности для компонентов программного обеспечения.</span><span class="sxs-lookup"><span data-stu-id="ba017-227">Contains performance information for software components.</span></span> <span data-ttu-id="ba017-228">Это поле считывает базовый раздел реестра Windows HKEY_PERFORMANCE_DATA.</span><span class="sxs-lookup"><span data-stu-id="ba017-228">This field reads the Windows registry base key HKEY_PERFORMANCE_DATA.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba017-229">Каждый программный компонент создает ключи для своих объектов, счетчики при установке и записывает данные счетчика во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="ba017-229">Each software component creates keys for its objects, counters when it is installed, and writes counter data while it is executing.</span></span> <span data-ttu-id="ba017-230">Доступ к этим данным можно получить так же, как к любым другим данным реестра, <xref:Microsoft.Win32.RegistryKey> с помощью функций.</span><span class="sxs-lookup"><span data-stu-id="ba017-230">You can access this data as you would access any other registry data, using the <xref:Microsoft.Win32.RegistryKey> functions.</span></span>  
  
 <span data-ttu-id="ba017-231">Несмотря на то, что для получения данных о производительности используется реестр, данные не хранятся в базе данных реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-231">Although you use the registry to collect performance data, the data is not stored in the registry database.</span></span> <span data-ttu-id="ba017-232">Вместо этого доступ к реестру с помощью этого ключа приводит к тому, что система соберет данные из соответствующих диспетчеров системных объектов.</span><span class="sxs-lookup"><span data-stu-id="ba017-232">Instead, accessing the registry with this key causes the system to collect the data from the appropriate system object managers.</span></span>  
  
 <span data-ttu-id="ba017-233">Чтобы получить данные о производительности из локальной системы, используйте <xref:Microsoft.Win32.RegistryKey.GetValue%2A> метод с ключом Registry. PerformanceData.</span><span class="sxs-lookup"><span data-stu-id="ba017-233">To obtain performance data from the local system, use the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method, with the Registry.PerformanceData key.</span></span> <span data-ttu-id="ba017-234">Первый вызов открывает ключ (вам не нужно явно открывать этот ключ).</span><span class="sxs-lookup"><span data-stu-id="ba017-234">The first call opens the key (you do not need to explicitly open the key first).</span></span> <span data-ttu-id="ba017-235">Однако не забудьте использовать <xref:Microsoft.Win32.RegistryKey.Close%2A> метод, чтобы закрыть маркер ключа по завершении получения данных о производительности.</span><span class="sxs-lookup"><span data-stu-id="ba017-235">However, be sure to use the <xref:Microsoft.Win32.RegistryKey.Close%2A> method to close the handle to the key when you are finished obtaining performance data.</span></span> <span data-ttu-id="ba017-236">Пользователь не может установить или удалить программный компонент, пока используются его данные о производительности.</span><span class="sxs-lookup"><span data-stu-id="ba017-236">The user cannot install or remove a software component while its performance data is in use.</span></span>  
  
 <span data-ttu-id="ba017-237">Для получения данных о производительности из удаленной системы необходимо использовать <xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A> метод с именем компьютера удаленной системы и ключом реестра. PerformanceData.</span><span class="sxs-lookup"><span data-stu-id="ba017-237">To obtain performance data from a remote system, you must use the <xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A> method, with the computer name of the remote system and the Registry.PerformanceData key.</span></span> <span data-ttu-id="ba017-238">Этот вызов извлекает ключ, представляющий данные о производительности для удаленной системы.</span><span class="sxs-lookup"><span data-stu-id="ba017-238">This call retrieves a key representing the performance data for the remote system.</span></span> <span data-ttu-id="ba017-239">Чтобы получить данные, вызовите <xref:Microsoft.Win32.RegistryKey.GetValue%2A> с помощью этого ключа, а не ключа Registry. PerformanceData.</span><span class="sxs-lookup"><span data-stu-id="ba017-239">To retrieve the data, call <xref:Microsoft.Win32.RegistryKey.GetValue%2A> using this key, rather than the Registry.PerformanceData key.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba017-240">В Windows Server 2003 пользователь должен по крайней мере принадлежать к группе пользователей системного монитора, чтобы получить доступ к подразделам этого базового ключа.</span><span class="sxs-lookup"><span data-stu-id="ba017-240">On Windows Server 2003, a user must at least belong to the Performance Monitor Users group in order to access subkeys of this base key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba017-241">В следующем примере показано, как получить подразделы этого раздела и выводит на экран их имена.</span><span class="sxs-lookup"><span data-stu-id="ba017-241">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="ba017-242"><xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Используйте метод, чтобы создать экземпляр определенного подраздела, представляющего интерес.</span><span class="sxs-lookup"><span data-stu-id="ba017-242">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="ba017-243">Затем можно использовать другие операции в <xref:Microsoft.Win32.RegistryKey> для управления этим ключом.</span><span class="sxs-lookup"><span data-stu-id="ba017-243">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span> <span data-ttu-id="ba017-244">Обратите внимание, что этот пример часто не возвращает результатов, так как могут отсутствовать данные о производительности.</span><span class="sxs-lookup"><span data-stu-id="ba017-244">Note that this example can often return no results, since there might be no performance data.</span></span>  
  
 [!code-cpp[Classic Registry.PerformanceData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.PerformanceData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.PerformanceData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba017-245">Задает значение пары "имя-значение" в разделе реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-245">Sets the value of a name/value pair in a registry key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba017-246">Следующий пример кода сохраняет значения нескольких типов данных в примере ключа, создавая ключ, как это делает, а затем извлекает и отображает значения.</span><span class="sxs-lookup"><span data-stu-id="ba017-246">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="ba017-247">В примере демонстрируется хранение и извлечение пары "имя-значение" по умолчанию (без имени) и использования `defaultValue` , если пара "имя-значение" не существует.</span><span class="sxs-lookup"><span data-stu-id="ba017-247">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetValue : string * string * obj -&gt; unit" Usage="Microsoft.Win32.Registry.SetValue (keyName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="valueName" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="ba017-248">Полный путь к разделу реестра, начинающийся с правильного корневого раздела реестра, такого как HKEY_CURRENT_USER.</span><span class="sxs-lookup"><span data-stu-id="ba017-248">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span></span></param>
        <param name="valueName"><span data-ttu-id="ba017-249">Имя в паре "имя-значение".</span><span class="sxs-lookup"><span data-stu-id="ba017-249">The name of the name/value pair.</span></span></param>
        <param name="value"><span data-ttu-id="ba017-250">Сохраняемое значение.</span><span class="sxs-lookup"><span data-stu-id="ba017-250">The value to be stored.</span></span></param>
        <summary><span data-ttu-id="ba017-251">Задает указанное значение пары "имя-значение" для указанного раздела реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-251">Sets the specified name/value pair on the specified registry key.</span></span> <span data-ttu-id="ba017-252">Если указанный раздел не существует, он будет создан.</span><span class="sxs-lookup"><span data-stu-id="ba017-252">If the specified key does not exist, it is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba017-253">Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] `valueName` , параметр больше не ограничен 255 символами, однако в `keyName` параметре по-своему сохраняется ограничение 255 символов.</span><span class="sxs-lookup"><span data-stu-id="ba017-253">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the `valueName` parameter is no longer restricted to a maximum of 255 characters; however, the `keyName` parameter continues to have the 255-character restriction.</span></span>  
  
 <span data-ttu-id="ba017-254">Так как многие значения могут храниться в каждом ключе реестра, необходимо использовать `valueName` параметр, чтобы указать конкретное значение, которое необходимо задать.</span><span class="sxs-lookup"><span data-stu-id="ba017-254">Because many values can be stored in each key in the registry, you must use the `valueName` parameter to specify the particular value you want to set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba017-255">Раздел реестра может содержать одно значение, не связанное ни с одним именем.</span><span class="sxs-lookup"><span data-stu-id="ba017-255">A registry key can contain one value that is not associated with any name.</span></span> <span data-ttu-id="ba017-256">Если это неименованное значение отображается в редакторе реестра, вместо имени отображается строка "(по умолчанию)".</span><span class="sxs-lookup"><span data-stu-id="ba017-256">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="ba017-257">Чтобы задать это безымянное значение, укажите либо `null` пустую строку ("") для. `valueName`</span><span class="sxs-lookup"><span data-stu-id="ba017-257">To set this unnamed value, specify either `null` or the empty string ("") for `valueName`.</span></span>  
  
 <span data-ttu-id="ba017-258">Если `valueName` не существует в ключе, он создается, а связанное значение устанавливается в `value`.</span><span class="sxs-lookup"><span data-stu-id="ba017-258">If `valueName` does not exist in the key, it is created and the associated value is set to `value`.</span></span>  
  
 <span data-ttu-id="ba017-259">Если `keyName` указывает, что подраздел не существует, подраздел создается в указанном корне.</span><span class="sxs-lookup"><span data-stu-id="ba017-259">If `keyName` specifies a subkey that does not exist, the subkey is created in the specified root.</span></span> <span data-ttu-id="ba017-260">Например, в Visual Basic строка "HKEY_CURRENT_USER\MyTestKey" создает подраздел "Митесткэй" в корне HKEY_CURRENT_USER.</span><span class="sxs-lookup"><span data-stu-id="ba017-260">For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" creates the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</span></span> <span data-ttu-id="ba017-261">Строка "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" создает вложенные подразделы "Митесткэй", "MyTestKey\Key2" и "MyTestKey\Key2\Key3".</span><span class="sxs-lookup"><span data-stu-id="ba017-261">The string "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" creates the nested subkeys "MyTestKey", "MyTestKey\Key2", and "MyTestKey\Key2\Key3".</span></span>  
  
 <span data-ttu-id="ba017-262">Допустимые корневые имена: HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG и HKEY_DYN_DATA.</span><span class="sxs-lookup"><span data-stu-id="ba017-262">Valid root names include HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba017-263"><xref:Microsoft.Win32.Registry.SetValue%2A> Метод открывает раздел реестра, устанавливает значение и закрывает ключ при каждом его вызове.</span><span class="sxs-lookup"><span data-stu-id="ba017-263">The <xref:Microsoft.Win32.Registry.SetValue%2A> method opens a registry key, sets the value, and closes the key each time it is called.</span></span> <span data-ttu-id="ba017-264">Если необходимо изменить большое количество значений, <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> метод может повысить производительность.</span><span class="sxs-lookup"><span data-stu-id="ba017-264">If you need to modify a large number of values, the <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> method might provide better performance.</span></span> <span data-ttu-id="ba017-265"><xref:Microsoft.Win32.RegistryKey> Класс также предоставляет методы, позволяющие добавить список управления доступом (ACL) к разделу реестра, чтобы проверить тип данных значения перед его получением и удалить ключи.</span><span class="sxs-lookup"><span data-stu-id="ba017-265">The <xref:Microsoft.Win32.RegistryKey> class also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
 <span data-ttu-id="ba017-266">Эта перегрузка <xref:Microsoft.Win32.Registry.SetValue%2A> хранит 64-разрядные целые числа в виде строк<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>().</span><span class="sxs-lookup"><span data-stu-id="ba017-266">This overload of <xref:Microsoft.Win32.Registry.SetValue%2A> stores 64-bit integers as strings (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>).</span></span> <span data-ttu-id="ba017-267">Для хранения 64-разрядных чисел <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> в качестве значений <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> используйте перегрузку метода.</span><span class="sxs-lookup"><span data-stu-id="ba017-267">To store 64-bit numbers as <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> values, use the <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> method overload.</span></span>  
  
 <span data-ttu-id="ba017-268">Эта перегрузка <xref:Microsoft.Win32.Registry.SetValue%2A> хранит все строковые значения как <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType> объекты, даже если они содержат расширяемые ссылки на переменные среды.</span><span class="sxs-lookup"><span data-stu-id="ba017-268">This overload of <xref:Microsoft.Win32.Registry.SetValue%2A> stores all string values as <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType> objects, even if they contain expandable references to environment variables.</span></span> <span data-ttu-id="ba017-269">Чтобы сохранить строковые значения как развертываемые строки<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>(), <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> используйте перегрузку метода.</span><span class="sxs-lookup"><span data-stu-id="ba017-269">To save string values as expandable strings (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), use the <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> method overload.</span></span>  
  
 <span data-ttu-id="ba017-270">Эта перегрузка эквивалентна вызову <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> перегрузки метода с. <xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ba017-270">This overload is equivalent to calling the <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> method overload with <xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba017-271">В Windows 98 и Windows Millennium Edition (Windows Me) Реестр не является Юникодом, а не все символы Юникода допустимы для всех кодовых страниц.</span><span class="sxs-lookup"><span data-stu-id="ba017-271">On Windows 98 and Windows Millennium Edition (Windows Me), the registry is not Unicode, and not all Unicode characters are valid for all code pages.</span></span> <span data-ttu-id="ba017-272">Символ Юникода, недопустимый для текущей кодовой страницы, заменяется лучшим доступным совпадением.</span><span class="sxs-lookup"><span data-stu-id="ba017-272">A Unicode character that is invalid for the current code page is replaced by the best available match.</span></span> <span data-ttu-id="ba017-273">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="ba017-273">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba017-274">Следующий пример кода сохраняет значения нескольких типов данных в примере ключа, создавая ключ, как это делает, а затем извлекает и отображает значения.</span><span class="sxs-lookup"><span data-stu-id="ba017-274">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="ba017-275">В примере демонстрируется хранение и извлечение пары "имя-значение" по умолчанию (без имени) и использования `defaultValue` , если пара "имя-значение" не существует.</span><span class="sxs-lookup"><span data-stu-id="ba017-275">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba017-276">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ba017-276"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba017-277">Параметр <paramref name="keyName" /> не начинается с правильного корневого раздела реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-277"><paramref name="keyName" /> does not begin with a valid registry root.</span></span>  
  
<span data-ttu-id="ba017-278">- или -</span><span class="sxs-lookup"><span data-stu-id="ba017-278">-or-</span></span> 
 <span data-ttu-id="ba017-279">Значение параметра <paramref name="keyName" /> длиннее максимально допустимой длины (255 знаков).</span><span class="sxs-lookup"><span data-stu-id="ba017-279"><paramref name="keyName" /> is longer than the maximum length allowed (255 characters).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ba017-280">Раздел <see cref="T:Microsoft.Win32.RegistryKey" /> является разделом только для чтения и запись в него невозможна, например, если это узел корневого уровня.</span><span class="sxs-lookup"><span data-stu-id="ba017-280">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ba017-281">У пользователя отсутствуют разрешения, необходимые для изменения разделов реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-281">The user does not have the permissions required to create or modify registry keys.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="ba017-282">для изменения указанного раздела реестра, если он существует, или для создания раздела реестра, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="ba017-282">to modify the specified registry key if it exists, or to create the registry key if it does not already exist.</span></span> <span data-ttu-id="ba017-283">Связанные перечисления: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />,<see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span><span class="sxs-lookup"><span data-stu-id="ba017-283">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="static member SetValue : string * string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="Microsoft.Win32.Registry.SetValue (keyName, valueName, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="valueName" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="ba017-284">Полный путь к разделу реестра, начинающийся с правильного корневого раздела реестра, такого как HKEY_CURRENT_USER.</span><span class="sxs-lookup"><span data-stu-id="ba017-284">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span></span></param>
        <param name="valueName"><span data-ttu-id="ba017-285">Имя в паре "имя-значение".</span><span class="sxs-lookup"><span data-stu-id="ba017-285">The name of the name/value pair.</span></span></param>
        <param name="value"><span data-ttu-id="ba017-286">Сохраняемое значение.</span><span class="sxs-lookup"><span data-stu-id="ba017-286">The value to be stored.</span></span></param>
        <param name="valueKind"><span data-ttu-id="ba017-287">Тип данных реестра, используемый при сохранении данных.</span><span class="sxs-lookup"><span data-stu-id="ba017-287">The registry data type to use when storing the data.</span></span></param>
        <summary><span data-ttu-id="ba017-288">Задает пару "имя-значение" для указанного раздела реестра, используя указанный тип данных реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-288">Sets the name/value pair on the specified registry key, using the specified registry data type.</span></span> <span data-ttu-id="ba017-289">Если указанный раздел не существует, он будет создан.</span><span class="sxs-lookup"><span data-stu-id="ba017-289">If the specified key does not exist, it is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba017-290">Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] `valueName` , параметр больше не ограничен 255 `keyName` символами, однако параметр по-своему имеет ограничение 255 символов.</span><span class="sxs-lookup"><span data-stu-id="ba017-290">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the `valueName` parameter is no longer restricted to a maximum of 255 characters; however, the `keyName` parameter continues have the 255-character restriction.</span></span>  
  
 <span data-ttu-id="ba017-291">Так как многие значения могут храниться в каждом ключе реестра, необходимо использовать `valueName` параметр, чтобы указать конкретное значение, которое необходимо задать.</span><span class="sxs-lookup"><span data-stu-id="ba017-291">Because many values can be stored in each key in the registry, you must use the `valueName` parameter to specify the particular value you want to set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba017-292">Раздел реестра может содержать одно значение, не связанное ни с одним именем.</span><span class="sxs-lookup"><span data-stu-id="ba017-292">A registry key can contain one value that is not associated with any name.</span></span> <span data-ttu-id="ba017-293">Если это неименованное значение отображается в редакторе реестра, вместо имени отображается строка "(по умолчанию)".</span><span class="sxs-lookup"><span data-stu-id="ba017-293">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="ba017-294">Чтобы задать это безымянное значение, укажите либо `null` пустую строку ("") для. `valueName`</span><span class="sxs-lookup"><span data-stu-id="ba017-294">To set this unnamed value, specify either `null` or the empty string ("") for `valueName`.</span></span>  
  
 <span data-ttu-id="ba017-295">Если `valueName` не существует в ключе, он создается, а связанное значение устанавливается в `value`.</span><span class="sxs-lookup"><span data-stu-id="ba017-295">If `valueName` does not exist in the key, it is created and the associated value is set to `value`.</span></span>  
  
 <span data-ttu-id="ba017-296">Если `keyName` указывает, что подраздел не существует, подраздел создается в указанном корне.</span><span class="sxs-lookup"><span data-stu-id="ba017-296">If `keyName` specifies a subkey that does not exist, the subkey is created in the specified root.</span></span> <span data-ttu-id="ba017-297">Например, в Visual Basic строка "HKEY_CURRENT_USER\MyTestKey" создает подраздел "Митесткэй" в корне HKEY_CURRENT_USER.</span><span class="sxs-lookup"><span data-stu-id="ba017-297">For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" creates the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</span></span> <span data-ttu-id="ba017-298">Строка "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" создает вложенные подразделы "Митесткэй", "MyTestKey\Key2" и "MyTestKey\Key2\Key3".</span><span class="sxs-lookup"><span data-stu-id="ba017-298">The string "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" creates the nested subkeys "MyTestKey", "MyTestKey\Key2", and "MyTestKey\Key2\Key3".</span></span>  
  
 <span data-ttu-id="ba017-299">Допустимые корневые имена: HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG и HKEY_DYN_DATA.</span><span class="sxs-lookup"><span data-stu-id="ba017-299">Valid root names include HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba017-300"><xref:Microsoft.Win32.Registry.SetValue%2A> Метод открывает раздел реестра, устанавливает значение и закрывает ключ при каждом его вызове.</span><span class="sxs-lookup"><span data-stu-id="ba017-300">The <xref:Microsoft.Win32.Registry.SetValue%2A> method opens a registry key, sets the value, and closes the key each time it is called.</span></span> <span data-ttu-id="ba017-301">Если необходимо изменить большое количество значений, <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> метод может повысить производительность.</span><span class="sxs-lookup"><span data-stu-id="ba017-301">If you need to modify a large number of values, the <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> method might provide better performance.</span></span> <span data-ttu-id="ba017-302"><xref:Microsoft.Win32.RegistryKey> Класс также предоставляет методы, позволяющие добавить список управления доступом (ACL) к разделу реестра, чтобы проверить тип данных значения перед его получением и удалить ключи.</span><span class="sxs-lookup"><span data-stu-id="ba017-302">The <xref:Microsoft.Win32.RegistryKey> class also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
 <span data-ttu-id="ba017-303">Если указанный `value` тип не соответствует указанному `valueKind`, а данные не могут быть преобразованы, <xref:System.ArgumentException> вызывается исключение.</span><span class="sxs-lookup"><span data-stu-id="ba017-303">If the type of the specified `value` does not match the specified `valueKind`, and the data cannot be converted, <xref:System.ArgumentException> is thrown.</span></span> <span data-ttu-id="ba017-304">Например, можно сохранить <xref:System.Int64?displayProperty=nameWithType> <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>как, но только в том случае, если его значение меньше максимального значения <xref:System.Int32?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ba017-304">For example, you can store a <xref:System.Int64?displayProperty=nameWithType> as a <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>, but only if its value is less than the maximum value of a <xref:System.Int32?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba017-305">Нельзя хранить одно строковое значение как <xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ba017-305">You cannot store a single string value as a <xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba017-306">Если упакованные значения передаются <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>для <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> или, то преобразование выполняется с использованием инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ba017-306">If boxed values are passed for <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>, the conversion is done using the invariant culture.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba017-307">В Windows 98 и Windows Millennium Edition (Windows Me) Реестр не является Юникодом, а не все символы Юникода допустимы для всех кодовых страниц.</span><span class="sxs-lookup"><span data-stu-id="ba017-307">On Windows 98 and Windows Millennium Edition (Windows Me), the registry is not Unicode, and not all Unicode characters are valid for all code pages.</span></span> <span data-ttu-id="ba017-308">Символ Юникода, недопустимый для текущей кодовой страницы, заменяется лучшим доступным совпадением.</span><span class="sxs-lookup"><span data-stu-id="ba017-308">A Unicode character that is invalid for the current code page is replaced by the best available match.</span></span> <span data-ttu-id="ba017-309">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="ba017-309">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba017-310">Следующий пример кода сохраняет значения нескольких типов данных в примере ключа, создавая ключ, как это делает, а затем извлекает и отображает значения.</span><span class="sxs-lookup"><span data-stu-id="ba017-310">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="ba017-311">В примере демонстрируется хранение и извлечение пары "имя-значение" по умолчанию (без имени) и использования `defaultValue` , если пара "имя-значение" не существует.</span><span class="sxs-lookup"><span data-stu-id="ba017-311">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba017-312">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ba017-312"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba017-313">Параметр <paramref name="keyName" /> не начинается с правильного корневого раздела реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-313"><paramref name="keyName" /> does not begin with a valid registry root.</span></span>  
  
<span data-ttu-id="ba017-314">- или -</span><span class="sxs-lookup"><span data-stu-id="ba017-314">-or-</span></span> 
 <span data-ttu-id="ba017-315">Значение параметра <paramref name="keyName" /> длиннее максимально допустимой длины (255 знаков).</span><span class="sxs-lookup"><span data-stu-id="ba017-315"><paramref name="keyName" /> is longer than the maximum length allowed (255 characters).</span></span>  
  
<span data-ttu-id="ba017-316">- или -</span><span class="sxs-lookup"><span data-stu-id="ba017-316">-or-</span></span> 
<span data-ttu-id="ba017-317">Тип параметра <paramref name="value" /> не соответствует типу данных реестра, заданному параметром <paramref name="valueKind" />, поэтому данные не удалось правильно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="ba017-317">The type of <paramref name="value" /> did not match the registry data type specified by <paramref name="valueKind" />, therefore the data could not be converted properly.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ba017-318">Раздел <see cref="T:Microsoft.Win32.RegistryKey" /> доступен только для чтения, и, следовательно, запись в него невозможна (например, это узел корневого уровня или раздел не был открыт с доступом для записи).</span><span class="sxs-lookup"><span data-stu-id="ba017-318">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node, or the key has not been opened with write access.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ba017-319">У пользователя отсутствуют разрешения, необходимые для изменения разделов реестра.</span><span class="sxs-lookup"><span data-stu-id="ba017-319">The user does not have the permissions required to create or modify registry keys.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="ba017-320">для изменения указанного раздела реестра, если он существует, или для создания раздела реестра, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="ba017-320">to modify the specified registry key if it exists, or to create the registry key if it does not already exist.</span></span> <span data-ttu-id="ba017-321">Связанные перечисления: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />,<see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span><span class="sxs-lookup"><span data-stu-id="ba017-321">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey Users;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.Users" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Users As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ Users;" />
      <MemberSignature Language="F#" Value=" staticval mutable Users : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.Users" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba017-322">Содержит сведения о стандартной пользовательской конфигурации.</span><span class="sxs-lookup"><span data-stu-id="ba017-322">Contains information about the default user configuration.</span></span> <span data-ttu-id="ba017-323">Это поле считывает базовый раздел реестра Windows HKEY_USERS.</span><span class="sxs-lookup"><span data-stu-id="ba017-323">This field reads the Windows registry base key HKEY_USERS.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba017-324">Этот раздел содержит ветвь для каждого пользователя компьютера.</span><span class="sxs-lookup"><span data-stu-id="ba017-324">This key contains a branch for each user of the computer.</span></span> <span data-ttu-id="ba017-325">Конфигурация по умолчанию предоставляется для новых пользователей на локальном компьютере и для текущего пользователя по умолчанию, если пользователь не изменил настройки.</span><span class="sxs-lookup"><span data-stu-id="ba017-325">The default configuration is supplied for new users on the local computer and for the default current user if the user has not changed preferences.</span></span> <span data-ttu-id="ba017-326">Поскольку Windows 98/ME также поддерживает Registry. Users, приложения могут обращаться к сведениям о пользователе так же, как и в Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="ba017-326">Because Windows 98/ME also supports Registry.Users, applications can access the user-specific information the same way they do under Windows 2000.</span></span> <span data-ttu-id="ba017-327">Сведения о каждом пользователе хранятся в отдельном файле, который может храниться локально или на сетевом сервере.</span><span class="sxs-lookup"><span data-stu-id="ba017-327">Each user's information is stored in a separate file, which can be stored locally or on a network server.</span></span> <span data-ttu-id="ba017-328">Windows 98/ME может скопировать этот файл в текущую систему пользователя, чтобы параметры можно было перемещать с одного компьютера на другой с помощью пользователя.</span><span class="sxs-lookup"><span data-stu-id="ba017-328">Windows 98/ME can copy this file to the user's current system so that settings can move from one computer to another with the user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba017-329">В следующем примере показано, как получить подразделы этого раздела и выводит на экран их имена.</span><span class="sxs-lookup"><span data-stu-id="ba017-329">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="ba017-330"><xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Используйте метод, чтобы создать экземпляр определенного подраздела, представляющего интерес.</span><span class="sxs-lookup"><span data-stu-id="ba017-330">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="ba017-331">Затем можно использовать другие операции в <xref:Microsoft.Win32.RegistryKey> для управления этим ключом.</span><span class="sxs-lookup"><span data-stu-id="ba017-331">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
