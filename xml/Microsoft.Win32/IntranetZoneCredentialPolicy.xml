<Type Name="IntranetZoneCredentialPolicy" FullName="Microsoft.Win32.IntranetZoneCredentialPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e9bbd3d505aacd3196d285731a1fcf1362028665" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63935411" /></Metadata><TypeSignature Language="C#" Value="public class IntranetZoneCredentialPolicy : System.Net.ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntranetZoneCredentialPolicy extends System.Object implements class System.Net.ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class IntranetZoneCredentialPolicy&#xA;Implements ICredentialPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntranetZoneCredentialPolicy : System::Net::ICredentialPolicy" />
  <TypeSignature Language="F#" Value="type IntranetZoneCredentialPolicy = class&#xA;    interface ICredentialPolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.ICredentialPolicy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Определяет политику учетных данных, используемую для запросов, создаваемых с помощью <see cref="T:System.Net.WebRequest" /> и соответствующих производных классов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта политика позволяет отправлять учетные данные только если запрошенный ресурс находится в том же домене, что клиент, который выполняет запрос. Для многих приложений это политика по оптимальной, так как оно не позволяет сетевые учетные данные, отправляемые вместе с запросами для ресурсов, которые не находятся в интрасети.  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy> политики вызываются только в том случае, если <xref:System.Net.WebRequest> или <xref:System.Net.WebProxy> связанный с запросом имеет учетные данные, которые не являются `null`. Установка этой политики не влияет на запросы, которые задают учетные данные.  
  
 Используйте <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> задаваемое свойство <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> политики. <xref:System.Net.IAuthenticationModule> , Проверку подлинности маркеров для запроса будет вызывать <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> метод, прежде чем выполнять проверку подлинности. Если запрошенный ресурс есть в домене, отличном от клиента, <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> возвращает метод `false`, и проверка подлинности не выполняется.  
  
 Эта политика влияет на все экземпляры <xref:System.Net.WebRequest> с учетными данными отличное от null, в текущем домене приложения. Политику невозможно переопределить на отдельных запросов.  
  
   
  
## Examples  
 В следующем примере кода показано создание экземпляра <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> и он используется для установки политики учетных данных для домена приложения.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntranetZoneCredentialPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntranetZoneCredentialPolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения используют этот конструктор для создания объектов, которые могут использоваться для задания <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано создание экземпляра этого класса.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSendCredential (challengeUri As Uri, request As WebRequest, credential As NetworkCredential, authModule As IAuthenticationModule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSendCredential(Uri ^ challengeUri, System::Net::WebRequest ^ request, System::Net::NetworkCredential ^ credential, System::Net::IAuthenticationModule ^ authModule);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool&#xA;override this.ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool" Usage="intranetZoneCredentialPolicy.ShouldSendCredential (challengeUri, request, credential, authModule)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri">Адрес <see cref="T:System.Uri" />, который получит этот запрос.</param>
        <param name="request">Запрос <see cref="T:System.Net.WebRequest" />, представляющий запрашиваемый ресурс.</param>
        <param name="credential">Учетные данные <see cref="T:System.Net.NetworkCredential" />, которые будут отправлены с запросом, если этот метод возвращает значение <see langword="true" />.</param>
        <param name="authModule">Модуль <see cref="T:System.Net.IAuthenticationModule" />, который будет выполнять проверку подлинности, если проверка подлинности является необходимой.</param>
        <summary>Возвращает значение <see cref="T:System.Boolean" />, показывающее, отправляются ли учетные данные клиента с запросом ресурса, выполненным с помощью <see cref="T:System.Net.WebRequest" />.</summary>
        <returns>Значение <see langword="true" />, если запрошенный ресурс и клиент, выполнивший запрос, находятся в одном домене, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения не вызывают этот метод напрямую. он вызывается методом <xref:System.Net.IAuthenticationModule> , несет ответственность за выполнение проверки подлинности на сервере. Если этот метод возвращает `false`, <xref:System.Net.IAuthenticationModule> не будет выполнена проверка подлинности клиента на сервер.  
  
 Этот метод вызывается только для запросов, укажите учетные данные или используйте <xref:System.Net.WebProxy> , указывающий учетные данные.  
  
   
  
## Examples  
 В следующем примере кода показано, производное от <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> позволяет отправлять запросы, использующие защищенный гипертекстовый протокол (HTTPS) с обычной проверкой подлинности учетные данные. Пароль пользователя с помощью HTTPS и обычной проверки подлинности, шифруется перед отправкой по сети.  
  
 [!code-cpp[NclCredPolicy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#4)]
 [!code-csharp[NclCredPolicy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>