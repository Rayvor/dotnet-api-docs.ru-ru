<Type Name="IntranetZoneCredentialPolicy" FullName="Microsoft.Win32.IntranetZoneCredentialPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da8a5819dd16b37cf2fb675fad075c1f7367ec25" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70681966" /></Metadata><TypeSignature Language="C#" Value="public class IntranetZoneCredentialPolicy : System.Net.ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntranetZoneCredentialPolicy extends System.Object implements class System.Net.ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class IntranetZoneCredentialPolicy&#xA;Implements ICredentialPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntranetZoneCredentialPolicy : System::Net::ICredentialPolicy" />
  <TypeSignature Language="F#" Value="type IntranetZoneCredentialPolicy = class&#xA;    interface ICredentialPolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.ICredentialPolicy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Определяет политику учетных данных, используемую для запросов, создаваемых с помощью <see cref="T:System.Net.WebRequest" /> и соответствующих производных классов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта политика позволяет отправлять учетные данные только в том случае, если запрошенный ресурс находится в том же домене, что и клиент, выполняющий запрос. Для многих приложений это оптимальная политика, так как предотвращает отправку сетевых учетных данных с запросами ресурсов, которые не находятся в интрасети.  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy>политики вызываются, только если в <xref:System.Net.WebRequest> <xref:System.Net.WebProxy> или, связанном с запросом, имеются учетные данные, `null`которые не являются. Установка этой политики не влияет на запросы, не указывающие учетные данные.  
  
 Чтобы задать политику, используйте  <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> свойство <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> . Объект <xref:System.Net.IAuthenticationModule> , обрабатывающий проверку подлинности для запроса <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> , будет вызывать метод до выполнения проверки подлинности. Если запрошенный ресурс находится в домене, отличном от домена клиента, <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> метод возвращает `false`значение и проверка подлинности не выполняется.  
  
 Эта политика влияет на все экземпляры <xref:System.Net.WebRequest> с учетными данными, отличными от NULL, в текущем домене приложения. Политика не может быть переопределена для отдельных запросов.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется создание экземпляра <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> и его использование для задания политики учетных данных для домена приложения.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntranetZoneCredentialPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntranetZoneCredentialPolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения используют этот конструктор для создания объектов, которые можно использовать для задания <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> свойства.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется создание экземпляра этого класса.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSendCredential (challengeUri As Uri, request As WebRequest, credential As NetworkCredential, authModule As IAuthenticationModule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSendCredential(Uri ^ challengeUri, System::Net::WebRequest ^ request, System::Net::NetworkCredential ^ credential, System::Net::IAuthenticationModule ^ authModule);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool&#xA;override this.ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool" Usage="intranetZoneCredentialPolicy.ShouldSendCredential (challengeUri, request, credential, authModule)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri">Адрес <see cref="T:System.Uri" />, который получит этот запрос.</param>
        <param name="request">Запрос <see cref="T:System.Net.WebRequest" />, представляющий запрашиваемый ресурс.</param>
        <param name="credential">Учетные данные <see cref="T:System.Net.NetworkCredential" />, которые будут отправлены с запросом, если этот метод возвращает значение <see langword="true" />.</param>
        <param name="authModule">Модуль <see cref="T:System.Net.IAuthenticationModule" />, который будет выполнять проверку подлинности, если проверка подлинности является необходимой.</param>
        <summary>Возвращает значение <see cref="T:System.Boolean" />, показывающее, отправляются ли учетные данные клиента с запросом ресурса, выполненным с помощью <see cref="T:System.Net.WebRequest" />.</summary>
        <returns>Значение <see langword="true" />, если запрошенный ресурс и клиент, выполнивший запрос, находятся в одном домене, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения не вызывают этот метод напрямую; Он вызывается объектом <xref:System.Net.IAuthenticationModule> , который отвечает за выполнение проверки подлинности на сервере. При возврате `false`из <xref:System.Net.IAuthenticationModule> этого метода не будет проверять подлинность клиента на сервере.  
  
 Этот метод вызывается только для запросов, которые задают учетные <xref:System.Net.WebProxy> данные или используют объект, указывающий учетные данные.  
  
   
  
## Examples  
 В следующем примере кода показано наследование от <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> , чтобы разрешить отправку учетных данных для запросов, использующих протокол HTTPS с обычной проверкой подлинности. При использовании протокола HTTPS и обычной проверки подлинности пароль пользователя шифруется перед отправкой по сети.  
  
 [!code-cpp[NclCredPolicy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#4)]
 [!code-csharp[NclCredPolicy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
