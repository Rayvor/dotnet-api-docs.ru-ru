<Type Name="KeyedCollection&lt;TKey,TItem&gt;" FullName="System.Collections.ObjectModel.KeyedCollection&lt;TKey,TItem&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e91f598b6b6c1baa4b3ad266724134e296b516a2" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70654386" /></Metadata><TypeSignature Language="C#" Value="public abstract class KeyedCollection&lt;TKey,TItem&gt; : System.Collections.ObjectModel.Collection&lt;TItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit KeyedCollection`2&lt;TKey, TItem&gt; extends System.Collections.ObjectModel.Collection`1&lt;!TItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.KeyedCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyedCollection(Of TKey, TItem)&#xA;Inherits Collection(Of TItem)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TItem&gt;&#xA;public ref class KeyedCollection abstract : System::Collections::ObjectModel::Collection&lt;TItem&gt;" />
  <TypeSignature Language="F#" Value="type KeyedCollection&lt;'Key, 'Item&gt; = class&#xA;    inherit Collection&lt;'Item&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;TItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="98560-101">Тип ключей в коллекции.</span><span class="sxs-lookup"><span data-stu-id="98560-101">The type of keys in the collection.</span></span></typeparam>
    <typeparam name="TItem"><span data-ttu-id="98560-102">Тип элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="98560-102">The type of items in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="98560-103">Предоставляет абстрактный базовый класс для коллекции, ключи которой внедрены в значения.</span><span class="sxs-lookup"><span data-stu-id="98560-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-104"><xref:System.Collections.ObjectModel.KeyedCollection%602> Класс предоставляет как o (1) индексированное извлечение, так и получение по ключу, которые подходет к o (1).</span><span class="sxs-lookup"><span data-stu-id="98560-104">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</span></span> <span data-ttu-id="98560-105">Это абстрактный тип, или точнее неограниченный набор абстрактных типов, поскольку каждый из сконструированных универсальных типов является абстрактным базовым классом.</span><span class="sxs-lookup"><span data-stu-id="98560-105">It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</span></span> <span data-ttu-id="98560-106">Чтобы использовать <xref:System.Collections.ObjectModel.KeyedCollection%602>, необходимо получить тип коллекции из соответствующего сконструированного типа.</span><span class="sxs-lookup"><span data-stu-id="98560-106">To use <xref:System.Collections.ObjectModel.KeyedCollection%602>, derive your collection type from the appropriate constructed type.</span></span>  
  
 <span data-ttu-id="98560-107">Класс является гибридным между коллекцией, основанной <xref:System.Collections.Generic.IList%601> на универсальном интерфейсе, и коллекцией <xref:System.Collections.Generic.IDictionary%602> , основанной на универсальном интерфейсе. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="98560-107">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class is a hybrid between a collection based on the <xref:System.Collections.Generic.IList%601> generic interface and a collection based on the <xref:System.Collections.Generic.IDictionary%602> generic interface.</span></span> <span data-ttu-id="98560-108">Как и коллекции, основанные на <xref:System.Collections.Generic.IList%601> универсальном интерфейсе, <xref:System.Collections.ObjectModel.KeyedCollection%602> является индексированным списком элементов.</span><span class="sxs-lookup"><span data-stu-id="98560-108">Like collections based on the <xref:System.Collections.Generic.IList%601> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> is an indexed list of items.</span></span> <span data-ttu-id="98560-109">Как и коллекции, основанные на <xref:System.Collections.Generic.IDictionary%602> универсальном интерфейсе, имеет ключ, <xref:System.Collections.ObjectModel.KeyedCollection%602> связанный с каждым элементом.</span><span class="sxs-lookup"><span data-stu-id="98560-109">Like collections based on the <xref:System.Collections.Generic.IDictionary%602> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> has a key associated with each element.</span></span>  
  
 <span data-ttu-id="98560-110">В отличие от словарей элемент <xref:System.Collections.ObjectModel.KeyedCollection%602> не является парой "ключ-значение"; вместо этого весь элемент является значением, а ключ внедряется в значение.</span><span class="sxs-lookup"><span data-stu-id="98560-110">Unlike dictionaries, an element of <xref:System.Collections.ObjectModel.KeyedCollection%602> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</span></span>  <span data-ttu-id="98560-111">Например, элемент коллекции, производный от `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` в Visual Basic), может иметь значение «Джон Петров Jr».</span><span class="sxs-lookup"><span data-stu-id="98560-111">For example, an element of a collection derived from `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` in Visual Basic) might be "John Doe Jr."</span></span> <span data-ttu-id="98560-112">где значение равно «Джон Петров Jr».</span><span class="sxs-lookup"><span data-stu-id="98560-112">where the value is "John Doe Jr."</span></span> <span data-ttu-id="98560-113">а ключ — «Петров»; или коллекция записей сотрудников, содержащих целочисленные ключи, может быть производной от `KeyedCollection\<int,Employee>`.</span><span class="sxs-lookup"><span data-stu-id="98560-113">and the key is "Doe"; or a collection of employee records containing integer keys could be derived from `KeyedCollection\<int,Employee>`.</span></span> <span data-ttu-id="98560-114">Абстрактный <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> метод извлекает ключ из элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-114">The abstract <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method extracts the key from the element.</span></span>  
  
 <span data-ttu-id="98560-115">По умолчанию <xref:System.Collections.ObjectModel.KeyedCollection%602> включает словарь поиска, который можно получить <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> с помощью свойства.</span><span class="sxs-lookup"><span data-stu-id="98560-115">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that you can obtain with the <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> property.</span></span>  <span data-ttu-id="98560-116">Когда элемент добавляется <xref:System.Collections.ObjectModel.KeyedCollection%602>в, ключ элемента извлекается один раз и сохраняется в словаре поиска для ускорения поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-116">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="98560-117">Это поведение переопределяется путем указания порогового значения создания словаря при создании <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="98560-117">This behavior is overridden by specifying a dictionary creation threshold when you create the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="98560-118">Словарь уточняющего запроса создается при первом превышении этого порога числом элементов.</span><span class="sxs-lookup"><span data-stu-id="98560-118">The lookup dictionary is created the first time the number of elements exceeds that threshold.</span></span>  <span data-ttu-id="98560-119">Если задать для порога значение-1, словарь поиска никогда не будет создан.</span><span class="sxs-lookup"><span data-stu-id="98560-119">If you specify -1 as the threshold, the lookup dictionary is never created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98560-120">При использовании внутреннего словаря поиска он содержит ссылки на все элементы коллекции, если `TItem` является ссылочным типом, или копирует все элементы в коллекции, если `TItem` является типом значения.</span><span class="sxs-lookup"><span data-stu-id="98560-120">When the internal lookup dictionary is used, it contains references to all the items in the collection if `TItem` is a reference type, or copies of all the items in the collection if `TItem` is a value type.</span></span> <span data-ttu-id="98560-121">Таким образом, использование словаря поиска может быть неуместным `TItem` , если является типом значения.</span><span class="sxs-lookup"><span data-stu-id="98560-121">Thus, using the lookup dictionary may not be appropriate if `TItem` is a value type.</span></span>  
  
 <span data-ttu-id="98560-122">Доступ к элементу по его индексу или ключу можно получить с <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> помощью свойства.</span><span class="sxs-lookup"><span data-stu-id="98560-122">You can access an item by its index or key by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="98560-123">Можно добавлять элементы без ключа, но впоследствии доступ к этим элементам можно получить только по индексу.</span><span class="sxs-lookup"><span data-stu-id="98560-123">You can add items without a key, but these items can subsequently be accessed only by index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98560-124">Этот раздел содержит два примера кода.</span><span class="sxs-lookup"><span data-stu-id="98560-124">This section contains two code examples.</span></span> <span data-ttu-id="98560-125">В первом примере показан минимальный код, необходимый для наследования от <xref:System.Collections.ObjectModel.KeyedCollection%602>, и демонстрируется множество унаследованных методов.</span><span class="sxs-lookup"><span data-stu-id="98560-125">The first example shows the minimum code required to derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and demonstrates many of the inherited methods.</span></span> <span data-ttu-id="98560-126">Во втором примере показано, как переопределить защищенные методы <xref:System.Collections.ObjectModel.KeyedCollection%602> для предоставления пользовательского поведения.</span><span class="sxs-lookup"><span data-stu-id="98560-126">The second example shows how to override the protected methods of <xref:System.Collections.ObjectModel.KeyedCollection%602> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="98560-127">**Пример 1**</span><span class="sxs-lookup"><span data-stu-id="98560-127">**Example 1**</span></span>  
  
 <span data-ttu-id="98560-128">В этом примере кода показан минимальный код, необходимый для наследования класса <xref:System.Collections.ObjectModel.KeyedCollection%602>коллекции: <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> переопределение метода и предоставление открытого конструктора, который делегирует конструктору базового класса.</span><span class="sxs-lookup"><span data-stu-id="98560-128">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="98560-129">В примере кода также демонстрируется множество свойств и методов, унаследованных <xref:System.Collections.ObjectModel.KeyedCollection%602> от <xref:System.Collections.ObjectModel.Collection%601> классов и.</span><span class="sxs-lookup"><span data-stu-id="98560-129">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="98560-130">Класс — это очень простой список заявок, содержащий `OrderItem` объекты, каждый из которых представляет элемент строки в заказе. `SimpleOrder`</span><span class="sxs-lookup"><span data-stu-id="98560-130">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="98560-131">Ключ `OrderItem` является неизменяемым, важным фактором для классов, производных от <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="98560-131">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="98560-132">Пример кода, в котором используются изменяемые ключи, <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="98560-132">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 <span data-ttu-id="98560-133">**Пример 2**</span><span class="sxs-lookup"><span data-stu-id="98560-133">**Example 2**</span></span>  
  
 <span data-ttu-id="98560-134">В следующем примере кода показано, как переопределить защищенные <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> <xref:System.Collections.ObjectModel.Collection%601.Add%2A> методы, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> , и, чтобы обеспечить пользовательское поведение для методов, и, а также для <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>  Задание свойства по <xref:System.Collections.ObjectModel.Collection%601.Item%2A> умолчанию (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="98560-134">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="98560-135">Пользовательское поведение, представленное в этом примере, представляет собой `Changed`событие уведомления с именем, которое создается в конце каждого переопределенного метода.</span><span class="sxs-lookup"><span data-stu-id="98560-135">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="98560-136">В примере кода создается `SimpleOrder` класс, производный от <xref:System.Collections.ObjectModel.KeyedCollection%602> класса, который представляет собой простую форму заказа.</span><span class="sxs-lookup"><span data-stu-id="98560-136">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="98560-137">Форма заказа содержит `OrderItem` объекты, представляющие заказанные элементы.</span><span class="sxs-lookup"><span data-stu-id="98560-137">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="98560-138">В примере кода также создается `SimpleOrderChangedEventArgs` класс для хранения сведений о событии и перечисление для обнаружения типа изменения.</span><span class="sxs-lookup"><span data-stu-id="98560-138">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="98560-139">В примере кода демонстрируется пользовательское поведение путем вызова свойств и методов производного класса в `Main` методе `Demo` класса.</span><span class="sxs-lookup"><span data-stu-id="98560-139">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="98560-140">В этом примере кода используются объекты с неизменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="98560-140">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="98560-141">Пример кода, в котором используются изменяемые ключи, <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="98560-141">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Specialized.StringDictionary" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98560-142">Инициализирует новый экземпляр класса <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="98560-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98560-143">Инициализирует новый экземпляр класса <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, в котором используется компаратор по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="98560-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-144">Объект <xref:System.Collections.ObjectModel.KeyedCollection%602> , созданный с помощью этого конструктора, использует универсальный компаратор по умолчанию для типа ключа, полученного из <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="98560-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="98560-145">Чтобы указать другую универсальную функцию сравнения на равенство, используйте <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> конструктор <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> или конструктор.</span><span class="sxs-lookup"><span data-stu-id="98560-145">To specify a different generic equality comparer, use the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor or the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="98560-146">По умолчанию <xref:System.Collections.ObjectModel.KeyedCollection%602> включает словарь поиска, который создается при добавлении первого элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-146">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="98560-147">Когда элемент добавляется <xref:System.Collections.ObjectModel.KeyedCollection%602>в, ключ элемента извлекается один раз и сохраняется в словаре поиска для ускорения поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-147">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="98560-148">Это поведение можно переопределить с помощью <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> конструктора и указать пороговое значение создания словаря.</span><span class="sxs-lookup"><span data-stu-id="98560-148">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98560-149">Поскольку класс является абстрактным (`MustInherit` в Visual Basic), для его использования необходимо наследовать от него. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="98560-149">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="98560-150">В конструкторе для производного типа вызовите соответствующий <xref:System.Collections.ObjectModel.KeyedCollection%602> конструктор.</span><span class="sxs-lookup"><span data-stu-id="98560-150">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="98560-151">Нет необходимости предоставлять такие функциональные возможности, как компаратор проверки на равенство или пороговое значение создания словаря в конструкторах.</span><span class="sxs-lookup"><span data-stu-id="98560-151">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="98560-152">Этот конструктор является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="98560-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98560-153">В этом примере кода показан минимальный код, необходимый для наследования класса <xref:System.Collections.ObjectModel.KeyedCollection%602>коллекции: <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> переопределение метода и предоставление открытого конструктора, который делегирует конструктору базового класса.</span><span class="sxs-lookup"><span data-stu-id="98560-153">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="98560-154">В примере кода также демонстрируется множество свойств и методов, унаследованных <xref:System.Collections.ObjectModel.KeyedCollection%602> от <xref:System.Collections.ObjectModel.Collection%601> классов и.</span><span class="sxs-lookup"><span data-stu-id="98560-154">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="98560-155">Класс — это очень простой список заявок, содержащий `OrderItem` объекты, каждый из которых представляет элемент строки в заказе. `SimpleOrder`</span><span class="sxs-lookup"><span data-stu-id="98560-155">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="98560-156">Ключ `OrderItem` является неизменяемым, важным фактором для классов, производных от <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="98560-156">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="98560-157">Пример кода, в котором используются изменяемые ключи, <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="98560-157">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="98560-158">Реализация универсального интерфейса <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, которая может использоваться при сравнении ключей, или <see langword="null" />, чтобы использовать компаратор по умолчанию для типа ключа, полученного из <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span><span class="sxs-lookup"><span data-stu-id="98560-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span></span></param>
        <summary><span data-ttu-id="98560-159">Инициализирует новый экземпляр класса <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, в котором используется заданный компаратор.</span><span class="sxs-lookup"><span data-stu-id="98560-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-160">По умолчанию <xref:System.Collections.ObjectModel.KeyedCollection%602> включает словарь поиска, который создается при добавлении первого элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-160">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="98560-161">Когда элемент добавляется <xref:System.Collections.ObjectModel.KeyedCollection%602>в, ключ элемента извлекается один раз и сохраняется в словаре поиска для ускорения поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-161">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="98560-162">Это поведение можно переопределить с помощью <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> конструктора и указать пороговое значение создания словаря.</span><span class="sxs-lookup"><span data-stu-id="98560-162">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98560-163">Поскольку класс является абстрактным (`MustInherit` в Visual Basic), для его использования необходимо наследовать от него. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="98560-163">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="98560-164">В конструкторе для производного типа вызовите соответствующий <xref:System.Collections.ObjectModel.KeyedCollection%602> конструктор.</span><span class="sxs-lookup"><span data-stu-id="98560-164">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="98560-165">Нет необходимости предоставлять такие функциональные возможности, как компаратор проверки на равенство или пороговое значение создания словаря в конструкторах.</span><span class="sxs-lookup"><span data-stu-id="98560-165">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="98560-166">Этот конструктор является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="98560-166">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer, int32 dictionaryCreationThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * int -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; (comparer, dictionaryCreationThreshold)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="dictionaryCreationThreshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="98560-167">Реализация универсального интерфейса <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, которая может использоваться при сравнении ключей, или <see langword="null" />, чтобы использовать компаратор по умолчанию для типа ключа, полученного из <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span><span class="sxs-lookup"><span data-stu-id="98560-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span></span></param>
        <param name="dictionaryCreationThreshold"><span data-ttu-id="98560-168">Количество элементов, которое может содержать коллекция без создания словаря поиска (при значении 0 словарь поиска создается при добавлении первого элемента), или –1, чтобы словарь поиска не создавался никогда.</span><span class="sxs-lookup"><span data-stu-id="98560-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or -1 to specify that a lookup dictionary is never created.</span></span></param>
        <summary><span data-ttu-id="98560-169">Инициализирует новый экземпляр класса <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, который использует заданный компаратор и создает словарь поиска при превышении заданного порога.</span><span class="sxs-lookup"><span data-stu-id="98560-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-170">По умолчанию <xref:System.Collections.ObjectModel.KeyedCollection%602> включает словарь поиска, который создается при добавлении первого элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-170">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="98560-171">Когда элемент добавляется <xref:System.Collections.ObjectModel.KeyedCollection%602>в, ключ элемента извлекается один раз и сохраняется в словаре поиска для ускорения поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-171">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="98560-172">Этот конструктор позволяет переопределить это поведение.</span><span class="sxs-lookup"><span data-stu-id="98560-172">This constructor allows you to override that behavior.</span></span> <span data-ttu-id="98560-173">Укажите 0, чтобы создать словарь при добавлении первого элемента, 1 для создания словаря при добавлении второго элемента и т. д.</span><span class="sxs-lookup"><span data-stu-id="98560-173">Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</span></span> <span data-ttu-id="98560-174">Если задать для порога значение-1, словарь поиска никогда не будет создан.</span><span class="sxs-lookup"><span data-stu-id="98560-174">If you specify -1 as the threshold, the lookup dictionary is never created.</span></span>  
  
 <span data-ttu-id="98560-175">Для очень мелких коллекций улучшение скорости получения, обеспечиваемой словарем поиска, может не быть полезно для дополнительного объема памяти, требуемого для словаря.</span><span class="sxs-lookup"><span data-stu-id="98560-175">For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</span></span> <span data-ttu-id="98560-176">Установка порогового значения позволяет решить, когда следует использовать этот компромисс.</span><span class="sxs-lookup"><span data-stu-id="98560-176">Setting a threshold allows you to decide when to make that tradeoff.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98560-177">Поскольку класс является абстрактным (`MustInherit` в Visual Basic), для его использования необходимо наследовать от него. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="98560-177">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="98560-178">В конструкторе для производного типа вызовите соответствующий <xref:System.Collections.ObjectModel.KeyedCollection%602> конструктор.</span><span class="sxs-lookup"><span data-stu-id="98560-178">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="98560-179">Нет необходимости предоставлять такие функциональные возможности, как компаратор проверки на равенство или пороговое значение создания словаря в конструкторах.</span><span class="sxs-lookup"><span data-stu-id="98560-179">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="98560-180">Этот конструктор является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="98560-180">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98560-181">В следующем примере кода показано, как переопределить защищенные <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> <xref:System.Collections.ObjectModel.Collection%601.Add%2A> методы, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> , и, чтобы обеспечить пользовательское поведение для методов, и, а также для <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>  Задание свойства по <xref:System.Collections.ObjectModel.Collection%601.Item%2A> умолчанию (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="98560-181">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="98560-182">Пользовательское поведение, представленное в этом примере, представляет собой `Changed`событие уведомления с именем, которое создается в конце каждого переопределенного метода.</span><span class="sxs-lookup"><span data-stu-id="98560-182">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="98560-183">В примере кода используется <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> конструктор с пороговым значением 0, чтобы внутренний словарь создавался при первом добавлении объекта в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="98560-183">The code example uses the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</span></span>  
  
 <span data-ttu-id="98560-184">В примере кода создается `SimpleOrder` класс, производный от <xref:System.Collections.ObjectModel.KeyedCollection%602> класса, который представляет собой простую форму заказа.</span><span class="sxs-lookup"><span data-stu-id="98560-184">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="98560-185">Форма заказа содержит `OrderItem` объекты, представляющие заказанные элементы.</span><span class="sxs-lookup"><span data-stu-id="98560-185">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="98560-186">В примере кода также создается `SimpleOrderChangedEventArgs` класс для хранения сведений о событии и перечисление для обнаружения типа изменения.</span><span class="sxs-lookup"><span data-stu-id="98560-186">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="98560-187">В примере кода демонстрируется пользовательское поведение путем вызова свойств и методов производного класса в `Main` методе `Demo` класса.</span><span class="sxs-lookup"><span data-stu-id="98560-187">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="98560-188">В этом примере кода используются объекты с неизменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="98560-188">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="98560-189">Пример кода, в котором используются изменяемые ключи, <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="98560-189">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="98560-190">Значение <paramref name="dictionaryCreationThreshold" /> меньше -1.</span><span class="sxs-lookup"><span data-stu-id="98560-190"><paramref name="dictionaryCreationThreshold" /> is less than -1.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeItemKey">
      <MemberSignature Language="C#" Value="protected void ChangeItemKey (TItem item, TKey newKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ChangeItemKey(!TItem item, !TKey newKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ChangeItemKey (item As TItem, newKey As TKey)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ChangeItemKey(TItem item, TKey newKey);" />
      <MemberSignature Language="F#" Value="member this.ChangeItemKey : 'Item * 'Key -&gt; unit" Usage="keyedCollection.ChangeItemKey (item, newKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
        <Parameter Name="newKey" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="98560-191">Элемент, ключ которого требуется изменить.</span><span class="sxs-lookup"><span data-stu-id="98560-191">The element to change the key of.</span></span></param>
        <param name="newKey"><span data-ttu-id="98560-192">Новый ключ для <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="98560-192">The new key for <paramref name="item" />.</span></span></param>
        <summary><span data-ttu-id="98560-193">Изменяет ключ, связанный с указанным элементом в словаре поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-193">Changes the key associated with the specified element in the lookup dictionary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-194">Этот метод не изменяет ключ, внедренный в `item`; он просто заменяет ключ, сохраненный в словаре поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-194">This method does not modify the key embedded in `item`; it simply replaces the key saved in the lookup dictionary.</span></span>  <span data-ttu-id="98560-195">Таким образом, `newKey` если отличается от ключа, внедренного в `item`, доступ `item` с помощью ключа, возвращенного <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>, невозможен.</span><span class="sxs-lookup"><span data-stu-id="98560-195">Therefore, if `newKey` is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="98560-196">Этот метод не выполняет никаких действий <xref:System.Collections.ObjectModel.KeyedCollection%602> , если не имеет словаря поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-196">This method does nothing if the <xref:System.Collections.ObjectModel.KeyedCollection%602> does not have a lookup dictionary.</span></span>  
  
 <span data-ttu-id="98560-197">Каждый ключ в <xref:System.Collections.ObjectModel.KeyedCollection%602> должен быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="98560-197">Every key in a <xref:System.Collections.ObjectModel.KeyedCollection%602> must be unique.</span></span> <span data-ttu-id="98560-198">Ключ не может иметь `null`значение.</span><span class="sxs-lookup"><span data-stu-id="98560-198">A key cannot be `null`.</span></span>  
  
 <span data-ttu-id="98560-199">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="98560-199">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="98560-200">Примечания для разработчиков</span><span class="sxs-lookup"><span data-stu-id="98560-200">Notes for Implementers</span></span>  
 <span data-ttu-id="98560-201">Перед изменением ключа, внедренного в элемент, необходимо вызвать этот метод, чтобы обновить ключ в словаре поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-201">Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</span></span> <span data-ttu-id="98560-202">Если пороговое значение создания словаря равно-1, вызов этого метода не требуется.</span><span class="sxs-lookup"><span data-stu-id="98560-202">If the dictionary creation threshold is -1, calling this method is not necessary.</span></span>  
  
 <span data-ttu-id="98560-203">Не предоставляйте <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод в качестве открытого метода производного класса.</span><span class="sxs-lookup"><span data-stu-id="98560-203">Do not expose the <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method as a public method of a derived class.</span></span> <span data-ttu-id="98560-204">Неправильное использование этого метода приводит к несинхронизированному словарю поиска с ключами элементов.</span><span class="sxs-lookup"><span data-stu-id="98560-204">Misuse of this method puts the lookup dictionary out of sync with item keys.</span></span> <span data-ttu-id="98560-205">Например, если задать для `null` ключа, а затем задать для него другое значение, добавляет несколько ключей для элемента в словарь поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-205">For example, setting the key to `null` and then setting it to another value adds multiple keys for an item to the lookup dictionary.</span></span> <span data-ttu-id="98560-206">Сделать этот метод внутренним, чтобы разрешить использование изменяемых ключей элементов: при изменении ключа элемента этот метод используется для изменения ключа в словаре поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-206">Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98560-207">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод для поддержки изменяемых ключей и как переопределить <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>защищенные <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>методы,, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> для поддержания целостности ключей и Коллекция.</span><span class="sxs-lookup"><span data-stu-id="98560-207">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="98560-208">В примере кода создается `MutableKeys` коллекция, производная от <xref:System.Collections.ObjectModel.KeyedCollection%602>, и `MutableKey` класс.</span><span class="sxs-lookup"><span data-stu-id="98560-208">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="98560-209">Класс имеет устанавливаемое  `Key` свойство. `MutableKey`</span><span class="sxs-lookup"><span data-stu-id="98560-209">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="98560-210">Когда свойству присваивается новый ключ, метод задания свойства вызывает `internal` (`Friend` в Visual Basic) `ChangeKey` коллекцию, чтобы проверить, конфликтует ли новый ключ с существующим ключом.</span><span class="sxs-lookup"><span data-stu-id="98560-210">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="98560-211">Если это так, создается исключение и значение свойства не изменяется.</span><span class="sxs-lookup"><span data-stu-id="98560-211">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="98560-212">Для поддержания соединения между `MutableKey` объектом `MutableKeys` и коллекцией и предотвращения вставки объекта `MutableKey` в две коллекции класс имеет `internal` (`Friend` в Visual Basic) `Collection`поле.</span><span class="sxs-lookup"><span data-stu-id="98560-212">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="98560-213">Это поле поддерживается защищенными методами, которые предоставляют пользовательское поведение для добавления и удаления элементов из коллекции, например <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="98560-213">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="98560-214">Это поле задается, когда элемент добавляется в коллекцию и удаляется при удалении элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-214">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98560-215">Свойство <paramref name="item" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98560-215"><paramref name="item" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="98560-216">- или -</span><span class="sxs-lookup"><span data-stu-id="98560-216">-or-</span></span> 
 <span data-ttu-id="98560-217">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98560-217"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="98560-218"><paramref name="item" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="98560-218"><paramref name="item" /> is not found.</span></span>  
  
<span data-ttu-id="98560-219">- или -</span><span class="sxs-lookup"><span data-stu-id="98560-219">-or-</span></span> 
 <span data-ttu-id="98560-220">Указанный параметр <paramref name="key" /> уже существует в <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="98560-220"><paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="keyedCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98560-221">Удаляет из коллекции <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> все элементы.</span><span class="sxs-lookup"><span data-stu-id="98560-221">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-222">При наличии словаря поиска этот метод очищает его, но не удаляет его.</span><span class="sxs-lookup"><span data-stu-id="98560-222">If there is a lookup dictionary, this method clears it but does not delete it.</span></span>  
  
 <span data-ttu-id="98560-223">Если количество элементов превысило пороговое значение создания словаря и <xref:System.Collections.ObjectModel.KeyedCollection%602> использует словарь поиска, он будет по-прежнему использовать словарь поиска, даже если число элементов еще не превышает пороговое значение.</span><span class="sxs-lookup"><span data-stu-id="98560-223">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="98560-224">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="98560-224">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="98560-225">Примечания для разработчиков</span><span class="sxs-lookup"><span data-stu-id="98560-225">Notes for Implementers</span></span>  
 <span data-ttu-id="98560-226">Переопределите этот метод, чтобы обеспечить настраиваемое <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> поведение для метода, унаследованного <xref:System.Collections.ObjectModel.Collection%601> от универсального класса.</span><span class="sxs-lookup"><span data-stu-id="98560-226">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="98560-227">Вызовите реализацию базового класса этого метода, чтобы очистить базовую коллекцию и очистить словарь поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-227">Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98560-228">Этот раздел содержит два примера кода, демонстрирующих переопределение <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> метода для предоставления пользовательского поведения при удалении всех объектов из коллекции.</span><span class="sxs-lookup"><span data-stu-id="98560-228">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> method to provide custom behavior for clearing all objects from the collection.</span></span> <span data-ttu-id="98560-229">В первом примере добавляется пользовательское событие уведомления, а во втором — поддержка коллекции объектов с изменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="98560-229">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="98560-230">Пример 1</span><span class="sxs-lookup"><span data-stu-id="98560-230">Example 1</span></span>  
  
 <span data-ttu-id="98560-231">В следующем примере кода показано, как переопределить защищенные <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> <xref:System.Collections.ObjectModel.Collection%601.Add%2A> методы, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> , и, чтобы обеспечить пользовательское поведение для методов, и, а также для <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>  Задание свойства по <xref:System.Collections.ObjectModel.Collection%601.Item%2A> умолчанию (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="98560-231">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="98560-232">Пользовательское поведение, представленное в этом примере, представляет собой `Changed`событие уведомления с именем, которое создается в конце каждого переопределенного метода.</span><span class="sxs-lookup"><span data-stu-id="98560-232">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="98560-233">В примере кода создается `SimpleOrder` класс, производный от <xref:System.Collections.ObjectModel.KeyedCollection%602> класса, который представляет собой простую форму заказа.</span><span class="sxs-lookup"><span data-stu-id="98560-233">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="98560-234">Форма заказа содержит `OrderItem` объекты, представляющие заказанные элементы.</span><span class="sxs-lookup"><span data-stu-id="98560-234">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="98560-235">В примере кода также создается `SimpleOrderChangedEventArgs` класс для хранения сведений о событии и перечисление для обнаружения типа изменения.</span><span class="sxs-lookup"><span data-stu-id="98560-235">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="98560-236">В примере кода демонстрируется пользовательское поведение путем вызова свойств и методов производного класса в `Main` методе `Demo` класса.</span><span class="sxs-lookup"><span data-stu-id="98560-236">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="98560-237">В этом примере кода используются объекты с неизменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="98560-237">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="98560-238">Пример кода, в котором используются изменяемые ключи, <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="98560-238">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="98560-239">Пример 2</span><span class="sxs-lookup"><span data-stu-id="98560-239">Example 2</span></span>  
  
 <span data-ttu-id="98560-240">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод для поддержки изменяемых ключей и как переопределить <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>защищенные <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>методы,, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> для поддержания целостности ключей и Коллекция.</span><span class="sxs-lookup"><span data-stu-id="98560-240">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="98560-241">В примере кода создается `MutableKeys` коллекция, производная от <xref:System.Collections.ObjectModel.KeyedCollection%602>, и `MutableKey` класс.</span><span class="sxs-lookup"><span data-stu-id="98560-241">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="98560-242">Класс имеет устанавливаемое  `Key` свойство. `MutableKey`</span><span class="sxs-lookup"><span data-stu-id="98560-242">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="98560-243">Когда свойству присваивается новый ключ, метод задания свойства вызывает `internal` (`Friend` в Visual Basic) `ChangeKey` коллекцию, чтобы проверить, конфликтует ли новый ключ с существующим ключом.</span><span class="sxs-lookup"><span data-stu-id="98560-243">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="98560-244">Если это так, создается исключение и значение свойства не изменяется.</span><span class="sxs-lookup"><span data-stu-id="98560-244">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="98560-245">Для поддержания соединения между `MutableKey` объектом `MutableKeys` и коллекцией и предотвращения вставки объекта `MutableKey` в две коллекции класс имеет `internal` (`Friend` в Visual Basic) `Collection`поле.</span><span class="sxs-lookup"><span data-stu-id="98560-245">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="98560-246">Это поле поддерживается защищенными методами, которые предоставляют пользовательское поведение для добавления и удаления элементов из коллекции, например <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="98560-246">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="98560-247">Это поле задается, когда элемент добавляется в коллекцию и удаляется при удалении элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-247">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98560-248">Получает универсальный компаратор, используемый для определения равенства ключей в коллекции.</span><span class="sxs-lookup"><span data-stu-id="98560-248">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span></span></summary>
        <value><span data-ttu-id="98560-249">Реализация универсального интерфейса <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемого для определения равенства ключей в коллекции.</span><span class="sxs-lookup"><span data-stu-id="98560-249">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface that is used to determine equality of keys in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-250">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="98560-250">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Contains : 'Key -&gt; bool" Usage="keyedCollection.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="98560-251">Ключ, который требуется найти в <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="98560-251">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></param>
        <summary><span data-ttu-id="98560-252">Определяет, содержится ли в коллекции элемент с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="98560-252">Determines whether the collection contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="98560-253"><see langword="true" />, если <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> содержит элемент с указанным ключом, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98560-253"><see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-254">Если содержит словарь поиска, `key` для поиска по словарю используется. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="98560-254">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to search the dictionary.</span></span> <span data-ttu-id="98560-255">Если словарь поиска отсутствует, ключ каждого элемента извлекается с помощью <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> метода и сравнивается с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="98560-255">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="98560-256">Этот метод является операцией o (1), если <xref:System.Collections.ObjectModel.KeyedCollection%602> имеет словарь поиска; в противном случае это операция o`n`(), где `n` имеет <xref:System.Collections.ObjectModel.Collection%601.Count%2A>значение.</span><span class="sxs-lookup"><span data-stu-id="98560-256">This method is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98560-257">В этом примере кода показан минимальный код, необходимый для наследования класса <xref:System.Collections.ObjectModel.KeyedCollection%602>коллекции: <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> переопределение метода и предоставление открытого конструктора, который делегирует конструктору базового класса.</span><span class="sxs-lookup"><span data-stu-id="98560-257">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="98560-258">В примере кода также демонстрируется множество свойств и методов, унаследованных <xref:System.Collections.ObjectModel.KeyedCollection%602> от <xref:System.Collections.ObjectModel.Collection%601> классов и.</span><span class="sxs-lookup"><span data-stu-id="98560-258">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="98560-259">Класс — это очень простой список заявок, содержащий `OrderItem` объекты, каждый из которых представляет элемент строки в заказе. `SimpleOrder`</span><span class="sxs-lookup"><span data-stu-id="98560-259">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="98560-260">Ключ `OrderItem` является неизменяемым, важным фактором для классов, производных от <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="98560-260">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="98560-261">Пример кода, в котором используются изменяемые ключи, <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="98560-261">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98560-262"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98560-262"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;TKey,TItem&gt; Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!TKey, !TItem&gt; Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ Dictionary { System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dictionary : System.Collections.Generic.IDictionary&lt;'Key, 'Item&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Dictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;TKey,TItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98560-263">Получает словарь поиска <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="98560-263">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></summary>
        <value><span data-ttu-id="98560-264">Словарь поиска коллекции <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, если он существует; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98560-264">The lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, if it exists; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-265">По умолчанию <xref:System.Collections.ObjectModel.KeyedCollection%602> включает словарь поиска, который создается при добавлении первого элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-265">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="98560-266">Когда элемент добавляется <xref:System.Collections.ObjectModel.KeyedCollection%602>в, ключ элемента извлекается один раз и сохраняется в словаре поиска для ускорения поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-266">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="98560-267">Это поведение можно переопределить с помощью <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> конструктора и указать пороговое значение создания словаря.</span><span class="sxs-lookup"><span data-stu-id="98560-267">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
 <span data-ttu-id="98560-268">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="98560-268">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98560-269">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод для поддержки изменяемых ключей и как переопределить <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>защищенные <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>методы,, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> для поддержания целостности ключей и Коллекция.</span><span class="sxs-lookup"><span data-stu-id="98560-269">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="98560-270">В примере кода создается `MutableKeys` коллекция, производная от <xref:System.Collections.ObjectModel.KeyedCollection%602>, и `MutableKey` класс.</span><span class="sxs-lookup"><span data-stu-id="98560-270">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="98560-271">Класс имеет устанавливаемое  `Key` свойство. `MutableKey`</span><span class="sxs-lookup"><span data-stu-id="98560-271">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="98560-272">Когда свойству присваивается новый ключ, метод задания свойства вызывает `internal` (`Friend` в Visual Basic) `ChangeKey` коллекцию, чтобы проверить, конфликтует ли новый ключ с существующим ключом.</span><span class="sxs-lookup"><span data-stu-id="98560-272">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="98560-273">Если это так, создается исключение и значение свойства не изменяется.</span><span class="sxs-lookup"><span data-stu-id="98560-273">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="98560-274">Для поддержания соединения между `MutableKey` объектом `MutableKeys` и коллекцией и предотвращения вставки объекта `MutableKey` в две коллекции класс имеет `internal` (`Friend` в Visual Basic) `Collection`поле.</span><span class="sxs-lookup"><span data-stu-id="98560-274">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="98560-275">Это поле поддерживается защищенными методами, которые предоставляют пользовательское поведение для добавления и удаления элементов из коллекции, например <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="98560-275">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="98560-276">Это поле задается, когда элемент добавляется в коллекцию и удаляется при удалении элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-276">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyForItem">
      <MemberSignature Language="C#" Value="protected abstract TKey GetKeyForItem (TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TKey GetKeyForItem(!TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetKeyForItem (item As TItem) As TKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TKey GetKeyForItem(TItem item);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyForItem : 'Item -&gt; 'Key" Usage="keyedCollection.GetKeyForItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="98560-277">Элемент, из которого нужно извлечь ключ.</span><span class="sxs-lookup"><span data-stu-id="98560-277">The element from which to extract the key.</span></span></param>
        <summary><span data-ttu-id="98560-278">При реализации в производном классе извлекает ключ из указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-278">When implemented in a derived class, extracts the key from the specified element.</span></span></summary>
        <returns><span data-ttu-id="98560-279">Ключ для указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-279">The key for the specified element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-280">Если ключ в словаре поиска отличается от ключа, внедренного в `item`, то получить доступ `item` с <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>помощью ключа, возвращаемого, нельзя.</span><span class="sxs-lookup"><span data-stu-id="98560-280">If the key in the lookup dictionary is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="98560-281">Этот метод можно реализовать для возврата `null` коллекции, содержащей элементы без ключей. в этом случае доступ к элементам можно получить только по индексу.</span><span class="sxs-lookup"><span data-stu-id="98560-281">You can implement this method to return `null` for a collection that contains items without keys, in which case the items can be accessed only by their index.</span></span> <span data-ttu-id="98560-282">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="98560-282">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="98560-283">Примечания для разработчиков</span><span class="sxs-lookup"><span data-stu-id="98560-283">Notes for Implementers</span></span>  
 <span data-ttu-id="98560-284">Этот метод необходимо переопределить, чтобы предоставить словарю способ извлечения ключей из элементов в словаре.</span><span class="sxs-lookup"><span data-stu-id="98560-284">You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</span></span>  
  
 <span data-ttu-id="98560-285">Этот метод вызывается внутренним образом.</span><span class="sxs-lookup"><span data-stu-id="98560-285">This method is called internally.</span></span> <span data-ttu-id="98560-286">Он не обязательно должен быть общедоступным.</span><span class="sxs-lookup"><span data-stu-id="98560-286">It is not necessary for it to be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98560-287">В этом примере кода показан минимальный код, необходимый для наследования класса <xref:System.Collections.ObjectModel.KeyedCollection%602>коллекции: <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> переопределение метода и предоставление открытого конструктора, который делегирует конструктору базового класса.</span><span class="sxs-lookup"><span data-stu-id="98560-287">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="98560-288">В примере кода также демонстрируется множество свойств и методов, унаследованных <xref:System.Collections.ObjectModel.KeyedCollection%602> от <xref:System.Collections.ObjectModel.Collection%601> классов и.</span><span class="sxs-lookup"><span data-stu-id="98560-288">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="98560-289">Класс — это очень простой список заявок, содержащий `OrderItem` объекты, каждый из которых представляет элемент строки в заказе. `SimpleOrder`</span><span class="sxs-lookup"><span data-stu-id="98560-289">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="98560-290">Ключ `OrderItem` является неизменяемым, важным фактором для классов, производных от <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="98560-290">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="98560-291">Пример кода, в котором используются изменяемые ключи, <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="98560-291">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'Item -&gt; unit" Usage="keyedCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="98560-292">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="98560-292">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="98560-293">Вставляемый объект.</span><span class="sxs-lookup"><span data-stu-id="98560-293">The object to insert.</span></span></param>
        <summary><span data-ttu-id="98560-294">Вставляет элемент в коллекцию <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="98560-294">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-295">Если `index` параметр <xref:System.Collections.ObjectModel.KeyedCollection%602>равен, то `item`  добавляется в конец. <xref:System.Collections.ObjectModel.Collection%601.Count%2A></span><span class="sxs-lookup"><span data-stu-id="98560-295">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span>  
  
 <span data-ttu-id="98560-296">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="98560-296">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="98560-297"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>вызывается <xref:System.Collections.ObjectModel.Collection%601.Add%2A> методами и <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> .</span><span class="sxs-lookup"><span data-stu-id="98560-297"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> is called by the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="98560-298">Примечания для разработчиков</span><span class="sxs-lookup"><span data-stu-id="98560-298">Notes for Implementers</span></span>  
 <span data-ttu-id="98560-299">Переопределите этот метод, чтобы обеспечить настраиваемое <xref:System.Collections.ObjectModel.Collection%601.Add%2A> поведение <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> для <xref:System.Collections.ObjectModel.Collection%601> методов и, унаследованных от универсального класса.</span><span class="sxs-lookup"><span data-stu-id="98560-299">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="98560-300">Вызовите реализацию базового класса этого метода, чтобы вставить элемент в базовую коллекцию и обновить словарь поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-300">Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98560-301">Этот раздел содержит два примера кода, демонстрирующих переопределение <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метода для предоставления пользовательского поведения при добавлении или вставке объектов в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="98560-301">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method to provide custom behavior for adding or inserting objects into the collection.</span></span> <span data-ttu-id="98560-302">В первом примере добавляется пользовательское событие уведомления, а во втором — поддержка коллекции объектов с изменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="98560-302">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="98560-303">Пример 1</span><span class="sxs-lookup"><span data-stu-id="98560-303">Example 1</span></span>  
  
 <span data-ttu-id="98560-304">В следующем примере кода показано, как переопределить защищенные <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> <xref:System.Collections.ObjectModel.Collection%601.Add%2A> методы, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> , и, чтобы обеспечить пользовательское поведение для методов, и, а также для <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>  Задание свойства по <xref:System.Collections.ObjectModel.Collection%601.Item%2A> умолчанию (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="98560-304">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="98560-305">Пользовательское поведение, представленное в этом примере, представляет собой `Changed`событие уведомления с именем, которое создается в конце каждого переопределенного метода.</span><span class="sxs-lookup"><span data-stu-id="98560-305">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="98560-306">В примере кода создается `SimpleOrder` класс, производный от <xref:System.Collections.ObjectModel.KeyedCollection%602> класса, который представляет собой простую форму заказа.</span><span class="sxs-lookup"><span data-stu-id="98560-306">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="98560-307">Форма заказа содержит `OrderItem` объекты, представляющие заказанные элементы.</span><span class="sxs-lookup"><span data-stu-id="98560-307">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="98560-308">В примере кода также создается `SimpleOrderChangedEventArgs` класс для хранения сведений о событии и перечисление для обнаружения типа изменения.</span><span class="sxs-lookup"><span data-stu-id="98560-308">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="98560-309">В примере кода демонстрируется пользовательское поведение путем вызова свойств и методов производного класса в `Main` методе `Demo` класса.</span><span class="sxs-lookup"><span data-stu-id="98560-309">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="98560-310">В этом примере кода используются объекты с неизменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="98560-310">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="98560-311">Пример кода, в котором используются изменяемые ключи, <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="98560-311">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="98560-312">Пример 2</span><span class="sxs-lookup"><span data-stu-id="98560-312">Example 2</span></span>  
  
 <span data-ttu-id="98560-313">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод для поддержки изменяемых ключей и как переопределить <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>защищенные <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>методы,, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> для поддержания целостности ключей и Коллекция.</span><span class="sxs-lookup"><span data-stu-id="98560-313">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="98560-314">В примере кода создается `MutableKeys` коллекция, производная от <xref:System.Collections.ObjectModel.KeyedCollection%602>, и `MutableKey` класс.</span><span class="sxs-lookup"><span data-stu-id="98560-314">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="98560-315">Класс имеет устанавливаемое  `Key` свойство. `MutableKey`</span><span class="sxs-lookup"><span data-stu-id="98560-315">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="98560-316">Когда свойству присваивается новый ключ, метод задания свойства вызывает `internal` (`Friend` в Visual Basic) `ChangeKey` коллекцию, чтобы проверить, конфликтует ли новый ключ с существующим ключом.</span><span class="sxs-lookup"><span data-stu-id="98560-316">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="98560-317">Если это так, создается исключение и значение свойства не изменяется.</span><span class="sxs-lookup"><span data-stu-id="98560-317">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="98560-318">Для поддержания соединения между `MutableKey` объектом `MutableKeys` и коллекцией и предотвращения вставки объекта `MutableKey` в две коллекции класс имеет `internal` (`Friend` в Visual Basic) `Collection`поле.</span><span class="sxs-lookup"><span data-stu-id="98560-318">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="98560-319">Это поле поддерживается защищенными методами, которые предоставляют пользовательское поведение для добавления и удаления элементов из коллекции, например <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="98560-319">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="98560-320">Это поле задается, когда элемент добавляется в коллекцию и удаляется при удалении элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-320">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="98560-321">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="98560-321"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="98560-322">- или -</span><span class="sxs-lookup"><span data-stu-id="98560-322">-or-</span></span> 
 <span data-ttu-id="98560-323">Значение <paramref name="index" /> больше значения <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="98560-323"><paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItem this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItem Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItem default[TKey] { TItem get(TKey key); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Item" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="98560-324">Ключ элемента, который требуется получить.</span><span class="sxs-lookup"><span data-stu-id="98560-324">The key of the element to get.</span></span></param>
        <summary><span data-ttu-id="98560-325">Получает элемент с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="98560-325">Gets the element with the specified key.</span></span></summary>
        <value><span data-ttu-id="98560-326">Элемент с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="98560-326">The element with the specified key.</span></span> <span data-ttu-id="98560-327">Если элемент с указанным ключом не найден, выдается исключение.</span><span class="sxs-lookup"><span data-stu-id="98560-327">If an element with the specified key is not found, an exception is thrown.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-328">Это свойство предоставляет возможность доступа к определенному элементу в коллекции с помощью следующего синтаксиса: `myCollection[key]` (`myCollection(key)` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="98560-328">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98560-329">Это свойство отличается от наследуемого <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> свойства, которое получает и задает элементы по числовому индексу.</span><span class="sxs-lookup"><span data-stu-id="98560-329">This property is distinct from the inherited <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which gets and sets elements by numeric index.</span></span> <span data-ttu-id="98560-330">Однако если `TKey` имеет тип <xref:System.Int32>, это свойство маскирует унаследованное свойство.</span><span class="sxs-lookup"><span data-stu-id="98560-330">However, if `TKey` is of type <xref:System.Int32>, this property masks the inherited property.</span></span> <span data-ttu-id="98560-331">В этом случае можно получить доступ к унаследованному свойству путем приведения <xref:System.Collections.ObjectModel.KeyedCollection%602> к его базовому типу.</span><span class="sxs-lookup"><span data-stu-id="98560-331">In that case, you can access the inherited property by casting the <xref:System.Collections.ObjectModel.KeyedCollection%602> to its base type.</span></span> <span data-ttu-id="98560-332">Например `KeyedCollection<int, MyType>` , C++(`KeyedCollection(Of Integer, MyType)` в Visual Basic, `KeyedCollection<int, MyType^>` в C++) можно привести к `Collection<MyType>` типу (`Collection(Of MyType)` в Visual Basic, `Collection<MyType^>` в).</span><span class="sxs-lookup"><span data-stu-id="98560-332">For example, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` in Visual Basic, `KeyedCollection<int, MyType^>` in C++) can be cast to `Collection<MyType>` (`Collection(Of MyType)` in Visual Basic, `Collection<MyType^>` in C++).</span></span>  
  
 <span data-ttu-id="98560-333">Если содержит словарь уточняющего запроса, `key` для получения элемента из словаря используется. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="98560-333">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to retrieve the element from the dictionary.</span></span>  <span data-ttu-id="98560-334">Если словарь поиска отсутствует, ключ каждого элемента извлекается с помощью <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> метода и сравнивается с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="98560-334">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="98560-335">Язык использует ключевое слово [this](~/docs/csharp/language-reference/keywords/this.md) для определения индексаторов вместо реализации <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> свойства. C#</span><span class="sxs-lookup"><span data-stu-id="98560-335">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="98560-336">Visual Basic реализует <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> как [свойство по умолчанию](~/docs/visual-basic/language-reference/modifiers/default.md), предоставляющее те же функции индексирования.</span><span class="sxs-lookup"><span data-stu-id="98560-336">Visual Basic implements <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> as a [default property](~/docs/visual-basic/language-reference/modifiers/default.md), which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="98560-337">Получение значения этого <xref:System.Collections.ObjectModel.KeyedCollection%602> свойства является операцией o (1), если имеет словарь поиска; в противном случае это операция o (`n`), где `n` имеет <xref:System.Collections.ObjectModel.Collection%601.Count%2A>значение.</span><span class="sxs-lookup"><span data-stu-id="98560-337">Retrieving the value of this property is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>

## Examples  
 <span data-ttu-id="98560-338">В этом примере кода показан минимальный код, необходимый для наследования класса <xref:System.Collections.ObjectModel.KeyedCollection%602>коллекции: <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> переопределение метода и предоставление открытого конструктора, который делегирует конструктору базового класса.</span><span class="sxs-lookup"><span data-stu-id="98560-338">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="98560-339">В примере кода также демонстрируется множество свойств и методов, унаследованных <xref:System.Collections.ObjectModel.KeyedCollection%602> от <xref:System.Collections.ObjectModel.Collection%601> классов и.</span><span class="sxs-lookup"><span data-stu-id="98560-339">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="98560-340">В этом примере кода вызывается <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> свойство, которое доступно только для чтения и извлекается по ключу, а <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> также свойство, устанавливаемое и получаемое по индексу.</span><span class="sxs-lookup"><span data-stu-id="98560-340">The code example calls both the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only and retrieves by key, and the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which is settable and retrieves by index.</span></span> <span data-ttu-id="98560-341">В нем показано, как получить доступ к последнему свойству, если объекты в производной коллекции имеют целочисленные ключи, отличающиеся от целых чисел, используемых для индексированного извлечения.</span><span class="sxs-lookup"><span data-stu-id="98560-341">It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</span></span>  
  
 <span data-ttu-id="98560-342">Класс — это очень простой список заявок, содержащий `OrderItem` объекты, каждый из которых представляет элемент строки в заказе. `SimpleOrder`</span><span class="sxs-lookup"><span data-stu-id="98560-342">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="98560-343">Ключ `OrderItem` является неизменяемым, важным фактором для классов, производных от <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="98560-343">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="98560-344">Пример кода, в котором используются изменяемые ключи, <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="98560-344">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98560-345">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98560-345"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="98560-346">Элемент с указанным ключом отсутствует в коллекции.</span><span class="sxs-lookup"><span data-stu-id="98560-346">An element with the specified key does not exist in the collection.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Remove : 'Key -&gt; bool" Usage="keyedCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="98560-347">Ключ элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="98560-347">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="98560-348">Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="98560-348">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></summary>
        <returns><span data-ttu-id="98560-349">Значение <see langword="true" />, если элемент успешно удален; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98560-349"><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="98560-350">Этот метод также возвращает <see langword="false" />, если элемент <paramref name="key" /> не найден в коллекции <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="98560-350">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-351">Ключ элемента также удаляется из словаря поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-351">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="98560-352">Если количество элементов превысило пороговое значение создания словаря и <xref:System.Collections.ObjectModel.KeyedCollection%602> использует словарь поиска, он будет по-прежнему использовать словарь поиска, даже если число элементов еще не превышает пороговое значение.</span><span class="sxs-lookup"><span data-stu-id="98560-352">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98560-353">Чтобы настроить поведение этого метода, переопределите <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="98560-353">To customize the behavior of this method, override the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method.</span></span>  
  
 <span data-ttu-id="98560-354">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="98560-354">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98560-355">В этом примере кода показан минимальный код, необходимый для наследования класса <xref:System.Collections.ObjectModel.KeyedCollection%602>коллекции: <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> переопределение метода и предоставление открытого конструктора, который делегирует конструктору базового класса.</span><span class="sxs-lookup"><span data-stu-id="98560-355">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="98560-356">В примере кода также демонстрируется множество свойств и методов, унаследованных <xref:System.Collections.ObjectModel.KeyedCollection%602> от <xref:System.Collections.ObjectModel.Collection%601> классов и.</span><span class="sxs-lookup"><span data-stu-id="98560-356">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="98560-357">В <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> примере демонстрируется метод, <xref:System.Collections.ObjectModel.KeyedCollection%602>унаследованный от, который удаляет элемент с указанным <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> ключом, а также методы <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> и, унаследованные от <xref:System.Collections.ObjectModel.Collection%601>, которые удаляются по объектам и по индексу соответственно.</span><span class="sxs-lookup"><span data-stu-id="98560-357">The example demonstrates <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> method inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602>, which removes the item with a specified key, and also the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> methods inherited from <xref:System.Collections.ObjectModel.Collection%601>, which remove by object and by index respectively.</span></span>  
  
 <span data-ttu-id="98560-358">Класс — это очень простой список заявок, содержащий `OrderItem` объекты, каждый из которых представляет элемент строки в заказе. `SimpleOrder`</span><span class="sxs-lookup"><span data-stu-id="98560-358">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="98560-359">Ключ `OrderItem` является неизменяемым, важным фактором для классов, производных от <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="98560-359">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="98560-360">Пример кода, в котором используются изменяемые ключи, <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="98560-360">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98560-361"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98560-361"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="keyedCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="98560-362">Индекс элемента, который должен быть удален.</span><span class="sxs-lookup"><span data-stu-id="98560-362">The index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="98560-363">Удаляет элемент по указанному индексу из коллекции <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="98560-363">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-364">Ключ элемента также удаляется из словаря поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-364">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="98560-365">Если количество элементов превысило пороговое значение создания словаря и <xref:System.Collections.ObjectModel.KeyedCollection%602> использует словарь поиска, он будет по-прежнему использовать словарь поиска, даже если число элементов еще не превышает пороговое значение.</span><span class="sxs-lookup"><span data-stu-id="98560-365">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="98560-366">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="98560-366">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="98560-367">Примечания для разработчиков</span><span class="sxs-lookup"><span data-stu-id="98560-367">Notes for Implementers</span></span>  
 <span data-ttu-id="98560-368">Переопределите этот метод, чтобы обеспечить настраиваемое <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> поведение <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> для <xref:System.Collections.ObjectModel.Collection%601> методов и, унаследованных от универсального класса <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> и метода.</span><span class="sxs-lookup"><span data-stu-id="98560-368">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class, and the <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> method.</span></span>  
  
 <span data-ttu-id="98560-369">Вызовите реализацию базового класса этого метода, чтобы удалить элемент из базовой коллекции и обновить словарь поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-369">Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98560-370">Этот раздел содержит два примера кода, демонстрирующих переопределение <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> метода для предоставления пользовательского поведения при удалении объектов из коллекции.</span><span class="sxs-lookup"><span data-stu-id="98560-370">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method to provide custom behavior for removing objects from the collection.</span></span> <span data-ttu-id="98560-371">В первом примере добавляется пользовательское событие уведомления, а во втором — поддержка коллекции объектов с изменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="98560-371">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="98560-372">Пример 1</span><span class="sxs-lookup"><span data-stu-id="98560-372">Example 1</span></span>  
  
 <span data-ttu-id="98560-373">В следующем примере кода показано, как переопределить защищенные <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> <xref:System.Collections.ObjectModel.Collection%601.Add%2A> методы, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> , и, чтобы обеспечить пользовательское поведение для методов, и, а также для <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>  Задание свойства по <xref:System.Collections.ObjectModel.Collection%601.Item%2A> умолчанию (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="98560-373">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="98560-374">Пользовательское поведение, представленное в этом примере, представляет собой `Changed`событие уведомления с именем, которое создается в конце каждого переопределенного метода.</span><span class="sxs-lookup"><span data-stu-id="98560-374">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="98560-375">В примере кода создается `SimpleOrder` класс, производный от <xref:System.Collections.ObjectModel.KeyedCollection%602> класса, который представляет собой простую форму заказа.</span><span class="sxs-lookup"><span data-stu-id="98560-375">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="98560-376">Форма заказа содержит `OrderItem` объекты, представляющие заказанные элементы.</span><span class="sxs-lookup"><span data-stu-id="98560-376">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="98560-377">В примере кода также создается `SimpleOrderChangedEventArgs` класс для хранения сведений о событии и перечисление для обнаружения типа изменения.</span><span class="sxs-lookup"><span data-stu-id="98560-377">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="98560-378">В примере кода демонстрируется пользовательское поведение путем вызова свойств и методов производного класса в `Main` методе `Demo` класса.</span><span class="sxs-lookup"><span data-stu-id="98560-378">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="98560-379">В этом примере кода используются объекты с неизменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="98560-379">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="98560-380">Пример кода, в котором используются изменяемые ключи, <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="98560-380">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="98560-381">Пример 2</span><span class="sxs-lookup"><span data-stu-id="98560-381">Example 2</span></span>  
  
 <span data-ttu-id="98560-382">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод для поддержки изменяемых ключей и как переопределить <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>защищенные <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>методы,, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> для поддержания целостности ключей и Коллекция.</span><span class="sxs-lookup"><span data-stu-id="98560-382">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="98560-383">В примере кода создается `MutableKeys` коллекция, производная от <xref:System.Collections.ObjectModel.KeyedCollection%602>, и `MutableKey` класс.</span><span class="sxs-lookup"><span data-stu-id="98560-383">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="98560-384">Класс имеет устанавливаемое  `Key` свойство. `MutableKey`</span><span class="sxs-lookup"><span data-stu-id="98560-384">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="98560-385">Когда свойству присваивается новый ключ, метод задания свойства вызывает `internal` (`Friend` в Visual Basic) `ChangeKey` коллекцию, чтобы проверить, конфликтует ли новый ключ с существующим ключом.</span><span class="sxs-lookup"><span data-stu-id="98560-385">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="98560-386">Если это так, создается исключение и значение свойства не изменяется.</span><span class="sxs-lookup"><span data-stu-id="98560-386">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="98560-387">Для поддержания соединения между `MutableKey` объектом `MutableKeys` и коллекцией и предотвращения вставки объекта `MutableKey` в две коллекции класс имеет `internal` (`Friend` в Visual Basic) `Collection`поле.</span><span class="sxs-lookup"><span data-stu-id="98560-387">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="98560-388">Это поле поддерживается защищенными методами, которые предоставляют пользовательское поведение для добавления и удаления элементов из коллекции, например <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="98560-388">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="98560-389">Это поле задается, когда элемент добавляется в коллекцию и удаляется при удалении элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-389">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * 'Item -&gt; unit" Usage="keyedCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="98560-390">Индекс (с нуля) заменяемого элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-390">The zero-based index of the item to be replaced.</span></span></param>
        <param name="item"><span data-ttu-id="98560-391">Новый элемент.</span><span class="sxs-lookup"><span data-stu-id="98560-391">The new item.</span></span></param>
        <summary><span data-ttu-id="98560-392">Заменяет элемент по заданному индексу указанным элементом.</span><span class="sxs-lookup"><span data-stu-id="98560-392">Replaces the item at the specified index with the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-393">Словарь уточняющих запросов обновляется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="98560-393">The lookup dictionary is updated accordingly.</span></span> <span data-ttu-id="98560-394">То есть ключ заменяемого элемента удаляется из словаря поиска и добавляется ключ нового элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-394">That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</span></span>  
  
 <span data-ttu-id="98560-395">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="98560-395">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="98560-396">Примечания для разработчиков</span><span class="sxs-lookup"><span data-stu-id="98560-396">Notes for Implementers</span></span>  
 <span data-ttu-id="98560-397">Переопределите этот метод, чтобы обеспечить настраиваемое поведение <xref:System.Collections.ObjectModel.Collection%601.Item%2A> для установки свойства, <xref:System.Collections.ObjectModel.Collection%601> унаследованного от универсального класса.</span><span class="sxs-lookup"><span data-stu-id="98560-397">Override this method to provide customized behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98560-398">Этот метод не влияет на поведение <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> свойства, которое доступно только для чтения.</span><span class="sxs-lookup"><span data-stu-id="98560-398">This method does not affect the behavior of the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only.</span></span>  
  
 <span data-ttu-id="98560-399">Вызовите реализацию базового класса этого метода, чтобы задать элемент в базовой коллекции и обновить словарь поиска.</span><span class="sxs-lookup"><span data-stu-id="98560-399">Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98560-400">Этот раздел содержит два примера кода, демонстрирующих переопределение <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> метода для предоставления пользовательского поведения при <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> задании свойства.</span><span class="sxs-lookup"><span data-stu-id="98560-400">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> method to provide custom behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="98560-401">В первом примере добавляется пользовательское событие уведомления, а во втором — поддержка коллекции объектов с изменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="98560-401">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="98560-402">Пример 1</span><span class="sxs-lookup"><span data-stu-id="98560-402">Example 1</span></span>  
  
 <span data-ttu-id="98560-403">В следующем примере кода показано, как переопределить защищенные <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> <xref:System.Collections.ObjectModel.Collection%601.Add%2A> методы, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> , и, чтобы обеспечить пользовательское поведение для методов, и, а также для <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>  Задание свойства по <xref:System.Collections.ObjectModel.Collection%601.Item%2A> умолчанию (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="98560-403">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="98560-404">Пользовательское поведение, представленное в этом примере, представляет собой `Changed`событие уведомления с именем, которое создается в конце каждого переопределенного метода.</span><span class="sxs-lookup"><span data-stu-id="98560-404">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="98560-405">В примере кода создается `SimpleOrder` класс, производный от <xref:System.Collections.ObjectModel.KeyedCollection%602> класса, который представляет собой простую форму заказа.</span><span class="sxs-lookup"><span data-stu-id="98560-405">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="98560-406">Форма заказа содержит `OrderItem` объекты, представляющие заказанные элементы.</span><span class="sxs-lookup"><span data-stu-id="98560-406">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="98560-407">В примере кода также создается `SimpleOrderChangedEventArgs` класс для хранения сведений о событии и перечисление для обнаружения типа изменения.</span><span class="sxs-lookup"><span data-stu-id="98560-407">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="98560-408">В примере кода демонстрируется пользовательское поведение путем вызова свойств и методов производного класса в `Main` методе `Demo` класса.</span><span class="sxs-lookup"><span data-stu-id="98560-408">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="98560-409">В этом примере кода используются объекты с неизменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="98560-409">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="98560-410">Пример кода, в котором используются изменяемые ключи, <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="98560-410">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="98560-411">Пример 2</span><span class="sxs-lookup"><span data-stu-id="98560-411">Example 2</span></span>  
  
 <span data-ttu-id="98560-412">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод для поддержки изменяемых ключей и как переопределить <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>защищенные <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>методы,, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> для поддержания целостности ключей и Коллекция.</span><span class="sxs-lookup"><span data-stu-id="98560-412">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="98560-413">В примере кода создается `MutableKeys` коллекция, производная от <xref:System.Collections.ObjectModel.KeyedCollection%602>, и `MutableKey` класс.</span><span class="sxs-lookup"><span data-stu-id="98560-413">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="98560-414">Класс имеет устанавливаемое  `Key` свойство. `MutableKey`</span><span class="sxs-lookup"><span data-stu-id="98560-414">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="98560-415">Когда свойству присваивается новый ключ, метод задания свойства вызывает `internal` (`Friend` в Visual Basic) `ChangeKey` коллекцию, чтобы проверить, конфликтует ли новый ключ с существующим ключом.</span><span class="sxs-lookup"><span data-stu-id="98560-415">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="98560-416">Если это так, создается исключение и значение свойства не изменяется.</span><span class="sxs-lookup"><span data-stu-id="98560-416">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="98560-417">Для поддержания соединения между `MutableKey` объектом `MutableKeys` и коллекцией и предотвращения вставки объекта `MutableKey` в две коллекции класс имеет `internal` (`Friend` в Visual Basic) `Collection`поле.</span><span class="sxs-lookup"><span data-stu-id="98560-417">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="98560-418">Это поле поддерживается защищенными методами, которые предоставляют пользовательское поведение для добавления и удаления элементов из коллекции, например <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="98560-418">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="98560-419">Это поле задается, когда элемент добавляется в коллекцию и удаляется при удалении элемента.</span><span class="sxs-lookup"><span data-stu-id="98560-419">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TItem&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef item As TItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TItem % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="keyedCollection.TryGetValue (key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="item" Type="TItem" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
