<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="13ec456e1bf4898d349788b75cd207cb9bdba07c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70656506" /></Metadata><TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAdapter abstract : System::Web::UI::Adapters::ControlAdapter" />
  <TypeSignature Language="F#" Value="type PageAdapter = class&#xA;    inherit ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Адаптирует веб-страницу для определенного браузера и создает базовый класс, из которого наследуются все страницы адаптера, прямо или косвенно.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter> Класс является абстрактным классом, который адаптирует веб-страницу для конкретного класса браузеров, определяемый языком разметки, используемым браузером (например, HTML или XHTML). Большая часть адаптируемости в процессе отрисовки может быть инкапсулирована в специализированные классы модуля записи текста, производные от <xref:System.Web.UI.HtmlTextWriter> класса, поэтому не всегда нужно предоставлять адаптер страницы.  
  
 Большинство членов производных адаптеров страниц вызываются из <xref:System.Web.UI.Page> класса или из адаптеров элементов управления. Во-первых <xref:System.Web.UI.Page> , адаптеры класса или элемента управления обнаруживают наличие производного адаптера страницы, затем вызывают член или предоставляют функциональные возможности, если адаптер страницы отсутствует.  
  
 Члены <xref:System.Web.UI.Adapters.PageAdapter> класса предоставляют следующие функциональные возможности:  
  
-   `GET` `POST` Свойства и определяют <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A>  дополнительные заголовки HTTP, а также HTTP и параметры, которые можно использовать для изменения кэширования. <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> Они вызываются во время инициализации кэша из <xref:System.Web.UI.Page> класса.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> Метод возвращает объект, который можно использовать для сохранения объединенного представления и состояния элемента управления страницы. Ссылка на него содержится в <xref:System.Web.UI.Page.PageStatePersister%2A> свойстве, если имеется производный адаптер страницы.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> Метод предоставляет фрагмент кода DHTML, который можно использовать для ссылки на формы в скриптах.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> Метод возвращает коллекцию переменных обратной передачи, если страница находится в обратной передаче. Он вызывается .NET Framework вместо метода, <xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=nameWithType> если имеется производный адаптер страницы.  
  
-   Методы <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> и <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A>  используются адаптерами элементов управления для отрисовки гиперссылок, если имеется производный адаптер страницы.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> Метод визуализирует гиперссылку или тег клиента обратной передачи, который может отправить форму.  
  
-   Методы <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> <xref:System.Web.UI.WebControls.RadioButton> и <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> используются адаптерами элементов управления "переключатель" для ссылки на другие элементы управления в группе переключателей.  
  
-   Свойство предоставляет доступ к объединенному элементу управления и состояниям <xref:System.Web.UI.Page> представления объекта через внутреннее `ClientState` свойство <xref:System.Web.UI.Page> класса. <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A>  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> Метод используется адаптерами элементов управления для выполнения преобразования текста, определяемого устройством.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить класс с именем `CustomPageAdapter` <xref:System.Web.UI.Adapters.PageAdapter> из класса и переопределить <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> метод. Метод добавляет атрибут с именем `src` к гиперссылке, который содержит ссылку на текущую страницу. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Все гиперссылки, отображаемые на страницах, `CustomPageAdapter` к которым присоединен объект `src` , будут иметь атрибут.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.Adapters.PageAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework создает этот адаптер внутренне при создании соответствующего <xref:System.Web.UI.Page> класса или производного класса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByHeaders As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByHeaders { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByHeaders : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает список дополнительных HTTP-заголовков, в котором изменение кэширования зависит от веб-страницы, к которой присоединен этот производный адаптер страницы.</summary>
        <value>Объект <see cref="T:System.Collections.IList" />, содержащий список заголовков HTTP; в противном случае — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сущности в Интернете, которые кэшируют веб-страницы, кэшируют несколько версий на основе заголовков HTTP и других факторов. Например, версия для каждого языка, на котором создается страница, обычно кэшируется на основе `Accept-Language` заголовка HTTP.  
  
 Для конкретных браузеров может потребоваться изменить кэширование HTTP-заголовков в дополнение к заголовкам, которые управляют независимым от целевого объекта кэшированием. Например, может потребоваться кэширование различных версий страницы для различных размеров экрана.  
  
 Имена заголовков, возвращаемые <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> свойством, добавляются в список заголовков `Vary` в HTTP-заголовке, отправляемом в браузер клиента.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса можно <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> переопределить свойство, чтобы вернуть список дополнительных заголовков для управления кэшированием, зависящим от целевого объекта. Базовое свойство возвращает  <see langword="null" /> .  <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /></para></block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
        <related type="Article" href="https://msdn.microsoft.com/library/5032122d-221f-4fed-a5a7-90011f5f88fd">Практические руководства. Кэширование версий страницы на основе заголовков HTTP</related>
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByParams As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByParams { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByParams : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает список дополнительных параметров из HTTP-запросов GET и POST, при помощи которых изменяется кэширование веб-страницы, к которой присоединен этот производный адаптер страницы.</summary>
        <value>Объект <see cref="T:System.Collections.IList" />, содержащий список параметров GET и POST; в противном случае — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сущности в Интернете, которые кэшируют веб-страницы, кэшируют несколько версий на основе, среди прочих факторов, параметров запроса. Например, версия для каждого местоположения магазина в розничной цепочке, для которой может быть создана страница, обычно кэшируется на основе имени параметра (например, `StoreID`).  
  
 Для конкретных браузеров может потребоваться изменить кэширование с помощью параметров GET или POST в дополнение к параметрам, которые управляют независимым от целевого объекта кэшированием. Например, может потребоваться кэширование различных версий страницы для разных поставщиков услуг мобильных телефонов.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса можно <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> переопределить свойство, чтобы получить список дополнительных параметров GET или POST для управления кэшированием, зависящим от целевого объекта. Базовый метод возвращает  <see langword="null" /> значение.  <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
        <related type="Article" href="https://msdn.microsoft.com/library/a504b287-c8d2-4838-9817-3ffee416fec4">Практические руководства. Кэширование версий страницы на основе параметров</related>
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientState As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ClientState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientState : string" Usage="System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает зашифрованную строку, содержащую данные просмотра и элементов управления состоянием веб-страницы к которой присоединен этот производный адаптер страницы.</summary>
        <value>Зашифрованный объект <see cref="T:System.String" /> содержит объединенное представление и элементы управления состоянием элементов управления в связанном объекте <see cref="T:System.Web.UI.Page" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство предоставляет доступ к внутреннему `ClientState` свойству <xref:System.Web.UI.Page> класса. <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A>  
  
 Данные состояния представления, хранящиеся <xref:System.Web.UI.PageStatePersister> в объекте во внутреннем `ClientState` свойстве объекта <xref:System.Web.UI.Page> , всегда сохраняются в скрытом поле на веб-странице.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса нельзя <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> переопределить свойство, так как это не <see langword="virtual" />так. Чтобы изменить поведение <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> в производном классе, реализуйте новое <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> свойство, которое ссылается на <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> свойство базового класса.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/082c763e-ffe8-4baf-b5e5-a26b2d383187">Адаптеры страниц и состояние представления</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Общие сведения об управлении состоянием ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет, проводится ли обратная передача веб-страницы и возвращается ли имя/значение коллекции переменных обратной передачи.</summary>
        <returns>Значение <see cref="T:System.Collections.Specialized.NameValueCollection" /> переменных обратной передачи, если они существуют; в противном случае — <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> Метод возвращает одну из следующих коллекций:  
  
-   Переменные формы, если методу HTTP-обмена `POST`данными является.  
  
-   Переменные строки запроса, если метод HTTP имеет `GET`значение.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса можно <see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" /> переопределить метод, чтобы обеспечить конкретную обработку коллекции переменных обратной передачи для конкретного целевого объекта.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackModeUnvalidated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию данных имя-значение, отправленную на страницу с помощью команды GET или POST, и без выполнения проверки запросов ASP.NET в запросе.</summary>
        <returns>Непроверенные данные формы.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения см. в описании класса <xref:System.Web.UnvalidatedRequestValues>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected internal virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetPostBackFormReference (formId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetPostBackFormReference(System::String ^ formId);" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackFormReference : string -&gt; string&#xA;override this.GetPostBackFormReference : string -&gt; string" Usage="pageAdapter.GetPostBackFormReference formId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId">Объект <see cref="T:System.String" />, содержащий идентификатор клиента формы, которая была отправлена.</param>
        <summary>Возвращает фрагмент кода DHTML, который клиентский браузер может использовать для создания ссылки на форму на странице, которая была отправлена.</summary>
        <returns>Объект <see cref="T:System.String" /> со ссылкой на форму на странице, которая была отправлена.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> Метод предоставляет ссылку DHTML на форму обратной передачи. Фрагмент кода имеет следующий формат:  
  
 `document.forms['` `formID` `']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса можно <see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" /> переопределить метод, если разметка для браузера, поддерживаемого адаптером, требует другого формата для ссылки на форму обратной передачи. Например, стандарт HTML 3,2, используемый обозревателями PocketPC, требует следующего формата: 
 <c>документирован.</c><paramref name="formID" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRadioButtonsByGroup (groupName As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GetRadioButtonsByGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="abstract member GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection&#xA;override this.GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection" Usage="pageAdapter.GetRadioButtonsByGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Объект <see cref="T:System.String" /> который представляет собой имя получаемой группы <see cref="T:System.Web.UI.WebControls.RadioButton" />.</param>
        <summary>Возвращает коллекцию элементов управления переключателями, указанных <paramref name="groupName" />.</summary>
        <returns>Коллекция <see cref="T:System.Collections.ICollection" /> элементов управления <see cref="T:System.Web.UI.WebControls.RadioButton" />, составляющих группу <paramref name="groupName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Адаптеры элементов управления "переключатель" <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> используют <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> методы и для ссылки на <xref:System.Web.UI.WebControls.RadioButton> другие элементы управления в группе.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatePersister () As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::PageStatePersister ^ GetStatePersister();" />
      <MemberSignature Language="F#" Value="abstract member GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister&#xA;override this.GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister" Usage="pageAdapter.GetStatePersister " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект, который веб-страница использует для настройки элементов управления и состояний просмотра.</summary>
        <returns>Объект унаследован от объекта <see cref="T:System.Web.UI.PageStatePersister" />, который поддерживает создание и извлечение объединенного элемента управления и состояний просмотра для <see cref="T:System.Web.UI.Page" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство использует метод для возвращения объекта, производного от <xref:System.Web.UI.PageStatePersister> класса, формы и извлечения объединенного элемента управления и состояний представления для страницы. <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> <xref:System.Web.UI.Page.PageStatePersister%2A> Если с страницей не связан ни один производный адаптер страницы, <xref:System.Web.UI.HiddenFieldPageStatePersister> то для сохранения состояния в скрытом поле на странице используется объект.  
  
|Тип ссылки|Результирующая ссылка|  
|---------------|--------------------|  
|Ссылка на сущность кода, CER|<xref:System.Char.ToString%2A>|  
|Ссылка на сущность кода квалифицирована, церк|<xref:System.Char.ToString%2A?displayProperty=nameWithType>|  
|Определенные ссылки на сущность кода, CER|<xref:System.Char.ToString%28System.Char%29>|  
|Определенная ссылка на сущность кода, церкс|<xref:System.Char.ToString%28System.Char%29?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Данные состояния представления, хранящиеся <see cref="T:System.Web.UI.PageStatePersister" /> в объекте во внутреннем <see langword="ClientState" /> свойстве <see cref="T:System.Web.UI.Page" /> элемента, всегда будут сохраняться в скрытом поле на веб-странице.</para></block>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса можно <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> переопределить метод, возвращающий другое значение "PERSISTED" состояния производной страницы, если невозможно поддерживать объединенное состояние в скрытом поле (например, из-за ограниченных ресурсов).  
  
<see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> Базовый класс <see cref="T:System.Web.UI.HiddenFieldPageStatePersister" />  возвращает объект. <see cref="T:System.Web.UI.SessionPageStatePersister" /> Класс можно использовать для поддержания состояния страницы в состоянии сеанса.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRadioButton(System::Web::UI::WebControls::RadioButton ^ radioButton);" />
      <MemberSignature Language="F#" Value="abstract member RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit&#xA;override this.RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit" Usage="pageAdapter.RegisterRadioButton radioButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">Параметр <see cref="T:System.Web.UI.WebControls.RadioButton" /> для добавления в коллекцию.</param>
        <summary>Добавляет элемент управления переключателем в коллекцию для определенной группы переключателей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter> Класс <xref:System.Collections.Specialized.ListDictionary>  использует объект для обслуживания списка групп переключателей. Каждый элемент в <xref:System.Collections.Specialized.ListDictionary> представляет собой коллекцию <xref:System.Web.UI.WebControls.RadioButton> элементов управления в группе переключателей. Метод добавляет элемент управления в соответствующую коллекцию, создает коллекцию, если она еще не существует, и создает <xref:System.Collections.Specialized.ListDictionary> , если ранее зарегистрированные <xref:System.Web.UI.WebControls.RadioButton> элементы управления отсутствуют. <xref:System.Web.UI.WebControls.RadioButton> <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A>  
  
 Адаптеры элементов управления "переключатель" <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> используют <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> методы и для ссылки на <xref:System.Web.UI.WebControls.RadioButton> другие элементы управления в группе переключателей.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Подготавливает к просмотру открывающий тэг гиперссылки для ответного потока.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий методы отрисовки целевого вывода.</param>
        <param name="targetUrl">Значение <see cref="T:System.String" />, содержащее целевой URL-адрес ссылки.</param>
        <param name="encodeUrl">Объект <see langword="true" /> использующий метод <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> кодирования выходного потока; в противном случае — <see langword="false" />.</param>
        <param name="softkeyLabel">Значение <see cref="T:System.String" />, использующееся в качестве метки программируемой клавиши.</param>
        <summary>Подготавливает к просмотру открывающий тэг гиперссылки, который включает конечный URL-адрес для ответного потока.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Метод записывает открывающий тег гиперссылки. Если `writer` имеет <xref:System.Web.UI.HtmlTextWriter>значение, этот тег имеет следующий формат:  
  
 `<a href="` `targetUrl` `">`  
  
   
  
## Examples  
 В следующем примере кода показано, как получить класс с именем `CustomPageAdapter` <xref:System.Web.UI.Adapters.PageAdapter> из класса и переопределить <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> метод. Метод добавляет атрибут с именем `src` к гиперссылке, который содержит ссылку на текущую страницу. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Все гиперссылки, отображаемые на страницах, `CustomPageAdapter` к которым присоединен объект `src` , будут иметь атрибут.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса можно <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> переопределить метод для записи другого формата для открывающего тега гиперссылки или для записи дополнительных атрибутов тега. Например, <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> базовый метод не записывает атрибут для <paramref name="softkeyLabel" />.</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий методы отрисовки целевого вывода.</param>
        <param name="targetUrl">Значение <see cref="T:System.String" />, содержащее целевой URL-адрес ссылки.</param>
        <param name="encodeUrl">Объект <see langword="true" /> использующий метод <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> кодирования выходного потока; в противном случае — <see langword="false" />.</param>
        <param name="softkeyLabel">Значение <see cref="T:System.String" />, использующееся в качестве метки программируемой клавиши.</param>
        <param name="accessKey">Значение <see cref="T:System.String" />, присваиваемое атрибуту создаваемой ссылки <see langword="accessKey" />.</param>
        <summary>Подготавливает к просмотру открывающий тэг гиперссылки, который включает конечный URL-адрес и код доступа к ответному потоку.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Метод записывает открывающий тег гиперссылки. `writer` Если <xref:System.Web.UI.HtmlTextWriter>  является объектом, этот тег имеет следующий формат:  
  
 `<a href="` `targetUrl` `" accessKey="` `accessKey` `">`  
  
   
  
## Examples  
 В следующем примере кода показано, как получить класс с именем `CustomPageAdapter` <xref:System.Web.UI.Adapters.PageAdapter> из класса и переопределить <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> метод. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>Добавляет атрибут с именем `src` в гиперссылку, который содержит ссылку на текущую страницу. Все гиперссылки, отображаемые на страницах, `CustomPageAdapter` к которым присоединен объект `src` , будут иметь атрибут.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Имя атрибута <paramref name="accessKey" /> длиннее одного символа.</exception>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса можно <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> переопределить метод для записи другого формата для открывающего тега гиперссылки или для записи дополнительных атрибутов тега. Например, <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> базовый метод не записывает атрибут для <paramref name="softkeyLabel" />.</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndHyperlink (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndHyperlink(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="pageAdapter.RenderEndHyperlink writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий методы отображения целевого вывода.</param>
        <summary>Подготавливает к просмотру закрывающий тэг гиперссылки для ответного потока.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> Метод записывает закрывающий тег гиперссылки. Если модуль записи текста является <xref:System.Web.UI.HtmlTextWriter> объектом, этот тег имеет следующий формат:  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса можно <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" /> переопределить методы и <see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" /> , когда необходимо отобразить другой формат гиперссылки.</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отображает событие обратной передачи в ответном потоке в виде ссылки, включая все необходимые аргументы.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий методы отрисовки целевого вывода.</param>
        <param name="target">Значение <see cref="T:System.String" />, содержащее целевое имя события обратной передачи.</param>
        <param name="argument">Значение <see cref="T:System.String" /> содержит аргумент, передаваемый в целевое событие обратной передачи.</param>
        <param name="softkeyLabel">Значение <see cref="T:System.String" />, использующееся в качестве метки программируемой клавиши.</param>
        <param name="text">Значение <see cref="T:System.String" /> текста, отображаемого в виде ссылки.</param>
        <summary>Отображает событие обратной передачи в ответном потоке в виде гиперссылки, включая закодированное и, возможно, зашифрованное состояние просмотра, а также цель и аргумент события.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> Метод записывает событие обратной передачи в виде гиперссылки, не использующей скрипт.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса можно <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> переопределить метод, если для гиперссылки на событие обратной передачи требуется другой формат, или если браузер имеет другие уникальные требования. Например, в некоторых браузерах текст гиперссылки должен быть непустым, если ссылка должна быть отображена. Также можно переопределить <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> , если ограниченные ресурсы не позволяют включить состояние представления в качестве параметра URL-адреса. Базовый метод не записывает атрибут для  <paramref name="softkeyLabel" /> .  <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий методы отрисовки целевого вывода.</param>
        <param name="target">Значение <see cref="T:System.String" />, содержащее целевое имя события обратной передачи.</param>
        <param name="argument">Значение <see cref="T:System.String" /> содержит аргумент, передаваемый в целевое событие обратной передачи.</param>
        <param name="softkeyLabel">Значение <see cref="T:System.String" />, использующееся в качестве метки программируемой клавиши.</param>
        <param name="text">Значение <see cref="T:System.String" /> текста, отображаемого в виде ссылки.</param>
        <param name="postUrl">Значение <see cref="T:System.String" />, содержащее URL-адрес целевой страницы обратной передачи.</param>
        <param name="accessKey">Значение <see cref="T:System.String" /> используется для присвоения атрибуту <see langword="accessKey" /> созданной ссылке.</param>
        <summary>Отображает событие обратной передачи в ответном потоке в виде гиперссылки, включая закодированное и, возможно, зашифрованное состояние просмотра, а также цель и аргумент события, параметр предыдущей страницы и код доступа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `__EVENTARGUMENT=argument` `__EVENTTARGET=target` <xref:System.Web.HttpUtility.UrlEncode%2A> `accessKey="accessKey"` `__PREVIOUSPAGE=currentFilePath` Метод записывает событие обратной передачи в виде гиперссылки без скрипта, включая возможно фрагментированное состояние представления,,, параметры и атрибут. <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A>  
  
 Состояние представления шифруется, если `enableViewStateMac` атрибуту элемента [pages (схема параметров ASP.NET)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) присвоено значение `true`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса можно <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> переопределить метод, если для гиперссылки на событие обратной передачи требуется другой формат, или если браузер имеет другие уникальные требования. Например, в некоторых браузерах текст гиперссылки должен быть непустым, если ссылка должна быть отображена. Также можно переопределить <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> , если ограниченные ресурсы не позволяют включить состояние представления в качестве параметра URL-адреса. Базовый метод не записывает атрибут для  <paramref name="softkeyLabel" /> .  <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string * bool -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий методы отрисовки целевого вывода.</param>
        <param name="target">Значение <see cref="T:System.String" />, содержащее целевое имя события обратной передачи.</param>
        <param name="argument">Значение <see cref="T:System.String" /> содержит аргумент, передаваемый в целевое событие обратной передачи.</param>
        <param name="softkeyLabel">Значение <see cref="T:System.String" />, использующееся в качестве метки программируемой клавиши.</param>
        <param name="text">Значение <see cref="T:System.String" /> текста, отображаемого в виде ссылки.</param>
        <param name="postUrl">Значение <see cref="T:System.String" />, содержащее URL-адрес целевой страницы обратной передачи.</param>
        <param name="accessKey">Значение <see cref="T:System.String" />, присваиваемое атрибуту <see langword="accessKey" /> созданной ссылки.</param>
        <param name="encode">Значение <see langword="true" /> для использования <c>&amp;amp;</c> в качестве разделителя параметра URL-адреса; значение <see langword="false" /> для использования <c>&amp;</c>.</param>
        <summary>Отображает событие обратной передачи в ответном потоке в виде гиперссылки, включая закодированное состояние просмотра, а также цель и аргумент события, параметр предыдущей страницы и код доступа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `__EVENTARGUMENT=argument` `__EVENTTARGET=target` <xref:System.Web.HttpUtility.UrlEncode%2A> `accessKey="accessKey"` `__PREVIOUSPAGE=currentFilePath` Метод записывает событие обратной передачи в виде гиперссылки без скрипта, включая возможно фрагментированное состояние представления,,, параметры и атрибут. <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса можно <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> переопределить метод, если для гиперссылки на событие обратной передачи требуется другой формат, или если браузер имеет другие уникальные требования. Например, в некоторых браузерах текст гиперссылки должен быть непустым, если ссылка должна быть отображена. Также можно переопределить <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> , если ограниченные ресурсы не позволяют включить состояние представления в качестве параметра URL-адреса. Базовый метод не записывает атрибут для  <paramref name="softkeyLabel" /> .  <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransformText (text As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ TransformText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member TransformText : string -&gt; string&#xA;override this.TransformText : string -&gt; string" Usage="pageAdapter.TransformText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Объект <see cref="T:System.String" />, представляющий из себя текст для преобразования.</param>
        <summary>Выполняет преобразование текста для целевого браузера.</summary>
        <returns>Объект <see cref="T:System.String" /> содержащий преобразованный текст.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод можно использовать, например, для преобразования символов табуляции (`\t`) в разрывы строк (`\n`). <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A>  
  
 Базовый метод возвращает `text` без изменений. <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Adapters.PageAdapter" /> класса можно переопределить <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> , если конкретная разметка содержит конструкцию с другой формой из стандартного HTML. Например, если браузеру требуется другой идентификатор для тега, отличный от того, который будет использоваться в HTML, <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> метод можно переопределить, чтобы найти этот тег и изменить его.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
  </Members>
</Type>
