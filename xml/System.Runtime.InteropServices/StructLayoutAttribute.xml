<Type Name="StructLayoutAttribute" FullName="System.Runtime.InteropServices.StructLayoutAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14b339054799ef8da8dd1958b61f195b93cfe9d3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69269320" /></Metadata><TypeSignature Language="C#" Value="public sealed class StructLayoutAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StructLayoutAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.StructLayoutAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StructLayoutAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class StructLayoutAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type StructLayoutAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="067e8-101">Позволяет управлять физическим размещением полей данных класса или структуры в памяти.</span><span class="sxs-lookup"><span data-stu-id="067e8-101">Lets you control the physical layout of the data fields of a class or structure in memory.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="067e8-102">Этот атрибут можно применить к классам или структурам.</span><span class="sxs-lookup"><span data-stu-id="067e8-102">You can apply this attribute to classes or structures.</span></span>  
  
 <span data-ttu-id="067e8-103">Среда CLR управляет физическим размещением полей данных класса или структуры в управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="067e8-103">The common language runtime controls the physical layout of the data fields of a class or structure in managed memory.</span></span> <span data-ttu-id="067e8-104">Однако если необходимо передать тип в неуправляемый код, можно использовать <xref:System.Runtime.InteropServices.StructLayoutAttribute> атрибут для управления неуправляемым макетом типа.</span><span class="sxs-lookup"><span data-stu-id="067e8-104">However, if you want to pass the type to unmanaged code, you can use the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to control the unmanaged layout of the type.</span></span> <span data-ttu-id="067e8-105">Используйте атрибут с <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> для принудительного упорядочения элементов в порядке их появления.</span><span class="sxs-lookup"><span data-stu-id="067e8-105">Use the attribute with <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> to force the members to be laid out sequentially in the order they appear.</span></span> <span data-ttu-id="067e8-106">Для преобразуемых типов <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> управляет макетом в управляемой памяти и макетом в неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="067e8-106">For blittable types, <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> controls both the layout in managed memory and the layout in unmanaged memory.</span></span> <span data-ttu-id="067e8-107">Для преобразуемых типов он управляет макетом при маршалировании класса или структуры в неуправляемый код, но не управляет макетом в управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="067e8-107">For non-blittable types, it controls the layout when the class or structure is marshaled to unmanaged code, but does not control the layout in managed memory.</span></span> <span data-ttu-id="067e8-108">Используйте атрибут с <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> для управления точной позицией каждого элемента данных.</span><span class="sxs-lookup"><span data-stu-id="067e8-108">Use the attribute with <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> to control the precise position of each data member.</span></span> <span data-ttu-id="067e8-109">Это влияет на управляемый и неуправляемый макет для непреобразуемых и преобразуемых типов.</span><span class="sxs-lookup"><span data-stu-id="067e8-109">This affects both managed and unmanaged layout, for both blittable and non-blittable types.</span></span> <span data-ttu-id="067e8-110">При <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> использовании необходимо <xref:System.Runtime.InteropServices.FieldOffsetAttribute> использовать атрибут для указания расположения каждого поля в типе.</span><span class="sxs-lookup"><span data-stu-id="067e8-110">Using <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> requires that you use the <xref:System.Runtime.InteropServices.FieldOffsetAttribute> attribute to indicate the position of each field within the type.</span></span>  
  
 <span data-ttu-id="067e8-111">C#, Visual Basic и C++ компиляторы по умолчанию <xref:System.Runtime.InteropServices.LayoutKind.Sequential> применяют значение макета к структурам.</span><span class="sxs-lookup"><span data-stu-id="067e8-111">C#, Visual Basic, and C++ compilers apply the <xref:System.Runtime.InteropServices.LayoutKind.Sequential> layout value to structures by default.</span></span> <span data-ttu-id="067e8-112">Для классов необходимо явно применить <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> значение.</span><span class="sxs-lookup"><span data-stu-id="067e8-112">For classes, you must apply the <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> value explicitly.</span></span> <span data-ttu-id="067e8-113">[Tlbimp. exe (программа импорта библиотек типов)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) также применяет <xref:System.Runtime.InteropServices.StructLayoutAttribute> атрибут; <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> он всегда применяет это значение при импорте библиотеки типов.</span><span class="sxs-lookup"><span data-stu-id="067e8-113">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) also applies the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute; it always applies the <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> value when it imports a type library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="067e8-114">В следующем примере показано управляемое объявление `GetSystemTime` функции и определение `MySystemTime` класса с <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> макетом.</span><span class="sxs-lookup"><span data-stu-id="067e8-114">The following example demonstrates a managed declaration of the `GetSystemTime` function and defines `MySystemTime` class with <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> layout.</span></span> <span data-ttu-id="067e8-115">`GetSystemTime`Возвращает системное время и выводит на консоль.</span><span class="sxs-lookup"><span data-stu-id="067e8-115">`GetSystemTime` gets the system time and prints to the console.</span></span>  
  
 [!code-cpp[StructLayoutAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/StructLayoutAttribute/CPP/structlayoutattribute.cpp#1)]
 [!code-csharp[StructLayoutAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/StructLayoutAttribute/CS/structlayoutattribute.cs#1)]
 [!code-vb[StructLayoutAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StructLayoutAttribute/VB/structlayoutattribute.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/tools/tlbimp-exe-type-library-importer.md"><span data-ttu-id="067e8-116">Tlbimp.exe (программа экспорта библиотек типов)</span><span class="sxs-lookup"><span data-stu-id="067e8-116">Tlbimp.exe (Type Library Importer)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="067e8-117">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="067e8-117">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StructLayoutAttribute (short layoutKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 layoutKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (layoutKind As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StructLayoutAttribute(short layoutKind);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.StructLayoutAttribute : int16 -&gt; System.Runtime.InteropServices.StructLayoutAttribute" Usage="new System.Runtime.InteropServices.StructLayoutAttribute layoutKind" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="layoutKind" Type="System.Int16" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="layoutKind"><span data-ttu-id="067e8-118">16-разрядное целое число, представляющее одно из значений <see cref="T:System.Runtime.InteropServices.LayoutKind" />, определяющих компоновку класса или структуры.</span><span class="sxs-lookup"><span data-stu-id="067e8-118">A 16-bit integer that represents one of the <see cref="T:System.Runtime.InteropServices.LayoutKind" /> values that specifies how the class or structure should be arranged.</span></span></param>
        <summary><span data-ttu-id="067e8-119">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> с указанным членом перечисления <see cref="T:System.Runtime.InteropServices.LayoutKind" />.</span><span class="sxs-lookup"><span data-stu-id="067e8-119">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> class with the specified <see cref="T:System.Runtime.InteropServices.LayoutKind" /> enumeration member.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="067e8-120">Этот конструктор принимает базовое 16-разрядное целое число <xref:System.Runtime.InteropServices.LayoutKind> , представляющее каждый член перечисления.</span><span class="sxs-lookup"><span data-stu-id="067e8-120">This constructor takes an underlying 16-bit integer that represents each <xref:System.Runtime.InteropServices.LayoutKind> enumeration member.</span></span> <span data-ttu-id="067e8-121">Средство [Tlbimp. exe (программа импорта библиотек типов)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) использует этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="067e8-121">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) uses this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.LayoutKind" />
        <related type="Article" href="~/docs/framework/tools/tlbimp-exe-type-library-importer.md"><span data-ttu-id="067e8-122">Tlbimp.exe (программа экспорта библиотек типов)</span><span class="sxs-lookup"><span data-stu-id="067e8-122">Tlbimp.exe (Type Library Importer)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StructLayoutAttribute (System.Runtime.InteropServices.LayoutKind layoutKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.InteropServices.LayoutKind layoutKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StructLayoutAttribute(System::Runtime::InteropServices::LayoutKind layoutKind);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.StructLayoutAttribute : System.Runtime.InteropServices.LayoutKind -&gt; System.Runtime.InteropServices.StructLayoutAttribute" Usage="new System.Runtime.InteropServices.StructLayoutAttribute layoutKind" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="layoutKind" Type="System.Runtime.InteropServices.LayoutKind" />
      </Parameters>
      <Docs>
        <param name="layoutKind"><span data-ttu-id="067e8-123">Одно из значений перечисления, определяющих компоновку класса или структуры.</span><span class="sxs-lookup"><span data-stu-id="067e8-123">One of the enumeration values that specifies how the class or structure should be arranged.</span></span></param>
        <summary><span data-ttu-id="067e8-124">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> с указанным членом перечисления <see cref="T:System.Runtime.InteropServices.LayoutKind" />.</span><span class="sxs-lookup"><span data-stu-id="067e8-124">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> class with the specified <see cref="T:System.Runtime.InteropServices.LayoutKind" /> enumeration member.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="067e8-125">Для читаемого кода, который менее подвержен ошибкам, всегда используйте этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="067e8-125">For readable code that is less prone to error, always use this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.LayoutKind" />
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CharSet CharSet;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CharSet CharSet" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.StructLayoutAttribute.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public CharSet As CharSet " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CharSet CharSet;" />
      <MemberSignature Language="F#" Value="val mutable CharSet : System.Runtime.InteropServices.CharSet" Usage="System.Runtime.InteropServices.StructLayoutAttribute.CharSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CharSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="067e8-126">Показывает, каким образом следует выполнять маршалирование по умолчанию для полей строковых данных в классе (как <see langword="LPWSTR" /> или как <see langword="LPSTR" />).</span><span class="sxs-lookup"><span data-stu-id="067e8-126">Indicates whether string data fields within the class should be marshaled as <see langword="LPWSTR" /> or <see langword="LPSTR" /> by default.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="067e8-127">Если поле имеет <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType>значение, все строковые аргументы преобразуются в символы Юникода (`LPWSTR`) перед передачей в неуправляемую реализацию. `CharSet`</span><span class="sxs-lookup"><span data-stu-id="067e8-127">If the `CharSet` field is set to <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType>, all string arguments are converted to Unicode characters (`LPWSTR`) before they are passed to the unmanaged implementation.</span></span> <span data-ttu-id="067e8-128">Если поле имеет значение <xref:System.Runtime.InteropServices.CharSet.Ansi?displayProperty=nameWithType>, строки преобразуются в строки ANSI (`LPSTR`).</span><span class="sxs-lookup"><span data-stu-id="067e8-128">If the field is set to <xref:System.Runtime.InteropServices.CharSet.Ansi?displayProperty=nameWithType>, the strings are converted to ANSI strings (`LPSTR`).</span></span> <span data-ttu-id="067e8-129">Если поле имеет значение, то преобразование зависит от платформы (ANSI в Windows 98 и Windows Me и Юникод в более поздних версиях). <xref:System.Runtime.InteropServices.CharSet.Auto?displayProperty=nameWithType> `CharSet`</span><span class="sxs-lookup"><span data-stu-id="067e8-129">If the `CharSet` field is set to <xref:System.Runtime.InteropServices.CharSet.Auto?displayProperty=nameWithType>, the conversion is platform-dependent (ANSI on Windows 98 and Windows Me, and Unicode on later versions).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="Pack">
      <MemberSignature Language="C#" Value="public int Pack;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 Pack" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" />
      <MemberSignature Language="VB.NET" Value="Public Pack As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int Pack;" />
      <MemberSignature Language="F#" Value="val mutable Pack : int" Usage="System.Runtime.InteropServices.StructLayoutAttribute.Pack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="067e8-130">Управляет выравниванием полей данных для класса или структуры в памяти.</span><span class="sxs-lookup"><span data-stu-id="067e8-130">Controls the alignment of data fields of a class or structure in memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="067e8-131"><xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> Поле управляет выравниванием полей типа в памяти.</span><span class="sxs-lookup"><span data-stu-id="067e8-131">The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> field controls the alignment of a type's fields in memory.</span></span>  <span data-ttu-id="067e8-132">Он влияет как <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> на <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>, так и на.</span><span class="sxs-lookup"><span data-stu-id="067e8-132">It affects both <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>.</span></span> <span data-ttu-id="067e8-133">По умолчанию значение равно 0, указывая размер упаковки по умолчанию для текущей платформы.</span><span class="sxs-lookup"><span data-stu-id="067e8-133">By default, the value is 0, indicating the default packing size for the current platform.</span></span> <span data-ttu-id="067e8-134">Значение <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> должно быть равно 0, 1, 2, 4, 8, 16, 32, 64 или 128:</span><span class="sxs-lookup"><span data-stu-id="067e8-134">The value of <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> must be 0, 1, 2, 4, 8, 16, 32, 64, or 128:</span></span>  
  
 <span data-ttu-id="067e8-135">Поля экземпляра типа согласовываются с помощью следующих правил:</span><span class="sxs-lookup"><span data-stu-id="067e8-135">The fields of a type instance are aligned by using the following rules:</span></span>  
  
-   <span data-ttu-id="067e8-136">Выравнивание типа — это размер самого крупного элемента (1, 2, 4, 8 и т. д., байт) или указанного размера упаковки, в зависимости от того, какое значение меньше.</span><span class="sxs-lookup"><span data-stu-id="067e8-136">The alignment of the type is the size of its largest element (1, 2, 4, 8, etc., bytes) or the specified packing size, whichever is smaller.</span></span>  
  
-   <span data-ttu-id="067e8-137">Каждое поле должно быть согласовано с полями своего собственного размера (1, 2, 4, 8 и т. д., байтов) или выравниванием типа, в зависимости от того, какое значение меньше.</span><span class="sxs-lookup"><span data-stu-id="067e8-137">Each field must align with fields of its own size (1, 2, 4, 8, etc., bytes) or the alignment of the type, whichever is smaller.</span></span>  <span data-ttu-id="067e8-138">Поскольку выравнивание по умолчанию для типа — это размер самого крупного элемента, который больше или равен всем остальным значениям длины полей, это обычно означает, что поля выровнены по размеру.</span><span class="sxs-lookup"><span data-stu-id="067e8-138">Because the default alignment of the type is the size of its largest element, which is greater than or equal to all other field lengths, this usually means that fields are aligned by their size.</span></span> <span data-ttu-id="067e8-139">Например, даже если самое большое поле типа является 64-битным (8-байтовым) целым числом или поле Pack имеет значение 8, <xref:System.Byte> поля выровнять по 1 байтам, <xref:System.Int16> поля выровнять по 2 байтам и <xref:System.Int32> поля выровнять по 4-байтным границам.</span><span class="sxs-lookup"><span data-stu-id="067e8-139">For example, even if the largest field in a type is a 64-bit (8-byte) integer or the Pack field is set to 8, <xref:System.Byte> fields align on 1-byte boundaries, <xref:System.Int16> fields align on 2-byte boundaries, and <xref:System.Int32> fields align on 4-byte boundaries.</span></span>  
  
-   <span data-ttu-id="067e8-140">Заполнение добавляется между полями для удовлетворения требований к выравниванию.</span><span class="sxs-lookup"><span data-stu-id="067e8-140">Padding is added between fields to satisfy the alignment requirements.</span></span>  
  
 <span data-ttu-id="067e8-141">Например, рассмотрим следующую структуру, которая состоит из двух <xref:System.Byte> полей и одного <xref:System.Int32> поля, когда оно используется <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> с различными значениями для поля.</span><span class="sxs-lookup"><span data-stu-id="067e8-141">For example, consider the following structure, which consists of two <xref:System.Byte> fields and one <xref:System.Int32> field, when it is used with various values for the <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> field.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex0.cs#1)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="067e8-142">Для успешной компиляции C# примеров необходимо указать `/unsafe` параметр компилятора.</span><span class="sxs-lookup"><span data-stu-id="067e8-142">To successfully compile the C# examples, you must specify the `/unsafe` compiler switch.</span></span>  
  
 <span data-ttu-id="067e8-143">При указании размера упаковки по умолчанию размер структуры составляет 8 байт.</span><span class="sxs-lookup"><span data-stu-id="067e8-143">If you specify the default packing size, the size of the structure is 8 bytes.</span></span> <span data-ttu-id="067e8-144">Два байта занимают первые два байта памяти, так как байты должны быть согласованы по однобайтовым границам.</span><span class="sxs-lookup"><span data-stu-id="067e8-144">The two bytes occupy the first two bytes of memory, because bytes must align on one-byte boundaries.</span></span> <span data-ttu-id="067e8-145">Так как выравнивание по умолчанию для типа составляет 4 байта, то есть размер его самых крупных полей `i3`, имеется два байта заполнения, за которыми следует поле Integer.</span><span class="sxs-lookup"><span data-stu-id="067e8-145">Because the default alignment of the type is 4 bytes, which is the size of its largest fields, `i3`, there are two bytes of padding followed by the integer field.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex1.cs#2)]  
  
 <span data-ttu-id="067e8-146">Если <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> параметр имеет значение 2, то размер структуры составляет 6 байт.</span><span class="sxs-lookup"><span data-stu-id="067e8-146">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 2, the size of the structure is 6 bytes.</span></span> <span data-ttu-id="067e8-147">Как и раньше, два байта занимают первые два байта памяти.</span><span class="sxs-lookup"><span data-stu-id="067e8-147">As before, the two bytes occupy the first two bytes of memory.</span></span> <span data-ttu-id="067e8-148">Так как поля теперь выровнены по 2 байтам, между вторым байтом и целым числом нет дополнительного промежутка.</span><span class="sxs-lookup"><span data-stu-id="067e8-148">Because fields now align on 2-byte boundaries, there is no padding between the second byte and the integer.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex2.cs#3)]  
  
 <span data-ttu-id="067e8-149">Если <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> параметр имеет значение 4, то размер структуры будет таким же, как и в случае по умолчанию, где выравнивание типа было определено размером самого крупного `i3`поля, то есть 4.</span><span class="sxs-lookup"><span data-stu-id="067e8-149">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 4, the size of the structure is the same as in the default case, where the type's alignment was defined by the size of its largest field, `i3`, which is 4.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex3.cs#4)]  
  
 <span data-ttu-id="067e8-150">Если <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> значение равно 8, то размер структуры остается тем же, что и в случае по умолчанию, `i3` поскольку поле соответствует 4-байтовой границе, что меньше, чем 8-байтная граница, заданная в поле "Pack".</span><span class="sxs-lookup"><span data-stu-id="067e8-150">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 8, the size of the structure is the still same as in the default case, because the `i3` field aligns on a 4-byte boundary, which is smaller than the 8-byte boundary specified by the Pack field.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex4.cs#5)]  
  
 <span data-ttu-id="067e8-151">Чтобы взять другой пример, рассмотрим следующую структуру, которая состоит из двух полей байтов: 1 32-битового целого числа со знаком, одного одноэлементного массива байтов и десятичного значения.</span><span class="sxs-lookup"><span data-stu-id="067e8-151">To take another example, consider the following structure, which consists of two byte fields, one 32-bit signed integer field, one single-element byte array, and a decimal value.</span></span> <span data-ttu-id="067e8-152">При использовании размера упаковки по умолчанию размер структуры составляет 28 байт.</span><span class="sxs-lookup"><span data-stu-id="067e8-152">With the default packing size, the size of the structure is 28 bytes.</span></span> <span data-ttu-id="067e8-153">Два байта занимают первые два байта памяти, за которыми следуют два байта заполнения, за которыми следует целое число.</span><span class="sxs-lookup"><span data-stu-id="067e8-153">The two bytes occupy the first two bytes of memory, followed by two bytes of padding, followed by the integer.</span></span> <span data-ttu-id="067e8-154">Далее следует однобайтовый массив, за которым следуют три байта заполнения.</span><span class="sxs-lookup"><span data-stu-id="067e8-154">Next is the one-byte array, followed by three bytes of padding.</span></span> <span data-ttu-id="067e8-155">Наконец, <xref:System.Decimal> поле D5 выравнивается по 4-байтовой границе, так как десятичное значение состоит из четырех <xref:System.Int32> полей, поэтому его выравнивание основано на размере самого крупного из его полей, а не <xref:System.Decimal> на размере структуры в целом.</span><span class="sxs-lookup"><span data-stu-id="067e8-155">Finally, the <xref:System.Decimal> field, d5, aligns on a 4-byte boundary because a decimal value consists of four <xref:System.Int32> fields, so its alignment is based on the size of the largest of its fields rather than on the size of the <xref:System.Decimal> structure as a whole.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex5.cs#6)]  
  
 <span data-ttu-id="067e8-156">Если <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> параметр имеет значение 2, то размер структуры составляет 24 байта.</span><span class="sxs-lookup"><span data-stu-id="067e8-156">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 2, the size of the structure is 24 bytes.</span></span> <span data-ttu-id="067e8-157">В сравнении с выравниванием по умолчанию два байта заполнения между двумя байтами и целым числом были удалены, так как выравнивание типа теперь равно 4, а не 2.</span><span class="sxs-lookup"><span data-stu-id="067e8-157">In comparison with the default alignment, the two bytes of padding between the two bytes and the integer have been removed because the type's alignment is now 4 rather than 2.</span></span> <span data-ttu-id="067e8-158">И три байта заполнения после `a4` были заменены на один байт заполнения, так как `d5` теперь выровнен по 2-байтной границе, а не к 4-байтовой границе.</span><span class="sxs-lookup"><span data-stu-id="067e8-158">And the three bytes of padding after `a4` have been replaced by one byte of padding, since `d5` now aligns on a 2-byte boundary rather than a 4-byte boundary.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex6.cs#7)]  
  
 <span data-ttu-id="067e8-159">Если <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> значение равно 8, то размер структуры будет таким же, как и в случае по умолчанию, так как все требования к выравниванию в этой структуре меньше 8.</span><span class="sxs-lookup"><span data-stu-id="067e8-159">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 8, the size of the structure is the same as in the default case, because all the alignment requirements in this structure are less than 8.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex7.cs#8)]  
  
 <span data-ttu-id="067e8-160"><xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> Поле часто используется при экспорте структур на дисковых и сетевых операциях записи.</span><span class="sxs-lookup"><span data-stu-id="067e8-160">The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> field is frequently used when structures are exported during disk and network write operations.</span></span> <span data-ttu-id="067e8-161">Поле также часто используется во время вызова неуправляемого кода и операций взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="067e8-161">The field is also frequently used during platform invoke and interop operations.</span></span>  
  
 <span data-ttu-id="067e8-162">Иногда поле используется для уменьшения требований к памяти путем создания более тесного упаковочного размера.</span><span class="sxs-lookup"><span data-stu-id="067e8-162">Occasionally, the field is used to reduce memory requirements by producing a tighter packing size.</span></span> <span data-ttu-id="067e8-163">Однако это использование требует тщательного рассмотрения реальных аппаратных ограничений и может привести к снижению производительности.</span><span class="sxs-lookup"><span data-stu-id="067e8-163">However, this usage requires careful consideration of actual hardware constraints, and may actually degrade performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 Size" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.StructLayoutAttribute.Size" />
      <MemberSignature Language="VB.NET" Value="Public Size As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int Size;" />
      <MemberSignature Language="F#" Value="val mutable Size : int" Usage="System.Runtime.InteropServices.StructLayoutAttribute.Size" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="067e8-164">Указывает абсолютный размер класса или структуры.</span><span class="sxs-lookup"><span data-stu-id="067e8-164">Indicates the absolute size of the class or structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="067e8-165">Это поле должно быть больше или равно общему размеру (в байтах) элементов класса или структуры.</span><span class="sxs-lookup"><span data-stu-id="067e8-165">This field must be equal or greater than the total size, in bytes, of the members of the class or structure.</span></span> <span data-ttu-id="067e8-166">Это поле в основном предназначено для создателей компиляторов, желающих расширить память, занимаемую структурой для прямого, неуправляемого доступа.</span><span class="sxs-lookup"><span data-stu-id="067e8-166">This field is primarily for compiler writers who want to extend the memory occupied by a structure for direct, unmanaged access.</span></span> <span data-ttu-id="067e8-167">Например, это поле можно использовать при работе с объединениями, которые не представлены в метаданных напрямую.</span><span class="sxs-lookup"><span data-stu-id="067e8-167">For example, you can use this field when working with unions that are not represented in metadata directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.LayoutKind Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.LayoutKind Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.StructLayoutAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As LayoutKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::LayoutKind Value { System::Runtime::InteropServices::LayoutKind get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : System.Runtime.InteropServices.LayoutKind" Usage="System.Runtime.InteropServices.StructLayoutAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.LayoutKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="067e8-168">Получает значение <see cref="T:System.Runtime.InteropServices.LayoutKind" />, определяющее компоновку класса или структуры.</span><span class="sxs-lookup"><span data-stu-id="067e8-168">Gets the <see cref="T:System.Runtime.InteropServices.LayoutKind" /> value that specifies how the class or structure is arranged.</span></span></summary>
        <value><span data-ttu-id="067e8-169">Одно из значений перечисления, определяющих компоновку класса или структуры.</span><span class="sxs-lookup"><span data-stu-id="067e8-169">One of the enumeration values that specifies how the class or structure is arranged.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
