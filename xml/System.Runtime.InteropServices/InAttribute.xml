<Type Name="InAttribute" FullName="System.Runtime.InteropServices.InAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41b62f2e20546125a7a15590d62077a218f24d37" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69269906" /></Metadata><TypeSignature Language="C#" Value="public sealed class InAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.InAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="78f20-101">Показывает, маршалинг каких данных необходимо выполнить при передаче от вызывающего объекта — вызываемому, но не обратно.</span><span class="sxs-lookup"><span data-stu-id="78f20-101">Indicates that data should be marshaled from the caller to the callee, but not back to the caller.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78f20-102">Этот атрибут можно применить к параметрам.</span><span class="sxs-lookup"><span data-stu-id="78f20-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="78f20-103"><xref:System.Runtime.InteropServices.InAttribute> Является необязательным.</span><span class="sxs-lookup"><span data-stu-id="78f20-103">The <xref:System.Runtime.InteropServices.InAttribute> is optional.</span></span> <span data-ttu-id="78f20-104">Атрибут поддерживается только для COM-взаимодействия и вызова неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="78f20-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="78f20-105">При отсутствии явных параметров упаковщик взаимодействия принимает правила на основе типа параметра, независимо от того, передается ли параметр по ссылке или по значению, а также является ли тип преобразуемым или непреобразуемым.</span><span class="sxs-lookup"><span data-stu-id="78f20-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="78f20-106">Например, <xref:System.Text.StringBuilder> для класса всегда предполагается, что он должен быть включен/out, а массив строк, переданных по значению, считается в.</span><span class="sxs-lookup"><span data-stu-id="78f20-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="78f20-107">Нельзя применить <xref:System.Runtime.InteropServices.InAttribute> к параметру, измененному с помощью C# `out` ключевого слова-styleed.</span><span class="sxs-lookup"><span data-stu-id="78f20-107">You cannot apply the <xref:System.Runtime.InteropServices.InAttribute> to a parameter modified with the C#-styled `out` keyword.</span></span> <span data-ttu-id="78f20-108">Чтобы избежать путаницы `In` в ключевом слове <xref:System.Runtime.InteropServices.InAttribute>в Visual Basic с атрибутом, `<[In]>` минусом, используйте форму с квадратными скобками вокруг атрибута.</span><span class="sxs-lookup"><span data-stu-id="78f20-108">To avoid confusing the `In` keyword in Visual Basic with the <xref:System.Runtime.InteropServices.InAttribute>, minus Attribute, use the `<[In]>` form with brackets around the attribute.</span></span>  
  
 <span data-ttu-id="78f20-109"><xref:System.Runtime.InteropServices.InAttribute> Сочетание и <xref:System.Runtime.InteropServices.OutAttribute> особенно полезно при применении к массивам и форматированным, преобразуемым типам.</span><span class="sxs-lookup"><span data-stu-id="78f20-109">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="78f20-110">Вызывающие объекты видят изменения, которые вызываемый объект делает с этими типами только при применении обоих атрибутов.</span><span class="sxs-lookup"><span data-stu-id="78f20-110">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="78f20-111">Так как для этих типов требуется копирование во время маршалирования, можно <xref:System.Runtime.InteropServices.InAttribute> использовать <xref:System.Runtime.InteropServices.OutAttribute> и для сокращения ненужных копий.</span><span class="sxs-lookup"><span data-stu-id="78f20-111">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="78f20-112">Дополнительные сведения о последствиях <xref:System.Runtime.InteropServices.InAttribute> маршалинга см. в разделе [атрибуты направления](https://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span><span class="sxs-lookup"><span data-stu-id="78f20-112">For more information on the effect of <xref:System.Runtime.InteropServices.InAttribute> on marshaling behavior, see [Directional Attributes](https://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78f20-113">В следующем примере показано, как применить <xref:System.Runtime.InteropServices.InAttribute> и <xref:System.Runtime.InteropServices.OutAttribute> к прототипу вызова неуправляемого кода, который передает массив в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="78f20-113">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="78f20-114">Сочетание атрибутов направления позволяет вызывающему объекту видеть изменения, внесенные вызываемым объектом.</span><span class="sxs-lookup"><span data-stu-id="78f20-114">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.OutAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
    <related type="Article" href="~/docs/framework/interop/blittable-and-non-blittable-types.md"><span data-ttu-id="78f20-115">Преобразуемые и непреобразуемые типы</span><span class="sxs-lookup"><span data-stu-id="78f20-115">Blittable and Non-Blittable Types</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.InAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78f20-116">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.InAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="78f20-116">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.InAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
