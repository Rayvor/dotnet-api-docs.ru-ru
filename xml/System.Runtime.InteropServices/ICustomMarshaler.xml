<Type Name="ICustomMarshaler" FullName="System.Runtime.InteropServices.ICustomMarshaler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="13c83388836e7692ce136d212905f87ecc88668b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69064109" /></Metadata><TypeSignature Language="C#" Value="public interface ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICustomMarshaler" />
  <TypeSignature Language="F#" Value="type ICustomMarshaler = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0ca56-101">Предоставляет настраиваемые оболочки, обрабатывающие вызовы методов.</span><span class="sxs-lookup"><span data-stu-id="0ca56-101">Provides custom wrappers for handling method calls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca56-102">Модуль упаковки предоставляет мост между функциональными возможностями старых и новых интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="0ca56-102">A marshaler provides a bridge between the functionality of old and new interfaces.</span></span> <span data-ttu-id="0ca56-103">Настраиваемый маршалирование предоставляет следующие преимущества.</span><span class="sxs-lookup"><span data-stu-id="0ca56-103">Custom marshaling provides the following benefits:</span></span>  
  
-   <span data-ttu-id="0ca56-104">Она позволяет клиентским приложениям, разработанным для работы со старым интерфейсом, также работали с серверами, реализующими новый интерфейс.</span><span class="sxs-lookup"><span data-stu-id="0ca56-104">It enables client applications that were designed to work with an old interface to also work with servers that implement a new interface.</span></span>  
  
-   <span data-ttu-id="0ca56-105">Он позволяет клиентским приложениям, созданным для работы с новым интерфейсом, работать с серверами, которые реализуют старый интерфейс.</span><span class="sxs-lookup"><span data-stu-id="0ca56-105">It enables client applications built to work with a new interface to work with servers that implement an old interface.</span></span>  
  
 <span data-ttu-id="0ca56-106">Если у вас есть интерфейс, который вводит разное поведение маршалинга или представленный в модели COM другим способом, можно разработать пользовательский модуль маршалинга вместо использования модуля маршалинга взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="0ca56-106">If you have an interface that introduces different marshaling behavior or that is exposed to the Component Object Model (COM) in a different way, you can design a custom marshaler instead of using the interop marshaler.</span></span> <span data-ttu-id="0ca56-107">С помощью пользовательского средства упаковки можно ограничить различие между новыми компонентами .NET Framework и существующими COM-компонентами.</span><span class="sxs-lookup"><span data-stu-id="0ca56-107">By using a custom marshaler, you can minimize the distinction between new .NET Framework components and existing COM components.</span></span>  
  
 <span data-ttu-id="0ca56-108">Например, предположим, что вы разрабатываете управляемый интерфейс `INew`с именем.</span><span class="sxs-lookup"><span data-stu-id="0ca56-108">For example, suppose that you are developing a managed interface called `INew`.</span></span> <span data-ttu-id="0ca56-109">Когда этот интерфейс предоставляется COM через стандартную вызываемую оболочку COM, он имеет те же методы, что и управляемый интерфейс, и использует правила маршалинга, встроенные в упаковщик взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="0ca56-109">When this interface is exposed to COM through a standard COM callable wrapper (CCW), it has the same methods as the managed interface and uses the marshaling rules built into the interop marshaler.</span></span> <span data-ttu-id="0ca56-110">Теперь предположим, что известный COM-интерфейс `IOld` уже предоставляет те же функциональные возможности `INew` , что и интерфейс.</span><span class="sxs-lookup"><span data-stu-id="0ca56-110">Now suppose that a well-known COM interface called `IOld` already provides the same functionality as the `INew` interface.</span></span> <span data-ttu-id="0ca56-111">При проектировании пользовательского модуля упаковки можно предоставить неуправляемую реализацию `IOld` , которая просто делегирует вызовы управляемой реализации `INew` интерфейса.</span><span class="sxs-lookup"><span data-stu-id="0ca56-111">By designing a custom marshaler, you can provide an unmanaged implementation of `IOld` that simply delegates the calls to the managed implementation of the `INew` interface.</span></span> <span data-ttu-id="0ca56-112">Таким образом, пользовательский модуль упаковки выступает в качестве моста между управляемыми и неуправляемыми интерфейсами.</span><span class="sxs-lookup"><span data-stu-id="0ca56-112">Therefore, the custom marshaler acts as a bridge between the managed and unmanaged interfaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ca56-113">Пользовательские маршалером не вызываются при вызове из управляемого кода в неуправляемый код в интерфейсе диспетчеризации.</span><span class="sxs-lookup"><span data-stu-id="0ca56-113">Custom marshalers are not invoked when calling from managed code to unmanaged code on a dispatch-only interface.</span></span>  
  
## <a name="defining-the-marshaling-type"></a><span data-ttu-id="0ca56-114">Определение типа маршалинга</span><span class="sxs-lookup"><span data-stu-id="0ca56-114">Defining the Marshaling Type</span></span>  
 <span data-ttu-id="0ca56-115">Перед созданием пользовательского модуля упаковки необходимо определить управляемые и неуправляемые интерфейсы, которые будут маршалированы.</span><span class="sxs-lookup"><span data-stu-id="0ca56-115">Before you can build a custom marshaler, you must define the managed and unmanaged interfaces that will be marshaled.</span></span> <span data-ttu-id="0ca56-116">Эти интерфейсы обычно выполняют одну и ту же функцию, но предоставляются по-разному для управляемых и неуправляемых объектов.</span><span class="sxs-lookup"><span data-stu-id="0ca56-116">These interfaces commonly perform the same function but are exposed differently to managed and unmanaged objects.</span></span>  
  
 <span data-ttu-id="0ca56-117">Управляемый компилятор создает управляемый интерфейс из метаданных, и полученный интерфейс выглядит как любой другой управляемый интерфейс.</span><span class="sxs-lookup"><span data-stu-id="0ca56-117">A managed compiler produces a managed interface from metadata, and the resulting interface looks like any other managed interface.</span></span> <span data-ttu-id="0ca56-118">В следующем примере показан типичный интерфейс.</span><span class="sxs-lookup"><span data-stu-id="0ca56-118">The following example shows a typical interface.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#1)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#1)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#1)]  
  
 <span data-ttu-id="0ca56-119">Неуправляемый тип определяется в языке определения интерфейса (IDL) и компилируется с помощью компилятора язык MIDL (MIDL).</span><span class="sxs-lookup"><span data-stu-id="0ca56-119">You define the unmanaged type in Interface Definition Language (IDL) and compile it with the Microsoft Interface Definition Language (MIDL) compiler.</span></span> <span data-ttu-id="0ca56-120">Вы определяете интерфейс в операторе Library и назначаете ему идентификатор интерфейса с атрибутом UUID, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="0ca56-120">You define the interface within a library statement and assign it an interface ID with the universal unique identifier (UUID) attribute, as the following example demonstrates.</span></span>  
  
```  
 [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]  
library OldLib {  
     [uuid(9B2BAADD-0705-11D3-A0CD-00C04FA35826)]  
     interface IOld : IUnknown  
         HRESULT OldMethod();  
}  
```  
  
 <span data-ttu-id="0ca56-121">Компилятор MIDL создает несколько выходных файлов.</span><span class="sxs-lookup"><span data-stu-id="0ca56-121">The MIDL compiler produces several output files.</span></span> <span data-ttu-id="0ca56-122">Если интерфейс определен в Old. idl, выходной файл Old_i. c определяет `const` переменную с идентификатором интерфейса (IID) интерфейса, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="0ca56-122">If the interface is defined in Old.idl, the output file Old_i.c defines a `const` variable with the interface identifier (IID) of the interface, as the following example demonstrates.</span></span>  
  
```  
const IID IID_IOld = {0x9B2BAADD,0x0705,0x11D3,{0xA0,0xCD,0x00,0xC0,0x4F,0xA3,0x58,0x26}};  
```  
  
 <span data-ttu-id="0ca56-123">Старый h-файл также создается с помощью MIDL.</span><span class="sxs-lookup"><span data-stu-id="0ca56-123">The Old.h file is also produced by MIDL.</span></span> <span data-ttu-id="0ca56-124">Он содержит C++ определение интерфейса, который может быть добавлен в C++ исходный код.</span><span class="sxs-lookup"><span data-stu-id="0ca56-124">It contains a C++ definition of the interface that can be included in your C++ source code.</span></span>  
  
## <a name="implementing-the-icustommarshaler-interface"></a><span data-ttu-id="0ca56-125">Реализация интерфейса ICustomMarshaler</span><span class="sxs-lookup"><span data-stu-id="0ca56-125">Implementing the ICustomMarshaler Interface</span></span>  
 <span data-ttu-id="0ca56-126">Пользовательский упаковщик должен реализовать <xref:System.Runtime.InteropServices.ICustomMarshaler> интерфейс, чтобы предоставить соответствующие оболочки среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="0ca56-126">Your custom marshaler must implement the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface to provide the appropriate wrappers to the runtime.</span></span>  
  
 <span data-ttu-id="0ca56-127">В следующем C# коде показан базовый интерфейс, который должен быть реализован всеми пользовательскими модулями упаковки.</span><span class="sxs-lookup"><span data-stu-id="0ca56-127">The following C# code displays the base interface that must be implemented by all custom marshalers.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#2)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#2)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#2)]  
  
 <span data-ttu-id="0ca56-128"><xref:System.Runtime.InteropServices.ICustomMarshaler> Интерфейс содержит методы, обеспечивающие поддержку преобразования, поддержку очистки и сведения о данных для маршалирования.</span><span class="sxs-lookup"><span data-stu-id="0ca56-128">The <xref:System.Runtime.InteropServices.ICustomMarshaler> interface includes methods that provide conversion support, cleanup support, and information about the data to be marshaled.</span></span>  
  
|<span data-ttu-id="0ca56-129">Тип операции</span><span class="sxs-lookup"><span data-stu-id="0ca56-129">Type of operation</span></span>|<span data-ttu-id="0ca56-130">Метод ICustomMarshaler</span><span class="sxs-lookup"><span data-stu-id="0ca56-130">ICustomMarshaler method</span></span>|<span data-ttu-id="0ca56-131">Описание</span><span class="sxs-lookup"><span data-stu-id="0ca56-131">Description</span></span>|  
|-----------------------|-----------------------------|-----------------|  
|<span data-ttu-id="0ca56-132">Преобразование (из машинного кода в управляемый)</span><span class="sxs-lookup"><span data-stu-id="0ca56-132">Conversion (from native to managed code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>|<span data-ttu-id="0ca56-133">Маршалирует указатель на собственные данные в управляемый объект.</span><span class="sxs-lookup"><span data-stu-id="0ca56-133">Marshals a pointer to native data into a managed object.</span></span> <span data-ttu-id="0ca56-134">Этот метод возвращает пользовательскую вызываемую оболочку времени выполнения (RCW), которая может маршалировать неуправляемый интерфейс, передаваемый в качестве аргумента.</span><span class="sxs-lookup"><span data-stu-id="0ca56-134">This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</span></span> <span data-ttu-id="0ca56-135">Модуль упаковки должен возвращать экземпляр пользовательской RCW для этого типа.</span><span class="sxs-lookup"><span data-stu-id="0ca56-135">The marshaler should return an instance of the custom RCW for that type.</span></span>|  
|<span data-ttu-id="0ca56-136">Преобразование (из управляемого в машинный код)</span><span class="sxs-lookup"><span data-stu-id="0ca56-136">Conversion (from managed to native code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>|<span data-ttu-id="0ca56-137">Маршалирует управляемый объект в указатель на собственные данные.</span><span class="sxs-lookup"><span data-stu-id="0ca56-137">Marshals a managed object into a pointer to native data.</span></span> <span data-ttu-id="0ca56-138">Этот метод возвращает настраиваемую вызываемую оболочку COM (CCW), которая может маршалировать управляемый интерфейс, передаваемый в качестве аргумента.</span><span class="sxs-lookup"><span data-stu-id="0ca56-138">This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</span></span> <span data-ttu-id="0ca56-139">Модуль упаковки должен возвращать экземпляр пользовательской обертки CCW для этого типа.</span><span class="sxs-lookup"><span data-stu-id="0ca56-139">The marshaler should return an instance of the custom CCW for that type.</span></span>|  
|<span data-ttu-id="0ca56-140">Очистка (машинного кода)</span><span class="sxs-lookup"><span data-stu-id="0ca56-140">Cleanup (of native code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A>|<span data-ttu-id="0ca56-141">Позволяет маршалеру очищать собственные данные (CCW), возвращаемые <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="0ca56-141">Enables the marshaler to clean up the native data (the CCW) that is returned by the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> method.</span></span>|  
|<span data-ttu-id="0ca56-142">Очистка (управляемого кода)</span><span class="sxs-lookup"><span data-stu-id="0ca56-142">Cleanup (of managed code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A>|<span data-ttu-id="0ca56-143">Позволяет маршалеру очищать управляемые данные (RCW), возвращаемые <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="0ca56-143">Enables the marshaler to clean up the managed data (the RCW) that is returned by the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> method.</span></span>|  
|<span data-ttu-id="0ca56-144">Сведения (о машинном коде)</span><span class="sxs-lookup"><span data-stu-id="0ca56-144">Information (about native code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A>|<span data-ttu-id="0ca56-145">Возвращает размер неуправляемых данных для маршалирования.</span><span class="sxs-lookup"><span data-stu-id="0ca56-145">Returns the size of the unmanaged data to be marshaled.</span></span>|  
  
### <a name="conversion"></a><span data-ttu-id="0ca56-146">Преобразование</span><span class="sxs-lookup"><span data-stu-id="0ca56-146">Conversion</span></span>  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="0ca56-147">Маршалирует указатель на собственные данные в управляемый объект.</span><span class="sxs-lookup"><span data-stu-id="0ca56-147">Marshals a pointer to native data into a managed object.</span></span> <span data-ttu-id="0ca56-148">Этот метод возвращает пользовательскую вызываемую оболочку времени выполнения (RCW), которая может маршалировать неуправляемый интерфейс, передаваемый в качестве аргумента.</span><span class="sxs-lookup"><span data-stu-id="0ca56-148">This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</span></span> <span data-ttu-id="0ca56-149">Модуль упаковки должен возвращать экземпляр пользовательской RCW для этого типа.</span><span class="sxs-lookup"><span data-stu-id="0ca56-149">The marshaler should return an instance of the custom RCW for that type.</span></span>  
  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="0ca56-150">Маршалирует управляемый объект в указатель на собственные данные.</span><span class="sxs-lookup"><span data-stu-id="0ca56-150">Marshals a managed object into a pointer to native data.</span></span> <span data-ttu-id="0ca56-151">Этот метод возвращает настраиваемую вызываемую оболочку COM (CCW), которая может маршалировать управляемый интерфейс, передаваемый в качестве аргумента.</span><span class="sxs-lookup"><span data-stu-id="0ca56-151">This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</span></span> <span data-ttu-id="0ca56-152">Модуль упаковки должен возвращать экземпляр пользовательской обертки CCW для этого типа.</span><span class="sxs-lookup"><span data-stu-id="0ca56-152">The marshaler should return an instance of the custom CCW for that type.</span></span>  
  
### <a name="cleanup"></a><span data-ttu-id="0ca56-153">Чистку</span><span class="sxs-lookup"><span data-stu-id="0ca56-153">Cleanup</span></span>  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="0ca56-154">Позволяет маршалеру очищать собственные данные (CCW), возвращаемые <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="0ca56-154">Enables the marshaler to clean up the native data (the CCW) that is returned by the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="0ca56-155">Позволяет маршалеру очищать управляемые данные (RCW), возвращаемые <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="0ca56-155">Enables the marshaler to clean up the managed data (the RCW) that is returned by the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
### <a name="size-information"></a><span data-ttu-id="0ca56-156">Сведения о размере</span><span class="sxs-lookup"><span data-stu-id="0ca56-156">Size Information</span></span>  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="0ca56-157">Возвращает размер неуправляемых данных для маршалирования.</span><span class="sxs-lookup"><span data-stu-id="0ca56-157">Returns the size of the unmanaged data to be marshaled.</span></span>  
  
## <a name="implementing-the-getinstance-method"></a><span data-ttu-id="0ca56-158">Реализация метода экземпляра</span><span class="sxs-lookup"><span data-stu-id="0ca56-158">Implementing the GetInstance Method</span></span>  
 <span data-ttu-id="0ca56-159">Помимо <xref:System.Runtime.InteropServices.ICustomMarshaler> реализации интерфейса, пользовательские средства маршалирования должны `static` реализовать метод с именем `GetInstance` , который принимает в <xref:System.String> качестве параметра и имеет тип возвращаемого значения <xref:System.Runtime.InteropServices.ICustomMarshaler>.</span><span class="sxs-lookup"><span data-stu-id="0ca56-159">In addition to implementing the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface, custom marshalers must implement a `static` method called `GetInstance` that accepts a <xref:System.String> as a parameter and has a return type of <xref:System.Runtime.InteropServices.ICustomMarshaler>.</span></span> <span data-ttu-id="0ca56-160">Этот `static` метод вызывается уровнем COM-взаимодействия среды CLR для создания экземпляра пользовательского модуля маршалинга.</span><span class="sxs-lookup"><span data-stu-id="0ca56-160">This `static` method is called by the common language runtime's COM interop layer to instantiate an instance of the custom marshaler.</span></span> <span data-ttu-id="0ca56-161">Строка, передаваемая в `GetInstance` , является файлом cookie, который метод может использовать для настройки возвращаемого пользовательского модуля.</span><span class="sxs-lookup"><span data-stu-id="0ca56-161">The string that is passed to `GetInstance` is a cookie that the method can use to customize the returned custom marshaler.</span></span>  
  
```  
static ICustomMarshaler *GetInstance(String *pstrCookie);  
```  
  
## <a name="applying-marshalasattribute"></a><span data-ttu-id="0ca56-162">Применение атрибута MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="0ca56-162">Applying MarshalAsAttribute</span></span>  
 <span data-ttu-id="0ca56-163">Чтобы использовать пользовательский модуль упаковки, необходимо применить <xref:System.Runtime.InteropServices.MarshalAsAttribute> атрибут к параметру или полю, для которого выполняется маршалирование.</span><span class="sxs-lookup"><span data-stu-id="0ca56-163">To use a custom marshaler, you must apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to the parameter or field that is being marshaled.</span></span>  
  
 <span data-ttu-id="0ca56-164">Необходимо также передать <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType> значение перечисления <xref:System.Runtime.InteropServices.MarshalAsAttribute> в конструктор.</span><span class="sxs-lookup"><span data-stu-id="0ca56-164">You must also pass the <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType> enumeration value to the <xref:System.Runtime.InteropServices.MarshalAsAttribute> constructor.</span></span> <span data-ttu-id="0ca56-165">Кроме того, необходимо указать <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> поле с одним из следующих именованных параметров:</span><span class="sxs-lookup"><span data-stu-id="0ca56-165">In addition, you must specify the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field with one of the following named parameters:</span></span>  
  
-   <span data-ttu-id="0ca56-166"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>(обязательно): Имя пользовательского модуля упаковки с указанием сборки.</span><span class="sxs-lookup"><span data-stu-id="0ca56-166"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> (required): The assembly-qualified name of the custom marshaler.</span></span> <span data-ttu-id="0ca56-167">Имя должно включать пространство имен и класс пользовательского модуля упаковки.</span><span class="sxs-lookup"><span data-stu-id="0ca56-167">The name should include the namespace and class of the custom marshaler.</span></span> <span data-ttu-id="0ca56-168">Если пользовательский модуль упаковки не определен в сборке, в которой он используется, необходимо указать имя сборки, в которой он определен.</span><span class="sxs-lookup"><span data-stu-id="0ca56-168">If the custom marshaler is not defined in the assembly it is used in, you must specify the name of the assembly in which it is defined.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="0ca56-169"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> Вместо<xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> поля можно использовать поле.</span><span class="sxs-lookup"><span data-stu-id="0ca56-169">You can use the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> field instead of the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field.</span></span> <span data-ttu-id="0ca56-170"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>принимает тип, который проще указывать.</span><span class="sxs-lookup"><span data-stu-id="0ca56-170"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> takes a type that is easier to specify.</span></span>  
  
-   <span data-ttu-id="0ca56-171"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie>(необязательно): Файл cookie, который передается в пользовательский модуль упаковки.</span><span class="sxs-lookup"><span data-stu-id="0ca56-171"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie> (optional): A cookie that is passed to the custom marshaler.</span></span> <span data-ttu-id="0ca56-172">Вы можете использовать файл cookie для предоставления дополнительных сведений маршалеру.</span><span class="sxs-lookup"><span data-stu-id="0ca56-172">You can use the cookie to provide additional information to the marshaler.</span></span> <span data-ttu-id="0ca56-173">Например, если для предоставления нескольких оболочек используется один и тот же упаковщик, то файл cookie определяет конкретную оболочку.</span><span class="sxs-lookup"><span data-stu-id="0ca56-173">For example, if the same marshaler is used to provide a number of wrappers, the cookie identifies a specific wrapper.</span></span> <span data-ttu-id="0ca56-174">Файл cookie передается `GetInstance` в метод модуля упаковки.</span><span class="sxs-lookup"><span data-stu-id="0ca56-174">The cookie is passed to the `GetInstance` method of the marshaler.</span></span>  
  
 <span data-ttu-id="0ca56-175"><xref:System.Runtime.InteropServices.MarshalAsAttribute> Атрибут определяет пользовательский упаковщик, чтобы он мог активировать соответствующую оболочку.</span><span class="sxs-lookup"><span data-stu-id="0ca56-175">The <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute identifies the custom marshaler so it can activate the appropriate wrapper.</span></span> <span data-ttu-id="0ca56-176">Затем служба взаимодействия среды CLR проверяет атрибут и создает пользовательский модуль маршалинга при первом запуске аргумента (параметра или поля).</span><span class="sxs-lookup"><span data-stu-id="0ca56-176">The common language runtime's interop service then examines the attribute and creates the custom marshaler the first time the argument (parameter or field) needs to be marshaled.</span></span>  
  
 <span data-ttu-id="0ca56-177">Затем среда выполнения вызывает <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> методы и <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> для пользовательского упаковщика, чтобы активировать правильную оболочку для выполнения вызова.</span><span class="sxs-lookup"><span data-stu-id="0ca56-177">The runtime then calls the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> and <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> methods on the custom marshaler to activate the correct wrapper to handle the call.</span></span>  
  
## <a name="using-a-custom-marshaler"></a><span data-ttu-id="0ca56-178">Использование пользовательского средства упаковки</span><span class="sxs-lookup"><span data-stu-id="0ca56-178">Using a Custom Marshaler</span></span>  
 <span data-ttu-id="0ca56-179">После завершения пользовательского упаковщика его можно использовать в качестве пользовательской оболочки для конкретного типа.</span><span class="sxs-lookup"><span data-stu-id="0ca56-179">When the custom marshaler is complete, you can use it as a custom wrapper for a particular type.</span></span> <span data-ttu-id="0ca56-180">В следующем примере показано определение `IUserData` управляемого интерфейса:</span><span class="sxs-lookup"><span data-stu-id="0ca56-180">The following example shows the definition of the `IUserData` managed interface:</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#3)]  
  
 <span data-ttu-id="0ca56-181">В следующем примере `IUserData` интерфейс `NewOldMarshaler` использует пользовательский модуль упаковки, чтобы разрешить неуправляемым `IOld` клиентским приложениям `DoSomeStuff` передавать интерфейс в метод.</span><span class="sxs-lookup"><span data-stu-id="0ca56-181">In the following example, the `IUserData` interface uses the `NewOldMarshaler` custom marshaler to enable unmanaged client applications to pass an `IOld` interface to the `DoSomeStuff` method.</span></span> <span data-ttu-id="0ca56-182">Управляемое описание `DoSomeStuff` метода `INew` принимает интерфейс, как показано в предыдущем примере, в то время как неуправляемая версия `DoSomeStuff` принимает `IOld` указатель интерфейса, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="0ca56-182">The managed description of the `DoSomeStuff` method takes an `INew` interface, as shown in the previous example, whereas the unmanaged version of `DoSomeStuff` takes an `IOld` interface pointer, as shown in the following example.</span></span>  
  
```  
[uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]  
library UserLib {  
     [uuid(9B2BABCD-0705-11D3-A0CD-00C04FA35826)]  
     interface IUserData : IUnknown  
         HRESULT DoSomeStuff(IUnknown* pIOld);  
}  
```  
  
 <span data-ttu-id="0ca56-183">Библиотека типов, созданная при экспорте управляемого определения `IUserData` , возвращает неуправляемое определение, показанное в этом примере, вместо стандартного определения.</span><span class="sxs-lookup"><span data-stu-id="0ca56-183">The type library that is generated by exporting the managed definition of `IUserData` yields the unmanaged definition shown in this example instead of the standard definition.</span></span> <span data-ttu-id="0ca56-184">Атрибут, применяемый `INew` к аргументу в управляемом определении `DoSomeStuff` метода, указывает, что аргумент использует пользовательский модуль упаковки, как показано в следующем примере. <xref:System.Runtime.InteropServices.MarshalAsAttribute></span><span class="sxs-lookup"><span data-stu-id="0ca56-184">The <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute applied to the `INew` argument in the managed definition of the `DoSomeStuff` method indicates that the argument uses a custom marshaler, as the following example shows.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#4)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#4)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#4)]  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#5)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#5)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#5)]  
  
 <span data-ttu-id="0ca56-185">В предыдущих примерах первый параметр, предоставленный для <xref:System.Runtime.InteropServices.MarshalAsAttribute> атрибута, <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType> является значением `UnmanagedType.CustomMarshaler`перечисления.</span><span class="sxs-lookup"><span data-stu-id="0ca56-185">In the previous examples, the first parameter provided to the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute is the <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType> enumeration value `UnmanagedType.CustomMarshaler`.</span></span>  
  
 <span data-ttu-id="0ca56-186">Вторым параметром является <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> поле, которое предоставляет имя пользовательского модуля упаковки с указанием сборки.</span><span class="sxs-lookup"><span data-stu-id="0ca56-186">The second parameter is the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field, which provides the assembly-qualified name of the custom marshaler.</span></span> <span data-ttu-id="0ca56-187">Это имя состоит из пространства имен и класса пользовательского модуля упаковки (`MarshalType="MyCompany.NewOldMarshaler"`).</span><span class="sxs-lookup"><span data-stu-id="0ca56-187">This name consists of the namespace and class of the custom marshaler (`MarshalType="MyCompany.NewOldMarshaler"`).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public void CleanUpManagedData (object ManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object ManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CleanUpManagedData (ManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CleanUpManagedData(System::Object ^ ManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpManagedData : obj -&gt; unit" Usage="iCustomMarshaler.CleanUpManagedData ManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ManagedObj"><span data-ttu-id="0ca56-188">Управляемый объект, который необходимо уничтожить.</span><span class="sxs-lookup"><span data-stu-id="0ca56-188">The managed object to be destroyed.</span></span></param>
        <summary><span data-ttu-id="0ca56-189">Выполняет необходимую очистку управляемых данных, если они больше не нужны.</span><span class="sxs-lookup"><span data-stu-id="0ca56-189">Performs necessary cleanup of the managed data when it is no longer needed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpNativeData : nativeint -&gt; unit" Usage="iCustomMarshaler.CleanUpNativeData pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="0ca56-190">Указатель на неуправляемые данные, которые необходимо уничтожить.</span><span class="sxs-lookup"><span data-stu-id="0ca56-190">A pointer to the unmanaged data to be destroyed.</span></span></param>
        <summary><span data-ttu-id="0ca56-191">Выполняет необходимую очистку неуправляемых данных, если они больше не нужны.</span><span class="sxs-lookup"><span data-stu-id="0ca56-191">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNativeDataSize();" />
      <MemberSignature Language="F#" Value="abstract member GetNativeDataSize : unit -&gt; int" Usage="iCustomMarshaler.GetNativeDataSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ca56-192">Возвращает размер собственных данных для маршалинга.</span><span class="sxs-lookup"><span data-stu-id="0ca56-192">Returns the size of the native data to be marshaled.</span></span></summary>
        <returns><span data-ttu-id="0ca56-193">Размер собственных данных в байтах.</span><span class="sxs-lookup"><span data-stu-id="0ca56-193">The size, in bytes, of the native data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public IntPtr MarshalManagedToNative (object ManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object ManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MarshalManagedToNative (ManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr MarshalManagedToNative(System::Object ^ ManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member MarshalManagedToNative : obj -&gt; nativeint" Usage="iCustomMarshaler.MarshalManagedToNative ManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ManagedObj"><span data-ttu-id="0ca56-194">Управляемый объект, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="0ca56-194">The managed object to be converted.</span></span></param>
        <summary><span data-ttu-id="0ca56-195">Преобразует управляемые данные в неуправляемые.</span><span class="sxs-lookup"><span data-stu-id="0ca56-195">Converts the managed data to unmanaged data.</span></span></summary>
        <returns><span data-ttu-id="0ca56-196">Указатель на COM-представление управляемого объекта.</span><span class="sxs-lookup"><span data-stu-id="0ca56-196">A pointer to the COM view of the managed object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member MarshalNativeToManaged : nativeint -&gt; obj" Usage="iCustomMarshaler.MarshalNativeToManaged pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="0ca56-197">Указатель на неуправляемые данные, которые необходимо инкапсулировать.</span><span class="sxs-lookup"><span data-stu-id="0ca56-197">A pointer to the unmanaged data to be wrapped.</span></span></param>
        <summary><span data-ttu-id="0ca56-198">Преобразует неуправляемые данные в управляемые.</span><span class="sxs-lookup"><span data-stu-id="0ca56-198">Converts the unmanaged data to managed data.</span></span></summary>
        <returns><span data-ttu-id="0ca56-199">Объект, представляющий управляемое представление данных модели COM.</span><span class="sxs-lookup"><span data-stu-id="0ca56-199">An object that represents the managed view of the COM data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
