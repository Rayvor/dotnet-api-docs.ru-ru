<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b5d5c4a5ae4ffe210b4038268798670fa923f0f1" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70345853" /></Metadata><TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type FileLogTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет простой прослушиватель, который направляет вывод журнала в файл.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Класс предоставляет возможности автоматического обслуживания для архивации файлов журналов по мере необходимости, ежедневно или отдельно для каждого приложения. Эта функция автоматического архивирования помогает снизить обязанности разработчиков и администраторов.  
  
 Экземпляр <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> можно добавить <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> в коллекции или <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> , чтобы перенаправить вывод из журнала в текстовый файл. Экземпляры этого класса также можно добавить `My.Application.Log` в или `My.Log` (для веб-приложений) в Visual Basic приложениях. Дополнительные сведения см. в разделе [Пошаговое руководство: Изменение места записи данных My. Application. log](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`  
  
 Основные возможности этого класса:  
  
1.  *Функции архивации*. Имена файлов журналов, создаваемых этим классом, именуются в соответствии с базовым именем и датой, а также с числом, которое позволяет отличить файл журнала от последовательных версий журнала. Новые файлы журнала создаются по мере необходимости.  
  
     Явная форма имени файла — `baseName`[-`dateStamp`] [-`version`]. log, где:  
  
    -   Часть — это основное имя журнала, заданное <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> свойством. `baseName`  
  
    -   Часть имеет формат "гггг-мм-дд" и отображается, если <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> имеет значение <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> или <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>. `dateStamp`  
  
    -   Если требуется несколько файлов `baseName` журнала с одной и `dateStamp` `version` той же частью, в имя файла добавляется часть `Integer`, положительная.  
  
2.  *Несколько экземпляров класса*. Если экземпляр <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класса записывает в используемый файл:  
  
    -   Класс совместно использует файл, если он используется другим экземпляром <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класса в том же процессе.  
  
    -   Класс создает новый файл журнала, используя следующее доступное имя, если файл используется другим процессом.  
  
3.  *Безопасность потоков*. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Класс является потокобезопасным. Это позволяет безопасно записывать сообщения в журнал из нескольких потоков без использования блокировок.  
  
 **Расположение файла журнала**  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> Свойство<xref:Microsoft.VisualBasic.Logging.LogFileLocation> принимает перечисление, чтобы указать один из стандартных каталогов для записи файла журнала.  
  
-   Чтобы записать журнал в другое расположение, задайте для свойства <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> нужное расположение.  
  
 **Имя файла журнала**  
  
-   Базовое имя файла журнала указывается <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> свойством.  
  
-   Имя текущего файла журнала можно прочитать из <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> свойства. Он является производным от нескольких других свойств и текущего состояния журналов в файловой системе.  
  
 **Ведение журнала**  
  
-   Минимальная частота создания новых файлов журнала определяется <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> свойством. Если значение равно <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> или <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, новый файл журнала создается по крайней мере один раз в день или неделю, а в <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> имя добавляется метка даты.  
  
-   Максимальный размер файла журнала (в байтах) определяется <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> свойством. Если размер файла журнала превышает этот размер, дополнительные сообщения, записанные в журнал, удаляются и, в зависимости <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> от свойства, создается исключение.  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> Свойство определяет объем свободного пространства (в байтах), который должен быть доступен. Это позволяет гарантировать, что <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класс не будет потреблять все доступное место на диске. Используйте свойство, чтобы указать поведение операций записи в журнал при наличии <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> меньшего объема свободного байта. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>  
  
 **Параметры вывода файла журнала**  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> Свойство указывает, следует ли автоматически сбрасывать базовый поток после каждой записи в файл журнала.  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> Свойство указывает, следует ли добавлять сообщения в текущий файл журнала, если это разрешено, или записывать их в новый файл журнала.  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Свойство определяет строку, используемую для разграничения полей в сообщении журнала.  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> Свойство определяет кодировку, используемую при создании нового файла журнала.  
  
 **Выходные данные файла журнала**  
  
-   Методы <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> и<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> записывают сообщения в файл журнала. Эти методы проверяют <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> свойство вместе с любыми существующими журналами с тем же базовым именем, чтобы определить, следует ли создать новый журнал.  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> Метод сбрасывает все сообщения, находящиеся в буфере вывода, в файл журнала.  
  
-   <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> Метод закрывает файл журнала, чтобы он мог использоваться другими процессами.  
  
 **Включение вывода**  
  
 Для использования прослушивателя трассировки необходимо включить трассировку или отладку. Ниже приведен синтаксис, характерный для компилятора. Если вы используете компиляторы, отличные C# от или Visual Basic, обратитесь к документации по компилятору.  
  
-   Чтобы включить отладку C#в, добавьте `/d:DEBUG` флаг в командную строку компилятора при компиляции кода или добавьте `#define DEBUG` в начало файла. В Visual Basic добавьте `/d:DEBUG=True` флаг в командную строку компилятора.  
  
-   Чтобы включить трассировку C#в, добавьте `/d:TRACE` флаг в командную строку компилятора при компиляции кода или добавьте `#define TRACE` в начало файла. В Visual Basic добавьте `/d:TRACE=True` флаг в командную строку компилятора.  
  
 Чтобы задать уровень прослушивателя, измените файл конфигурации для приложения. В этом файле можно добавить прослушиватель, задать его тип и задать его параметры, удалить прослушиватель или удалить все прослушиватели, заданные приложением ранее. Файл конфигурации следует отформатировать, как показано в следующем примере.  
  
 Для выполнения этого примера необходимо указать полное имя сборки. Дополнительные сведения о получении полного имени сборки см. в разделе [имена сборок](~/docs/framework/app-domains/assembly-names.md).  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
    <related type="Article" href="https://msdn.microsoft.com/library/ecc74f95-743c-450d-93f6-09a30db0fe4a">Пошаговое руководство. Изменение места записи сведений для My.Application.Log</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> и задает имя.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> с именем, используемым по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод задает для имени <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> экземпляра класса значение FileLogTraceListener.  
  
 Доступ к имени экземпляра можно получить с помощью <xref:System.Diagnostics.TraceListener.Name%2A> свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.FileLogTraceListener : string -&gt; Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="new Microsoft.VisualBasic.Logging.FileLogTraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see langword="String" />. Имя объекта экземпляра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> с использованием предоставленного имени.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод задает для <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> `name`имени экземпляра класса значение.  
  
 Можно получить доступ к имени экземпляра, чтобы <xref:System.Diagnostics.TraceListener.Name%2A> представить свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Append : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет, следует ли добавить выходные данные в текущий файл или следует записать их в новый файл.</summary>
        <value>Значение типа <see langword="Boolean" />; значение <see langword="True" /> указывает, что выходные данные добавляются в текущий файл, а значение <see langword="False" /> указывает, что выходные данные записываются в новый файл. По умолчанию значение данного свойства равно <see langword="True" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство имеет `False`значение, выходные данные записываются в новый файл. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> Если свойство имеет `True`значение, выходные данные добавляются к текущему файлу, если:  
  
-   Выходной файл заблокирован другим процессом. В этом случае создается новый файл журнала с номером версии, включенным в <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> имя.  
  
-   Текущий размер файла больше значения, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> разрешенного свойством. В этом случае дополнительные сообщения отбрасываются и, в зависимости от <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> свойства, создается исключение.  
  
-   Имя существующего файла устарело согласно расписанию создания журнала, заданному <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> свойством. В этом случае создается новый файл журнала, а в <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> имя добавляется метка даты.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, очищается ли буфер при записи в файл журнала.</summary>
        <value>Значение типа <see langword="Boolean" />, значение <see langword="True" /> указывает, что поток очищается после каждой записи; в противном случае записи журнала буферизуются и записываются более эффективно. По умолчанию значение данного свойства равно <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `False` Параметр<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> для свойства обеспечивает наилучшую производительность для большинства приложений, так как более эффективно записывать несколько сообщений в файл журнала в один момент времени. Можно использовать <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> метод для сброса всех сообщений, находящихся в данный момент в буфере вывода файла журнала. Можно также использовать <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> метод, который неявно очищает поток перед закрытием файла журнала.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseFileName : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает базовое имя файлов журнала, используемое для создания полного имени файлов журнала.</summary>
        <value><see langword="String" />. Базовое имя файлов журнала. По умолчанию используется имя продукта приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство определяет базовое имя для файлов журнала <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> , записываемых классом. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>  
  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Свойство предоставляет текущее полное имя файла журнала. Он создается в соответствии с путем к журналу, базовым именем, датой и числом, чтобы отличать его от разных версий журнала. Новые файлы журнала создаются по мере необходимости.  
  
 В качестве полного имени файла журнала используется явная форма: `path` \\ `baseName`[-`dateStamp`] [-`iteration`]. log, где  
  
-   Часть определяется <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> свойством и, если для <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>этого свойства задано значение, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> свойство. `path`  
  
-   Часть — это основное имя журнала, заданное <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> свойством. `baseName`  
  
-   Часть имеет формат "гггг-мм-дд" и отображается, если <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> параметр имеет значение <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> или <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>. `dateStamp`  
  
-   Если требуется несколько файлов `baseName` журнала с одной и `dateStamp` `iteration` той же частью, в имя файла добавляется часть `Integer`, положительная.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void Close() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="fileLogTraceListener.Close " />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает основной поток для текущего файла журнала и освобождает все ресурсы, связанные с текущим потоком.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вам не нужно вызывать <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> метод явным образом, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> так как класс управляет базовым Steam.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomLocation : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает каталог файлов журнала, если для свойства <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> задано значение <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</summary>
        <value><see langword="String" /> — имя каталога, в котором размещаются файлы журнала. По умолчанию в качестве значения этого свойства задается каталог, выбранный пользователем для хранения данных приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство задано, оно также <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> задает для <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>свойства значение. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>  
  
 Если не удается разрешить каталог, свойствовызоветисключение.<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает разделитель, используемый для разделения полей в сообщении журнала.</summary>
        <value><see langword="String" /> — разделитель, используемый для разделения полей в сообщении журнала. По умолчанию в качестве значения этого свойства задан символ табуляции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Свойство позволяет изменить разделитель по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberSignature Language="F#" Value="member this.DiskSpaceExhaustedBehavior : Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет, что делать при выполнении записи в файл журнала, когда на диске осталось меньше свободного места, чем указано в свойстве <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />.</summary>
        <value><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />. Определяет, что делать при выполнении записи в файл журнала, когда на диске осталось меньше свободного места, чем указано в свойстве <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />, или когда размер файла журнала превышает допустимое значение, заданное в свойстве <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство имеет <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>значение, сообщения журнала автоматически удаляются, если недостаточно зарезервированного места на диске. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> Это поведение по умолчанию, которое предотвращает сбой простых приложений, если диск переполнен.  
  
 Более надежные приложения могут установить <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> свойство в <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>значение и добавить `Try...Catch` блоки вокруг всего кода, записывающего данные в журнал.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fileLogTraceListener.Dispose disposing" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="True" /> соответствует освобождению управляемых и неуправляемых ресурсов; значение <see langword="False" /> соответствует освобождению только неуправляемых ресурсов.</param>
        <summary>Закрывает основной поток и при необходимости освобождает управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если параметр `disposing` имеет значение `True`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>. Этот метод вызывает метод `Dispose` каждого объекта, на который есть ссылка.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see langword="Dispose" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />.  
  
Этот метод вызывает <see langword="Dispose" /> метод базового класса, <see langword="Dispose" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает кодировку, которая должна использоваться при создании нового файла журнала.</summary>
        <value><see cref="T:System.Text.Encoding" /> — кодировка, которая должна использоваться при создании нового файла журнала. По умолчанию этому свойству присваивается значение <see cref="T:System.Text.UTF8Encoding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При добавлении текста в существующий файл журнала используется кодировка для этого файла вместо кодировки, заданной <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> свойством.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void Flush() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="fileLogTraceListener.Flush " />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Очищает основной поток, выполняющий запись в текущий файл журнала.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> Используйте метод для записи всех буферизованных данных в текущий файл журнала.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullLogFileName : string" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает текущее полное имя файла журнала.</summary>
        <value><see langword="String" /> — текущее полное имя файла журнала.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Свойство предоставляет текущее полное имя файла журнала. Он создается в соответствии с путем к журналу, базовым именем, датой и числом, чтобы отличать его от разных версий журнала. Новые файлы журнала создаются по мере необходимости.  
  
 В явной форме полного имени файла журнала задается `path` \\ `baseName`[-`dateStamp`] [-`iteration`]. log, где:  
  
-   Часть определяется <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> свойством и, если для <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>этого свойства задано значение, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> свойство. `path`  
  
-   Часть — это основное имя журнала, заданное <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> свойством. `baseName`  
  
-   Часть имеет формат гггг-мм-дд и отображается, если <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> имеет значение <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> или <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>. `dateStamp`  
  
-   Если требуется несколько файлов `baseName` журнала с одной и `dateStamp` `iteration` той же частью, в имя файла добавляется часть `Integer`, положительная.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="fileLogTraceListener.GetSupportedAttributes " />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает настраиваемые атрибуты конфигурации XML, поддерживаемые прослушивателем трассировки.</summary>
        <returns>Массив типа <see langword="String" />, содержащий атрибуты конфигурации XML, распознаваемые данным прослушивателем.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Настраиваемые атрибуты для <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> можно использовать в XML-файле конфигурации для управления поведением экземпляра <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класса. Использование любого другого атрибута вызывает исключение конфигурации.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostName : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, следует ли включать в выходные данные имя сайта компьютера, на котором ведется журнал.</summary>
        <value><see langword="Boolean" />. Если следует включить адрес сайта, используется значение <see langword="True" />; в противном случае — <see langword="False" />. Значение по умолчанию — <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство для настройки поведения <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> методов и. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.VisualBasic.Logging.LogFileLocation with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает расположение файлов журнала.</summary>
        <value><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" /> — расположение файла журнала. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы задать для пути к журналу один из стандартных путей, определяемых <xref:Microsoft.VisualBasic.Logging.LogFileLocation> значениями перечисления. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>  
  
|**Значение расположения**|**Путь**|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|Путь к данным приложения, которые являются общими для всех пользователей, в формате:<br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> Типичное значение для `BasePath` :<br /><br /> Данные C:\Documents и Settings\All Users\Application<br /><br /> Значения `CompanyName`, `ProductName`и берутсяизсборки.`ProductVersion`|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|Путь для исполняемого файла, запустившего приложение.|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|Путь к данным приложения пользователя в формате:<br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> Типичное значение для `BasePath` :<br /><br /> C:\Documents and Settings\\`username`\Application Data<br /><br /> Значения `CompanyName`, `ProductName`и образуютсборку.`ProductVersion`|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|Путь к временной папке текущей системы.|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|Если строка, указанная <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> параметром, не пуста, используйте ее в качестве пути; в противном случае используйте путь для данных приложения пользователя.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileCreationSchedule : Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет, какую дату включать в имена файлов журнала.</summary>
        <value><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />. Указывает, какую дату включать в имена файлов журнала. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Назначьте одно из <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> значений <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> перечисления свойству, чтобы указать, какую дату следует включить в имена файлов журнала.  
  
 Формат даты — гггг-мм-дд. Дополнительные сведения о формате имени файла журнала см. в разделе <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.  
  
|**Значение Логфилекреатионсчедуле**|**Дата в имени файла журнала**|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|Включать текущую дату в имя файла журнала.|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|Не включать дату в имя файла журнала.|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|Включать в имя файла журнала первый день текущей недели.<br /><br /> Неделя начинается в субботу.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxFileSize : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает максимальный допустимый размер файла журнала (в байтах).</summary>
        <value><see langword="Long" />. Это максимальный допустимый размер файла журнала (в байтах). Значение по умолчанию — 5000000.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте это свойство, чтобы убедиться, что файлы журнала не увеличиваются слишком велики.  
  
 Если размер файла журнала (в байтах) больше значения этого свойства, то когда <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класс пытается записать сообщение в журнал, сообщение отбрасывается, а ошибка — в автоматическом режиме, или исключение создается в зависимости от значения свойства <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>свойство. В противном случае сообщение записывается в журнал, если объем свободного места на диске (в байтах) меньше <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Если для этого свойства задано значение меньше 1000.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ReserveDiskSpace : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объем необходимого свободного дискового пространства в байтах перед записью сообщений в файл журнала.</summary>
        <value><see langword="Long" />. Необходимый объем свободного места на диске. Значение по умолчанию — 10000000.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте это свойство, чтобы убедиться, что файлы журнала не полностью заполнили диск.  
  
 Если объем свободного места на диске (в байтах) меньше значения этого свойства, то когда <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> класс пытается записать сообщение в журнал, сообщение удаляется, а ошибка — в автоматическом режиме, либо возникает исключение в зависимости от значения свойства < Свойство C2 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> > . В противном случае сообщение записывается в журнал, если размер файла журнала (в байтах) больше <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Если для этого свойства задано значение меньше 0.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает данные трассировки в выходной файл.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>методы не предназначены для вызова с помощью кода приложения. Эти методы вызываются членами <xref:System.Diagnostics.Debug>классов, <xref:System.Diagnostics.Trace>и <xref:System.Diagnostics.TraceSource> для записи данных трассировки в выходные данные.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса, идентификаторы потока и сведения о трассировке стека.</param>
        <param name="source">Имя источника трассировки, вызвавшего этот метод.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="data">Выдаваемые данные трассировки.</param>
        <summary>Записывает сведения трассировки, объект данных и сведения о событии в исходящий файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод:  
  
1.  Форматирует данные и сведения о контексте для выходных данных.  
  
2.  При необходимости создает новый файл журнала.  
  
3.  Записывает сведения в файл журнала.  
  
 Дополнительные сведения о создании новых файлов журналов см. в <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>разделе.  
  
 В следующей таблице перечислены поля вывода в порядке их появления. Поля разделяются строкой, которую <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> указывает свойство, и за ними следует признак конца строки.  
  
|**Поле**|**Условие вывода**|**Описание**|  
|---------------|--------------------------|---------------------|  
|`source`|Всегда|Значение `name`.|  
|`severity`|Всегда|Имя перечисления — значение `eventType`.|  
|`id`|Всегда|Строковое представление параметра `id`.|  
|`message`|Всегда|Строковое представление параметра `data`.|  
|`callStack`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.Callstack>|<xref:System.Diagnostics.TraceEventCache.Callstack%2A> Свойство объекта`eventCache`.|  
|`CorrelationID`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.LogicalOperationStack>|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство объекта`eventCache`.|  
|`DateTime`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.DateTime>|Строковое представление <xref:System.Diagnostics.TraceEventCache.DateTime%2A> `eventCache`свойства. Для преобразования строки используется инвариантный язык и региональные параметры.|  
|`ProcessID`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.ProcessId>|Строковое представление <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> `eventCache`свойства. Для преобразования строки используется инвариантный язык и региональные параметры.|  
|`ThreadID`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.ThreadId>|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство объекта`eventCache`.|  
|`Timestamp`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.Timestamp>|Строковое представление <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> `eventCache`свойства. Для преобразования строки используется инвариантный язык и региональные параметры.|  
|`HostName`|Если свойство имеет `True`значение. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>|Имя компьютера.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса, идентификаторы потока и сведения о трассировке стека.</param>
        <param name="source">Имя источника трассировки, вызвавшего этот метод.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="data">Выдаваемые данные массива объектов.</param>
        <summary>Записывает сведения трассировки, массив объектов данных и сведения о событии в выходной файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод:  
  
1.  Форматирует данные и сведения о контексте для выходных данных,  
  
2.  При необходимости создает новый файл журнала.  
  
3.  Записывает сведения в файл журнала.  
  
 Дополнительные сведения о создании новых файлов журналов см. в <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>разделе.  
  
 В этой таблице перечислены поля вывода в том порядке, в котором они отображаются. Поля разделяются строкой, которую <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> указывает свойство, и за ними следует признак конца строки.  
  
|**Поле**|**Условие вывода**|**Описание**|  
|---------------|--------------------------|---------------------|  
|`source`|Всегда|Значение `name`.|  
|`severity`|Всегда|Имя перечисления — значение `eventType`.|  
|`id`|Всегда|Строковое представление параметра `id`.|  
|`message`|Всегда|Строка, состоящая из строкового представления каждого элемента в `data`, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>отделенных друг от друга.|  
|`callStack`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.Callstack>|<xref:System.Diagnostics.TraceEventCache.Callstack%2A> Свойство объекта`eventCache`.|  
|`CorrelationID`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.LogicalOperationStack>|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство объекта`eventCache`.|  
|`DateTime`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.DateTime>|Строковое представление <xref:System.Diagnostics.TraceEventCache.DateTime%2A> `eventCache`свойства. Для преобразования строки используется инвариантный язык и региональные параметры.|  
|`ProcessID`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.ProcessId>|Строковое представление <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> `eventCache`свойства. Для преобразования строки используется инвариантный язык и региональные параметры.|  
|`ThreadID`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.ThreadId>|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство объекта`eventCache`.|  
|`Timestamp`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.Timestamp>|Строковое представление <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> `eventCache`свойства. Для преобразования строки используется инвариантный язык и региональные параметры.|  
|`HostName`|Если свойство имеет `True`значение. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>|Имя компьютера.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает сведения трассировки и сведения о событиях в выходной файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>методы не предназначены для вызова с помощью кода приложения. Эти методы вызываются членами <xref:System.Diagnostics.Debug>классов, <xref:System.Diagnostics.Trace>и <xref:System.Diagnostics.TraceSource> для записи данных трассировки в выходные данные.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса, идентификаторы потока и сведения о трассировке стека.</param>
        <param name="source">Имя источника трассировки, вызвавшего этот метод.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="message">Записываемое сообщение.</param>
        <summary>Записывает сведения трассировки, сообщение и сведения о событии в выходной файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод:  
  
1.  Форматирует данные и сведения о контексте для выходных данных.  
  
2.  При необходимости создает новый файл журнала.  
  
3.  Записывает сведения в файл журнала.  
  
 Дополнительные сведения о создании новых файлов журналов см. в <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>разделе.  
  
 В этой таблице перечислены поля вывода в том порядке, в котором они отображаются. Поля разделяются строкой, которую <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> указывает свойство, и за ними следует признак конца строки.  
  
|**Поле**|**Условие вывода**|**Описание**|  
|---------------|--------------------------|---------------------|  
|`source`|Всегда.|Значение `name`.|  
|`severity`|Всегда.|Имя перечисления — значение `eventType`.|  
|`id`|Всегда.|Строковое представление параметра `id`.|  
|`message`|Всегда.|Значение `message`.|  
|`callStack`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.Callstack>|<xref:System.Diagnostics.TraceEventCache.Callstack%2A> Свойство объекта`eventCache`.|  
|`CorrelationID`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.LogicalOperationStack>|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство объекта`eventCache`.|  
|`DateTime`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.DateTime>|Строковое представление <xref:System.Diagnostics.TraceEventCache.DateTime%2A> `eventCache`свойства. Для преобразования строки используется инвариантный язык и региональные параметры.|  
|`ProcessID`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.ProcessId>|Строковое представление <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> `eventCache`свойства. Для преобразования строки используется инвариантный язык и региональные параметры.|  
|`ThreadID`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.ThreadId>|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство объекта`eventCache`.|  
|`Timestamp`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.Timestamp>|Строковое представление <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> `eventCache`свойства. Для преобразования строки используется инвариантный язык и региональные параметры.|  
|`HostName`|Если свойство имеет `True`значение. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>|Имя компьютера.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса, идентификаторы потока и сведения о трассировке стека.</param>
        <param name="source">Имя источника трассировки, вызвавшего этот метод.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="format">Строка формата, не содержащая элементов формата или содержащая один либо несколько элементов формата, связанных с объектами в массиве <paramref name="args" />.</param>
        <param name="args">Массив <see langword="Object" />, содержащий несколько (или ни одного) объектов, которые необходимо форматировать.</param>
        <summary>Записывает сведения трассировки, форматированный массив объектов данных и сведения о событии в исходящий файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод:  
  
1.  Форматирует данные и сведения о контексте для выходных данных.  
  
2.  При необходимости создает новый файл журнала.  
  
3.  Записывает сведения в файл журнала.  
  
 Дополнительные сведения о создании нового файла журнала см. в <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>разделе.  
  
 В этой таблице перечислены поля вывода в том порядке, в котором они отображаются. Поля разделяются строкой, которую <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> указывает свойство, а затем символом конца строки.  
  
|**Поле**|**Условие вывода**|**Описание**|  
|---------------|--------------------------|---------------------|  
|`source`|Всегда|Значение `name`.|  
|`severity`|Всегда|Имя перечисления — значение `eventType`.|  
|`id`|Всегда|Строковое представление параметра `id`.|  
|`message`|Всегда|Данные в `args` формате `format` со строкой и использование инвариантного языка и региональных параметров для преобразования строк.|  
|`callStack`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.Callstack>|<xref:System.Diagnostics.TraceEventCache.Callstack%2A> Свойство объекта`eventCache`.|  
|`CorrelationID`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.LogicalOperationStack>|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство объекта`eventCache`.|  
|`DateTime`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.DateTime>|Строковое представление <xref:System.Diagnostics.TraceEventCache.DateTime%2A> `eventCache`свойства. Для преобразования строки используется инвариантный язык и региональные параметры.|  
|`ProcessID`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.ProcessId>|Строковое представление <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> `eventCache`свойства. Для преобразования строки используется инвариантный язык и региональные параметры.|  
|`ThreadID`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.ThreadId>|<xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Свойство объекта`eventCache`.|  
|`Timestamp`|Если флаг установлен в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>свойстве. <xref:System.Diagnostics.TraceOptions.Timestamp>|Строковое представление <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> `eventCache`свойства. Для преобразования строки используется инвариантный язык и региональные параметры.|  
|`HostName`|Если свойство имеет `True`значение. <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>|Имя компьютера.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="fileLogTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><see langword="String" />. Настраиваемое сообщение для записи.</param>
        <summary>Дословно записывает сообщение на диск без какой-либо дополнительной контекстной информации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> Метод записывает конкретное сообщение в файл журнала без каких-либо дополнительных сведений о контексте.  
  
 Используйте один из <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> методов, чтобы включить сведения о контексте в выходные данные журнала.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="fileLogTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><see langword="String" />. Настраиваемое сообщение для записи.</param>
        <summary>Дословно записывает сообщение на диск без какой-либо дополнительной контекстной информации, после сообщения ставится текущий разделитель строк.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> Метод записывает конкретное сообщение в файл журнала без каких-либо дополнительных сведений о контексте.  
  
 Используйте один из <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> методов, чтобы включить сведения о контексте в выходные данные журнала.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
