<Type Name="AssemblyDependencyResolver" FullName="System.Runtime.Loader.AssemblyDependencyResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f9adec247481caf945c3c70ec14a5f92d96a9e8" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73389501" /></Metadata><TypeSignature Language="C#" Value="public sealed class AssemblyDependencyResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssemblyDependencyResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Loader.AssemblyDependencyResolver" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyDependencyResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyDependencyResolver sealed" />
  <TypeSignature Language="F#" Value="type AssemblyDependencyResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Loader</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Позволяет программе разрешать сборки и собственные библиотеки в пути на основе зависимостей заданной сборки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Класс `AssemblyDependencyResolver` позволяет разработчикам приложений более легко разработать архитектуру подключаемых модулей в сочетании с пользовательскими экземплярами <xref:System.Runtime.Loader.AssemblyLoadContext?displayProperty=nameWithType> для изоляции подключаемых модулей, а также разрешить подключаемым модулям загружать зависимости.

 [Руководство по созданию приложения .NET Core с подключаемыми](https://docs.microsoft.com/dotnet/core/tutorials/creating-app-with-plugin-support) модулями описывает, как создать настраиваемый <xref:System.Runtime.Loader.AssemblyLoadContext>, использующий `AssemblyDependencyResolver` для разрешения зависимостей подключаемого модуля и правильно изолировать зависимости подключаемого модуля от ведущего приложения.
 
    ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyDependencyResolver (string componentAssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string componentAssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyDependencyResolver.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentAssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyDependencyResolver(System::String ^ componentAssemblyPath);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Loader.AssemblyDependencyResolver : string -&gt; System.Runtime.Loader.AssemblyDependencyResolver" Usage="new System.Runtime.Loader.AssemblyDependencyResolver componentAssemblyPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentAssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentAssemblyPath">Путь к управляемой точке входа компонента или подключаемого модуля.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Loader.AssemblyDependencyResolver" />, используя путь к сборке компонента.</summary>
        <remarks>`componentAssemblyPath` может быть относительным или абсолютным путем. Сборка должна иметь сопутствующий файл Deps. JSON в том же каталоге, который описывает зависимости сборки. Этот файл выводится в процессе сборки.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveAssemblyToPath">
      <MemberSignature Language="C#" Value="public string ResolveAssemblyToPath (System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ResolveAssemblyToPath(class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveAssemblyToPath(System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ResolveAssemblyToPath(System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.ResolveAssemblyToPath : System.Reflection.AssemblyName -&gt; string" Usage="assemblyDependencyResolver.ResolveAssemblyToPath assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Имя сборки, которое необходимо разрешить.</param>
        <summary>Разрешает путь к сборке с заданным именем сборки на основе зависимостей компонента.</summary>
        <returns>Путь к сборке с заданным именем из файла deps.json компонента или значение <see langword="null" />, если сборка не существует в файле deps.json или не находится на диске в расположении, указанном в файле deps.json.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUnmanagedDllToPath">
      <MemberSignature Language="C#" Value="public string ResolveUnmanagedDllToPath (string unmanagedDllName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ResolveUnmanagedDllToPath(string unmanagedDllName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveUnmanagedDllToPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveUnmanagedDllToPath (unmanagedDllName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ResolveUnmanagedDllToPath(System::String ^ unmanagedDllName);" />
      <MemberSignature Language="F#" Value="member this.ResolveUnmanagedDllToPath : string -&gt; string" Usage="assemblyDependencyResolver.ResolveUnmanagedDllToPath unmanagedDllName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedDllName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unmanagedDllName">Имя собственной библиотеки, которую необходимо разрешить.</param>
        <summary>Разрешает путь к собственной библиотеке с заданным именем на основе зависимостей компонента.</summary>
        <returns>Путь к собственной библиотеке с заданным именем из файла deps.json компонента и текущим идентификатором среды выполнения или значение <see langword="null" />, если сборка не существует в файле deps.json или не находится на диске в расположении, указанном в файле deps.json.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
