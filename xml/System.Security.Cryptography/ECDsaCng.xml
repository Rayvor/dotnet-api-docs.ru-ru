<Type Name="ECDsaCng" FullName="System.Security.Cryptography.ECDsaCng">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6805504eb676aa056830a2f3b5d194b28a469b0c" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70363628" /></Metadata><TypeSignature Language="C#" Value="public sealed class ECDsaCng : System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ECDsaCng extends System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDsaCng" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ECDsaCng&#xA;Inherits ECDsa" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDsaCng sealed : System::Security::Cryptography::ECDsa" />
  <TypeSignature Language="F#" Value="type ECDsaCng = class&#xA;    inherit ECDsa" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.ECDsa</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2bd90-101">Предоставляет реализацию алгоритма цифровых подписей на основе эллиптических кривых (ECDSA) на платформе криптографии следующего поколения (CNG).</span><span class="sxs-lookup"><span data-stu-id="2bd90-101">Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-102">Этот класс является производным от <xref:System.Security.Cryptography.ECDsa> абстрактного базового класса.</span><span class="sxs-lookup"><span data-stu-id="2bd90-102">This class derives from the <xref:System.Security.Cryptography.ECDsa> abstract base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bd90-103">В следующем примере показано использование <xref:System.Security.Cryptography.ECDsaCng> класса для подписывания сообщения и использование подписи для проверки того, что сообщение не было изменено.</span><span class="sxs-lookup"><span data-stu-id="2bd90-103">The following example shows how to use the <xref:System.Security.Cryptography.ECDsaCng> class to sign a message and how to use the signature to verify that the message has not been altered.</span></span>  
  
 [!code-csharp[ECDsaCng#1](~/samples/snippets/csharp/VS_Snippets_CLR/ecdsacng/cs/program.cs#1)]
 [!code-vb[ECDsaCng#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ecdsacng/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2bd90-104">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaCng" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bd90-105">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaCng" /> с парой случайных пар ключей.</span><span class="sxs-lookup"><span data-stu-id="2bd90-105">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class with a random key pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-106">Пара случайных ключей имеет длину открытого ключа 521 бит.</span><span class="sxs-lookup"><span data-stu-id="2bd90-106">The random key pair has a public key length of 521 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="2bd90-107">Классы криптографии следующего поколения (CNG) не поддерживаются в этой системе.</span><span class="sxs-lookup"><span data-stu-id="2bd90-107">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(int keySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaCng : int -&gt; System.Security.Cryptography.ECDsaCng" Usage="new System.Security.Cryptography.ECDsaCng keySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize"><span data-ttu-id="2bd90-108">Размер ключа.</span><span class="sxs-lookup"><span data-stu-id="2bd90-108">The size of the key.</span></span> <span data-ttu-id="2bd90-109">Допустимые размеры ключей: 256, 384 и 521 бит.</span><span class="sxs-lookup"><span data-stu-id="2bd90-109">Valid key sizes are 256, 384, and 521 bits.</span></span></param>
        <summary><span data-ttu-id="2bd90-110">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaCng" /> с созданной случайным образом парой ключей указанного размера.</span><span class="sxs-lookup"><span data-stu-id="2bd90-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class with a random key pair, using the specified key size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-111">Пара случайных ключей будет иметь длину открытого ключа, определенную `keySize` параметром.</span><span class="sxs-lookup"><span data-stu-id="2bd90-111">The random key pair will have the public key length defined by the `keySize` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="2bd90-112">Классы криптографии следующего поколения (CNG) не поддерживаются в этой системе.</span><span class="sxs-lookup"><span data-stu-id="2bd90-112">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2bd90-113"><paramref name="keySize" /> задает недопустимую длину.</span><span class="sxs-lookup"><span data-stu-id="2bd90-113"><paramref name="keySize" /> specifies an invalid length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (System.Security.Cryptography.CngKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CngKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As CngKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(System::Security::Cryptography::CngKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaCng : System.Security.Cryptography.CngKey -&gt; System.Security.Cryptography.ECDsaCng" Usage="new System.Security.Cryptography.ECDsaCng key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2bd90-114">Ключ, который будет использоваться в качестве входных данных для криптографических операций, выполняемых текущим объектом.</span><span class="sxs-lookup"><span data-stu-id="2bd90-114">The key that will be used as input to the cryptographic operations performed by the current object.</span></span></param>
        <summary><span data-ttu-id="2bd90-115">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaCng" />, используя указанный объект <see cref="T:System.Security.Cryptography.CngKey" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class by using the specified <see cref="T:System.Security.Cryptography.CngKey" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2bd90-116"><paramref name="key" /> не указывает группу алгоритмов цифровых подписей на основе эллиптических кривых (ECDSA).</span><span class="sxs-lookup"><span data-stu-id="2bd90-116"><paramref name="key" /> does not specify an Elliptic Curve Digital Signature Algorithm (ECDSA) group.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bd90-117"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-117"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="2bd90-118">Классы криптографии следующего поколения (CNG) не поддерживаются в этой системе.</span><span class="sxs-lookup"><span data-stu-id="2bd90-118">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaCng : System.Security.Cryptography.ECCurve -&gt; System.Security.Cryptography.ECDsaCng" Usage="new System.Security.Cryptography.ECDsaCng curve" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="2bd90-119">Кривая, используемая для создания пары открытого и закрытого ключей.</span><span class="sxs-lookup"><span data-stu-id="2bd90-119">The curve used to generate the public/private key pair.</span></span></param>
        <summary><span data-ttu-id="2bd90-120">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaCng" />, пара открытого и закрытого ключей которого создается на основе указанной кривой.</span><span class="sxs-lookup"><span data-stu-id="2bd90-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class whose public/private key pair is generated over the specified curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-121">`curve`должен проверяться (то есть должен возвращаться `true`) при передаче <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> в метод и должен быть либо именованным, либо явным простым.</span><span class="sxs-lookup"><span data-stu-id="2bd90-121">`curve` must validate (that is, it must return `true`) when passed to the <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> method and must be either a named or explicit prime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2bd90-122"><paramref name="curve" /> не выполняет проверку.</span><span class="sxs-lookup"><span data-stu-id="2bd90-122"><paramref name="curve" /> does not validate.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bd90-123"><paramref name="curve" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-123"><paramref name="curve" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="2bd90-124">Если <paramref name="curve" /> не содержит OID с FriendlyName.</span><span class="sxs-lookup"><span data-stu-id="2bd90-124">if <paramref name="curve" /> does not contain an Oid with a FriendlyName.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eCDsaCng.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportExplicitParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportExplicitParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportExplicitParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDsaCng.ExportExplicitParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="2bd90-125">Значение <see langword="true" /> для включения закрытых параметров; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-125"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2bd90-126">Экспортирует ключ и параметры явной кривой, используемые объектом шифрования на основе эллиптических кривых (ECC), в объект <see cref="T:System.Security.Cryptography.ECParameters" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-126">Exports the key and explicit curve parameters used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span></summary>
        <returns><span data-ttu-id="2bd90-127">Ключ и параметры явной кривой, используемые объектом ECC.</span><span class="sxs-lookup"><span data-stu-id="2bd90-127">The key and explicit curve parameters used by the ECC object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2bd90-128">При получении значений кривой произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="2bd90-128">An error occurred while obtaining the curve values.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="2bd90-129">Явный экспорт не поддерживается этой платформой.</span><span class="sxs-lookup"><span data-stu-id="2bd90-129">Explicit export is not supported by this platform.</span></span> <span data-ttu-id="2bd90-130">Требуется Windows 10 или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="2bd90-130">Windows 10 or higher is required.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDsaCng.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="2bd90-131">Значение <see langword="true" /> для включения закрытых параметров; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-131"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2bd90-132">Экспортирует ключ, используемый объектом шифрования на основе эллиптических кривых (ECC), в объект <see cref="T:System.Security.Cryptography.ECParameters" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-132">Exports the key used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span> <span data-ttu-id="2bd90-133">Если ключ был создан как именованная кривая, поле <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> содержит параметры именованной кривой; в противном случае оно содержит параметры явной кривой.</span><span class="sxs-lookup"><span data-stu-id="2bd90-133">If the key was created as a named curve, the <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> field contains named curve parameters; otherwise, it contains explicit parameters.</span></span></summary>
        <returns><span data-ttu-id="2bd90-134">Ключ и параметры именованной кривой, используемые объектом ECC.</span><span class="sxs-lookup"><span data-stu-id="2bd90-134">The key and named curve parameters used by the ECC object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2bd90-135">При получении значений кривой произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="2bd90-135">An error occurred while obtaining the curve values.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2bd90-136">Выполняет десериализацию данных ключа из XML-строки.</span><span class="sxs-lookup"><span data-stu-id="2bd90-136">Deserializes the key information from an XML string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public override void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXmlString(System::String ^ xmlString);" />
      <MemberSignature Language="F#" Value="override this.FromXmlString : string -&gt; unit" Usage="eCDsaCng.FromXmlString xmlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="2bd90-137">Данные ключа в формате XML, подлежащие десериализации.</span><span class="sxs-lookup"><span data-stu-id="2bd90-137">The XML-based key information to be deserialized.</span></span></param>
        <summary><span data-ttu-id="2bd90-138">Этот метод не реализован.</span><span class="sxs-lookup"><span data-stu-id="2bd90-138">This method is not implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-139">Чтобы десериализовать ключ XML, используйте <xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> вместо него перегрузку.</span><span class="sxs-lookup"><span data-stu-id="2bd90-139">To deserialize an XML key, use the <xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2bd90-140">Этот метод не был переопределен для данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2bd90-140">This method was not overridden for this instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromXmlString(string xml, valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXmlString (xml As String, format As ECKeyXmlFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromXmlString(System::String ^ xml, System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberSignature Language="F#" Value="override this.FromXmlString : string * System.Security.Cryptography.ECKeyXmlFormat -&gt; unit" Usage="eCDsaCng.FromXmlString (xml, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="2bd90-141">Данные ключа в формате XML, подлежащие десериализации.</span><span class="sxs-lookup"><span data-stu-id="2bd90-141">The XML-based key information to be deserialized.</span></span></param>
        <param name="format"><span data-ttu-id="2bd90-142">Одно из значений перечисления, задающее формат XML-строки.</span><span class="sxs-lookup"><span data-stu-id="2bd90-142">One of the enumeration values that specifies the format of the XML string.</span></span> <span data-ttu-id="2bd90-143">В настоящее время поддерживается только формат <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-143">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></param>
        <summary><span data-ttu-id="2bd90-144">Выполняет десериализацию данных ключа из XML-строки, используя указанный формат.</span><span class="sxs-lookup"><span data-stu-id="2bd90-144">Deserializes the key information from an XML string by using the specified format.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bd90-145"><paramref name="xml" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-145"><paramref name="xml" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2bd90-146">Недопустимое значение параметра <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-146"><paramref name="format" /> specifies an invalid format.</span></span> <span data-ttu-id="2bd90-147">Единственным допустимым значением является <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-147">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2bd90-148">Все остальные ошибки.</span><span class="sxs-lookup"><span data-stu-id="2bd90-148">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : System.Security.Cryptography.ECCurve -&gt; unit" Usage="eCDsaCng.GenerateKey curve" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="2bd90-149">Кривая, используемая для создания ключа.</span><span class="sxs-lookup"><span data-stu-id="2bd90-149">The curve to use to generate the key.</span></span></param>
        <summary><span data-ttu-id="2bd90-150">Создает ключ для использования алгоритмом ECDsaCng.</span><span class="sxs-lookup"><span data-stu-id="2bd90-150">Generates a key to use for the ECDsaCng algorithm.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2bd90-151"><paramref name="curve" /> не выполняет проверку.</span><span class="sxs-lookup"><span data-stu-id="2bd90-151"><paramref name="curve" /> does not validate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngAlgorithm ^ HashAlgorithm { System::Security::Cryptography::CngAlgorithm ^ get(); void set(System::Security::Cryptography::CngAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Cryptography.CngAlgorithm with get, set" Usage="System.Security.Cryptography.ECDsaCng.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2bd90-152">Получает или задает хэш-алгоритм, используемый при подписывании и проверке данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-152">Gets or sets the hash algorithm to use when signing and verifying data.</span></span></summary>
        <value><span data-ttu-id="2bd90-153">Объект, задающий хэш-алгоритм.</span><span class="sxs-lookup"><span data-stu-id="2bd90-153">An object that specifies the hash algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-154">Это свойство принимает следующие алгоритмы: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>и <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bd90-154">This property accepts the following algorithms: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, and <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span></span>  
  
 <span data-ttu-id="2bd90-155">Также можно использовать другие пользовательские алгоритмы хэширования.</span><span class="sxs-lookup"><span data-stu-id="2bd90-155">Other custom hash algorithms may also be used.</span></span>  
  
 <span data-ttu-id="2bd90-156">Из-за проблем с MD5 и SHA1 Корпорация Майкрософт рекомендует <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bd90-156">Due to collision problems with MD5 and SHA1, Microsoft recommends <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span></span> <span data-ttu-id="2bd90-157">Алгоритмом по умолчанию является <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bd90-157">The default algorithm is <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span></span>  
  
 <span data-ttu-id="2bd90-158">Это свойство не используется при подписывании или проверке данных, которые уже хэшированы.</span><span class="sxs-lookup"><span data-stu-id="2bd90-158">This property is not used if you are signing or verifying data that is already hashed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bd90-159">Значение — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-159">The value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="eCDsaCng.HashData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="eCDsaCng.HashData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.ECParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As ECParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::ECParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.ECParameters -&gt; unit" Usage="eCDsaCng.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="2bd90-160">Параметры кривой.</span><span class="sxs-lookup"><span data-stu-id="2bd90-160">The curve parameters.</span></span></param>
        <summary><span data-ttu-id="2bd90-161">Заменяет существующий ключ, с которым работает текущий экземпляр, создавая новый объект <see cref="T:System.Security.Cryptography.CngKey" /> для структуры параметров.</span><span class="sxs-lookup"><span data-stu-id="2bd90-161">Replaces the existing key that the current instance is working with by creating a new <see cref="T:System.Security.Cryptography.CngKey" /> for the parameters structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-162">Если `parameters` параметр содержит <xref:System.Security.Cryptography.ECParameters.Q>только, то импортируется только открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="2bd90-162">If `parameters` contains only <xref:System.Security.Cryptography.ECParameters.Q>, only a public key is imported.</span></span> <span data-ttu-id="2bd90-163">Если `parameters` также содержит <xref:System.Security.Cryptography.ECParameters.D>, то импортируется полная пара ключей.</span><span class="sxs-lookup"><span data-stu-id="2bd90-163">If `parameters` also contains <xref:System.Security.Cryptography.ECParameters.D>, a full key pair is imported.</span></span> <span data-ttu-id="2bd90-164"><xref:System.Security.Cryptography.ECParameters.Curve> Поле указывает тип кривой для импорта.</span><span class="sxs-lookup"><span data-stu-id="2bd90-164">The <xref:System.Security.Cryptography.ECParameters.Curve> field specifies the type of the curve to import.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2bd90-165"><paramref name="parameters" /> не содержит допустимых значений.</span><span class="sxs-lookup"><span data-stu-id="2bd90-165"><paramref name="parameters" /> does not contain valid values.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2bd90-166"><paramref name="parameters" /> ссылается на кривую, которую нельзя импортировать.</span><span class="sxs-lookup"><span data-stu-id="2bd90-166"><paramref name="parameters" /> references a curve that cannot be imported.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="2bd90-167"><paramref name="parameters" /> ссылается на кривую, которая не поддерживается этой платформой.</span><span class="sxs-lookup"><span data-stu-id="2bd90-167"><paramref name="parameters" /> references a curve that is not supported by this platform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngKey ^ Key { System::Security::Cryptography::CngKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Security.Cryptography.CngKey" Usage="System.Security.Cryptography.ECDsaCng.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2bd90-168">Возвращает или задает ключ, используемый при подписании и проверке данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-168">Gets or sets the key to use when signing and verifying data.</span></span></summary>
        <value><span data-ttu-id="2bd90-169">Объект, задающий ключ.</span><span class="sxs-lookup"><span data-stu-id="2bd90-169">An object that specifies the key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.ECDsaCng.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.ECDsaCng.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2bd90-170">Создает подпись.</span><span class="sxs-lookup"><span data-stu-id="2bd90-170">Generates a signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.SignData : byte[] -&gt; byte[]" Usage="eCDsaCng.SignData data" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.SignData : byte[] -&gt; byte[]" Usage="eCDsaCng.SignData data" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="2bd90-171">Сообщение, которое необходимо подписать.</span><span class="sxs-lookup"><span data-stu-id="2bd90-171">The message data to be signed.</span></span></param>
        <summary><span data-ttu-id="2bd90-172">Создает подпись для указанных данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-172">Generates a signature for the specified data.</span></span></summary>
        <returns><span data-ttu-id="2bd90-173">Цифровая подпись для указанных данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-173">A digital signature for the specified data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-174">Этот метод создает сигнатуру для указанных данных путем хэширования входных данных с помощью <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> свойства, а затем подписывает результат.</span><span class="sxs-lookup"><span data-stu-id="2bd90-174">This method generates a signature for the specified data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 <span data-ttu-id="2bd90-175">Этот <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> флаг необходим, если <xref:System.Security.Cryptography.ECDsaCng> объект криптографии следующего поколения (CNG) не генерируется объектом случайным образом.</span><span class="sxs-lookup"><span data-stu-id="2bd90-175">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bd90-176">Свойство <paramref name="data" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-176"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2bd90-177">Информация ключа, связанного с экземпляром, который не имеет закрытого ключа.</span><span class="sxs-lookup"><span data-stu-id="2bd90-177">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="2bd90-178">разрешение на подписание данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-178">for permission to sign data.</span></span> <span data-ttu-id="2bd90-179">Значение спроса: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-179">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="2bd90-180">Связанное перечисление:<see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="2bd90-180">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (System.IO.Stream data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(class System.IO.Stream data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Stream) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ data);" />
      <MemberSignature Language="F#" Value="override this.SignData : System.IO.Stream -&gt; byte[]" Usage="eCDsaCng.SignData data" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.SignData : System.IO.Stream -&gt; byte[]" Usage="eCDsaCng.SignData data" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="2bd90-181">Поток данных, которые необходимо подписать.</span><span class="sxs-lookup"><span data-stu-id="2bd90-181">The data stream to be signed.</span></span></param>
        <summary><span data-ttu-id="2bd90-182">Создает подпись для указанного потока данных, перемещая позицию чтения в конец потока.</span><span class="sxs-lookup"><span data-stu-id="2bd90-182">Generates a signature for the specified data stream, reading to the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="2bd90-183">Цифровая подпись для указанного потока данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-183">A digital signature for the specified data stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-184">Этот метод создает подпись для указанного потока данных путем хэширования входных данных с помощью <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> свойства, а затем подписывает результат.</span><span class="sxs-lookup"><span data-stu-id="2bd90-184">This method generates a signature for the specified data stream by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 <span data-ttu-id="2bd90-185">Этот <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> флаг необходим, если <xref:System.Security.Cryptography.ECDsaCng> объект криптографии следующего поколения (CNG) не генерируется объектом случайным образом.</span><span class="sxs-lookup"><span data-stu-id="2bd90-185">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bd90-186">Свойство <paramref name="data" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-186"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2bd90-187">Информация ключа, связанного с экземпляром, который не имеет закрытого ключа.</span><span class="sxs-lookup"><span data-stu-id="2bd90-187">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="2bd90-188">разрешение на подписание данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-188">for permission to sign data.</span></span> <span data-ttu-id="2bd90-189">Значение спроса: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-189">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="2bd90-190">Связанное перечисление:<see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="2bd90-190">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.SignData : byte[] * int * int -&gt; byte[]" Usage="eCDsaCng.SignData (data, offset, count)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.SignData : byte[] * int * int -&gt; byte[]" Usage="eCDsaCng.SignData (data, offset, count)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="2bd90-191">Сообщение, которое необходимо подписать.</span><span class="sxs-lookup"><span data-stu-id="2bd90-191">The message data to be signed.</span></span></param>
        <param name="offset"><span data-ttu-id="2bd90-192">Позиция в строке, с которой следует начать подписывание.</span><span class="sxs-lookup"><span data-stu-id="2bd90-192">The location in the string at which to start signing.</span></span></param>
        <param name="count"><span data-ttu-id="2bd90-193">Длина строки в знаках, подлежащая подписыванию и отсчитываемая от позиции <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-193">The length of the string, in characters, following <paramref name="offset" /> that will be signed.</span></span></param>
        <summary><span data-ttu-id="2bd90-194">Создает цифровую подпись для фрагмента данных указанной длины, начиная с указанной позиции.</span><span class="sxs-lookup"><span data-stu-id="2bd90-194">Generates a digital signature for the specified length of data, beginning at the specified offset.</span></span></summary>
        <returns><span data-ttu-id="2bd90-195">Цифровая подпись для указанного фрагмента данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-195">A digital signature for the specified length of data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-196">Этот метод создает подпись для указанных данных путем хэширования входных данных с помощью <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> свойства, а затем подписывает результат.</span><span class="sxs-lookup"><span data-stu-id="2bd90-196">This method generates a signature for the specified data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result</span></span>  
  
 <span data-ttu-id="2bd90-197">Этот <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> флаг необходим, если <xref:System.Security.Cryptography.ECDsaCng> объект криптографии следующего поколения (CNG) не генерируется объектом случайным образом.</span><span class="sxs-lookup"><span data-stu-id="2bd90-197">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bd90-198">Свойство <paramref name="data" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-198"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2bd90-199">Значения параметров <paramref name="count" /> или <paramref name="offset" /> вызвали выход за границы строки данных при чтении.</span><span class="sxs-lookup"><span data-stu-id="2bd90-199"><paramref name="count" /> or <paramref name="offset" /> caused reading outside the bounds of the data string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2bd90-200">Информация ключа, связанного с экземпляром, который не имеет закрытого ключа.</span><span class="sxs-lookup"><span data-stu-id="2bd90-200">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="2bd90-201">разрешение на подписание данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-201">for permission to sign data.</span></span> <span data-ttu-id="2bd90-202">Значение спроса: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-202">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="2bd90-203">Связанное перечисление:<see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="2bd90-203">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public override byte[] SignHash (byte[] hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignHash(unsigned int8[] hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignHash (hash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ hash);" />
      <MemberSignature Language="F#" Value="override this.SignHash : byte[] -&gt; byte[]" Usage="eCDsaCng.SignHash hash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="2bd90-204">Хэш-значение подписываемых данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-204">The hash value of the data to be signed.</span></span></param>
        <summary><span data-ttu-id="2bd90-205">Создает подпись для указанного хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="2bd90-205">Generates a signature for the specified hash value.</span></span></summary>
        <returns><span data-ttu-id="2bd90-206">Цифровая подпись для указанного хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="2bd90-206">A digital signature for the specified hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-207">Этот <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> флаг необходим, если <xref:System.Security.Cryptography.ECDsaCng> объект криптографии следующего поколения (CNG) не генерируется объектом случайным образом.</span><span class="sxs-lookup"><span data-stu-id="2bd90-207">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bd90-208"><paramref name="hash" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-208"><paramref name="hash" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2bd90-209">Информация ключа, связанного с экземпляром, который не имеет закрытого ключа.</span><span class="sxs-lookup"><span data-stu-id="2bd90-209">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="2bd90-210">разрешение на подписание данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-210">for permission to sign data.</span></span> <span data-ttu-id="2bd90-211">Значение спроса: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-211">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="2bd90-212">Связанное перечисление:<see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="2bd90-212">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2bd90-213">Выполняет сериализацию данных ключа в XML-строку.</span><span class="sxs-lookup"><span data-stu-id="2bd90-213">Serializes the key information to an XML string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public override string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ToXmlString : bool -&gt; string" Usage="eCDsaCng.ToXmlString includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="2bd90-214">Значение <see langword="true" /> для включения закрытых параметров; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-214"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2bd90-215">Этот метод не реализован.</span><span class="sxs-lookup"><span data-stu-id="2bd90-215">This method is not implemented.</span></span></summary>
        <returns><span data-ttu-id="2bd90-216">Неприменимо.</span><span class="sxs-lookup"><span data-stu-id="2bd90-216">Not applicable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-217">Чтобы преобразовать текущий ключ в XML-представление, используйте <xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> вместо него перегрузку.</span><span class="sxs-lookup"><span data-stu-id="2bd90-217">To convert the current key to an XML representation, use the <xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2bd90-218">Этот метод не реализован.</span><span class="sxs-lookup"><span data-stu-id="2bd90-218">This method is not implemented.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXmlString(valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXmlString (format As ECKeyXmlFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXmlString(System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberSignature Language="F#" Value="override this.ToXmlString : System.Security.Cryptography.ECKeyXmlFormat -&gt; string" Usage="eCDsaCng.ToXmlString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2bd90-219">Одно из значений перечисления, задающее формат XML-строки.</span><span class="sxs-lookup"><span data-stu-id="2bd90-219">One of the enumeration values that specifies the format of the XML string.</span></span> <span data-ttu-id="2bd90-220">В настоящее время поддерживается только формат <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-220">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></param>
        <summary><span data-ttu-id="2bd90-221">Выполняет сериализацию данных ключа в XML-строку, используя указанный формат.</span><span class="sxs-lookup"><span data-stu-id="2bd90-221">Serializes the key information to an XML string by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="2bd90-222">Объект типа string, в котором содержатся данные ключа, сериализованные в XML-строку в соответствии с требуемым форматом.</span><span class="sxs-lookup"><span data-stu-id="2bd90-222">A string object that contains the key information, serialized to an XML string according to the requested format.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2bd90-223">Недопустимое значение параметра <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-223"><paramref name="format" /> specifies an invalid format.</span></span> <span data-ttu-id="2bd90-224">Единственным допустимым значением является <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-224">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2bd90-225">Все остальные ошибки.</span><span class="sxs-lookup"><span data-stu-id="2bd90-225">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryHashData">
      <MemberSignature Language="C#" Value="protected override bool TryHashData (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.TryHashData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashData (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), hashAlgorithm As HashAlgorithmName, ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashData(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryHashData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; bool&#xA;override this.TryHashData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; bool" Usage="eCDsaCng.TryHashData (source, destination, hashAlgorithm, bytesWritten)" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="override this.TryHashData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; bool" Usage="eCDsaCng.TryHashData (source, destination, hashAlgorithm, bytesWritten)" FrameworkAlternate="netcore-2.1;netcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySignHash">
      <MemberSignature Language="C#" Value="public override bool TrySignHash (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TrySignHash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.TrySignHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TrySignHash (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TrySignHash(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TrySignHash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; bool&#xA;override this.TrySignHash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; bool" Usage="eCDsaCng.TrySignHash (source, destination, bytesWritten)" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="override this.TrySignHash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; bool" Usage="eCDsaCng.TrySignHash (source, destination, bytesWritten)" FrameworkAlternate="netcore-2.1;netcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2bd90-226">Проверяет цифровую подпись.</span><span class="sxs-lookup"><span data-stu-id="2bd90-226">Verifies a digital signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyData : byte[] * byte[] -&gt; bool" Usage="eCDsaCng.VerifyData (data, signature)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.VerifyData : byte[] * byte[] -&gt; bool" Usage="eCDsaCng.VerifyData (data, signature)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="signature" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="2bd90-227">подписанные данные;</span><span class="sxs-lookup"><span data-stu-id="2bd90-227">The data that was signed.</span></span></param>
        <param name="signature"><span data-ttu-id="2bd90-228">Подпись, подлежащая проверке.</span><span class="sxs-lookup"><span data-stu-id="2bd90-228">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="2bd90-229">Проверяет цифровую подпись указанных данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-229">Verifies the digital signature of the specified data.</span></span></summary>
        <returns><span data-ttu-id="2bd90-230">Значение <see langword="true" />, если подпись является допустимой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-230"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-231">Этот метод создает сигнатуру для указанных данных путем хэширования входных данных с помощью <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> свойства, а затем подписывает результат.</span><span class="sxs-lookup"><span data-stu-id="2bd90-231">This method generates a signature for the given data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bd90-232">Значение параметра <paramref name="data" /> или <paramref name="signature" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-232"><paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (System.IO.Stream data, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(class System.IO.Stream data, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Stream, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(System::IO::Stream ^ data, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyData : System.IO.Stream * byte[] -&gt; bool" Usage="eCDsaCng.VerifyData (data, signature)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.VerifyData : System.IO.Stream * byte[] -&gt; bool" Usage="eCDsaCng.VerifyData (data, signature)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="signature" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="2bd90-233">Подписанный поток данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-233">The data stream that was signed.</span></span></param>
        <param name="signature"><span data-ttu-id="2bd90-234">Подпись, подлежащая проверке.</span><span class="sxs-lookup"><span data-stu-id="2bd90-234">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="2bd90-235">Проверяет цифровую подпись для указанного потока данных, перемещая позицию чтения в конец потока.</span><span class="sxs-lookup"><span data-stu-id="2bd90-235">Verifies the digital signature of the specified data stream, reading to the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="2bd90-236">Значение <see langword="true" />, если подпись является допустимой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-236"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-237">Этот метод хэширует входные данные с помощью <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> свойства перед проверкой.</span><span class="sxs-lookup"><span data-stu-id="2bd90-237">This method hashes the input data by using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property before verification.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bd90-238">Значение параметра <paramref name="data" /> или <paramref name="signature" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-238"><paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, int offset, int count, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, int32 offset, int32 count, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), offset As Integer, count As Integer, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyData : byte[] * int * int * byte[] -&gt; bool" Usage="eCDsaCng.VerifyData (data, offset, count, signature)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.VerifyData : byte[] * int * int * byte[] -&gt; bool" Usage="eCDsaCng.VerifyData (data, offset, count, signature)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="signature" Type="System.Byte[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="2bd90-239">подписанные данные;</span><span class="sxs-lookup"><span data-stu-id="2bd90-239">The data that was signed.</span></span></param>
        <param name="offset"><span data-ttu-id="2bd90-240">Позиция, с которой начинаются подписанные данные.</span><span class="sxs-lookup"><span data-stu-id="2bd90-240">The location in the data at which the signed data begins.</span></span></param>
        <param name="count"><span data-ttu-id="2bd90-241">Длина подписанного фрагмента данных в знаках, отсчитываемая от позиции <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-241">The length of the data, in characters, following <paramref name="offset" /> that will be signed.</span></span></param>
        <param name="signature"><span data-ttu-id="2bd90-242">Подпись, подлежащая проверке.</span><span class="sxs-lookup"><span data-stu-id="2bd90-242">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="2bd90-243">Проверяет подпись для фрагмента данных указанной длины, начиная с указанной позиции.</span><span class="sxs-lookup"><span data-stu-id="2bd90-243">Verifies a signature for the specified length of data, beginning at the specified offset.</span></span></summary>
        <returns><span data-ttu-id="2bd90-244">Значение <see langword="true" />, если подпись является допустимой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-244"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bd90-245">Этот метод хэширует входные данные с помощью <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> свойства перед проверкой.</span><span class="sxs-lookup"><span data-stu-id="2bd90-245">This method hashes the input data by using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property before verification.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2bd90-246">Значение параметра <paramref name="offset" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2bd90-246"><paramref name="offset" /> or <paramref name="count" /> is less then zero.</span></span>  
  
<span data-ttu-id="2bd90-247">- или -</span><span class="sxs-lookup"><span data-stu-id="2bd90-247">-or-</span></span> 
 <span data-ttu-id="2bd90-248">Значение параметра <paramref name="offset" /> или <paramref name="count" /> превышает длину массива байтов, задаваемого параметром <paramref name="data" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-248"><paramref name="offset" /> or <paramref name="count" /> is larger than the length of the byte array passed in the <paramref name="data" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bd90-249">Параметр <paramref name="data" /> или <paramref name="signature" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-249"><paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (byte[] hash, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(unsigned int8[] hash, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(cli::array &lt;System::Byte&gt; ^ hash, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyHash : byte[] * byte[] -&gt; bool" Usage="eCDsaCng.VerifyHash (hash, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="2bd90-250">Хэш-значение проверяемых данных.</span><span class="sxs-lookup"><span data-stu-id="2bd90-250">The hash value of the data to be verified.</span></span></param>
        <param name="signature"><span data-ttu-id="2bd90-251">Цифровая подпись данных, которую требуется проверить с использованием хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="2bd90-251">The digital signature of the data to be verified against the hash value.</span></span></param>
        <summary><span data-ttu-id="2bd90-252">Проверяет указанную цифровую подпись для заданного хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="2bd90-252">Verifies the specified digital signature against a specified hash value.</span></span></summary>
        <returns><span data-ttu-id="2bd90-253">Значение <see langword="true" />, если подпись является допустимой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-253"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bd90-254">Параметр <paramref name="hash" /> или <paramref name="signature" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2bd90-254"><paramref name="hash" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (ReadOnlySpan&lt;byte&gt; hash, ReadOnlySpan&lt;byte&gt; signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; hash, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As ReadOnlySpan(Of Byte), signature As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(ReadOnlySpan&lt;System::Byte&gt; hash, ReadOnlySpan&lt;System::Byte&gt; signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyHash : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="eCDsaCng.VerifyHash (hash, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="signature" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="hash">To be added.</param>
        <param name="signature">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
