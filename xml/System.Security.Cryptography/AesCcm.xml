<Type Name="AesCcm" FullName="System.Security.Cryptography.AesCcm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7d023dd5c6e12feebc965dd9f2562f332898318" /><Meta Name="ms.sourcegitcommit" Value="8544f14c8194a55eb22d46721b0bbe46f345c063" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/21/2019" /><Meta Name="ms.locfileid" Value="69670404" /></Metadata><TypeSignature Language="C#" Value="public sealed class AesCcm : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AesCcm extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AesCcm" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AesCcm&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AesCcm sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type AesCcm = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Представляет ключ AES для использования со счетчиком в режиме работы CBC-MAC (CCM).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AesCcm (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AesCcm(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.AesCcm : byte[] -&gt; System.Security.Cryptography.AesCcm" Usage="new System.Security.Cryptography.AesCcm key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">Секретный ключ, который нужно использовать для этого экземпляра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.AesCcm" /> с указанным ключом.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Длина параметра <paramref name="key" /> отличается от 16, 24 или 32 байт (128, 192 или 256 бит).</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AesCcm (ReadOnlySpan&lt;byte&gt; key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.#ctor(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AesCcm(ReadOnlySpan&lt;System::Byte&gt; key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.AesCcm : ReadOnlySpan&lt;byte&gt; -&gt; System.Security.Cryptography.AesCcm" Usage="new System.Security.Cryptography.AesCcm key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="key">Секретный ключ, который нужно использовать для этого экземпляра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.AesCcm" /> с указанным ключом.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Длина параметра <paramref name="key" /> отличается от 16, 24 или 32 байт (128, 192 или 256 бит).</exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt (byte[] nonce, byte[] ciphertext, byte[] tag, byte[] plaintext, byte[] associatedData = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt(unsigned int8[] nonce, unsigned int8[] ciphertext, unsigned int8[] tag, unsigned int8[] plaintext, unsigned int8[] associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt (nonce As Byte(), ciphertext As Byte(), tag As Byte(), plaintext As Byte(), Optional associatedData As Byte() = null)" />
      <MemberSignature Language="F#" Value="member this.Decrypt : byte[] * byte[] * byte[] * byte[] * byte[] -&gt; unit" Usage="aesCcm.Decrypt (nonce, ciphertext, tag, plaintext, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="ciphertext" Type="System.Byte[]" />
        <Parameter Name="tag" Type="System.Byte[]" />
        <Parameter Name="plaintext" Type="System.Byte[]" />
        <Parameter Name="associatedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="nonce">Nonce, связанный с этим сообщением, который должен соответствовать значению, указанному при шифровании.</param>
        <param name="ciphertext">Зашифрованное содержимое для расшифровки.</param>
        <param name="tag">Тег проверки подлинности, созданный для этого сообщения во время шифрования.</param>
        <param name="plaintext">Массив байтов для получения расшифрованного содержимого.</param>
        <param name="associatedData">Дополнительные данные, связанные с этим сообщением, которые должны соответствовать значению, указанному при шифровании.</param>
        <summary>Расшифровывает зашифрованный текст в предоставленный буфер назначения, если можно проверить тег проверки подлинности.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Если `tag` не удается проверить ( `ciphertext`с использованием ключа, `nonce`, и `associatedData` ), то `plaintext` флажок будет сброшен.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="plaintext" /> и <paramref name="ciphertext" /> имеют разную длину.

- или -

Длина параметра <paramref name="nonce" /> не разрешена в <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" />.

- или -

Длина параметра <paramref name="tag" /> не разрешена в <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" />.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="nonce" />, <paramref name="ciphertext" />, <paramref name="tag" /> или <paramref name="plaintext" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Не удалось проверить значение тега или операция расшифровки завершилась ошибкой по другим причинам.</exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt (ReadOnlySpan&lt;byte&gt; nonce, ReadOnlySpan&lt;byte&gt; ciphertext, ReadOnlySpan&lt;byte&gt; tag, Span&lt;byte&gt; plaintext, ReadOnlySpan&lt;byte&gt; associatedData = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; nonce, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; ciphertext, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; tag, valuetype System.Span`1&lt;unsigned int8&gt; plaintext, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt (nonce As ReadOnlySpan(Of Byte), ciphertext As ReadOnlySpan(Of Byte), tag As ReadOnlySpan(Of Byte), plaintext As Span(Of Byte), Optional associatedData As ReadOnlySpan(Of Byte) = null)" />
      <MemberSignature Language="F#" Value="member this.Decrypt : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="aesCcm.Decrypt (nonce, ciphertext, tag, plaintext, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="ciphertext" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="plaintext" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="associatedData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="nonce">Nonce, связанный с этим сообщением, который должен соответствовать значению, указанному при шифровании.</param>
        <param name="ciphertext">Зашифрованное содержимое для расшифровки.</param>
        <param name="tag">Тег проверки подлинности, созданный для этого сообщения во время шифрования.</param>
        <param name="plaintext">Диапазон байтов для получения расшифрованного содержимого.</param>
        <param name="associatedData">Дополнительные данные, связанные с этим сообщением, которые должны соответствовать значению, указанному при шифровании.</param>
        <summary>Расшифровывает зашифрованный текст в предоставленный буфер назначения, если можно проверить тег проверки подлинности.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Если `tag` не удается проверить ( `ciphertext`с использованием ключа, `nonce`, и `associatedData` ), то `plaintext` флажок будет сброшен.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="plaintext" /> и <paramref name="ciphertext" /> имеют разную длину.

-или-

Длина параметра <paramref name="nonce" /> не разрешена в <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" />.

- или -

Длина параметра <paramref name="tag" /> не разрешена в <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Не удалось проверить значение тега или операция расшифровки завершилась ошибкой по другим причинам.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="aesCcm.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает ресурсы, используемые текущим экземпляром класса <see cref="T:System.Security.Cryptography.AesCcm" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public void Encrypt (byte[] nonce, byte[] plaintext, byte[] ciphertext, byte[] tag, byte[] associatedData = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encrypt(unsigned int8[] nonce, unsigned int8[] plaintext, unsigned int8[] ciphertext, unsigned int8[] tag, unsigned int8[] associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encrypt (nonce As Byte(), plaintext As Byte(), ciphertext As Byte(), tag As Byte(), Optional associatedData As Byte() = null)" />
      <MemberSignature Language="F#" Value="member this.Encrypt : byte[] * byte[] * byte[] * byte[] * byte[] -&gt; unit" Usage="aesCcm.Encrypt (nonce, plaintext, ciphertext, tag, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="plaintext" Type="System.Byte[]" />
        <Parameter Name="ciphertext" Type="System.Byte[]" />
        <Parameter Name="tag" Type="System.Byte[]" />
        <Parameter Name="associatedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="nonce">Nonce, связанный с этим сообщением, который должен быть уникальным значением для каждой операции с тем же ключом.</param>
        <param name="plaintext">Содержимое для шифрования.</param>
        <param name="ciphertext">Массив байтов для получения зашифрованного содержимого.</param>
        <param name="tag">Массив байтов для получения созданного тега проверки подлинности.</param>
        <param name="associatedData">Дополнительные данные, связанные с этим сообщением, которые также необходимо предоставить при шифровании.</param>
        <summary>Шифрует открытый текст в буфер назначения зашифрованного текста и создает тег проверки подлинности в отдельном буфере.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Гарантии безопасности в режиме алгоритма AES-CCM требует, чтобы одно и то же значение nonce никогда не использовалось дважды с одним и тем же ключом.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="plaintext" /> и <paramref name="ciphertext" /> имеют разную длину.

- или -

Длина параметра <paramref name="nonce" /> не разрешена в <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" />.

- или -

Длина параметра <paramref name="tag" /> не разрешена в <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" />.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="nonce" />, <paramref name="ciphertext" />, <paramref name="tag" /> или <paramref name="plaintext" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Сбой операции шифрования.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public void Encrypt (ReadOnlySpan&lt;byte&gt; nonce, ReadOnlySpan&lt;byte&gt; plaintext, Span&lt;byte&gt; ciphertext, Span&lt;byte&gt; tag, ReadOnlySpan&lt;byte&gt; associatedData = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; nonce, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; plaintext, valuetype System.Span`1&lt;unsigned int8&gt; ciphertext, valuetype System.Span`1&lt;unsigned int8&gt; tag, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encrypt (nonce As ReadOnlySpan(Of Byte), plaintext As ReadOnlySpan(Of Byte), ciphertext As Span(Of Byte), tag As Span(Of Byte), Optional associatedData As ReadOnlySpan(Of Byte) = null)" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="aesCcm.Encrypt (nonce, plaintext, ciphertext, tag, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="plaintext" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="ciphertext" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="associatedData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="nonce">Nonce, связанный с этим сообщением, который должен быть уникальным значением для каждой операции с тем же ключом.</param>
        <param name="plaintext">Содержимое для шифрования.</param>
        <param name="ciphertext">Диапазон байтов для получения зашифрованного содержимого.</param>
        <param name="tag">Диапазон байтов для получения созданного тега проверки подлинности.</param>
        <param name="associatedData">Дополнительные данные, связанные с этим сообщением, которые также необходимо предоставить при шифровании.</param>
        <summary>Шифрует открытый текст в буфер назначения зашифрованного текста и создает тег проверки подлинности в отдельном буфере.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Гарантии безопасности в режиме алгоритма AES-CCM требует, чтобы одно и то же значение nonce никогда не использовалось дважды с одним и тем же ключом.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="plaintext" /> и <paramref name="ciphertext" /> имеют разную длину.

- или -

Длина параметра <paramref name="nonce" /> не разрешена в <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" />.

-или-

Длина параметра <paramref name="tag" /> не разрешена в <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Сбой операции шифрования.</exception>
      </Docs>
    </Member>
    <Member MemberName="NonceByteSizes">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeySizes NonceByteSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.KeySizes NonceByteSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AesCcm.NonceByteSizes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NonceByteSizes As KeySizes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::KeySizes ^ NonceByteSizes { System::Security::Cryptography::KeySizes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NonceByteSizes : System.Security.Cryptography.KeySizes" Usage="System.Security.Cryptography.AesCcm.NonceByteSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает размеры nonce в байтах, поддерживаемые этим экземпляром.</summary>
        <value>Размеры nonce, поддерживаемые этим экземпляром: 7, 8, 9, 10, 11, 12 или 13 байт (56, 64, 72, 80, 88, 96 или 104).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagByteSizes">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeySizes TagByteSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.KeySizes TagByteSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AesCcm.TagByteSizes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TagByteSizes As KeySizes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::KeySizes ^ TagByteSizes { System::Security::Cryptography::KeySizes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagByteSizes : System.Security.Cryptography.KeySizes" Usage="System.Security.Cryptography.AesCcm.TagByteSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает размеры тега в байтах, поддерживаемые этим экземпляром.</summary>
        <value>Размеры тегов, поддерживаемые этим экземпляром: 4, 6, 8, 10, 12, 14 или 16 байт (32, 48, 64, 80, 96, 112 или 128).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
