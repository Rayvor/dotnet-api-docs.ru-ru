<Type Name="DSAOpenSsl" FullName="System.Security.Cryptography.DSAOpenSsl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="93b1f6675c5a84efe22b87cb25476b503d59db64" /><Meta Name="ms.sourcegitcommit" Value="47aee60cbc5001a16d5b9cdd0500df890fb1cdec" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/26/2019" /><Meta Name="ms.locfileid" Value="74529642" /></Metadata><TypeSignature Language="C#" Value="public sealed class DSAOpenSsl : System.Security.Cryptography.DSA" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DSAOpenSsl extends System.Security.Cryptography.DSA" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DSAOpenSsl" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DSAOpenSsl&#xA;Inherits DSA" />
  <TypeSignature Language="C++ CLI" Value="public ref class DSAOpenSsl sealed : System::Security::Cryptography::DSA" />
  <TypeSignature Language="F#" Value="type DSAOpenSsl = class&#xA;    inherit DSA" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DSA</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ec99c-101">Предоставляет реализацию алгоритма цифровых подписей (DSA) на основе OpenSSL.</span><span class="sxs-lookup"><span data-stu-id="ec99c-101">Provides an implementation of the Digital Signature Algorithm (DSA) backed by OpenSSL.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ec99c-102">Этот класс следует использовать непосредственно при взаимодействии платформ с библиотекой System OpenSSL.</span><span class="sxs-lookup"><span data-stu-id="ec99c-102">This class should only be used directly when doing platform interop with the system OpenSSL library.</span></span> <span data-ttu-id="ec99c-103">Если взаимодействие с платформой не требуется, следует использовать <xref:System.Security.Cryptography.DSA.Create%2A?displayProperty=nameWithType> фабричные методы вместо определенной производной реализации.</span><span class="sxs-lookup"><span data-stu-id="ec99c-103">When platform interop is not needed, you should use the <xref:System.Security.Cryptography.DSA.Create%2A?displayProperty=nameWithType> factory methods instead of a specific derived implementation.</span></span>

> [!IMPORTANT]
> <span data-ttu-id="ec99c-104">Доступны более новые асимметричные алгоритмы.</span><span class="sxs-lookup"><span data-stu-id="ec99c-104">Newer asymmetric algorithms are available.</span></span> <span data-ttu-id="ec99c-105">Вместо класса <xref:System.Security.Cryptography.DSA> рекомендуется использовать класс <xref:System.Security.Cryptography.RSA> или <xref:System.Security.Cryptography.ECDsa>.</span><span class="sxs-lookup"><span data-stu-id="ec99c-105">Consider using the <xref:System.Security.Cryptography.RSA> class or the <xref:System.Security.Cryptography.ECDsa> class instead of the <xref:System.Security.Cryptography.DSA> class.</span></span> <span data-ttu-id="ec99c-106">Используйте <xref:System.Security.Cryptography.DSA> только для обеспечения совместимости с устаревшими приложениями и данными.</span><span class="sxs-lookup"><span data-stu-id="ec99c-106">Use <xref:System.Security.Cryptography.DSA> only for compatibility with legacy applications and data.</span></span>  

<span data-ttu-id="ec99c-107">Дсаопенссл предоставляет версию этого DSA для FIPS 186-3.</span><span class="sxs-lookup"><span data-stu-id="ec99c-107">DSAOpenSSL provides the FIPS 186-3 version of DSA.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSAOpenSsl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSAOpenSsl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec99c-108">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.DSAOpenSsl" /> с размером ключа по умолчанию 2048 бит.</span><span class="sxs-lookup"><span data-stu-id="ec99c-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSAOpenSsl" /> class with a default key size of 2048 bits.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ec99c-109">Этот конструктор не создает новую пару открытых или закрытых ключей DSA немедленно, просто устанавливает размер, который будет использоваться для создания ключа, если он необходим.</span><span class="sxs-lookup"><span data-stu-id="ec99c-109">This constructor does not generate a new DSA public/private keypair immediately, it just sets the size which will be used to generate a key when one is needed.</span></span>
<span data-ttu-id="ec99c-110">Если ключ загружается с помощью метода <xref:System.Security.Cryptography.DSAOpenSsl.ImportParameters%2A> или другого метода импорта ключа, размер ключа из этого конструктора не имеет смысла.</span><span class="sxs-lookup"><span data-stu-id="ec99c-110">If key is loaded via the <xref:System.Security.Cryptography.DSAOpenSsl.ImportParameters%2A> method, or other key import method, the key size from this constructor has no meaning.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Cryptography.DSA.Create" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSAOpenSsl (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSAOpenSsl(int keySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.DSAOpenSsl : int -&gt; System.Security.Cryptography.DSAOpenSsl" Usage="new System.Security.Cryptography.DSAOpenSsl keySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize"><span data-ttu-id="ec99c-111">Размер создаваемого ключа, когда он необходим.</span><span class="sxs-lookup"><span data-stu-id="ec99c-111">The size of the key to generate, when a key is needed.</span></span></param>
        <summary><span data-ttu-id="ec99c-112">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.DSAOpenSsl" /> с указанным размером ключа.</span><span class="sxs-lookup"><span data-stu-id="ec99c-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSAOpenSsl" /> class with a specified key size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ec99c-113">Этот конструктор не создает новую пару открытых или закрытых ключей DSA немедленно, просто устанавливает размер, который будет использоваться для создания ключа, если он необходим.</span><span class="sxs-lookup"><span data-stu-id="ec99c-113">This constructor does not generate a new DSA public/private keypair immediately, it just sets the size which will be used to generate a key when one is needed.</span></span>
<span data-ttu-id="ec99c-114">Если ключ загружается с помощью метода <xref:System.Security.Cryptography.DSAOpenSsl.ImportParameters%2A> или другого метода импорта ключа, `keySize`, предоставленный этому конструктору, не имеет смысла.</span><span class="sxs-lookup"><span data-stu-id="ec99c-114">If key is loaded via the <xref:System.Security.Cryptography.DSAOpenSsl.ImportParameters%2A> method, or other key import method, the `keySize` provided to this constructor has no meaning.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ec99c-115">Значение <paramref name="keySize" /> не поддерживается этой реализацией.</span><span class="sxs-lookup"><span data-stu-id="ec99c-115">The <paramref name="keySize" /> value is not supported by this implementation.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.DSA.Create(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSAOpenSsl (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSAOpenSsl(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.DSAOpenSsl : nativeint -&gt; System.Security.Cryptography.DSAOpenSsl" Usage="new System.Security.Cryptography.DSAOpenSsl handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="ec99c-116">Значение <c>DSA\*</c> OpenSSL, используемое в качестве ключа.</span><span class="sxs-lookup"><span data-stu-id="ec99c-116">The OpenSSL <c>DSA\*</c> value to use as the key.</span></span></param>
        <summary><span data-ttu-id="ec99c-117">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.DSAOpenSsl" /> из существующего ключа OpenSSL, представленного в виде <c>DSA\*</c>.</span><span class="sxs-lookup"><span data-stu-id="ec99c-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSAOpenSsl" /> class from an existing OpenSSL key represented as a <c>DSA\*</c>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
> <span data-ttu-id="ec99c-118">OpenSSL поддерживает загрузку нескольких версий библиотек в рамках одного процесса.</span><span class="sxs-lookup"><span data-stu-id="ec99c-118">OpenSSL supports multiple library versions being loaded within the same process.</span></span>
> <span data-ttu-id="ec99c-119">Перед вызовом этого конструктора убедитесь, что значение указателя получено из той же версии OpenSSL, которую использует этот класс.</span><span class="sxs-lookup"><span data-stu-id="ec99c-119">Before calling this constructor, verify your pointer value came from the same version of OpenSSL that this class uses.</span></span> <span data-ttu-id="ec99c-120">Для получения дополнительной информации см. <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.</span><span class="sxs-lookup"><span data-stu-id="ec99c-120">For more information, see <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec99c-121">Свойство <paramref name="handle" /> имеет значение <see cref="F:System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="ec99c-121"><paramref name="handle" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ec99c-122"><paramref name="handle" /> не является допустимым значением <c>DSA\*</c>.</span><span class="sxs-lookup"><span data-stu-id="ec99c-122"><paramref name="handle" /> is not a valid <c>DSA\*</c>.</span></span></exception>
        <altmember cref="P:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSAOpenSsl (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.#ctor(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As DSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSAOpenSsl(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.DSAOpenSsl : System.Security.Cryptography.DSAParameters -&gt; System.Security.Cryptography.DSAOpenSsl" Usage="new System.Security.Cryptography.DSAOpenSsl parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="ec99c-123">Параметры ключа для импорта.</span><span class="sxs-lookup"><span data-stu-id="ec99c-123">The key parameters to import.</span></span></param>
        <summary><span data-ttu-id="ec99c-124">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.DSAOpenSsl" /> и импортирует параметры из существующего ключа.</span><span class="sxs-lookup"><span data-stu-id="ec99c-124">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSAOpenSsl" /> class and imports parameters from an existing key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec99c-125">В <paramref name="parameters" /> отсутствуют обязательные поля.</span><span class="sxs-lookup"><span data-stu-id="ec99c-125"><paramref name="parameters" /> is missing required fields.</span></span>

<span data-ttu-id="ec99c-126">- или -</span><span class="sxs-lookup"><span data-stu-id="ec99c-126">-or-</span></span>

<span data-ttu-id="ec99c-127"><paramref name="parameters" /> содержит поля несогласованной длины для допустимого ключа.</span><span class="sxs-lookup"><span data-stu-id="ec99c-127"><paramref name="parameters" /> has fields with inconsistent lengths for a valid key.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ec99c-128"><paramref name="parameters" /> не представляет допустимый набор параметров ключа DSA.</span><span class="sxs-lookup"><span data-stu-id="ec99c-128"><paramref name="parameters" /> does not represent a valid DSA key parameter set.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.DSA.Create(System.Security.Cryptography.DSAParameters)" />
        <altmember cref="M:System.Security.Cryptography.DSA.ImportParameters(System.Security.Cryptography.DSAParameters)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSAOpenSsl (System.Security.Cryptography.SafeEvpPKeyHandle pkeyHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.SafeEvpPKeyHandle pkeyHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.#ctor(System.Security.Cryptography.SafeEvpPKeyHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pkeyHandle As SafeEvpPKeyHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSAOpenSsl(System::Security::Cryptography::SafeEvpPKeyHandle ^ pkeyHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.DSAOpenSsl : System.Security.Cryptography.SafeEvpPKeyHandle -&gt; System.Security.Cryptography.DSAOpenSsl" Usage="new System.Security.Cryptography.DSAOpenSsl pkeyHandle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pkeyHandle" Type="System.Security.Cryptography.SafeEvpPKeyHandle" />
      </Parameters>
      <Docs>
        <param name="pkeyHandle"><span data-ttu-id="ec99c-129">Значение <c>EVP_PKEY\*</c> OpenSSL, используемое в качестве ключа, который представлен в виде <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" />.</span><span class="sxs-lookup"><span data-stu-id="ec99c-129">The OpenSSL <c>EVP_PKEY\*</c> value to use as the key, represented as a <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" />.</span></span></param>
        <summary><span data-ttu-id="ec99c-130">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.DSAOpenSsl" /> из существующего ключа OpenSSL, представленного в виде <c>EVP_PKEY\*</c>.</span><span class="sxs-lookup"><span data-stu-id="ec99c-130">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSAOpenSsl" /> class from an existing OpenSSL key represented as an <c>EVP_PKEY\*</c>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
> <span data-ttu-id="ec99c-131">OpenSSL поддерживает загрузку нескольких версий библиотек в рамках одного процесса.</span><span class="sxs-lookup"><span data-stu-id="ec99c-131">OpenSSL supports multiple library versions being loaded within the same process.</span></span>
> <span data-ttu-id="ec99c-132">Перед вызовом этого конструктора убедитесь, что значение указателя получено из той же версии OpenSSL, которую использует этот класс.</span><span class="sxs-lookup"><span data-stu-id="ec99c-132">Before calling this constructor, verify your pointer value came from the same version of OpenSSL that this class uses.</span></span>
> <span data-ttu-id="ec99c-133">Для получения дополнительной информации см. <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.</span><span class="sxs-lookup"><span data-stu-id="ec99c-133">For more information, see <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec99c-134"><paramref name="pkeyHandle" /> представляет недопустимый дескриптор.</span><span class="sxs-lookup"><span data-stu-id="ec99c-134"><paramref name="pkeyHandle" /> represents an invalid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec99c-135">Свойство <paramref name="pkeyHandle" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ec99c-135"><paramref name="pkeyHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ec99c-136"><paramref name="pkeyHandle" /> не представляет ключ DSA.</span><span class="sxs-lookup"><span data-stu-id="ec99c-136"><paramref name="pkeyHandle" /> does not represent a DSA key.</span></span></exception>
        <altmember cref="P:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public override byte[] CreateSignature (byte[] rgbHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateSignature(unsigned int8[] rgbHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.CreateSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSignature (rgbHash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateSignature(cli::array &lt;System::Byte&gt; ^ rgbHash);" />
      <MemberSignature Language="F#" Value="override this.CreateSignature : byte[] -&gt; byte[]" Usage="dSAOpenSsl.CreateSignature rgbHash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="ec99c-137">Подписываемое хэш-значение.</span><span class="sxs-lookup"><span data-stu-id="ec99c-137">The hash value to be signed.</span></span></param>
        <summary><span data-ttu-id="ec99c-138">При переопределении в производном классе создает подпись <see cref="T:System.Security.Cryptography.DSA" /> для указанного хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="ec99c-138">When overridden in a derived class, creates the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified hash value.</span></span></summary>
        <returns><span data-ttu-id="ec99c-139">Цифровая подпись для указанного хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="ec99c-139">The digital signature for the specified hash value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec99c-140">Свойство <paramref name="rgbHash" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ec99c-140"><paramref name="rgbHash" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ec99c-141">Этот экземпляр представляет только открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="ec99c-141">This instance represents only a public key.</span></span>

<span data-ttu-id="ec99c-142">- или -</span><span class="sxs-lookup"><span data-stu-id="ec99c-142">-or-</span></span>

<span data-ttu-id="ec99c-143">При создании подписи возникла ошибка.</span><span class="sxs-lookup"><span data-stu-id="ec99c-143">An error occurred during signature creation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dSAOpenSsl.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="ec99c-144">Значение <see langword="true" />, чтобы освободить все ресурсы (управляемые и неуправляемые); значение <see langword="false" />, чтобы освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="ec99c-144"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="ec99c-145">Освобождает ресурсы, используемые текущим экземпляром класса <see xref="T:System.Security.Cryptography.DSAOpenSsl" />.</span><span class="sxs-lookup"><span data-stu-id="ec99c-145">Releases the resources used by the current instance of the <see xref="T:System.Security.Cryptography.DSAOpenSsl" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateKeyHandle">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.SafeEvpPKeyHandle DuplicateKeyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.SafeEvpPKeyHandle DuplicateKeyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.DuplicateKeyHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function DuplicateKeyHandle () As SafeEvpPKeyHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::SafeEvpPKeyHandle ^ DuplicateKeyHandle();" />
      <MemberSignature Language="F#" Value="member this.DuplicateKeyHandle : unit -&gt; System.Security.Cryptography.SafeEvpPKeyHandle" Usage="dSAOpenSsl.DuplicateKeyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SafeEvpPKeyHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec99c-146">Возвращает представление <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> криптографического ключа.</span><span class="sxs-lookup"><span data-stu-id="ec99c-146">Gets a <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> representation of the cryptographic key.</span></span></summary>
        <returns><span data-ttu-id="ec99c-147">Представление <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> криптографического ключа.</span><span class="sxs-lookup"><span data-stu-id="ec99c-147">A <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> representation of the cryptographic key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ec99c-148">Каждый вызов этого метода создает новый объект <xref:System.Security.Cryptography.SafeEvpPKeyHandle> с собственным временем существования.</span><span class="sxs-lookup"><span data-stu-id="ec99c-148">Each call to this method produces a new <xref:System.Security.Cryptography.SafeEvpPKeyHandle> object with its own lifetime.</span></span>
<span data-ttu-id="ec99c-149">Объекты, возвращаемые этим методом, можно безопасно использовать даже после удаления этого <xref:System.Security.Cryptography.DSAOpenSsl> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="ec99c-149">The objects returned by this method can safely be used even after this <xref:System.Security.Cryptography.DSAOpenSsl> instance has been disposed.</span></span>

]]></format>
        </remarks> 
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.DSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As DSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::DSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.DSAParameters" Usage="dSAOpenSsl.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="ec99c-150">Значение <see langword="true" /> для включения закрытых параметров; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ec99c-150"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ec99c-151">Экспортирует объект <see cref="T:System.Security.Cryptography.DSAParameters" />, представляющий этот ключ.</span><span class="sxs-lookup"><span data-stu-id="ec99c-151">Exports the <see cref="T:System.Security.Cryptography.DSAParameters" /> representing this key.</span></span></summary>
        <returns><span data-ttu-id="ec99c-152">Параметры DSA для текущего криптографического ключа.</span><span class="sxs-lookup"><span data-stu-id="ec99c-152">The DSA parameters for the current cryptographic key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ec99c-153"><paramref name="includePrivateParameters" /> имеет значение <see langword="true" />, но этот экземпляр представляет только открытый ключ DSA.</span><span class="sxs-lookup"><span data-stu-id="ec99c-153"><paramref name="includePrivateParameters" /> is <see langword="true" />, but this instance represents only a DSA public key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSAOpenSsl.HashData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="ec99c-154">Двоичный поток, хэширование которого требуется выполнить.</span><span class="sxs-lookup"><span data-stu-id="ec99c-154">The binary stream to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="ec99c-155">Алгоритм, который будет использоваться для хэширования данных.</span><span class="sxs-lookup"><span data-stu-id="ec99c-155">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="ec99c-156">Вычисляет хэш-значение указанного двоичного потока с помощью заданного алгоритма хэширования.</span><span class="sxs-lookup"><span data-stu-id="ec99c-156">Computes the hash value of a specified binary stream by using a specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="ec99c-157">Хэшированные данные.</span><span class="sxs-lookup"><span data-stu-id="ec99c-157">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSAOpenSsl.HashData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="ec99c-158">Данные, предназначенные для хэширования.</span><span class="sxs-lookup"><span data-stu-id="ec99c-158">The data to be hashed.</span></span></param>
        <param name="offset"><span data-ttu-id="ec99c-159">Индекс первого байта в <paramref name="data" />, хэширование которого требуется выполнить.</span><span class="sxs-lookup"><span data-stu-id="ec99c-159">The index of the first byte in <paramref name="data" /> that is to be hashed.</span></span></param>
        <param name="count"><span data-ttu-id="ec99c-160">Количество байтов для хэширования.</span><span class="sxs-lookup"><span data-stu-id="ec99c-160">The number of bytes to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="ec99c-161">Алгоритм, который будет использоваться для хэширования данных.</span><span class="sxs-lookup"><span data-stu-id="ec99c-161">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="ec99c-162">При переопределении в производном классе вычисляет хэш-значение указанного фрагмента массива байтов с помощью заданного хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="ec99c-162">When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="ec99c-163">Хэшированные данные.</span><span class="sxs-lookup"><span data-stu-id="ec99c-163">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.ImportParameters(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As DSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.DSAParameters -&gt; unit" Usage="dSAOpenSsl.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="ec99c-164">Параметры ключа для импорта.</span><span class="sxs-lookup"><span data-stu-id="ec99c-164">The key parameters to import.</span></span></param>
        <summary><span data-ttu-id="ec99c-165">Импортирует заданный <see cref="T:System.Security.Cryptography.DSAParameters" />.</span><span class="sxs-lookup"><span data-stu-id="ec99c-165">Imports the specified <see cref="T:System.Security.Cryptography.DSAParameters" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec99c-166">В <paramref name="parameters" /> отсутствуют обязательные поля.</span><span class="sxs-lookup"><span data-stu-id="ec99c-166"><paramref name="parameters" /> is missing required fields.</span></span>

<span data-ttu-id="ec99c-167">- или -</span><span class="sxs-lookup"><span data-stu-id="ec99c-167">-or-</span></span>

<span data-ttu-id="ec99c-168"><paramref name="parameters" /> содержит поля несогласованной длины для допустимого ключа.</span><span class="sxs-lookup"><span data-stu-id="ec99c-168"><paramref name="parameters" /> has fields with inconsistent lengths for a valid key.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ec99c-169"><paramref name="parameters" /> не представляет допустимый набор параметров ключа DSA.</span><span class="sxs-lookup"><span data-stu-id="ec99c-169"><paramref name="parameters" /> does not represent a valid DSA key parameter set.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.DSA.Create(System.Security.Cryptography.DSAParameters)" />
        <altmember cref="M:System.Security.Cryptography.DSA.ImportParameters(System.Security.Cryptography.DSAParameters)" />
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSAOpenSsl.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize {  void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="System.Security.Cryptography.DSAOpenSsl.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec99c-170">Получает или задает размер модуля ключа (в битах), используемого алгоритмом асимметричного шифрования.</span><span class="sxs-lookup"><span data-stu-id="ec99c-170">Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="ec99c-171">Размер модуля ключа (в битах), используемого алгоритмом асимметричного шифрования.</span><span class="sxs-lookup"><span data-stu-id="ec99c-171">The size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ec99c-172">Установка этого свойства в текущее значение не имеет видимого воздействия.</span><span class="sxs-lookup"><span data-stu-id="ec99c-172">Setting this property to its current value has no visible effect.</span></span>
<span data-ttu-id="ec99c-173">Присвоение этому свойству нового юридического значения отклоняет текущий ключ, но откладывает создание нового ключа до тех пор, пока он не будет нужен.</span><span class="sxs-lookup"><span data-stu-id="ec99c-173">Setting this property to a new legal value discards the current key, but defers creation of a new key until one is needed.</span></span>

]]></format>
        </remarks> 
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ec99c-174"><paramref name="value" /> не разрешено в <see cref="P:System.Security.Cryptography.DSAOpenSsl.LegalKeySizes" />.</span><span class="sxs-lookup"><span data-stu-id="ec99c-174"><paramref name="value" /> is not permitted by <see cref="P:System.Security.Cryptography.DSAOpenSsl.LegalKeySizes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSAOpenSsl.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.DSAOpenSsl.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec99c-175">Возвращает размеры ключа (в битах), которые поддерживаются алгоритмом DSA.</span><span class="sxs-lookup"><span data-stu-id="ec99c-175">Gets the key sizes, in bits, that are supported by the DSA algorithm.</span></span></summary>
        <value><span data-ttu-id="ec99c-176">Массив, содержащий размеры ключа, поддерживаемые алгоритмом.</span><span class="sxs-lookup"><span data-stu-id="ec99c-176">An array that contains the key sizes supported by the algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSAOpenSsl.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="override this.VerifySignature : byte[] * byte[] -&gt; bool" Usage="dSAOpenSsl.VerifySignature (rgbHash, rgbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="ec99c-177">Подписанный хэш.</span><span class="sxs-lookup"><span data-stu-id="ec99c-177">The signed hash.</span></span></param>
        <param name="rgbSignature"><span data-ttu-id="ec99c-178">Проверяемая цифровая подпись.</span><span class="sxs-lookup"><span data-stu-id="ec99c-178">The digital signature to be verified.</span></span></param>
        <summary><span data-ttu-id="ec99c-179">Проверяет, совпадает ли указанная цифровая подпись с указанным хэшем.</span><span class="sxs-lookup"><span data-stu-id="ec99c-179">Verifies if the specified digital signature matches the specified hash.</span></span></summary>
        <returns><span data-ttu-id="ec99c-180">Значение <see langword="true" />, если <paramref name="rgbSignature" /> совпадает с подписью, вычисленной с помощью указанного хэша. В противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ec99c-180"><see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified hash; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec99c-181">Параметры <paramref name="rgbHash" /> или <paramref name="rgbSignature" /> имеют значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ec99c-181">The <paramref name="rgbHash" /> or <paramref name="rgbSignature" /> parameters are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
