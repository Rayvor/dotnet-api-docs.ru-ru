<Type Name="HashAlgorithm" FullName="System.Security.Cryptography.HashAlgorithm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46b8e5a180e3bcee7822336bc81a6134861ed7a7" /><Meta Name="ms.sourcegitcommit" Value="367e1eae0725e6da7136cd073aaa856ded5d5c29" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/13/2019" /><Meta Name="ms.locfileid" Value="75029684" /></Metadata><TypeSignature Language="C#" Value="public abstract class HashAlgorithm : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HashAlgorithm extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HashAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HashAlgorithm&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class HashAlgorithm abstract : System::Security::Cryptography::ICryptoTransform" />
  <TypeSignature Language="F#" Value="type HashAlgorithm = class&#xA;    interface IDisposable&#xA;    interface ICryptoTransform" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9a790-101">Представляет базовый класс, из которого создаются все реализации криптографических хэш-алгоритмов.</span><span class="sxs-lookup"><span data-stu-id="9a790-101">Represents the base class from which all implementations of cryptographic hash algorithms must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-102">Хэш-функции являются фундаментальными для современных криптографий.</span><span class="sxs-lookup"><span data-stu-id="9a790-102">Hash functions are fundamental to modern cryptography.</span></span> <span data-ttu-id="9a790-103">Эти функции сопоставляют двоичные строки произвольной длины с маленькими двоичными строками фиксированной длины, называемыми хэш-значениями.</span><span class="sxs-lookup"><span data-stu-id="9a790-103">These functions map binary strings of an arbitrary length to small binary strings of a fixed length, known as hash values.</span></span> <span data-ttu-id="9a790-104">Функция криптографической хэш-функции имеет свойство, которое вычисляется нецелесообразно для поиска двух различных входных значений, которые являются хэш-значениями для одного и того же значения.</span><span class="sxs-lookup"><span data-stu-id="9a790-104">A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value.</span></span> <span data-ttu-id="9a790-105">Хэш-функции обычно используются с цифровыми подписями и для обеспечения целостности данных.</span><span class="sxs-lookup"><span data-stu-id="9a790-105">Hash functions are commonly used with digital signatures and for data integrity.</span></span>  
  
 <span data-ttu-id="9a790-106">Хэш используется в качестве уникального значения фиксированного размера, представляющего большой объем данных.</span><span class="sxs-lookup"><span data-stu-id="9a790-106">The hash is used as a unique value of fixed size representing a large amount of data.</span></span> <span data-ttu-id="9a790-107">Хэши двух наборов данных должны совпадать, если соответствующие данные также совпадают.</span><span class="sxs-lookup"><span data-stu-id="9a790-107">Hashes of two sets of data should match if the corresponding data also matches.</span></span> <span data-ttu-id="9a790-108">Небольшие изменения данных приводят к большим непредсказуемым изменениям в хэше.</span><span class="sxs-lookup"><span data-stu-id="9a790-108">Small changes to the data result in large unpredictable changes in the hash.</span></span>  
  
 <span data-ttu-id="9a790-109">Из-за проблем с SHA1 корпорация Майкрософт рекомендует использовать модель безопасности на основе SHA256 или более высокого уровня.</span><span class="sxs-lookup"><span data-stu-id="9a790-109">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span>  
  
## Examples  
 <span data-ttu-id="9a790-110">В следующем примере кода вычисляются <xref:System.Security.Cryptography.SHA1CryptoServiceProvider>ные хэш-значения для массива.</span><span class="sxs-lookup"><span data-stu-id="9a790-110">The following code example computes the <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> hash for an array.</span></span> <span data-ttu-id="9a790-111">В этом примере предполагается, что имеется стандартный массив байтов `dataArray[]`.</span><span class="sxs-lookup"><span data-stu-id="9a790-111">This example assumes that there is a predefined byte array `dataArray[]`.</span></span> <span data-ttu-id="9a790-112"><xref:System.Security.Cryptography.SHA1CryptoServiceProvider> является производным классом <xref:System.Security.Cryptography.HashAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="9a790-112"><xref:System.Security.Cryptography.SHA1CryptoServiceProvider> is a derived class of <xref:System.Security.Cryptography.HashAlgorithm>.</span></span>  
  
 [!code-cpp[Classic HashAlgorithm Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic HashAlgorithm Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HashAlgorithm Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic HashAlgorithm Example/CS/source.cs#1)]
 [!code-vb[Classic HashAlgorithm Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic HashAlgorithm Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="9a790-113">При наследовании от класса <see cref="T:System.Security.Cryptography.HashAlgorithm" /> необходимо переопределить следующие члены: <see cref="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" /> и <see cref="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-113">When you inherit from the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class, you must override the following members:  <see cref="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />.</span></span></para></block>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="9a790-114">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="9a790-114">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HashAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HashAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a790-115">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.HashAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-116">Нельзя создать экземпляр абстрактного класса.</span><span class="sxs-lookup"><span data-stu-id="9a790-116">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="9a790-117">Код приложения создает новый экземпляр производного класса.</span><span class="sxs-lookup"><span data-stu-id="9a790-117">Application code creates a new instance of a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public virtual bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReuseTransform { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReuseTransform : bool" Usage="System.Security.Cryptography.HashAlgorithm.CanReuseTransform" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a790-118">Возвращает значение, указывающее, возможно ли повторное использование текущего преобразования.</span><span class="sxs-lookup"><span data-stu-id="9a790-118">Gets a value indicating whether the current transform can be reused.</span></span></summary>
        <value><span data-ttu-id="9a790-119">Всегда <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-119">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public virtual bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTransformMultipleBlocks : bool" Usage="System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a790-120">Если переопределено в производном классе, возвращает значение, указывающее, возможно ли преобразование нескольких блоков.</span><span class="sxs-lookup"><span data-stu-id="9a790-120">When overridden in a derived class, gets a value indicating whether multiple blocks can be transformed.</span></span></summary>
        <value><span data-ttu-id="9a790-121">Значение <see langword="true" />, если возможно преобразование нескольких блоков; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-121"><see langword="true" /> if multiple blocks can be transformed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="hashAlgorithm.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a790-122">Освобождает все ресурсы, используемые классом <see cref="T:System.Security.Cryptography.HashAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-122">Releases all resources used by the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-123">Этот метод является простым вызовом метода <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9a790-123">This method is a simple call to the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9a790-124">Вызов `Dispose` позволяет перераспределить ресурсы, используемые классом <xref:System.Security.Cryptography.HashAlgorithm>, для других целей.</span><span class="sxs-lookup"><span data-stu-id="9a790-124">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.HashAlgorithm> class to be reallocated for other purposes.</span></span> <span data-ttu-id="9a790-125">Дополнительные сведения о `Dispose`см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="9a790-125">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeHash">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a790-126">Вычисляет хэш-значение для входных данных.</span><span class="sxs-lookup"><span data-stu-id="9a790-126">Computes the hash value for the input data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeHash">
      <MemberSignature Language="C#" Value="public byte[] ComputeHash (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ComputeHash(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeHash (buffer As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ComputeHash(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.ComputeHash : byte[] -&gt; byte[]" Usage="hashAlgorithm.ComputeHash buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9a790-127">Входные данные, для которых вычисляется хэш-код.</span><span class="sxs-lookup"><span data-stu-id="9a790-127">The input to compute the hash code for.</span></span></param>
        <summary><span data-ttu-id="9a790-128">Вычисляет хэш-значение для заданного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="9a790-128">Computes the hash value for the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="9a790-129">Вычисляемый хэш-код.</span><span class="sxs-lookup"><span data-stu-id="9a790-129">The computed hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9a790-130">В следующем примере вычисляются <xref:System.Security.Cryptography.SHA256> хэш-значение строки и возвращается хэш в виде строки с 64 символами в шестнадцатеричном формате.</span><span class="sxs-lookup"><span data-stu-id="9a790-130">The following example computes the <xref:System.Security.Cryptography.SHA256> hash value of a string and returns the hash as a 64-character, hexadecimal-formatted string.</span></span>  <span data-ttu-id="9a790-131">Хэш-строка, созданная с помощью этого примера кода, совместима с любой хэш-функцией SHA256 (на любой платформе), создающей хэш-строку 64-символа в шестнадцатеричном формате.</span><span class="sxs-lookup"><span data-stu-id="9a790-131">The hash string created by this code example is compatible with any SHA256 hash function (on any platform) that creates a 64-character, hexadecimal-formatted hash string.</span></span>  
  
 [!code-csharp[HashAlgorithm.ComputeHash-1](~/samples/snippets/csharp/api/system.security.cryptography/hashalgorithm/example1.cs)]
 [!code-vb[HashAlgorithm.ComputeHash-1](~/samples/snippets/visualbasic/api/system.security.cryptography/hashalgorithm/example1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a790-132">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-132"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a790-133">Объект уже удален.</span><span class="sxs-lookup"><span data-stu-id="9a790-133">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeHash">
      <MemberSignature Language="C#" Value="public byte[] ComputeHash (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ComputeHash(class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeHash (inputStream As Stream) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ComputeHash(System::IO::Stream ^ inputStream);" />
      <MemberSignature Language="F#" Value="member this.ComputeHash : System.IO.Stream -&gt; byte[]" Usage="hashAlgorithm.ComputeHash inputStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream"><span data-ttu-id="9a790-134">Входные данные, для которых вычисляется хэш-код.</span><span class="sxs-lookup"><span data-stu-id="9a790-134">The input to compute the hash code for.</span></span></param>
        <summary><span data-ttu-id="9a790-135">Вычисляет хэш-значение для заданного объекта <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-135">Computes the hash value for the specified <see cref="T:System.IO.Stream" /> object.</span></span></summary>
        <returns><span data-ttu-id="9a790-136">Вычисляемый хэш-код.</span><span class="sxs-lookup"><span data-stu-id="9a790-136">The computed hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  

<span data-ttu-id="9a790-137">В следующем примере вычисляется хэш <xref:System.Security.Cryptography.SHA256> для всех файлов в каталоге.</span><span class="sxs-lookup"><span data-stu-id="9a790-137">The following example calculates the <xref:System.Security.Cryptography.SHA256> hash for all files in a directory.</span></span>  
  
[!code-csharp[HashAlgorithm.ComputeHash Example](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SHA256 Example/CS/source.cs#1)]
[!code-vb[HashAlgorithm.ComputeHash Example](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SHA256 Example/VB/source.vb#1)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a790-138">Объект уже удален.</span><span class="sxs-lookup"><span data-stu-id="9a790-138">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeHash">
      <MemberSignature Language="C#" Value="public byte[] ComputeHash (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ComputeHash(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeHash (buffer As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ComputeHash(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.ComputeHash : byte[] * int * int -&gt; byte[]" Usage="hashAlgorithm.ComputeHash (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9a790-139">Входные данные, для которых вычисляется хэш-код.</span><span class="sxs-lookup"><span data-stu-id="9a790-139">The input to compute the hash code for.</span></span></param>
        <param name="offset"><span data-ttu-id="9a790-140">Смещение в массиве байтов, начиная с которого следует использовать данные.</span><span class="sxs-lookup"><span data-stu-id="9a790-140">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="count"><span data-ttu-id="9a790-141">Число байтов в массиве для использования в качестве данных.</span><span class="sxs-lookup"><span data-stu-id="9a790-141">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="9a790-142">Вычисляет хэш-значение для заданной области заданного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="9a790-142">Computes the hash value for the specified region of the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="9a790-143">Вычисляемый хэш-код.</span><span class="sxs-lookup"><span data-stu-id="9a790-143">The computed hash code.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a790-144"><paramref name="count" /> не является допустимым значением.</span><span class="sxs-lookup"><span data-stu-id="9a790-144"><paramref name="count" /> is an invalid value.</span></span>  
  
<span data-ttu-id="9a790-145">- или -</span><span class="sxs-lookup"><span data-stu-id="9a790-145">-or-</span></span> 
 <span data-ttu-id="9a790-146">Недопустимая длина значения параметра <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-146"><paramref name="buffer" /> length is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a790-147">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-147"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a790-148"><paramref name="offset" /> выходит за пределы диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a790-148"><paramref name="offset" /> is out of range.</span></span> <span data-ttu-id="9a790-149">Значение этого параметра не должно быть отрицательным.</span><span class="sxs-lookup"><span data-stu-id="9a790-149">This parameter requires a non-negative number.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a790-150">Объект уже удален.</span><span class="sxs-lookup"><span data-stu-id="9a790-150">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a790-151">Создает экземпляр реализации хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="9a790-151">Creates an instance of an implementation of a hash algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HashAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HashAlgorithm ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.HashAlgorithm" Usage="System.Security.Cryptography.HashAlgorithm.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a790-152">Создает экземпляр реализации по умолчанию хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="9a790-152">Creates an instance of the default implementation of a hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="9a790-153">Новый экземпляр <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" />, если параметры по умолчанию не были изменены с помощью .</span><span class="sxs-lookup"><span data-stu-id="9a790-153">A new <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /> instance, unless the default settings have been changed using the .</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-154">По умолчанию эта перегрузка использует <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> реализацию хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="9a790-154">By default, this overload uses the <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> implementation of a hash algorithm.</span></span> <span data-ttu-id="9a790-155">Если вы хотите указать другую реализацию, используйте перегрузку <xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29>, которая позволяет вместо этого указать имя алгоритма.</span><span class="sxs-lookup"><span data-stu-id="9a790-155">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span> <span data-ttu-id="9a790-156">Система настройки криптографии определяет реализацию <xref:System.Security.Cryptography.HashAlgorithm>по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="9a790-156">The cryptography configuration system defines the default implementation of <xref:System.Security.Cryptography.HashAlgorithm>.</span></span>  

 <span data-ttu-id="9a790-157">Из-за проблем с SHA1 корпорация Майкрософт рекомендует использовать модель безопасности на основе SHA256 или более высокого уровня.</span><span class="sxs-lookup"><span data-stu-id="9a790-157">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithm Create (string hashName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HashAlgorithm Create(string hashName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (hashName As String) As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HashAlgorithm ^ Create(System::String ^ hashName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.HashAlgorithm" Usage="System.Security.Cryptography.HashAlgorithm.Create hashName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hashName"><span data-ttu-id="9a790-158">Используемая реализация хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="9a790-158">The hash algorithm implementation to use.</span></span> <span data-ttu-id="9a790-159">В следующей таблице представлены допустимые значения параметра <paramref name="hashName" /> и алгоритмы, с которыми они сопоставляются.</span><span class="sxs-lookup"><span data-stu-id="9a790-159">The following table shows the valid values for the <paramref name="hashName" /> parameter and the algorithms they map to.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="9a790-160">Значение параметра</span><span class="sxs-lookup"><span data-stu-id="9a790-160">Parameter value</span></span> 
 </term><description> <span data-ttu-id="9a790-161">Инструменты</span><span class="sxs-lookup"><span data-stu-id="9a790-161">Implements</span></span> 
 </description></listheader><item><term> <span data-ttu-id="9a790-162">SHA</span><span class="sxs-lookup"><span data-stu-id="9a790-162">SHA</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> <span data-ttu-id="9a790-163">SHA1</span><span class="sxs-lookup"><span data-stu-id="9a790-163">SHA1</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> <span data-ttu-id="9a790-164">System.Security.Cryptography.SHA1</span><span class="sxs-lookup"><span data-stu-id="9a790-164">System.Security.Cryptography.SHA1</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> <span data-ttu-id="9a790-165">System.Security.Cryptography.HashAlgorithm</span><span class="sxs-lookup"><span data-stu-id="9a790-165">System.Security.Cryptography.HashAlgorithm</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> <span data-ttu-id="9a790-166">MD5</span><span class="sxs-lookup"><span data-stu-id="9a790-166">MD5</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /></description></item><item><term> <span data-ttu-id="9a790-167">System.Security.Cryptography.MD5</span><span class="sxs-lookup"><span data-stu-id="9a790-167">System.Security.Cryptography.MD5</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /></description></item><item><term> <span data-ttu-id="9a790-168">SHA256</span><span class="sxs-lookup"><span data-stu-id="9a790-168">SHA256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> <span data-ttu-id="9a790-169">SHA-256</span><span class="sxs-lookup"><span data-stu-id="9a790-169">SHA-256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> <span data-ttu-id="9a790-170">System.Security.Cryptography.SHA256</span><span class="sxs-lookup"><span data-stu-id="9a790-170">System.Security.Cryptography.SHA256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> <span data-ttu-id="9a790-171">SHA384</span><span class="sxs-lookup"><span data-stu-id="9a790-171">SHA384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> <span data-ttu-id="9a790-172">SHA-384</span><span class="sxs-lookup"><span data-stu-id="9a790-172">SHA-384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> <span data-ttu-id="9a790-173">System.Security.Cryptography.SHA384</span><span class="sxs-lookup"><span data-stu-id="9a790-173">System.Security.Cryptography.SHA384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> <span data-ttu-id="9a790-174">SHA512</span><span class="sxs-lookup"><span data-stu-id="9a790-174">SHA512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item><item><term> <span data-ttu-id="9a790-175">SHA-512</span><span class="sxs-lookup"><span data-stu-id="9a790-175">SHA-512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item><item><term> <span data-ttu-id="9a790-176">System.Security.Cryptography.SHA512</span><span class="sxs-lookup"><span data-stu-id="9a790-176">System.Security.Cryptography.SHA512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item></list></param>
        <summary><span data-ttu-id="9a790-177">Создает экземпляр заданной реализации хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="9a790-177">Creates an instance of the specified implementation of a hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="9a790-178">Новый экземпляр заданного хэш-алгоритма или <see langword="null" />, если <paramref name="hashName" /> не явл. допустимым хэш-алгоритмом.</span><span class="sxs-lookup"><span data-stu-id="9a790-178">A new instance of the specified hash algorithm, or <see langword="null" /> if <paramref name="hashName" /> is not a valid hash algorithm.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a790-179">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Security.Cryptography.HashAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-179">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="hashAlgorithm.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a790-180">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Security.Cryptography.HashAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-180">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-181">Вызовите метод `Dispose` по окончании использования класса <xref:System.Security.Cryptography.HashAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="9a790-181">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.HashAlgorithm>.</span></span> <span data-ttu-id="9a790-182">Метод `Dispose` оставляет класс <xref:System.Security.Cryptography.HashAlgorithm> в непригодном для использования состоянии.</span><span class="sxs-lookup"><span data-stu-id="9a790-182">The `Dispose` method leaves the <xref:System.Security.Cryptography.HashAlgorithm> in an unusable state.</span></span> <span data-ttu-id="9a790-183">После вызова метода `Dispose` необходимо освободить все ссылки на объект <xref:System.Security.Cryptography.HashAlgorithm>, чтобы сборщик мусора мог освободить память, занимаемую объектом <xref:System.Security.Cryptography.HashAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="9a790-183">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.HashAlgorithm> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.HashAlgorithm> was occupying.</span></span>  
  
 <span data-ttu-id="9a790-184">Дополнительные сведения см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="9a790-184">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9a790-185">Всегда вызывайте метод `Dispose` перед освобождением последней ссылки на класс <xref:System.Security.Cryptography.HashAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="9a790-185">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.HashAlgorithm>.</span></span> <span data-ttu-id="9a790-186">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Security.Cryptography.HashAlgorithm> метод `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="9a790-186">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.HashAlgorithm> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="hashAlgorithm.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="9a790-187">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="9a790-187"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="9a790-188">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Security.Cryptography.HashAlgorithm" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="9a790-188">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-189">Этот метод вызывается методом Public `Dispose()` и методом `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="9a790-189">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="9a790-190">`Dispose()` вызывает защищенный метод `Dispose(Boolean)` с параметром `disposing`, для которого задано значение `true`.</span><span class="sxs-lookup"><span data-stu-id="9a790-190">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="9a790-191">`Finalize` вызывает `Dispose`, для `disposing` задано значение `false`.</span><span class="sxs-lookup"><span data-stu-id="9a790-191">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="9a790-192">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Security.Cryptography.HashAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="9a790-192">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HashAlgorithm> references.</span></span> <span data-ttu-id="9a790-193">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="9a790-193">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9a790-194">Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="9a790-194">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="9a790-195">При переопределении <see langword="Dispose(Boolean)" />следует избегать ссылок на объекты, которые были удалены ранее при предыдущем вызове метода <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-195">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="9a790-196">Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />см. в разделе [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="9a790-196">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="9a790-197">Дополнительные сведения о <see langword="Dispose" /> и <see langword="Finalize" />см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="9a790-197">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public virtual byte[] Hash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Hash" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.Hash" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Hash As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Hash { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Hash : byte[]" Usage="System.Security.Cryptography.HashAlgorithm.Hash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a790-198">Возвращает значение вычисляемого хэш-кода.</span><span class="sxs-lookup"><span data-stu-id="9a790-198">Gets the value of the computed hash code.</span></span></summary>
        <value><span data-ttu-id="9a790-199">Текущее значение вычисляемого хэш-кода.</span><span class="sxs-lookup"><span data-stu-id="9a790-199">The current value of the computed hash code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-200">Свойство <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> является массивом байтов; Свойство <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> представляет собой значение, представляющее биты.</span><span class="sxs-lookup"><span data-stu-id="9a790-200">The <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> property is a byte array; the <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> property is a value that represent bits.</span></span> <span data-ttu-id="9a790-201">Таким образом, количество элементов в <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> равно одному восьмому размеру <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a790-201">Therefore, the number of elements in <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> is one-eighth the size of <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="9a790-202">Свойство <see cref="F:System.Security.Cryptography.HashAlgorithm.HashValue" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-202"><see cref="F:System.Security.Cryptography.HashAlgorithm.HashValue" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a790-203">Объект уже удален.</span><span class="sxs-lookup"><span data-stu-id="9a790-203">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected virtual void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="abstract member HashCore : ReadOnlySpan&lt;byte&gt; -&gt; unit&#xA;override this.HashCore : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="hashAlgorithm.HashCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9a790-204">Входные данные, для которых вычисляется хэш-код.</span><span class="sxs-lookup"><span data-stu-id="9a790-204">The input to compute the hash code for.</span></span></param>
        <summary><span data-ttu-id="9a790-205">Передает записываемые в объект данные в хэш-алгоритм для вычисления хэша.</span><span class="sxs-lookup"><span data-stu-id="9a790-205">Routes data written to the object into the hash algorithm for computing the hash.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="9a790-206">Реализация этого метода по умолчанию копирует `source` во временный массив и вызывает <xref:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)>.</span><span class="sxs-lookup"><span data-stu-id="9a790-206">The default implementation of this method copies `source` to a temporary array and calls <xref:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)>.</span></span>
    
<span data-ttu-id="9a790-207">Производные типы должны переопределять этот метод, чтобы избежать копирования промежуточных данных.</span><span class="sxs-lookup"><span data-stu-id="9a790-207">Derived types should override this method to avoid the intermediate data copying.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected abstract void HashCore (byte[] array, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HashCore(unsigned int8[] array, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub HashCore (array As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void HashCore(cli::array &lt;System::Byte&gt; ^ array, int ibStart, int cbSize);" />
      <MemberSignature Language="F#" Value="abstract member HashCore : byte[] * int * int -&gt; unit" Usage="hashAlgorithm.HashCore (array, ibStart, cbSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="9a790-208">Входные данные, для которых вычисляется хэш-код.</span><span class="sxs-lookup"><span data-stu-id="9a790-208">The input to compute the hash code for.</span></span></param>
        <param name="ibStart"><span data-ttu-id="9a790-209">Смещение в массиве байтов, начиная с которого следует использовать данные.</span><span class="sxs-lookup"><span data-stu-id="9a790-209">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cbSize"><span data-ttu-id="9a790-210">Число байтов в массиве для использования в качестве данных.</span><span class="sxs-lookup"><span data-stu-id="9a790-210">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="9a790-211">Если переопределено в производном классе, передает данные, записанные в объект, на вход хэш-алгоритма для вычисления хэша.</span><span class="sxs-lookup"><span data-stu-id="9a790-211">When overridden in a derived class, routes data written to the object into the hash algorithm for computing the hash.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-212">Этот метод не вызывается кодом приложения.</span><span class="sxs-lookup"><span data-stu-id="9a790-212">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="9a790-213">Этот абстрактный метод выполняет вычисление хэша.</span><span class="sxs-lookup"><span data-stu-id="9a790-213">This abstract method performs the hash computation.</span></span> <span data-ttu-id="9a790-214">Каждая запись в криптографический хэш-алгоритм передает данные через этот метод.</span><span class="sxs-lookup"><span data-stu-id="9a790-214">Every write to the cryptographic hash algorithm passes the data through this method.</span></span> <span data-ttu-id="9a790-215">Для каждого блока данных этот метод обновляет состояние хэш-объекта, чтобы в конце данных возвращалось правильное значение хэша.</span><span class="sxs-lookup"><span data-stu-id="9a790-215">For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected abstract byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="abstract member HashFinal : unit -&gt; byte[]" Usage="hashAlgorithm.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a790-216">Если переопределено в производном классе, завершает вычисление хэша после обработки последних данных криптографическим хэш-алгоритмом.</span><span class="sxs-lookup"><span data-stu-id="9a790-216">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="9a790-217">Вычисляемый хэш-код.</span><span class="sxs-lookup"><span data-stu-id="9a790-217">The computed hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-218">Этот метод завершает все частичное вычисление и возвращает правильное значение хэша для данных.</span><span class="sxs-lookup"><span data-stu-id="9a790-218">This method finalizes any partial computation and returns the correct hash value for the data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashSize">
      <MemberSignature Language="C#" Value="public virtual int HashSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.HashSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HashSize : int" Usage="System.Security.Cryptography.HashAlgorithm.HashSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a790-219">Возвращает размер вычисляемого хэш-кода в битах.</span><span class="sxs-lookup"><span data-stu-id="9a790-219">Gets the size, in bits, of the computed hash code.</span></span></summary>
        <value><span data-ttu-id="9a790-220">Размер вычисленного хэш-кода в битах.</span><span class="sxs-lookup"><span data-stu-id="9a790-220">The size, in bits, of the computed hash code.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashSizeValue">
      <MemberSignature Language="C#" Value="protected int HashSizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 HashSizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected HashSizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int HashSizeValue;" />
      <MemberSignature Language="F#" Value="val mutable HashSizeValue : int" Usage="System.Security.Cryptography.HashAlgorithm.HashSizeValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a790-221">Представляет размер вычисляемого хэш-кода в битах.</span><span class="sxs-lookup"><span data-stu-id="9a790-221">Represents the size, in bits, of the computed hash code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-222">Хэш-алгоритм определяет размер хэш-кода.</span><span class="sxs-lookup"><span data-stu-id="9a790-222">The hash algorithm specifies the size of the hash code.</span></span> <span data-ttu-id="9a790-223">Например, <xref:System.Security.Cryptography.SHA1> использует размер хэша 160 бит.</span><span class="sxs-lookup"><span data-stu-id="9a790-223">For example, <xref:System.Security.Cryptography.SHA1> uses a hash size of 160 bits.</span></span>  
  
 <span data-ttu-id="9a790-224">Доступ к этому полю осуществляется через свойство <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a790-224">This field is accessed through the <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashValue">
      <MemberSignature Language="C#" Value="protected internal byte[] HashValue;" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly unsigned int8[] HashValue" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.HashAlgorithm.HashValue" />
      <MemberSignature Language="VB.NET" Value="Protected Friend HashValue As Byte() " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public: cli::array &lt;System::Byte&gt; ^ HashValue;" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="val mutable HashValue : byte[]" Usage="System.Security.Cryptography.HashAlgorithm.HashValue" />
      <MemberSignature Language="C#" Value="protected byte[] HashValue;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".field family unsigned int8[] HashValue" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected HashValue As Byte() " FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Byte&gt; ^ HashValue;" FrameworkAlternate="netframework-1.1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a790-225">Представляет значение вычисляемого хэш-кода.</span><span class="sxs-lookup"><span data-stu-id="9a790-225">Represents the value of the computed hash code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-226">Доступ к этому полю осуществляется через свойство <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a790-226">This field is accessed through the <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit" Usage="hashAlgorithm.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a790-227">Сбрасывает хэш-алгоритм в исходное состояние.</span><span class="sxs-lookup"><span data-stu-id="9a790-227">Resets the hash algorithm to its initial state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public virtual int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int InputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBlockSize : int" Usage="System.Security.Cryptography.HashAlgorithm.InputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a790-228">Если переопределено в производном классе, возвращает размер входного блока.</span><span class="sxs-lookup"><span data-stu-id="9a790-228">When overridden in a derived class, gets the input block size.</span></span></summary>
        <value><span data-ttu-id="9a790-229">Размер входного блока.</span><span class="sxs-lookup"><span data-stu-id="9a790-229">The input block size.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-230">Если не переопределено, это свойство возвращает значение 1.</span><span class="sxs-lookup"><span data-stu-id="9a790-230">Unless overridden, this property returns the value 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public virtual int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OutputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputBlockSize : int" Usage="System.Security.Cryptography.HashAlgorithm.OutputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a790-231">Если переопределено в производном классе, возвращает размер выходного блока.</span><span class="sxs-lookup"><span data-stu-id="9a790-231">When overridden in a derived class, gets the output block size.</span></span></summary>
        <value><span data-ttu-id="9a790-232">Размер выходного блока.</span><span class="sxs-lookup"><span data-stu-id="9a790-232">The output block size.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-233">Если не переопределено, это свойство возвращает значение 1.</span><span class="sxs-lookup"><span data-stu-id="9a790-233">Unless overridden, this property returns the value 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="protected int State;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 State" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.HashAlgorithm.State" />
      <MemberSignature Language="VB.NET" Value="Protected State As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int State;" />
      <MemberSignature Language="F#" Value="val mutable State : int" Usage="System.Security.Cryptography.HashAlgorithm.State" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a790-234">Представляет состояние процесса вычисления хэша.</span><span class="sxs-lookup"><span data-stu-id="9a790-234">Represents the state of the hash computation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-235">Это поле используется, чтобы запретить пользователям изменять ключ хэш-алгоритма с ключом во время операции хэширования.</span><span class="sxs-lookup"><span data-stu-id="9a790-235">This field is used to prevent users from changing the key of a keyed hash algorithm during a hash operation.</span></span> <span data-ttu-id="9a790-236">При подлинном изменении ключа значение этого поля равно нулю как до, так и после операции хэширования.</span><span class="sxs-lookup"><span data-stu-id="9a790-236">When a key change is legitimate, the value of this field is zero both before and after a hash operation.</span></span> <span data-ttu-id="9a790-237">Если изменение ключа не допустимо, значение этого поля не равно нулю.</span><span class="sxs-lookup"><span data-stu-id="9a790-237">When a key change is not legitimate, the value of this field is nonzero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a790-238">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Security.Cryptography.HashAlgorithm" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="9a790-238">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="9a790-239">Этот метод вызывается открытым методом Dispose () и методом Finalize.</span><span class="sxs-lookup"><span data-stu-id="9a790-239">This method is called by the public Dispose() method and the Finalize method.</span></span> <span data-ttu-id="9a790-240">Dispose () вызывает защищенный метод Dispose (Boolean) с параметром disposing, имеющим значение true.</span><span class="sxs-lookup"><span data-stu-id="9a790-240">Dispose() invokes the protected Dispose(Boolean) method with the disposing parameter set to true.</span></span> <span data-ttu-id="9a790-241">Finalize вызывает метод Dispose с параметром disposing, имеющим значение false.</span><span class="sxs-lookup"><span data-stu-id="9a790-241">Finalize invokes Dispose with disposing set to false.</span></span>

<span data-ttu-id="9a790-242">Если параметр disposing имеет значение true, этот метод освобождает все ресурсы, удерживаемые любыми управляемыми объектами, на которые ссылается этот <xref:System.Security.Cryptography.HashAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="9a790-242">When the disposing parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HashAlgorithm> references.</span></span> <span data-ttu-id="9a790-243">Этот метод вызывает метод Dispose каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="9a790-243">This method invokes the Dispose() method of each referenced object.</span></span>

<span data-ttu-id="9a790-244">**Примечания к наследникам:**</span><span class="sxs-lookup"><span data-stu-id="9a790-244">**Notes to Inheritors:**</span></span>

<span data-ttu-id="9a790-245">Метод Dispose может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="9a790-245">Dispose can be called multiple times by other objects.</span></span> <span data-ttu-id="9a790-246">При переопределении Dispose (Boolean) следует избегать ссылок на объекты, которые ранее были удалены в предыдущем вызове метода Dispose.</span><span class="sxs-lookup"><span data-stu-id="9a790-246">When overriding Dispose(Boolean), be careful not to reference objects that have been previously disposed in an earlier call to Dispose.</span></span> <span data-ttu-id="9a790-247">Дополнительные сведения о том, как реализовать метод Dispose (Boolean), см. в разделе [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="9a790-247">For more information about how to implement Dispose(Boolean), see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

<span data-ttu-id="9a790-248">Дополнительные сведения о методах Dispose и Finalize см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [Переопределение метода Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v%3dvs.100)).</span><span class="sxs-lookup"><span data-stu-id="9a790-248">For more information about Dispose and Finalize, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v%3dvs.100)).</span></span>

]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="9a790-249">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="9a790-249">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberSignature Language="F#" Value="abstract member TransformBlock : byte[] * int * int * byte[] * int -&gt; int&#xA;override this.TransformBlock : byte[] * int * int * byte[] * int -&gt; int" Usage="hashAlgorithm.TransformBlock (inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="inputOffset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="inputCount" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="outputOffset" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="9a790-250">Входные данные, для которых вычисляется хэш-код.</span><span class="sxs-lookup"><span data-stu-id="9a790-250">The input to compute the hash code for.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="9a790-251">Смещение во входном массиве байтов, начиная с которого следует использовать данные.</span><span class="sxs-lookup"><span data-stu-id="9a790-251">The offset into the input byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="9a790-252">Число байтов во входном массиве для использования в качестве данных.</span><span class="sxs-lookup"><span data-stu-id="9a790-252">The number of bytes in the input byte array to use as data.</span></span></param>
        <param name="outputBuffer"><span data-ttu-id="9a790-253">Копия части входного массива, используемого для вычисления хэш-кода.</span><span class="sxs-lookup"><span data-stu-id="9a790-253">A copy of the part of the input array used to compute the hash code.</span></span></param>
        <param name="outputOffset"><span data-ttu-id="9a790-254">Смещение в выходном массиве байтов, начиная с которого следует записывать данные.</span><span class="sxs-lookup"><span data-stu-id="9a790-254">The offset into the output byte array from which to begin writing data.</span></span></param>
        <summary><span data-ttu-id="9a790-255">Вычисляет хэш-значение для заданной области входного массива байтов и копирует указанную область входного массива байтов в заданную область выходного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="9a790-255">Computes the hash value for the specified region of the input byte array and copies the specified region of the input byte array to the specified region of the output byte array.</span></span></summary>
        <returns><span data-ttu-id="9a790-256">Число записанных байтов.</span><span class="sxs-lookup"><span data-stu-id="9a790-256">The number of bytes written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-257">Перед вызовом метода <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> необходимо вызвать метод <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a790-257">You must call the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method before calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method.</span></span> <span data-ttu-id="9a790-258">Перед получением окончательного хэш-значения необходимо вызвать оба метода.</span><span class="sxs-lookup"><span data-stu-id="9a790-258">You must call both methods before you retrieve the final hash value.</span></span>  
  
 <span data-ttu-id="9a790-259">Чтобы получить конечное хэш-значение после вызова метода <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A>, получите массив байтов, содержащийся в свойстве <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a790-259">To retrieve the final hash value after calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method, get the byte array contained within the <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> property.</span></span>  
  
 <span data-ttu-id="9a790-260">Вызов метода <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> с различными входными и выходными массивами приводит к <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="9a790-260">Calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method with different input and output arrays results in an <xref:System.IO.IOException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a790-261">В следующих примерах кода для хэширования строки используется метод <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> с методом <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a790-261">The following code examples use the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method with the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method to hash a string.</span></span>  
  
 [!code-csharp[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.HashAlgorithm.TransformFinalBlock/CS/sample.cs#1)]
 [!code-vb[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.HashAlgorithm.TransformFinalBlock/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a790-262">Недопустимое значение параметра <paramref name="inputCount" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-262"><paramref name="inputCount" /> uses an invalid value.</span></span>  
  
<span data-ttu-id="9a790-263">- или -</span><span class="sxs-lookup"><span data-stu-id="9a790-263">-or-</span></span> 
 <span data-ttu-id="9a790-264">Недопустимая длина значения параметра <paramref name="inputBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-264"><paramref name="inputBuffer" /> has an invalid length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a790-265">Свойство <paramref name="inputBuffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-265"><paramref name="inputBuffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a790-266"><paramref name="inputOffset" /> выходит за пределы диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a790-266"><paramref name="inputOffset" /> is out of range.</span></span> <span data-ttu-id="9a790-267">Значение этого параметра не должно быть отрицательным.</span><span class="sxs-lookup"><span data-stu-id="9a790-267">This parameter requires a non-negative number.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a790-268">Объект уже удален.</span><span class="sxs-lookup"><span data-stu-id="9a790-268">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="F#" Value="abstract member TransformFinalBlock : byte[] * int * int -&gt; byte[]&#xA;override this.TransformFinalBlock : byte[] * int * int -&gt; byte[]" Usage="hashAlgorithm.TransformFinalBlock (inputBuffer, inputOffset, inputCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="inputOffset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="inputCount" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="9a790-269">Входные данные, для которых вычисляется хэш-код.</span><span class="sxs-lookup"><span data-stu-id="9a790-269">The input to compute the hash code for.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="9a790-270">Смещение в массиве байтов, начиная с которого следует использовать данные.</span><span class="sxs-lookup"><span data-stu-id="9a790-270">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="9a790-271">Число байтов в массиве для использования в качестве данных.</span><span class="sxs-lookup"><span data-stu-id="9a790-271">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="9a790-272">Вычисляет хэш-значение для заданной области заданного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="9a790-272">Computes the hash value for the specified region of the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="9a790-273">Массив, который является копией хэшируемой части входных данных.</span><span class="sxs-lookup"><span data-stu-id="9a790-273">An array that is a copy of the part of the input that is hashed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a790-274">Необходимо вызвать метод <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> после вызова метода <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A>, но перед получением окончательного хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="9a790-274">You must call the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method after calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method but before you retrieve the final hash value.</span></span>  
  
 <span data-ttu-id="9a790-275">Обратите внимание, что возвращаемое значение этого метода не является хэш-значением, а только копией хэшированной части входных данных.</span><span class="sxs-lookup"><span data-stu-id="9a790-275">Note that the return value of this method is not the hash value, but only a copy of the hashed part of the input data.</span></span>  <span data-ttu-id="9a790-276">Чтобы получить итоговое хэшированное значение после вызова метода <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A>, получите массив байтов, содержащийся в свойстве <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a790-276">To retrieve the final hashed value after calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method, get the byte array contained in the <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a790-277">В следующих примерах кода для хэширования строки используется метод <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> с методом <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a790-277">The following code examples use the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method with the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method to hash a string.</span></span>  
  
 [!code-csharp[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.HashAlgorithm.TransformFinalBlock/CS/sample.cs#1)]
 [!code-vb[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.HashAlgorithm.TransformFinalBlock/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a790-278">Недопустимое значение параметра <paramref name="inputCount" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-278"><paramref name="inputCount" /> uses an invalid value.</span></span>  
  
<span data-ttu-id="9a790-279">- или -</span><span class="sxs-lookup"><span data-stu-id="9a790-279">-or-</span></span> 
 <span data-ttu-id="9a790-280">Для параметра <paramref name="inputBuffer" /> задано недопустимое смещение.</span><span class="sxs-lookup"><span data-stu-id="9a790-280"><paramref name="inputBuffer" /> has an invalid offset length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a790-281">Свойство <paramref name="inputBuffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-281"><paramref name="inputBuffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a790-282"><paramref name="inputOffset" /> выходит за пределы диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a790-282"><paramref name="inputOffset" /> is out of range.</span></span> <span data-ttu-id="9a790-283">Значение этого параметра не должно быть отрицательным.</span><span class="sxs-lookup"><span data-stu-id="9a790-283">This parameter requires a non-negative number.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9a790-284">Объект уже удален.</span><span class="sxs-lookup"><span data-stu-id="9a790-284">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryComputeHash">
      <MemberSignature Language="C#" Value="public bool TryComputeHash (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryComputeHash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.TryComputeHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryComputeHash (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryComputeHash(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryComputeHash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; bool" Usage="hashAlgorithm.TryComputeHash (source, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9a790-285">Входные данные, для которых вычисляется хэш-код.</span><span class="sxs-lookup"><span data-stu-id="9a790-285">The input to compute the hash code for.</span></span></param>
        <param name="destination"><span data-ttu-id="9a790-286">Буфер для получения значения хэша.</span><span class="sxs-lookup"><span data-stu-id="9a790-286">The buffer to receive the hash value.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="9a790-287">Этот метод возвращает общее количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-287">When this method returns, the total number of bytes written into <paramref name="destination" />.</span></span> <span data-ttu-id="9a790-288">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="9a790-288">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="9a790-289">Пытается вычислить хэш-значение для заданного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="9a790-289">Attempts to compute the hash value for the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="9a790-290">Значение <see langword="true" />, если <paramref name="destination" /> имеет достаточную длину для получения хэш-значения, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-290"><see langword="true" /> if <paramref name="destination" /> is long enough to receive the hash value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected virtual bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryHashFinal : Span&lt;byte&gt; * int -&gt; bool&#xA;override this.TryHashFinal : Span&lt;byte&gt; * int -&gt; bool" Usage="hashAlgorithm.TryHashFinal (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="9a790-291">Буфер для получения значения хэша.</span><span class="sxs-lookup"><span data-stu-id="9a790-291">The buffer to receive the hash value.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="9a790-292">Этот метод возвращает общее количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-292">When this method returns, the total number of bytes written into <paramref name="destination" />.</span></span> <span data-ttu-id="9a790-293">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="9a790-293">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="9a790-294">Пытается завершить вычисление хэша после обработки последних данных хэш-алгоритмом.</span><span class="sxs-lookup"><span data-stu-id="9a790-294">Attempts to finalize the hash computation after the last data is processed by the hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="9a790-295">Значение <see langword="true" />, если <paramref name="destination" /> имеет достаточную длину для получения хэш-значения, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9a790-295"><see langword="true" /> if <paramref name="destination" /> is long enough to receive the hash value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="9a790-296">Реализация по умолчанию этого метода заключается в вызове <xref:System.Security.Cryptography.HashAlgorithm.HashFinal> и копировании результата в `destination`.</span><span class="sxs-lookup"><span data-stu-id="9a790-296">The default implementation of this method is to call <xref:System.Security.Cryptography.HashAlgorithm.HashFinal> and copy the result to `destination`.</span></span>
    
<span data-ttu-id="9a790-297">Производные типы должны переопределять этот метод, чтобы избежать создания промежуточного массива.</span><span class="sxs-lookup"><span data-stu-id="9a790-297">Derived types should override this method to avoid the intermediate array creation.</span></span>

<span data-ttu-id="9a790-298">Все вызовы этого метода класса <xref:System.Security.Cryptography.HashAlgorithm> уже проверили, что `destination` достаточно длинно на основе свойства <xref:System.Security.Cryptography.HashAlgorithm.HashSize>, поэтому `false` возвращаемые значения непредвиденны.</span><span class="sxs-lookup"><span data-stu-id="9a790-298">All calls to this method by the <xref:System.Security.Cryptography.HashAlgorithm> class have already verified that `destination` is long enough based on the <xref:System.Security.Cryptography.HashAlgorithm.HashSize> property, so `false` return values are unexpected.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
