<Type Name="ECDsaOpenSsl" FullName="System.Security.Cryptography.ECDsaOpenSsl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fef516a9a0f5153fe7343ebd69a439449492ed57" /><Meta Name="ms.sourcegitcommit" Value="0cb8bc0854af5bc6af4211b6cf43cbda48e9f6c8" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/04/2019" /><Meta Name="ms.locfileid" Value="74798109" /></Metadata><TypeSignature Language="C#" Value="public sealed class ECDsaOpenSsl : System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ECDsaOpenSsl extends System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDsaOpenSsl" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ECDsaOpenSsl&#xA;Inherits ECDsa" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDsaOpenSsl sealed : System::Security::Cryptography::ECDsa" />
  <TypeSignature Language="F#" Value="type ECDsaOpenSsl = class&#xA;    inherit ECDsa" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.ECDsa</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="82900-101">Предоставляет реализацию алгоритма цифровых подписей на основе эллиптических кривых (Elliptic Curve Digital Signature Algorithm, ECDSA) с поддержкой OpenSSL.</span><span class="sxs-lookup"><span data-stu-id="82900-101">Provides an implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA) backed by OpenSSL.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="82900-102">Этот класс следует использовать непосредственно при взаимодействии платформ с библиотекой System OpenSSL.</span><span class="sxs-lookup"><span data-stu-id="82900-102">This class should only be used directly when doing platform interop with the system OpenSSL library.</span></span>
<span data-ttu-id="82900-103">Если взаимодействие с платформой не требуется, следует использовать <xref:System.Security.Cryptography.ECDsa.Create%2A?displayProperty=nameWithType> фабричные методы вместо определенной производной реализации.</span><span class="sxs-lookup"><span data-stu-id="82900-103">When platform interop is not needed, you should use the <xref:System.Security.Cryptography.ECDsa.Create%2A?displayProperty=nameWithType> factory methods instead of a specific derived implementation.</span></span>
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82900-104">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />.</span><span class="sxs-lookup"><span data-stu-id="82900-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="82900-105">Этот конструктор не создает новую пару ключей Public и Private немедленно.</span><span class="sxs-lookup"><span data-stu-id="82900-105">This constructor does not generate a new public/private keypair immediately.</span></span>
<span data-ttu-id="82900-106">Этот конструктор задает для свойства <xref:System.Security.Cryptography.ECDsaOpenSsl.KeySize> значение 521, а при необходимости для определения целевой кривой используется сохраненный размер.</span><span class="sxs-lookup"><span data-stu-id="82900-106">This constructor sets the <xref:System.Security.Cryptography.ECDsaOpenSsl.KeySize> property to 521 and when a key is needed the saved size is used to identify the target curve.</span></span>
<span data-ttu-id="82900-107">Если ключ загружается с помощью метода <xref:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters%2A> или другого метода импорта ключа, размер ключа из этого конструктора не имеет смысла.</span><span class="sxs-lookup"><span data-stu-id="82900-107">If a key is loaded via the <xref:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters%2A> method, or other key import method, the key size from this constructor has no meaning.</span></span>
 
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Cryptography.ECDsa.Create" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl(int keySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaOpenSsl : int -&gt; System.Security.Cryptography.ECDsaOpenSsl" Usage="new System.Security.Cryptography.ECDsaOpenSsl keySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize"><span data-ttu-id="82900-108">Размер ключа.</span><span class="sxs-lookup"><span data-stu-id="82900-108">The size of the key.</span></span> <span data-ttu-id="82900-109">Допустимые размеры ключей: 256, 384 и 521 бит.</span><span class="sxs-lookup"><span data-stu-id="82900-109">Valid key sizes are 256, 384, and 521 bits.</span></span></param>
        <summary><span data-ttu-id="82900-110">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> с указанным размером целевого ключа.</span><span class="sxs-lookup"><span data-stu-id="82900-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> class with a specified target key size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="82900-111">Этот конструктор не создает новую пару ключей Public и Private немедленно.</span><span class="sxs-lookup"><span data-stu-id="82900-111">This constructor does not generate a new public/private keypair immediately.</span></span>
<span data-ttu-id="82900-112">Этот конструктор задает для свойства <xref:System.Security.Cryptography.ECDsaOpenSsl.KeySize> указанное значение, а при необходимости для определения целевой кривой используется сохраненный размер.</span><span class="sxs-lookup"><span data-stu-id="82900-112">This constructor sets the <xref:System.Security.Cryptography.ECDsaOpenSsl.KeySize> property to the provided value and when a key is needed the saved size is used to identify the target curve.</span></span>
<span data-ttu-id="82900-113">Если ключ загружается с помощью метода <xref:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters%2A> или другого метода импорта ключа, размер ключа из этого конструктора не имеет смысла.</span><span class="sxs-lookup"><span data-stu-id="82900-113">If a key is loaded via the <xref:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters%2A> method, or other key import method, the key size from this constructor has no meaning.</span></span>
 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="82900-114"><paramref name="keySize" /> задает недопустимую длину.</span><span class="sxs-lookup"><span data-stu-id="82900-114"><paramref name="keySize" /> specifies an invalid length.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.ECDsa.Create" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaOpenSsl : nativeint -&gt; System.Security.Cryptography.ECDsaOpenSsl" Usage="new System.Security.Cryptography.ECDsaOpenSsl handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="82900-115">Значение <c>EC_KEY\*</c> OpenSSL, используемое в качестве ключа.</span><span class="sxs-lookup"><span data-stu-id="82900-115">The OpenSSL <c>EC_KEY\*</c> value to use as the key.</span></span></param>
        <summary><span data-ttu-id="82900-116">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> из существующего ключа OpenSSL, представленного в виде <c>EC_KEY\*</c>.</span><span class="sxs-lookup"><span data-stu-id="82900-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> class from an existing OpenSSL key represented as an <c>EC_KEY\*</c>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
> [!IMPORTANT]
> <span data-ttu-id="82900-117">OpenSSL поддерживает загрузку нескольких версий библиотек в рамках одного процесса.</span><span class="sxs-lookup"><span data-stu-id="82900-117">OpenSSL supports multiple library versions being loaded within the same process.</span></span>
> <span data-ttu-id="82900-118">Перед вызовом этого конструктора убедитесь, что значение указателя получено из той же версии OpenSSL, которую использует этот класс. Дополнительные сведения см. в разделе <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.</span><span class="sxs-lookup"><span data-stu-id="82900-118">Before calling this constructor verify your pointer value came from the same version of OpenSSL that this class uses, see <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion> for more information.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="82900-119">Свойство <paramref name="handle" /> имеет значение <see cref="F:System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="82900-119"><paramref name="handle" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="82900-120"><paramref name="handle" /> не является допустимым значением <c>EC_KEY\*</c>.</span><span class="sxs-lookup"><span data-stu-id="82900-120"><paramref name="handle" /> is not a valid <c>EC_KEY\*</c>.</span></span></exception>
        <altmember cref="P:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaOpenSsl : System.Security.Cryptography.ECCurve -&gt; System.Security.Cryptography.ECDsaOpenSsl" Usage="new System.Security.Cryptography.ECDsaOpenSsl curve" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="82900-121">Кривая, используемая для создания пары открытого и закрытого эфемерных ключей.</span><span class="sxs-lookup"><span data-stu-id="82900-121">The curve used to generate an ephemeral public/private key pair.</span></span></param>
        <summary><span data-ttu-id="82900-122">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> и создает ключ на основе указанной кривой.</span><span class="sxs-lookup"><span data-stu-id="82900-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> class and generates a new key on the specified curve.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="82900-123"><paramref name="curve" /> не выполняет проверку.</span><span class="sxs-lookup"><span data-stu-id="82900-123"><paramref name="curve" /> does not validate.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.ECCurve.Validate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl (System.Security.Cryptography.SafeEvpPKeyHandle pkeyHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.SafeEvpPKeyHandle pkeyHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor(System.Security.Cryptography.SafeEvpPKeyHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pkeyHandle As SafeEvpPKeyHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl(System::Security::Cryptography::SafeEvpPKeyHandle ^ pkeyHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaOpenSsl : System.Security.Cryptography.SafeEvpPKeyHandle -&gt; System.Security.Cryptography.ECDsaOpenSsl" Usage="new System.Security.Cryptography.ECDsaOpenSsl pkeyHandle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pkeyHandle" Type="System.Security.Cryptography.SafeEvpPKeyHandle" />
      </Parameters>
      <Docs>
        <param name="pkeyHandle"><span data-ttu-id="82900-124">Значение <c>EVP_PKEY\*</c> OpenSSL, используемое в качестве ключа, который представлен в виде <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" />.</span><span class="sxs-lookup"><span data-stu-id="82900-124">The OpenSSL <c>EVP_PKEY\*</c> value to use as the key, represented as a <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" />.</span></span></param>
        <summary><span data-ttu-id="82900-125">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> из существующего ключа OpenSSL, представленного в виде <c>EVP_PKEY\*</c>.</span><span class="sxs-lookup"><span data-stu-id="82900-125">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> class from an existing OpenSSL key represented as an <c>EVP_PKEY\*</c>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
> [!IMPORTANT]
> <span data-ttu-id="82900-126">OpenSSL поддерживает загрузку нескольких версий библиотек в рамках одного процесса.</span><span class="sxs-lookup"><span data-stu-id="82900-126">OpenSSL supports multiple library versions being loaded within the same process.</span></span>
> <span data-ttu-id="82900-127">Перед вызовом этого конструктора убедитесь, что значение указателя получено из той же версии OpenSSL, которую использует этот класс.</span><span class="sxs-lookup"><span data-stu-id="82900-127">Before calling this constructor, verify your pointer value came from the same version of OpenSSL that this class uses.</span></span>
> <span data-ttu-id="82900-128">Для получения дополнительной информации см. <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.</span><span class="sxs-lookup"><span data-stu-id="82900-128">For more information, see <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="82900-129"><paramref name="pkeyHandle" /> представляет недопустимый дескриптор.</span><span class="sxs-lookup"><span data-stu-id="82900-129"><paramref name="pkeyHandle" /> represents an invalid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82900-130">Свойство <paramref name="pkeyHandle" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="82900-130"><paramref name="pkeyHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="82900-131"><paramref name="pkeyHandle" /> не представляет ключ на основе эллиптической кривой.</span><span class="sxs-lookup"><span data-stu-id="82900-131"><paramref name="pkeyHandle" /> does not represent a elliptic curve (EC) key.</span></span></exception>
        <seealso cref="P:System.Security.Cryptography.SafeEvpPKeyValue.OpenSslVersion" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eCDsaOpenSsl.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="82900-132">Значение <see langword="true" />, чтобы освободить все ресурсы (управляемые и неуправляемые); значение <see langword="false" />, чтобы освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="82900-132"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="82900-133">Освобождает ресурсы, используемые текущим экземпляром класса <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />.</span><span class="sxs-lookup"><span data-stu-id="82900-133">Releases the resources used by the current instance of the <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateKeyHandle">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.SafeEvpPKeyHandle DuplicateKeyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.SafeEvpPKeyHandle DuplicateKeyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.DuplicateKeyHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function DuplicateKeyHandle () As SafeEvpPKeyHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::SafeEvpPKeyHandle ^ DuplicateKeyHandle();" />
      <MemberSignature Language="F#" Value="member this.DuplicateKeyHandle : unit -&gt; System.Security.Cryptography.SafeEvpPKeyHandle" Usage="eCDsaOpenSsl.DuplicateKeyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SafeEvpPKeyHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82900-134">Возвращает представление <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> криптографического ключа.</span><span class="sxs-lookup"><span data-stu-id="82900-134">Gets a <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> representation of the cryptographic key.</span></span></summary>
        <returns><span data-ttu-id="82900-135">Представление <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> криптографического ключа.</span><span class="sxs-lookup"><span data-stu-id="82900-135">A <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> representation of the cryptographic key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
<span data-ttu-id="82900-136">Каждый вызов этого метода создает новый объект <xref:System.Security.Cryptography.SafeEvpPKeyHandle> с собственным временем существования.</span><span class="sxs-lookup"><span data-stu-id="82900-136">Each call to this method produces a new <xref:System.Security.Cryptography.SafeEvpPKeyHandle> object with its own lifetime.</span></span>
<span data-ttu-id="82900-137">Объекты, возвращаемые этим методом, можно безопасно использовать даже после удаления этого <xref:System.Security.Cryptography.ECDsaOpenSsl> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="82900-137">The objects returned by this method can safely be used even after this <xref:System.Security.Cryptography.ECDsaOpenSsl> instance has been disposed.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.ExportExplicitParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportExplicitParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportExplicitParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportExplicitParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDsaOpenSsl.ExportExplicitParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="82900-138">Значение <see langword="true" /> для включения закрытых параметров; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="82900-138"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="82900-139">Экспортирует ключ и параметры явной кривой, используемые объектом шифрования на основе эллиптических кривых (ECC), в объект <see cref="T:System.Security.Cryptography.ECParameters" />.</span><span class="sxs-lookup"><span data-stu-id="82900-139">Exports the key and explicit curve parameters used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span></summary>
        <returns><span data-ttu-id="82900-140">Ключ и параметры явной кривой, используемые объектом ECC.</span><span class="sxs-lookup"><span data-stu-id="82900-140">The key and explicit curve parameters used by the ECC object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="82900-141">При получении значений кривой произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="82900-141">An error occurred while obtaining the curve values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDsaOpenSsl.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="82900-142">Значение <see langword="true" /> для включения закрытых параметров; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="82900-142"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="82900-143">Экспортирует ключ, используемый объектом шифрования на основе эллиптических кривых (ECC), в объект <see cref="T:System.Security.Cryptography.ECParameters" />.</span><span class="sxs-lookup"><span data-stu-id="82900-143">Exports the key used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span> <span data-ttu-id="82900-144">Если ключ был создан как именованная кривая, поле <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> содержит параметры именованной кривой; в противном случае оно содержит параметры явной кривой.</span><span class="sxs-lookup"><span data-stu-id="82900-144">If the key was created as a named curve, the <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> field contains named curve parameters; otherwise, it contains explicit parameters.</span></span></summary>
        <returns><span data-ttu-id="82900-145">Ключ и параметры именованной кривой, используемые объектом ECC.</span><span class="sxs-lookup"><span data-stu-id="82900-145">The key and named curve parameters used by the ECC object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="82900-146">При получении значений кривой произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="82900-146">An error occurred while obtaining the curve values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.GenerateKey(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : System.Security.Cryptography.ECCurve -&gt; unit" Usage="eCDsaOpenSsl.GenerateKey curve" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="82900-147">Кривая, используемая для создания ключа.</span><span class="sxs-lookup"><span data-stu-id="82900-147">The curve to use to generate the key.</span></span></param>
        <summary><span data-ttu-id="82900-148">Создает новую пару открытого и закрытого эфемерных ключей для указанной кривой, заменяя текущий ключ.</span><span class="sxs-lookup"><span data-stu-id="82900-148">Generates a new ephemeral public/private key pair for the specified curve, replacing the current key.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="eCDsaOpenSsl.HashData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="82900-149">Двоичный поток, хэширование которого требуется выполнить.</span><span class="sxs-lookup"><span data-stu-id="82900-149">The binary stream to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="82900-150">Алгоритм, который будет использоваться для хэширования данных.</span><span class="sxs-lookup"><span data-stu-id="82900-150">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="82900-151">Вычисляет хэш-значение указанного двоичного потока с помощью заданного алгоритма хэширования.</span><span class="sxs-lookup"><span data-stu-id="82900-151">Computes the hash value of the specified binary stream by using the specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="82900-152">Хэшированные данные.</span><span class="sxs-lookup"><span data-stu-id="82900-152">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="eCDsaOpenSsl.HashData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="82900-153">Данные, предназначенные для хэширования.</span><span class="sxs-lookup"><span data-stu-id="82900-153">The data to be hashed.</span></span></param>
        <param name="offset"><span data-ttu-id="82900-154">Индекс первого байта в <paramref name="data" />, хэширование которого требуется выполнить.</span><span class="sxs-lookup"><span data-stu-id="82900-154">The index of the first byte in <paramref name="data" /> to be hashed.</span></span></param>
        <param name="count"><span data-ttu-id="82900-155">Количество байтов, хэширование которых необходимо выполнить.</span><span class="sxs-lookup"><span data-stu-id="82900-155">The number of bytes to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="82900-156">Алгоритм, который будет использоваться для хэширования данных.</span><span class="sxs-lookup"><span data-stu-id="82900-156">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="82900-157">Вычисляет хэш-значение указанного фрагмента массива байтов с помощью заданного алгоритма хэширования.</span><span class="sxs-lookup"><span data-stu-id="82900-157">Computes the hash value of the specified portion of a byte array by using the specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="82900-158">Хэшированные данные.</span><span class="sxs-lookup"><span data-stu-id="82900-158">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.ECParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters(System.Security.Cryptography.ECParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As ECParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::ECParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.ECParameters -&gt; unit" Usage="eCDsaOpenSsl.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="82900-159">Параметры кривой.</span><span class="sxs-lookup"><span data-stu-id="82900-159">The curve parameters.</span></span></param>
        <summary><span data-ttu-id="82900-160">Заменяет текущий ключ для этого экземпляра ключом, использующим указанные параметры.</span><span class="sxs-lookup"><span data-stu-id="82900-160">Replaces the current key for this instance with one using the specified key parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82900-161">Если `parameters` содержит только <xref:System.Security.Cryptography.ECParameters.Q>, импортируется только открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="82900-161">If `parameters` contains only <xref:System.Security.Cryptography.ECParameters.Q>, only a public key is imported.</span></span> <span data-ttu-id="82900-162">Если `parameters` также содержит <xref:System.Security.Cryptography.ECParameters.D>, импортируется полная пара ключей.</span><span class="sxs-lookup"><span data-stu-id="82900-162">If `parameters` also contains <xref:System.Security.Cryptography.ECParameters.D>, a full key pair is imported.</span></span> <span data-ttu-id="82900-163">Поле <xref:System.Security.Cryptography.ECParameters.Curve> указывает тип кривой для импорта.</span><span class="sxs-lookup"><span data-stu-id="82900-163">The <xref:System.Security.Cryptography.ECParameters.Curve> field specifies the type of the curve to import.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="82900-164"><paramref name="parameters" /> не содержит допустимых значений.</span><span class="sxs-lookup"><span data-stu-id="82900-164"><paramref name="parameters" /> does not contain valid values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaOpenSsl.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.ECDsaOpenSsl.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82900-165">Получает или задает размер модуля ключа (в битах), используемого алгоритмом асимметричного шифрования.</span><span class="sxs-lookup"><span data-stu-id="82900-165">Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="82900-166">Размер модуля ключа (в битах), используемого алгоритмом асимметричного шифрования.</span><span class="sxs-lookup"><span data-stu-id="82900-166">The size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="82900-167">Установка этого свойства в текущее значение не имеет видимого воздействия.</span><span class="sxs-lookup"><span data-stu-id="82900-167">Setting this property to its current value has no visible effect.</span></span>
<span data-ttu-id="82900-168">Присвоение этому свойству нового юридического значения отклоняет текущий ключ, но откладывает создание нового ключа до тех пор, пока он не будет нужен.</span><span class="sxs-lookup"><span data-stu-id="82900-168">Setting this property to a new legal value discards the current key, but defers creation of a new key until one is needed.</span></span>

<span data-ttu-id="82900-169">Поскольку размеры ключей не однозначно определяют эллиптические кривые, использование метода задания свойств не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="82900-169">Because key sizes do not uniquely identify elliptic curves, the use of the property setter is discouraged.</span></span> <span data-ttu-id="82900-170">Чтобы создать новый ключ на определенной кривой, используйте метод <xref:System.Security.Cryptography.ECDsaOpenSsl.GenerateKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="82900-170">To generate a new key on a specific curve, use the <xref:System.Security.Cryptography.ECDsaOpenSsl.GenerateKey%2A> method.</span></span>

]]></format>
        </remarks> 
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="82900-171"><paramref name="value" /> не разрешено в <see cref="P:System.Security.Cryptography.ECDsaOpenSsl.LegalKeySizes" />.</span><span class="sxs-lookup"><span data-stu-id="82900-171"><paramref name="value" /> is not permitted by <see cref="P:System.Security.Cryptography.ECDsaOpenSsl.LegalKeySizes" />.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.ECDsaOpenSsl.GenerateKey(System.Security.Cryptography.ECCurve)" />
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaOpenSsl.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.ECDsaOpenSsl.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82900-172">Возвращает размеры ключа (в битах), которые поддерживаются методом задания свойства <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" />.</span><span class="sxs-lookup"><span data-stu-id="82900-172">Gets the key sizes, in bits, that are supported by the <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" /> property setter.</span></span></summary>
        <value><span data-ttu-id="82900-173">Массив, содержащий размеры ключей, поддерживаемые методом задания свойств <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" />.</span><span class="sxs-lookup"><span data-stu-id="82900-173">An array that contains the key sizes supported by the <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" /> property setter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="82900-174">При шифровании на основе эллиптических кривых (ECC) размер ключа не является единственным входом в процесс создания ключа, он является производным от параметров кривой для конкретной эллиптической кривой.</span><span class="sxs-lookup"><span data-stu-id="82900-174">In Elliptic Curve Cryptography (ECC) the key size is not the only input into the key generation process, it is derived from the curve parameters for a specific elliptic curve.</span></span>
<span data-ttu-id="82900-175">Это свойство сообщает только три допустимых размера ключей: 256, 384 и 521 бит.</span><span class="sxs-lookup"><span data-stu-id="82900-175">This property reports only three legal key sizes: 256, 384, and 521 bits.</span></span>
<span data-ttu-id="82900-176">Если размер ключа используется отдельно в качестве основания для создания ключа, Поддерживаемые размеры сопоставляются с именованными кривыми secp256r1 (например NIST P-256), secp384r1 (то есть NIST P-384) и secp521r1 (то есть NIST P-521).</span><span class="sxs-lookup"><span data-stu-id="82900-176">When the key size is used alone as a basis for key generation, the supported sizes map to the named curves secp256r1 (aka NIST P-256), secp384r1 (aka NIST P-384), and secp521r1 (aka NIST P-521).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public override byte[] SignHash (byte[] hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignHash(unsigned int8[] hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.SignHash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignHash (hash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ hash);" />
      <MemberSignature Language="F#" Value="override this.SignHash : byte[] -&gt; byte[]" Usage="eCDsaOpenSsl.SignHash hash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="82900-177">Хэш-значение подписываемых данных.</span><span class="sxs-lookup"><span data-stu-id="82900-177">The hash value of the data that is being signed.</span></span></param>
        <summary><span data-ttu-id="82900-178">Создает цифровую подпись для указанного хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="82900-178">Generates a digital signature for the specified hash value.</span></span></summary>
        <returns><span data-ttu-id="82900-179">Цифровая подпись для указанного хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="82900-179">A digital signature for the specified hash value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82900-180">Параметр <paramref name="hash" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="82900-180">The <paramref name="hash" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (byte[] hash, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(unsigned int8[] hash, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.VerifyHash(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(cli::array &lt;System::Byte&gt; ^ hash, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyHash : byte[] * byte[] -&gt; bool" Usage="eCDsaOpenSsl.VerifyHash (hash, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="82900-181">Хэш-значение проверяемых данных.</span><span class="sxs-lookup"><span data-stu-id="82900-181">The hash value of the data to be verified.</span></span></param>
        <param name="signature"><span data-ttu-id="82900-182">Цифровая подпись данных, которую требуется проверить с использованием хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="82900-182">The digital signature of the data to be verified against the hash value.</span></span></param>
        <summary><span data-ttu-id="82900-183">Проверяет, подходит ли цифровая подпись для используемого ключа и заданного хэша данных.</span><span class="sxs-lookup"><span data-stu-id="82900-183">Verifies that a digital signature is appropriate for the current key and provided data hash.</span></span></summary>
        <returns><span data-ttu-id="82900-184">Значение <see langword="true" />, если подпись является допустимой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="82900-184"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82900-185">Значение параметра <paramref name="hash" /> или <paramref name="signature" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="82900-185"><paramref name="hash" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
