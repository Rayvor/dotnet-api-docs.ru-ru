<Type Name="DSA" FullName="System.Security.Cryptography.DSA">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ea6c526658cd5c1af5568c4e6bb2df94d93edbd" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70363860" /></Metadata><TypeSignature Language="C#" Value="public abstract class DSA : System.Security.Cryptography.AsymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DSA extends System.Security.Cryptography.AsymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DSA" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DSA&#xA;Inherits AsymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class DSA abstract : System::Security::Cryptography::AsymmetricAlgorithm" />
  <TypeSignature Language="F#" Value="type DSA = class&#xA;    inherit AsymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.AsymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8edc1-101">Представляет абстрактный базовый класс, от которого наследуются все реализации алгоритма <see cref="T:System.Security.Cryptography.DSA" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-101">Represents the abstract base class from which all implementations of the Digital Signature Algorithm (<see cref="T:System.Security.Cryptography.DSA" />) must inherit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edc1-102"><xref:System.Security.Cryptography.DSA> Класс и производные классы можно использовать для создания цифровых подписей, помогающих защитить целостность данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-102">You can use the <xref:System.Security.Cryptography.DSA> class and derived classes to create digital signatures that help protect the integrity of your data.</span></span>  <span data-ttu-id="8edc1-103"><xref:System.Security.Cryptography.DSACryptoServiceProvider> Предоставляет реализацию этого класса.</span><span class="sxs-lookup"><span data-stu-id="8edc1-103">The <xref:System.Security.Cryptography.DSACryptoServiceProvider> provides an implementation of this class.</span></span>  
  
 <span data-ttu-id="8edc1-104">Чтобы использовать систему с открытым ключом для цифровой подписи сообщения, отправитель сначала применяет к сообщению хэш-функцию для создания дайджеста сообщения.</span><span class="sxs-lookup"><span data-stu-id="8edc1-104">To use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</span></span> <span data-ttu-id="8edc1-105">Затем отправитель шифрует дайджест сообщения с помощью закрытого ключа отправителя для создания личной подписи отправителя.</span><span class="sxs-lookup"><span data-stu-id="8edc1-105">The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</span></span> <span data-ttu-id="8edc1-106">После получения сообщения и подписи получатель расшифровывает подпись с помощью открытого ключа отправителя для восстановления дайджеста сообщения и хэширует сообщение, используя тот же хэш-алгоритм, который использовал отправитель.</span><span class="sxs-lookup"><span data-stu-id="8edc1-106">Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</span></span> <span data-ttu-id="8edc1-107">Если дайджест сообщения, вычисленный получателем точно соответствует дайджесту сообщения, полученному от отправителя, получатель может предположить, что сообщение не было изменено во время передачи.</span><span class="sxs-lookup"><span data-stu-id="8edc1-107">If the message digest that the receiver computes exactly matches the message digest received from the sender, the receiver can assume that the message was not altered while in transit.</span></span> <span data-ttu-id="8edc1-108">Обратите внимание, что подпись может быть проверена любым пользователем, так как открытый ключ отправителя является общим набором знаний.</span><span class="sxs-lookup"><span data-stu-id="8edc1-108">Note that a signature can be verified by anyone, because the sender's public key is common knowledge.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="8edc1-109">Доступны более новые асимметричные алгоритмы.</span><span class="sxs-lookup"><span data-stu-id="8edc1-109">Newer asymmetric algorithms are available.</span></span> <span data-ttu-id="8edc1-110">Вместо <xref:System.Security.Cryptography.ECDsa> <xref:System.Security.Cryptography.RSA> класса<xref:System.Security.Cryptography.DSA> рекомендуется использовать класс или класс.</span><span class="sxs-lookup"><span data-stu-id="8edc1-110">Consider using the <xref:System.Security.Cryptography.RSA> class or the <xref:System.Security.Cryptography.ECDsa> class instead of the <xref:System.Security.Cryptography.DSA> class.</span></span> <span data-ttu-id="8edc1-111">Используйте <xref:System.Security.Cryptography.DSA> только для обеспечения совместимости с устаревшими приложениями и данными.</span><span class="sxs-lookup"><span data-stu-id="8edc1-111">Use <xref:System.Security.Cryptography.DSA> only for compatibility with legacy applications and data.</span></span>  
  
 <span data-ttu-id="8edc1-112">Существует две различные версии алгоритма DSA.</span><span class="sxs-lookup"><span data-stu-id="8edc1-112">Two different versions of the DSA algorithm exist.</span></span>
<span data-ttu-id="8edc1-113">Исходная форма, описанная в FIPS 186-2, требует использования SHA-1 в качестве хэш-алгоритма и поддерживает ключи длиной от 512 бит до 1024 бит с шагом в 64 бит.</span><span class="sxs-lookup"><span data-stu-id="8edc1-113">The original form, described in FIPS 186-2, requires the use of SHA-1 as the hash algorithm and supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</span></span>
<span data-ttu-id="8edc1-114">Обновленная версия алгоритма была описана в стандарте FIPS 186-3, который позволил использовать семейство алгоритмов хэширования SHA-2 и добавил поддержку 2048 разрядных ключей и 3072 разрядных ключей.</span><span class="sxs-lookup"><span data-stu-id="8edc1-114">An updated version of the algorithm was described in FIPS 186-3, which enabled the use of the SHA-2 family of hash algorithms and added support for 2048 bit keys and 3072 bit keys.</span></span>
<span data-ttu-id="8edc1-115">Не все производные реализации этого типа поддерживают усовершенствования FIPS 186-3 для DSA.</span><span class="sxs-lookup"><span data-stu-id="8edc1-115">Not all derived implementations of this type support the FIPS 186-3 enhancements to DSA.</span></span> <span data-ttu-id="8edc1-116">Поддержку можно обнаружить с <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes> помощью свойства.</span><span class="sxs-lookup"><span data-stu-id="8edc1-116">Support can be detected via the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes> property.</span></span>
 
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8edc1-117">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="8edc1-117">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DSA ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.#ctor" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DSA();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8edc1-118">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.DSA" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSA" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8edc1-119">Создает криптографический объект, используемый для выполнения алгоритма асимметричного шифрования.</span><span class="sxs-lookup"><span data-stu-id="8edc1-119">Creates a cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DSA Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DSA Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As DSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DSA ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.DSA" Usage="System.Security.Cryptography.DSA.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSA</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8edc1-120">Создает криптографический объект по умолчанию, используемый для выполнения алгоритма асимметричного шифрования.</span><span class="sxs-lookup"><span data-stu-id="8edc1-120">Creates the default cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="8edc1-121">Криптографический объект, используемый для выполнения алгоритма асимметричного шифрования.</span><span class="sxs-lookup"><span data-stu-id="8edc1-121">A cryptographic object used to perform the asymmetric algorithm.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8edc1-122">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="8edc1-122">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DSA Create (int keySizeInBits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DSA Create(int32 keySizeInBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (keySizeInBits As Integer) As DSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DSA ^ Create(int keySizeInBits);" />
      <MemberSignature Language="F#" Value="static member Create : int -&gt; System.Security.Cryptography.DSA" Usage="System.Security.Cryptography.DSA.Create keySizeInBits" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSA</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="8edc1-123">Размер ключа в битах.</span><span class="sxs-lookup"><span data-stu-id="8edc1-123">The key size, in bits.</span></span></param>
        <summary><span data-ttu-id="8edc1-124">Создает новый временный DSA-ключ с заданным размером ключа.</span><span class="sxs-lookup"><span data-stu-id="8edc1-124">Creates a new ephemeral DSA key with the specified key size.</span></span></summary>
        <returns><span data-ttu-id="8edc1-125">Создает новый временный DSA-ключ с заданным размером ключа.</span><span class="sxs-lookup"><span data-stu-id="8edc1-125">A new ephemeral DSA key with the specified key size.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-126"><paramref name="keySizeInBits" /> не разрешено в <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-126"><paramref name="keySizeInBits" /> is not permitted by <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DSA Create (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DSA Create(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.Create(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (parameters As DSAParameters) As DSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DSA ^ Create(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberSignature Language="F#" Value="static member Create : System.Security.Cryptography.DSAParameters -&gt; System.Security.Cryptography.DSA" Usage="System.Security.Cryptography.DSA.Create parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSA</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="8edc1-127">Параметры для алгоритма <see cref="T:System.Security.Cryptography.DSA" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-127">The parameters for the <see cref="T:System.Security.Cryptography.DSA" /> algorithm.</span></span></param>
        <summary><span data-ttu-id="8edc1-128">Создает новый временный DSA-ключ с заданными параметрами DSA-ключа.</span><span class="sxs-lookup"><span data-stu-id="8edc1-128">Creates a new ephemeral DSA key with the specified DSA key parameters.</span></span></summary>
        <returns><span data-ttu-id="8edc1-129">Новый временный DSA-ключ.</span><span class="sxs-lookup"><span data-stu-id="8edc1-129">A new ephemeral DSA key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DSA Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DSA Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As DSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DSA ^ Create(System::String ^ algName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.DSA" Usage="System.Security.Cryptography.DSA.Create algName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSA</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="8edc1-130">Имя конкретной реализации <see cref="T:System.Security.Cryptography.DSA" />, которую требуется использовать.</span><span class="sxs-lookup"><span data-stu-id="8edc1-130">The name of the specific implementation of <see cref="T:System.Security.Cryptography.DSA" /> to use.</span></span></param>
        <summary><span data-ttu-id="8edc1-131">Создает заданный криптографический объект, используемый для выполнения алгоритма асимметричного шифрования.</span><span class="sxs-lookup"><span data-stu-id="8edc1-131">Creates the specified cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="8edc1-132">Криптографический объект, используемый для выполнения алгоритма асимметричного шифрования.</span><span class="sxs-lookup"><span data-stu-id="8edc1-132">A cryptographic object used to perform the asymmetric algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edc1-133">Для <xref:System.Security.Cryptography.DSA>используйте имя System. Security. Cryptography. DSA.</span><span class="sxs-lookup"><span data-stu-id="8edc1-133">For <xref:System.Security.Cryptography.DSA>, use the name System.Security.Cryptography.DSA.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8edc1-134">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="8edc1-134">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public abstract byte[] CreateSignature (byte[] rgbHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] CreateSignature(unsigned int8[] rgbHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.CreateSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateSignature (rgbHash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ CreateSignature(cli::array &lt;System::Byte&gt; ^ rgbHash);" />
      <MemberSignature Language="F#" Value="abstract member CreateSignature : byte[] -&gt; byte[]" Usage="dSA.CreateSignature rgbHash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="8edc1-135">Данные, которые должны быть подписаны.</span><span class="sxs-lookup"><span data-stu-id="8edc1-135">The data to be signed.</span></span></param>
        <summary><span data-ttu-id="8edc1-136">При переопределении в производном классе создает подпись <see cref="T:System.Security.Cryptography.DSA" /> для указанных данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-136">When overridden in a derived class, creates the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span></span></summary>
        <returns><span data-ttu-id="8edc1-137">Цифровая подпись для указанных данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-137">The digital signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8edc1-138">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="8edc1-138">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Security.Cryptography.DSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ExportParameters (includePrivateParameters As Boolean) As DSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::DSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="abstract member ExportParameters : bool -&gt; System.Security.Cryptography.DSAParameters" Usage="dSA.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="8edc1-139">Значение <see langword="true" /> для включения закрытых параметров; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-139"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8edc1-140">Если переопределено в производном классе, экспортирует объект <see cref="T:System.Security.Cryptography.DSAParameters" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-140">When overridden in a derived class, exports the <see cref="T:System.Security.Cryptography.DSAParameters" />.</span></span></summary>
        <returns><span data-ttu-id="8edc1-141">Параметры для <see cref="T:System.Security.Cryptography.DSA" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-141">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8edc1-142">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="8edc1-142">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public override void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXmlString(System::String ^ xmlString);" />
      <MemberSignature Language="F#" Value="override this.FromXmlString : string -&gt; unit" Usage="dSA.FromXmlString xmlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="8edc1-143">XML-строка, используемая для восстановления объекта <see cref="T:System.Security.Cryptography.DSA" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-143">The XML string to use to reconstruct the <see cref="T:System.Security.Cryptography.DSA" /> object.</span></span></param>
        <summary><span data-ttu-id="8edc1-144">Восстанавливает объект <see cref="T:System.Security.Cryptography.DSA" /> из XML-строки.</span><span class="sxs-lookup"><span data-stu-id="8edc1-144">Reconstructs a <see cref="T:System.Security.Cryptography.DSA" /> object from an XML string.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8edc1-145">Параметр <paramref name="xmlString" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-145">The <paramref name="xmlString" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-146">Недопустимый формат параметра <paramref name="xmlString" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-146">The format of the <paramref name="xmlString" /> parameter is not valid.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8edc1-147">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="8edc1-147">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="HashData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8edc1-148">Вычисляет хэш-значение двоичных данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-148">Computes the hash value of binary data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected virtual byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]&#xA;override this.HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSA.HashData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="8edc1-149">Двоичный поток, хэширование которого требуется выполнить.</span><span class="sxs-lookup"><span data-stu-id="8edc1-149">The binary stream to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="8edc1-150">Алгоритм, который будет использоваться для хэширования данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-150">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="8edc1-151">При переопределении в производном классе вычисляет хэш-значение указанного двоичного потока с помощью заданного алгоритма хэширования.</span><span class="sxs-lookup"><span data-stu-id="8edc1-151">When overridden in a derived class, computes the hash value of a specified binary stream by using a specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="8edc1-152">Хэшированные данные.</span><span class="sxs-lookup"><span data-stu-id="8edc1-152">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="8edc1-153">Производный класс должен переопределять этот метод.</span><span class="sxs-lookup"><span data-stu-id="8edc1-153">A derived class must override this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected virtual byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]&#xA;override this.HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSA.HashData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="8edc1-154">Данные, предназначенные для хэширования.</span><span class="sxs-lookup"><span data-stu-id="8edc1-154">The data to be hashed.</span></span></param>
        <param name="offset"><span data-ttu-id="8edc1-155">Индекс первого байта в <paramref name="data" />, хэширование которого требуется выполнить.</span><span class="sxs-lookup"><span data-stu-id="8edc1-155">The index of the first byte in <paramref name="data" /> that is to be hashed.</span></span></param>
        <param name="count"><span data-ttu-id="8edc1-156">Количество байтов для хэширования.</span><span class="sxs-lookup"><span data-stu-id="8edc1-156">The number of bytes to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="8edc1-157">Алгоритм, который будет использоваться для хэширования данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-157">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="8edc1-158">При переопределении в производном классе вычисляет хэш-значение указанного фрагмента массива байтов с помощью заданного хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="8edc1-158">When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="8edc1-159">Хэшированные данные.</span><span class="sxs-lookup"><span data-stu-id="8edc1-159">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="8edc1-160">Производный класс должен переопределять этот метод.</span><span class="sxs-lookup"><span data-stu-id="8edc1-160">A derived class must override this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEncryptedPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public override void ImportEncryptedPkcs8PrivateKey (ReadOnlySpan&lt;byte&gt; passwordBytes, ReadOnlySpan&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportEncryptedPkcs8PrivateKey(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportEncryptedPkcs8PrivateKey (passwordBytes As ReadOnlySpan(Of Byte), source As ReadOnlySpan(Of Byte), ByRef bytesRead As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportEncryptedPkcs8PrivateKey(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="override this.ImportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * int -&gt; unit" Usage="dSA.ImportEncryptedPkcs8PrivateKey (passwordBytes, source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="8edc1-161">Байты, используемые в качестве пароля при расшифровке материала ключа.</span><span class="sxs-lookup"><span data-stu-id="8edc1-161">The bytes to use as a password when decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="8edc1-162">Байты структуры PKCS#8 EncryptedPrivateKeyInfo в кодировке ASN.1-BER.</span><span class="sxs-lookup"><span data-stu-id="8edc1-162">The bytes of a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="8edc1-163">При возврате метода содержит значение, которое показывает количество символов, считанных из <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-163">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="8edc1-164">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="8edc1-164">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="8edc1-165">Импортирует пару из открытого и закрытого ключей из структуры PKCS#8 EncryptedPrivateKeyInfo после расшифровки с помощью пароля на основе байтов, заменяя ключи для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="8edc1-165">Imports the public/private keypair from a PKCS#8 EncryptedPrivateKeyInfo structure after decrypting with a byte-based password, replacing the keys for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edc1-166">Байты паролей передаются непосредственно в функцию формирования ключа (ПОДПРОГРАММ), используемую алгоритмом, указанным в содержимом Енкриптедприватекэйинфо.</span><span class="sxs-lookup"><span data-stu-id="8edc1-166">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by the EncryptedPrivateKeyInfo contents.</span></span>
<span data-ttu-id="8edc1-167">Это обеспечивает совместимость с другими системами, использующими кодировку текста, отличную от UTF-8, при обработке паролей с помощью PBKDF2 (функция наследования ключа на основе пароля 2).</span><span class="sxs-lookup"><span data-stu-id="8edc1-167">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>
<span data-ttu-id="8edc1-168">Этот метод поддерживает только двоичную (ЛИЧЕСТВО/CER/DER) кодировку Енкриптедприватекэйинфо.</span><span class="sxs-lookup"><span data-stu-id="8edc1-168">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="8edc1-169">Если значение в кодировке Base64 или в текстовом формате PEM, вызывающий объект должен в Base64-декодировать содержимое перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="8edc1-169">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-170">Неправильный пароль.</span><span class="sxs-lookup"><span data-stu-id="8edc1-170">The password is incorrect.</span></span>

<span data-ttu-id="8edc1-171">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-171">-or-</span></span>

<span data-ttu-id="8edc1-172">Содержимое <paramref name="source" />, указывающее, что как функцию формирования ключа (KDF) следует использовать устаревшую версию PKCS#12 KDF, которая требует пароли на основе <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-172">The contents of <paramref name="source" /> indicate the Key Derivation Function (KDF) to apply is the legacy PKCS#12 KDF, which requires <see cref="T:System.Char" />-based passwords.</span></span>

<span data-ttu-id="8edc1-173">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-173">-or-</span></span>

<span data-ttu-id="8edc1-174">Содержимое <paramref name="source" /> не представляет структуру PKCS#8 EncryptedPrivateKeyInfo в кодировке ASN.1-BER.</span><span class="sxs-lookup"><span data-stu-id="8edc1-174">The contents of <paramref name="source" /> do not represent an ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo structure.</span></span>

<span data-ttu-id="8edc1-175">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-175">-or-</span></span>

<span data-ttu-id="8edc1-176">Содержимое <paramref name="source" /> указывает, что ключ относится к алгоритму, отличному от алгоритма, представленного этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="8edc1-176">The contents of <paramref name="source" /> indicate the key is for an algorithm other than the algorithm represented by this instance.</span></span>

<span data-ttu-id="8edc1-177">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-177">-or-</span></span>

<span data-ttu-id="8edc1-178">Содержимое <paramref name="source" /> представляет ключ в неподдерживаемом формате.</span><span class="sxs-lookup"><span data-stu-id="8edc1-178">The contents of <paramref name="source" /> represent the key in a format that is not supported.</span></span>

<span data-ttu-id="8edc1-179">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-179">-or-</span></span>

<span data-ttu-id="8edc1-180">Не удалось выполнить импорт ключа, зависящего от алгоритма.</span><span class="sxs-lookup"><span data-stu-id="8edc1-180">The algorithm-specific key import failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEncryptedPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public override void ImportEncryptedPkcs8PrivateKey (ReadOnlySpan&lt;char&gt; password, ReadOnlySpan&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportEncryptedPkcs8PrivateKey(valuetype System.ReadOnlySpan`1&lt;char&gt; password, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportEncryptedPkcs8PrivateKey (password As ReadOnlySpan(Of Char), source As ReadOnlySpan(Of Byte), ByRef bytesRead As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportEncryptedPkcs8PrivateKey(ReadOnlySpan&lt;char&gt; password, ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="override this.ImportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;byte&gt; * int -&gt; unit" Usage="dSA.ImportEncryptedPkcs8PrivateKey (password, source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="8edc1-181">Пароль, используемый при расшифровке материала ключа.</span><span class="sxs-lookup"><span data-stu-id="8edc1-181">The password to use for decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="8edc1-182">Байты структуры PKCS#8 EncryptedPrivateKeyInfo в кодировке ASN.1-BER.</span><span class="sxs-lookup"><span data-stu-id="8edc1-182">The bytes of a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="8edc1-183">При возврате метода содержит значение, которое показывает количество символов, считанных из <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-183">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="8edc1-184">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="8edc1-184">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="8edc1-185">Импортирует пару из открытого и закрытого ключей из структуры PKCS#8 EncryptedPrivateKeyInfo после расшифровки с помощью пароля на основе символов, заменяя ключи для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="8edc1-185">Imports the public/private keypair from a PKCS#8 EncryptedPrivateKeyInfo structure after decrypting with a char-based password, replacing the keys for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edc1-186">Если содержимое `source` указывает алгоритм, использующий PBKDF1 (функция формирования ключа на основе пароля 1) или PBKDF2 (функция формирования ключа на основе пароля 2), то пароль преобразуется в байты через кодировку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="8edc1-186">When the contents of `source` indicate an algorithm that uses PBKDF1 (Password-Based Key Derivation Function 1) or PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>
<span data-ttu-id="8edc1-187">Этот метод поддерживает только двоичную (ЛИЧЕСТВО/CER/DER) кодировку Енкриптедприватекэйинфо.</span><span class="sxs-lookup"><span data-stu-id="8edc1-187">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="8edc1-188">Если значение в кодировке Base64 или в текстовом формате PEM, вызывающий объект должен в Base64-декодировать содержимое перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="8edc1-188">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-189">Неправильный пароль.</span><span class="sxs-lookup"><span data-stu-id="8edc1-189">The password is incorrect.</span></span>

<span data-ttu-id="8edc1-190">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-190">-or-</span></span>

<span data-ttu-id="8edc1-191">Содержимое <paramref name="source" /> не представляет структуру PKCS#8 EncryptedPrivateKeyInfo в кодировке ASN.1-BER.</span><span class="sxs-lookup"><span data-stu-id="8edc1-191">The contents of <paramref name="source" /> do not represent an ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo structure.</span></span>

<span data-ttu-id="8edc1-192">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-192">-or-</span></span>

<span data-ttu-id="8edc1-193">Содержимое <paramref name="source" /> указывает, что ключ относится к алгоритму, отличному от алгоритма, представленного этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="8edc1-193">The contents of <paramref name="source" /> indicate the key is for an algorithm other than the algorithm represented by this instance.</span></span>

<span data-ttu-id="8edc1-194">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-194">-or-</span></span>

<span data-ttu-id="8edc1-195">Содержимое <paramref name="source" /> представляет ключ в неподдерживаемом формате.</span><span class="sxs-lookup"><span data-stu-id="8edc1-195">The contents of <paramref name="source" /> represent the key in a format that is not supported.</span></span>

<span data-ttu-id="8edc1-196">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-196">-or-</span></span>

<span data-ttu-id="8edc1-197">Не удалось выполнить импорт ключа, зависящего от алгоритма.</span><span class="sxs-lookup"><span data-stu-id="8edc1-197">The algorithm-specific key import failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public abstract void ImportParameters (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportParameters(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ImportParameters(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ImportParameters (parameters As DSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ImportParameters(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberSignature Language="F#" Value="abstract member ImportParameters : System.Security.Cryptography.DSAParameters -&gt; unit" Usage="dSA.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="8edc1-198">Параметры для <see cref="T:System.Security.Cryptography.DSA" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-198">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span></span></param>
        <summary><span data-ttu-id="8edc1-199">Если переопределено в производном классе, импортирует заданный объект <see cref="T:System.Security.Cryptography.DSAParameters" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-199">When overridden in a derived class, imports the specified <see cref="T:System.Security.Cryptography.DSAParameters" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8edc1-200">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="8edc1-200">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ImportPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public override void ImportPkcs8PrivateKey (ReadOnlySpan&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportPkcs8PrivateKey(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportPkcs8PrivateKey (source As ReadOnlySpan(Of Byte), ByRef bytesRead As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportPkcs8PrivateKey(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="override this.ImportPkcs8PrivateKey : ReadOnlySpan&lt;byte&gt; * int -&gt; unit" Usage="dSA.ImportPkcs8PrivateKey (source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8edc1-201">Байты структуры PKCS#8 PrivateKeyInfo в кодировке ASN.1-BER.</span><span class="sxs-lookup"><span data-stu-id="8edc1-201">The bytes of a PKCS#8 PrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="8edc1-202">При возврате метода содержит значение, которое показывает количество символов, считанных из <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-202">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="8edc1-203">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="8edc1-203">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="8edc1-204">Импортирует пару из открытого и закрытого ключей из структуры PKCS#8 PrivateKeyInfo после расшифровки, заменяя ключи для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="8edc1-204">Imports the public/private keypair from a PKCS#8 PrivateKeyInfo structure after decryption, replacing the keys for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edc1-205">Этот метод поддерживает только двоичную (ЛИЧЕСТВО/CER/DER) кодировку Приватекэйинфо.</span><span class="sxs-lookup"><span data-stu-id="8edc1-205">This method only supports the binary (BER/CER/DER) encoding of PrivateKeyInfo.</span></span>
<span data-ttu-id="8edc1-206">Если значение в кодировке Base64 или в текстовом формате PEM, вызывающий объект должен в Base64-декодировать содержимое перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="8edc1-206">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-207">Содержимое <paramref name="source" /> не представляет структуру PKCS#8 PrivateKeyInfo в кодировке ASN.1-BER.</span><span class="sxs-lookup"><span data-stu-id="8edc1-207">The contents of <paramref name="source" /> do not represent an ASN.1-BER-encoded PKCS#8 PrivateKeyInfo structure.</span></span>

<span data-ttu-id="8edc1-208">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-208">-or-</span></span>

<span data-ttu-id="8edc1-209">Содержимое <paramref name="source" /> указывает, что ключ относится к алгоритму, отличному от алгоритма, представленного этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="8edc1-209">The contents of <paramref name="source" /> indicate the key is for an algorithm other than the algorithm represented by this instance.</span></span>

<span data-ttu-id="8edc1-210">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-210">-or-</span></span>

<span data-ttu-id="8edc1-211">Содержимое <paramref name="source" /> представляет ключ в неподдерживаемом формате.</span><span class="sxs-lookup"><span data-stu-id="8edc1-211">The contents of <paramref name="source" /> represent the key in a format that is not supported.</span></span>

<span data-ttu-id="8edc1-212">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-212">-or-</span></span>

<span data-ttu-id="8edc1-213">Не удалось выполнить импорт ключа, зависящего от алгоритма.</span><span class="sxs-lookup"><span data-stu-id="8edc1-213">The algorithm-specific key import failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportSubjectPublicKeyInfo">
      <MemberSignature Language="C#" Value="public override void ImportSubjectPublicKeyInfo (ReadOnlySpan&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportSubjectPublicKeyInfo(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportSubjectPublicKeyInfo (source As ReadOnlySpan(Of Byte), ByRef bytesRead As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportSubjectPublicKeyInfo(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="override this.ImportSubjectPublicKeyInfo : ReadOnlySpan&lt;byte&gt; * int -&gt; unit" Usage="dSA.ImportSubjectPublicKeyInfo (source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8edc1-214">Байты структуры X.509 SubjectPublicKeyInfo в кодировке ASN.1-DER.</span><span class="sxs-lookup"><span data-stu-id="8edc1-214">The bytes of an X.509 SubjectPublicKeyInfo structure in the ASN.1-DER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="8edc1-215">При возврате метода содержит значение, которое показывает количество символов, считанных из <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-215">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="8edc1-216">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="8edc1-216">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="8edc1-217">Импортирует открытый ключ из структуры X.509 SubjectPublicKeyInfo после расшифровки, заменяя ключи для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="8edc1-217">Imports the public key from an X.509 SubjectPublicKeyInfo structure after decryption, replacing the keys for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edc1-218">Этот метод поддерживает только двоичное кодирование (DER) Субжектпубликкэйинфо.</span><span class="sxs-lookup"><span data-stu-id="8edc1-218">This method only supports the binary (DER) encoding of SubjectPublicKeyInfo.</span></span>
<span data-ttu-id="8edc1-219">Если значение в кодировке Base64 или в текстовом формате PEM, вызывающий объект должен в Base64-декодировать содержимое перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="8edc1-219">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-220">Содержимое <paramref name="source" /> не представляет структуру X.509 SubjectPublicKeyInfo в кодировке ASN.1-DER.</span><span class="sxs-lookup"><span data-stu-id="8edc1-220">The contents of <paramref name="source" /> do not represent an ASN.1-DER-encoded X.509 SubjectPublicKeyInfo structure.</span></span>

<span data-ttu-id="8edc1-221">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-221">-or-</span></span>

<span data-ttu-id="8edc1-222">Содержимое <paramref name="source" /> указывает, что ключ относится к алгоритму, отличному от алгоритма, представленного этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="8edc1-222">The contents of <paramref name="source" /> indicate the key is for an algorithm other than the algorithm represented by this instance.</span></span>

<span data-ttu-id="8edc1-223">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-223">-or-</span></span>

<span data-ttu-id="8edc1-224">Содержимое <paramref name="source" /> представляет ключ в неподдерживаемом формате.</span><span class="sxs-lookup"><span data-stu-id="8edc1-224">The contents of <paramref name="source" /> represent the key in a format that is not supported.</span></span>

<span data-ttu-id="8edc1-225">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-225">-or-</span></span>

<span data-ttu-id="8edc1-226">Не удалось выполнить импорт ключа, зависящего от алгоритма.</span><span class="sxs-lookup"><span data-stu-id="8edc1-226">The algorithm-specific key import failed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8edc1-227">Вычисляет хэш-значение указанных данных и подписывает его.</span><span class="sxs-lookup"><span data-stu-id="8edc1-227">Computes the hash value of the specified data and signs it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte(), hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="member this.SignData : byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSA.SignData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="8edc1-228">Входные данные, для которых нужно вычислить хэш.</span><span class="sxs-lookup"><span data-stu-id="8edc1-228">The input data for which to compute the hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="8edc1-229">Хэш-алгоритм, который следует использовать для создания хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="8edc1-229">The hash algorithm to use to create the hash value.</span></span></param>
        <summary><span data-ttu-id="8edc1-230">Вычисляет хэш-значение заданного массива байтов с помощью указанного алгоритма хэширования и подписывает результирующее хэш-значение.</span><span class="sxs-lookup"><span data-stu-id="8edc1-230">Computes the hash value of the specified byte array using the specified hash algorithm and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="8edc1-231">Подпись DSA для указанных данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-231">The DSA signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8edc1-232">Свойство <paramref name="data" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-232"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8edc1-233"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="8edc1-233"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="8edc1-234">имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-234">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public virtual byte[] SignData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member SignData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]&#xA;override this.SignData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSA.SignData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="8edc1-235">Входной поток, для которого нужно вычислить хэш.</span><span class="sxs-lookup"><span data-stu-id="8edc1-235">The input stream for which to compute the hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="8edc1-236">Хэш-алгоритм, который следует использовать для создания хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="8edc1-236">The hash algorithm to use to create the hash value.</span></span></param>
        <summary><span data-ttu-id="8edc1-237">Вычисляет хэш-значение заданного потока с помощью указанного алгоритма хэширования и подписывает результирующее хэш-значение.</span><span class="sxs-lookup"><span data-stu-id="8edc1-237">Computes the hash value of the specified stream using the specified hash algorithm and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="8edc1-238">Подпись DSA для указанных данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-238">The DSA signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8edc1-239">Свойство <paramref name="data" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-239"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8edc1-240"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="8edc1-240"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="8edc1-241">имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-241">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public virtual byte[] SignData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member SignData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]&#xA;override this.SignData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSA.SignData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="8edc1-242">Входные данные, для которых нужно вычислить хэш.</span><span class="sxs-lookup"><span data-stu-id="8edc1-242">The input data for which to compute the hash.</span></span></param>
        <param name="offset"><span data-ttu-id="8edc1-243">Смещение в массиве, начиная с которого следует использовать данные.</span><span class="sxs-lookup"><span data-stu-id="8edc1-243">The offset into the array at which to begin using data.</span></span></param>
        <param name="count"><span data-ttu-id="8edc1-244">Число байтов в массиве для использования в качестве данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-244">The number of bytes in the array to use as data.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="8edc1-245">Хэш-алгоритм, который следует использовать для создания хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="8edc1-245">The hash algorithm to use to create the hash value.</span></span></param>
        <summary><span data-ttu-id="8edc1-246">Вычисляет хэш-значение фрагмента заданного массива байтов с помощью указанного алгоритма хэширования и подписывает результирующее хэш-значение.</span><span class="sxs-lookup"><span data-stu-id="8edc1-246">Computes the hash value of a portion of the specified byte array using the specified hash algorithm and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="8edc1-247">Подпись DSA для указанных данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-247">The DSA signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8edc1-248"><paramref name="data" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-248"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8edc1-249"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="8edc1-249"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="8edc1-250">имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-250">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8edc1-251">Значение параметра <paramref name="offset" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="8edc1-251"><paramref name="offset" /> is less than zero.</span></span>  
  
<span data-ttu-id="8edc1-252">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-252">-or-</span></span> 
 <span data-ttu-id="8edc1-253">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="8edc1-253"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="8edc1-254">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-254">-or-</span></span> 
 <span data-ttu-id="8edc1-255"><paramref name="offset" /> + <paramref name="count" /> — 1 приводит к получению значения индекса, который выходит за пределы верхней границы <paramref name="data" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-255"><paramref name="offset" /> + <paramref name="count" /> - 1 results in an index that is beyond the upper bound of <paramref name="data" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public override string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ToXmlString : bool -&gt; string" Usage="dSA.ToXmlString includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="8edc1-256">Значение <see langword="true" /> для включения закрытых параметров; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-256"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8edc1-257">Создает и возвращает XML-представление текущего объекта <see cref="T:System.Security.Cryptography.DSA" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-257">Creates and returns an XML string representation of the current <see cref="T:System.Security.Cryptography.DSA" /> object.</span></span></summary>
        <returns><span data-ttu-id="8edc1-258">Кодировка XML-строки текущего объекта <see cref="T:System.Security.Cryptography.DSA" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-258">An XML string encoding of the current <see cref="T:System.Security.Cryptography.DSA" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8edc1-259">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="8edc1-259">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryCreateSignature">
      <MemberSignature Language="C#" Value="public virtual bool TryCreateSignature (ReadOnlySpan&lt;byte&gt; hash, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateSignature(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; hash, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TryCreateSignature(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryCreateSignature (hash As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryCreateSignature(ReadOnlySpan&lt;System::Byte&gt; hash, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryCreateSignature : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; bool&#xA;override this.TryCreateSignature : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; bool" Usage="dSA.TryCreateSignature (hash, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="8edc1-260">Подписываемый хэш.</span><span class="sxs-lookup"><span data-stu-id="8edc1-260">The hash to sign.</span></span></param>
        <param name="destination"><span data-ttu-id="8edc1-261">Диапазон байтов для получения подписи.</span><span class="sxs-lookup"><span data-stu-id="8edc1-261">The byte span to receive the signature.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="8edc1-262">При возврате метода содержит значение, которое показывает количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-262">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="8edc1-263">Пытается создать подпись DSA для указанного хэша в предоставленном буфере.</span><span class="sxs-lookup"><span data-stu-id="8edc1-263">Attempts to create the DSA signature for the specified hash into the provided buffer.</span></span></summary>
        <returns><span data-ttu-id="8edc1-264">Значение <see langword="true" />, если <paramref name="destination" /> достаточно большой для получения результата; в противном случае — значение<see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-264"><see langword="true" /> if <paramref name="destination" /> is large enough to receive the result; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edc1-265">Реализация по умолчанию этого метода заключается в вызове <xref:System.Security.Cryptography.DSA.CreateSignature(System.Byte[])> и копировании результата в. `destination`</span><span class="sxs-lookup"><span data-stu-id="8edc1-265">The default implementation of this method is to call <xref:System.Security.Cryptography.DSA.CreateSignature(System.Byte[])> and copy the result to `destination`.</span></span>
<span data-ttu-id="8edc1-266">Производные типы должны переопределять этот метод, чтобы избежать создания промежуточного массива.</span><span class="sxs-lookup"><span data-stu-id="8edc1-266">Derived types should override this method to avoid the intermediate array creation.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-267">Этот экземпляр представляет только открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="8edc1-267">This instance represents only a public key.</span></span>

<span data-ttu-id="8edc1-268">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-268">-or-</span></span>

<span data-ttu-id="8edc1-269">Тип реализации поддерживает только устаревший DSA (FIPS 186-2) и <paramref name="hash" /> не является 20-байтовым значением.</span><span class="sxs-lookup"><span data-stu-id="8edc1-269">The implementation type only supports legacy DSA (FIPS 186-2), and <paramref name="hash" /> is not a 20-byte value.</span></span>

<span data-ttu-id="8edc1-270">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-270">-or-</span></span>

<span data-ttu-id="8edc1-271">Не удалось создать подпись по другим причинам.</span><span class="sxs-lookup"><span data-stu-id="8edc1-271">Creating the signature otherwise failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryExportEncryptedPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public override bool TryExportEncryptedPkcs8PrivateKey (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryExportEncryptedPkcs8PrivateKey(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryExportEncryptedPkcs8PrivateKey(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryExportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; * int -&gt; bool" Usage="dSA.TryExportEncryptedPkcs8PrivateKey (passwordBytes, pbeParameters, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="8edc1-272">Байты, используемые в качестве пароля при шифровании материала ключа.</span><span class="sxs-lookup"><span data-stu-id="8edc1-272">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="8edc1-273">Параметры шифрования на основе пароля (PBE), используемые при шифровании материала ключа.</span><span class="sxs-lookup"><span data-stu-id="8edc1-273">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="8edc1-274">Диапазон байтов для получения данных PKCS#8 EncryptedPrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="8edc1-274">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="8edc1-275">При возврате метода содержит значение, которое показывает количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-275">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="8edc1-276">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="8edc1-276">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="8edc1-277">Пытается экспортировать текущий ключ в формате PKCS#8 EncryptedPrivateKeyInfo в предоставленный буфер с использованием пароля на основе байтов.</span><span class="sxs-lookup"><span data-stu-id="8edc1-277">Attempts to export the current key in the PKCS#8 EncryptedPrivateKeyInfo format into a provided buffer, using a byte-based password.</span></span></summary>
        <returns><span data-ttu-id="8edc1-278"><see langword="true" />, если размер <paramref name="destination" /> достаточно велик, чтобы вместить выходные данные; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-278"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edc1-279">Байты паролей передаются непосредственно в функцию формирования ключа (ПОДПРОГРАММ), используемую алгоритмом, `pbeParameters`указанным.</span><span class="sxs-lookup"><span data-stu-id="8edc1-279">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="8edc1-280">Это обеспечивает совместимость с другими системами, использующими кодировку текста, отличную от UTF-8, при обработке паролей с помощью PBKDF2 (функция наследования ключа на основе пароля 2).</span><span class="sxs-lookup"><span data-stu-id="8edc1-280">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-281">Не удалось экспортировать ключ.</span><span class="sxs-lookup"><span data-stu-id="8edc1-281">The key could not be exported.</span></span>

<span data-ttu-id="8edc1-282">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-282">-or-</span></span>

<span data-ttu-id="8edc1-283"><paramref name="pbeParameters" /> указывает, что следует использовать <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />: это требует паролей на основе <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-283"><paramref name="pbeParameters" /> indicates that <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> should be used, which requires <see cref="T:System.Char" />-based passwords.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="TryExportEncryptedPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public override bool TryExportEncryptedPkcs8PrivateKey (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryExportEncryptedPkcs8PrivateKey(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryExportEncryptedPkcs8PrivateKey(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryExportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; * int -&gt; bool" Usage="dSA.TryExportEncryptedPkcs8PrivateKey (password, pbeParameters, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="8edc1-284">Пароль, используемый при шифровании материала ключа.</span><span class="sxs-lookup"><span data-stu-id="8edc1-284">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="8edc1-285">Параметры шифрования на основе пароля (PBE), используемые при шифровании материала ключа.</span><span class="sxs-lookup"><span data-stu-id="8edc1-285">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="8edc1-286">Диапазон байтов для получения данных PKCS#8 EncryptedPrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="8edc1-286">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="8edc1-287">При возврате метода содержит значение, которое показывает количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-287">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="8edc1-288">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="8edc1-288">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="8edc1-289">Пытается экспортировать текущий ключ в формате PKCS#8 EncryptedPrivateKeyInfo в предоставленный буфер с использованием пароля на основе символов.</span><span class="sxs-lookup"><span data-stu-id="8edc1-289">Attempts to export the current key in the PKCS#8 EncryptedPrivateKeyInfo format into a provided buffer, using a char-based password.</span></span></summary>
        <returns><span data-ttu-id="8edc1-290"><see langword="true" />, если размер <paramref name="destination" /> достаточно велик, чтобы вместить выходные данные; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-290"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edc1-291">Когда `pbeParameters` указывает алгоритм, использующий PBKDF2 (функция формирования ключа на основе пароля 2), пароль преобразуется в байты через кодировку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="8edc1-291">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-292">Не удалось экспортировать ключ.</span><span class="sxs-lookup"><span data-stu-id="8edc1-292">The key could not be exported.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="TryExportPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public override bool TryExportPkcs8PrivateKey (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryExportPkcs8PrivateKey(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryExportPkcs8PrivateKey (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryExportPkcs8PrivateKey(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryExportPkcs8PrivateKey : Span&lt;byte&gt; * int -&gt; bool" Usage="dSA.TryExportPkcs8PrivateKey (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="8edc1-293">Диапазон байтов для получения данных PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="8edc1-293">The byte span to receive the PKCS#8 PrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="8edc1-294">При возврате метода содержит значение, которое показывает количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-294">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="8edc1-295">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="8edc1-295">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="8edc1-296">Пытается экспортировать текущий ключ в формате PKCS#8 PrivateKeyInfo в предоставленный буфер.</span><span class="sxs-lookup"><span data-stu-id="8edc1-296">Attempts to export the current key in the PKCS#8 PrivateKeyInfo format into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="8edc1-297"><see langword="true" />, если размер <paramref name="destination" /> достаточно велик, чтобы вместить выходные данные; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-297"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-298">Не удалось экспортировать ключ.</span><span class="sxs-lookup"><span data-stu-id="8edc1-298">The key could not be exported.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ExportPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="TryExportSubjectPublicKeyInfo">
      <MemberSignature Language="C#" Value="public override bool TryExportSubjectPublicKeyInfo (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryExportSubjectPublicKeyInfo(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryExportSubjectPublicKeyInfo (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryExportSubjectPublicKeyInfo(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryExportSubjectPublicKeyInfo : Span&lt;byte&gt; * int -&gt; bool" Usage="dSA.TryExportSubjectPublicKeyInfo (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="8edc1-299">Диапазон байтов для получения данных X.509 SubjectPublicKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="8edc1-299">The byte span to receive the X.509 SubjectPublicKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="8edc1-300">При возврате метода содержит значение, которое показывает количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-300">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="8edc1-301">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="8edc1-301">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="8edc1-302">Пытается экспортировать текущий ключ в формате X.509 SubjectPublicKeyInfo в предоставленный буфер.</span><span class="sxs-lookup"><span data-stu-id="8edc1-302">Attempts to export the current key in the X.509 SubjectPublicKeyInfo format into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="8edc1-303"><see langword="true" />, если размер <paramref name="destination" /> достаточно велик, чтобы вместить выходные данные; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-303"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-304">Не удалось экспортировать ключ.</span><span class="sxs-lookup"><span data-stu-id="8edc1-304">The key could not be exported.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ExportSubjectPublicKeyInfo" />
      </Docs>
    </Member>
    <Member MemberName="TryHashData">
      <MemberSignature Language="C#" Value="protected virtual bool TryHashData (ReadOnlySpan&lt;byte&gt; data, Span&lt;byte&gt; destination, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryHashData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data, valuetype System.Span`1&lt;unsigned int8&gt; destination, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TryHashData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryHashData (data As ReadOnlySpan(Of Byte), destination As Span(Of Byte), hashAlgorithm As HashAlgorithmName, ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryHashData(ReadOnlySpan&lt;System::Byte&gt; data, Span&lt;System::Byte&gt; destination, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryHashData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; bool&#xA;override this.TryHashData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; bool" Usage="dSA.TryHashData (data, destination, hashAlgorithm, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="8edc1-305">Данные, предназначенные для хэширования.</span><span class="sxs-lookup"><span data-stu-id="8edc1-305">The data to be hashed.</span></span></param>
        <param name="destination"><span data-ttu-id="8edc1-306">Диапазон байтов для получения хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="8edc1-306">The byte span to receive the hash value.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="8edc1-307">Имя алгоритма хэширования для использования.</span><span class="sxs-lookup"><span data-stu-id="8edc1-307">The name of the hash algorithm to use.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="8edc1-308">При возврате метода содержит значение, которое показывает количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-308">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="8edc1-309">Пытается вычислить хэш-значение предоставленных данных в предоставленный буфер.</span><span class="sxs-lookup"><span data-stu-id="8edc1-309">Attempts to compute the hash value of the provided data into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="8edc1-310">Значение <see langword="true" />, если <paramref name="destination" /> достаточно большой для получения результата; в противном случае — значение<see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-310"><see langword="true" /> if <paramref name="destination" /> is large enough to receive the result; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edc1-311">Реализация по умолчанию этого метода заключается в вызове <xref:System.Security.Cryptography.DSA.HashData(System.Byte[], System.Int32, System.Int32, System.Security.Cryptography.HashAlgorithmName)> и копировании результата в. `destination`</span><span class="sxs-lookup"><span data-stu-id="8edc1-311">The default implementation of this method is to call <xref:System.Security.Cryptography.DSA.HashData(System.Byte[], System.Int32, System.Int32, System.Security.Cryptography.HashAlgorithmName)> and copy the result to `destination`.</span></span>
<span data-ttu-id="8edc1-312">Производные типы должны переопределять этот метод, чтобы избежать создания промежуточного массива.</span><span class="sxs-lookup"><span data-stu-id="8edc1-312">Derived types should override this method to avoid the intermediate array creation.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySignData">
      <MemberSignature Language="C#" Value="public virtual bool TrySignData (ReadOnlySpan&lt;byte&gt; data, Span&lt;byte&gt; destination, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TrySignData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data, valuetype System.Span`1&lt;unsigned int8&gt; destination, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TrySignData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TrySignData (data As ReadOnlySpan(Of Byte), destination As Span(Of Byte), hashAlgorithm As HashAlgorithmName, ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TrySignData(ReadOnlySpan&lt;System::Byte&gt; data, Span&lt;System::Byte&gt; destination, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TrySignData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; bool&#xA;override this.TrySignData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; bool" Usage="dSA.TrySignData (data, destination, hashAlgorithm, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="8edc1-313">Данные для хэширования и подписи.</span><span class="sxs-lookup"><span data-stu-id="8edc1-313">The data to hash and sign.</span></span></param>
        <param name="destination"><span data-ttu-id="8edc1-314">Диапазон байтов для получения подписи.</span><span class="sxs-lookup"><span data-stu-id="8edc1-314">The byte span to receive the signature.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="8edc1-315">Имя алгоритма хэширования для использования.</span><span class="sxs-lookup"><span data-stu-id="8edc1-315">The name of the hash algorithm to use.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="8edc1-316">При возврате метода содержит значение, которое показывает количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-316">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="8edc1-317">Пытается создать подпись DSA для указанных данных в предоставленном буфере.</span><span class="sxs-lookup"><span data-stu-id="8edc1-317">Attempts to create the DSA signature for the specified data into the provided buffer.</span></span></summary>
        <returns><span data-ttu-id="8edc1-318">Значение <see langword="true" />, если <paramref name="destination" /> достаточно большой для получения результата; в противном случае — значение<see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-318"><see langword="true" /> if <paramref name="destination" /> is large enough to receive the result; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8edc1-319">Проверяет допустимость цифровой подписи.</span><span class="sxs-lookup"><span data-stu-id="8edc1-319">Verifies that a digital signature is valid.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, unsigned int8[] signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), signature As Byte(), hashAlgorithm As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, cli::array &lt;System::Byte&gt; ^ signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="member this.VerifyData : byte[] * byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; bool" Usage="dSA.VerifyData (data, signature, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="signature" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="8edc1-320">Подписанные данные.</span><span class="sxs-lookup"><span data-stu-id="8edc1-320">The signed data.</span></span></param>
        <param name="signature"><span data-ttu-id="8edc1-321">Данные подписи, которые требуется поверить.</span><span class="sxs-lookup"><span data-stu-id="8edc1-321">The signature data to be verified.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="8edc1-322">Алгоритм хэширования, используемый для создания хэш-значения данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-322">The hash algorithm used to create the hash value of the data.</span></span></param>
        <summary><span data-ttu-id="8edc1-323">Проверяет допустимость цифровой подписи путем вычисления хэш-значения заданных данных с помощью указанного алгоритма хэширования и его сравнения с предоставленной подписью.</span><span class="sxs-lookup"><span data-stu-id="8edc1-323">Verifies that a digital signature is valid by calculating the hash value of the specified data using the specified hash algorithm and comparing it to the provided signature.</span></span></summary>
        <returns><span data-ttu-id="8edc1-324">Значение <see langword="true" />, если цифровая подпись является допустимой. В противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-324"><see langword="true" /> if the digital signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8edc1-325">Свойство <paramref name="data" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-325"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8edc1-326">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-326">-or-</span></span> 
 <span data-ttu-id="8edc1-327"><paramref name="signature" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-327"><paramref name="signature" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-328">Тип реализации поддерживает только устаревший DSA (FIPS 186-2), а хэш-алгоритм не является SHA-1.</span><span class="sxs-lookup"><span data-stu-id="8edc1-328">The implementation type only supports legacy DSA (FIPS 186-2), and the hash algorithm is not SHA-1.</span></span>

<span data-ttu-id="8edc1-329">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-329">-or-</span></span>

<span data-ttu-id="8edc1-330">Не удалось проверить подпись по другим причинам.</span><span class="sxs-lookup"><span data-stu-id="8edc1-330">Verifying the signature otherwise failed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8edc1-331"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="8edc1-331"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="8edc1-332">имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-332">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual bool VerifyData (System.IO.Stream data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyData(class System.IO.Stream data, unsigned int8[] signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyData (data As Stream, signature As Byte(), hashAlgorithm As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyData(System::IO::Stream ^ data, cli::array &lt;System::Byte&gt; ^ signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member VerifyData : System.IO.Stream * byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; bool&#xA;override this.VerifyData : System.IO.Stream * byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; bool" Usage="dSA.VerifyData (data, signature, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="signature" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="8edc1-333">Подписанные данные.</span><span class="sxs-lookup"><span data-stu-id="8edc1-333">The signed data.</span></span></param>
        <param name="signature"><span data-ttu-id="8edc1-334">Данные подписи, которые требуется поверить.</span><span class="sxs-lookup"><span data-stu-id="8edc1-334">The signature data to be verified.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="8edc1-335">Алгоритм хэширования, используемый для создания хэш-значения данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-335">The hash algorithm used to create the hash value of the data.</span></span></param>
        <summary><span data-ttu-id="8edc1-336">Проверяет допустимость цифровой подписи путем вычисления хэш-значения заданного потока с помощью указанного алгоритма хэширования и его сравнения с предоставленной подписью.</span><span class="sxs-lookup"><span data-stu-id="8edc1-336">Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and comparing it to the provided signature.</span></span></summary>
        <returns><span data-ttu-id="8edc1-337">Значение <see langword="true" />, если цифровая подпись является допустимой. В противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-337"><see langword="true" /> if the digital signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8edc1-338">Свойство <paramref name="data" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-338"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8edc1-339">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-339">-or-</span></span> 
 <span data-ttu-id="8edc1-340"><paramref name="signature" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-340"><paramref name="signature" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8edc1-341"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="8edc1-341"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="8edc1-342">имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-342">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-343">Тип реализации поддерживает только устаревший DSA (FIPS 186-2), а хэш-алгоритм не является SHA-1.</span><span class="sxs-lookup"><span data-stu-id="8edc1-343">The implementation type only supports legacy DSA (FIPS 186-2), and the hash algorithm is not SHA-1.</span></span>

<span data-ttu-id="8edc1-344">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-344">-or-</span></span>

<span data-ttu-id="8edc1-345">Не удалось проверить подпись по другим причинам.</span><span class="sxs-lookup"><span data-stu-id="8edc1-345">Verifying the signature otherwise failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual bool VerifyData (ReadOnlySpan&lt;byte&gt; data, ReadOnlySpan&lt;byte&gt; signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifyData(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyData (data As ReadOnlySpan(Of Byte), signature As ReadOnlySpan(Of Byte), hashAlgorithm As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyData(ReadOnlySpan&lt;System::Byte&gt; data, ReadOnlySpan&lt;System::Byte&gt; signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member VerifyData : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName -&gt; bool&#xA;override this.VerifyData : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName -&gt; bool" Usage="dSA.VerifyData (data, signature, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="signature" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="8edc1-346">Подписанные данные.</span><span class="sxs-lookup"><span data-stu-id="8edc1-346">The signed data.</span></span></param>
        <param name="signature"><span data-ttu-id="8edc1-347">Подпись, подлежащая проверке.</span><span class="sxs-lookup"><span data-stu-id="8edc1-347">The signature to be verified.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="8edc1-348">Алгоритм хэширования, используемый для создания хэш-значения данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-348">The hash algorithm used to create the hash value of the data.</span></span></param>
        <summary><span data-ttu-id="8edc1-349">Проверяет допустимость цифровой подписи путем вычисления хэш-значения данных в диапазоне байтов с помощью указанного хэш-алгоритма и его сравнения с предоставленной подписью.</span><span class="sxs-lookup"><span data-stu-id="8edc1-349">Verifies that a digital signature is valid by calculating the hash value of the data in a byte span using the specified hash algorithm and comparing it to the provided signature.</span></span></summary>
        <returns><span data-ttu-id="8edc1-350">Значение <see langword="true" />, если цифровая подпись является допустимой. В противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-350"><see langword="true" /> if the digital signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8edc1-351"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="8edc1-351"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="8edc1-352">имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-352">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-353">Тип реализации поддерживает только устаревший DSA (FIPS 186-2), а хэш-алгоритм не является SHA-1.</span><span class="sxs-lookup"><span data-stu-id="8edc1-353">The implementation type only supports legacy DSA (FIPS 186-2), and the hash algorithm is not SHA-1.</span></span>

<span data-ttu-id="8edc1-354">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-354">-or-</span></span>

<span data-ttu-id="8edc1-355">Не удалось проверить подпись по другим причинам.</span><span class="sxs-lookup"><span data-stu-id="8edc1-355">Verifying the signature otherwise failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual bool VerifyData (byte[] data, int offset, int count, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyData(unsigned int8[] data, int32 offset, int32 count, unsigned int8[] signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyData (data As Byte(), offset As Integer, count As Integer, signature As Byte(), hashAlgorithm As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, cli::array &lt;System::Byte&gt; ^ signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member VerifyData : byte[] * int * int * byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; bool&#xA;override this.VerifyData : byte[] * int * int * byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; bool" Usage="dSA.VerifyData (data, offset, count, signature, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="signature" Type="System.Byte[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="8edc1-356">Подписанные данные.</span><span class="sxs-lookup"><span data-stu-id="8edc1-356">The signed data.</span></span></param>
        <param name="offset"><span data-ttu-id="8edc1-357">Индекс, начиная с которого нужно вычислять хэш.</span><span class="sxs-lookup"><span data-stu-id="8edc1-357">The starting index at which to compute the hash.</span></span></param>
        <param name="count"><span data-ttu-id="8edc1-358">Количество байтов, хэширование которых необходимо выполнить.</span><span class="sxs-lookup"><span data-stu-id="8edc1-358">The number of bytes to hash.</span></span></param>
        <param name="signature"><span data-ttu-id="8edc1-359">Данные подписи, которые требуется поверить.</span><span class="sxs-lookup"><span data-stu-id="8edc1-359">The signature data to be verified.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="8edc1-360">Алгоритм хэширования, используемый для создания хэш-значения данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-360">The hash algorithm used to create the hash value of the data.</span></span></param>
        <summary><span data-ttu-id="8edc1-361">Проверяет допустимость цифровой подписи путем вычисления хэш-значения данных во фрагменте массива байтов с помощью указанного алгоритма хэширования и его сравнения с предоставленной подписью.</span><span class="sxs-lookup"><span data-stu-id="8edc1-361">Verifies that a digital signature is valid by calculating the hash value of the data in a portion of a byte array using the specified hash algorithm and comparing it to the provided signature.</span></span></summary>
        <returns><span data-ttu-id="8edc1-362">Значение <see langword="true" />, если цифровая подпись является допустимой. В противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-362"><see langword="true" /> if the digital signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8edc1-363">Свойство <paramref name="data" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-363"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8edc1-364">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-364">-or-</span></span> 
 <span data-ttu-id="8edc1-365">Свойство <paramref name="signature" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-365"><paramref name="signature" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8edc1-366"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="8edc1-366"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="8edc1-367">имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-367">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8edc1-368">Значение параметра <paramref name="offset" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="8edc1-368"><paramref name="offset" /> is less than zero.</span></span>  
  
<span data-ttu-id="8edc1-369">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-369">-or-</span></span> 
 <span data-ttu-id="8edc1-370">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="8edc1-370"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="8edc1-371">-или-</span><span class="sxs-lookup"><span data-stu-id="8edc1-371">-or-</span></span> 
 <span data-ttu-id="8edc1-372"><paramref name="offset" /> + <paramref name="count" /> — 1 приводит к получению значения индекса, который выходит за пределы верхней границы <paramref name="data" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-372"><paramref name="offset" /> + <paramref name="count" /> - 1 results in an index that is beyond the upper bound of <paramref name="data" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-373">Тип реализации поддерживает только устаревший DSA (FIPS 186-2), а хэш-алгоритм не является SHA-1.</span><span class="sxs-lookup"><span data-stu-id="8edc1-373">The implementation type only supports legacy DSA (FIPS 186-2), and the hash algorithm is not SHA-1.</span></span>

<span data-ttu-id="8edc1-374">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-374">-or-</span></span>

<span data-ttu-id="8edc1-375">Не удалось проверить подпись по другим причинам.</span><span class="sxs-lookup"><span data-stu-id="8edc1-375">Verifying the signature otherwise failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public abstract bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="abstract member VerifySignature : byte[] * byte[] -&gt; bool" Usage="dSA.VerifySignature (rgbHash, rgbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="8edc1-376">Хэш данных, подписанных с помощью <paramref name="rgbSignature" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-376">The hash of the data signed with <paramref name="rgbSignature" />.</span></span></param>
        <param name="rgbSignature"><span data-ttu-id="8edc1-377">Подпись, которую требуется проверить для <c>rgbData</c>.</span><span class="sxs-lookup"><span data-stu-id="8edc1-377">The signature to be verified for <c>rgbData</c>.</span></span></param>
        <summary><span data-ttu-id="8edc1-378">При переопределении в производном классе проверяет подпись <see cref="T:System.Security.Cryptography.DSA" /> для указанных данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-378">When overridden in a derived class, verifies the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span></span></summary>
        <returns><span data-ttu-id="8edc1-379">Значение <see langword="true" />, если <paramref name="rgbSignature" /> совпадает с подписью, вычисленной для <paramref name="rgbHash" /> с использованием заданного хэш-алгоритма и ключа; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-379"><see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified hash algorithm and key on <paramref name="rgbHash" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-380">Тип реализации поддерживает только устаревший DSA (FIPS 186-2), а хэш-значение не является 20-байтовым.</span><span class="sxs-lookup"><span data-stu-id="8edc1-380">The implementation type only supports legacy DSA (FIPS 186-2), and the hash value is not 20 bytes long.</span></span>

<span data-ttu-id="8edc1-381">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-381">-or-</span></span>

<span data-ttu-id="8edc1-382">Не удалось проверить подпись по другим причинам.</span><span class="sxs-lookup"><span data-stu-id="8edc1-382">Verifying the signature otherwise failed.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="8edc1-383">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="8edc1-383">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public virtual bool VerifySignature (ReadOnlySpan&lt;byte&gt; hash, ReadOnlySpan&lt;byte&gt; signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifySignature(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; hash, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifySignature(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifySignature (hash As ReadOnlySpan(Of Byte), signature As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifySignature(ReadOnlySpan&lt;System::Byte&gt; hash, ReadOnlySpan&lt;System::Byte&gt; signature);" />
      <MemberSignature Language="F#" Value="abstract member VerifySignature : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; bool&#xA;override this.VerifySignature : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="dSA.VerifySignature (hash, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="signature" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="8edc1-384">Проверяемый хэш данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-384">The data hash to verify.</span></span></param>
        <param name="signature"><span data-ttu-id="8edc1-385">Подпись для проверки.</span><span class="sxs-lookup"><span data-stu-id="8edc1-385">The signature to be verify.</span></span></param>
        <summary><span data-ttu-id="8edc1-386">Проверяет допустимость цифровой подписи для предоставленного хэша данных.</span><span class="sxs-lookup"><span data-stu-id="8edc1-386">Verifies that a digital signature is valid for a provided data hash.</span></span></summary>
        <returns><span data-ttu-id="8edc1-387">Значение <see langword="true" />, если цифровая подпись хэша верна; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8edc1-387"><see langword="true" /> if the digital signature is valid for the hash; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edc1-388">Реализация по умолчанию этого метода вызывается <xref:System.Security.Cryptography.DSA.VerifySignature(System.Byte[], System.Byte[])> после копирования диапазонов в массивы.</span><span class="sxs-lookup"><span data-stu-id="8edc1-388">The default implementation of this method calls <xref:System.Security.Cryptography.DSA.VerifySignature(System.Byte[], System.Byte[])> after copying the spans to arrays.</span></span>
<span data-ttu-id="8edc1-389">Производные типы должны переопределять этот метод, чтобы избежать создания промежуточного массива.</span><span class="sxs-lookup"><span data-stu-id="8edc1-389">Derived types should override this method to avoid the intermediate array creation.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8edc1-390">Тип реализации поддерживает только устаревший DSA (FIPS 186-2), а хэш-значение не является 20-байтовым.</span><span class="sxs-lookup"><span data-stu-id="8edc1-390">The implementation type only supports legacy DSA (FIPS 186-2), and the hash value is not 20 bytes long.</span></span>

<span data-ttu-id="8edc1-391">- или -</span><span class="sxs-lookup"><span data-stu-id="8edc1-391">-or-</span></span>

<span data-ttu-id="8edc1-392">Не удалось проверить подпись по другим причинам.</span><span class="sxs-lookup"><span data-stu-id="8edc1-392">Verifying the signature otherwise failed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
