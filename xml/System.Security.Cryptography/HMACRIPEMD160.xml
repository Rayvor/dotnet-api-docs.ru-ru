<Type Name="HMACRIPEMD160" FullName="System.Security.Cryptography.HMACRIPEMD160">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef695e6bcac2807c12e0115bc6db74c26eb5b2ff" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70722729" /></Metadata><TypeSignature Language="C#" Value="public class HMACRIPEMD160 : System.Security.Cryptography.HMAC" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HMACRIPEMD160 extends System.Security.Cryptography.HMAC" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMACRIPEMD160" />
  <TypeSignature Language="VB.NET" Value="Public Class HMACRIPEMD160&#xA;Inherits HMAC" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMACRIPEMD160 : System::Security::Cryptography::HMAC" />
  <TypeSignature Language="F#" Value="type HMACRIPEMD160 = class&#xA;    inherit HMAC" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HMAC</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Вычисляет хэш-код аутентификации сообщения (HMAC) с помощью хэш-функции <see cref="T:System.Security.Cryptography.RIPEMD160" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160>— Это тип хэш-алгоритма с ключом, который формируется из хэш-функции RIPEMD-160 и используется в качестве код проверки подлинности сообщения на основе хэша (HMAC). Процесс HMAC смешивает секретный ключ с данными сообщения, хэширует результат с помощью хэш-функции, применяет хэш-значение с секретным ключом еще раз, а затем применяет хэш-функцию второй раз. Длина выходного хэша составляет 160 бит.  
  
 HMAC можно использовать для определения того, было ли сообщение, переданное по незащищенному каналу, было изменено при условии, что отправитель и получатель совместно используют секретный ключ. Отправитель рассчитывает хэш-значение для исходных данных и отправляет исходные данные и хэш-значение как одно сообщение. Получатель повторно вычисляет хэш-значение в полученном сообщении и проверяет, соответствует ли вычисленный код HMAC переданному коду HMAC.  
  
 Любое изменение данных или хэш-значения приводит к несовпадению, так как знание секретного ключа требуется для изменения сообщения и воспроизведения правильного хэш-значения. Таким образом, если исходные и вычисленные хэш-значения совпадают, сообщение проходит проверку подлинности.  
  
 <xref:System.Security.Cryptography.HMACRIPEMD160>принимает ключи любого размера и создает хэш-последовательность длиной 160 бит.  
  
 Алгоритм хэширования RIPEMD и его последователя были разработаны в Европейской ГОТОВЫХом проекте. Исходный алгоритм RIPEMD был разработан для замены MD4 и MD5 и был впоследствии усиливается и переименован в RIPEMD-160. Алгоритм хеширования RIPEMD-160 создает 160-разрядное хэш-значение. Конструкторы алгоритма разместили его в общедоступном домене.  
  
 Из-за проблем с MD4 и MD5 Корпорация Майкрософт рекомендует использовать SHA256 или более высокий уровень.  
  
## Examples  
 В следующем примере показано, как подписать файл с помощью <xref:System.Security.Cryptography.HMACRIPEMD160> объекта, а затем проверить файл.  
  
 [!code-cpp[HMACRIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/HMACRIPEMD160/CPP/hmacripemd160.cpp#1)]
 [!code-csharp[HMACRIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/HMACRIPEMD160/CS/hmacripemd160.cs#1)]
 [!code-vb[HMACRIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/HMACRIPEMD160/vb/hmacripemd160.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md">службы шифрования</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> 64-байтовым ключом, созданным с помощью алгоритма генерации случайных чисел.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160>— Это тип хэш-алгоритма с ключом, который формируется из хэш-функции RIPEMD-160 и используется в качестве код проверки подлинности сообщения на основе хэша (HMAC). Процесс HMAC смешивает секретный ключ с данными сообщения, хэширует результат с помощью хэш-функции, применяет хэш-значение с секретным ключом еще раз, а затем применяет хэш-функцию второй раз. Длина выходного хэша составляет 160 байт.  
  
 Этот конструктор использует создаваемый случайным образом ключ размером 64 байт.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">службы шифрования</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.HMACRIPEMD160 : byte[] -&gt; System.Security.Cryptography.HMACRIPEMD160" Usage="new System.Security.Cryptography.HMACRIPEMD160 key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">Секретный ключ для шифрования <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />. Длина ключа может быть произвольной, но если она превышает 64 байта, ключ хэшируется (с помощью хэш-функции SHA-1) для получения 64-байтового ключа. Поэтому рекомендуется использовать секретный ключ длиной 64 байта.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> указанными данными ключа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160>— Это тип хэш-алгоритма с ключом, который формируется из хэш-функции RIPEMD-160 и используется в качестве код проверки подлинности сообщения на основе хэша (HMAC). Процесс HMAC смешивает секретный ключ с данными сообщения, хэширует результат с помощью хэш-функции, применяет хэш-значение с секретным ключом еще раз, а затем применяет хэш-функцию второй раз. Длина выходного хэша составляет 160 байт.  
  
   
  
## Examples  
 Пример использования этого конструктора см. в <xref:System.Security.Cryptography.HMACRIPEMD160> разделе класс.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение <see langword="null" />.</exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">службы шифрования</related>
      </Docs>
    </Member>
  </Members>
</Type>
