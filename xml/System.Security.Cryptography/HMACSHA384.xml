<Type Name="HMACSHA384" FullName="System.Security.Cryptography.HMACSHA384">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9e09ae043ed375218bb3e16d3f2953ce1d37624" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75162720" /></Metadata><TypeSignature Language="C#" Value="public class HMACSHA384 : System.Security.Cryptography.HMAC" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HMACSHA384 extends System.Security.Cryptography.HMAC" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMACSHA384" />
  <TypeSignature Language="VB.NET" Value="Public Class HMACSHA384&#xA;Inherits HMAC" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMACSHA384 : System::Security::Cryptography::HMAC" />
  <TypeSignature Language="F#" Value="type HMACSHA384 = class&#xA;    inherit HMAC" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HMAC</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="918a8-101">Вычисляет хэш-код проверки подлинности сообщения (HMAC) с помощью хэш-функции <see cref="T:System.Security.Cryptography.SHA384" />.</span><span class="sxs-lookup"><span data-stu-id="918a8-101">Computes a Hash-based Message Authentication Code (HMAC) using the <see cref="T:System.Security.Cryptography.SHA384" /> hash function.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918a8-102"><xref:System.Security.Cryptography.HMACSHA384> — это тип хэш-алгоритма с ключом, который формируется из хэш-функции SHA-384 и используется в качестве основанного на хэширования код проверки подлинности сообщения (HMAC).</span><span class="sxs-lookup"><span data-stu-id="918a8-102"><xref:System.Security.Cryptography.HMACSHA384> is a type of keyed hash algorithm that is constructed from the SHA-384 hash function and used as a Hash-based Message Authentication Code (HMAC).</span></span> <span data-ttu-id="918a8-103">Процесс HMAC смешивает секретный ключ с данными сообщения и хэширует результат.</span><span class="sxs-lookup"><span data-stu-id="918a8-103">The HMAC process mixes a secret key with the message data and hashes the result.</span></span> <span data-ttu-id="918a8-104">Хэш-значение снова смешивается с секретным ключом, а затем — хэшированным.</span><span class="sxs-lookup"><span data-stu-id="918a8-104">The hash value is mixed with the secret key again, and then hashed a second time.</span></span> <span data-ttu-id="918a8-105">Длина выходного хэша составляет 384 бит.</span><span class="sxs-lookup"><span data-stu-id="918a8-105">The output hash is 384 bits long.</span></span>  
  
 <span data-ttu-id="918a8-106">HMAC можно использовать для определения того, было ли сообщение, переданное по незащищенному каналу, было изменено при условии, что отправитель и получатель совместно используют секретный ключ.</span><span class="sxs-lookup"><span data-stu-id="918a8-106">An HMAC can be used to determine whether a message sent over a nonsecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="918a8-107">Отправитель рассчитывает хэш-значение для исходных данных и отправляет исходные данные и хэш-значение как одно сообщение.</span><span class="sxs-lookup"><span data-stu-id="918a8-107">The sender computes the hash value for the original data and sends both the original data and the hash value as a single message.</span></span> <span data-ttu-id="918a8-108">Получатель повторно вычисляет хэш-значение в полученном сообщении и проверяет, соответствует ли вычисленный код HMAC переданному коду HMAC.</span><span class="sxs-lookup"><span data-stu-id="918a8-108">The receiver recalculates the hash value on the received message and checks that the computed HMAC matches the transmitted HMAC.</span></span>  
  
 <span data-ttu-id="918a8-109">Если исходные и вычисленные хэш-значения совпадают, сообщение проходит проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="918a8-109">If the original and computed hash values match, the message is authenticated.</span></span> <span data-ttu-id="918a8-110">Если они не совпадают, данные или хэш-значение были изменены.</span><span class="sxs-lookup"><span data-stu-id="918a8-110">If they do not match, either the data or the hash value has been changed.</span></span> <span data-ttu-id="918a8-111">HMAC обеспечивает безопасность от незаконного изменения, поскольку знание секретного ключа требуется для изменения сообщения и воспроизведения правильного хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="918a8-111">HMACs provide security against tampering because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span>  
  
 <span data-ttu-id="918a8-112"><xref:System.Security.Cryptography.HMACSHA384> принимает все размеры ключей и создает хэш-последовательность длиной 384 бит.</span><span class="sxs-lookup"><span data-stu-id="918a8-112"><xref:System.Security.Cryptography.HMACSHA384> accepts all key sizes and produces a hash sequence that is 384 bits long.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="918a8-113">В следующем примере показано, как подписать файл с помощью объекта <xref:System.Security.Cryptography.HMACSHA384>, а затем проверить файл.</span><span class="sxs-lookup"><span data-stu-id="918a8-113">The following example shows how to sign a file by using the <xref:System.Security.Cryptography.HMACSHA384> object, and then how to verify the file.</span></span>  
  
 [!code-cpp[HMACSHA384#1](~/samples/snippets/cpp/VS_Snippets_CLR/HMACSHA384/CPP/hmacsha384.cpp#1)]
 [!code-csharp[HMACSHA384#1](~/samples/snippets/csharp/VS_Snippets_CLR/HMACSHA384/CS/hmacsha384.cs#1)]
 [!code-vb[HMACSHA384#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/HMACSHA384/vb/hmacsha384.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="918a8-114">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="918a8-114">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="918a8-115">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.HMACSHA384" />.</span><span class="sxs-lookup"><span data-stu-id="918a8-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACSHA384" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACSHA384 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACSHA384();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="918a8-116">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.HMACSHA384" /> ключом, созданным с помощью алгоритма генерации случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="918a8-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACSHA384" /> class by using a randomly generated key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918a8-117">Этот конструктор использует создаваемый случайным образом ключ размером 64 байт.</span><span class="sxs-lookup"><span data-stu-id="918a8-117">This constructor uses a 64-byte, randomly generated key.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="918a8-118">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="918a8-118">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACSHA384 (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACSHA384(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.HMACSHA384 : byte[] -&gt; System.Security.Cryptography.HMACSHA384" Usage="new System.Security.Cryptography.HMACSHA384 key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="918a8-119">Секретный ключ для шифрования <see cref="T:System.Security.Cryptography.HMACSHA384" />.</span><span class="sxs-lookup"><span data-stu-id="918a8-119">The secret key for <see cref="T:System.Security.Cryptography.HMACSHA384" /> encryption.</span></span> <span data-ttu-id="918a8-120">Ключ может иметь любую длину.</span><span class="sxs-lookup"><span data-stu-id="918a8-120">The key can be any length.</span></span> <span data-ttu-id="918a8-121">Однако рекомендуемый размер равен 128 байтам.</span><span class="sxs-lookup"><span data-stu-id="918a8-121">However, the recommended size is 128 bytes.</span></span> <span data-ttu-id="918a8-122">Если длина ключа превышает 128 байт, ключ хэшируется (с помощью хэш-функции SHA-384) для получения 128-байтового ключа.</span><span class="sxs-lookup"><span data-stu-id="918a8-122">If the key is more than 128 bytes long, it is hashed (using SHA-384) to derive a 128-byte key.</span></span> <span data-ttu-id="918a8-123">Если он меньше 128 байт, то он заполняется до 128 байт.</span><span class="sxs-lookup"><span data-stu-id="918a8-123">If it is less than 128 bytes long, it is padded to 128 bytes.</span></span></param>
        <summary><span data-ttu-id="918a8-124">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.HMACSHA384" />, используя указанные данные ключа.</span><span class="sxs-lookup"><span data-stu-id="918a8-124">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACSHA384" /> class by using the specified key data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="918a8-125">Пример использования этого конструктора см. в разделе класс <xref:System.Security.Cryptography.HMACSHA384>.</span><span class="sxs-lookup"><span data-stu-id="918a8-125">For an example of how to use this constructor, see the <xref:System.Security.Cryptography.HMACSHA384> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="918a8-126">Параметр <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="918a8-126">The <paramref name="key" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="918a8-127">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="918a8-127">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hMACSHA384.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="918a8-128">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="918a8-128"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="918a8-129">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Security.Cryptography.HMACSHA384" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="918a8-129">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HMACSHA384" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="override this.HashCore : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="hMACSHA384.HashCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="918a8-130">Входные данные, для которых вычисляется HMAC.</span><span class="sxs-lookup"><span data-stu-id="918a8-130">The input to compute the HMAC for.</span></span></param>
        <summary><span data-ttu-id="918a8-131">Передает данные из объекта в HMAC-алгоритм для вычисления HMAC.</span><span class="sxs-lookup"><span data-stu-id="918a8-131">Routes data written to the object into the HMAC algorithm for computing the HMAC.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ib, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ib, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ib As Integer, cb As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ib, int cb);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="hMACSHA384.HashCore (rgb, ib, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="ib" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="cb" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rgb"><span data-ttu-id="918a8-132">Входные данные, для которых вычисляется HMAC.</span><span class="sxs-lookup"><span data-stu-id="918a8-132">The input to compute the HMAC for.</span></span></param>
        <param name="ib"><span data-ttu-id="918a8-133">Смещение в массиве байтов, начиная с которого следует использовать данные.</span><span class="sxs-lookup"><span data-stu-id="918a8-133">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cb"><span data-ttu-id="918a8-134">Число байтов в массиве для использования в качестве данных.</span><span class="sxs-lookup"><span data-stu-id="918a8-134">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="918a8-135">Передает данные из объекта в HMAC-алгоритм для вычисления HMAC.</span><span class="sxs-lookup"><span data-stu-id="918a8-135">Routes data written to the object into the HMAC algorithm for computing the HMAC.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="hMACSHA384.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="918a8-136">Завершает вычисление HMAC после обработки последних данных алгоритмом.</span><span class="sxs-lookup"><span data-stu-id="918a8-136">Finalizes the HMAC computation after the last data is processed by the algorithm.</span></span></summary>
        <returns><span data-ttu-id="918a8-137">Вычисленное значение HMAC в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="918a8-137">The computed HMAC value in a byte array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashSize">
      <MemberSignature Language="C#" Value="public override int HashSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMACSHA384.HashSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HashSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HashSize : int" Usage="System.Security.Cryptography.HMACSHA384.HashSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="918a8-138">Возвращает размер вычисляемого значения HMAC в битах.</span><span class="sxs-lookup"><span data-stu-id="918a8-138">Gets the size, in bits, of the computed HMAC.</span></span></summary>
        <value><span data-ttu-id="918a8-139">Размер вычисленного HMAC в битах.</span><span class="sxs-lookup"><span data-stu-id="918a8-139">The size, in bits, of the computed HMAC.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="hMACSHA384.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="918a8-140">Сбрасывает хэш-алгоритм в исходное состояние.</span><span class="sxs-lookup"><span data-stu-id="918a8-140">Resets the hash algorithm to its initial state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMACSHA384.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.HMACSHA384.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="918a8-141">Возвращает или задает ключ, используемый при вычислении HMAC.</span><span class="sxs-lookup"><span data-stu-id="918a8-141">Gets or sets the key to use in the HMAC calculation.</span></span></summary>
        <value><span data-ttu-id="918a8-142">Ключ, используемый в вычислении HMAC.</span><span class="sxs-lookup"><span data-stu-id="918a8-142">The key to use in the HMAC calculation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProduceLegacyHmacValues">
      <MemberSignature Language="C#" Value="public bool ProduceLegacyHmacValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProduceLegacyHmacValues" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues" />
      <MemberSignature Language="VB.NET" Value="Public Property ProduceLegacyHmacValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProduceLegacyHmacValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProduceLegacyHmacValues : bool with get, set" Usage="System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="918a8-143">Предоставляет обходной путь для реализации [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] алгоритма <see cref="T:System.Security.Cryptography.HMACSHA384" />, который не соответствует реализации [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)].</span><span class="sxs-lookup"><span data-stu-id="918a8-143">Provides a workaround for the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] implementation of the <see cref="T:System.Security.Cryptography.HMACSHA384" /> algorithm, which is inconsistent with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] implementation of the algorithm.</span></span></summary>
        <value><span data-ttu-id="918a8-144"><see langword="true" />, чтобы включить взаимодействие приложений [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] с приложениями [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="918a8-144"><see langword="true" /> to enable [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] applications to interact with [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] applications; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918a8-145">Назначение логического свойства <xref:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues%2A> позволяет приложениям [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] взаимодействовать с приложениями [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="918a8-145">The purpose of the <xref:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues%2A> Boolean property is to enable [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] applications to interact with [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] applications.</span></span> <span data-ttu-id="918a8-146">Если этому свойству присвоено значение `true`, объект <xref:System.Security.Cryptography.HMACSHA384> создает значения, соответствующие значениям, созданным [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="918a8-146">When you set this property to `true`, the <xref:System.Security.Cryptography.HMACSHA384> object produces values that match the values produced by the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].</span></span> <span data-ttu-id="918a8-147">Это свойство следует задавать только один раз после создания объекта HMAC.</span><span class="sxs-lookup"><span data-stu-id="918a8-147">You should set this property only once after you create your HMAC object.</span></span> <span data-ttu-id="918a8-148">После этого необходимо будет сбросить ключ, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="918a8-148">You will need to reset your key afterwards, as shown in the following example.</span></span>  
  
```  
public static void Test()  
    {  
    HMACSHA384 hmac = new HMACSHA384();  
    hmac.ProduceLegacyHmacValues = true;  
    hmac.Key = // ...Get the HMAC key.  
    // ...  
    // Use the HMAC algorithm.  
    // ...  
    }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="918a8-149">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="918a8-149">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected override bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryHashFinal : Span&lt;byte&gt; * int -&gt; bool" Usage="hMACSHA384.TryHashFinal (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="918a8-150">Буфер для получения значения HMAC.</span><span class="sxs-lookup"><span data-stu-id="918a8-150">The buffer to receive the HMAC value.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="918a8-151">Этот метод возвращает общее количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="918a8-151">When this method returns, the total number of bytes written into <paramref name="destination" />.</span></span> <span data-ttu-id="918a8-152">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="918a8-152">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="918a8-153">Пытается завершить вычисление HMAC после обработки последних данных алгоритмом HMAC.</span><span class="sxs-lookup"><span data-stu-id="918a8-153">Attempts to finalize the HMAC computation after the last data is processed by the HMAC algorithm.</span></span></summary>
        <returns><span data-ttu-id="918a8-154">Значение <see langword="true" />, если <paramref name="destination" /> имеет достаточную длину для получения значения HMAC, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="918a8-154"><see langword="true" /> if <paramref name="destination" /> is long enough to receive the HMAC value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
