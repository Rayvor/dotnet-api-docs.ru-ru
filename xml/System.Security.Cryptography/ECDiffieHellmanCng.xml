<Type Name="ECDiffieHellmanCng" FullName="System.Security.Cryptography.ECDiffieHellmanCng">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b49ad2249aaf67269969297a945e8bb1adb4049" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75074905" /></Metadata><TypeSignature Language="C#" Value="public sealed class ECDiffieHellmanCng : System.Security.Cryptography.ECDiffieHellman" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ECDiffieHellmanCng extends System.Security.Cryptography.ECDiffieHellman" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDiffieHellmanCng" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ECDiffieHellmanCng&#xA;Inherits ECDiffieHellman" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDiffieHellmanCng sealed : System::Security::Cryptography::ECDiffieHellman" />
  <TypeSignature Language="F#" Value="type ECDiffieHellmanCng = class&#xA;    inherit ECDiffieHellman" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>4.3.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.ECDiffieHellman</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d7f0a-101">Предоставляет реализацию CNG алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH).</span><span class="sxs-lookup"><span data-stu-id="d7f0a-101">Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</span></span> <span data-ttu-id="d7f0a-102">Этот класс используется для выполнения криптографических операций.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-102">This class is used to perform cryptographic operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-103">Класс <xref:System.Security.Cryptography.ECDiffieHellmanCng> позволяет двум сторонам обмениваться материалами закрытого ключа, даже если они обмениваются данными через открытый канал.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-103">The <xref:System.Security.Cryptography.ECDiffieHellmanCng> class enables two parties to exchange private key material even if they are communicating through a public channel.</span></span>  <span data-ttu-id="d7f0a-104">Обе стороны могут вычислить одно и то же значение секрета, которое называется *секретным соглашением* в управляемых классах Диффи-Хелмана.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-104">Both parties can calculate the same secret value, which is referred to as the *secret agreement* in the managed Diffie-Hellman classes.</span></span> <span data-ttu-id="d7f0a-105">Секретное соглашение затем можно использовать для различных целей, включая в качестве симметричного ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-105">The secret agreement can then be used for a variety of purposes, including as a symmetric key.</span></span> <span data-ttu-id="d7f0a-106">Однако вместо того, чтобы предоставлять секретное соглашение напрямую, <xref:System.Security.Cryptography.ECDiffieHellmanCng> класс выполняет некоторую пошаговую обработку соглашения перед предоставлением значения.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-106">However, instead of exposing the secret agreement directly, the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class does some post-processing on the agreement before providing the value.</span></span> <span data-ttu-id="d7f0a-107">Эта пост-обработка называется *функцией формирования ключа (подпрограмм)*. можно выбрать, какой ПОДПРОГРАММ вы хотите использовать, и задать его параметры с помощью набора свойств в экземпляре объекта Диффи-Хелмана.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-107">This post processing is referred to as the *key derivation function (KDF)*; you can select which KDF you want to use and set its parameters through a set of properties on the instance of the Diffie-Hellman object.</span></span>  
  
|<span data-ttu-id="d7f0a-108">Функция формирования ключа</span><span class="sxs-lookup"><span data-stu-id="d7f0a-108">Key derivation function</span></span>|<span data-ttu-id="d7f0a-109">Свойства</span><span class="sxs-lookup"><span data-stu-id="d7f0a-109">Properties</span></span>|  
|-----------------------------|----------------|  
|<xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash>|<span data-ttu-id="d7f0a-110"><xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> — хэш-алгоритм, используемый для обработки секретного соглашения.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-110"><xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> - The hash algorithm that is used to process the secret agreement.</span></span><br /><br /> <span data-ttu-id="d7f0a-111"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> — дополнительный массив байтов для добавления в начало секретного соглашения перед его хэшированием.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-111"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> - An optional byte array to prepend to the secret agreement before hashing it.</span></span><br /><br /> <span data-ttu-id="d7f0a-112"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> — необязательный массив байтов для добавления к секретному соглашению перед его хэшированием.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-112"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> - An optional byte array to append to the secret agreement before hashing it.</span></span>|  
|<xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac>|<span data-ttu-id="d7f0a-113"><xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> — хэш-алгоритм, используемый для обработки секретного соглашения.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-113"><xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> - The hash algorithm that is used to process the secret agreement.</span></span><br /><br /> <span data-ttu-id="d7f0a-114"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>— дополнительный массив байтов для добавления в начало секретного соглашения перед его хэшированием.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-114"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>- An optional byte array to prepend to the secret agreement before hashing it.</span></span><br /><br /> <span data-ttu-id="d7f0a-115"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> — необязательный массив байтов для добавления к секретному соглашению перед его хэшированием.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-115"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> - An optional byte array to append to the secret agreement before hashing it.</span></span>|  
|<xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls>|<span data-ttu-id="d7f0a-116"><xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A> — метка для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-116"><xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A> - The label for key derivation.</span></span><br /><br /> <span data-ttu-id="d7f0a-117"><xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A> — начальное значение для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-117"><xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A> - The seed for key derivation.</span></span>|  
  
 <span data-ttu-id="d7f0a-118">Результатом передачи секретного соглашения через функцию формирования ключа является массив байтов, который может использоваться в качестве ключевого материала для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-118">The result of passing the secret agreement through the key derivation function is a byte array that may be used as key material for your application.</span></span> <span data-ttu-id="d7f0a-119">Число байтов создаваемого ключевого материала зависит от функции формирования ключа. Например, SHA-256 будет создавать 256 бит материала ключа, тогда как SHA-512 создаст 512 бита материала ключа. Основной поток обмена ключами ECDH выглядит следующим образом:</span><span class="sxs-lookup"><span data-stu-id="d7f0a-119">The number of bytes of key material generated is dependent on the key derivation function; for example, SHA-256 will generate 256 bits of key material, whereas SHA-512 will generate 512 bits of key material.The basic flow of an ECDH key exchange is as follows:</span></span>  
  
1.  <span data-ttu-id="d7f0a-120">Алиса и Боб создают пару ключей, которая будет использоваться для операции обмена ключами Диффи-Хелмана.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-120">Alice and Bob create a key pair to use for the Diffie-Hellman key exchange operation</span></span>  
  
2.  <span data-ttu-id="d7f0a-121">Алиса и Боб настраивают ПОДПРОГРАММ, используя параметры, которые согласны с ними.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-121">Alice and Bob configure the KDF using parameters the agree on.</span></span>  
  
3.  <span data-ttu-id="d7f0a-122">Алиса отправляет Бобу свой открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-122">Alice sends Bob her public key.</span></span>  
  
4.  <span data-ttu-id="d7f0a-123">Боб отправляет Бобу свой открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-123">Bob sends Alice his public key.</span></span>  
  
5.  <span data-ttu-id="d7f0a-124">Алиса и Боб используют открытые ключи друг друга для создания секретного соглашения и применяют ПОДПРОГРАММ к секретному соглашению для создания материала ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-124">Alice and Bob use each other's public keys to generate the secret agreement, and apply the KDF to the secret agreement to generate key material.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7f0a-125">В следующем примере показано, как использовать класс <xref:System.Security.Cryptography.ECDiffieHellmanCng> для установки обмена ключами и использования этого ключа для шифрования сообщения, которое может быть отправлено через открытый канал и расшифровано получателем.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-125">The following example shows how to use the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class to establish a key exchange and how to use that key to encrypt a message that can be sent over a public channel and decrypted by the receiver.</span></span>  
  
 [!code-csharp[ECDiffieHellmanCng#1](~/samples/snippets/csharp/VS_Snippets_CLR/ecdiffiehellmancng/cs/program.cs#1)]
 [!code-vb[ECDiffieHellmanCng#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ecdiffiehellmancng/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7f0a-126">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-126">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanCng ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanCng();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7f0a-127">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> с парой случайных пар ключей.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class with a random key pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-128">Пара случайных ключей по умолчанию имеет длину открытого ключа 521 бит.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-128">The random key pair has a default public key length of 521 bits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanCng (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanCng(int keySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanCng : int -&gt; System.Security.Cryptography.ECDiffieHellmanCng" Usage="new System.Security.Cryptography.ECDiffieHellmanCng keySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize"><span data-ttu-id="d7f0a-129">Размер ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-129">The size of the key.</span></span> <span data-ttu-id="d7f0a-130">Допустимые размеры ключей: 256, 384 и 521 бит.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-130">Valid key sizes are 256, 384, and 521 bits.</span></span></param>
        <summary><span data-ttu-id="d7f0a-131">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> с созданной случайным образом парой ключей указанного размера.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-131">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class with a random key pair, using the specified key size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-132">Пара случайных ключей будет иметь длину открытого ключа, определенную параметром `keySize`.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-132">The random key pair will have the public key length defined by the `keySize` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7f0a-133"><paramref name="keySize" /> задает недопустимую длину.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-133"><paramref name="keySize" /> specifies an invalid length.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d7f0a-134">Классы криптографии следующего поколения (CNG) не поддерживаются в этой системе.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-134">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanCng (System.Security.Cryptography.CngKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CngKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As CngKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanCng(System::Security::Cryptography::CngKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanCng : System.Security.Cryptography.CngKey -&gt; System.Security.Cryptography.ECDiffieHellmanCng" Usage="new System.Security.Cryptography.ECDiffieHellmanCng key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d7f0a-135">Ключ, который будет использоваться в качестве входных данных для криптографических операций, выполняемых текущим объектом.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-135">The key that will be used as input to the cryptographic operations performed by the current object.</span></span></param>
        <summary><span data-ttu-id="d7f0a-136">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />, используя указанный объект <see cref="T:System.Security.Cryptography.CngKey" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-136">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class by using the specified <see cref="T:System.Security.Cryptography.CngKey" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7f0a-137"><paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-137"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7f0a-138">Параметр <paramref name="key" /> не указывает группу алгоритмов, основанных на алгоритме Диффи-Хеллмана на эллиптических кривых (ECDH).</span><span class="sxs-lookup"><span data-stu-id="d7f0a-138"><paramref name="key" /> does not specify an Elliptic Curve Diffie-Hellman (ECDH) algorithm group.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d7f0a-139">Классы криптографии следующего поколения (CNG) не поддерживаются в этой системе.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-139">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanCng (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanCng(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanCng : System.Security.Cryptography.ECCurve -&gt; System.Security.Cryptography.ECDiffieHellmanCng" Usage="new System.Security.Cryptography.ECDiffieHellmanCng curve" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="d7f0a-140">Кривая, используемая для создания пары открытого и закрытого ключей.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-140">The curve used to generate the public/private key pair.</span></span></param>
        <summary><span data-ttu-id="d7f0a-141">Создает новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />, пара открытого и закрытого ключей которого создается на основе указанной кривой.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-141">Creates a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class whose public/private key pair is generated over the specified curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-142">`curve` должен проверяться (то есть он должен возвращать `true`) при передаче в метод <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> и должен быть либо именованным, либо явным простым.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-142">`curve` must validate (that is, it must return `true`) when passed to the <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> method and must be either a named or explicit prime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d7f0a-143"><paramref name="curve" /> не выполняет проверку.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-143"><paramref name="curve" /> does not validate.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeriveKeyFromHash">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7f0a-144">Выполняет формирование ключа с использованием указанного хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-144">Performs key derivation using a specified hash algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeriveKeyFromHash">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyFromHash (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] secretPrepend, byte[] secretAppend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyFromHash(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, unsigned int8[] secretPrepend, unsigned int8[] secretAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyFromHash (otherPartyPublicKey As ECDiffieHellmanPublicKey, hashAlgorithm As HashAlgorithmName, secretPrepend As Byte(), secretAppend As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyFromHash(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, cli::array &lt;System::Byte&gt; ^ secretPrepend, cli::array &lt;System::Byte&gt; ^ secretAppend);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyFromHash : System.Security.Cryptography.ECDiffieHellmanPublicKey * System.Security.Cryptography.HashAlgorithmName * byte[] * byte[] -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyFromHash (otherPartyPublicKey, hashAlgorithm, secretPrepend, secretAppend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="secretPrepend" Type="System.Byte[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="secretAppend" Type="System.Byte[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="d7f0a-145">Открытый ключ другой стороны.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-145">The other party's public key.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="d7f0a-146">Хэш-алгоритм, используемый для получения материала ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-146">The hash algorithm to use to derive the key material.</span></span></param>
        <param name="secretPrepend"><span data-ttu-id="d7f0a-147">Значение, добавляемое к производному секрету (в начало) перед хэшированием.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-147">A value to prepend to the derived secret before hashing.</span></span></param>
        <param name="secretAppend"><span data-ttu-id="d7f0a-148">Значение, добавляемое к производному секрету перед хэшированием.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-148">A value to append to the derived secret before hashing.</span></span></param>
        <summary><span data-ttu-id="d7f0a-149">Выполняет формирование ключа с использованием указанного хэш-алгоритма с дополнительными данными, добавленными в начале или конце.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-149">Performs key derivation using a specified hash algorithm with optional prepended or appended data.</span></span></summary>
        <returns><span data-ttu-id="d7f0a-150">Хэш общего секрета после добавления данных по запросу в начале или конце.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-150">The hash of the shared secret after prepending or appending data as requested.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d7f0a-151">Производный класс должен переопределять этот метод.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-151">A derived class must override this method.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7f0a-152">Размер кривой, используемой параметром <paramref name="otherPartyPublicKey" />, отличается от размера кривой из этого ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-152">The curve used by <paramref name="otherPartyPublicKey" /> has a different size than the curve from this key.</span></span>

<span data-ttu-id="d7f0a-153">-или-</span><span class="sxs-lookup"><span data-stu-id="d7f0a-153">-or-</span></span>

<span data-ttu-id="d7f0a-154">В параметре <paramref name="hashAlgorithm" /> не указан хэш.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-154">The <paramref name="hashAlgorithm" /> parameter does not specify a hash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7f0a-155"><paramref name="otherPartyPublicKey" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-155"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d7f0a-156">Кривая, используемая параметром <paramref name="otherPartyPublicKey" />, отличается от кривой из этого ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-156">The curve used by <paramref name="otherPartyPublicKey" /> is different than the curve from this key.</span></span>

<span data-ttu-id="d7f0a-157">-или-</span><span class="sxs-lookup"><span data-stu-id="d7f0a-157">-or-</span></span>

<span data-ttu-id="d7f0a-158">Этот экземпляр представляет только открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-158">This instance represents only a public key.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeriveKeyFromHmac">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7f0a-159">Получает последовательность байтов, которые можно использовать в качестве ключа, использующего код проверки подлинности хэш-сообщения (HMAC).</span><span class="sxs-lookup"><span data-stu-id="d7f0a-159">Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeriveKeyFromHmac">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyFromHmac (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] hmacKey, byte[] secretPrepend, byte[] secretAppend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyFromHmac(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, unsigned int8[] hmacKey, unsigned int8[] secretPrepend, unsigned int8[] secretAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyFromHmac (otherPartyPublicKey As ECDiffieHellmanPublicKey, hashAlgorithm As HashAlgorithmName, hmacKey As Byte(), secretPrepend As Byte(), secretAppend As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyFromHmac(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, cli::array &lt;System::Byte&gt; ^ hmacKey, cli::array &lt;System::Byte&gt; ^ secretPrepend, cli::array &lt;System::Byte&gt; ^ secretAppend);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyFromHmac : System.Security.Cryptography.ECDiffieHellmanPublicKey * System.Security.Cryptography.HashAlgorithmName * byte[] * byte[] * byte[] -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyFromHmac (otherPartyPublicKey, hashAlgorithm, hmacKey, secretPrepend, secretAppend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hmacKey" Type="System.Byte[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="secretPrepend" Type="System.Byte[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="secretAppend" Type="System.Byte[]" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="d7f0a-160">Открытый ключ другой стороны.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-160">The other party's public key.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="d7f0a-161">Хэш-алгоритм, используемый для получения материала ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-161">The hash algorithm to use to derive the key material.</span></span></param>
        <param name="hmacKey"><span data-ttu-id="d7f0a-162">Ключ HMAC.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-162">The key for the HMAC.</span></span></param>
        <param name="secretPrepend"><span data-ttu-id="d7f0a-163">Значение, добавляемое к производному секрету (в начало) перед хэшированием.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-163">A value to prepend to the derived secret before hashing.</span></span></param>
        <param name="secretAppend"><span data-ttu-id="d7f0a-164">Значение, добавляемое к производному секрету перед хэшированием.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-164">A value to append to the derived secret before hashing.</span></span></param>
        <summary><span data-ttu-id="d7f0a-165">Выполняет формирование ключа с использованием указанного алгоритма HMAC с дополнительными данными, добавленными в начале или конце.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-165">Performs key derivation using a specified HMAC (Hash-based Message Authentication Code) algorithm with optional prepended or appended data.</span></span></summary>
        <returns><span data-ttu-id="d7f0a-166">Код HMAC общего секрета после добавления данных по запросу в начале или конце.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-166">The HMAC of the shared secret after prepending or appending data as requested.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7f0a-167">Размер кривой, используемой параметром <paramref name="otherPartyPublicKey" />, отличается от размера кривой из этого ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-167">The curve used by <paramref name="otherPartyPublicKey" /> has a different size than the curve from this key.</span></span>

<span data-ttu-id="d7f0a-168">-или-</span><span class="sxs-lookup"><span data-stu-id="d7f0a-168">-or-</span></span>

<span data-ttu-id="d7f0a-169">В параметре <paramref name="hashAlgorithm" /> не указан хэш.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-169">The <paramref name="hashAlgorithm" /> parameter does not specify a hash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7f0a-170"><paramref name="otherPartyPublicKey" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-170"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d7f0a-171">Кривая, используемая параметром <paramref name="otherPartyPublicKey" />, отличается от кривой из этого ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-171">The curve used by <paramref name="otherPartyPublicKey" /> is different than the curve from this key.</span></span>

<span data-ttu-id="d7f0a-172">-или-</span><span class="sxs-lookup"><span data-stu-id="d7f0a-172">-or-</span></span>

<span data-ttu-id="d7f0a-173">Этот экземпляр представляет только открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-173">This instance represents only a public key.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeriveKeyMaterial">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7f0a-174">Формирует ключевой материал из секретного соглашения, заключенного между двумя сторонами.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-174">Derives the key material that is generated from the secret agreement between two parties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-175">Алгоритм ECDH, основанный на эллиптических кривых, принимает закрытый ключ и открытый ключ другой стороны в качестве входных данных и выдает секретное соглашение в качестве выходных данных.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-175">The Elliptic Curve Diffie-Hellman (ECDH) algorithm accepts the private key and the other party's public key as input, and produces the secret agreement as output.</span></span> <span data-ttu-id="d7f0a-176">Затем функция формирования ключа (ПОДПРОГРАММ) принимает секретное соглашение и создает ключевой материал в виде выходных данных.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-176">The key derivation function (KDF) then takes the secret agreement and produces the key material as output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeriveKeyMaterial">
      <MemberSignature Language="C#" Value="public byte[] DeriveKeyMaterial (System.Security.Cryptography.CngKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DeriveKeyMaterial(class System.Security.Cryptography.CngKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeriveKeyMaterial (otherPartyPublicKey As CngKey) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DeriveKeyMaterial(System::Security::Cryptography::CngKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyMaterial : System.Security.Cryptography.CngKey -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyMaterial otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="d7f0a-177">Получает объект, в котором содержится открытая часть ключа алгоритма Диффи-Хеллмана на эллиптических кривых (Elliptic Curve Diffie-Hellman, ECDH), переданная другой стороной в процессе обмена ключами.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-177">An object that contains the public part of the Elliptic Curve Diffie-Hellman (ECDH) key from the other party in the key exchange.</span></span></param>
        <summary><span data-ttu-id="d7f0a-178">Формирует ключевой материал из секретного соглашения, заключенного между двумя сторонами, используя заданный объект <see cref="T:System.Security.Cryptography.CngKey" />, в котором содержится открытый ключ второй стороны.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-178">Derives the key material that is generated from the secret agreement between two parties, given a <see cref="T:System.Security.Cryptography.CngKey" /> object that contains the second party's public key.</span></span></summary>
        <returns><span data-ttu-id="d7f0a-179">Массив байтов, в котором содержится ключевой материал.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-179">A byte array that contains the key material.</span></span> <span data-ttu-id="d7f0a-180">Эта информация формируется из секретного соглашения, вычисляемого на основе закрытого ключа текущего объекта и указанного открытого ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-180">This information is generated from the secret agreement that is calculated from the current object's private key and the specified public key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7f0a-181"><paramref name="otherPartyPublicKey" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-181"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7f0a-182"><paramref name="otherPartyPublicKey" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-182"><paramref name="otherPartyPublicKey" /> is invalid.</span></span> <span data-ttu-id="d7f0a-183">Значение его свойства <see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /> отлично от <see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /> или его размер ключа не соответствует размеру ключа данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-183">Either its <see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /> property does not specify <see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /> or its key size does not match the key size of this instance.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7f0a-184">Свойство <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /> данного объекта задает функцию формирования ключа <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />, но значение <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> или <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-184">This object's <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /> property specifies the <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /> key derivation function, but either <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> or <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d7f0a-185">Все остальные ошибки.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-185">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeriveKeyMaterial">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyMaterial (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyMaterial(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyMaterial (otherPartyPublicKey As ECDiffieHellmanPublicKey) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyMaterial(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyMaterial : System.Security.Cryptography.ECDiffieHellmanPublicKey -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyMaterial otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="d7f0a-186">Открытый ключ другой стороны, участвующей в обмене ключами.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-186">The public key from the other party in the key exchange.</span></span></param>
        <summary><span data-ttu-id="d7f0a-187">Формирует ключевой материал из секретного соглашения, заключенного между двумя сторонами, используя заданный объект <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />, в котором содержится открытый ключ второй стороны.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-187">Derives the key material that is generated from the secret agreement between two parties, given an <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> object that contains the second party's public key.</span></span></summary>
        <returns><span data-ttu-id="d7f0a-188">Массив байтов, в котором содержится ключевой материал.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-188">A byte array that contains the key material.</span></span> <span data-ttu-id="d7f0a-189">Эта информация формируется из секретного соглашения, вычисляемого на основе закрытого ключа текущего объекта и указанного открытого ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-189">This information is generated from the secret agreement that is calculated from the current object's private key and the specified public key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7f0a-190"><paramref name="otherPartyPublicKey" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-190"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7f0a-191">Значение параметра <paramref name="otherPartyPublicKey" /> не является ключом <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-191"><paramref name="otherPartyPublicKey" /> is not an <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeriveKeyTls">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyTls (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, byte[] prfLabel, byte[] prfSeed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyTls(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, unsigned int8[] prfLabel, unsigned int8[] prfSeed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyTls (otherPartyPublicKey As ECDiffieHellmanPublicKey, prfLabel As Byte(), prfSeed As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyTls(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey, cli::array &lt;System::Byte&gt; ^ prfLabel, cli::array &lt;System::Byte&gt; ^ prfSeed);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyTls : System.Security.Cryptography.ECDiffieHellmanPublicKey * byte[] * byte[] -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyTls (otherPartyPublicKey, prfLabel, prfSeed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="prfLabel" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="prfSeed" Type="System.Byte[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="d7f0a-192">Открытый ключ другой стороны.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-192">The other party's public key.</span></span></param>
        <param name="prfLabel"><span data-ttu-id="d7f0a-193">Метка PRF с использованием кодировки ASCII.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-193">The ASCII-encoded PRF label.</span></span></param>
        <param name="prfSeed"><span data-ttu-id="d7f0a-194">Начальное значение PRF (64-байтовое).</span><span class="sxs-lookup"><span data-stu-id="d7f0a-194">The 64-byte PRF seed.</span></span></param>
        <summary><span data-ttu-id="d7f0a-195">Выполняет формирование ключа с использованием псевдослучайной функции (PRF) протокола TLS 1.1.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-195">Performs key derivation using the TLS (Transport Layer Security) 1.1 PRF (Pseudo-Random Function).</span></span></summary>
        <returns><span data-ttu-id="d7f0a-196">Первые 48 байт, полученные из функции PRF TLS 1.1 с использованием общего секрета в качестве ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-196">The first 48 bytes from the TLS 1.1 PRF, using the shared secret as the key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d7f0a-197">Производный класс должен переопределять этот метод.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-197">A derived class must override this method.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7f0a-198">Размер кривой, используемой параметром <paramref name="otherPartyPublicKey" />, отличается от размера кривой из этого ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-198">The curve used by <paramref name="otherPartyPublicKey" /> has a different size than the curve from this key.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7f0a-199">Параметр <paramref name="otherPartyPublicKey" />, <paramref name="prfLabel" /> или <paramref name="prfSeed" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-199"><paramref name="otherPartyPublicKey" />, <paramref name="prfLabel" /> or <paramref name="prfSeed" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d7f0a-200"><paramref name="prfSeed" /> — длина не соответствует 64 байтам.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-200"><paramref name="prfSeed" /> is not exactly 64 bytes in length.</span></span>

<span data-ttu-id="d7f0a-201">-или-</span><span class="sxs-lookup"><span data-stu-id="d7f0a-201">-or-</span></span>

<span data-ttu-id="d7f0a-202">Кривая, используемая параметром <paramref name="otherPartyPublicKey" />, отличается от кривой из этого ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-202">The curve used by <paramref name="otherPartyPublicKey" /> is different than the curve from this key.</span></span>

<span data-ttu-id="d7f0a-203">-или-</span><span class="sxs-lookup"><span data-stu-id="d7f0a-203">-or-</span></span>

<span data-ttu-id="d7f0a-204">Этот экземпляр представляет только открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-204">This instance represents only a public key.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeriveSecretAgreementHandle">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7f0a-205">Получает дескриптор секретного соглашения, заключенного между двумя сторонами.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-205">Gets a handle to the secret agreement generated between two parties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-206">Перегрузки <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle%2A> метода предназначены для опытных пользователей, которым необходим маркер необработанного секретного соглашения вместо материала ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-206">The <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle%2A> method overloads are for advanced users who need a handle to the raw secret agreement instead of the key material.</span></span> <span data-ttu-id="d7f0a-207">Маркер секретного соглашения можно использовать в вызовах неуправляемого кода для выполнения любой работы, не упакованной классом <xref:System.Security.Cryptography.ECDiffieHellmanCng>.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-207">The secret agreement handle can be used in platform invoke calls to perform any work that is not wrapped by the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeriveSecretAgreementHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle (System.Security.Cryptography.CngKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle(class System.Security.Cryptography.CngKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeriveSecretAgreementHandle (otherPartyPublicKey As CngKey) As SafeNCryptSecretHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::SafeHandles::SafeNCryptSecretHandle ^ DeriveSecretAgreementHandle(System::Security::Cryptography::CngKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="member this.DeriveSecretAgreementHandle : System.Security.Cryptography.CngKey -&gt; Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" Usage="eCDiffieHellmanCng.DeriveSecretAgreementHandle otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="d7f0a-208">Получает объект, в котором содержится открытая часть ключа алгоритма Диффи-Хеллмана на эллиптических кривых (Elliptic Curve Diffie-Hellman, ECDH), переданная другой стороной в процессе обмена ключами.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-208">An object that contains the public part of the Elliptic Curve Diffie-Hellman (ECDH) key from the other party in the key exchange.</span></span></param>
        <summary><span data-ttu-id="d7f0a-209">Получает дескриптор секретного соглашения, заключенного между двумя сторонами, используя заданный объект <see cref="T:System.Security.Cryptography.CngKey" />, в котором содержится открытый ключ второй стороны.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-209">Gets a handle to the secret agreement generated between two parties, given a <see cref="T:System.Security.Cryptography.CngKey" /> object that contains the second party's public key.</span></span></summary>
        <returns><span data-ttu-id="d7f0a-210">Дескриптор секретного соглашения.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-210">A handle to the secret agreement.</span></span> <span data-ttu-id="d7f0a-211">Эта информация вычисляется на основе закрытого ключа текущего объекта и указанного открытого ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-211">This information is calculated from the current object's private key and the specified public key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7f0a-212"><paramref name="otherPartyPublicKey" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-212"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7f0a-213"><paramref name="otherPartyPublicKey" /> — не является ключом ECDH или имеет недопустимый размер.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-213"><paramref name="otherPartyPublicKey" /> is not an ECDH key, or it is not the correct size.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d7f0a-214">Все остальные ошибки.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-214">All other errors.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d7f0a-215">разрешение на вызов неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-215">for permission to call unmanaged code.</span></span> <span data-ttu-id="d7f0a-216">Значение требования: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-216">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="d7f0a-217">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d7f0a-217">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DeriveSecretAgreementHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeriveSecretAgreementHandle (otherPartyPublicKey As ECDiffieHellmanPublicKey) As SafeNCryptSecretHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::SafeHandles::SafeNCryptSecretHandle ^ DeriveSecretAgreementHandle(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="member this.DeriveSecretAgreementHandle : System.Security.Cryptography.ECDiffieHellmanPublicKey -&gt; Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" Usage="eCDiffieHellmanCng.DeriveSecretAgreementHandle otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="d7f0a-218">Открытый ключ другой стороны, участвующей в обмене ключами.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-218">The public key from the other party in the key exchange.</span></span></param>
        <summary><span data-ttu-id="d7f0a-219">Получает дескриптор секретного соглашения, согласованного между двумя сторонами, используя заданный объект <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />, в котором содержится открытый ключ второй стороны.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-219">Gets a handle to the secret agreement generated between two parties, given an <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> object that contains the second party's public key.</span></span></summary>
        <returns><span data-ttu-id="d7f0a-220">Дескриптор секретного соглашения.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-220">A handle to the secret agreement.</span></span> <span data-ttu-id="d7f0a-221">Эта информация вычисляется на основе закрытого ключа текущего объекта и указанного открытого ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-221">This information is calculated from the current object's private key and the specified public key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7f0a-222"><paramref name="otherPartyPublicKey" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-222"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7f0a-223">Значение параметра <paramref name="otherPartyPublicKey" /> не является ключом <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-223"><paramref name="otherPartyPublicKey" /> is not an <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eCDiffieHellmanCng.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d7f0a-224">Значение <see langword="true" />, чтобы освободить все ресурсы (управляемые и неуправляемые); значение <see langword="false" />, чтобы освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-224"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d7f0a-225">Освобождает ресурсы, используемые текущим экземпляром класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-225">Releases the resources used by the current instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportExplicitParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportExplicitParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportExplicitParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDiffieHellmanCng.ExportExplicitParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="d7f0a-226">Значение <see langword="true" /> для включения закрытых параметров; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-226"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d7f0a-227">Экспортирует ключ и параметры явной кривой, используемые объектом <see cref="T:System.Security.Cryptography.ECCurve" />, в объект <see cref="T:System.Security.Cryptography.ECParameters" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-227">Exports the key and explicit curve parameters used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span></summary>
        <returns><span data-ttu-id="d7f0a-228">Ключ и параметры явной кривой, используемые объектом <see cref="T:System.Security.Cryptography.ECCurve" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-228">The key and explicit curve parameters used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d7f0a-229">Метод не может получить значения кривой.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-229">The method cannot obtain curve values.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d7f0a-230">Явный экспорт не поддерживается этой платформой.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-230">Explicit export is not supported by this platform.</span></span> <span data-ttu-id="d7f0a-231">Требуется Windows 10 или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-231">Windows 10 or higher is required.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDiffieHellmanCng.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="d7f0a-232">Значение <see langword="true" /> для включения закрытых параметров; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-232"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d7f0a-233">Экспортирует ключ, используемый объектом <see cref="T:System.Security.Cryptography.ECCurve" />, в объект <see cref="T:System.Security.Cryptography.ECParameters" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-233">Exports the key used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span></summary>
        <returns><span data-ttu-id="d7f0a-234">Ключ и параметры именованной кривой, используемые объектом <see cref="T:System.Security.Cryptography.ECCurve" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-234">The key and named curve parameters used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-235">Если ключ был создан как именованная кривая, то поле <xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType> содержит параметры именованной кривой.          в противном случае он содержит явные параметры.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-235">If the key was created as a named curve, the <xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType> field contains named curve parameters;          otherwise,  it contains explicit parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d7f0a-236">Метод не может получить значения кривой.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-236">The method cannot obtain curve values.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7f0a-237">Выполняет десериализацию данных ключа из XML-строки.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-237">Deserializes the key information from an XML string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public override void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXmlString(System::String ^ xmlString);" />
      <MemberSignature Language="F#" Value="override this.FromXmlString : string -&gt; unit" Usage="eCDiffieHellmanCng.FromXmlString xmlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="d7f0a-238">Данные ключа в формате XML, подлежащие десериализации.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-238">The XML-based key information to be deserialized.</span></span></param>
        <summary><span data-ttu-id="d7f0a-239">Этот метод не реализован.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-239">This method is not implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-240">Чтобы десериализовать ключ XML, используйте вместо этого перегрузку <xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-240">To deserialize an XML key, use the <xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d7f0a-241">Этот метод не был переопределен для данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-241">This method was not overridden for this instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromXmlString(string xml, valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXmlString (xml As String, format As ECKeyXmlFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromXmlString(System::String ^ xml, System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberSignature Language="F#" Value="override this.FromXmlString : string * System.Security.Cryptography.ECKeyXmlFormat -&gt; unit" Usage="eCDiffieHellmanCng.FromXmlString (xml, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="d7f0a-242">Данные ключа в формате XML, подлежащие десериализации.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-242">The XML-based key information to be deserialized.</span></span></param>
        <param name="format"><span data-ttu-id="d7f0a-243">Одно из значений перечисления, задающее формат XML-строки.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-243">One of the enumeration values that specifies the format of the XML string.</span></span> <span data-ttu-id="d7f0a-244">В настоящее время поддерживается только формат <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-244">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></param>
        <summary><span data-ttu-id="d7f0a-245">Выполняет десериализацию данных ключа из XML-строки, используя указанный формат.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-245">Deserializes the key information from an XML string by using the specified format.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7f0a-246"><paramref name="xml" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-246"><paramref name="xml" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7f0a-247">Неверный формат параметра <paramref name="xml" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-247"><paramref name="xml" /> is malformed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d7f0a-248">Недопустимое значение параметра <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-248"><paramref name="format" /> specifies an invalid format.</span></span> <span data-ttu-id="d7f0a-249">Единственным допустимым значением является <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-249">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d7f0a-250">Все остальные ошибки.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-250">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : System.Security.Cryptography.ECCurve -&gt; unit" Usage="eCDiffieHellmanCng.GenerateKey curve" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="d7f0a-251">Кривая, используемая для создания пары открытого и закрытого эфемерных ключей.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-251">The curve used to generate an ephemeral public/private key pair.</span></span></param>
        <summary><span data-ttu-id="d7f0a-252">Создает новую пару открытого и закрытого эфемерных ключей для указанной кривой.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-252">Generates a new ephemeral public/private key pair for the specified curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-253">`curve` необходимо проверить (то есть он должен возвращать значение true при передаче методу <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType>) и не должен быть неявным.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-253">`curve` must validate (that is, it must return true when passed to the <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> method) and must not be implicit.</span></span>  
  
 <span data-ttu-id="d7f0a-254">В Windows не поддерживаются кривые с характеристиками 2.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-254">Characteristic-2 curves are not supported on Windows.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d7f0a-255"><paramref name="curve" /> не выполняет проверку.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-255"><paramref name="curve" /> does not validate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngAlgorithm ^ HashAlgorithm { System::Security::Cryptography::CngAlgorithm ^ get(); void set(System::Security::Cryptography::CngAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Cryptography.CngAlgorithm with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7f0a-256">Получает или задает хэш-алгоритм, используемый при генерации ключевого материала.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-256">Gets or sets the hash algorithm to use when generating key material.</span></span></summary>
        <value><span data-ttu-id="d7f0a-257">Объект, задающий хэш-алгоритм.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-257">An object that specifies the hash algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-258">Это свойство используется объектами криптографии следующего поколения (CNG) только в том случае, если значение <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash> или <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> задано в свойстве <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-258">This property is used by Cryptography Next Generation (CNG) objects only if the <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash> or <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> value is set in the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property.</span></span>  
  
 <span data-ttu-id="d7f0a-259">Это свойство принимает следующие алгоритмы: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>и <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-259">This property accepts the following algorithms: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, and <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span></span>  
  
 <span data-ttu-id="d7f0a-260">Также можно использовать другие пользовательские алгоритмы хэширования.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-260">Other custom hash algorithms may also be used.</span></span>  
  
 <span data-ttu-id="d7f0a-261">Из-за проблем с MD5 и SHA1 Корпорация Майкрософт рекомендует <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-261">Due to collision problems with MD5 and SHA1, Microsoft recommends <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span></span> <span data-ttu-id="d7f0a-262">Алгоритмом по умолчанию является <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-262">The default algorithm is <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7f0a-263">Значение равно <see langword="null." />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-263">The value is <see langword="null." /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HmacKey">
      <MemberSignature Language="C#" Value="public byte[] HmacKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] HmacKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" />
      <MemberSignature Language="VB.NET" Value="Public Property HmacKey As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ HmacKey { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HmacKey : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7f0a-264">Получает или задает ключ HMAC, используемый при формировании ключевого материала.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-264">Gets or sets the Hash-based Message Authentication Code (HMAC) key to use when deriving key material.</span></span></summary>
        <value><span data-ttu-id="d7f0a-265">Ключ HMAC, используемый при формировании ключевого материала.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-265">The Hash-based Message Authentication Code (HMAC) key to use when deriving key material.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-266">Это свойство применяется только в том случае, если значение <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> задано в свойстве <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>, а свойство <xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A> — `false`.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-266">This property applies only when the <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> value is set in the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property, and the <xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A> property is `false`.</span></span> <span data-ttu-id="d7f0a-267">Значение по умолчанию `null`.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-267">By default, the value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.ECParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As ECParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::ECParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.ECParameters -&gt; unit" Usage="eCDiffieHellmanCng.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="d7f0a-268">Параметры кривой для импорта.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-268">The curve's parameters to import.</span></span></param>
        <summary><span data-ttu-id="d7f0a-269">Импортирует заданные параметры для объекта <see cref="T:System.Security.Cryptography.ECCurve" /> как ключ в текущий экземпляр.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-269">Imports the specified parameters for an <see cref="T:System.Security.Cryptography.ECCurve" /> object as a key into the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-270">Метод <xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A> заменяет существующий ключ, с которым работает этот объект, создавая новый объект <xref:System.Security.Cryptography.CngKey>.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-270">The <xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A> method replaces the existing key that this object is working with by creating a         new <xref:System.Security.Cryptography.CngKey> object.</span></span> <span data-ttu-id="d7f0a-271">Если `parameters` содержит только поле <xref:System.Security.Cryptography.ECParameters.Q>, то импортируется только открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-271">If `parameters` contains only the <xref:System.Security.Cryptography.ECParameters.Q> field, then only a public key is imported.</span></span>         <span data-ttu-id="d7f0a-272">Если `parameters` также содержит <xref:System.Security.Cryptography.ECParameters.D>, импортируется полная пара ключей.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-272">If `parameters` also contains <xref:System.Security.Cryptography.ECParameters.D>, then a full key pair is be imported.</span></span> <span data-ttu-id="d7f0a-273">Значение `parameter` <xref:System.Security.Cryptography.ECParameters.Curve> указывает тип кривой для импорта.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-273">The `parameter` <xref:System.Security.Cryptography.ECParameters.Curve> value specifies the type of the curve to import.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d7f0a-274"><paramref name="parameters" /> не выполняет проверку.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-274"><paramref name="parameters" /> does not validate.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d7f0a-275"><paramref name="parameters" /> ссылается на кривую, которую нельзя импортировать.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-275"><paramref name="parameters" /> references a curve that cannot be imported.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d7f0a-276"><paramref name="parameters" /> ссылается на кривую, которая не поддерживается этой платформой.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-276"><paramref name="parameters" /> references a curve that is not supported by this platform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngKey ^ Key { System::Security::Cryptography::CngKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Security.Cryptography.CngKey" Usage="System.Security.Cryptography.ECDiffieHellmanCng.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7f0a-277">Задает объект <see cref="T:System.Security.Cryptography.CngKey" />, который будет использоваться текущим объектом для выполнения криптографических операций.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-277">Specifies the <see cref="T:System.Security.Cryptography.CngKey" /> that is used by the current object for cryptographic operations.</span></span></summary>
        <value><span data-ttu-id="d7f0a-278">Пара ключей, используемая текущим объектом для выполнения криптографических операций.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-278">The key pair used by this object to perform cryptographic operations.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDerivationFunction">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyDerivationFunction As ECDiffieHellmanKeyDerivationFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction { System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction get(); void set(System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction value); };" />
      <MemberSignature Language="F#" Value="member this.KeyDerivationFunction : System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7f0a-279">Получает или задает функцию формирования ключа для класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-279">Gets or sets the key derivation function for the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class.</span></span></summary>
        <value><span data-ttu-id="d7f0a-280">Одно из значений перечисления <see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" />: <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />, <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /> или <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-280">One of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /> enumeration values: <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />, <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />, or <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />.</span></span> <span data-ttu-id="d7f0a-281">Значение по умолчанию — <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-281">The default value is <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-282">Это свойство указывает функцию формирования ключа, используемую для преобразования секретного соглашения в ключевой материал.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-282">This property specifies the key derivation function that is used to transform the secret agreement into key material.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d7f0a-283">Значение перечисления вне диапазона.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-283">The enumeration value is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7f0a-284">Получает или задает размер модуля ключа (в битах), используемого алгоритмом асимметричного шифрования.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-284">Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="d7f0a-285">Размер модуля ключа (в битах), используемого алгоритмом асимметричного шифрования.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-285">The size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="d7f0a-286">Установка этого свойства в текущее значение не имеет видимого воздействия.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-286">Setting this property to its current value has no visible effect.</span></span>
<span data-ttu-id="d7f0a-287">Присвоение этому свойству нового юридического значения отклоняет текущий ключ, но откладывает создание нового ключа до тех пор, пока он не будет нужен.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-287">Setting this property to a new legal value discards the current key, but defers creation of a new key until one is needed.</span></span>

<span data-ttu-id="d7f0a-288">Поскольку размеры ключей не однозначно определяют эллиптические кривые, использование метода задания свойств не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-288">Because key sizes do not uniquely identify elliptic curves, the use of the property setter is discouraged.</span></span> <span data-ttu-id="d7f0a-289">Чтобы создать новый ключ на определенной кривой, используйте метод <xref:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-289">To generate a new key on a specific curve, use the <xref:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey%2A> method.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d7f0a-290"><paramref name="value" /> не разрешено в <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.LegalKeySizes" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-290"><paramref name="value" /> is not permitted by <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.LegalKeySizes" />.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public byte[] Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Label" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Label { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7f0a-291">Получает или задает значение метки, используемое для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-291">Gets or sets the label value that is used for key derivation.</span></span></summary>
        <value><span data-ttu-id="d7f0a-292">Значение метки.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-292">The label value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-293">Это значение используется для наследования ключа, если значение <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls> задано в свойстве <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-293">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls> value is set in the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property.</span></span> <span data-ttu-id="d7f0a-294">По умолчанию это `null`.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-294">By default, it is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PublicKey As ECDiffieHellmanPublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::ECDiffieHellmanPublicKey ^ PublicKey { System::Security::Cryptography::ECDiffieHellmanPublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.ECDiffieHellmanPublicKey" Usage="System.Security.Cryptography.ECDiffieHellmanCng.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanPublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7f0a-295">Получает открытый ключ, который может использоваться другим объектом <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> для генерации секретного соглашения.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-295">Gets the public key that can be used by another <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> object to generate a shared secret agreement.</span></span></summary>
        <value><span data-ttu-id="d7f0a-296">Открытый ключ, связанный с этим экземпляром класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-296">The public key that is associated with this instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecretAppend">
      <MemberSignature Language="C#" Value="public byte[] SecretAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SecretAppend" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property SecretAppend As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SecretAppend { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecretAppend : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7f0a-297">Получает или задает значение, добавляемое к концу секретного соглашения при генерации ключевого материала.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-297">Gets or sets a value that will be appended to the secret agreement when generating key material.</span></span></summary>
        <value><span data-ttu-id="d7f0a-298">Значение, добавляемое к концу секретного соглашения.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-298">The value that is appended to the secret agreement.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-299">Это значение используется для формирования ключа при использовании <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash> или <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> функции формирования ключа (ПОДПРОГРАММ).</span><span class="sxs-lookup"><span data-stu-id="d7f0a-299">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash> or <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> key derivation function (KDF) is used.</span></span> <span data-ttu-id="d7f0a-300">Значение добавляется к секретному соглашению, а объединенное значение передается в ПОДПРОГРАММ для создания материала ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-300">The value is appended to the secret agreement, and the combined value is passed to the KDF to generate the key material.</span></span> <span data-ttu-id="d7f0a-301">Значение по умолчанию `null`.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-301">By default, the value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecretPrepend">
      <MemberSignature Language="C#" Value="public byte[] SecretPrepend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SecretPrepend" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" />
      <MemberSignature Language="VB.NET" Value="Public Property SecretPrepend As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SecretPrepend { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecretPrepend : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7f0a-302">Получает или задает значение, добавляемое к началу секретного соглашения при формировании ключевого материала.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-302">Gets or sets a value that will be added to the beginning of the secret agreement when deriving key material.</span></span></summary>
        <value><span data-ttu-id="d7f0a-303">Значение, добавляемое к началу секретного соглашения при формировании ключевого материала.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-303">The value that is appended to the beginning of the secret agreement during key derivation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-304">Это значение используется для наследования ключа, если для свойства <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> задано одно из следующих значений:</span><span class="sxs-lookup"><span data-stu-id="d7f0a-304">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property is set to one of the following values:</span></span>  
  
-   <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash>  
  
-   <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac>  
  
 <span data-ttu-id="d7f0a-305">Значение добавляется в начало секретного соглашения, а объединенное значение передается функции формирования ключа (ПОДПРОГРАММ) для создания материала ключа.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-305">The value is prepended to the secret agreement, and the combined value is passed to the key derivation function (KDF) to generate the key material.</span></span> <span data-ttu-id="d7f0a-306">Значение по умолчанию `null`.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-306">By default, the value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seed">
      <MemberSignature Language="C#" Value="public byte[] Seed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Seed" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" />
      <MemberSignature Language="VB.NET" Value="Public Property Seed As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Seed { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Seed : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.Seed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7f0a-307">Получает или задает начальное значение, используемое при формировании ключевого материала.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-307">Gets or sets the seed value that will be used when deriving key material.</span></span></summary>
        <value><span data-ttu-id="d7f0a-308">Начальное значение.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-308">The seed value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-309">Это значение используется для наследования ключа, если свойство <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> имеет значение <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls>.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-309">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property is set to <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls>.</span></span> <span data-ttu-id="d7f0a-310">Значение по умолчанию `null`.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-310">By default, the value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7f0a-311">Выполняет сериализацию данных ключа в XML-строку.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-311">Serializes the key information to an XML string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public override string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ToXmlString : bool -&gt; string" Usage="eCDiffieHellmanCng.ToXmlString includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="d7f0a-312">Значение <see langword="true" /> для включения закрытых параметров; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-312"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d7f0a-313">Этот метод не реализован.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-313">This method is not implemented.</span></span></summary>
        <returns><span data-ttu-id="d7f0a-314">Не применяется</span><span class="sxs-lookup"><span data-stu-id="d7f0a-314">Not applicable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f0a-315">Чтобы преобразовать текущий ключ в XML-представление, используйте вместо этого перегрузку <xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-315">To convert the current key to an XML representation, use the <xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d7f0a-316">Этот метод не был переопределен для данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-316">This method was not overridden for this instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXmlString(valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXmlString (format As ECKeyXmlFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXmlString(System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberSignature Language="F#" Value="override this.ToXmlString : System.Security.Cryptography.ECKeyXmlFormat -&gt; string" Usage="eCDiffieHellmanCng.ToXmlString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="d7f0a-317">Одно из значений перечисления, задающее формат XML-строки.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-317">One of the enumeration values that specifies the format of the XML string.</span></span> <span data-ttu-id="d7f0a-318">В настоящее время поддерживается только формат <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-318">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></param>
        <summary><span data-ttu-id="d7f0a-319">Выполняет сериализацию данных ключа в XML-строку, используя указанный формат.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-319">Serializes the key information to an XML string by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="d7f0a-320">Объект типа string, в котором содержатся данные ключа, сериализованные в XML-строку в соответствии с требуемым форматом.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-320">A string object that contains the key information, serialized to an XML string, according to the requested format.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d7f0a-321">Недопустимое значение параметра <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-321"><paramref name="format" /> specifies an invalid format.</span></span> <span data-ttu-id="d7f0a-322">Единственным допустимым значением является <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-322">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseSecretAgreementAsHmacKey">
      <MemberSignature Language="C#" Value="public bool UseSecretAgreementAsHmacKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSecretAgreementAsHmacKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseSecretAgreementAsHmacKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSecretAgreementAsHmacKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseSecretAgreementAsHmacKey : bool" Usage="System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7f0a-323">Получает значение, которое определяет, используется ли секретное соглашение в качестве ключа HMAC для формирования ключевого материала.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-323">Gets a value that indicates whether the secret agreement is used as a Hash-based Message Authentication Code (HMAC) key to derive key material.</span></span></summary>
        <value><span data-ttu-id="d7f0a-324">Значение <see langword="true" />, если секретное соглашение используется в качестве ключа HMAC для формирования ключевого материала; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-324"><see langword="true" /> if the secret agreement is used as an HMAC key to derive key material; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="d7f0a-325">Это значение используется для наследования ключа, если свойство <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> имеет значение <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac>.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-325">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property is set to <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac>.</span></span> <span data-ttu-id="d7f0a-326">Значение по умолчанию `false`.</span><span class="sxs-lookup"><span data-stu-id="d7f0a-326">By default, the value is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
