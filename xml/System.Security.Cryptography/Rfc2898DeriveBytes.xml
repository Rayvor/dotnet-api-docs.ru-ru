<Type Name="Rfc2898DeriveBytes" FullName="System.Security.Cryptography.Rfc2898DeriveBytes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6d778e763c61fb41ed7fd04f388f2b87d25bab1" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75162460" /></Metadata><TypeSignature Language="C#" Value="public class Rfc2898DeriveBytes : System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Rfc2898DeriveBytes extends System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Rfc2898DeriveBytes" />
  <TypeSignature Language="VB.NET" Value="Public Class Rfc2898DeriveBytes&#xA;Inherits DeriveBytes" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rfc2898DeriveBytes : System::Security::Cryptography::DeriveBytes" />
  <TypeSignature Language="F#" Value="type Rfc2898DeriveBytes = class&#xA;    inherit DeriveBytes" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DeriveBytes</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="507f8-101">Реализует функцию формирования ключа на основе пароля (PBKDF2) посредством генератора псевдослучайных чисел <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-101">Implements password-based key derivation functionality, PBKDF2, by using a pseudo-random number generator based on <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507f8-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> принимает пароль, Salt-элемент и число итераций, а затем создает ключи с помощью вызовов метода <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="507f8-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span>  
  
 <span data-ttu-id="507f8-103">В стандарте RFC 2898 есть методы для создания ключа и вектора инициализации (IV) из пароля и соли.</span><span class="sxs-lookup"><span data-stu-id="507f8-103">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="507f8-104">Для получения ключей с помощью функции псевдо-Random, которая позволяет создавать ключи практически неограниченной длины, можно использовать PBKDF2, функцию наследования на основе пароля.</span><span class="sxs-lookup"><span data-stu-id="507f8-104">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="507f8-105">Класс <xref:System.Security.Cryptography.Rfc2898DeriveBytes> можно использовать для создания производного ключа из базового ключа и других параметров.</span><span class="sxs-lookup"><span data-stu-id="507f8-105">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="507f8-106">В функции формирования ключа на основе пароля базовый ключ является паролем, а другие параметры — расширяющим значением и числом итераций.</span><span class="sxs-lookup"><span data-stu-id="507f8-106">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="507f8-107">Дополнительные сведения о PBKDF2 см. в RFC 2898, "PKCS #5: спецификация криптографии на основе пароля версии 2,0", доступная на [веб-сайте с запросами на комментарии](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="507f8-107">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="507f8-108">Подробные сведения см. в разделе 5,2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="507f8-108">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="507f8-109">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="507f8-109">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="507f8-110">Жестко запрограммированные пароли можно получить из сборки с помощью средства [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), в шестнадцатеричном редакторе или просто открыв сборку в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="507f8-110">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="507f8-111">В следующем примере кода класс <xref:System.Security.Cryptography.Rfc2898DeriveBytes> используется для создания двух идентичных ключей для класса <xref:System.Security.Cryptography.TripleDES>.</span><span class="sxs-lookup"><span data-stu-id="507f8-111">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="507f8-112">Затем выполняется шифрование и расшифровка некоторых данных с помощью ключей.</span><span class="sxs-lookup"><span data-stu-id="507f8-112">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="507f8-113">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="507f8-113">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="507f8-114">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="507f8-115">Пароль, используемый для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-115">The password used to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="507f8-116">Соль, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-116">The key salt used to derive the key.</span></span></param>
        <summary><span data-ttu-id="507f8-117">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя пароль и соль для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password and salt to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507f8-118">Размер соли должен быть не более 8 байт.</span><span class="sxs-lookup"><span data-stu-id="507f8-118">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="507f8-119">В стандарте RFC 2898 есть методы для создания ключа и вектора инициализации (IV) из пароля и соли.</span><span class="sxs-lookup"><span data-stu-id="507f8-119">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="507f8-120">Для получения ключей с помощью функции псевдо-Random, которая позволяет создавать ключи практически неограниченной длины, можно использовать PBKDF2, функцию наследования на основе пароля.</span><span class="sxs-lookup"><span data-stu-id="507f8-120">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="507f8-121">Класс <xref:System.Security.Cryptography.Rfc2898DeriveBytes> можно использовать для создания производного ключа из базового ключа и других параметров.</span><span class="sxs-lookup"><span data-stu-id="507f8-121">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="507f8-122">В функции формирования ключа на основе пароля базовый ключ является паролем, а другие параметры — расширяющим значением и числом итераций.</span><span class="sxs-lookup"><span data-stu-id="507f8-122">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="507f8-123">Дополнительные сведения о PBKDF2 см. в RFC 2898, "PKCS #5: спецификация криптографии на основе пароля версии 2,0", доступная на [веб-сайте с запросами на комментарии](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="507f8-123">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="507f8-124">Подробные сведения см. в разделе 5,2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="507f8-124">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="507f8-125">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="507f8-125">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="507f8-126">Жестко запрограммированные пароли можно получить из сборки с помощью средства [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), в шестнадцатеричном редакторе или просто открыв сборку в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="507f8-126">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="507f8-127">В следующем примере кода класс <xref:System.Security.Cryptography.Rfc2898DeriveBytes> используется для создания двух идентичных ключей для класса <xref:System.Security.Cryptography.TripleDES>.</span><span class="sxs-lookup"><span data-stu-id="507f8-127">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="507f8-128">Затем выполняется шифрование и расшифровка некоторых данных с помощью ключей.</span><span class="sxs-lookup"><span data-stu-id="507f8-128">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="507f8-129">Размер указанного расширяющего значения менее 8 байт, а число итераций менее 1.</span><span class="sxs-lookup"><span data-stu-id="507f8-129">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="507f8-130">Пароль или расширяющее значение равны <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-130">The password or salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="507f8-131">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="507f8-131">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="507f8-132">Пароль, используемый для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-132">The password used to derive the key.</span></span></param>
        <param name="saltSize"><span data-ttu-id="507f8-133">Размер произвольной соли, которую должен создать класс.</span><span class="sxs-lookup"><span data-stu-id="507f8-133">The size of the random salt that you want the class to generate.</span></span></param>
        <summary><span data-ttu-id="507f8-134">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя пароль и соль для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-134">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the password and salt size to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507f8-135">Размер соли должен быть не более 8 байт.</span><span class="sxs-lookup"><span data-stu-id="507f8-135">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="507f8-136">В стандарте RFC 2898 есть методы для создания ключа и вектора инициализации (IV) из пароля и соли.</span><span class="sxs-lookup"><span data-stu-id="507f8-136">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="507f8-137">Для получения ключей с помощью функции псевдо-Random, которая позволяет создавать ключи практически неограниченной длины, можно использовать PBKDF2, функцию наследования на основе пароля.</span><span class="sxs-lookup"><span data-stu-id="507f8-137">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="507f8-138">Класс <xref:System.Security.Cryptography.Rfc2898DeriveBytes> можно использовать для создания производного ключа из базового ключа и других параметров.</span><span class="sxs-lookup"><span data-stu-id="507f8-138">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="507f8-139">В функции формирования ключа на основе пароля базовый ключ является паролем, а другие параметры — расширяющим значением и числом итераций.</span><span class="sxs-lookup"><span data-stu-id="507f8-139">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="507f8-140">Дополнительные сведения о PBKDF2 см. в RFC 2898, "PKCS #5: спецификация криптографии на основе пароля версии 2,0", доступная на [веб-сайте с запросами на комментарии](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="507f8-140">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="507f8-141">Подробные сведения см. в разделе 5,2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="507f8-141">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="507f8-142">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="507f8-142">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="507f8-143">Жестко запрограммированные пароли можно получить из сборки с помощью средства [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), в шестнадцатеричном редакторе или просто открыв сборку в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="507f8-143">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="507f8-144">Указанный размер расширяющего значения менее 8 байт.</span><span class="sxs-lookup"><span data-stu-id="507f8-144">The specified salt size is smaller than 8 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="507f8-145">Пароль или расширяющее значение равны <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-145">The password or salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="507f8-146">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="507f8-146">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : byte[] * byte[] * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="507f8-147">Пароль, используемый для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-147">The password used to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="507f8-148">Соль, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-148">The key salt used to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="507f8-149">Число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="507f8-149">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="507f8-150">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя пароль, расширяющее значение и число итераций для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507f8-151">Размер расширяющего значения должен составлять 8 байт или больше, а число итераций должно быть больше нуля.</span><span class="sxs-lookup"><span data-stu-id="507f8-151">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="507f8-152">Минимальное рекомендуемое число итераций — 1000.</span><span class="sxs-lookup"><span data-stu-id="507f8-152">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="507f8-153">В стандарте RFC 2898 есть методы для создания ключа и вектора инициализации (IV) из пароля и соли.</span><span class="sxs-lookup"><span data-stu-id="507f8-153">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="507f8-154">Для получения ключей с помощью функции псевдо-Random, которая позволяет создавать ключи практически неограниченной длины, можно использовать PBKDF2, функцию наследования на основе пароля.</span><span class="sxs-lookup"><span data-stu-id="507f8-154">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="507f8-155">Класс <xref:System.Security.Cryptography.Rfc2898DeriveBytes> можно использовать для создания производного ключа из базового ключа и других параметров.</span><span class="sxs-lookup"><span data-stu-id="507f8-155">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="507f8-156">В функции формирования ключа на основе пароля базовый ключ является паролем, а другие параметры — расширяющим значением и числом итераций.</span><span class="sxs-lookup"><span data-stu-id="507f8-156">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="507f8-157">Дополнительные сведения о PBKDF2 см. в RFC 2898, "PKCS #5: спецификация криптографии на основе пароля версии 2,0", доступная на [веб-сайте с запросами на комментарии](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="507f8-157">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="507f8-158">Подробные сведения см. в разделе 5,2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="507f8-158">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="507f8-159">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="507f8-159">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="507f8-160">Жестко запрограммированные пароли можно получить из сборки с помощью средства [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), в шестнадцатеричном редакторе или просто открыв сборку в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="507f8-160">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="507f8-161">Размер указанного расширяющего значения менее 8 байт, а число итераций менее 1.</span><span class="sxs-lookup"><span data-stu-id="507f8-161">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="507f8-162">Пароль или расширяющее значение равны <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-162">The password or salt is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="507f8-163">Пароль, используемый для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-163">The password used to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="507f8-164">Соль, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-164">The key salt used to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="507f8-165">Число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="507f8-165">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="507f8-166">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя пароль, расширяющее значение и число итераций для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-166">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507f8-167">Размер расширяющего значения должен составлять 8 байт или больше, а число итераций должно быть больше нуля.</span><span class="sxs-lookup"><span data-stu-id="507f8-167">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="507f8-168">Минимальное рекомендуемое число итераций — 1000.</span><span class="sxs-lookup"><span data-stu-id="507f8-168">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="507f8-169">В стандарте RFC 2898 есть методы для создания ключа и вектора инициализации (IV) из пароля и соли.</span><span class="sxs-lookup"><span data-stu-id="507f8-169">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="507f8-170">Для получения ключей с помощью функции псевдо-Random, которая позволяет создавать ключи практически неограниченной длины, можно использовать PBKDF2, функцию наследования на основе пароля.</span><span class="sxs-lookup"><span data-stu-id="507f8-170">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="507f8-171">Класс <xref:System.Security.Cryptography.Rfc2898DeriveBytes> можно использовать для создания производного ключа из базового ключа и других параметров.</span><span class="sxs-lookup"><span data-stu-id="507f8-171">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="507f8-172">В функции формирования ключа на основе пароля базовый ключ является паролем, а другие параметры — расширяющим значением и числом итераций.</span><span class="sxs-lookup"><span data-stu-id="507f8-172">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="507f8-173">Дополнительные сведения о PBKDF2 см. в RFC 2898, "PKCS #5: спецификация криптографии на основе пароля версии 2,0", доступная на [веб-сайте с запросами на комментарии](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="507f8-173">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="507f8-174">Подробные сведения см. в разделе 5,2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="507f8-174">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="507f8-175">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="507f8-175">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="507f8-176">Жестко запрограммированные пароли можно получить из сборки с помощью средства [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), в шестнадцатеричном редакторе или просто открыв сборку в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="507f8-176">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="507f8-177">В следующем примере кода класс <xref:System.Security.Cryptography.Rfc2898DeriveBytes> используется для создания двух идентичных ключей для класса <xref:System.Security.Cryptography.TripleDES>.</span><span class="sxs-lookup"><span data-stu-id="507f8-177">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="507f8-178">Затем выполняется шифрование и расшифровка некоторых данных с помощью ключей.</span><span class="sxs-lookup"><span data-stu-id="507f8-178">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="507f8-179">Размер указанного расширяющего значения менее 8 байт, а число итераций менее 1.</span><span class="sxs-lookup"><span data-stu-id="507f8-179">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="507f8-180">Пароль или расширяющее значение равны <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-180">The password or salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="507f8-181">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="507f8-181">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="507f8-182">Пароль, используемый для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-182">The password used to derive the key.</span></span></param>
        <param name="saltSize"><span data-ttu-id="507f8-183">Размер произвольной соли, которую должен создать класс.</span><span class="sxs-lookup"><span data-stu-id="507f8-183">The size of the random salt that you want the class to generate.</span></span></param>
        <param name="iterations"><span data-ttu-id="507f8-184">Число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="507f8-184">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="507f8-185">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя пароль, размер соли и число итераций для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-185">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt size, and number of iterations to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507f8-186">Размер расширяющего значения должен составлять 8 байт или больше, а число итераций должно быть больше нуля.</span><span class="sxs-lookup"><span data-stu-id="507f8-186">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="507f8-187">Минимальное рекомендуемое число итераций — 1000.</span><span class="sxs-lookup"><span data-stu-id="507f8-187">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="507f8-188">В стандарте RFC 2898 есть методы для создания ключа и вектора инициализации (IV) из пароля и соли.</span><span class="sxs-lookup"><span data-stu-id="507f8-188">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="507f8-189">Для получения ключей с помощью функции псевдо-Random, которая позволяет создавать ключи практически неограниченной длины, можно использовать PBKDF2, функцию наследования на основе пароля.</span><span class="sxs-lookup"><span data-stu-id="507f8-189">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="507f8-190">Класс <xref:System.Security.Cryptography.Rfc2898DeriveBytes> можно использовать для создания производного ключа из базового ключа и других параметров.</span><span class="sxs-lookup"><span data-stu-id="507f8-190">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="507f8-191">В функции формирования ключа на основе пароля базовый ключ является паролем, а другие параметры — расширяющим значением и числом итераций.</span><span class="sxs-lookup"><span data-stu-id="507f8-191">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="507f8-192">Дополнительные сведения о PBKDF2 см. в документе RFC 2898, "PKCS #5: спецификация криптографии на основе пароля версии 2,0", доступная на [веб-сайте с запросами на комментарии](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="507f8-192">For more information on PBKDF2, see RFC 2898,"PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="507f8-193">Подробные сведения см. в разделе 5,2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="507f8-193">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="507f8-194">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="507f8-194">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="507f8-195">Жестко запрограммированные пароли можно получить из сборки с помощью средства [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), в шестнадцатеричном редакторе или просто открыв сборку в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="507f8-195">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="507f8-196">Размер указанного расширяющего значения менее 8 байт, а число итераций менее 1.</span><span class="sxs-lookup"><span data-stu-id="507f8-196">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="507f8-197">Пароль или расширяющее значение равны <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-197">The password or salt is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="507f8-198"><paramref name="iterations" /> выходит за пределы диапазона.</span><span class="sxs-lookup"><span data-stu-id="507f8-198"><paramref name="iterations" /> is out of range.</span></span> <span data-ttu-id="507f8-199">Значение этого параметра не должно быть отрицательным.</span><span class="sxs-lookup"><span data-stu-id="507f8-199">This parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="507f8-200">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="507f8-200">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : byte[] * byte[] * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
        <Parameter Name="salt" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
        <Parameter Name="iterations" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="507f8-201">Пароль, используемый для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-201">The password to use to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="507f8-202">Соль ключа, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-202">The key salt to use to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="507f8-203">Число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="507f8-203">The number of iterations for the operation.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="507f8-204">Имя хэш-алгоритма, используемое для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-204">The hash algorithm to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="507f8-205">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя заданные пароль, случайные данные, число итераций и имя хэш-алгоритма для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-205">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="507f8-206">Значение параметра <paramref name="saltSize" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="507f8-206"><paramref name="saltSize" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="507f8-207">Свойство <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> класса <paramref name="hashAlgorithm" /> имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-207">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="507f8-208">Недопустимое имя хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="507f8-208">Hash algorithm name is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
        <Parameter Name="salt" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
        <Parameter Name="iterations" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="507f8-209">Пароль, используемый для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-209">The password to use to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="507f8-210">Соль ключа, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-210">The key salt to use to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="507f8-211">Число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="507f8-211">The number of iterations for the operation.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="507f8-212">Имя хэш-алгоритма, используемое для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-212">The hash algorithm to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="507f8-213">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя заданные пароль, случайные данные, число итераций и имя хэш-алгоритма для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-213">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="507f8-214">Свойство <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /><paramref name="hashAlgorithm" /> — <see langword="null" /> или <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-214">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="507f8-215">Недопустимое имя хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="507f8-215">Hash algorithm name is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
        <Parameter Name="saltSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
        <Parameter Name="iterations" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="507f8-216">Пароль, используемый для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-216">The password to use to derive the key.</span></span></param>
        <param name="saltSize"><span data-ttu-id="507f8-217">Размер произвольной соли, которую должен создать класс.</span><span class="sxs-lookup"><span data-stu-id="507f8-217">The size of the random salt that you want the class to generate.</span></span></param>
        <param name="iterations"><span data-ttu-id="507f8-218">Число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="507f8-218">The number of iterations for the operation.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="507f8-219">Имя хэш-алгоритма, используемое для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-219">The hash algorithm to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="507f8-220">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя заданные пароль, размер случайных данных, число итераций и имя хэш-алгоритма для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-220">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt size, number of iterations and the hash algorithm name to derive the key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="507f8-221">Значение параметра <paramref name="saltSize" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="507f8-221"><paramref name="saltSize" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="507f8-222">Свойство <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> класса <paramref name="hashAlgorithm" /> имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-222">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="507f8-223">Недопустимое имя хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="507f8-223">Hash algorithm name is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CryptDeriveKey">
      <MemberSignature Language="C#" Value="public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] CryptDeriveKey(string algname, string alghashname, int32 keySize, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CryptDeriveKey (algname As String, alghashname As String, keySize As Integer, rgbIV As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ CryptDeriveKey(System::String ^ algname, System::String ^ alghashname, int keySize, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="member this.CryptDeriveKey : string * string * int * byte[] -&gt; byte[]" Usage="rfc2898DeriveBytes.CryptDeriveKey (algname, alghashname, keySize, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algname" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="alghashname" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="keySize" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="rgbIV" Type="System.Byte[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="algname"><span data-ttu-id="507f8-224">Имя алгоритма, используемого для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-224">The algorithm name for which to derive the key.</span></span></param>
        <param name="alghashname"><span data-ttu-id="507f8-225">Имя хэш-алгоритма, используемого для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-225">The hash algorithm name to use to derive the key.</span></span></param>
        <param name="keySize"><span data-ttu-id="507f8-226">Размер формируемого ключа в битах.</span><span class="sxs-lookup"><span data-stu-id="507f8-226">The size of the key, in bits, to derive.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="507f8-227">Вектор инициализации, используемый для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-227">The initialization vector (IV) to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="507f8-228">Возвращает криптографический ключ из объекта <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-228">Derives a cryptographic key from the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> object.</span></span></summary>
        <returns><span data-ttu-id="507f8-229">Сформированный ключ.</span><span class="sxs-lookup"><span data-stu-id="507f8-229">The derived key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507f8-230">Эта функция является оболочкой для функции Crypto API Криптдеривекэй () и предназначена для обеспечения взаимодействия с приложениями, использующими API шифрования.</span><span class="sxs-lookup"><span data-stu-id="507f8-230">This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</span></span>  
  
 <span data-ttu-id="507f8-231">Если параметр `keySize` имеет значение 0 бит, используется размер ключа по умолчанию для указанного алгоритма.</span><span class="sxs-lookup"><span data-stu-id="507f8-231">If the `keySize` parameter is set to 0 bits, the default key size for the specified algorithm is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="507f8-232">Параметр <paramref name="keySize" /> является неверным.</span><span class="sxs-lookup"><span data-stu-id="507f8-232">The <paramref name="keySize" /> parameter is incorrect.</span></span>  
  
<span data-ttu-id="507f8-233">-или-</span><span class="sxs-lookup"><span data-stu-id="507f8-233">-or-</span></span> 
<span data-ttu-id="507f8-234">Не удалось получить поставщик служб шифрования (CSP).</span><span class="sxs-lookup"><span data-stu-id="507f8-234">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
<span data-ttu-id="507f8-235">-или-</span><span class="sxs-lookup"><span data-stu-id="507f8-235">-or-</span></span> 
<span data-ttu-id="507f8-236">Значение параметра <paramref name="algname" /> не является допустимым именем алгоритма.</span><span class="sxs-lookup"><span data-stu-id="507f8-236">The <paramref name="algname" /> parameter is not a valid algorithm name.</span></span>  
  
<span data-ttu-id="507f8-237">-или-</span><span class="sxs-lookup"><span data-stu-id="507f8-237">-or-</span></span> 
<span data-ttu-id="507f8-238">Значение параметра <paramref name="alghashname" /> не является допустимым именем хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="507f8-238">The <paramref name="alghashname" /> parameter is not a valid hash algorithm name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="rfc2898DeriveBytes.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="507f8-239">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="507f8-239"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="507f8-240">Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> (при необходимости освобождает и управляемые ресурсы).</span><span class="sxs-lookup"><span data-stu-id="507f8-240">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507f8-241">Этот метод вызывается методом Public `Dispose()` и методом `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="507f8-241">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="507f8-242">`Dispose()` вызывает защищенный метод `Dispose(Boolean)` с параметром `disposing`, для которого задано значение `true`.</span><span class="sxs-lookup"><span data-stu-id="507f8-242">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="507f8-243">`Finalize` вызывает `Dispose`, для `disposing` задано значение `false`.</span><span class="sxs-lookup"><span data-stu-id="507f8-243">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="507f8-244">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="507f8-244">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.Rfc2898DeriveBytes> references.</span></span> <span data-ttu-id="507f8-245">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="507f8-245">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="507f8-246">Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="507f8-246">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="507f8-247">При переопределении <see langword="Dispose(Boolean)" />следует избегать ссылок на объекты, которые были удалены ранее при предыдущем вызове метода <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-247">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="507f8-248">Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />см. в разделе [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="507f8-248">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="507f8-249">Дополнительные сведения о <see langword="Dispose" /> и <see langword="Finalize" />см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="507f8-249">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (cb As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(int cb);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int -&gt; byte[]" Usage="rfc2898DeriveBytes.GetBytes cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb"><span data-ttu-id="507f8-250">Число генерируемых псевдослучайных байтов ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-250">The number of pseudo-random key bytes to generate.</span></span></param>
        <summary><span data-ttu-id="507f8-251">Возвращает псевдослучайный ключ для данного объекта.</span><span class="sxs-lookup"><span data-stu-id="507f8-251">Returns the pseudo-random key for this object.</span></span></summary>
        <returns><span data-ttu-id="507f8-252">Массив байтов, заполненный псевдослучайными байтами ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-252">A byte array filled with pseudo-random key bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507f8-253">Класс <xref:System.Security.Cryptography.Rfc2898DeriveBytes> реализует функциональность PBKDF2 с помощью генератора номеров псевдослучайное, основанного на <xref:System.Security.Cryptography.HMACSHA1>.</span><span class="sxs-lookup"><span data-stu-id="507f8-253">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class implements PBKDF2 functionality by using a pseudorandom number generator based on <xref:System.Security.Cryptography.HMACSHA1>.</span></span> <span data-ttu-id="507f8-254">Класс <xref:System.Security.Cryptography.Rfc2898DeriveBytes> принимает пароль, Salt-элемент и число итераций, а затем создает ключи с помощью вызовов метода <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="507f8-254">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span> <span data-ttu-id="507f8-255">Повторные вызовы этого метода не будут создавать один и тот же ключ. Вместо этого, добавление двух вызовов метода <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> с `cb`ным значением параметра `20` является аналогом вызова метода <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> один раз с `cb` значением параметра `40`.</span><span class="sxs-lookup"><span data-stu-id="507f8-255">Repeated calls to this method will not generate the same key; instead, appending two calls of the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method with a `cb` parameter value of `20` is the equivalent of calling the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method once with a `cb` parameter value of `40`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="507f8-256">В следующем примере показано, как использовать метод <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> для получения ключа для экземпляра <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="507f8-256">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method to get the key for an instance of <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span></span> <span data-ttu-id="507f8-257">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="507f8-257">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#2](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#2)]
 [!code-csharp[rfc28981#2](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#2)]
 [!code-vb[rfc28981#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="507f8-258"><paramref name="cb" /> выходит за пределы диапазона.</span><span class="sxs-lookup"><span data-stu-id="507f8-258"><paramref name="cb" /> is out of range.</span></span> <span data-ttu-id="507f8-259">Значение этого параметра не должно быть отрицательным.</span><span class="sxs-lookup"><span data-stu-id="507f8-259">This parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="507f8-260">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="507f8-260">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.HashAlgorithmName HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.HashAlgorithmName HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HashAlgorithm As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::HashAlgorithmName HashAlgorithm { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IterationCount">
      <MemberSignature Language="C#" Value="public int IterationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IterationCount" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IterationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IterationCount : int with get, set" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="507f8-261">Возвращает или задает число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="507f8-261">Gets or sets the number of iterations for the operation.</span></span></summary>
        <value><span data-ttu-id="507f8-262">Число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="507f8-262">The number of iterations for the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507f8-263">Число итераций — это количество операций, выполняемых при выполнении операции.</span><span class="sxs-lookup"><span data-stu-id="507f8-263">Iteration count is the number of times an operation is performed.</span></span> <span data-ttu-id="507f8-264">Для этого метода число должно быть больше нуля.</span><span class="sxs-lookup"><span data-stu-id="507f8-264">For this method, the count should be greater than zero.</span></span> <span data-ttu-id="507f8-265">Минимальное рекомендуемое число итераций — 1000.</span><span class="sxs-lookup"><span data-stu-id="507f8-265">The minimum recommended number of iterations is 1000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="507f8-266">В следующем примере показано, как использовать свойство <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> для отображения количества итераций, используемых при формировании ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-266">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> property to display the number of iterations used in the generation of the key.</span></span> <span data-ttu-id="507f8-267">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="507f8-267">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#3](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#3)]
 [!code-csharp[rfc28981#3](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#3)]
 [!code-vb[rfc28981#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="507f8-268">Число итераций менее 1.</span><span class="sxs-lookup"><span data-stu-id="507f8-268">The number of iterations is less than 1.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="507f8-269">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="507f8-269">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="rfc2898DeriveBytes.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="507f8-270">Восстанавливает состояние данной операции.</span><span class="sxs-lookup"><span data-stu-id="507f8-270">Resets the state of the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507f8-271">Этот метод автоматически вызывается при изменении значения соли или числа итераций.</span><span class="sxs-lookup"><span data-stu-id="507f8-271">This method is automatically called if the salt or iteration count is modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="507f8-272">В следующем примере показано, как использовать метод <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="507f8-272">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A> method.</span></span> <span data-ttu-id="507f8-273">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="507f8-273">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#5](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#5)]
 [!code-csharp[rfc28981#5](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#5)]
 [!code-vb[rfc28981#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="507f8-274">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="507f8-274">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Salt">
      <MemberSignature Language="C#" Value="public byte[] Salt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Salt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberSignature Language="VB.NET" Value="Public Property Salt As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Salt { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Salt : byte[] with get, set" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="507f8-275">Возвращает или задает значение соли ключа для данной операции.</span><span class="sxs-lookup"><span data-stu-id="507f8-275">Gets or sets the key salt value for the operation.</span></span></summary>
        <value><span data-ttu-id="507f8-276">Значение соли ключа для данной операции.</span><span class="sxs-lookup"><span data-stu-id="507f8-276">The key salt value for the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="507f8-277">Соль, случайный набор байтов используется, чтобы сделать несанкционированную расшифровку сообщения более сложной.</span><span class="sxs-lookup"><span data-stu-id="507f8-277">Salt, a random set of bytes, is used to make unauthorized decrypting of a message more difficult.</span></span> <span data-ttu-id="507f8-278">Атака по словарю — это атака, при которой злоумышленник пытается расшифровать зашифрованное сообщение путем сравнения зашифрованного значения с ранее вычисленными зашифрованными значениями для наиболее вероятных ключей.</span><span class="sxs-lookup"><span data-stu-id="507f8-278">A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</span></span> <span data-ttu-id="507f8-279">Эта атака становится намного сложнее при вводе соли или случайных байтов в конце пароля перед наследованием ключа.</span><span class="sxs-lookup"><span data-stu-id="507f8-279">This attack is made much more difficult by the introduction of salt, or random bytes, at the end of the password before the key derivation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="507f8-280">Указанный размер расширяющего значения менее 8 байт.</span><span class="sxs-lookup"><span data-stu-id="507f8-280">The specified salt size is smaller than 8 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="507f8-281">Расширяющее значение равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="507f8-281">The salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="507f8-282">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="507f8-282">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
