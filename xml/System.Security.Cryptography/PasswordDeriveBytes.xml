<Type Name="PasswordDeriveBytes" FullName="System.Security.Cryptography.PasswordDeriveBytes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b6be7f91e51417f52c098f71043f217cfdd01e51" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65014594" /></Metadata><TypeSignature Language="C#" Value="public class PasswordDeriveBytes : System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PasswordDeriveBytes extends System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.PasswordDeriveBytes" />
  <TypeSignature Language="VB.NET" Value="Public Class PasswordDeriveBytes&#xA;Inherits DeriveBytes" />
  <TypeSignature Language="C++ CLI" Value="public ref class PasswordDeriveBytes : System::Security::Cryptography::DeriveBytes" />
  <TypeSignature Language="F#" Value="type PasswordDeriveBytes = class&#xA;    inherit DeriveBytes" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DeriveBytes</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="37959-101">Формирует ключ из пароля с помощью расширения алгоритма PBKDF1.</span><span class="sxs-lookup"><span data-stu-id="37959-101">Derives a key from a password using an extension of the PBKDF1 algorithm.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37959-102">Этот класс использует расширение алгоритма PBKDF1, определенного в стандарте PKCS # 5 версии 2.0, для получения байтов, подходящих для использования в качестве материала ключа из пароля.</span><span class="sxs-lookup"><span data-stu-id="37959-102">This class uses an extension of the PBKDF1 algorithm defined in the PKCS#5 v2.0 standard to derive bytes suitable for use as key material from a password.</span></span> <span data-ttu-id="37959-103">Этот стандарт описан в IETF РРК 2898.</span><span class="sxs-lookup"><span data-stu-id="37959-103">The standard is documented in IETF RRC 2898.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="37959-104">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="37959-104">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="37959-105">Жестко запрограммированные пароли можно получить из сборки с помощью средства [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) , шестнадцатеричного редактора или простого открытия сборки в текстовом редакторе, например Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="37959-105">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37959-106">В следующем примере кода создается ключ на основе пароля с помощью <xref:System.Security.Cryptography.PasswordDeriveBytes> класса.</span><span class="sxs-lookup"><span data-stu-id="37959-106">The following code example creates a key from a password using the <xref:System.Security.Cryptography.PasswordDeriveBytes> class.</span></span>  
  
 [!code-cpp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/CS/sample.cs#1)]
 [!code-vb[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-107">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-107">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37959-108">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />.</span><span class="sxs-lookup"><span data-stu-id="37959-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (byte[] password, byte[] salt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.PasswordDeriveBytes : byte[] * byte[] -&gt; System.Security.Cryptography.PasswordDeriveBytes" Usage="new System.Security.Cryptography.PasswordDeriveBytes (password, salt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="salt" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="37959-109">Пароль, для которого необходимо сформировать ключ.</span><span class="sxs-lookup"><span data-stu-id="37959-109">The password to derive the key for.</span></span></param>
        <param name="salt"><span data-ttu-id="37959-110">Ключевая привязка, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-110">The key salt to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="37959-111">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем и ключевой привязкой, которые используются для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-111">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class specifying the password and key salt to use to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="37959-112">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="37959-112">Never hard code a password within your source code.</span></span>  <span data-ttu-id="37959-113">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="37959-113">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37959-114">В следующем примере кода создается ключ на основе пароля с помощью <xref:System.Security.Cryptography.PasswordDeriveBytes> класса.</span><span class="sxs-lookup"><span data-stu-id="37959-114">The following code example creates a key from a password using the <xref:System.Security.Cryptography.PasswordDeriveBytes> class.</span></span>  
  
 [!code-cpp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/CS/sample.cs#1)]
 [!code-vb[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-115">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-115">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (string strPassword, byte[] rgbSalt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strPassword, unsigned int8[] rgbSalt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strPassword As String, rgbSalt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(System::String ^ strPassword, cli::array &lt;System::Byte&gt; ^ rgbSalt);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.PasswordDeriveBytes : string * byte[] -&gt; System.Security.Cryptography.PasswordDeriveBytes" Usage="new System.Security.Cryptography.PasswordDeriveBytes (strPassword, rgbSalt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="strPassword" Type="System.String" />
        <Parameter Name="rgbSalt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="strPassword"><span data-ttu-id="37959-116">Пароль, для которого необходимо сформировать ключ.</span><span class="sxs-lookup"><span data-stu-id="37959-116">The password for which to derive the key.</span></span></param>
        <param name="rgbSalt"><span data-ttu-id="37959-117">Ключевая привязка, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-117">The key salt to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="37959-118">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем и ключевой привязкой, которые используются для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class with the password and key salt to use to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="37959-119">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="37959-119">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="37959-120">Жестко запрограммированные пароли можно получить из сборки с помощью средства [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) , шестнадцатеричного редактора или простого открытия сборки в текстовом редакторе, например Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="37959-120">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-121">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-121">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (byte[] password, byte[] salt, System.Security.Cryptography.CspParameters cspParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, class System.Security.Cryptography.CspParameters cspParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), cspParams As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, System::Security::Cryptography::CspParameters ^ cspParams);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.PasswordDeriveBytes : byte[] * byte[] * System.Security.Cryptography.CspParameters -&gt; System.Security.Cryptography.PasswordDeriveBytes" Usage="new System.Security.Cryptography.PasswordDeriveBytes (password, salt, cspParams)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="salt" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cspParams" Type="System.Security.Cryptography.CspParameters" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="37959-122">Пароль, для которого необходимо сформировать ключ.</span><span class="sxs-lookup"><span data-stu-id="37959-122">The password to derive the key for.</span></span></param>
        <param name="salt"><span data-ttu-id="37959-123">Ключевая привязка, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-123">The key salt to use to derive the key.</span></span></param>
        <param name="cspParams"><span data-ttu-id="37959-124">Параметры поставщика служб шифрования (CSP) для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-124">The cryptographic service provider (CSP) parameters for the operation.</span></span></param>
        <summary><span data-ttu-id="37959-125">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем, ключевой привязкой и параметрами поставщика служб шифрования (CSP), которые используются для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-125">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class specifying the password, key salt, and cryptographic service provider (CSP) to use to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="37959-126">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="37959-126">Never hard code a password within your source code.</span></span>  <span data-ttu-id="37959-127">Жестко запрограммированные пароли можно получить из сборки с помощью программы [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) l, шестнадцатеричного редактора или простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="37959-127">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) l, a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37959-128">В следующем примере кода создается ключ на основе пароля с помощью <xref:System.Security.Cryptography.PasswordDeriveBytes> класса.</span><span class="sxs-lookup"><span data-stu-id="37959-128">The following code example creates a key from a password using the <xref:System.Security.Cryptography.PasswordDeriveBytes> class.</span></span>  
  
 [!code-cpp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/CS/sample.cs#1)]
 [!code-vb[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-129">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-129">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (string strPassword, byte[] rgbSalt, System.Security.Cryptography.CspParameters cspParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strPassword, unsigned int8[] rgbSalt, class System.Security.Cryptography.CspParameters cspParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strPassword As String, rgbSalt As Byte(), cspParams As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(System::String ^ strPassword, cli::array &lt;System::Byte&gt; ^ rgbSalt, System::Security::Cryptography::CspParameters ^ cspParams);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.PasswordDeriveBytes : string * byte[] * System.Security.Cryptography.CspParameters -&gt; System.Security.Cryptography.PasswordDeriveBytes" Usage="new System.Security.Cryptography.PasswordDeriveBytes (strPassword, rgbSalt, cspParams)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="strPassword" Type="System.String" />
        <Parameter Name="rgbSalt" Type="System.Byte[]" />
        <Parameter Name="cspParams" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="strPassword"><span data-ttu-id="37959-130">Пароль, для которого необходимо сформировать ключ.</span><span class="sxs-lookup"><span data-stu-id="37959-130">The password for which to derive the key.</span></span></param>
        <param name="rgbSalt"><span data-ttu-id="37959-131">Ключевая привязка, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-131">The key salt to use to derive the key.</span></span></param>
        <param name="cspParams"><span data-ttu-id="37959-132">Параметры CSP для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-132">The CSP parameters for the operation.</span></span></param>
        <summary><span data-ttu-id="37959-133">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем, ключевой привязкой и параметрами поставщика служб шифрования (CSP), которые используются для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-133">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class with the password, key salt, and cryptographic service provider (CSP) parameters to use to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="37959-134">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="37959-134">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="37959-135">Жестко запрограммированные пароли можно получить из сборки с помощью средства [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) , шестнадцатеричного редактора или простого открытия сборки в текстовом редакторе, например Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="37959-135">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-136">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-136">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (byte[] password, byte[] salt, string hashName, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, string hashName, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), hashName As String, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, System::String ^ hashName, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.PasswordDeriveBytes : byte[] * byte[] * string * int -&gt; System.Security.Cryptography.PasswordDeriveBytes" Usage="new System.Security.Cryptography.PasswordDeriveBytes (password, salt, hashName, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="salt" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="iterations" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="37959-137">Пароль, для которого необходимо сформировать ключ.</span><span class="sxs-lookup"><span data-stu-id="37959-137">The password to derive the key for.</span></span></param>
        <param name="salt"><span data-ttu-id="37959-138">Ключевая привязка, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-138">The key salt to use to derive the key.</span></span></param>
        <param name="hashName"><span data-ttu-id="37959-139">Имя хэш-алгоритма, используемого для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-139">The hash algorithm to use to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="37959-140">Число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-140">The iteration count to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="37959-141">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем, ключевой привязкой, именем хэш-алгоритма и числом итераций, которые используются для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-141">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class specifying the password, key salt, hash name, and iterations to use to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="37959-142">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="37959-142">Never hard code a password within your source code.</span></span>  <span data-ttu-id="37959-143">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="37959-143">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="37959-144">Список имен хэш-алгоритмов см. в <xref:System.Security.Cryptography.CryptoConfig> разделе класс.</span><span class="sxs-lookup"><span data-stu-id="37959-144">For a list of hash algorithm names, see the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.CryptoConfig" />
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-145">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-145">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (string strPassword, byte[] rgbSalt, string strHashName, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strPassword, unsigned int8[] rgbSalt, string strHashName, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strPassword As String, rgbSalt As Byte(), strHashName As String, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(System::String ^ strPassword, cli::array &lt;System::Byte&gt; ^ rgbSalt, System::String ^ strHashName, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.PasswordDeriveBytes : string * byte[] * string * int -&gt; System.Security.Cryptography.PasswordDeriveBytes" Usage="new System.Security.Cryptography.PasswordDeriveBytes (strPassword, rgbSalt, strHashName, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="strPassword" Type="System.String" />
        <Parameter Name="rgbSalt" Type="System.Byte[]" />
        <Parameter Name="strHashName" Type="System.String" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="strPassword"><span data-ttu-id="37959-146">Пароль, для которого необходимо сформировать ключ.</span><span class="sxs-lookup"><span data-stu-id="37959-146">The password for which to derive the key.</span></span></param>
        <param name="rgbSalt"><span data-ttu-id="37959-147">Ключевая привязка, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-147">The key salt to use to derive the key.</span></span></param>
        <param name="strHashName"><span data-ttu-id="37959-148">Имя хэш-алгоритма для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-148">The name of the hash algorithm for the operation.</span></span></param>
        <param name="iterations"><span data-ttu-id="37959-149">Число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-149">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="37959-150">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем, ключевой привязкой, именем хэш-алгоритма и числом итераций, которые используются для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class with the password, key salt, hash name, and number of iterations to use to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="37959-151">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="37959-151">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="37959-152">Жестко запрограммированные пароли можно получить из сборки с помощью средства [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) , шестнадцатеричного редактора или простого открытия сборки в текстовом редакторе, например Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="37959-152">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
 <span data-ttu-id="37959-153">Список имен хэш-алгоритмов см. в <xref:System.Security.Cryptography.CryptoConfig> разделе класс.</span><span class="sxs-lookup"><span data-stu-id="37959-153">For a list of hash algorithm names, see the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.CryptoConfig" />
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-154">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-154">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (byte[] password, byte[] salt, string hashName, int iterations, System.Security.Cryptography.CspParameters cspParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, string hashName, int32 iterations, class System.Security.Cryptography.CspParameters cspParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), hashName As String, iterations As Integer, cspParams As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, System::String ^ hashName, int iterations, System::Security::Cryptography::CspParameters ^ cspParams);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.PasswordDeriveBytes : byte[] * byte[] * string * int * System.Security.Cryptography.CspParameters -&gt; System.Security.Cryptography.PasswordDeriveBytes" Usage="new System.Security.Cryptography.PasswordDeriveBytes (password, salt, hashName, iterations, cspParams)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="salt" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="iterations" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cspParams" Type="System.Security.Cryptography.CspParameters" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="37959-155">Пароль, для которого необходимо сформировать ключ.</span><span class="sxs-lookup"><span data-stu-id="37959-155">The password to derive the key for.</span></span></param>
        <param name="salt"><span data-ttu-id="37959-156">Ключевая привязка, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-156">The key salt to use to derive the key.</span></span></param>
        <param name="hashName"><span data-ttu-id="37959-157">Имя хэш-алгоритма, используемого для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-157">The hash algorithm to use to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="37959-158">Число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-158">The iteration count to use to derive the key.</span></span></param>
        <param name="cspParams"><span data-ttu-id="37959-159">Параметры поставщика служб шифрования (CSP) для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-159">The cryptographic service provider (CSP) parameters for the operation.</span></span></param>
        <summary><span data-ttu-id="37959-160">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем, ключевой привязкой, именем хэш-алгоритма, числом итераций и параметрами поставщика служб шифрования (CSP), которые используются для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-160">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class specifying the password, key salt, hash name, iterations, and cryptographic service provider (CSP) to use to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="37959-161">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="37959-161">Never hard code a password within your source code.</span></span>  <span data-ttu-id="37959-162">Жестко запрограммированные пароли могут быть получены из сборки с помощью [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричного редактора или путем простого открытия сборки в текстовом редакторе, например в Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="37959-162">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="37959-163">Список имен хэш-алгоритмов см. в <xref:System.Security.Cryptography.CryptoConfig> разделе класс.</span><span class="sxs-lookup"><span data-stu-id="37959-163">For a list of hash algorithm names, see the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.CryptoConfig" />
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-164">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-164">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (string strPassword, byte[] rgbSalt, string strHashName, int iterations, System.Security.Cryptography.CspParameters cspParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strPassword, unsigned int8[] rgbSalt, string strHashName, int32 iterations, class System.Security.Cryptography.CspParameters cspParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strPassword As String, rgbSalt As Byte(), strHashName As String, iterations As Integer, cspParams As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(System::String ^ strPassword, cli::array &lt;System::Byte&gt; ^ rgbSalt, System::String ^ strHashName, int iterations, System::Security::Cryptography::CspParameters ^ cspParams);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.PasswordDeriveBytes : string * byte[] * string * int * System.Security.Cryptography.CspParameters -&gt; System.Security.Cryptography.PasswordDeriveBytes" Usage="new System.Security.Cryptography.PasswordDeriveBytes (strPassword, rgbSalt, strHashName, iterations, cspParams)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="strPassword" Type="System.String" />
        <Parameter Name="rgbSalt" Type="System.Byte[]" />
        <Parameter Name="strHashName" Type="System.String" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="cspParams" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="strPassword"><span data-ttu-id="37959-165">Пароль, для которого необходимо сформировать ключ.</span><span class="sxs-lookup"><span data-stu-id="37959-165">The password for which to derive the key.</span></span></param>
        <param name="rgbSalt"><span data-ttu-id="37959-166">Ключевая привязка, используемая для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-166">The key salt to use to derive the key.</span></span></param>
        <param name="strHashName"><span data-ttu-id="37959-167">Имя хэш-алгоритма для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-167">The name of the hash algorithm for the operation.</span></span></param>
        <param name="iterations"><span data-ttu-id="37959-168">Число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-168">The number of iterations for the operation.</span></span></param>
        <param name="cspParams"><span data-ttu-id="37959-169">Параметры CSP для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-169">The CSP parameters for the operation.</span></span></param>
        <summary><span data-ttu-id="37959-170">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем, ключевой привязкой, именем хэш-алгоритма, числом итераций и параметрами поставщика служб шифрования (CSP), которые используются для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-170">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class with the password, key salt, hash name, number of iterations, and cryptographic service provider (CSP) parameters to use to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="37959-171">Никогда не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="37959-171">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="37959-172">Жестко запрограммированные пароли можно получить из сборки с помощью средства [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) , шестнадцатеричного редактора или простого открытия сборки в текстовом редакторе, например Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="37959-172">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
 <span data-ttu-id="37959-173">Список имен хэш-алгоритмов см. в <xref:System.Security.Cryptography.CryptoConfig> разделе класс.</span><span class="sxs-lookup"><span data-stu-id="37959-173">For a list of hash algorithm names, see the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.CryptoConfig" />
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-174">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-174">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CryptDeriveKey">
      <MemberSignature Language="C#" Value="public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] CryptDeriveKey(string algname, string alghashname, int32 keySize, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CryptDeriveKey (algname As String, alghashname As String, keySize As Integer, rgbIV As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ CryptDeriveKey(System::String ^ algname, System::String ^ alghashname, int keySize, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="member this.CryptDeriveKey : string * string * int * byte[] -&gt; byte[]" Usage="passwordDeriveBytes.CryptDeriveKey (algname, alghashname, keySize, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algname" Type="System.String" />
        <Parameter Name="alghashname" Type="System.String" />
        <Parameter Name="keySize" Type="System.Int32" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algname"><span data-ttu-id="37959-175">Имя алгоритма, для которого необходимо сформировать ключ.</span><span class="sxs-lookup"><span data-stu-id="37959-175">The algorithm name for which to derive the key.</span></span></param>
        <param name="alghashname"><span data-ttu-id="37959-176">Имя хэш-алгоритма, используемого для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-176">The hash algorithm name to use to derive the key.</span></span></param>
        <param name="keySize"><span data-ttu-id="37959-177">Размер формируемого ключа в битах.</span><span class="sxs-lookup"><span data-stu-id="37959-177">The size of the key, in bits, to derive.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="37959-178">Вектор инициализации, используемый для формирования ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-178">The initialization vector (IV) to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="37959-179">Получает криптографический ключ из объекта <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />.</span><span class="sxs-lookup"><span data-stu-id="37959-179">Derives a cryptographic key from the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> object.</span></span></summary>
        <returns><span data-ttu-id="37959-180">Сформированный ключ.</span><span class="sxs-lookup"><span data-stu-id="37959-180">The derived key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37959-181">Эта функция является оболочкой для функции Crypto API Криптдеривекэй () и предназначена для обеспечения взаимодействия с приложениями, использующими API шифрования.</span><span class="sxs-lookup"><span data-stu-id="37959-181">This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</span></span>  
  
 <span data-ttu-id="37959-182">`keySize` Если параметр имеет значение 0 бит, используется размер ключа по умолчанию для указанного алгоритма.</span><span class="sxs-lookup"><span data-stu-id="37959-182">If the `keySize` parameter is set to 0 bits, the default key size for the specified algorithm is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37959-183">Этот пример кода является частью большого примера, <xref:System.Security.Cryptography.PasswordDeriveBytes> приведенного для класса.</span><span class="sxs-lookup"><span data-stu-id="37959-183">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.PasswordDeriveBytes> class.</span></span>  
  
 [!code-cpp[Cryptography.PasswordDerivedbytes#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/cpp/sample.cpp#2)]
 [!code-csharp[Cryptography.PasswordDerivedbytes#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/CS/sample.cs#2)]
 [!code-vb[Cryptography.PasswordDerivedbytes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/VB/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="37959-184">Параметр <paramref name="keySize" /> является неверным.</span><span class="sxs-lookup"><span data-stu-id="37959-184">The <paramref name="keySize" /> parameter is incorrect.</span></span>  
  
<span data-ttu-id="37959-185">- или -</span><span class="sxs-lookup"><span data-stu-id="37959-185">-or-</span></span> 
<span data-ttu-id="37959-186">Невозможно получить поставщика служб шифрования (CSP).</span><span class="sxs-lookup"><span data-stu-id="37959-186">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
<span data-ttu-id="37959-187">- или -</span><span class="sxs-lookup"><span data-stu-id="37959-187">-or-</span></span> 
<span data-ttu-id="37959-188">Значение параметра <paramref name="algname" /> не является допустимым именем алгоритма.</span><span class="sxs-lookup"><span data-stu-id="37959-188">The <paramref name="algname" /> parameter is not a valid algorithm name.</span></span>  
  
<span data-ttu-id="37959-189">-или-</span><span class="sxs-lookup"><span data-stu-id="37959-189">-or-</span></span> 
<span data-ttu-id="37959-190">Значение параметра <paramref name="alghashname" /> не является допустимым именем хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="37959-190">The <paramref name="alghashname" /> parameter is not a valid hash algorithm name.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-191">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-191">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="passwordDeriveBytes.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="37959-192">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="37959-192"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="37959-193">Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> (при необходимости освобождает и управляемые ресурсы).</span><span class="sxs-lookup"><span data-stu-id="37959-193">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37959-194">Этот метод вызывается открытым `Dispose()` методом `Finalize` и методом.</span><span class="sxs-lookup"><span data-stu-id="37959-194">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="37959-195">`Dispose()`вызывает защищенный `Dispose(Boolean)` метод с параметром `disposing` , для `true`которого задано значение.</span><span class="sxs-lookup"><span data-stu-id="37959-195">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="37959-196">`Finalize`вызывает метод `disposing` `false`с параметром, равным. `Dispose`</span><span class="sxs-lookup"><span data-stu-id="37959-196">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="37959-197">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Security.Cryptography.PasswordDeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="37959-197">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.PasswordDeriveBytes> references.</span></span> <span data-ttu-id="37959-198">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="37959-198">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="37959-199">Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="37959-199">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="37959-200">При переопределении <see langword="Dispose(Boolean)" />следует избегать ссылок на объекты, которые были удалены ранее при предыдущем <see langword="Dispose" />вызове метода.</span><span class="sxs-lookup"><span data-stu-id="37959-200">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="37959-201">Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />см. в разделе [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="37959-201">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="37959-202">Дополнительные сведения о <see langword="Dispose" /> и <see langword="Finalize" />см. в разделе Очистка неуправляемых [ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="37959-202">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~PasswordDeriveBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!PasswordDeriveBytes ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="passwordDeriveBytes.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37959-203">Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как он будет уничтожен во время сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="37959-203">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (cb As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(int cb);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int -&gt; byte[]" Usage="passwordDeriveBytes.GetBytes cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Rfc2898DeriveBytes replaces PasswordDeriveBytes for deriving key material from a password and is preferred in new applications.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb"><span data-ttu-id="37959-204">Число генерируемых псевдослучайных байтов ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-204">The number of pseudo-random key bytes to generate.</span></span></param>
        <summary><span data-ttu-id="37959-205">Возвращает псевдослучайные байты ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-205">Returns pseudo-random key bytes.</span></span></summary>
        <returns><span data-ttu-id="37959-206">Массив байтов, заполненный псевдослучайными байтами ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-206">A byte array filled with pseudo-random key bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37959-207">Этот метод может создавать любое число псевдослучайных байтов.</span><span class="sxs-lookup"><span data-stu-id="37959-207">This method can create any number of pseudo-random bytes.</span></span> <span data-ttu-id="37959-208">Однако сила последовательности байтов ограничена числом байтов в выходных данных хэша.</span><span class="sxs-lookup"><span data-stu-id="37959-208">However, the strength of the byte sequence is limited by the number of bytes in the hash output.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-209">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-209">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.PasswordDeriveBytes.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.Security.Cryptography.PasswordDeriveBytes.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37959-210">Получает или задает имя хэш-алгоритма для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-210">Gets or sets the name of the hash algorithm for the operation.</span></span></summary>
        <value><span data-ttu-id="37959-211">Имя хэш-алгоритма для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-211">The name of the hash algorithm for the operation.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="37959-212">Имя хэш-алгоритма является фиксированным, и предпринята попытка изменить это значение.</span><span class="sxs-lookup"><span data-stu-id="37959-212">The name of the hash value is fixed and an attempt is made to change this value.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-213">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-213">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IterationCount">
      <MemberSignature Language="C#" Value="public int IterationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IterationCount" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.PasswordDeriveBytes.IterationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IterationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IterationCount : int with get, set" Usage="System.Security.Cryptography.PasswordDeriveBytes.IterationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37959-214">Получает или задает число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-214">Gets or sets the number of iterations for the operation.</span></span></summary>
        <value><span data-ttu-id="37959-215">Число итераций для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-215">The number of iterations for the operation.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="37959-216">Число итераций является фиксированным, и предпринята попытка изменить это значение.</span><span class="sxs-lookup"><span data-stu-id="37959-216">The number of iterations is fixed and an attempt is made to change this value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="37959-217">Невозможно задать свойство, поскольку его значение находится вне диапазона.</span><span class="sxs-lookup"><span data-stu-id="37959-217">The property cannot be set because its value is out of range.</span></span> <span data-ttu-id="37959-218">Значение этого свойства не должно быть отрицательным.</span><span class="sxs-lookup"><span data-stu-id="37959-218">This property requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-219">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-219">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="passwordDeriveBytes.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37959-220">Восстанавливает состояние данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-220">Resets the state of the operation.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-221">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-221">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Salt">
      <MemberSignature Language="C#" Value="public byte[] Salt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Salt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.PasswordDeriveBytes.Salt" />
      <MemberSignature Language="VB.NET" Value="Public Property Salt As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Salt { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Salt : byte[] with get, set" Usage="System.Security.Cryptography.PasswordDeriveBytes.Salt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37959-222">Получает или задает значение ключевой привязки для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-222">Gets or sets the key salt value for the operation.</span></span></summary>
        <value><span data-ttu-id="37959-223">Значение ключевой привязки для данной операции.</span><span class="sxs-lookup"><span data-stu-id="37959-223">The key salt value for the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37959-224">Атака по словарю — это атака, при которой злоумышленник пытается расшифровать зашифрованное сообщение путем сравнения зашифрованного значения с ранее вычисленными зашифрованными значениями для наиболее вероятных ключей.</span><span class="sxs-lookup"><span data-stu-id="37959-224">A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</span></span> <span data-ttu-id="37959-225">Эта атака становится намного сложнее, чем введение случайных байтов в конце пароля перед наследованием ключа.</span><span class="sxs-lookup"><span data-stu-id="37959-225">This attack is made much more difficult by the introduction of random bytes at the end of the password before the key derivation.</span></span> <span data-ttu-id="37959-226">Эти случайные байты называются Salt.</span><span class="sxs-lookup"><span data-stu-id="37959-226">These random bytes are known as salt.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="37959-227">Значение ключевой привязки является фиксированным, и предпринята попытка изменить это значение.</span><span class="sxs-lookup"><span data-stu-id="37959-227">The key salt value is fixed and an attempt is made to change this value.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="37959-228">службы шифрования</span><span class="sxs-lookup"><span data-stu-id="37959-228">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>