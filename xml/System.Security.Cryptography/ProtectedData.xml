<Type Name="ProtectedData" FullName="System.Security.Cryptography.ProtectedData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38eb090e97e5972009f0065e48a5b55765ceee17" /><Meta Name="ms.sourcegitcommit" Value="3575d47a0ba065e8986f03d99279f478811907b8" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/20/2019" /><Meta Name="ms.locfileid" Value="65922695" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProtectedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedData" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedData sealed" />
  <TypeSignature Language="F#" Value="type ProtectedData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет методы для шифрования и расшифровки данных. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

Этот класс предоставляет доступ к API защиты данных (DPAPI) доступен в операционных системах Windows. Это служба, которая предоставляется операционной системой и не требует дополнительных библиотек. Он обеспечивает защиту, используя учетные данные пользователя или компьютера для шифрования или расшифровки данных.

> [!IMPORTANT]
> Так как он зависит от DPAPI, `ProtectedData` класс поддерживается только на платформе Windows. Его использование в .NET Core на платформах, отличных от Windows создает <xref:System.PlatformNotSupportedException>.
  
Класс состоит из двух оболочки для неуправляемого интерфейса DPAPI <xref:System.Security.Cryptography.ProtectedData.Protect%2A> и <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A>. Эти два метода могут использоваться для шифрования и расшифровки данных, такие как пароли, ключи и строки подключения.  
  
При использовании этих методов во время олицетворения пользователя, может появиться следующая ошибка: «Ключ не может быть использован в указанном состоянии.» Это происходит, потому что DPAPI сохраняет данные ключей в профиле пользователя. Если профиль не загружен, DPAPI не сможете выполнять расшифровку. Чтобы предотвратить эту ошибку, загружает профиль пользователя, которого необходимо олицетворить перед вызовом любого из этих методов. С помощью DPAPI с олицетворением могут повлечь за собой существенную сложность и требует тщательного планирования вариантов.  

## Examples  
 В следующем примере показано, как для использования защиты данных.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Protect (userData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">Массив байтов, содержащий данные для зашифровки.</param>
        <param name="optionalEntropy">Необязательный дополнительный байтовый массив, используемый для увеличения сложности шифрования, или <see langword="null" /> дополнительная сложность не требуется.</param>
        <param name="scope">Одно из значений перечисления, определяющее область шифрования.</param>
        <summary>Зашифровывает данные в заданном массиве байтов и возвращает массив байтов, содержащий зашифрованные данные.</summary>
        <returns>Массив байтов, представляющий зашифрованные данные.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может использоваться для шифрования данных, такие как пароли, ключи и строки подключения. `optionalEntropy` Параметра позволяет добавлять данные для увеличения сложности шифрования; укажите `null` дополнительная сложность не требуется. Если указано, эта информация также должно использоваться, при расшифровке данных с помощью <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A> метод.  
  
> [!NOTE]
>  Если вы используете этот метод во время олицетворения пользователя, может появиться следующая ошибка: «Ключ не может быть использован в указанном состоянии.» Чтобы предотвратить эту ошибку, загружает профиль пользователя, которого необходимо олицетворить перед вызовом метода.  
  
   
  
## Examples  
 В следующем примере показано, как для использования защиты данных.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="userData" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Сбой шифрования.</exception>
        <exception cref="T:System.NotSupportedException">Операционная система не поддерживает этот метод.</exception>
        <exception cref="T:System.OutOfMemoryException">Системе не хватило памяти при шифровании данных.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Только в .NET Core: Вызовы <c>защитить</c> метод поддерживаются Windows только в операционных системах.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">со связанным объектом <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData" /> флаг для разрешения для защиты данных.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] encryptedData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] encryptedData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (encryptedData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Unprotect (encryptedData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">Массив байтов, содержащий данные, зашифрованные с помощью <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> метод.</param>
        <param name="optionalEntropy">Необязательный дополнительный байтовый массив, который использовался для шифрования данных, или <see langword="null" /> Если дополнительный байтовый массив не использовался.</param>
        <param name="scope">Одно из значений перечисления, задающее область защиты данных, который использовался для шифрования данных.</param>
        <summary>Расшифровывает данные в заданном массиве байтов и возвращает массив байтов, содержащий расшифрованные данные.</summary>
        <returns>Массив байтов, представляющий расшифрованные данные.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать для отмены защиты данных, которые были зашифрованы с помощью <xref:System.Security.Cryptography.ProtectedData.Protect%2A> метод. Если `optionalEntropy` параметр использовался во время шифрования, он должен быть введен для расшифровки данных.  
  
> [!NOTE]
>  Если вы используете этот метод во время олицетворения пользователя, может появиться следующая ошибка: «Ключ не может быть использован в указанном состоянии.» Чтобы предотвратить эту ошибку, загружает профиль пользователя, которого необходимо олицетворить перед вызовом метода.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать защиту данных.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="encryptedData" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Сбой расшифровки.</exception>
        <exception cref="T:System.NotSupportedException">Операционная система не поддерживает этот метод.</exception>
        <exception cref="T:System.OutOfMemoryException">Недостаточно памяти.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Только в .NET Core: Вызовы <c>Unprotect</c> метод поддерживаются Windows только в операционных системах.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">со связанным объектом <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData" /> флаг для разрешения снять защиту данных.</permission>
      </Docs>
    </Member>
  </Members>
</Type>