<Type Name="ClientWebSocket" FullName="System.Net.WebSockets.ClientWebSocket">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77c5fc7f62eb2ac7ac82eaa423d2d1aa5f1588e1" /><Meta Name="ms.sourcegitcommit" Value="d9596ce1265534066e1fb6f9d77b02c61ff6f727" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/22/2019" /><Meta Name="ms.locfileid" Value="74320748" /></Metadata><TypeSignature Language="C#" Value="public class ClientWebSocket : System.Net.WebSockets.WebSocket, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientWebSocket extends System.Net.WebSockets.WebSocket implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebSockets.ClientWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientWebSocket&#xA;Inherits WebSocket&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientWebSocket : System::Net::WebSockets::WebSocket, IDisposable" />
  <TypeSignature Language="F#" Value="type ClientWebSocket = class&#xA;    inherit WebSocket&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c04b0-101">Предоставляет клиент для подключения к службам WebSocket.</span><span class="sxs-lookup"><span data-stu-id="c04b0-101">Provides a client for connecting to WebSocket services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c04b0-102">Некоторые классы и элементы класса в пространстве имен <xref:System.Net.WebSockets> поддерживаются в Windows 7, Windows Vista SP2 и Windows Server 2008.</span><span class="sxs-lookup"><span data-stu-id="c04b0-102">Some of the classes and class elements in the <xref:System.Net.WebSockets> namespace are supported on Windows 7, Windows Vista SP2, and Windows Server 2008.</span></span> <span data-ttu-id="c04b0-103">Однако в Windows 8 и Windows Server 2012 поддерживаются только общедоступные реализации клиентских и серверных WebSocket.</span><span class="sxs-lookup"><span data-stu-id="c04b0-103">However, the only public implementations of client and server WebSockets are supported on Windows 8 and Windows Server 2012.</span></span> <span data-ttu-id="c04b0-104">Элементы класса в пространстве имен <xref:System.Net.WebSockets>, которые поддерживаются в Windows 7, Windows Vista SP2 и Windows Server 2008, являются абстрактными элементами класса.</span><span class="sxs-lookup"><span data-stu-id="c04b0-104">The class elements in the <xref:System.Net.WebSockets> namespace that are supported on Windows 7, Windows Vista SP2, and Windows Server 2008 are abstract class elements.</span></span> <span data-ttu-id="c04b0-105">Это позволяет разработчику приложения наследовать и расширять эти абстрактные классы классов и элементы класса с помощью фактической реализации клиентских WebSocket.</span><span class="sxs-lookup"><span data-stu-id="c04b0-105">This allows an application developer to inherit and extend these abstract class classes and class elements with an actual implementation of client WebSockets.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientWebSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientWebSocket();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c04b0-106">Создает экземпляр класса <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="c04b0-106">Creates an instance of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="clientWebSocket.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c04b0-107">Прерывает подключение и отменяет все ожидающие операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="c04b0-107">Aborts the connection and cancels any pending IO operations.</span></span></summary>
        <remarks><span data-ttu-id="c04b0-108">`ClientWebSocket` нельзя использовать повторно после его отмены.</span><span class="sxs-lookup"><span data-stu-id="c04b0-108">The `ClientWebSocket` cannot be reused once it is aborted.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.CloseAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="c04b0-109">Состояние закрытия WebSocket.</span><span class="sxs-lookup"><span data-stu-id="c04b0-109">The WebSocket close status.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="c04b0-110">Описание состояния закрытия.</span><span class="sxs-lookup"><span data-stu-id="c04b0-110">A description of the close status.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c04b0-111">Токен отмены, используемый для распространения уведомления о том, что эта операция должна быть отменена.</span><span class="sxs-lookup"><span data-stu-id="c04b0-111">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="c04b0-112">Закрывает экземпляр <see cref="T:System.Net.WebSockets.ClientWebSocket" /> как асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c04b0-112">Close the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="c04b0-113">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c04b0-113">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c04b0-114">Эта операция не будет блокироваться.</span><span class="sxs-lookup"><span data-stu-id="c04b0-114">This operation will not block.</span></span> <span data-ttu-id="c04b0-115">Возвращенный объект <xref:System.Threading.Tasks.Task> будет завершен после закрытия экземпляра <xref:System.Net.WebSockets.ClientWebSocket>.</span><span class="sxs-lookup"><span data-stu-id="c04b0-115">The returned <xref:System.Threading.Tasks.Task> object will complete after the <xref:System.Net.WebSockets.ClientWebSocket> instance is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.CloseOutputAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="c04b0-116">Состояние закрытия WebSocket.</span><span class="sxs-lookup"><span data-stu-id="c04b0-116">The WebSocket close status.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="c04b0-117">Описание состояния закрытия.</span><span class="sxs-lookup"><span data-stu-id="c04b0-117">A description of the close status.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c04b0-118">Токен отмены, используемый для распространения уведомления о том, что эта операция должна быть отменена.</span><span class="sxs-lookup"><span data-stu-id="c04b0-118">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="c04b0-119">Закрывает вывод для экземпляра <see cref="T:System.Net.WebSockets.ClientWebSocket" /> как асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c04b0-119">Close the output for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="c04b0-120">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c04b0-120">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c04b0-121">Эта операция не будет блокироваться.</span><span class="sxs-lookup"><span data-stu-id="c04b0-121">This operation will not block.</span></span> <span data-ttu-id="c04b0-122">Возвращенный объект <xref:System.Threading.Tasks.Task> будет завершен после закрытия выходных данных в экземпляре <xref:System.Net.WebSockets.ClientWebSocket>.</span><span class="sxs-lookup"><span data-stu-id="c04b0-122">The returned <xref:System.Threading.Tasks.Task> object will complete after the output on the <xref:System.Net.WebSockets.ClientWebSocket> instance is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatus : Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" Usage="System.Net.WebSockets.ClientWebSocket.CloseStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c04b0-123">Возвращает причину, по которой подтверждение закрытия было инициировано для экземпляра <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="c04b0-123">Gets the reason why the close handshake was initiated on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="c04b0-124">Причина, по которой было инициировано подтверждение закрытия.</span><span class="sxs-lookup"><span data-stu-id="c04b0-124">The reason why the close handshake was initiated.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatusDescription : string" Usage="System.Net.WebSockets.ClientWebSocket.CloseStatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c04b0-125">Возвращает описание причины, по которой экземпляр <see cref="T:System.Net.WebSockets.ClientWebSocket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="c04b0-125">Gets a description of the reason why the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance was closed.</span></span></summary>
        <value><span data-ttu-id="c04b0-126">Описание причины, по которой экземпляр <see cref="T:System.Net.WebSockets.ClientWebSocket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="c04b0-126">The description of the reason why the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance was closed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Uri uri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Uri uri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(Uri ^ uri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.ConnectAsync (uri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="c04b0-127">URI сервера WebSocket для подключения.</span><span class="sxs-lookup"><span data-stu-id="c04b0-127">The URI of the WebSocket server to connect to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c04b0-128">Токен отмены, используемый для распространения уведомления о том, что эта операция должна быть отменена.</span><span class="sxs-lookup"><span data-stu-id="c04b0-128">A cancellation token used to propagate notification that the  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="c04b0-129">Подключение к серверу WebSocket в виде асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="c04b0-129">Connect to a WebSocket server as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="c04b0-130">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c04b0-130">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c04b0-131">Метод <xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A> инициирует подтверждение соединения WebSocket с назначением удаленной сети, а затем согласовывает подпротокол.</span><span class="sxs-lookup"><span data-stu-id="c04b0-131">The <xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A> method initiates the WebSocket handshake with a remote network destination, and then negotiates the sub-protocol.</span></span>  
  
 <span data-ttu-id="c04b0-132">Для простых подключений WebSocket используйте схему `ws://` в универсальном коде ресурса (URI).</span><span class="sxs-lookup"><span data-stu-id="c04b0-132">For plain WebSocket connections, use the `ws://` scheme in the uri.</span></span> <span data-ttu-id="c04b0-133">Для защищенных подключений WebSocket по протоколу TLS/SSL используйте схему `wss://`.</span><span class="sxs-lookup"><span data-stu-id="c04b0-133">For secure WebSocket connections over TLS/SSL, use the `wss://` scheme.</span></span>  
  
 <span data-ttu-id="c04b0-134">Эта операция не будет блокироваться.</span><span class="sxs-lookup"><span data-stu-id="c04b0-134">This operation will not block.</span></span> <span data-ttu-id="c04b0-135">Возвращенный объект <xref:System.Threading.Tasks.Task> будет завершен после завершения запроса подключения на экземпляре <xref:System.Net.WebSockets.ClientWebSocket>.</span><span class="sxs-lookup"><span data-stu-id="c04b0-135">The returned <xref:System.Threading.Tasks.Task> object will complete after the connect request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="clientWebSocket.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c04b0-136">Высвобождает неуправляемые ресурсы, используемые экземпляром <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="c04b0-136">Releases the unmanaged resources used by the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.WebSockets.ClientWebSocketOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebSockets.ClientWebSocketOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As ClientWebSocketOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebSockets::ClientWebSocketOptions ^ Options { System::Net::WebSockets::ClientWebSocketOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Net.WebSockets.ClientWebSocketOptions" Usage="System.Net.WebSockets.ClientWebSocket.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.ClientWebSocketOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c04b0-137">Возвращает параметры WebSocket для экземпляра <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="c04b0-137">Gets the WebSocket options for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="c04b0-138">Параметры WebSocket для экземпляра <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="c04b0-138">The WebSocket options for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" Usage="clientWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c04b0-139">Буфер для получения ответа.</span><span class="sxs-lookup"><span data-stu-id="c04b0-139">The buffer to receive the response.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c04b0-140">Токен отмены, используемый для распространения уведомления о том, что эта операция должна быть отменена.</span><span class="sxs-lookup"><span data-stu-id="c04b0-140">A cancellation token used to propagate notification that this operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="c04b0-141">Извлекает данные по <see cref="T:System.Net.WebSockets.ClientWebSocket" /> в виде асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="c04b0-141">Receives data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="c04b0-142">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c04b0-142">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c04b0-143">Эта операция не будет блокироваться.</span><span class="sxs-lookup"><span data-stu-id="c04b0-143">This operation will not block.</span></span> <span data-ttu-id="c04b0-144">Возвращенный объект <xref:System.Threading.Tasks.Task%601> будет завершен после завершения запроса Receive на экземпляре <xref:System.Net.WebSockets.ClientWebSocket>.</span><span class="sxs-lookup"><span data-stu-id="c04b0-144">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the receive request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="c04b0-145">Для каждого <xref:System.Net.WebSockets.ClientWebSocket>ного объекта поддерживается только одна отправка и одно получение.</span><span class="sxs-lookup"><span data-stu-id="c04b0-145">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c04b0-146"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> не подключен.</span><span class="sxs-lookup"><span data-stu-id="c04b0-146">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> is not connected.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c04b0-147"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="c04b0-147">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt; ReceiveAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype System.Net.WebSockets.ValueWebSocketReceiveResult&gt; ReceiveAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask&lt;System::Net::WebSockets::ValueWebSocketReceiveResult&gt; ReceiveAsync(Memory&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReceiveAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt;" Usage="clientWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c04b0-148">Область памяти для получения ответа.</span><span class="sxs-lookup"><span data-stu-id="c04b0-148">The region of memory to receive the response.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c04b0-149">Токен отмены, используемый для распространения уведомления о том, что эта операция должна быть отменена.</span><span class="sxs-lookup"><span data-stu-id="c04b0-149">A cancellation token used to propagate notification that this operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="c04b0-150">Извлекает данные по <see cref="T:System.Net.WebSockets.ClientWebSocket" /> в виде асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="c04b0-150">Receives data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="c04b0-151">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c04b0-151">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c04b0-152">Эта операция не будет блокироваться.</span><span class="sxs-lookup"><span data-stu-id="c04b0-152">This operation will not block.</span></span> <span data-ttu-id="c04b0-153">Возвращенный объект <xref:System.Threading.Tasks.Task%601> будет завершен после завершения запроса Receive на экземпляре <xref:System.Net.WebSockets.ClientWebSocket>.</span><span class="sxs-lookup"><span data-stu-id="c04b0-153">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the receive request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="c04b0-154">Для каждого <xref:System.Net.WebSockets.ClientWebSocket>ного объекта поддерживается только одна отправка и одно получение.</span><span class="sxs-lookup"><span data-stu-id="c04b0-154">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c04b0-155"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> не подключен.</span><span class="sxs-lookup"><span data-stu-id="c04b0-155">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> is not connected.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c04b0-156"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="c04b0-156">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c04b0-157">Буфер, содержащий отправляемое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c04b0-157">The buffer containing the message to be sent.</span></span></param>
        <param name="messageType"><span data-ttu-id="c04b0-158">Одно из значений перечисления, которое указывает, содержит ли буфер открытый текст или текст в двоичном формате.</span><span class="sxs-lookup"><span data-stu-id="c04b0-158">One of the enumeration values that specifies whether the buffer is clear text or in a binary format.</span></span></param>
        <param name="endOfMessage"><span data-ttu-id="c04b0-159"><see langword="true" /> указывает, что эта отправка является последней асинхронной отправкой; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c04b0-159"><see langword="true" /> to indicate this is the final asynchronous send; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c04b0-160">Токен отмены, используемый для распространения уведомления о том, что эта операция должна быть отменена.</span><span class="sxs-lookup"><span data-stu-id="c04b0-160">A cancellation token used to propagate notification that this operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="c04b0-161">Отправляет данные по <see cref="T:System.Net.WebSockets.ClientWebSocket" /> в асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="c04b0-161">Sends data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="c04b0-162">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c04b0-162">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

 <span data-ttu-id="c04b0-163">Эта операция не будет блокироваться.</span><span class="sxs-lookup"><span data-stu-id="c04b0-163">This operation will not block.</span></span> <span data-ttu-id="c04b0-164">Возвращенный объект <xref:System.Threading.Tasks.Task> будет завершен после завершения запроса send на экземпляре <xref:System.Net.WebSockets.ClientWebSocket>.</span><span class="sxs-lookup"><span data-stu-id="c04b0-164">The returned <xref:System.Threading.Tasks.Task> object will complete after the send request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="c04b0-165">Для каждого <xref:System.Net.WebSockets.ClientWebSocket>ного объекта поддерживается только одна отправка и одно получение.</span><span class="sxs-lookup"><span data-stu-id="c04b0-165">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c04b0-166"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> не подключен.</span><span class="sxs-lookup"><span data-stu-id="c04b0-166">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> is not connected.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c04b0-167"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="c04b0-167">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask SendAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask SendAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask SendAsync(ReadOnlyMemory&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : ReadOnlyMemory&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="clientWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="endOfMessage" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c04b0-168">Область памяти, содержащая отправляемое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c04b0-168">The region of memory containing the message to be sent.</span></span></param>
        <param name="messageType"><span data-ttu-id="c04b0-169">Одно из значений перечисления, которое указывает, содержит ли буфер открытый текст или текст в двоичном формате.</span><span class="sxs-lookup"><span data-stu-id="c04b0-169">One of the enumeration values that specifies whether the buffer is clear text or in a binary format.</span></span></param>
        <param name="endOfMessage"><span data-ttu-id="c04b0-170"><see langword="true" /> указывает, что эта отправка является последней асинхронной отправкой; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c04b0-170"><see langword="true" /> to indicate this is the final asynchronous send; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="c04b0-171">Токен отмены, используемый для распространения уведомления о том, что эта операция должна быть отменена.</span><span class="sxs-lookup"><span data-stu-id="c04b0-171">A cancellation token used to propagate notification that this operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="c04b0-172">Отправляет данные по <see cref="T:System.Net.WebSockets.ClientWebSocket" /> из диапазона памяти байтов, доступного только для чтения, в асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="c04b0-172">Sends data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> from a read-only byte memory range as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="c04b0-173">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="c04b0-173">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="c04b0-174">Эта операция не будет блокироваться.</span><span class="sxs-lookup"><span data-stu-id="c04b0-174">This operation will not block.</span></span> <span data-ttu-id="c04b0-175">Возвращенный объект <xref:System.Threading.Tasks.Task> будет завершен после завершения запроса send на экземпляре <xref:System.Net.WebSockets.ClientWebSocket>.</span><span class="sxs-lookup"><span data-stu-id="c04b0-175">The returned <xref:System.Threading.Tasks.Task> object will complete after the send request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>
  
<span data-ttu-id="c04b0-176">Для каждого <xref:System.Net.WebSockets.ClientWebSocket>ного объекта поддерживается только одна отправка и одно получение.</span><span class="sxs-lookup"><span data-stu-id="c04b0-176">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c04b0-177"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> не подключен.</span><span class="sxs-lookup"><span data-stu-id="c04b0-177">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> is not connected.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c04b0-178"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="c04b0-178">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Net.WebSockets.WebSocketState" Usage="System.Net.WebSockets.ClientWebSocket.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c04b0-179">Получает состояние WebSocket экземпляра <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="c04b0-179">Gets the WebSocket state of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="c04b0-180">Состояние WebSocket экземпляра <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="c04b0-180">The WebSocket state of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubProtocol : string" Usage="System.Net.WebSockets.ClientWebSocket.SubProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c04b0-181">Получает поддерживаемый подпротокол WebSocket для экземпляра <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="c04b0-181">Gets the supported WebSocket sub-protocol for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="c04b0-182">Поддерживаемый подпротокол WebSocket.</span><span class="sxs-lookup"><span data-stu-id="c04b0-182">The supported WebSocket sub-protocol.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
