<Type Name="MetaModel" FullName="System.Web.DynamicData.MetaModel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="feb8d8a6db298e8c4cf168c963f94f88f882dd60" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70712669" /></Metadata><TypeSignature Language="C#" Value="public class MetaModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaModel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaModel" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaModel" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaModel" />
  <TypeSignature Language="F#" Value="type MetaModel = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="23325-101">Представляет одну или несколько баз данных, используемых платформой динамических данных ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="23325-101">Represents one or multiple databases that are used by ASP.NET Dynamic Data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-102"><xref:System.Web.DynamicData.MetaModel> Тип позволяет зарегистрировать один или несколько контекстов данных для веб-приложения платформа динамических данных.</span><span class="sxs-lookup"><span data-stu-id="23325-102">The <xref:System.Web.DynamicData.MetaModel> type lets you register one or multiple data contexts for a Dynamic Data Web application.</span></span>  
  
 <span data-ttu-id="23325-103">Контекст данных — это объект, представляющий подключение к базе данных.</span><span class="sxs-lookup"><span data-stu-id="23325-103">A data context is an object that represents a database connection.</span></span> <span data-ttu-id="23325-104">Контекст данных имеет доступ к одной модели данных, которая представляет базу данных, доступную через это соединение.</span><span class="sxs-lookup"><span data-stu-id="23325-104">A data context has access to one data model which represents a database that is available through that connection.</span></span> <span data-ttu-id="23325-105">Модель данных — это объект, представляющий сущности данных базы данных в виде типов CLR.</span><span class="sxs-lookup"><span data-stu-id="23325-105">A data model is an object that represents a database's data entities as CLR types.</span></span> <span data-ttu-id="23325-106">Платформа динамических данных поддерживает модели данных на основе LINQ to SQL и Entity Framework ADO.NET.</span><span class="sxs-lookup"><span data-stu-id="23325-106">Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.</span></span>  
  
 <span data-ttu-id="23325-107">В Visual Studio типы моделей данных можно создавать с помощью шаблона **LINQ to SQL классы** или шаблона **EDM ADO.NET** .</span><span class="sxs-lookup"><span data-stu-id="23325-107">In Visual Studio, you can generate data-model types by using the **LINQ to SQL Classes** template or the **ADO.NET Entity Data Model** template.</span></span> <span data-ttu-id="23325-108">Эти шаблоны используют реляционный конструктор объектов (реляционный конструктор R) для модели LINQ to SQL или конструктор EDM ADO.NET (Entity Designer) для модели Entity Framework.</span><span class="sxs-lookup"><span data-stu-id="23325-108">These templates use the Object Relational Designer (O/R Designer) for the LINQ to SQL model, or the ADO.NET Entity Data Model Designer (Entity Designer) for the Entity Framework model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23325-109">В следующем примере показано, как использовать <xref:System.Web.DynamicData.MetaModel> тип для выполнения следующих задач, чтобы использовать автоматическое формирование шаблонов на веб-сайте ASP.NET:</span><span class="sxs-lookup"><span data-stu-id="23325-109">The following example shows how to use <xref:System.Web.DynamicData.MetaModel> type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:</span></span>  
  
-   <span data-ttu-id="23325-110">Получение модели данных для контекста данных по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="23325-110">Get the data model for the default data context.</span></span>  
  
-   <span data-ttu-id="23325-111">Получение модели данных для указанного контекста данных.</span><span class="sxs-lookup"><span data-stu-id="23325-111">Get the data model for a specified data context.</span></span>  
  
-   <span data-ttu-id="23325-112">Вычисление пути маршрутизации (определение URL-адреса) для указанной таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-112">Evaluate the routing path (determine the URL) for a specified table.</span></span>  
  
 <span data-ttu-id="23325-113">Пример состоит из страницы и файла кода программной части.</span><span class="sxs-lookup"><span data-stu-id="23325-113">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PlaceHolder.cs#1)]
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx#1)]
 [!code-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PlaceHolder.vb#1)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#2)]
 [!code-vb[System.Web.DynamicData.MetaModel#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#2)]  
  
 <span data-ttu-id="23325-114">Чтобы скомпилировать пример, вам потребуется следующее:</span><span class="sxs-lookup"><span data-stu-id="23325-114">To compile the example, you need the following:</span></span>  
  
-   [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)] <span data-ttu-id="23325-115">или [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].</span><span class="sxs-lookup"><span data-stu-id="23325-115">or [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].</span></span>  
  
-   <span data-ttu-id="23325-116">Веб-сайт платформа динамических данных.</span><span class="sxs-lookup"><span data-stu-id="23325-116">A Dynamic Data Web site.</span></span> <span data-ttu-id="23325-117">Дополнительные сведения см. [в разделе Пошаговое руководство. Создание нового платформа динамических данных веб-сайта с помощью формирования шаблонов](https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).</span><span class="sxs-lookup"><span data-stu-id="23325-117">For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).</span></span>  
  
 <span data-ttu-id="23325-118">См. пример кода времени выполнения этой функции: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).</span><span class="sxs-lookup"><span data-stu-id="23325-118">See a run-time code example of this feature: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).</span></span>  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException"><span data-ttu-id="23325-119">Может быть выброшено любым методом, при наличии ошибки регистрации контекста данных.</span><span class="sxs-lookup"><span data-stu-id="23325-119">Can be thrown by any method if there has been a data context registration error.</span></span></exception>
    <related type="Article" href="https://msdn.microsoft.com/library/ee5dd2fb-5bb8-4bd7-a13d-d0a2659c3870"><span data-ttu-id="23325-120">Настройка модели платформа динамических данных ASP.NET</span><span class="sxs-lookup"><span data-stu-id="23325-120">ASP.NET Dynamic Data Model Customization</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/45e477c0-5c6b-41f9-b2d0-2808fb4f6537"><span data-ttu-id="23325-121">Реляционный конструктор объектов</span><span class="sxs-lookup"><span data-stu-id="23325-121">Object Relational Designer (O/R Designer)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="23325-122">LINQ to SQL</span><span class="sxs-lookup"><span data-stu-id="23325-122">LINQ to SQL</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="23325-123">Как определить маршрут</span><span class="sxs-lookup"><span data-stu-id="23325-123">How to: Define a Route</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="23325-124">Создает новый экземпляр класса <see cref="T:System.Web.DynamicData.MetaModel" />.</span><span class="sxs-lookup"><span data-stu-id="23325-124">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23325-125">Создает новый экземпляр класса <see cref="T:System.Web.DynamicData.MetaModel" />.</span><span class="sxs-lookup"><span data-stu-id="23325-125">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-126">Обычно <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> конструктор вызывается `Application_Start` в методе файла Global. asax.</span><span class="sxs-lookup"><span data-stu-id="23325-126">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23325-127">В следующем примере показано, как использовать <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> конструктор для выполнения следующих задач:</span><span class="sxs-lookup"><span data-stu-id="23325-127">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="23325-128">Создайте экземпляр класса <xref:System.Web.DynamicData.MetaModel> .</span><span class="sxs-lookup"><span data-stu-id="23325-128">Instantiate the <xref:System.Web.DynamicData.MetaModel> class.</span></span>  
  
-   <span data-ttu-id="23325-129">Инициализируйте и зарегистрируйте <xref:System.Web.DynamicData.MetaModel> экземпляр.</span><span class="sxs-lookup"><span data-stu-id="23325-129">Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel (bool registerGlobally);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool registerGlobally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (registerGlobally As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel(bool registerGlobally);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaModel : bool -&gt; System.Web.DynamicData.MetaModel" Usage="new System.Web.DynamicData.MetaModel registerGlobally" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registerGlobally" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="registerGlobally"><span data-ttu-id="23325-130">Значение <see langword="true" />, если необходимо указать, что модель зарегистрирована глобально; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="23325-130"><see langword="true" /> to indicate that the model is registered globally; otherwise <see langword="false" />.</span></span> <span data-ttu-id="23325-131">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="23325-131">The default is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="23325-132">Создает новый экземпляр класса <see cref="T:System.Web.DynamicData.MetaModel" />.</span><span class="sxs-lookup"><span data-stu-id="23325-132">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-133">Этот конструктор определяет, зарегистрирована ли модель данных глобально, чтобы ее можно было извлечь с <xref:System.Web.DynamicData.MetaModel.GetModel%2A> помощью метода.</span><span class="sxs-lookup"><span data-stu-id="23325-133">This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method.</span></span> <span data-ttu-id="23325-134">Он позволяет создавать несколько моделей и использовать одни и те же типы сущностей, избегая конфликтов типов.</span><span class="sxs-lookup"><span data-stu-id="23325-134">It enables you to create multiple models and use the same entity types while avoiding type conflicts.</span></span>  
  
 <span data-ttu-id="23325-135">Обычно <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> конструктор вызывается `Application_Start` в методе файла Global. asax.</span><span class="sxs-lookup"><span data-stu-id="23325-135">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaTable CreateTable(class System.Web.DynamicData.ModelProviders.TableProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable (provider As TableProvider) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaTable ^ CreateTable(System::Web::DynamicData::ModelProviders::TableProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable&#xA;override this.CreateTable : System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.CreateTable provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.DynamicData.ModelProviders.TableProvider" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="23325-136">Поставщик для таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-136">The provider for the table.</span></span></param>
        <summary><span data-ttu-id="23325-137">Создает объект <see cref="T:System.Web.DynamicData.MetaTable" />.</span><span class="sxs-lookup"><span data-stu-id="23325-137">Instantiates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></summary>
        <returns><span data-ttu-id="23325-138">Новый экземпляр таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-138">A new instance of the table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-139"><xref:System.Web.DynamicData.MetaModel.CreateTable%2A> Метод можно переопределить для создания экземпляра производного типа.</span><span class="sxs-lookup"><span data-stu-id="23325-139">The <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> method can be overridden to instantiate a derived type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="T:System.Web.DynamicData.ModelProviders.TableProvider" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.DynamicData.MetaModel Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::DynamicData::MetaModel ^ Default { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaModel.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23325-140">Возвращает первый экземпляр модели данных, созданной приложением.</span><span class="sxs-lookup"><span data-stu-id="23325-140">Gets the first instance of a data model that is created by the application.</span></span></summary>
        <value><span data-ttu-id="23325-141">Экземпляр модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-141">The data-model instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-142">Это свойство предоставляет простой способ ссылки на экземпляр модели данных по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="23325-142">This property provides a simple way to reference the default data-model instance.</span></span> <span data-ttu-id="23325-143">Если приложение использует несколько моделей, необходимо предоставить собственный способ хранения ссылок на дополнительные модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-143">If the application uses multiple models, you must provide your own way to store references to the additional data models.</span></span> <span data-ttu-id="23325-144">Чтобы найти определенную модель данных, вызовите <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="23325-144">To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23325-145">В следующем примере показано, как использовать <xref:System.Web.DynamicData.MetaModel.Default%2A> свойство <xref:System.Web.DynamicData.MetaModel.GetModel%2A> в методе для получения модели данных по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="23325-145">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Default%2A> property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.</span></span>  
  
 <span data-ttu-id="23325-146">Полный пример см. в <xref:System.Web.DynamicData.MetaModel> разделе Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="23325-146">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicDataFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string DynamicDataFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicDataFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicDataFolderVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicDataFolderVirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicDataFolderVirtualPath : string with get, set" Usage="System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.DynamicDataFolderVirtualPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23325-147">Возвращает или задает виртуальный путь к папке DynamicData веб-узла.</span><span class="sxs-lookup"><span data-stu-id="23325-147">Gets or sets the virtual path of the DynamicData folder in the Web site.</span></span></summary>
        <value><span data-ttu-id="23325-148">Виртуальный путь к папке DynamicData.</span><span class="sxs-lookup"><span data-stu-id="23325-148">The virtual path of the DynamicData folder.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-149">Это свойство позволяет изменить виртуальный путь к папке DynamicData.</span><span class="sxs-lookup"><span data-stu-id="23325-149">This property enables you to change the virtual path of the DynamicData folder.</span></span> <span data-ttu-id="23325-150">Значение по умолчанию — "~/Динамикдата".</span><span class="sxs-lookup"><span data-stu-id="23325-150">The default value is "~/DynamicData".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityTemplateFactory As EntityTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::EntityTemplateFactory ^ EntityTemplateFactory { System::Web::DynamicData::EntityTemplateFactory ^ get(); void set(System::Web::DynamicData::EntityTemplateFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityTemplateFactory : System.Web.DynamicData.EntityTemplateFactory with get, set" Usage="System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.EntityTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23325-151">Получает или задает объект <see cref="T:System.Web.DynamicData.EntityTemplateFactory" />, связанный с моделью.</span><span class="sxs-lookup"><span data-stu-id="23325-151">Gets or sets the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span></span></summary>
        <value><span data-ttu-id="23325-152">Экземпляр объекта <see cref="T:System.Web.DynamicData.EntityTemplateFactory" />, связанный с моделью.</span><span class="sxs-lookup"><span data-stu-id="23325-152">An instance of the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldTemplateFactory As IFieldTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::IFieldTemplateFactory ^ FieldTemplateFactory { System::Web::DynamicData::IFieldTemplateFactory ^ get(); void set(System::Web::DynamicData::IFieldTemplateFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory with get, set" Usage="System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.FieldTemplateFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23325-153">Возвращает или задает пользовательский интерфейс <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" />.</span><span class="sxs-lookup"><span data-stu-id="23325-153">Gets or sets a custom <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span></span></summary>
        <value><span data-ttu-id="23325-154">Интерфейс <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" />.</span><span class="sxs-lookup"><span data-stu-id="23325-154">The <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-155"><xref:System.Web.DynamicData.IFieldTemplateFactory> Интерфейс позволяет указать шаблоны полей, создаваемые для столбцов таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-155">The <xref:System.Web.DynamicData.IFieldTemplateFactory> interface lets you specify which field templates are created for the table columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.FilterFactory FilterFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterFactory As FilterFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::FilterFactory ^ FilterFactory { System::Web::DynamicData::FilterFactory ^ get(); void set(System::Web::DynamicData::FilterFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterFactory : System.Web.DynamicData.FilterFactory with get, set" Usage="System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.FilterFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23325-156">Получает или задает объект <see cref="T:System.Web.DynamicData.FilterFactory" />, связанный с моделью.</span><span class="sxs-lookup"><span data-stu-id="23325-156">Gets or sets the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span></span></summary>
        <value><span data-ttu-id="23325-157">Экземпляр объекта <see cref="T:System.Web.DynamicData.FilterFactory" />, связанный с моделью.</span><span class="sxs-lookup"><span data-stu-id="23325-157">An instance of the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string tableName, string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string tableName, string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (tableName As String, action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ tableName, System::String ^ action, System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * string * obj -&gt; string&#xA;override this.GetActionPath : string * string * obj -&gt; string" Usage="metaModel.GetActionPath (tableName, action, row)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.GetActionPath(System.String,System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="23325-158">Имя таблицы, к которой относится это действие.</span><span class="sxs-lookup"><span data-stu-id="23325-158">The name of the table that the action applies to.</span></span></param>
        <param name="action"><span data-ttu-id="23325-159">Применяемой к таблице действие.</span><span class="sxs-lookup"><span data-stu-id="23325-159">The action to apply to the table.</span></span></param>
        <param name="row"><span data-ttu-id="23325-160">Объект, представляющий отдельную строку данных в таблице.</span><span class="sxs-lookup"><span data-stu-id="23325-160">An object that represents a single row of data in a table.</span></span> <span data-ttu-id="23325-161">Параметр <paramref name="row" /> используется для предоставления значений для параметров строки запроса.</span><span class="sxs-lookup"><span data-stu-id="23325-161"><paramref name="row" /> is used to provide values for query-string parameters.</span></span></param>
        <summary><span data-ttu-id="23325-162">Возвращает путь действия, связанного с определенной таблицей.</span><span class="sxs-lookup"><span data-stu-id="23325-162">Returns the action path that is associated with a specific table.</span></span></summary>
        <returns><span data-ttu-id="23325-163">URL-адрес, связанный с данным маршрутом.</span><span class="sxs-lookup"><span data-stu-id="23325-163">The URL that is associated with the route.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-164">Маршрут определяется сочетанием имени таблицы и действия.</span><span class="sxs-lookup"><span data-stu-id="23325-164">The route is determined by the combination of the table name and action.</span></span>  
  
 <span data-ttu-id="23325-165">[Запустите](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) Интерактивный пример этой функции.</span><span class="sxs-lookup"><span data-stu-id="23325-165">[Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23325-166">В следующем примере показано, как использовать <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> метод для вычисления пути маршрутизации (определения URL-адреса) для указанной таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-166">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> method to evaluate the routing path (determine the URL) for a specified table.</span></span> <span data-ttu-id="23325-167">Полный пример содержится в разделе <xref:System.Web.DynamicData.MetaModel>.</span><span class="sxs-lookup"><span data-stu-id="23325-167">For a complete example, see <xref:System.Web.DynamicData.MetaModel>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#23)]
 [!code-vb[System.Web.DynamicData.MetaModel#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel GetModel (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaModel GetModel(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetModel(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetModel (contextType As Type) As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaModel ^ GetModel(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="static member GetModel : Type -&gt; System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaModel.GetModel contextType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="23325-168">Тип контекста данных, определенный в модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-168">The type of the data context as defined in the data model.</span></span></param>
        <summary><span data-ttu-id="23325-169">Возвращает экземпляр модели данных для заданного контекста.</span><span class="sxs-lookup"><span data-stu-id="23325-169">Returns the data-model instance for the specified context.</span></span></summary>
        <returns><span data-ttu-id="23325-170">Модель данных, связанная с заданным типом контекста.</span><span class="sxs-lookup"><span data-stu-id="23325-170">The data model that is associated with the specified context type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="23325-171">В следующем примере показано, как использовать <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> метод для выполнения следующих задач:</span><span class="sxs-lookup"><span data-stu-id="23325-171">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> method to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="23325-172">Получение модели данных по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="23325-172">Getting the default data model.</span></span>  
  
-   <span data-ttu-id="23325-173">Получение модели данных, заданной переданным типом контекста.</span><span class="sxs-lookup"><span data-stu-id="23325-173">Getting the data model specified by the passed context type.</span></span>  
  
 <span data-ttu-id="23325-174">Полный пример см. в <xref:System.Web.DynamicData.MetaModel> разделе Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="23325-174">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="23325-175">Таблица не найдена.</span><span class="sxs-lookup"><span data-stu-id="23325-175">The table was not found.</span></span></exception>
        <summary><span data-ttu-id="23325-176">Возвращает метаданные, описывающие таблицу модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-176">Returns the metadata that describes a data model table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-177"><xref:System.Web.DynamicData.MetaTable> Объект, возвращаемый перегруженными методами, содержит сведения о метаданных, связанных с указанной таблицей.</span><span class="sxs-lookup"><span data-stu-id="23325-177">The <xref:System.Web.DynamicData.MetaTable> object that is returned by the overloaded methods contains the metadata information that is associated with the specified table.</span></span>  
  
 <span data-ttu-id="23325-178">[Запустите](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) Интерактивный пример этой функции.</span><span class="sxs-lookup"><span data-stu-id="23325-178">[Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23325-179">В следующем примере показано, как использовать <xref:System.Web.DynamicData.MetaModel.GetTable%2A> перегруженные методы для выполнения следующих задач.</span><span class="sxs-lookup"><span data-stu-id="23325-179">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> overloaded methods to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="23325-180"><xref:System.Web.DynamicData.MetaTable> Возвращает объект для указанной таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-180">Get the <xref:System.Web.DynamicData.MetaTable> object for the specified table.</span></span>  
  
-   <span data-ttu-id="23325-181">Получить доступ к сведениям о метаданных, содержащихся в <xref:System.Web.DynamicData.MetaTable> объекте.</span><span class="sxs-lookup"><span data-stu-id="23325-181">Access the metadata information that is contained by the <xref:System.Web.DynamicData.MetaTable> object.</span></span>  
  
 <span data-ttu-id="23325-182">Пример состоит из страницы и файла кода программной части.</span><span class="sxs-lookup"><span data-stu-id="23325-182">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx#3)] -->
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/GetTable.aspx#3)] --> 
  
 [!code-csharp[System.Web.DynamicData.MetaModel#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#4)]
 [!code-vb[System.Web.DynamicData.MetaModel#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string uniqueTableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (uniqueTableName As String) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ uniqueTableName);" />
      <MemberSignature Language="F#" Value="member this.GetTable : string -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable uniqueTableName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName"><span data-ttu-id="23325-183">Имя, идентифицирующее таблицу в модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-183">The name that identifies the table in the data model.</span></span></param>
        <summary><span data-ttu-id="23325-184">Возвращает метаданные, связанные с заданной таблицей.</span><span class="sxs-lookup"><span data-stu-id="23325-184">Returns the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="23325-185">Метаданные, описывающие заданную таблицу.</span><span class="sxs-lookup"><span data-stu-id="23325-185">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-186">Имя однозначно определяет таблицу в модели данных и используется для создания связанного URL-адреса для маршрутизации.</span><span class="sxs-lookup"><span data-stu-id="23325-186">The name uniquely identifies a table in the data model and is used to generate the related URL for routing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23325-187">В следующем примере показано, как использовать <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> метод для получения метаданных для указанной таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-187">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="23325-188">Полный пример содержится в разделе <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="23325-188">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#42](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#42)]
 [!code-vb[System.Web.DynamicData.MetaModel#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="23325-189">Имя не найдено в модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-189">The name was not found in the data model.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="member this.GetTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="23325-190">Тип, идентифицирующий таблицу в модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-190">The type that identifies the table in the data model.</span></span></param>
        <summary><span data-ttu-id="23325-191">Возвращает метаданные, описывающие заданную таблицу.</span><span class="sxs-lookup"><span data-stu-id="23325-191">Returns the metadata that describes the specified table.</span></span></summary>
        <returns><span data-ttu-id="23325-192">Метаданные, описывающие заданную таблицу.</span><span class="sxs-lookup"><span data-stu-id="23325-192">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="23325-193">В следующем примере показано, как использовать <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> метод для получения метаданных для указанной таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-193">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="23325-194">Полный пример содержится в разделе <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="23325-194">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#41](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#41)]
 [!code-vb[System.Web.DynamicData.MetaModel#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="23325-195">Тип не найден в модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-195">The type was not found in the data model.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string tableName, class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (tableName As String, contextType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ tableName, Type ^ contextType);" />
      <MemberSignature Language="F#" Value="member this.GetTable : string * Type -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable (tableName, contextType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="23325-196">Имя таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-196">The name of the table.</span></span></param>
        <param name="contextType"><span data-ttu-id="23325-197">Контекст данных для поиска таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-197">The data context to search for the table.</span></span></param>
        <summary><span data-ttu-id="23325-198">Возвращает метаданные, описывающие заданную таблицу.</span><span class="sxs-lookup"><span data-stu-id="23325-198">Returns the metadata that describes the specified table.</span></span></summary>
        <returns><span data-ttu-id="23325-199">Метаданные, описывающие заданную таблицу.</span><span class="sxs-lookup"><span data-stu-id="23325-199">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="23325-200">В следующем примере показано, как использовать <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> метод для получения метаданных для указанной таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-200">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="23325-201">Полный пример содержится в разделе <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="23325-201">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#43](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#43)]
 [!code-vb[System.Web.DynamicData.MetaModel#43](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="23325-202">Значение параметра <paramref name="tablename" /> или <paramref name="contextType" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="23325-202"><paramref name="tablename" /> or <paramref name="contextType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="23325-203">Контекст не зарегистрирован или таблица не существует в этом контексте данных.</span><span class="sxs-lookup"><span data-stu-id="23325-203">The context is not registered or the table does not exist in the data context.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterContext">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="23325-204">Регистрирует контекст данных.</span><span class="sxs-lookup"><span data-stu-id="23325-204">Registers the data context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-205">Сведения об инициализации контекста данных можно определить с помощью свойств <xref:System.Web.DynamicData.ContextConfiguration> класса.</span><span class="sxs-lookup"><span data-stu-id="23325-205">You can define data-context initialization information by using the properties of the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Func&lt;obj&gt; -&gt; unit&#xA;override this.RegisterContext : Func&lt;obj&gt; -&gt; unit" Usage="metaModel.RegisterContext contextFactory" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contextFactory"><span data-ttu-id="23325-206">Фабрика для создания экземпляров контекста данных.</span><span class="sxs-lookup"><span data-stu-id="23325-206">The factory for instantiating the data context.</span></span></param>
        <summary><span data-ttu-id="23325-207">Регистрирует контекст данных, заданный фабрикой контекста.</span><span class="sxs-lookup"><span data-stu-id="23325-207">Registers the data context that is specified by a context factory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-208">Этот метод использует сведения о контексте по умолчанию, определяемые <xref:System.Web.DynamicData.ContextConfiguration> классом.</span><span class="sxs-lookup"><span data-stu-id="23325-208">This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span> <span data-ttu-id="23325-209">Он позволяет создавать экземпляры контекста данных с помощью собственного конструктора.</span><span class="sxs-lookup"><span data-stu-id="23325-209">It enables you to instantiate the data context by using your own constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Type -&gt; unit&#xA;override this.RegisterContext : Type -&gt; unit" Usage="metaModel.RegisterContext contextType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="23325-210">Тип контекста данных, определенный в модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-210">The type of the data context as defined in the data model.</span></span></param>
        <summary><span data-ttu-id="23325-211">Регистрирует экземпляр контекста данных.</span><span class="sxs-lookup"><span data-stu-id="23325-211">Registers a data-context instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-212">Этот метод использует сведения о контексте по умолчанию, как <xref:System.Web.DynamicData.ContextConfiguration> определено классом.</span><span class="sxs-lookup"><span data-stu-id="23325-212">This method uses the default context information as defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit&#xA;override this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit" Usage="metaModel.RegisterContext dataModelProvider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider"><span data-ttu-id="23325-213">Поставщик модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-213">A provider for the data model.</span></span></param>
        <summary><span data-ttu-id="23325-214">Регистрирует экземпляр контекста данных, используя поставщик модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-214">Registers a data context instance by using a data-model provider</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object), configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextFactory, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextFactory"><span data-ttu-id="23325-215">Делегат, используемый для создания экземпляра контекста модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-215">A delegate that is used to instantiate the data model context.</span></span></param>
        <param name="configuration"><span data-ttu-id="23325-216">Информация контекста для контекста, определенная классом <see cref="T:System.Web.DynamicData.ContextConfiguration" />.</span><span class="sxs-lookup"><span data-stu-id="23325-216">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="23325-217">Регистрирует экземпляр контекста данных, используя заданную конфигурацию контекста и разрешив пользовательский конструктор.</span><span class="sxs-lookup"><span data-stu-id="23325-217">Registers a data-context instance by using the specified context configuration and by enabling a custom constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-218">Фабрика контекста в этом методе позволяет создать экземпляр контекста модели данных с помощью пользовательского конструктора.</span><span class="sxs-lookup"><span data-stu-id="23325-218">The context factory in this method enables you to instantiate a data model context by using a custom constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="23325-219">Свойство <paramref name="contextFactory" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="23325-219"><paramref name="contextFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="23325-220">Объект <paramref name="contextType" />, созданный объектом <paramref name="contextFactory" />, недействителен.</span><span class="sxs-lookup"><span data-stu-id="23325-220">The <paramref name="contextType" /> that is instantiated by <paramref name="contextFactory" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type, configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextType, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="23325-221">Тип контекста данных, определенный в модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-221">The type of the data context as defined in the data model.</span></span></param>
        <param name="configuration"><span data-ttu-id="23325-222">Информация о конфигурации для контекста, определенная классом <see cref="T:System.Web.DynamicData.ContextConfiguration" />.</span><span class="sxs-lookup"><span data-stu-id="23325-222">The configuration information for the context, as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="23325-223">Регистрирует экземпляр контекста данных, используя заданную конфигурацию контекста.</span><span class="sxs-lookup"><span data-stu-id="23325-223">Registers a data-context instance by using the specified context configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="23325-224">В следующем примере показано, как использовать <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> метод для регистрации контекста данных с включенным формированием шаблонов, как указано в `configuration` параметре.</span><span class="sxs-lookup"><span data-stu-id="23325-224">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="23325-225">Свойство <paramref name="contextType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="23325-225"><paramref name="contextType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (dataModelProvider, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider"><span data-ttu-id="23325-226">Поставщик модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-226">A provider for the data model.</span></span></param>
        <param name="configuration"><span data-ttu-id="23325-227">Информация контекста для контекста, определенная классом <see cref="T:System.Web.DynamicData.ContextConfiguration" />.</span><span class="sxs-lookup"><span data-stu-id="23325-227">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="23325-228">Регистрирует экземпляр контекста данных, используя заданную конфигурацию контекста и разрешив использование поставщика модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-228">Registers a data-context instance by using the specified context configuration and by enabling a data-model provider.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="23325-229">Параметр <paramref name="dataModelProvider" /> или <paramref name="configuration" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="23325-229"><paramref name="dataModelProvider" /> or <paramref name="configuration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="23325-230">Параметр <paramref name="contextType" /> уже зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="23325-230"><paramref name="contextType" /> is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetRegistrationException">
      <MemberSignature Language="C#" Value="public static void ResetRegistrationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetRegistrationException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.ResetRegistrationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetRegistrationException ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetRegistrationException();" />
      <MemberSignature Language="F#" Value="static member ResetRegistrationException : unit -&gt; unit" Usage="System.Web.DynamicData.MetaModel.ResetRegistrationException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23325-231">Сбрасывает предыдущую ошибку регистрации контекста, которая могла произойти.</span><span class="sxs-lookup"><span data-stu-id="23325-231">Resets any previous context registration error that might have occurred.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-232">При возникновении ошибки во время регистрации контекста данных исключение кэшируется и создается во всех последующих операциях.</span><span class="sxs-lookup"><span data-stu-id="23325-232">When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations.</span></span> <span data-ttu-id="23325-233">Например, если при запуске приложения возникает ошибка, она создается при каждом запросе.</span><span class="sxs-lookup"><span data-stu-id="23325-233">For example, if an error occurs at application start, it is thrown on every request.</span></span> <span data-ttu-id="23325-234">Вызовите этот метод, чтобы очистить ошибку и разрешить выполнение новой регистрации контекста.</span><span class="sxs-lookup"><span data-stu-id="23325-234">Call this method to clear the error and to enable a new context registration to be performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt; Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaTable&gt; Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As ReadOnlyCollection(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ Tables { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;" Usage="System.Web.DynamicData.MetaModel.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23325-235">Возвращает коллекцию всех таблиц, входящих в состав модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-235">Gets a collection of all the tables that are part of the data model.</span></span></summary>
        <value><span data-ttu-id="23325-236">Коллекция таблиц, принадлежащих модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-236">A collection that contains the tables that belong to the data model.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-237">Коллекция содержит все таблицы в модели данных, которые содержат невидимые таблицы (не являются частью платформа динамических данных формирования шаблонов).</span><span class="sxs-lookup"><span data-stu-id="23325-237">The collection contains all the tables in the data model, which includes the tables that are not visible (are not part of Dynamic Data scaffolding).</span></span>  
  
 <span data-ttu-id="23325-238">[Запустите](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) Интерактивный пример этой функции.</span><span class="sxs-lookup"><span data-stu-id="23325-238">[Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23325-239">В следующем примере показано, как использовать <xref:System.Web.DynamicData.MetaModel.Tables%2A> свойства и <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> для выполнения следующих задач.</span><span class="sxs-lookup"><span data-stu-id="23325-239">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Tables%2A> and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="23325-240">Получение коллекции всех таблиц в модели данных и их отображение в `GridView` элементе управления.</span><span class="sxs-lookup"><span data-stu-id="23325-240">Get a collection of all the tables in a data model and show them in a `GridView` control.</span></span>  
  
-   <span data-ttu-id="23325-241">Получение коллекции видимых таблиц в модели данных и их отображение в `GridView` элементе управления.</span><span class="sxs-lookup"><span data-stu-id="23325-241">Get a collection of the visible tables in a data model and show them in a `GridView` control.</span></span>  
  
 <span data-ttu-id="23325-242">Пример состоит из страницы и файла кода программной части.</span><span class="sxs-lookup"><span data-stu-id="23325-242">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx#5)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx#5)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#6)]
 [!code-vb[System.Web.DynamicData.MetaModel#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="23325-243">Пытается получить метаданные, связанные с заданной таблицей.</span><span class="sxs-lookup"><span data-stu-id="23325-243">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(string uniqueTableName, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (uniqueTableName As String, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(System::String ^ uniqueTableName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="member this.TryGetTable : string *  -&gt; bool" Usage="metaModel.TryGetTable (uniqueTableName, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName"><span data-ttu-id="23325-244">Имя, однозначно идентифицирующее таблицу.</span><span class="sxs-lookup"><span data-stu-id="23325-244">The name that uniquely identifies the table.</span></span></param>
        <param name="table"><span data-ttu-id="23325-245">По возвращении из этого метода в случае, если запрошенная таблица найдена, содержит метаданные для этой таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-245">When this method returns, and if it has found the requested table, contains the metadata for that table.</span></span> <span data-ttu-id="23325-246">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="23325-246">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="23325-247">Пытается получить метаданные, связанные с заданной таблицей.</span><span class="sxs-lookup"><span data-stu-id="23325-247">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="23325-248"><see langword="true" />, если метаданные таблицы найдены; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="23325-248"><see langword="true" /> if the table metadata is found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-249">Этот метод получает метаданные, связанные с указанной таблицей.</span><span class="sxs-lookup"><span data-stu-id="23325-249">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="23325-250">Если таблица не найдена, этот метод возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="23325-250">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="23325-251">Это отличается от <xref:System.Web.DynamicData.MetaModel.GetTable%2A> метода, который вызывает исключение, если таблица не найдена.</span><span class="sxs-lookup"><span data-stu-id="23325-251">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="23325-252">Свойство <paramref name="uniqueTableName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="23325-252"><paramref name="uniqueTableName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="member this.TryGetTable : Type *  -&gt; bool" Usage="metaModel.TryGetTable (entityType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="23325-253">Тип таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-253">The table type.</span></span></param>
        <param name="table"><span data-ttu-id="23325-254">После выполнения возврата этим методом в случае, если запрошенная таблица найдена, содержит метаданные для указанной таблицы.</span><span class="sxs-lookup"><span data-stu-id="23325-254">When this method returns, and if the requested table has been found, contains the metadata for the specified table.</span></span> <span data-ttu-id="23325-255">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="23325-255">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="23325-256">Пытается получить метаданные, связанные с заданной таблицей.</span><span class="sxs-lookup"><span data-stu-id="23325-256">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="23325-257">Значение <see langword="true" />, если метаданные таблицы найдены; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="23325-257"><see langword="true" /> if the table metadata is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23325-258">Этот метод получает метаданные, связанные с указанной таблицей.</span><span class="sxs-lookup"><span data-stu-id="23325-258">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="23325-259">Если таблица не найдена, этот метод возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="23325-259">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="23325-260">Это отличается от <xref:System.Web.DynamicData.MetaModel.GetTable%2A> метода, который вызывает исключение, если таблица не найдена.</span><span class="sxs-lookup"><span data-stu-id="23325-260">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="23325-261"><paramref name="entityType" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="23325-261"><paramref name="entityType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VisibleTables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt; VisibleTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Web.DynamicData.MetaTable&gt; VisibleTables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleTables As List(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ VisibleTables { System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleTables : System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;" Usage="System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23325-262">Возвращает коллекцию видимых таблиц в модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-262">Gets a collection of the visible tables in the data model.</span></span></summary>
        <value><span data-ttu-id="23325-263">Видимой называется таблица, для которой включено формирование шаблонов.</span><span class="sxs-lookup"><span data-stu-id="23325-263">A visible table refers to a table that has scaffolding enabled.</span></span> <span data-ttu-id="23325-264">Это означает, что для данной таблицы существуют страница List.aspx.</span><span class="sxs-lookup"><span data-stu-id="23325-264">This means that it is a table for which a List.aspx page exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="23325-265">В следующем примере показано, как использовать <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> свойство для получения коллекции видимых таблиц в модели данных.</span><span class="sxs-lookup"><span data-stu-id="23325-265">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> property to get a collection of the visible tables in the data model.</span></span> <span data-ttu-id="23325-266">Полный пример см. в <xref:System.Web.DynamicData.MetaModel> разделе Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="23325-266">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#62](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#62)]
 [!code-vb[System.Web.DynamicData.MetaModel#62](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#62)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
