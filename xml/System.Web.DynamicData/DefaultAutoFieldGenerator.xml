<Type Name="DefaultAutoFieldGenerator" FullName="System.Web.DynamicData.DefaultAutoFieldGenerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20623515f67e11451d24a2c3d13b0b88ae371338" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69140146" /></Metadata><TypeSignature Language="C#" Value="public class DefaultAutoFieldGenerator : System.Web.UI.IAutoFieldGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultAutoFieldGenerator extends System.Object implements class System.Web.UI.IAutoFieldGenerator" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DefaultAutoFieldGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultAutoFieldGenerator&#xA;Implements IAutoFieldGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultAutoFieldGenerator : System::Web::UI::IAutoFieldGenerator" />
  <TypeSignature Language="F#" Value="type DefaultAutoFieldGenerator = class&#xA;    interface IAutoFieldGenerator" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAutoFieldGenerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Автоматически создает поля динамических данных (столбцы) для элементов управления с привязкой к данным.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно переопределить <xref:System.Web.DynamicData.DefaultAutoFieldGenerator> класс, чтобы настроить платформа динамических данных генерации полей данных.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IAutoFieldGenerator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultAutoFieldGenerator (System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DefaultAutoFieldGenerator.#ctor(System.Web.DynamicData.MetaTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultAutoFieldGenerator(System::Web::DynamicData::MetaTable ^ table);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.DefaultAutoFieldGenerator : System.Web.DynamicData.MetaTable -&gt; System.Web.DynamicData.DefaultAutoFieldGenerator" Usage="new System.Web.DynamicData.DefaultAutoFieldGenerator table" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
      </Parameters>
      <Docs>
        <param name="table">Метаданные для таблицы, для которой нужно создать динамические поля.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DefaultAutoFieldGenerator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DefaultAutoFieldGenerator.%23ctor%2A> Конструктор<xref:System.Web.DynamicData.MetaTable.GetScaffoldColumns%2A> вызывает метод для динамического создания полей.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Таблица имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.DynamicField CreateField (System.Web.DynamicData.MetaColumn column, System.Web.DynamicData.ContainerType containerType, System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.DynamicField CreateField(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.DynamicData.ContainerType containerType, valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DefaultAutoFieldGenerator.CreateField(System.Web.DynamicData.MetaColumn,System.Web.DynamicData.ContainerType,System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::DynamicField ^ CreateField(System::Web::DynamicData::MetaColumn ^ column, System::Web::DynamicData::ContainerType containerType, System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateField : System.Web.DynamicData.MetaColumn * System.Web.DynamicData.ContainerType * System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.DynamicData.DynamicField&#xA;override this.CreateField : System.Web.DynamicData.MetaColumn * System.Web.DynamicData.ContainerType * System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.DynamicData.DynamicField" Usage="defaultAutoFieldGenerator.CreateField (column, containerType, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="containerType" Type="System.Web.DynamicData.ContainerType" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="column">Метаданные для столбца, для которого нужно создать динамическое поле.</param>
        <param name="containerType">Элемент управления с привязкой к данным, содержащий динамическое поле.</param>
        <param name="mode">Режим доступа для динамического поля.</param>
        <summary>Создает динамическое поле данных.</summary>
        <returns>Создаваемое динамическое поле.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно переопределить для настройки параметров динамического поля, таких как режим доступа. Режим доступа <xref:System.Web.UI.WebControls.DataBoundControlMode> задает режимы ввода данных для поля данных, такие как `ReadOnly`, `Edit`и `Insert`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFields">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GenerateFields (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GenerateFields(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DefaultAutoFieldGenerator.GenerateFields(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GenerateFields(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GenerateFields : System.Web.UI.Control -&gt; System.Collections.ICollection&#xA;override this.GenerateFields : System.Web.UI.Control -&gt; System.Collections.ICollection" Usage="defaultAutoFieldGenerator.GenerateFields control" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAutoFieldGenerator.GenerateFields(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления с привязкой к данным, содержащий динамическое поле данных.</param>
        <summary>Создает объекты <see cref="T:System.Web.DynamicData.DynamicField" /> на основе метаданных таблицы.</summary>
        <returns>Коллекция объектов <see cref="T:System.Web.DynamicData.DynamicField" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
