<Type Name="DynamicControl" FullName="System.Web.DynamicData.DynamicControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="618a4a97112a8569110f6843c9c1c95a52d81f4b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69055416" /></Metadata><TypeSignature Language="C#" Value="public class DynamicControl : System.Web.UI.Control, System.Web.DynamicData.IFieldFormattingOptions, System.Web.DynamicData.IFieldTemplateHost, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicControl extends System.Web.UI.Control implements class System.Web.DynamicData.IFieldFormattingOptions, class System.Web.DynamicData.IFieldTemplateHost, class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicControl" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicControl&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IFieldFormattingOptions, IFieldTemplateHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicControl : System::Web::UI::Control, System::Web::DynamicData::IFieldFormattingOptions, System::Web::DynamicData::IFieldTemplateHost, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type DynamicControl = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor&#xA;    interface IFieldTemplateHost&#xA;    interface IFieldFormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldTemplateHost</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicControl), "DynamicControl.bmp")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicControl), "DynamicControl.ico")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Отображает содержимое, определенное для поля в элементах управления-шаблонах с привязкой к данным с использованием функций платформы динамических данных ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 Элемент управления используется шаблонными элементами управления с привязкой к данным, <xref:System.Web.UI.WebControls.FormView> например или <xref:System.Web.UI.WebControls.ListView>, для вывода поля данных, использующего функции ASP.NET платформа динамических данных на пользовательской странице. <xref:System.Web.DynamicData.DynamicControl> Также можно использовать <xref:System.Web.DynamicData.DynamicControl> элемент управления <xref:System.Web.UI.WebControls.TemplateField> в <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DetailsView> поле или элемента управления.  
  
 Элемент управления предоставляет функциональные возможности, аналогичные <xref:System.Web.DynamicData.DynamicField> возможностям поля. <xref:System.Web.DynamicData.DynamicControl> Однако поскольку <xref:System.Web.DynamicData.DynamicControl> элемент управления используется только внутри шаблонов, он обеспечивает большую гибкость в управлении отображением данных, так как можно добавить другие элементы HTML вокруг поля. При использовании <xref:System.Web.DynamicData.DynamicControl> элемента управления можно воспользоваться следующими возможностями платформа динамических данных.  
  
-   Автоматическое отображение соответствующего элемента управления для поля с помощью шаблонов полей на основе типа данных. Шаблоны полей могут быть глобально изменены для всего приложения.  
  
-   Предоставление встроенной проверки данных на основе схемы базы данных. Можно также добавить типы проверки, настроив модель данных.  
  
-   Настройка подготовки к просмотру данных для отдельных полей с помощью атрибутов в модели данных или с <xref:System.Web.DynamicData.DynamicField.UIHint%2A> помощью свойства.  
  
 Чтобы указать поле, отображаемое в <xref:System.Web.DynamicData.DynamicControl> элементе управления, <xref:System.Web.DynamicData.DynamicControl.DataField%2A> присвойте свойству имя поля. Пользовательскую строку форматирования можно применить к значению поля, задав <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> свойство. По умолчанию строка форматирования применяется к значениям полей только в том случае, если элемент управления с привязкой к данным находится в режиме только для чтения. Чтобы применить строку форматирования к значениям, отображаемым, когда элемент управления с привязкой к данным находится в <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> режиме редактирования `true`, задайте для свойства значение. Если значение поля равно `null`, можно отобразить пользовательский заголовок, <xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> задав свойство. Элемент управления также может автоматически преобразовывать пустые строковые ("") значения полей в значения NULL, <xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A> присвоив `true`свойству значение. <xref:System.Web.DynamicData.DynamicControl>  
  
 <xref:System.Web.DynamicData.DynamicControl> Элемент управления поддерживает различные режимы экрана. Чтобы указать режим, в котором должен отображаться <xref:System.Web.DynamicData.DynamicControl> элемент управления, <xref:System.Web.DynamicData.DynamicControl.Mode%2A> задайте свойство. В следующей таблице показаны различные режимы.  
  
 <xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly>  
 для режима экрана. Это предотвращает изменение пользователем значений записи или поля данных. Его можно использовать в любом шаблоне.  
  
 <xref:System.Web.UI.WebControls.DataBoundControlMode.Edit>  
 для режима правки. Это позволяет пользователям обновлять значения существующей записи. Он используется в шаблоне редактирования (обычно с именем `EditItemTemplate`).  
  
 <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>  
 для режима вставки. Это позволяет пользователям вводить значения для новой записи. Он используется в шаблоне INSERT (обычно с именем `InsertItemTemplate`).  
  
 <xref:System.Web.DynamicData.DynamicControl> Элемент управления можно скрыть в элементе управления с привязкой к данным, <xref:System.Web.UI.Control.Visible%2A> присвоив свойству `false`значение.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:DynamicControl  
    ApplyFormatInEditMode="True|False"  
    ConvertEmptyStringToNull="True|False"  
    CssClass="string"  
    DataField="string"  
    DataFormatString="string"  
    EnableViewState="True|False"  
    HtmlEncode="True|False"  
    ID="string"  
    Mode="Edit|Insert|ReadOnly"  
    NullDisplayText="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    UIHint="string"  
    ValidationGroup="string"  
    Visible="True|False"  
>  
</asp:DynamicControl>  
```  
  
   
  
## Examples  
 См. пример кода времени выполнения этой функции: [Выполните команду](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl).  
  
 В следующем примере демонстрируется использование <xref:System.Web.DynamicData.DynamicControl> элемента управления <xref:System.Web.UI.WebControls.ListView> в элементе управления для отображения, вставки, удаления и изменения значений из таблицы базы данных. Важно отметить, что для того, чтобы операция вставки работала <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> , свойству `rowguid` `true`и `ModifiedDate` столбцам присваивается значение.  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicField" />
    <related type="Article" href="https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512">Обзор платформа динамических данных ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12">Формирование шаблонов платформа динамических данных ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicControl" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicControl" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicControl (System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As DataBoundControlMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicControl(System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.DynamicControl : System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.DynamicData.DynamicControl" Usage="new System.Web.DynamicData.DynamicControl mode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="mode">Одно из значений из перечисления, указывающее режим элемента управления.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicControl" /> указанным режимом.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, применима ли заданная в свойстве <see cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" /> строка форматирования к значениям полей, когда поле находится в режиме правки.</summary>
        <value>Значение <see langword="true" />, если строка форматирования применяется; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicControl> Элемент управления имеет различные режимы вывода, позволяющие пользователю читать, редактировать или вставлять поля. По умолчанию строка форматирования, заданная <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> свойством, применяется к значению поля только в том <xref:System.Web.DynamicData.DynamicControl> случае, если элемент управления находится в режиме только для чтения. Чтобы применить строку форматирования к значениям, отображаемым, когда элемент управления с привязкой к данным находится в <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> режиме редактирования `true`, задайте для свойства значение.  
  
> [!NOTE]
>  <xref:System.Web.DynamicData.DynamicControl> Элемент управления не удаляет форматирование автоматически при обновлении поля в источнике данных. Если форматирование не должно быть частью сохраненного значения, необходимо будет удалить форматирование программным способом.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.Mode" />
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn Column { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.Column" />
      <MemberSignature Language="VB.NET" Value="Public Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); void set(System::Web::DynamicData::MetaColumn ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Column : System.Web.DynamicData.MetaColumn with get, set" Usage="System.Web.DynamicData.DynamicControl.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект столбца, связанного с элементом управления.</summary>
        <value>Объект столбца, связанный с элементом управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicControl.Column%2A> Свойство можно использовать для получения метаданных о конкретном столбце. Свойство автоматически задается <xref:System.Web.DynamicData.DynamicControl> элементом управления на основе имени <xref:System.Web.DynamicData.DynamicControl.DataField%2A> поля, указанного для свойства. <xref:System.Web.DynamicData.DynamicControl.Column%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataField" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.Table" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, преобразовываются ли пустые строковые значения ("") автоматически в значения NULL, когда в источнике данных обновляется поле данных.</summary>
        <value>Значение <see langword="true" />, если пустые строковые значения автоматически преобразуются в значения NULL; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект элемента управления источниками данных также имеет свойство с именем <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>. <xref:System.Web.UI.WebControls.Parameter> Это свойство выполняет ту же функцию. Убедитесь, что оба свойства заданы соответствующим образом.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5436e8f6-171a-4361-a9a3-cec826a08c91">Обработка значений NULL в базе данных с помощью элементов управления источниками данных</related>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public virtual string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CssClass : string with get, set" Usage="System.Web.DynamicData.DynamicControl.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает класс каскадной таблицы стилей (CSS), задающей стили отображения содержимого элемента управления <see cref="T:System.Web.DynamicData.DynamicControl" />.</summary>
        <value>Имя класса CSS.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.DynamicData.DynamicControl.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя поля данных, к которому привязан элемент управления <see cref="T:System.Web.DynamicData.DynamicControl" />.</summary>
        <value>Имя поля данных, к которому привязывается элемент управления <see cref="T:System.Web.DynamicData.DynamicControl" />. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы указать поле данных для привязки <xref:System.Web.DynamicData.DynamicControl> к элементу управления. <xref:System.Web.DynamicData.DynamicControl.DataField%2A> Поле данных может быть именем столбца или, для внешних ключевых столбцов, именем связи.  
  
 По умолчанию указанное поле данных отображается <xref:System.Web.DynamicData.DynamicControl> элементом управления с помощью шаблона поля, связанного с типом данных поля. Можно изменить шаблон поля, отображаемый для поля данных, задав <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> свойство. Можно также отформатировать отображаемый текст, задав <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> свойство.  
  
 **Примечание** . Если необходимо изменить отображение и поведение поля данных глобально, необходимо применить к модели данных атрибуты, а не задавать их в конкретном экземпляре <xref:System.Web.DynamicData.DynamicControl> элемента управления. Дополнительные сведения см. в разделе [ASP.NET платформа динамических данных](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).  
  
   
  
## Examples  
 В следующем примере показано использование <xref:System.Web.DynamicData.DynamicControl.DataField%2A> свойства для указания поля, отображаемого <xref:System.Web.DynamicData.DynamicControl> в элементе управления.  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicControl.DataField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.DataField/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicControl.DataField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.DataField/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.NullDisplayText" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.UIHint" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.DynamicData.DynamicControl.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, определяющую формат отображения значения поля.</summary>
        <value>Строка форматирования, определяющая формат отображения значения поля. По умолчанию это пустая строка (""), указывающая на неприменение к значению поля специального форматирования.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы указать пользовательский формат отображения для значений, отображаемых <xref:System.Web.DynamicData.DynamicControl> в элементе управления. <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> Если свойство не задано, значение поля отображается без специального форматирования.  
  
 По умолчанию строка форматирования применяется к значению поля только в том случае, <xref:System.Web.DynamicData.DynamicControl.Mode%2A> если свойство имеет <xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly>значение. Чтобы применить строку форматирования к значению поля в режиме редактирования, присвойте <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> `true`свойству значение.  
  
 Формат представления, указываемый с помощью <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> свойства, зависит от этого экземпляра <xref:System.Web.DynamicData.DynamicControl> элемента управления. Можно также изменить формат представления для поля данных во всем приложении, применив <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> к модели данных и <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> задав именованный параметр в конструкторе. Дополнительные сведения см. в разделе [ASP.NET платформа динамических данных](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataField" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Типы форматирования в .NET</related>
      </Docs>
    </Member>
    <Member MemberName="FieldTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control FieldTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control FieldTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.FieldTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FieldTemplate As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ FieldTemplate { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldTemplate : System.Web.UI.Control" Usage="System.Web.DynamicData.DynamicControl.FieldTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает шаблон поля, созданный для элемента управления <see cref="T:System.Web.DynamicData.DynamicControl" />.</summary>
        <value>Шаблон поля, созданный для элемента управления <see cref="T:System.Web.DynamicData.DynamicControl" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttribute (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string -&gt; string&#xA;override this.GetAttribute : string -&gt; string" Usage="dynamicControl.GetAttribute key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя атрибута.</param>
        <summary>Возвращает значение атрибута по заданному ключу.</summary>
        <returns>Значение атрибута.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если коллекция Attributes имеет `null`значение, этот метод возвращает пустую строку.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.DynamicData.DynamicControl.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, осуществляется ли перед отрисовкой HTML-кодирование данных элемента управления.</summary>
        <value><see langword="true" />, если перед отрисовкой осуществляется HTML-кодирование данных для элемента управления; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicControl.HtmlEncode%2A> Используйте свойство, чтобы указать, кодируются ли значения полей в формате HTML в соответствующие строковые представления перед их отображением.  
  
> [!NOTE]
>  Значения полей в кодировке HTML позволяют предотвратить отображение вредоносных атак с использованием межсайтовых сценариев и злонамеренного содержимого. Это свойство должно быть включено везде, где это возможно. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataBoundControlMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As DataBoundControlMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::DataBoundControlMode Mode { System::Web::UI::WebControls::DataBoundControlMode get(); void set(System::Web::UI::WebControls::DataBoundControlMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Web.UI.WebControls.DataBoundControlMode with get, set" Usage="System.Web.DynamicData.DynamicControl.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает режим отрисовки.</summary>
        <value>Одно из значений из перечисления, указывающее режим отрисовки для элемента управления. Значение по умолчанию — <see cref="F:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы указать режим рендеринга, используемый для <xref:System.Web.DynamicData.DynamicControl> отображения элемента управления. <xref:System.Web.DynamicData.DynamicControl.Mode%2A> В следующей таблице показаны различные режимы.  
  
|Режим|Описание|  
|----------|-----------------|  
|<xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly>|для режима экрана. Это предотвращает изменение пользователем значений записи или поля данных. Его можно использовать в любом шаблоне. Это значение по умолчанию.|  
|<xref:System.Web.UI.WebControls.DataBoundControlMode.Edit>|для режима правки. Это позволяет пользователям обновлять значения существующей записи. Он используется в `EditItemTemplate` шаблоне.|  
|<xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>|для режима вставки. Это позволяет пользователям вводить значения для новой записи. Он используется в `InsertItemTemplate` шаблоне.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.DynamicData.DynamicControl.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает заголовок, отображаемый для поля данных, когда оно имеет значение <see langword="null" />.</summary>
        <value>Заголовок, отображаемый для поля данных, когда оно имеет значение <see langword="null" />. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Иногда значение поля хранится в источнике данных как значение null. Можно указать пользовательский заголовок, который будет отображаться для полей, имеющих значение null, задав <xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> свойство. Если это свойство не задано, значения пустых полей отображаются как пустые строки ("").  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataField" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="dynamicControl.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.DynamicData.DynamicControl.OnInit%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Web.DynamicData.DynamicControl.DataField" /> не задано.</exception>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" /> в производном классе обязательно вызовите <see cref="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dynamicControl.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект, который используется для отрисовки содержимого элемента управления <see cref="T:System.Web.DynamicData.DynamicControl" /> для клиентского браузера.</param>
        <summary>Осуществляет отрисовку содержимого элемента управления <see cref="T:System.Web.DynamicData.DynamicControl" /> для клиентского браузера, используя заданный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод в основном используется разработчиками элементов управления для <xref:System.Web.DynamicData.DynamicControl> расширения элемента управления. <xref:System.Web.DynamicData.DynamicControl.Render%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAttribute(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetAttribute : string * string -&gt; unit&#xA;override this.SetAttribute : string * string -&gt; unit" Usage="dynamicControl.SetAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя атрибута, который нужно установить.</param>
        <param name="value">Значение, присваиваемое атрибуту.</param>
        <summary>Присваивает указанному атрибуту заданное значение.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFieldTemplateHost.FormattingOptions">
      <MemberSignature Language="C#" Value="System.Web.DynamicData.IFieldFormattingOptions System.Web.DynamicData.IFieldTemplateHost.FormattingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.IFieldFormattingOptions System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property FormattingOptions As IFieldFormattingOptions Implements IFieldTemplateHost.FormattingOptions" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::DynamicData::IFieldFormattingOptions ^ System::Web::DynamicData::IFieldTemplateHost::FormattingOptions { System::Web::DynamicData::IFieldFormattingOptions ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldFormattingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />.</summary>
        <value>Параметры форматирования, применяемые к шаблону поля.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.Table" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Table As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaTable ^ Table { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.DynamicControl.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект таблицы, связанный с элементом управления.</summary>
        <value>Объект таблицы, связанный с элементом управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство для доступа к метаданным таблицы, связанной с привязанным к данным элементом управления, <xref:System.Web.DynamicData.DynamicControl> содержащим элемент управления. <xref:System.Web.DynamicData.DynamicControl.Table%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Элемент управления <see cref="T:System.Web.DynamicData.DynamicControl" /> находится в элементе управления с привязкой к данным, не связанном с элементом управления источником данных, реализующим интерфейс <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</exception>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.Column" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UIHint : string with get, set" Usage="System.Web.DynamicData.DynamicControl.UIHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя шаблона поля, используемого для отрисовки поля данных.</summary>
        <value>Имя шаблона поля, используемого для отрисовки поля данных. Значением по умолчанию является пустая строка (""), указывающая, что отрисовка шаблона поля будет основана на типе поля данных или на информации метаданных, применяемых к модели данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> Используйте свойство, чтобы указать шаблон поля, используемый для вывода пользовательского интерфейса для поля данных. Шаблоны полей по умолчанию являются пользовательскими элементами управления, а их имена содержат суффикс для поиска шаблонов полей, используемых для операций редактирования и операций вставки. Суффиксы — это _edit и _insert соответственно. При установке значения для <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> свойства имя задается без суффиксов. Платформа динамических данных определит правильный режим, оценивая <xref:System.Web.DynamicData.DynamicControl.Mode%2A> значение свойства и выполнит визуализацию правильного шаблона поля.  
  
 <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> Если свойство не задано, по умолчанию платформа динамических данных будет отображать шаблон поля на основе типа поля. Дополнительные сведения см. в разделе [ASP.NET платформа динамических данных формирования шаблонов](https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12).  
  
 Шаблон поля, указываемый с помощью <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> свойства, относится только к этому экземпляру <xref:System.Web.DynamicData.DynamicControl> элемента управления. Можно также изменить шаблон поля, используемый полем данных во всем приложении, применив <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> к модели данных. <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> Установка свойства переопределяет метаданные, применяемые к модели данных. Дополнительные сведения об атрибутах метаданных см. в разделе [ASP.NET платформа динамических данных](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).  
  
   
  
## Examples  
 См. пример кода времени выполнения этой функции: [Выполните команду](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl.UIHint).  
  
 В следующем примере показано, как можно указать поле данных, чтобы использовать другой шаблон поля для отрисовки его содержимого. Во втором примере показан шаблон настраиваемого поля, заданный <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> свойством.  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicControl.UIHint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.UIHint/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicControl.UIHint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.UIHint/VB/Default.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicControl.UIHint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.UIHint/CS/Email.ascx#2)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicControl.UIHint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.UIHint/VB/Email.ascx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataField" />
        <related type="Article" href="https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512">Общие сведения о модели платформа динамических данных ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.DynamicData.DynamicControl.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя группы проверки для элемента управления.</summary>
        <value>Имя группы проверки для элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Группы проверки позволяют назначать элементам управления проверки на странице определенную категорию. Каждая группа проверки может быть проверена независимо от других групп проверки на странице. Используйте свойство, чтобы указать имя группы проверки <xref:System.Web.DynamicData.DynamicControl> , для которой элемент управления вызывает проверку при обратной передаче страницы на сервер. <xref:System.Web.DynamicData.DynamicControl.ValidationGroup%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
