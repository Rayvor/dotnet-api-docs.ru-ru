<Type Name="EdmFunctions" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7aad046b4ca34e78048b6c45d12a755fbbf4a1a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70717859" /></Metadata><TypeSignature Language="C#" Value="public static class EdmFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EdmFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
  <TypeSignature Language="VB.NET" Value="Public Module EdmFunctions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EdmFunctions abstract sealed" />
  <TypeSignature Language="F#" Value="type EdmFunctions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a8bd8-101">Предоставляет API для создания объектов <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, вызывающих канонические функции модели EDM, и разрешает доступ к API как к методам расширения в самом типе выражения.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that invoke canonical EDM functions, and allows that API to be accessed as extension methods on the expression type itself.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Abs (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Abs(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Abs (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Abs(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a8bd8-102">Выражение, задающее числовое значение.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-102">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="a8bd8-103">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Abs с заданным аргументом, который должен иметь числовой тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-103">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</span></span> <span data-ttu-id="a8bd8-104">Тип результата выражения совпадает с типом результата **value**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-104">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-105">Новое выражение DbFunctionExpression, которое возвращает абсолютное значение **value**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-105">A new DbFunctionExpression that returns the absolute value of **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-106">**value**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-106">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-107">**value**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-107">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddDays (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddDays(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDays (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a8bd8-108">Выражение, задающее значение, к которому необходимо прибавить значение **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-108">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a8bd8-109">Выражение, задающее число дней, прибавляемых к значению **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-109">An expression that specifies the number of days to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-110">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию AddDays с заданными аргументами, которые должны иметь типы результатов DateTime или DateTimeOffset и целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-110">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="a8bd8-111">Тип результата выражения совпадает с типом результата **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-111">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-112">Новый объект DbFunctionExpression, прибавляющий число дней, указанное в **addValue**, к значению, указанному в **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-112">A new DbFunctionExpression that adds the number of days specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-113">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-113">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-114">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-114">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddHours (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddHours(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHours (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a8bd8-115">Выражение, задающее значение, к которому необходимо прибавить значение **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-115">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a8bd8-116">Выражение, задающее число часов, прибавляемых к значению **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-116">An expression that specifies the number of hours to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-117">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию AddHours с заданными аргументами, которые должны иметь типы результатов DateTime, DateTimeOffset или Time и целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-117">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="a8bd8-118">Тип результата выражения совпадает с типом результата **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-118">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-119">Новый объект DbFunctionExpression, прибавляющий число часов, указанное в **addValue**, к значению, указанному в **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-119">A new DbFunctionExpression that adds the number of hours specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-120">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-120">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-121">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-121">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMicroseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a8bd8-122">Выражение, задающее значение, к которому необходимо прибавить значение **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-122">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a8bd8-123">Выражение, задающее число микросекунд, прибавляемых к значению **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-123">An expression that specifies the number of microseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-124">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию AddMicroseconds с заданными аргументами, которые должны иметь типы результатов DateTime, DateTimeOffset или Time и целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-124">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="a8bd8-125">Тип результата выражения совпадает с типом результата **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-125">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-126">Новое выражение DbFunctionExpression, которое прибавляет число микросекунд, указанных в **addValue**, к значению, заданному в **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-126">A new DbFunctionExpression that adds the number of microseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-127">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-127">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-128">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-128">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMilliseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a8bd8-129">Выражение, задающее значение, к которому необходимо прибавить значение **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-129">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a8bd8-130">Выражение, задающее число миллисекунд, прибавляемых к значению **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-130">An expression that specifies the number of milliseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-131">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию AddMilliseconds с заданными аргументами, которые должны иметь типы результатов DateTime, DateTimeOffset или Time и целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-131">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="a8bd8-132">Тип результата выражения совпадает с типом результата **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-132">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-133">Новое выражение DbFunctionExpression, которое прибавляет число миллисекунд, определенных в **addValue**, к значению, заданному в **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-133">A new DbFunctionExpression that adds the number of milliseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-134">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-134">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-135">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-135">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMinutes (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a8bd8-136">Выражение, задающее значение, к которому необходимо прибавить значение **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-136">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a8bd8-137">Выражение, задающее число минут, прибавляемых к значению **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-137">An expression that specifies the number of minutes to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-138">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию AddMinutes с заданными аргументами, которые должны иметь типы результатов DateTime, DateTimeOffset или Time и целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-138">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="a8bd8-139">Тип результата выражения совпадает с типом результата **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-139">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-140">Новое выражение DbFunctionExpression, которое прибавляет число минут, определенных в **addValue**, к значению, заданному в **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-140">A new DbFunctionExpression that adds the number of minutes specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-141">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-141">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-142">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-142">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMonths (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMonths(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMonths (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a8bd8-143">Выражение, задающее значение, к которому необходимо прибавить значение **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-143">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a8bd8-144">Выражение, задающее число месяцев, прибавляемых к значению **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-144">An expression that specifies the number of months to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-145">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию AddMonths с заданными аргументами, которые должны иметь типы результатов DateTime или DateTimeOffset и целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-145">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="a8bd8-146">Тип результата выражения совпадает с типом результата **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-146">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-147">Новый объект DbFunctionExpression, прибавляющий число месяцев, указанное в **addValue**, к значению, указанному в **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-147">A new DbFunctionExpression that adds the number of months specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-148">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-148">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-149">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-149">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNanoseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a8bd8-150">Выражение, задающее значение, к которому необходимо прибавить значение **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-150">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a8bd8-151">Выражение, задающее число наносекунд, прибавляемых к значению **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-151">An expression that specifies the number of nanoseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-152">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию AddNanoseconds с заданными аргументами, которые должны иметь типы результатов DateTime, DateTimeOffset или Time и целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-152">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="a8bd8-153">Тип результата выражения совпадает с типом результата **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-153">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-154">Новое выражение DbFunctionExpression, которое прибавляет число наносекунд, определенных в **addValue**, к значению, заданному в **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-154">A new DbFunctionExpression that adds the number of nanoseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-155">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-155">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-156">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-156">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSeconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a8bd8-157">Выражение, задающее значение, к которому необходимо прибавить значение **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-157">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a8bd8-158">Выражение, задающее число секунд, прибавляемых к значению **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-158">An expression that specifies the number of seconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-159">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию AddSeconds с заданными аргументами, которые должны иметь типы результатов DateTime, DateTimeOffset или Time и целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-159">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="a8bd8-160">Тип результата выражения совпадает с типом результата **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-160">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-161">Новое выражение DbFunctionExpression, которое прибавляет число секунд, указанное в **addValue**, к значению, указанному в **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-161">A new DbFunctionExpression that adds the number of seconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-162">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-162">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-163">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-163">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddYears (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddYears(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddYears (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a8bd8-164">Выражение, задающее значение, к которому необходимо прибавить значение **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-164">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a8bd8-165">Выражение, задающее число лет, прибавляемых к значению **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-165">An expression that specifies the number of years to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-166">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию AddYears с заданными аргументами, которые должны иметь типы результатов DateTime или DateTimeOffset и целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-166">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="a8bd8-167">Тип результата выражения совпадает с типом результата **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-167">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-168">Новый объект DbFunctionExpression, прибавляющий число лет, заданное в **addValue**, к значению, заданному в **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-168">A new DbFunctionExpression that adds the number of years specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-169">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-169">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-170">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-170">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Average (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Average(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Average(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Average : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a8bd8-171">Выражение, задающее коллекцию, для которой должно быть вычислено среднее значение.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-171">An expression that specifies the collection from which the average value should be computed.</span></span></param>
        <summary><span data-ttu-id="a8bd8-172">Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Avg" для указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-172">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Avg' function over the specified collection.</span></span> <span data-ttu-id="a8bd8-173">Тип результата выражения совпадает с типом элемента коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-173">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-174">Новое выражение DbFunctionExpression, создающее среднее значение.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-174">A new DbFunctionExpression that produces the average value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-175">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-175">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-176">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-176">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseAnd (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseAnd(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseAnd : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="a8bd8-177">Выражение, задающее первый операнд.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-177">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="a8bd8-178">Выражение, задающее второй операнд.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-178">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="a8bd8-179">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию BitwiseAnd с заданными аргументами, которые должны иметь одинаковый целочисленный тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-179">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="a8bd8-180">Тип результата выражения совпадает с типом аргументов.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-180">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-181">Новое выражение DbFunctionExpression, которое возвращает значение, сформированное путем выполнения побитовой операции И для значений **value1** и **value2**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-181">A new DbFunctionExpression that returns the value produced by performing the bitwise AND of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-182">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-182">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-183">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-183">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseNot">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseNot (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseNot(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member BitwiseNot : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a8bd8-184">Выражение, задающее первый операнд.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-184">An expression that specifies the first operand.</span></span></param>
        <summary><span data-ttu-id="a8bd8-185">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию BitwiseNot с заданным аргументом, который должен иметь целочисленный тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-185">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</span></span> <span data-ttu-id="a8bd8-186">Тип результата выражения совпадает с типом аргументов.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-186">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-187">Новое выражение DbFunctionExpression, которое возвращает значение, сформированное путем выполнения побитовой операции НЕ для значения **value**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-187">A new DbFunctionExpression that returns the value produced by performing the bitwise NOT of **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-188">**value**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-188">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-189">**value**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-189">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseOr (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseOr(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseOr : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="a8bd8-190">Выражение, задающее первый операнд.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-190">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="a8bd8-191">Выражение, задающее второй операнд.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-191">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="a8bd8-192">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию BitwiseOr с заданными аргументами, которые должны иметь одинаковый целочисленный тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-192">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="a8bd8-193">Тип результата выражения совпадает с типом аргументов.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-193">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-194">Новое выражение DbFunctionExpression, которое возвращает значение, сформированное путем выполнения побитовой операции ИЛИ для значений **value1** и **value2**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-194">A new DbFunctionExpression that returns the value produced by performing the bitwise OR of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-195">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-195">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-196">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-196">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseXor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseXor (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseXor(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseXor : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="a8bd8-197">Выражение, задающее первый операнд.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-197">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="a8bd8-198">Выражение, задающее второй операнд.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-198">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="a8bd8-199">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию BitwiseXor с заданными аргументами, которые должны иметь одинаковый целочисленный тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-199">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="a8bd8-200">Тип результата выражения совпадает с типом аргументов.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-200">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-201">Новое выражение DbFunctionExpression, которое возвращает значение, сформированное путем выполнения побитовой операции исключающего ИЛИ для значений **value1** и **value2**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-201">A new DbFunctionExpression that returns the value produced by performing the bitwise XOR (exclusive OR) of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-202">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-202">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-203">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-203">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Ceiling (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Ceiling(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ceiling (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Ceiling(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Ceiling : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a8bd8-204">Выражение, задающее числовое значение.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-204">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="a8bd8-205">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Ceiling с заданным аргументом, который должен иметь одинарный, двойной или десятичный тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-205">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="a8bd8-206">Тип результата выражения совпадает с типом результата **value**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-206">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-207">Новое выражение DbFunctionExpression, которое возвращает самое маленькое целочисленное значение, не меньшее чем **value**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-207">A new DbFunctionExpression that returns the smallest integer value not less than **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-208">**value**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-208">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-209">**value**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-209">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Concat (this System.Data.Common.CommandTrees.DbExpression string1, System.Data.Common.CommandTrees.DbExpression string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Concat(class System.Data.Common.CommandTrees.DbExpression string1, class System.Data.Common.CommandTrees.DbExpression string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat (string1 As DbExpression, string2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Concat(System::Data::Common::CommandTrees::DbExpression ^ string1, System::Data::Common::CommandTrees::DbExpression ^ string2);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="string2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="a8bd8-210">Выражение, задающее строку, которая должна оказаться первой в сцепленной результирующей строке.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-210">An expression that specifies the string that should appear first in the concatenated result string.</span></span></param>
        <param name="string2"><span data-ttu-id="a8bd8-211">Выражение, задающее строку, которая должна оказаться второй в сцепленной результирующей строке.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-211">An expression that specifies the string that should appear second in the concatenated result string.</span></span></param>
        <summary><span data-ttu-id="a8bd8-212">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Concat с заданными аргументами, которые должны иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-212">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="a8bd8-213">Тип результата выражения — строка.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-213">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-214">Новый объект DbFunctionExpression, создающий объединенную строку.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-214">A new DbFunctionExpression that produces the concatenated string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-215">**string1** **string2**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-215">**string1** **string2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-216">**string1** **string2**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-216">**string1** **string2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Contains (this System.Data.Common.CommandTrees.DbExpression searchedString, System.Data.Common.CommandTrees.DbExpression searchedForString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Contains(class System.Data.Common.CommandTrees.DbExpression searchedString, class System.Data.Common.CommandTrees.DbExpression searchedForString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains (searchedString As DbExpression, searchedForString As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Contains(System::Data::Common::CommandTrees::DbExpression ^ searchedString, System::Data::Common::CommandTrees::DbExpression ^ searchedForString);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains (searchedString, searchedForString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchedString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="searchedForString" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="searchedString"><span data-ttu-id="a8bd8-217">Выражение, задающее строку, в которой следует искать вхождение **searchedForString**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-217">An expression that specifies the string to search for any occurrence of **searchedForString**.</span></span></param>
        <param name="searchedForString"><span data-ttu-id="a8bd8-218">Выражение, задающее строку, которую следует искать в строке **searchedString**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-218">An expression that specifies the string to search for in **searchedString**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-219">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Contains" с заданными аргументами, которые должны иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-219">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="a8bd8-220">Тип результата выражения — логический.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-220">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-221">Новое выражение DbFunctionExpression, которое возвращает логическое значение, указывающее, входит ли **searchedForString** в строку **searchedString**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-221">A new DbFunctionExpression that returns a Boolean value indicating whether or not **searchedForString** occurs within **searchedString**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-222">**searchedString** **searchedForString**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-222">**searchedString** **searchedForString**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-223">**searchedString** **searchedForString**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-223">**searchedString** **searchedForString**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Count (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Count(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Count(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Count : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a8bd8-224">Выражение, задающее коллекцию, для которой должно быть вычислено значение счетчика.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-224">An expression that specifies the collection over which the count value should be computed.</span></span></param>
        <summary><span data-ttu-id="a8bd8-225">Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Count" для указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-225">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Count' function over the specified collection.</span></span> <span data-ttu-id="a8bd8-226">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-226">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-227">Новое выражение DbFunctionExpression, создающее значение счетчика.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-227">A new DbFunctionExpression that produces the count value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-228">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-228">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-229">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-229">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTime (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTime(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateDateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime (year, month, day, hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="a8bd8-230">Выражение, предоставляющее значение года для нового экземпляра DateTime.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-230">An expression that provides the year value for the new DateTime instance.</span></span></param>
        <param name="month"><span data-ttu-id="a8bd8-231">Выражение, предоставляющее значение месяца для нового экземпляра DateTime.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-231">An expression that provides the month value for the new DateTime instance.</span></span></param>
        <param name="day"><span data-ttu-id="a8bd8-232">Выражение, предоставляющее значение дня для нового экземпляра DateTime.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-232">An expression that provides the day value for the new DateTime instance.</span></span></param>
        <param name="hour"><span data-ttu-id="a8bd8-233">Выражение, предоставляющее значение часа для нового экземпляра DateTime.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-233">An expression that provides the hour value for the new DateTime instance.</span></span></param>
        <param name="minute"><span data-ttu-id="a8bd8-234">Выражение, предоставляющее значение минуты для нового экземпляра DateTime.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-234">An expression that provides the minute value for the new DateTime instance.</span></span></param>
        <param name="second"><span data-ttu-id="a8bd8-235">Выражение, предоставляющее значение секунды для нового экземпляра DateTime.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-235">An expression that provides the second value for the new DateTime instance.</span></span></param>
        <summary><span data-ttu-id="a8bd8-236">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию CreateDateTime с указанными аргументами.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-236">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTime' function with the specified arguments.</span></span> <span data-ttu-id="a8bd8-237">Аргумент **second** должен иметь тип результата Edm.Double, а остальные аргументы должны иметь тип результата Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-237">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="a8bd8-238">Тип результата выражения — Edm.DateTime.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-238">The result type of the expression is Edm.DateTime.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-239">Новое DbFunctionExpression, которое возвращает новое DateTime на основе указанных значений.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-239">A new DbFunctionExpression that returns a new DateTime based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-240">**year** **month** **day** **hour** **minute** **second**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-240">**year** **month** **day** **hour** **minute** **second**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-241">**year** **month** **day** **hour** **minute** **second**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-241">**year** **month** **day** **hour** **minute** **second**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second, System.Data.Common.CommandTrees.DbExpression timeZoneOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second, class System.Data.Common.CommandTrees.DbExpression timeZoneOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTimeOffset (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression, timeZoneOffset As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTimeOffset(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second, System::Data::Common::CommandTrees::DbExpression ^ timeZoneOffset);" />
      <MemberSignature Language="F#" Value="static member CreateDateTimeOffset : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset (year, month, day, hour, minute, second, timeZoneOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeZoneOffset" Type="System.Data.Common.CommandTrees.DbExpression" Index="6" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="a8bd8-242">Выражение, предоставляющее значение года для нового экземпляра DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-242">An expression that provides the year value for the new DateTimeOffset instance.</span></span></param>
        <param name="month"><span data-ttu-id="a8bd8-243">Выражение, предоставляющее значение месяца для нового экземпляра DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-243">An expression that provides the month value for the new DateTimeOffset instance.</span></span></param>
        <param name="day"><span data-ttu-id="a8bd8-244">Выражение, предоставляющее значение дня для нового экземпляра DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-244">An expression that provides the day value for the new DateTimeOffset instance.</span></span></param>
        <param name="hour"><span data-ttu-id="a8bd8-245">Выражение, предоставляющее значение часа для нового экземпляра DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-245">An expression that provides the hour value for the new DateTimeOffset instance.</span></span></param>
        <param name="minute"><span data-ttu-id="a8bd8-246">Выражение, предоставляющее значение минуты для нового экземпляра DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-246">An expression that provides the minute value for the new DateTimeOffset instance.</span></span></param>
        <param name="second"><span data-ttu-id="a8bd8-247">Выражение, предоставляющее значение секунды для нового экземпляра DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-247">An expression that provides the second value for the new DateTimeOffset instance.</span></span></param>
        <param name="timeZoneOffset"><span data-ttu-id="a8bd8-248">Выражение, предоставляющее число минут смещения часового пояса для нового экземпляра DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-248">An expression that provides the number of minutes in the time zone offset value for the new DateTimeOffset instance.</span></span></param>
        <summary><span data-ttu-id="a8bd8-249">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию CreateDateTimeOffset с указанными аргументами.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-249">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTimeOffset' function with the specified arguments.</span></span> <span data-ttu-id="a8bd8-250">Аргумент **second** должен иметь тип результата Edm.Double, а остальные аргументы должны иметь тип результата Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-250">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="a8bd8-251">Тип результата выражения — Edm.DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-251">The result type of the expression is Edm.DateTimeOffset.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-252">Новое DbFunctionExpression, которое возвращает новое DateTimeOffset на основе указанных значений.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-252">A new DbFunctionExpression that returns a new DateTimeOffset based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateTime (System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateTime(class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTime (hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateTime(System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime (hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="hour"><span data-ttu-id="a8bd8-255">Выражение, предоставляющее значение часа для нового экземпляра DateTime.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-255">An expression that provides the hour value for the new DateTime instance.</span></span></param>
        <param name="minute"><span data-ttu-id="a8bd8-256">Выражение, предоставляющее значение минуты для нового экземпляра DateTime.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-256">An expression that provides the minute value for the new DateTime instance.</span></span></param>
        <param name="second"><span data-ttu-id="a8bd8-257">Выражение, предоставляющее значение секунды для нового экземпляра DateTime.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-257">An expression that provides the second value for the new DateTime instance.</span></span></param>
        <summary><span data-ttu-id="a8bd8-258">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию CreateTime с указанными аргументами.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-258">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateTime' function with the specified arguments.</span></span> <span data-ttu-id="a8bd8-259">Аргумент **second** должен иметь тип результата Edm.Double, а остальные аргументы должны иметь тип результата Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-259">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="a8bd8-260">Тип результата выражения — Edm.Time.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-260">The result type of the expression is Edm.Time.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-261">Новое DbFunctionExpression, которое возвращает новое Time на основе указанных значений.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-261">A new DbFunctionExpression that returns a new Time based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-262">**hour** **minute** **second**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-262">**hour** **minute** **second**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-263">**hour** **minute** **second**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-263">**hour** **minute** **second**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8bd8-264">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "CurrentDateTime".</span><span class="sxs-lookup"><span data-stu-id="a8bd8-264">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTime' function.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-265">Новое DbFunctionExpression, которое возвращает текущую дату и время, как экземпляр Edm.DateTime.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-265">A new DbFunctionExpression that returns the current date and time as an Edm.DateTime instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTimeOffset () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTimeOffset();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTimeOffset : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8bd8-266">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "CurrentDateTimeOffset".</span><span class="sxs-lookup"><span data-stu-id="a8bd8-266">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTimeOffset' function.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-267">Новое DbFunctionExpression, которое возвращает текущую дату и время, как экземпляр Edm.DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-267">A new DbFunctionExpression that returns the current date and time as an Edm.DateTimeOffset instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUtcDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentUtcDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentUtcDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentUtcDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8bd8-268">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "CurrentUtcDateTime".</span><span class="sxs-lookup"><span data-stu-id="a8bd8-268">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentUtcDateTime' function.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-269">Новое DbFunctionExpression, которое возвращает текущую дату и время в формате UTC, как экземпляр Edm.DateTime.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-269">A new DbFunctionExpression that returns the current UTC date and time as an Edm.DateTime instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Day (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Day(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Day (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Day(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Day : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a8bd8-270">Выражение, задающее значение, из которого требуется извлечь значение дня.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-270">An expression that specifies the value from which the day should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a8bd8-271">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Day" с заданным аргументом, который должен иметь тип результата DateTime или DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-271">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a8bd8-272">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-272">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-273">Новое выражение DbFunctionExpression, которое возвращает целочисленное значение дня из **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-273">A new DbFunctionExpression that returns the integer day value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-274">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-274">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-275">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-275">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DayOfYear (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DayOfYear(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member DayOfYear : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a8bd8-276">Выражение, задающее значение, из которого требуется извлечь значение дня года.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-276">An expression that specifies the value from which the day within the year should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a8bd8-277">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "DayOfYear" с заданным аргументом, который должен иметь тип результата DateTime или DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-277">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a8bd8-278">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-278">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-279">Новое выражение DbFunctionExpression, которое возвращает целочисленное значение дня года из **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-279">A new DbFunctionExpression that returns the integer day of year value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-280">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-280">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-281">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-281">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DiffDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffDays (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffDays(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffDays (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="a8bd8-282">Выражение, задающее аргумент первого значения даты.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-282">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="a8bd8-283">Выражение, задающее аргумент второго значения даты.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-283">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="a8bd8-284">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию DiffDays с заданными аргументами, которые должны иметь тип результата DateTime или DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-284">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a8bd8-285">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-285">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-286">Новое выражение DbFunctionExpression, которое возвращает количество дней, составляющее разницу между **dateValue1** и **dateValue2**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-286">A new DbFunctionExpression that returns the number of days that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffHours (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffHours(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffHours (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="a8bd8-287">Выражение, задающее аргумент первого значения времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-287">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="a8bd8-288">Выражение, задающее аргумент второго значения времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-288">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="a8bd8-289">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию DiffHours с заданными аргументами, которые должны иметь тип результата DateTime, DateTimeOffset или Time.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-289">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a8bd8-290">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-290">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-291">Новое выражение DbFunctionExpression, которое возвращает количество часов, составляющее разницу между **timeValue1** и **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-291">A new DbFunctionExpression that returns the number of hours that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMicroseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="a8bd8-292">Выражение, задающее аргумент первого значения времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-292">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="a8bd8-293">Выражение, задающее аргумент второго значения времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-293">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="a8bd8-294">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию DiffMicroseconds с заданными аргументами, которые должны иметь тип результата DateTime, DateTimeOffset или Time.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-294">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a8bd8-295">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-295">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-296">Новое выражение DbFunctionExpression, которое возвращает количество микросекунд, составляющее разницу между **timeValue1** и **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-296">A new DbFunctionExpression that returns the number of microseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMilliseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="a8bd8-297">Выражение, задающее аргумент первого значения времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-297">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="a8bd8-298">Выражение, задающее аргумент второго значения времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-298">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="a8bd8-299">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию DiffMilliseconds с заданными аргументами, которые должны иметь тип результата DateTime, DateTimeOffset или Time.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-299">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a8bd8-300">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-300">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-301">Новое выражение DbFunctionExpression, которое возвращает количество миллисекунд, составляющее разницу между **timeValue1** и **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-301">A new DbFunctionExpression that returns the number of milliseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMinutes (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="a8bd8-302">Выражение, задающее аргумент первого значения времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-302">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="a8bd8-303">Выражение, задающее аргумент второго значения времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-303">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="a8bd8-304">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию DiffMinutes с заданными аргументами, которые должны иметь тип результата DateTime, DateTimeOffset или Time.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-304">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a8bd8-305">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-305">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-306">Новое выражение DbFunctionExpression, которое возвращает количество минут, составляющее разницу между **timeValue1** и **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-306">A new DbFunctionExpression that returns the number of minutes that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMonths (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="a8bd8-307">Выражение, задающее аргумент первого значения даты.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-307">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="a8bd8-308">Выражение, задающее аргумент второго значения даты.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-308">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="a8bd8-309">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию DiffMonths с заданными аргументами, которые должны иметь тип результата DateTime или DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-309">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a8bd8-310">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-310">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-311">Новое выражение DbFunctionExpression, которое возвращает количество месяцев, составляющее разницу между **dateValue1** и **dateValue2**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-311">A new DbFunctionExpression that returns the number of months that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffNanoseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="a8bd8-312">Выражение, задающее аргумент первого значения времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-312">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="a8bd8-313">Выражение, задающее аргумент второго значения времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-313">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="a8bd8-314">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию DiffNanoseconds с заданными аргументами, которые должны иметь тип результата DateTime, DateTimeOffset или Time.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-314">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a8bd8-315">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-315">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-316">Новое выражение DbFunctionExpression, которое возвращает количество наносекунд, составляющее разницу между **timeValue1** и **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-316">A new DbFunctionExpression that returns the number of nanoseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffSeconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="a8bd8-317">Выражение, задающее аргумент первого значения времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-317">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="a8bd8-318">Выражение, задающее аргумент второго значения времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-318">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="a8bd8-319">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию DiffSeconds с заданными аргументами, которые должны иметь тип результата DateTime, DateTimeOffset или Time.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-319">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a8bd8-320">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-320">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-321">Новое выражение DbFunctionExpression, которое возвращает количество секунд, составляющее разницу между **timeValue1** и **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-321">A new DbFunctionExpression that returns the number of seconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffYears (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffYears(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffYears (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="a8bd8-322">Выражение, задающее аргумент первого значения даты.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-322">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="a8bd8-323">Выражение, задающее аргумент второго значения даты.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-323">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="a8bd8-324">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию DiffYears с заданными аргументами, которые должны иметь тип результата DateTime или DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-324">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a8bd8-325">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-325">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-326">Новое выражение DbFunctionExpression, которое возвращает количество лет, составляющее разницу между **dateValue1** и **dateValue2**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-326">A new DbFunctionExpression that returns the number of years that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression EndsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression EndsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndsWith (stringArgument As DbExpression, suffix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ EndsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ suffix);" />
      <MemberSignature Language="F#" Value="static member EndsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith (stringArgument, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="suffix" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-327">Выражение, задающее строку, в конце которой выполняется поиск строки **suffix**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-327">An expression that specifies the string that is searched at the end for string **suffix**.</span></span></param>
        <param name="suffix"><span data-ttu-id="a8bd8-328">Выражение, задающее целевую строку, поиск которой выполняется в конце **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-328">An expression that specifies the target string that is searched for at the end of **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-329">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "EndsWith" с заданными аргументами, которые должны иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-329">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="a8bd8-330">Тип результата выражения — логический.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-330">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-331">Новое выражение DbFunctionExpression, которое возвращает логическое значение, указывающее, заканчивается ли **stringArgument** строкой **suffix**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-331">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** ends with **suffix**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Floor (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Floor(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Floor (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Floor(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Floor : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a8bd8-332">Выражение, задающее числовое значение.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-332">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="a8bd8-333">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Floor" с заданным аргументом, который должен иметь одинарный, двойной или десятичный тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-333">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="a8bd8-334">Тип результата выражения совпадает с типом результата **value**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-334">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-335">Новое выражение DbFunctionExpression, которое возвращает самое большое целое значение, не большее чем **value**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-335">A new DbFunctionExpression that returns the largest integer value not greater than **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-336">**value**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-336">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-337">**value**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-337">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTotalOffsetMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes (this System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes(class System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTotalOffsetMinutes (dateTimeOffsetArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ GetTotalOffsetMinutes(System::Data::Common::CommandTrees::DbExpression ^ dateTimeOffsetArgument);" />
      <MemberSignature Language="F#" Value="static member GetTotalOffsetMinutes : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes dateTimeOffsetArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffsetArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffsetArgument"><span data-ttu-id="a8bd8-338">Выражение, задающее значение DateTimeOffset, из которого требуется извлечь смещение в минутах относительно времени по Гринвичу (GMT).</span><span class="sxs-lookup"><span data-stu-id="a8bd8-338">An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a8bd8-339">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "GetTotalOffsetMinutes" с заданным аргументом, который должен иметь тип результата DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-339">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</span></span> <span data-ttu-id="a8bd8-340">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-340">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-341">Новое выражение DbFunctionExpression, которое возвращает число минут смещения **dateTimeOffsetArgument** относительно GMT.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-341">A new DbFunctionExpression that returns the number of minutes **dateTimeOffsetArgument** is offset from GMT.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-342">**dateTimeOffsetArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-342">**dateTimeOffsetArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-343">**dateTimeOffsetArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-343">**dateTimeOffsetArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Hour (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Hour(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hour (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Hour(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a8bd8-344">Выражение, задающее значение, из которого требуется извлечь значение часа.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-344">An expression that specifies the value from which the hour should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a8bd8-345">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Hour с заданным аргументом, который должен иметь тип результата DateTime, DateTimeOffset или Time.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-345">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a8bd8-346">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-346">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-347">Новое выражение DbFunctionExpression, которое возвращает целочисленное значение часа из **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-347">A new DbFunctionExpression that returns the integer hour value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-348">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-348">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-349">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-349">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression IndexOf (this System.Data.Common.CommandTrees.DbExpression searchString, System.Data.Common.CommandTrees.DbExpression stringToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression IndexOf(class System.Data.Common.CommandTrees.DbExpression searchString, class System.Data.Common.CommandTrees.DbExpression stringToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (searchString As DbExpression, stringToFind As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ IndexOf(System::Data::Common::CommandTrees::DbExpression ^ searchString, System::Data::Common::CommandTrees::DbExpression ^ stringToFind);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf (searchString, stringToFind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="stringToFind" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="searchString"><span data-ttu-id="a8bd8-350">Выражение, задающее строку, которую следует искать в строке **stringToFind**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-350">An expression that specifies the string to search for **stringToFind**.</span></span></param>
        <param name="stringToFind"><span data-ttu-id="a8bd8-351">Выражение, задающее строку, которую требуется найти в строке **searchString**, необходимо проверить.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-351">An expression that specifies the string to locate within **searchString** should be checked.</span></span></param>
        <summary><span data-ttu-id="a8bd8-352">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "IndexOf" с заданными аргументами, которые должны иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-352">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="a8bd8-353">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-353">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-354">Новое выражение DbFunctionExpression, которое возвращает первый индекс **stringToFind** в **searchString**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-354">A new DbFunctionExpression that returns the first index of **stringToFind** in **searchString**.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bd8-355">Индекс, возвращаемый IndexOf, \<— b > 1\</b >.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-355">The index returned by IndexOf is \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-356">**searchString** **stringToFind**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-356">**searchString** **stringToFind**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-357">**searchString** **stringToFind**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-357">**searchString** **stringToFind**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Left (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Left(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Left (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Left(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Left : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-358">Выражение, задающее строку, из которой требуется извлечь крайнюю левую подстроку.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-358">An expression that specifies the string from which to extract the leftmost substring.</span></span></param>
        <param name="length"><span data-ttu-id="a8bd8-359">Выражение, задающее длину крайней левой подстроки, которую требуется извлечь из **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-359">An expression that specifies the length of the leftmost substring to extract from **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-360">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Left" с заданными аргументами, которые должны иметь строковый и целочисленный типы результатов.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-360">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</span></span> <span data-ttu-id="a8bd8-361">Тип результата выражения — строка.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-361">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-362">Новое выражение DbFunctionExpression, которое возвращает крайнюю левую подстроку длиной **length** из **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-362">A new DbFunctionExpression that returns the leftmost substring of length **length** from **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-363">**stringArgument** **length**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-363">**stringArgument** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-364">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-364">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Length (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Length(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Length (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Length(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Length : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-365">Выражение, задающее строку, длину которой следует вычислить.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-365">An expression that specifies the string for which the length should be computed.</span></span></param>
        <summary><span data-ttu-id="a8bd8-366">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Length с заданным аргументом, который должен иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-366">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a8bd8-367">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-367">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-368">Новое выражение DbFunctionExpression, которое возвращает длину **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-368">A new DbFunctionExpression that returns the length of **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-369">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-369">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-370">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-370">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression LongCount (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression LongCount(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ LongCount(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a8bd8-371">Выражение, задающее коллекцию, для которой должно быть вычислено значение счетчика.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-371">An expression that specifies the collection over which the count value should be computed.</span></span></param>
        <summary><span data-ttu-id="a8bd8-372">Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "BigCount" для указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-372">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BigCount' function over the specified collection.</span></span> <span data-ttu-id="a8bd8-373">Тип результата выражения — Edm.Int64.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-373">The result type of the expression is Edm.Int64.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-374">Новое выражение DbFunctionExpression, создающее значение счетчика.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-374">A new DbFunctionExpression that produces the count value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-375">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-375">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-376">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-376">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Max (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Max(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Max(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Max : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a8bd8-377">Выражение, задающее коллекцию, для которой должно быть извлечено максимальное значение.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-377">An expression that specifies the collection from which the maximum value should be retrieved</span></span></param>
        <summary><span data-ttu-id="a8bd8-378">Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Max" для указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-378">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Max' function over the specified collection.</span></span> <span data-ttu-id="a8bd8-379">Тип результата выражения совпадает с типом элемента коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-379">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-380">Новое выражение DbFunctionExpression, создающее максимальное значение.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-380">A new DbFunctionExpression that produces the maximum value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-381">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-381">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-382">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-382">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Millisecond (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Millisecond(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Millisecond (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Millisecond(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Millisecond : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a8bd8-383">Выражение, задающее значение, из которого требуется извлечь значение миллисекунды.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-383">An expression that specifies the value from which the millisecond should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a8bd8-384">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Millisecond с заданным аргументом, который должен иметь тип результата DateTime, DateTimeOffset или Time.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-384">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a8bd8-385">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-385">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-386">Новое выражение DbFunctionExpression, которое возвращает целочисленное значение миллисекунды из **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-386">A new DbFunctionExpression that returns the integer millisecond value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-387">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-387">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-388">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-388">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Min (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Min(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Min(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Min : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a8bd8-389">Выражение, задающее коллекцию, для которой должно быть извлечено минимальное значение.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-389">An expression that specifies the collection from which the minimum value should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a8bd8-390">Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Min" для указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-390">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Min' function over the specified collection.</span></span> <span data-ttu-id="a8bd8-391">Тип результата выражения совпадает с типом элемента коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-391">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-392">Новое выражение DbFunctionExpression, создающее минимальное значение.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-392">A new DbFunctionExpression that produces the minimum value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-393">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-393">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-394">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-394">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Minute (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Minute(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minute (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Minute(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a8bd8-395">Выражение, задающее значение, из которого требуется извлечь значение минуты.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-395">An expression that specifies the value from which the minute should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a8bd8-396">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Minute с заданным аргументом, который должен иметь тип результата DateTime, DateTimeOffset или Time.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-396">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a8bd8-397">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-397">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-398">Новое выражение DbFunctionExpression, которое возвращает целочисленное значение минуты из **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-398">A new DbFunctionExpression that returns the integer minute value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-399">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-399">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-400">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-400">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Month (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Month(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Month (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Month(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Month : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a8bd8-401">Выражение, задающее значение, из которого требуется извлечь значение месяца.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-401">An expression that specifies the value from which the month should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a8bd8-402">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Month" с заданным аргументом, который должен иметь тип результата DateTime или DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-402">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a8bd8-403">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-403">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-404">Новое выражение DbFunctionExpression, которое возвращает целочисленное значение месяца из **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-404">A new DbFunctionExpression that returns the integer month value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-405">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-405">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-406">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-406">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewGuid">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression NewGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression NewGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function NewGuid () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ NewGuid();" />
      <MemberSignature Language="F#" Value="static member NewGuid : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8bd8-407">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "NewGuid".</span><span class="sxs-lookup"><span data-stu-id="a8bd8-407">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'NewGuid' function.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-408">Новое DbFunctionExpression, которое возвращает новое значение GUID.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-408">A new DbFunctionExpression that returns a new GUID value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Power (this System.Data.Common.CommandTrees.DbExpression baseArgument, System.Data.Common.CommandTrees.DbExpression exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Power(class System.Data.Common.CommandTrees.DbExpression baseArgument, class System.Data.Common.CommandTrees.DbExpression exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Power (baseArgument As DbExpression, exponent As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Power(System::Data::Common::CommandTrees::DbExpression ^ baseArgument, System::Data::Common::CommandTrees::DbExpression ^ exponent);" />
      <MemberSignature Language="F#" Value="static member Power : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power (baseArgument, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="exponent" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="baseArgument"><span data-ttu-id="a8bd8-409">Выражение, задающее числовое значение, которое требуется возвести в заданную степень.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-409">An expression that specifies the numeric value to raise to the given power.</span></span></param>
        <param name="exponent"><span data-ttu-id="a8bd8-410">Выражение, задающее степень, в которую требуется возвести значение **baseArgument**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-410">An expression that specifies the power to which **baseArgument** should be raised.</span></span></param>
        <summary><span data-ttu-id="a8bd8-411">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Power" с заданными аргументами, которые должны иметь числовые типы результатов.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-411">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</span></span> <span data-ttu-id="a8bd8-412">Тип результата выражения совпадает с типом результата **baseArgument**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-412">The result type of the expression is the same as the result type of **baseArgument**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-413">Новое выражение DbFunctionExpression, которое возвращает значение **baseArgument**, возведенное в степень **exponent**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-413">A new DbFunctionExpression that returns the value of **baseArgument** raised to the power specified by **exponent**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-414">**baseArgument** **exponent**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-414">**baseArgument** **exponent**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-415">**baseArgument** **exponent**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-415">**baseArgument** **exponent**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Replace (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression toReplace, System.Data.Common.CommandTrees.DbExpression replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Replace(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression toReplace, class System.Data.Common.CommandTrees.DbExpression replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace (stringArgument As DbExpression, toReplace As DbExpression, replacement As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Replace(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ toReplace, System::Data::Common::CommandTrees::DbExpression ^ replacement);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace (stringArgument, toReplace, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toReplace" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="replacement" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-416">Выражение, задающее строку, в которой требуется выполнить операцию замены.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-416">An expression that specifies the string in which to perform the replacement operation.</span></span></param>
        <param name="toReplace"><span data-ttu-id="a8bd8-417">Выражение, задающее строку, которую требуется заменить.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-417">An expression that specifies the string that is replaced.</span></span></param>
        <param name="replacement"><span data-ttu-id="a8bd8-418">Выражение, задающее заменяющую строку.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-418">An expression that specifies the replacement string.</span></span></param>
        <summary><span data-ttu-id="a8bd8-419">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Replace" с заданными аргументами, которые должны иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-419">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="a8bd8-420">Тип результата выражения также является строкой.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-420">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-421">Новое выражение DbFunctionExpression, которое возвращает новую строку на основе **stringArgument**, где каждое вхождение **toReplace** заменяется на **replacement**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-421">A new DbFunctionExpression than returns a new string based on **stringArgument** where every occurrence of **toReplace** is replaced by **replacement**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-422">**stringArgument** **toReplace** **replacement**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-422">**stringArgument** **toReplace** **replacement**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-423">**stringArgument** **toReplace** **replacement**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-423">**stringArgument** **toReplace** **replacement**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Reverse (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Reverse(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Reverse(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-424">Выражение, задающее строку, порядок элементов которой нужно изменить на обратный.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-424">An expression that specifies the string to reverse.</span></span></param>
        <summary><span data-ttu-id="a8bd8-425">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Reverse" с заданным аргументом, который должен иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-425">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a8bd8-426">Тип результата выражения также является строкой.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-426">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-427">Новое выражение DbFunctionExpression, создающее обратное значение **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-427">A new DbFunctionExpression that produces the reversed value of **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-428">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-428">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-429">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-429">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Right (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Right(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Right (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Right(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Right : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-430">Выражение, задающее строку, из которой требуется извлечь крайнюю правую подстроку.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-430">An expression that specifies the string from which to extract the rightmost substring.</span></span></param>
        <param name="length"><span data-ttu-id="a8bd8-431">Выражение, задающее длину крайней правой подстроки, которую требуется извлечь из **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-431">An expression that specifies the length of the rightmost substring to extract from **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-432">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Right" с заданными аргументами, которые должны иметь строковый и целочисленный типы результатов.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-432">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</span></span> <span data-ttu-id="a8bd8-433">Тип результата выражения — строка.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-433">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-434">Новое выражение DbFunctionExpression, которое возвращает крайнюю правую подстроку длиной **length** из **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-434">A new DbFunctionExpression that returns the rightmost substring of length **length** from **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-435">**stringArgument** **length**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-435">**stringArgument** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-436">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-436">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8bd8-437">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Round.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-437">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a8bd8-438">Выражение, задающее числовое значение, которое требуется округлить.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-438">An expression that specifies the numeric value to round.</span></span></param>
        <summary><span data-ttu-id="a8bd8-439">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Round" с заданным аргументом, который должен иметь одинарный, двойной или десятичный тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-439">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="a8bd8-440">Тип результата выражения совпадает с типом результата **value**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-440">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-441">Новое DbFunctionExpression, которое округляет указанный аргумент до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-441">A new DbFunctionExpression that rounds the specified argument to the nearest integer value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-442">**value**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-442">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-443">**value**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-443">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a8bd8-444">Выражение, задающее числовое значение, которое требуется округлить.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-444">An expression that specifies the numeric value to round.</span></span></param>
        <param name="digits"><span data-ttu-id="a8bd8-445">Выражение, задающее количество разрядов точности для округления.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-445">An expression that specifies the number of digits of precision to use when rounding.</span></span></param>
        <summary><span data-ttu-id="a8bd8-446">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Round" с заданными аргументами, которые должны иметь одинарный, двойной или десятичный типы результатов.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-446">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span></span> <span data-ttu-id="a8bd8-447">Тип результата выражения совпадает с типом результата **value**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-447">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-448">Новое выражение DbFunctionExpression, которое округляет заданный аргумент до ближайшего целого числа с точностью, указанной в **digits**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-448">A new DbFunctionExpression that rounds the specified argument to the nearest integer value, with precision as specified by **digits**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-449">**value** **digits**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-449">**value** **digits**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-450">**value** **digits**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-450">**value** **digits**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Second (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Second(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Second (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Second(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Second : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a8bd8-451">Выражение, задающее значение, из которого требуется извлечь значение секунды.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-451">An expression that specifies the value from which the second should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a8bd8-452">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Second с заданным аргументом, который должен иметь тип результата DateTime, DateTimeOffset или Time.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-452">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a8bd8-453">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-453">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-454">Новое выражение DbFunctionExpression, которое возвращает целочисленное значение секунды из **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-454">A new DbFunctionExpression that returns the integer second value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-455">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-455">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-456">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-456">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StartsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StartsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith (stringArgument As DbExpression, prefix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StartsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ prefix);" />
      <MemberSignature Language="F#" Value="static member StartsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith (stringArgument, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="prefix" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-457">Выражение, задающее строку, в начале которой выполняется поиск строки **prefix**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-457">An expression that specifies the string that is searched at the start for string **prefix**.</span></span></param>
        <param name="prefix"><span data-ttu-id="a8bd8-458">Выражение, задающее целевую строку, поиск которой выполняется в начале **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-458">An expression that specifies the target string that is searched for at the start of **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="a8bd8-459">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "StartsWith" с заданными аргументами, которые должны иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="a8bd8-460">Тип результата выражения — логический.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-460">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-461">Новое выражение DbFunctionExpression, которое возвращает логическое значение, указывающее, начинается ли **stringArgument** со строки **prefix**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-461">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** starts with **prefix**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDev (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDev(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDev (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDev(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDev : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a8bd8-462">Выражение, задающее коллекцию, для которой должно быть вычислено значение среднеквадратичного отклонения.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-462">An expression that specifies the collection for which the standard deviation should be computed.</span></span></param>
        <summary><span data-ttu-id="a8bd8-463">Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "StDev" над не равными NULL членами указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-463">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</span></span> <span data-ttu-id="a8bd8-464">Тип результата выражения — Edm.Double.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-464">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-465">Новое выражение DbFunctionExpression, создающее значение среднеквадратичного отклонения для членов коллекции, отличных от NULL.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-465">A new DbFunctionExpression that produces the standard deviation value over non-null members of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-466">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-466">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-467">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-467">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDevP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDevP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDevP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDevP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDevP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a8bd8-468">Выражение, задающее коллекцию, для которой должно быть вычислено значение среднеквадратичного отклонения.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-468">An expression that specifies the collection for which the standard deviation should be computed.</span></span></param>
        <summary><span data-ttu-id="a8bd8-469">Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "StDevP" над популяцией указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-469">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDevP' function over the population of the specified collection.</span></span> <span data-ttu-id="a8bd8-470">Тип результата выражения — Edm.Double.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-470">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-471">Новое выражение DbFunctionExpression, создающее значение среднеквадратичного отклонения.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-471">A new DbFunctionExpression that produces the standard deviation value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-472">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-472">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-473">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-473">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Substring (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression start, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Substring(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression start, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Substring (stringArgument As DbExpression, start As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Substring(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ start, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Substring : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring (stringArgument, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="start" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-474">Выражение, задающее строку, из которой требуется извлечь подстроку.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-474">An expression that specifies the string from which to extract the substring.</span></span></param>
        <param name="start"><span data-ttu-id="a8bd8-475">Выражение, задающее индекс начала подстроки.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-475">An expression that specifies the starting index from which the substring should be taken.</span></span></param>
        <param name="length"><span data-ttu-id="a8bd8-476">Выражение, задающее длину подстроки.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-476">An expression that specifies the length of the substring.</span></span></param>
        <summary><span data-ttu-id="a8bd8-477">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Substring" с заданными аргументами, которые должны иметь строковый и целочисленный типы результатов.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-477">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</span></span> <span data-ttu-id="a8bd8-478">Тип результата выражения — строка.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-478">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-479">Новое выражение DbFunctionExpression, которое возвращает подстроку длиной **length** из **stringArgument** начиная с позиции **start**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-479">A new DbFunctionExpression that returns the substring of length **length** from **stringArgument** starting at **start**.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bd8-480">Подстрока требует, чтобы индекс, \*\*\*\* заданный \<параметром Start, был\<b > на основе 1/b >.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-480">Substring requires that the index specified by **start** be \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-481">**stringArgument** **start** **length**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-481">**stringArgument** **start** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-482">**stringArgument** **start** **length**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-482">**stringArgument** **start** **length**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Sum (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Sum(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Sum(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a8bd8-483">Выражение, задающее коллекцию, для которой должно быть вычислено значение суммы.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-483">An expression that specifies the collection from which the sum should be computed.</span></span></param>
        <summary><span data-ttu-id="a8bd8-484">Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Sum" для указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-484">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Sum' function over the specified collection.</span></span> <span data-ttu-id="a8bd8-485">Тип результата выражения совпадает с типом элемента коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-485">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-486">Новое выражение DbFunctionExpression, создающее значение суммы.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-486">A new DbFunctionExpression that produces the sum.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-487">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-487">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-488">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-488">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToLower (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToLower(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLower (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToLower(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToLower : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-489">Выражение, задающее строку, которую требуется перевести в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-489">An expression that specifies the string that should be converted to lower case.</span></span></param>
        <summary><span data-ttu-id="a8bd8-490">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "ToLower" с заданным аргументом, который должен иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-490">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a8bd8-491">Тип результата выражения также является строкой.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-491">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-492">Новое выражение DbFunctionExpression, которое возвращает значение **stringArgument**, преобразованное в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-492">A new DbFunctionExpression that returns value of **stringArgument** converted to lower case.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-493">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-493">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-494">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-494">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToUpper (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToUpper(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUpper (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToUpper(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToUpper : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-495">Выражение, задающее строку, которую требуется перевести в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-495">An expression that specifies the string that should be converted to upper case.</span></span></param>
        <summary><span data-ttu-id="a8bd8-496">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "ToUpper" с заданным аргументом, который должен иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-496">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a8bd8-497">Тип результата выражения также является строкой.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-497">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-498">Новое выражение DbFunctionExpression, которое возвращает значение **stringArgument**, преобразованное в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-498">A new DbFunctionExpression that returns value of **stringArgument** converted to upper case.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-499">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-499">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-500">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-500">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Trim (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Trim(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Trim (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Trim(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Trim : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-501">Выражение, задающее строку, у которой должны быть удалены начальный и конечный пробелы.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-501">An expression that specifies the string from which leading and trailing space should be removed.</span></span></param>
        <summary><span data-ttu-id="a8bd8-502">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Trim" с заданным аргументом, который должен иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-502">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a8bd8-503">Тип результата выражения также является строкой.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-503">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-504">Новое выражение DbFunctionExpression, которое возвращает значение **stringArgument** с удаленными начальным и конечным пробелами.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-504">A new DbFunctionExpression that returns value of **stringArgument** with leading and trailing space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-505">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-505">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-506">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-506">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimEnd (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimEnd(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimEnd : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-507">Выражение, задающее строку, у которой должен быть удален конечный пробел.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-507">An expression that specifies the string from which trailing space should be removed.</span></span></param>
        <summary><span data-ttu-id="a8bd8-508">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "RTrim" с заданным аргументом, который должен иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-508">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a8bd8-509">Тип результата выражения также является строкой.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-509">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-510">Новое выражение DbFunctionExpression, которое возвращает значение **stringArgument** с удаленным конечным пробелом.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-510">A new DbFunctionExpression that returns value of **stringArgument** with trailing space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-511">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-511">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-512">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-512">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimStart (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimStart(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimStart (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimStart(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimStart : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a8bd8-513">Выражение, задающее строку, у которой должен быть удален начальный пробел.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-513">An expression that specifies the string from which leading space should be removed.</span></span></param>
        <summary><span data-ttu-id="a8bd8-514">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "LTrim" с заданным аргументом, который должен иметь строковый тип результата.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-514">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a8bd8-515">Тип результата выражения также является строкой.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-515">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-516">Новое выражение DbFunctionExpression, которое возвращает значение **stringArgument** с удаленным начальным пробелом.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-516">A new DbFunctionExpression that returns value of **stringArgument** with leading space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-517">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-517">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-518">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-518">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Truncate (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Truncate(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Truncate (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Truncate(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Truncate : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a8bd8-519">Выражение, задающее числовое значение, которое требуется усечь.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-519">An expression that specifies the numeric value to truncate.</span></span></param>
        <param name="digits"><span data-ttu-id="a8bd8-520">Выражение, задающее для усечения количество разрядов точности.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-520">An expression that specifies the number of digits of precision to use when truncating.</span></span></param>
        <summary><span data-ttu-id="a8bd8-521">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Truncate" с заданными аргументами, которые должны иметь одинарный, двойной или десятичный типы результатов.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-521">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span></span> <span data-ttu-id="a8bd8-522">Тип результата выражения совпадает с типом результата **value**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-522">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-523">Новое выражение DbFunctionExpression, которое усекает заданный аргумент до ближайшего целого числа с точностью, указанной в **digits**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-523">A new DbFunctionExpression that truncates the specified argument to the nearest integer value, with precision as specified by **digits**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-524">**value** **digits**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-524">**value** **digits**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-525">**value** **digits**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-525">**value** **digits**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TruncateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TruncateTime (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TruncateTime(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member TruncateTime : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a8bd8-526">Выражение, задающее значение, для которого должен быть усечен интервал времени.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-526">An expression that specifies the value for which the time portion should be truncated.</span></span></param>
        <summary><span data-ttu-id="a8bd8-527">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "TruncateTime" с заданным аргументом, который должен иметь тип результата DateTime или DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-527">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a8bd8-528">Тип результата выражения совпадает с типом результата **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-528">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-529">Новое выражение DbFunctionExpression, которое возвращает значение **dateValue** со временем, равным нулю.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-529">A new DbFunctionExpression that returns the value of **dateValue** with time set to zero.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-530">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-530">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-531">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-531">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Var (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Var(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Var (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Var(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Var : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a8bd8-532">Выражение, задающее коллекцию, для которой должно быть вычислено значение статистической дисперсии.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-532">An expression that specifies the collection for which the statistical variance should be computed.</span></span></param>
        <summary><span data-ttu-id="a8bd8-533">Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Var" над не равными NULL членами указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-533">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Var' function over the non-null members of the specified collection.</span></span> <span data-ttu-id="a8bd8-534">Тип результата выражения — Edm.Double.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-534">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-535">Новое выражение DbFunctionExpression, создающее значение статистической дисперсии для членов коллекции, отличных от NULL.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-535">A new DbFunctionExpression that produces the statistical variance value for the non-null members of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-536">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-536">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-537">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-537">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression VarP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression VarP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VarP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ VarP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member VarP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a8bd8-538">Выражение, задающее коллекцию, для которой должно быть вычислено значение статистической дисперсии.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-538">An expression that specifies the collection for which the statistical variance should be computed.</span></span></param>
        <summary><span data-ttu-id="a8bd8-539">Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "VarP" над популяцией указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-539">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'VarP' function over the population of the specified collection.</span></span> <span data-ttu-id="a8bd8-540">Тип результата выражения — Edm.Double.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-540">The result type of the expression Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-541">Новое выражение DbFunctionExpression, создающее значение статистической дисперсии.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-541">A new DbFunctionExpression that produces the statistical variance value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-542">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-542">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-543">**коллекция**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-543">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Year (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Year(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Year (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Year(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Year : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a8bd8-544">Выражение, задающее значение, из которого требуется извлечь значение года.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-544">An expression that specifies the value from which the year should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a8bd8-545">Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Year" с заданным аргументом, который должен иметь тип результата DateTime или DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-545">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a8bd8-546">Типом результата выражения является Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-546">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a8bd8-547">Новое выражение DbFunctionExpression, которое возвращает целочисленное значение года из **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a8bd8-547">A new DbFunctionExpression that returns the integer year value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bd8-548">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-548">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bd8-549">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a8bd8-549">**dateValue**</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
