<Type Name="ServiceHostFactoryBase" FullName="System.ServiceModel.Activation.ServiceHostFactoryBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9d8924ab314433922d717096313fd96b4559a0c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70712999" /></Metadata><TypeSignature Language="C#" Value="public abstract class ServiceHostFactoryBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServiceHostFactoryBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.ServiceHostFactoryBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServiceHostFactoryBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHostFactoryBase abstract" />
  <TypeSignature Language="F#" Value="type ServiceHostFactoryBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Обеспечивает базовую реализацию фабрики, благодаря которой код приложения может принимать участие в создании узлов служб в управляемых средах размещения, где экземпляр узла создается динамически в ответ на входящие сообщения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Управляемые среды размещения, поддерживающие этот интерфейс, — это службы IIS или службы активации Windows (WAS). Реализуйте фабрику, наследуемую от этого класса, когда реализован пользовательский унаследованный объект <xref:System.ServiceModel.ServiceHostBase> в этих средах размещения. Если реализован пользовательский унаследованный объект <xref:System.ServiceModel.ServiceHost>, рассмотрите возможность наследования от <xref:System.ServiceModel.Activation.ServiceHostFactory>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceHostFactoryBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceHostFactoryBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.ServiceHostFactoryBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.ServiceHostBase CreateServiceHost(string constructorString, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateServiceHost (constructorString As String, baseAddresses As Uri()) As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::ServiceHostBase ^ CreateServiceHost(System::String ^ constructorString, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="abstract member CreateServiceHost : string * Uri[] -&gt; System.ServiceModel.ServiceHostBase" Usage="serviceHostFactoryBase.CreateServiceHost (constructorString, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorString" Type="System.String" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="constructorString">Данные инициации, передаваемые в экземпляр <see cref="T:System.ServiceModel.ServiceHostBase" />, созданный фабрикой.</param>
        <param name="baseAddresses">Массив <see cref="T:System.Array" /> типа <see cref="T:System.Uri" />, содержащий базовые адреса узла.</param>
        <summary>При переопределении в унаследованном классе создает <see cref="T:System.ServiceModel.ServiceHostBase" /> с определенным базовым адресом с использованием пользовательских данных инициации.</summary>
        <returns>Объект <see cref="T:System.ServiceModel.ServiceHostBase" /> с указанными базовыми адресами, инициализированный пользовательскими данными инициации.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
