<Type Name="WebScriptServiceHostFactory" FullName="System.ServiceModel.Activation.WebScriptServiceHostFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7dd242adbf0a226b3cbb92ba659f5ddb5657c24" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69160538" /></Metadata><TypeSignature Language="C#" Value="public class WebScriptServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebScriptServiceHostFactory extends System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class WebScriptServiceHostFactory&#xA;Inherits ServiceHostFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebScriptServiceHostFactory : System::ServiceModel::Activation::ServiceHostFactory" />
  <TypeSignature Language="F#" Value="type WebScriptServiceHostFactory = class&#xA;    inherit ServiceHostFactory" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activation.ServiceHostFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Автоматически добавляет в службу конечную точку ASP.NET AJAX, не требуя настройки, в управляемой среде размещения, которая динамически активирует экземпляры узла службы в ответ на входящие сообщения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта фабрика обеспечивает способ добавления конечной точки ASP.NET AJAX в службу, не требуя настройки. Конечная точка добавляется в любую другую конечную точку, определенную в конфигурации, если таковая имеется. Управляемые среды размещения, поддерживающие этот тип динамической активации узла, — это службы IIS и службы активации Windows (WAS).  
  
 Чтобы использовать эту фабрику, укажите <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> `Factory` в атрибуте [@ServiceHost](~/docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md) директивы.  
  
 Конечная точка ASP.NET AJAX, создаваемая этой фабрикой, настраивается с использованием <xref:System.ServiceModel.WebHttpBinding> и <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>, со всеми значениями по умолчанию. Конечная точка создается с пустым адресом относительно информации в файле SVC. Если конфигурация службы уже определяет конечную точку по этому адресу, выдается исключение <xref:System.InvalidOperationException> и происходит сбой запуска службы.  
  
   
  
## Examples  
 Укажите для значения `Factory` атрибута в [@ServiceHost](~/docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md) директиве, `MyService` чтобы активировать конечную точку ASP.NET AJAX для службы, как показано в следующем примере. <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory>  
  
```  
<% @ServiceHost   
Service="MyService"  
Language="C#"  
Debug="true"  
Factory="WebScriptServiceHostFactory"  
%>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebScriptServiceHostFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebScriptServiceHostFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно этот конструктор вызывается автоматически Windows Communication Foundation (WCF) в рамках активации службы — нет необходимости вызывать этот метод вручную.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.ServiceHost CreateServiceHost(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateServiceHost (serviceType As Type, baseAddresses As Uri()) As ServiceHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::ServiceHost ^ CreateServiceHost(Type ^ serviceType, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="override this.CreateServiceHost : Type * Uri[] -&gt; System.ServiceModel.ServiceHost" Usage="webScriptServiceHostFactory.CreateServiceHost (serviceType, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="serviceType">Тип размещаемой службы.</param>
        <param name="baseAddresses">Массив <see cref="T:System.Array" /> типа <see cref="T:System.Uri" />, содержащий базовые адреса размещаемой службы.</param>
        <summary>Создает унаследованный класс <see cref="T:System.ServiceModel.ServiceHost" /> для указанного типа службы с определенным базовым адресом, который можно использовать для автоматической реализации конечных точек ASP.NET AJAX в некоторых сценариях.</summary>
        <returns>Узел <see cref="T:System.ServiceModel.ServiceHost" /> типа службы с указанными базовыми адресами.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно этот метод вызывается автоматически Windows Communication Foundation (WCF) в рамках активации службы — нет необходимости вызывать этот метод вручную.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Другая служба использует тот же базовый адрес, или другая конечная точка использует тот же адрес, что и конечная точка ASP.NET AJAX, которую пытается создать эта фабрика.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
