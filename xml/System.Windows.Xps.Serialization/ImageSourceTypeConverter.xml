<Type Name="ImageSourceTypeConverter" FullName="System.Windows.Xps.Serialization.ImageSourceTypeConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="787cdb73882144fae8a9abbfb5dbdc6367a15c26" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65009234" /></Metadata><TypeSignature Language="C#" Value="public class ImageSourceTypeConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageSourceTypeConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageSourceTypeConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageSourceTypeConverter : System::ComponentModel::ExpandableObjectConverter" />
  <TypeSignature Language="F#" Value="type ImageSourceTypeConverter = class&#xA;    inherit ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>ReachFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет преобразователи типов для преобразования объектов <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> в объекты других типов и наоборот.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 См. в разделе базовых классов <xref:System.ComponentModel.TypeConverter> и <xref:System.ComponentModel.ExpandableObjectConverter> для важные сведения об использовании.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageSourceTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageSourceTypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 См. в разделе базовых классов <xref:System.ComponentModel.TypeConverter> и <xref:System.ComponentModel.ExpandableObjectConverter> для важные сведения об использовании.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="imageSourceTypeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Объект, предоставляющий контекстную информацию.</param>
        <param name="sourceType">Тип преобразуемого объекта.</param>
        <summary>Возвращает значение, указывающее, может ли этот преобразователь преобразовать экземпляр заданного типа с <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
        <returns><see langword="true" /> Если объекты заданного типа могут быть преобразованы; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация в данном классе этот метод возвращает `true` только если `sourceType` является <xref:System.Uri>.  
  
 `context` Параметр не используется. См. в разделе **примечания о наследовании**.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Переопределите этот метод в соответствии с требованиями к преобразованию. Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр <paramref name="context" />. Этот параметр может быть <see langword="null" />; таким образом, всегда проверяйте его. Свойства объекта <paramref name="context" /> могут также возвращать пустую ссылку (<see langword="Nothing" />).</para></block>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="imageSourceTypeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Объект, предоставляющий контекстную информацию.</param>
        <param name="destinationType">Тип объекта, который требуется преобразовать в <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</param>
        <summary>Возвращает значение, указывающее, является ли это <see cref="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" /> можно преобразовать <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> в экземпляр указанного типа.</summary>
        <returns><see langword="true" /> Если преобразование возможно; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация в данном классе этот метод возвращает `true` только если `destinationType` является <xref:System.Uri>.  
  
 `context` Параметр не используется. См. в разделе **примечания о наследовании**.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Переопределите этот метод в соответствии с требованиями к преобразованию. Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр <paramref name="context" />. Этот параметр может быть <see langword="null" />; таким образом, всегда проверяйте его. Свойства объекта <paramref name="context" /> могут также возвращать пустую ссылку (<see langword="Nothing" />).</para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="imageSourceTypeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Объект, предоставляющий контекстную информацию.</param>
        <param name="culture">Язык и региональные параметры, которые используются во время преобразования.</param>
        <param name="value">Объект, который будет преобразован.</param>
        <summary>Преобразует указанный объект в <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
        <returns>Новый объект <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не реализован в этом классе - выбрасывает исключения. См. в разделе **примечания о наследовании**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Этот метод вызывается из этого класса, а не из производного класса.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> — <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="value" /> Не является типом, который может быть преобразован.</exception>
        <block subset="none" type="overrides"><para>Переопределите этот метод для предоставления метода преобразования. Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр <paramref name="context" />. Используйте <paramref name="culture" /> параметр для предоставления сведений о язык или язык и региональные параметры.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="imageSourceTypeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Объект, предоставляющий контекстную информацию.</param>
        <param name="culture">Язык и региональные параметры, которые используются во время преобразования.</param>
        <param name="value">Объект, который требуется преобразовать.</param>
        <param name="destinationType">Тип, который будет <paramref name="value" /> преобразуется.</param>
        <summary>Преобразует <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> для объекта указанного типа.</summary>
        <returns>Новый <see cref="T:System.Object" /> назначенного типа. Реализованное в этом классе, этот объект должен быть <see cref="T:System.Uri" />. Этот объект представляет [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] сериализованного изображения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализованное в этом классе `value` должно быть <xref:System.Windows.Media.Imaging.BitmapSource>.  
  
 Реализованное в этом классе `destinationType` должно быть <xref:System.Uri> или <xref:System.NotSupportedException> возникает исключение.  
  
 `culture` Параметр не используется. См. в разделе **примечания о наследовании**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationType" /> Не является типом, <paramref name="value" /> можно преобразовать.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="context" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Значение параметра <paramref name="value" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Windows.Xps.XpsSerializationException">При сериализации изображения произошла ошибка.</exception>
        <block subset="none" type="overrides"><para>Переопределите этот метод, чтобы предоставить собственное преобразование. Используйте <paramref name="culture" /> параметр для указания языка и региональных параметров. Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр <paramref name="context" />. Этот параметр может быть <see langword="null" />; таким образом, всегда проверяйте его. Свойства объекта <paramref name="context" /> могут также возвращать пустую ссылку (<see langword="Nothing" />).</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="imageSourceTypeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">Объект, предоставляющий контекстную информацию.</param>
        <param name="value">Объект, который требуется получить описания свойств для.</param>
        <param name="attributes">Массив атрибутов, которые используются для фильтрации возвращаемой коллекции с целью исключения ненужных свойств.</param>
        <summary>Возвращает коллекцию описаний свойств для указанного типа.</summary>
        <returns>Объект <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> , содержащий описания свойств, предоставляемых для компонента; или <see langword="null" /> Если ни одного описания свойств возвращаются.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не реализован в этом классе - выбрасывает исключение. См. в разделе **примечания о наследовании**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Этот метод вызывается из этого класса, а не из производного класса.</exception>
        <block subset="none" type="overrides"><para>Переопределите этот метод для предоставления метода для получения выбран <see cref="T:System.ComponentModel.PropertyDescriptor" /> объектов для типов. Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр <paramref name="context" />. Используйте <paramref name="attributes" /> массива для обозначения свойства для включения или исключения.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>