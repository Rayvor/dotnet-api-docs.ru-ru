<Type Name="DispatcherObject" FullName="System.Windows.Threading.DispatcherObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91d8903969619d295cee4b3ddca3c886446cc128" /><Meta Name="ms.sourcegitcommit" Value="7845f124909a0999a19cc65f40feab5e75cd9b8d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65064664" /></Metadata><TypeSignature Language="C#" Value="public abstract class DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DispatcherObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherObject abstract" />
  <TypeSignature Language="F#" Value="type DispatcherObject = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет объект, который связан с <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Только поток, <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> был создан на могут получить доступ к <xref:System.Windows.Threading.DispatcherObject> напрямую.  Чтобы получить доступ к <xref:System.Windows.Threading.DispatcherObject> из потока, не <xref:System.Windows.Threading.DispatcherObject> был создан, вызовите <xref:System.Windows.Threading.Dispatcher.Invoke%2A> или <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> на <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.DispatcherObject> связан.  
  
 Подклассы <xref:System.Windows.Threading.DispatcherObject> что необходимо для принудительного применения потока безопасности можно выполнить путем вызова <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> на все открытые методы.  Это гарантирует, что вызывающий поток является потоком, <xref:System.Windows.Threading.DispatcherObject> был создан.  
  
 Объект <xref:System.Windows.Threading.DispatcherObject> не может быть создан независимо друг от друга; то есть защищены все конструкторы.  
  
 Объекты, которые являются производными от <xref:System.Windows.Threading.DispatcherObject> сходство потоков.  
  
 Объекты, которые являются производными от <xref:System.Windows.Freezable> являются свободнопоточный зафиксированный они.  Дополнительные сведения см. в разделе [Общие сведения об объектах класса Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  
  
 ]]></format>
    </remarks>
    <threadsafe>Любые открытые <see langword="static" /> члены этого типа являются потокобезопасными. Потокобезопасность членов экземпляров не гарантируется.  
  
Этот объект может осуществляться только из потока, в котором он был создан. Попытка доступа к нему из других потоков будет создавать <see cref="T:System.InvalidOperationException" />. <see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> или <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> обеспечивают поддержку для маршалинга работы в нужный поток.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DispatcherObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DispatcherObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; bool" Usage="dispatcherObject.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет, имеет ли вызывающий поток доступ к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
        <returns><see langword="true" /> Если вызывающий поток имеет доступ к этому объекту; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Только поток <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> был создан на могут получить доступ к <xref:System.Windows.Threading.DispatcherObject>.  
  
 Любой поток можно проверить наличие доступа к этому <xref:System.Windows.Threading.DispatcherObject>.  
  
 Разница между <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> и <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> является то, что <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> возвращает логическое значение, указывающее, имеет ли вызывающий поток доступ к этому <xref:System.Windows.Threading.DispatcherObject> и <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> создает исключение, если вызывающий поток не имеет доступа к Это <xref:System.Windows.Threading.DispatcherObject>.  
  
 Вызов этого метода совпадает с вызовом метода <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> в связанном <xref:System.Windows.Threading.Dispatcher> объект.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> для определения, имеет ли поток доступ к потоку, <xref:System.Windows.Controls.Button> был создан.  <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> Метод <xref:System.Windows.Controls.Button> вызывается, чтобы проверить доступ к потоку.  Если вызывающий поток имеет доступ, <xref:System.Windows.Controls.Button> обновляется, только обратившись к членами <xref:System.Windows.Controls.Button>; в противном случае делегат, который принимает <xref:System.Windows.Controls.Button> как аргумент, публикуется на <xref:System.Windows.Threading.Dispatcher> из <xref:System.Windows.Controls.Button>.  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccesscheckaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccesscheckaccess)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:System.Windows.Threading.Dispatcher" /> это <see cref="T:System.Windows.Threading.DispatcherObject" /> связан.</summary>
        <value>Диспетчер.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Только поток, <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> был создан на могут получить доступ к <xref:System.Windows.Threading.DispatcherObject> напрямую.  Чтобы получить доступ к <xref:System.Windows.Threading.DispatcherObject> из потока, не <xref:System.Windows.Threading.DispatcherObject> был создан, вызовите <xref:System.Windows.Threading.Dispatcher.Invoke%2A> и <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> на <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.DispatcherObject> связан.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberSignature Language="F#" Value="member this.VerifyAccess : unit -&gt; unit" Usage="dispatcherObject.VerifyAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обеспечивает, что вызывающий поток имеет доступ к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Только поток <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> был создан на могут получить доступ к <xref:System.Windows.Threading.DispatcherObject>.  
  
 Любой поток можно проверить наличие доступа к этому <xref:System.Windows.Threading.DispatcherObject>.  
  
 Разница между <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> и <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> является то, что <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> возвращает логическое значение, указывающее, имеет ли вызывающий поток доступ к этому <xref:System.Windows.Threading.DispatcherObject> и <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> создает исключение, если вызывающий поток не имеет доступа к Это <xref:System.Windows.Threading.DispatcherObject>.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> для определения, имеет ли поток доступ к потоку, <xref:System.Windows.Controls.Button> был создан.  Если вызывающий поток не имеет доступа, <xref:System.InvalidOperationException> возникает исключение.  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccessverifyaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">вызывающий поток не имеет доступа к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>