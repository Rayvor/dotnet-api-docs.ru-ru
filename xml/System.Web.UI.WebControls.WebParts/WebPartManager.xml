<Type Name="WebPartManager" FullName="System.Web.UI.WebControls.WebParts.WebPartManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c703891c7a4ebdf7f78b5a40a7746c8ac071f701" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73391014" /></Metadata><TypeSignature Language="C#" Value="public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartManager extends System.Web.UI.Control implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartManager&#xA;Inherits Control&#xA;Implements INamingContainer, IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartManager : System::Web::UI::Control, System::Web::UI::INamingContainer, System::Web::UI::WebControls::WebParts::IPersonalizable" />
  <TypeSignature Language="F#" Value="type WebPartManager = class&#xA;    inherit Control&#xA;    interface INamingContainer&#xA;    interface IPersonalizable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IPersonalizable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ViewStateModeById</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Служит в качестве центрального класса набора элементов управления веб-частей, управляющего всеми элементами управления веб-частей, функциональностью и событиями, происходящими на веб-странице.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемент управления выступает в качестве центра управления для веб-части приложения. На каждой странице, использующей веб-части элементы управления, должен быть один и только один экземпляр<xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления. Как и в большинстве аспектов веб-части приложений, элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> работает только с аутентифицированными пользователями. Кроме того, его функциональные возможности практически полностью работают с серверными элементами управления, которые находятся в зонах веб-части, которые наследуются от класса <xref:System.Web.UI.WebControls.WebParts.WebZone>. Серверные элементы управления, расположенные на странице за пределами этих зон, могут иметь очень мало веб-части функциональности или взаимодействия с элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
 В качестве центра для веб-частиной функциональности на странице элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> выполняет задачи, описанные в следующей таблице.  
  
|Категория задачи|Что делает элемент управления|  
|-------------------|---------------------------|  
|Отслеживание элементов управления веб-части|Отслеживает множество различных видов элементов управления на странице, которые предоставляют веб-части функции, включая элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, подключения, зоны и т. д.|  
|Добавление и удаление элементов управления веб-части|Предоставляет методы для добавления, удаления и закрытия элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart> на странице.|  
|Администрирование подключений|Создает соединения между элементами управления и отслеживает подключения, а также процессы их добавления и удаления.|  
|Персонализация элементов управления и страниц|Позволяет пользователям перемещать элементы управления в разные места на странице и запускать представления, в которых пользователи могут изменять внешний вид, свойства и поведение элементов управления. Поддерживает пользовательские параметры персонализации на каждой странице.|  
|Переключение между разными представлениями страниц|Переключает страницу между различными специализированными представлениями страницы, чтобы пользователи могли выполнять определенные задачи, такие как изменение макета страницы или редактирование элементов управления.|  
|Создание событий жизненного цикла веб-части|Определяет, создает и позволяет разработчикам управлять событиями жизненного цикла элементов управления веб-части, например при добавлении, перемещении, подключении или удалении элементов управления.|  
|Включение импорта и экспорта элементов управления|Экспортирует XML-потоки, которые содержат состояние свойств элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, и позволяет пользователям импортировать файлы для удобства в персонализации сложных элементов управления на других страницах или сайтах.|  
  
 Класс <xref:System.Web.UI.WebControls.WebParts.WebPartManager> имеет большой набор свойств. В соответствии с ролью <xref:System.Web.UI.WebControls.WebParts.WebPartManager> отслеживания других элементов управления, она имеет ряд свойств, которые ссылаются на коллекции либо веб-части элементов управления, либо других специальных веб-частиных объектов. Свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> представляют собой все коллекции, используемые элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> для отслеживания и других задач управления.  
  
 Другая группа свойств содержит настраиваемые предупреждения, которые применяются в определенных сценариях, происходящих в веб-части приложении. К ним относятся <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>и свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>.  
  
 Класс <xref:System.Web.UI.WebControls.WebParts.WebPartManager> переопределяет некоторые из его базовых унаследованных свойств, которые используются многими серверными веб-элементами управления. К ним относятся свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>.  
  
 Наконец, существует группа свойств, полезных для доступа к текущему состоянию приложения. Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> указывает текущий режим просмотра, в котором находится страница. Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> указывает, разрешено ли элементу управления прорисовку клиентского скрипта, что уместно в ситуациях, когда у пользователей могут быть браузеры с разными возможностями или отключены сценарии. Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> полезно для ссылки на вспомогательный класс, который содержит вызовы к ряду важных веб-части методов, используемых для случаев расширяемости. Скрывая вызовы к этим методам в отдельном классе (класс <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>), упрощен собственный API класса <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> предоставляет доступ к объектам персонализации, сохраняющим параметры персонализации пользователей, и сохраняет эти данные в постоянное хранилище. Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> указывает, какой <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления на странице в данный момент выбран пользователем или приложением. Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> указывает, изменились ли пользовательские данные персонализации в элементе управления <xref:System.Web.UI.WebControls.WebParts.WebPart>.  
  
 Элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> содержит пять встроенных режимов отображения или представления веб-страницы. Разработчики могут расширить эту функцию, создавая пользовательские режимы, расширяя типы, такие как класс <xref:System.Web.UI.WebControls.WebParts.WebZone> или класс <xref:System.Web.UI.WebControls.WebParts.ToolZone>. Пользователи могут переключать страницу в различные режимы отображения при условии, что на странице имеются соответствующие типы элементов управления, соответствующие заданному режиму отображения.  
  
> [!NOTE]
>  Эту функцию можно расширить, чтобы пользователи могли переключиться в пользовательский режим экрана без соответствующей зоны на странице. Однако поведение по умолчанию заключается в том, что режимы экрана соответствуют зонам.  
  
 Стандартные режимы интерфейса представлены открытыми полями в классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. В следующей таблице перечислены поля и режимы вывода, на которые они ссылаются. Текущий режим отображения страницы, как отмечалось выше, всегда упоминается в свойстве <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> и наборе режимов отображения, доступных на конкретной странице, с учетом типа зон, имеющихся на странице, содержится в свойстве <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>.  
  
|Поле|Сведения о режиме просмотра|  
|-----------|--------------------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>|Нормальное пользовательское представление веб-страницы; по умолчанию и наиболее распространенный режим вывода.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>|Представление, в котором пользователи могут изменять или удалять элементы управления для изменения макета страницы.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>|Представление, в котором отображается пользовательский интерфейс редактирования; Пользователи могут изменять внешний вид, свойства и поведение элементов управления, видимых в нормальном режиме просмотра.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>|Представление, в котором пользовательский интерфейс каталога станет видимым. Пользователи могут добавлять элементы управления на страницу из каталогов доступных элементов управления.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>|Представление, в котором отображается пользовательский интерфейс подключения; Пользователи могут подключаться, управлять и отключать соединения между элементами управления.|  
  
 Элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> также содержит ряд событий, критических для жизненного цикла веб-части страниц и элементов управления. Эти события обеспечивают точное программное управление поведением элементов управления веб-части. Большинство методов относятся непосредственно к <xref:System.Web.UI.WebControls.WebParts.WebPart> элементам управления (или другим серверным или пользовательским элементам управления, размещенным в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> зонах, чтобы они могли работать как элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>). Однако несколько событий относятся к состоянию страницы или соединениям на странице. В следующей таблице перечислены доступные события и приведены их цели.  
  
> [!NOTE]
>  Во всех случаях, приведенных в следующей таблице, слово «Control» относится к элементу управления <xref:System.Web.UI.WebControls.WebParts.WebPart> или любому серверному элементу управления, расположенному в зоне, и включается в объект <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> во время выполнения.  
  
|событие|Описание|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>|Происходит непосредственно перед добавлением элемента управления на страницу, чтобы проверить его авторизацию.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>|Происходит после активации всех соединений на странице.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>|Происходит непосредственно перед процессом активации всех соединений на странице.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>|Происходит после изменения текущего режима экрана страницы.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>|Происходит непосредственно перед изменением режима просмотра страницы.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>|Происходит после отмены выбора элемента управления.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>|Происходит непосредственно перед отменой выбора элемента управления.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>|Происходит после добавления элемента управления в зону.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>|Происходит непосредственно перед добавлением элемента управления в зону.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>|Происходит после того, как элемент управления был закрыт (удален со страницы).|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>|Происходит непосредственно перед закрытием элемента управления.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>|Происходит после окончательного удаления экземпляра динамического элемента управления (созданного программным путем или добавленным из каталога).|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>|Происходит непосредственно перед удалением динамического элемента управления.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>|Происходит после перемещения элемента управления в зону или в другую зону.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>|Происходит непосредственно перед процессом перемещения элемента управления.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>|Происходит после того, как два элемента управления, выбранные для участия в соединении, установили соединение.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>|Происходит непосредственно перед процессом соединения двух элементов управления.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>|Происходит после разъединения двух подключенных элементов управления.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>|Происходит непосредственно перед отключением двух элементов управления.|  
  
 Элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> имеет множество методов для управления страницами веб-части. Большой набор методов, не перечисленных здесь, — это методы, имена которых принимают форму On*EventName*. Эти методы обычно вызывают связанное событие и предоставляют событие с обработчиком типа <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>. Большинство этих методов могут быть переопределены разработчиками, наследующими от класса <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Кроме того, разработчики страниц могут предоставлять пользовательские обработчики для событий, связанных с этими методами. Например, в случае события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> разработчик страницы может добавить атрибут `OnWebPartAdded` к элементу `<asp:webpartmanager>` в разметке веб-страницы, а затем назначить атрибуту имя пользовательского метода, чтобы обеспечить пользовательскую обработку события. Атрибут соответствует методу <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>, и этот базовый шаблон обработки событий работает для большинства веб-части событий и связанных с ними методов.  
  
 Кроме того, элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> имеет методы, определенные задачей управления <xref:System.Web.UI.WebControls.WebParts.WebPart>ными элементами (а также серверными или пользовательскими элементами управления, используемыми в качестве элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>). К этим методам относятся <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>.<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A><xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A><xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>  
  
 Другой набор методов является специализированным для подключений. Сюда входят такие методы, как <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.  
  
 Наконец, некоторые <xref:System.Web.UI.WebControls.WebParts.WebPartManager> методы сосредоточены на функциях персонализации. К ним относятся <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.  
  
 Дополнительные сведения о других методах <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, доступных через свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>, см. в документации по классу <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>.  
  
   
  
## Examples  
 В следующем примере кода показано декларативное и программное использование элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
 Пример кода состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на веб-части странице.  
  
-   Веб-страница, содержащая два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые могут быть подключены, и элемент `<asp:webpartmanager>`.  
  
-   Файл исходного кода, содержащий два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> и пользовательский интерфейс.  
  
-   Описание работы примера в браузере.  
  
 Пользовательский элемент управления имеет раскрывающийся список, который показывает возможные режимы отображения на странице с учетом элементов управления веб-части, имеющихся на странице. На веб-странице этого примера кода этот пользовательский элемент управления объявлен непосредственно под элементом <xref:System.Web.UI.WebControls.WebParts.WebPartManager> в разметке страницы, а для регистрации элемента управления существует директива `Register` в верхней части веб-страницы. Дополнительные сведения о режимах вывода и описание исходного кода в этом элементе управления см. в разделе [Пошаговое руководство. изменение режимов экрана на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/DisplayModeMenuVB.ascx#6)]  
  
 Декларативная разметка для веб-страницы содержит директивы `Register` как для пользовательского элемента управления, так и для пользовательских элементов управления. Существует элемент `<asp:webpartmanager>`, элемент `<asp:webpartzone>` для хранения пользовательских элементов управления и элемент `<asp:connectionszone>`. На этой странице также содержится встроенный код, обрабатывающий связанные с соединением события для элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. результат этого кода можно увидеть при подключении и отключении элементов управления.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 В третьей части примера приведен исходный код для элементов управления. Обратите внимание, что имеется интерфейс с именем `IZipCode`, и этот интерфейс реализован в классе `ZipCodeWebPart`. Этот класс содержит специальный метод обратного вызова с именем `ProvideIZipCode`, который служит поставщиком. Другой тип, именуемый `WeatherWebPart`, также реализуется с помощью специального метода с именем `GetIZipCode`, который позволяет элементу управления действовать как потребитель другого элемента управления.  
  
 Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере кода предполагается, что источник был скомпилирован в сборку, а директива `Register` на веб-странице ссылается на имя сборки. Пошаговое руководство, в котором показано, как выполнить компиляцию, см. в разделе [Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/ZipCodeComponent.vb#2)]  
  
 После загрузки веб-страницы в браузере щелкните раскрывающийся список **режим экрана** и выберите **подключить** , чтобы переключить страницу в режим подключения. Режим подключения использует элемент `<asp:connectionszone>`, позволяющий создавать соединения между элементами управления. В режиме подключения щелкните стрелку вниз в заголовке окна элемента управления " **почтовый индекс** ", чтобы активировать его меню команд, а затем нажмите кнопку **подключить**. После отображения пользовательского интерфейса подключения щелкните ссылку **создать соединение с потребителем** . Появится ячейка с элементом управления "раскрывающийся список". Выберите **элемент управления Weather** в раскрывающемся списке и нажмите кнопку **Подключиться** , чтобы завершить подключение двух элементов управления. Нажмите кнопку **Закрыть**, а затем используйте раскрывающийся список **режим отображения** , чтобы вернуть страницу в нормальный режим просмотра. Можно ввести почтовый индекс, и элемент управления потребителя будет обновлен с введенным значением. Поскольку свойство `ZipCode` было помечено атрибутом `Personalizable` в исходном коде, это значение свойства будет сохраняться в сеансах браузера, тем самым сохраняя значение, указанное пользователем. Более сложный элемент управления получателя может получить информацию о почтовом индексе, найти сведения о погоде на основе кода и отобразить их для пользователя.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> предназначен для расширения. Так как это центральное веб-части приложений, если требуется расширить определенный тип или элемент управления в наборе веб-части, во многих случаях необходимо также расширить класс <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, так как у него, скорее всего, есть какое-либо свойство или метод, необходимые для того, чтобы Пользовательский тип работает в контексте веб-части приложения. Справочная документация по веб-части (см. <see cref="N:System.Web.UI.WebControls.WebParts" />), в которой рассматривается расширение типа веб-части, часто упоминается, что необходимо сделать для расширения <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> класса, или показано, как расширить его в примере кода.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Конструктор <xref:System.Web.UI.WebControls.WebParts.WebPartManager.%23ctor%2A> инициализирует несколько важных переменных, используемых элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Одно назначение, непосредственно влияющее на все веб-части страницы, заключается в том, что режим просмотра страницы по умолчанию установлен в режим просмотра (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateConnections">
      <MemberSignature Language="C#" Value="protected virtual void ActivateConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ActivateConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ActivateConnections ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ActivateConnections();" />
      <MemberSignature Language="F#" Value="abstract member ActivateConnections : unit -&gt; unit&#xA;override this.ActivateConnections : unit -&gt; unit" Usage="webPartManager.ActivateConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Делает все неактивные подключения на веб-странице активными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> вызывается для каждого запроса к странице, чтобы активировать существующие соединения между <xref:System.Web.UI.WebControls.WebParts.WebPart> и другими серверными элементами управления, размещенными в зонах <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>. В некоторых случаях, например, при возникновении конфликта в активируемых подключениях этот метод, в свою очередь, вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> для завершения проблемного подключения. В процессе отключения возникает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>. Обычно разработчики могут отменить это событие, но в случае конфликта между подключениями, которые он не может отменить, поскольку элементу управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> необходимо разрешить конфликт, чтобы завершить процесс активации подключений. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> событие.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPart AddWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPart ^ AddWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberSignature Language="F#" Value="member this.AddWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.AddWebPart (webPart, zone, zoneIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (или серверный или пользовательский элемент управления), который необходимо добавить на веб-страницу или открыть на странице.</param>
        <param name="zone"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />, в которую добавляется <paramref name="webPart" />.</param>
        <param name="zoneIndex">Целое число, представляющее порядковый номер позиции, которую <paramref name="webPart" /> занимает в <paramref name="zone" /> относительно других элементов управления в <paramref name="zone" />.</param>
        <summary>Предоставляет стандартный программный метод для добавления элементов управления на веб-странице <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <returns>Элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, который был добавлен на страницу.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> используется как для добавления новых динамических элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart> на страницу, так и для повторного открытия статических или динамических элементов управления, которые ранее были закрыты на странице. При вызове метода для добавления нового элемента управления на самом деле создается копия элемента управления, на который ссылается параметр `webPart`. Для копии элемента управления создается новый идентификатор, поэтому разработчики должны ссылаться на элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, возвращенный методом, для получения нового значения идентификатора. При вызове метода для повторного открытия ранее закрытого элемента управления он возвращает прямую ссылку на элемент управления, на который ссылается параметр `webPart`.  
  
> [!IMPORTANT]
>  Следует всегда использовать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, а не метод <xref:System.Web.UI.ControlCollection.Add%2A> коллекции элементов управления, на которые ссылается свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=nameWithType>, для добавления <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления на страницу программным способом, поскольку при использовании метода <xref:System.Web.UI.ControlCollection.Add%2A> возникает исключение. Чтобы добавить элемент управления, который не является элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPart> (иными словами, серверный элемент управления, который будет обернут с помощью элемента управления <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> во время выполнения), сначала необходимо вызвать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, чтобы создать элемент управления, а затем вызвать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, чтобы добавить элемента. Демонстрацию этого подхода см. в разделе "пример".  
  
   
  
## Examples  
 В следующем примере кода показано использование метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> для программного добавления серверного элемента управления на страницу. Разметка страницы содержит пустой элемент `<asp:webpartzone>` и элемент `<asp:webpartmanager>`. При первом нажатии кнопки **Добавить календарь** код в обработчике событий создает <xref:System.Web.UI.WebControls.Calendar> элемент управления и добавляет его в зону как объект <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>, вызывая метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="webPart" /> имеет значение <see langword="null" />.  
  
- или - 
 Свойство <paramref name="zone" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="zone" /> не зарегистрирован в коллекции зон элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.  
  
- или - 
 Параметр <paramref name="webPart" /> уже находится в <paramref name="zone" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="zoneIndex" /> меньше нуля.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeWebPart">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthorizeWebPart As WebPartAuthorizationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventHandler ^ AuthorizeWebPart;" />
      <MemberSignature Language="F#" Value="member this.AuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler " Usage="member this.AuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при вызове метода <see cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" /> для определения, можно ли добавить на страницу объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверный элемент управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> возникает при добавлении элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> на страницу. Существует несколько распространенных сценариев, в которых элемент управления может быть добавлен на страницу. Полное описание этих данных см. в разделе "Примечания" для метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>. При добавлении элемента управления его необходимо проверить, чтобы узнать, было ли установлено свойство <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> и, если да, разрешено ли добавление элемента управления на страницу.  
  
 Разработчики могут создавать обработчики событий для события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, чтобы обеспечить фильтрацию элементов управления. Если значение свойства <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> элемента управления не соответствует критериям в коде обработчика событий, элемент управления не добавляется на страницу.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать пользовательский обработчик событий для события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, которое автоматически переопределяет метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> по умолчанию.  
  
 Код в методе `mgr1_AuthorizeWebPart` проверяет, имеют ли соответствующие свойства <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> для элементов управления на странице значения `user` и, если да, возвращает `true`, что означает, что они будут разрешены и добавлены на страницу. Предполагается, что подход по умолчанию позволяет пользователям просматривать элементы управления с помощью страницы в области персонализации пользователя. Однако обратите внимание, что в примере один из элементов управления имеет значение свойства <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>, равное `admin`. Разработчики могут поместить этот фильтр в специализированный элемент управления, предназначенный только для пользователей с правами администратора. Этот элемент управления не будет выполнять проверку авторизации во время <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> события и не будет отображаться. Обратите внимание, что также отображаются элементы управления, для которых не задан набор свойств. Предполагается, что они не являются частью сценария фильтрации, поскольку их свойства <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> не заданы.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AvailableTransformers">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableTransformers As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ AvailableTransformers { System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableTransformers : System.Web.UI.WebControls.WebParts.TransformerTypeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию объектов <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />, которые доступны для использования при создании подключений веб-частей между серверными элементами управления.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" />, в которой содержится набор объектов <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство использует метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> для создания коллекции. По умолчанию он считывает доступные преобразователи из файла конфигурации приложения.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)">Общие сведения о веб-части подключениях</related>
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartConnecting(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartConnecting(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member BeginWebPartConnecting : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.BeginWebPartConnecting : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.BeginWebPartConnecting webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Элемент управления, для которого создается подключение.</param>
        <summary>Запускает подключение двух элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> друг к другу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> существует, поэтому процесс формирования подключений между элементами управления может выполняться на отдельных этапах, что дает разработчикам больший контроль над процессом подключения. Метод выполняет набор начальных проверок, чтобы убедиться, что `webPart` находится в состоянии, в котором может быть правильно сформировано подключение. Если `webPart` передает все проверки, он задается как текущий выбранный элемент управления (см. свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>), и процесс подключения может быть продолжен.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="webPart" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Текущий режим отображения на странице не равен <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> закрыт.  
  
- или - 
 <paramref name="webPart" /> не является частью коллекции <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />.  
  
-или- 
 <paramref name="webPart" /> равен элементу управления <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />.</exception>
        <block subset="none" type="overrides"><para>Разработчикам, которым требуется расширение элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, может потребоваться переопределить этот метод в производном классе. Один из подходов — вызов базового метода, а затем Добавление дополнительной настраиваемой обработки. или может потребоваться полностью настроить процесс запуска подключения между элементами управления. Например, перед созданием подключения может потребоваться проверить доступность определенных данных.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartEditing(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartEditing(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member BeginWebPartEditing : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.BeginWebPartEditing : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.BeginWebPartEditing webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Редактируемый элемент управления.</param>
        <summary>Запускает редактирование элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> существует, поэтому процесс редактирования элементов управления может выполняться на отдельных этапах, что дает разработчикам больший контроль над процессом. Метод выполняет набор начальных проверок, чтобы убедиться, что `webPart` находится в состоянии, в котором его можно изменить. Если `webPart` передает все проверки, он задается как текущий выбранный элемент управления (см. свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>), и процесс редактирования может быть продолжен.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> — <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Текущий режим отображения на странице не равен <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> закрыт.  
  
- или - 
 <paramref name="webPart" /> не является частью коллекции <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />.  
  
-или- 
 <paramref name="webPart" /> равен элементу управления <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BrowseDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ BrowseDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable BrowseDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет режим отображения по умолчанию для страниц, которые содержат элементы управления веб-частей. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поле <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> ссылается на настраиваемый объект <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, который создается и содержится в элементе управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Поскольку это статический объект, вы можете обращаться к нему напрямую через класс <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, не требуя наличия экземпляра элемента управления.  
  
 При первой загрузке страницы, содержащей элементы управления веб-части, она по умолчанию находится в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (режим просмотра). Когда пользователи просто просматриваются, как на обычной веб-странице, страница остается в режиме просмотра. Если пользователи хотят персонализировать макет страницы, элементы управления, внешний вид или поведение, они должны переключить страницу в один из специализированных режимов отображения, доступных через свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как работать с полем <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> программным способом. Код заполняет раскрывающийся список поддерживаемыми режимами экрана, которые в данном случае являются обзором и конструкцией. Обратите внимание, что в методе `Page_PreRender` код проверяет, имеет ли текущее свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> значение <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>. Если это так, `Label1` будет видимым, а если нет, `Label1` будут скрыты.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/CS/wpmgrBrowseDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/VB/wpmgrBrowseDisplayModevb.aspx#1)]  
  
 После загрузки страницы в браузере режим просмотра по умолчанию находится в режиме обзора. Обратите внимание на метку на странице, которая указывает, что вы в режиме просмотра. Используйте элемент управления "раскрывающийся список", чтобы переключить страницу в режим конструктора. Обратите внимание, что из-за кода в методе `Page_PreRender` метка теперь скрыта.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">веб-части режимах просмотра страницы</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Проверяет элементы управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, которые будут участвовать в подключении, для определения, способны ли они подключаться друг к другу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> используется для определения возможности подключения двух элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Метод обычно используется в качестве условной проверки перед вызовом метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>.  
  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> проверяет ряд критериев, которые должны быть выполнены, прежде чем два элемента управления смогут формировать соединение. В следующем списке приведены основные критерии для создания соединения. Если выполняются все эти условия (а также некоторые дополнительные внутренние условия), метод возвращает `true`, что означает возможность подключения элементов управления:  
  
-   Элементы управления поставщика и потребителя не могут быть `null`и должны содержаться в коллекции элементов управления, на которые ссылается свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>.  
  
-   Поставщик и потребитель не могут быть одним и тем же элементом управления. Иными словами, элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> не может подключиться к самому себе.  
  
-   <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> объекты (точки соединения) для поставщика и потребителя не могут быть `null`.  
  
-   Поставщик и потребитель не могут быть закрыты (свойство <xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A> элемента управления не может быть `true`).  
  
-   Свойство <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> элемента управления точки подключения должно соответствовать типу элемента управления потребителя и поставщика.  
  
-   Точки подключения должны быть включены (их <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> методы должны возвращать `true`).  
  
-   Каждая точка соединения не должна попытаться сформировать больше соединений, чем указано в его собственном свойстве <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>.  
  
-   Если для подключения несовместимых элементов управления требуется объект <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> (Transformer), он не может быть `null`. Однако, если элементы управления уже совместимы, преобразователь должен быть `null`.  
  
-   В коллекции <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A> должен быть указан преобразователь (если используется).  
  
-   Преобразователь (если используется) должен иметь интерфейсы, совместимые с поставщиком и потребителем, чтобы он мог преобразовывать данные между двумя элементами управления. Дополнительные интерфейсы потребителя и поставщика также должны быть совместимыми.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberSignature Language="F#" Value="member this.CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint -&gt; bool" Usage="webPartManager.CanConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">Элемент управления, который предоставляет данные для <paramref name="consumer" /> при подключенных элементах управления.</param>
        <param name="providerConnectionPoint">Точка подключения <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, которая позволяет <paramref name="provider" /> участвовать в подключении.</param>
        <param name="consumer">Элемент управления, который получает данные из <paramref name="provider" /> при подключенных элементах управления.</param>
        <param name="consumerConnectionPoint">Точка подключения <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, которая выполняет функцию метода обратного вызова, чтобы <paramref name="consumer" /> мог участвовать в подключении.</param>
        <summary>Проверяет элементы управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, которые будут участвовать в подключении, для определения, способны ли они подключаться друг к другу, если элементы управления поставщика и получателя имеют совместимые интерфейсы, а объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> не требуется.</summary>
        <returns>Логическое значение, указывающее, можно ли подключить друг к другу <paramref name="provider" /> и <paramref name="consumer" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется для подключения `provider` и `consumer`, если оба элемента управления имеют совместимые типы точек соединения, чтобы объект <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> не требовался. Этот метод можно использовать, чтобы проверить возможность подключения двух элементов управления перед вызовом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> для создания программного подключения.  
  
 Эта перегрузка использует ту же реализацию, что и перегрузка метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>. Единственным исключением является то, что для этой перегрузки не требуется преобразователь.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот метод.  
  
 Пример кода состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на веб-части странице.  
  
-   Веб-страница, содержащая два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые могут быть подключены, элемент `<asp:webpartmanager>` и некоторый код обработки событий, который создает соединение с помощью метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>.  
  
-   Файл исходного кода, содержащий два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> и пользовательский интерфейс.  
  
-   Описание работы примера в браузере.  
  
 Первая часть примера кода — это пользовательский элемент управления для изменения режимов экрана. Исходный код для пользовательского элемента управления можно получить из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Дополнительные сведения о режимах отображения и способах работы пользовательского элемента управления см. [в разделе Пошаговое руководство. изменение режимов отображения на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Декларативная разметка для веб-страницы содержит директивы `Register` как для пользовательского элемента управления, так и для пользовательских элементов управления. Существует элемент `<asp:webpartmanager>`, элемент `<asp:webpartzone>` для хранения пользовательских элементов управления и элемент `<asp:connectionszone>`. Обратите внимание, что в методе `Page_Load` код проверяет, можно ли установить соединение и, если да, определяет поставщик, потребитель и соответствующие точки соединения, а затем добавляет новое соединение в набор статических соединений, на которые ссылается <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> свойства.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 В третьей части примера приведен исходный код для элементов управления. Он содержит интерфейс и два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, один из которых выступает в качестве поставщика, а другой — как потребитель. Так как у них есть совместимые точки соединения (оба они распознают интерфейс `IZipCode`), для соединения не требуется преобразователь. Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. Пошаговое руководство, в котором показано, как выполнить компиляцию, см. в разделе [Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/ZipCodeComponent.vb#2)]  
  
 После загрузки веб-страницы в браузере щелкните раскрывающийся список **режим экрана** и выберите **подключить** , чтобы переключить страницу в режим подключения. Режим подключения использует элемент `<asp:connectionszone>`, позволяющий создавать соединения между элементами управления. В режиме подключения щелкните стрелку вниз в заголовке окна элемента управления " **почтовый индекс** ", чтобы активировать его меню команд, а затем нажмите кнопку **подключить**. После того как появится пользовательский интерфейс подключения, обратите внимание, что соединение уже создано кодом, содержащимся в методе `Page_Load`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberSignature Language="F#" Value="abstract member CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; bool&#xA;override this.CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; bool" Usage="webPartManager.CanConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">Элемент управления, который предоставляет данные для <paramref name="consumer" /> при подключенных элементах управления.</param>
        <param name="providerConnectionPoint">Точка подключения <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, которая выполняет функцию метода обратного вызова, чтобы <paramref name="provider" /> мог участвовать в подключении.</param>
        <param name="consumer">Элемент управления, который получает данные из <paramref name="provider" /> при подключенных элементах управления.</param>
        <param name="consumerConnectionPoint">Точка подключения <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, которая выполняет функцию метода обратного вызова, чтобы <paramref name="consumer" /> мог участвовать в подключении.</param>
        <param name="transformer">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />, который позволяет подключать несовместимые объекты <paramref name="provider" /> и <paramref name="consumer" />.</param>
        <summary>Проверяет элементы управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, которые будут участвовать в подключении, для определения, смогут ли они подключаться, а также использует объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> для создания подключения между несовместимыми поставщиками и получателями.</summary>
        <returns>Логическое значение, указывающее, можно ли подключить друг к другу <paramref name="provider" /> и <paramref name="consumer" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется для подключения `provider` и `consumer`, если оба элемента управления имеют несовместимые типы точек соединения, поэтому требуется объект <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>. Этот метод можно использовать, чтобы проверить возможность подключения двух элементов управления перед вызовом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> для создания программного подключения.  
  
 Эта перегрузка использует ту же реализацию, что и перегрузка метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>, за исключением того, что для этой перегрузки требуется преобразователь.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CatalogDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ CatalogDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable CatalogDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет режим отображения, используемый для добавления серверных элементов управления из каталога элементов управления на веб-страницу. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поле <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> ссылается на настраиваемый объект <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, который создается и содержится в элементе управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Поскольку это статический объект, вы можете обращаться к нему напрямую через класс <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, не требуя наличия экземпляра элемента управления.  
  
 Когда пользователи хотят добавить элементы управления на страницу, если каталог серверных элементов управления доступен, он может переключить страницу в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> (режим каталога) и появится пользовательский интерфейс каталога. Пользовательский интерфейс для каталога веб-части предоставляется элементом управления зоны <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>. Разработчики добавляют эту зону на страницу во время разработки, а затем добавляют серверные элементы управления в зону, чтобы пользователи могли добавлять эти элементы управления на страницы во время выполнения. После того как разработчик добавил эти элементы управления, режим каталога станет поддерживаемым режимом экрана на странице, так как необходимые элементы управления включают режим каталога.  
  
 Когда пользователь переключает страницу в режим каталога, зона и все добавленные в нее серверные элементы управления становятся видимыми, и пользователь может выбрать элементы управления из каталога для добавления на страницу или удалить элементы управления со страницы. После добавления элементов управления на страницу они отображаются в нормальном режиме просмотра, а страница обновляется.  
  
   
  
## Examples  
 В следующем примере кода показано, как работать с полем <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> программным способом. Код заполняет раскрывающийся список поддерживаемыми режимами экрана для страницы, в данном случае — обзор, проектирование и каталогизация. Режим каталога доступен в связи с элементом `<asp:CatalogZone>` и его дочерними элементами на веб-странице. Обратите внимание, что в методе `Page_PreRender` код проверяет, имеет ли текущее свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> значение <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>. Если это так, `Label1` будет видимым, а если нет, `Label1` будут скрыты.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/CS/wpmgrCatalogDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/VB/wpmgrCatalogDisplayModevb.aspx#1)]  
  
 После загрузки страницы в браузере режим просмотра по умолчанию находится в режиме обзора. Обратите внимание, что метка на странице скрыта. Используйте элемент управления "раскрывающийся список", чтобы переключить страницу в режим каталога. Обратите внимание, что из-за кода в методе `Page_PreRender` метка теперь видна. Можно выбрать элемент управления в каталоге и добавить его в любую из двух зон на странице.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">веб-части режимах просмотра страницы</related>
      </Docs>
    </Member>
    <Member MemberName="CheckRenderClientScript">
      <MemberSignature Language="C#" Value="protected virtual bool CheckRenderClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CheckRenderClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CheckRenderClientScript () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CheckRenderClientScript();" />
      <MemberSignature Language="F#" Value="abstract member CheckRenderClientScript : unit -&gt; bool&#xA;override this.CheckRenderClientScript : unit -&gt; bool" Usage="webPartManager.CheckRenderClientScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Проверяет возможности браузера, делающего запрос, а также значение свойства <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" /> для определения необходимости обработки клиентского скрипта.</summary>
        <returns>Логическое значение, указывающее, следует ли обрабатывать клиентский скрипт.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CloseProviderWarning">
      <MemberSignature Language="C#" Value="public virtual string CloseProviderWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseProviderWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CloseProviderWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseProviderWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CloseProviderWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает предупреждение, которое отображается при закрытии пользователем элемента управления, функционирующего в качестве поставщика для других элементов управления в подключении.</summary>
        <value>Строка, содержащая предупреждение. Используемым по умолчанию текстом является соответствующее конкретному языку сообщение, которое предоставляется платформой .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда пользователь закрывает элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, обычно сообщение не отображается. Дополнительные сведения о том, что означает закрытие элемента управления, см. в описании метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>.  
  
 Однако если элемент управления подключен к другому элементу управления и выступает в качестве поставщика данных для другого элемента управления, предупреждающее сообщение по умолчанию отображается, когда пользователь пытается закрыть элемент управления. Сообщение сообщает пользователям, что элемент управления поставщика собирается закрыться. Это означает, что элементы управления, подключенные к этому поставщику в качестве потребителей, больше не смогут использовать какие-либо данные. Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> позволяет разработчикам настраивать предупреждающее сообщение, отображаемое пользователю.  
  
 Если разработчик страницы присваивает этому свойству пустое или нулевое строковое значение, то при закрытии пользователем элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, который является поставщиком, отображается окно с предупреждением.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> для отображения пользовательского предупреждения для пользователей.  
  
 Пример кода состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на веб-части странице.  
  
-   Файл исходного кода, содержащий два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> и настраиваемый интерфейс.  
  
-   Веб-страница, содержащая два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые могут быть подключены, и элемент `<asp:webpartmanager>`.  
  
-   Описание работы примера в браузере.  
  
 Следующий код содержит только часть веб-страницы примера. Кроме того, вам потребуется пользовательский элемент управления и исходный код для пользовательских элементов управления, упомянутых выше. Получите эти два элемента из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
 Следующий код веб-страницы демонстрирует, как присвоить настраиваемое сообщение с предупреждением свойству <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> в декларативной разметке элемента `<asp:webpartmanager>`.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 После загрузки веб-страницы в браузере щелкните раскрывающийся список **режим экрана** и выберите **подключить** , чтобы переключить страницу в режим подключения. Режим подключения использует элемент `<asp:connectionszone>`, позволяющий создавать соединения между элементами управления. В режиме подключения щелкните стрелку вниз в заголовке окна элемента управления " **почтовый индекс** ", чтобы активировать его меню команд, а затем нажмите кнопку **подключить**. После отображения ПОЛЬЗОВАТЕЛЬСКОГО интерфейса подключения щелкните ссылку **создать соединение с потребителем** . Появится ячейка с элементом управления "раскрывающийся список". Выберите **элемент управления Weather** в раскрывающемся списке и нажмите кнопку **подключить** , чтобы завершить подключение двух элементов управления. Нажмите кнопку **Закрыть**, а затем используйте раскрывающийся список **режим отображения** , чтобы вернуть страницу в нормальный режим просмотра. Наконец, щелкните меню команд для элемента управления " **почтовый индекс** " (в данном случае это элемент управления поставщика) и выберите **Закрыть**. Отображается пользовательское сообщение, назначенное свойству <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CloseWebPart">
      <MemberSignature Language="C#" Value="public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.CloseWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.CloseWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart"><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверный элемент управления, который закрывается в <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</param>
        <summary>Закройте элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> таким образом, чтобы он больше не отображался на веб-странице, но мог быть повторно открыт.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> удаляет <xref:System.Web.UI.WebControls.WebParts.WebPart> или другой серверный элемент управления, чтобы он не отображался на веб-странице, которая изначально содержала его. Закрытый элемент управления добавляется в <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> объект, который поддерживает ссылку на закрытый элемент управления и позволяет восстановить его на странице. Закрытый элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> по-прежнему отображается в коллекции, на которую ссылается свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>.  
  
 Закрытие элемента управления отличается от его удаления. Закрытые элементы управления по-прежнему доступны для восстановления на странице, но удаленный экземпляр элемента управления удаляется навсегда и никогда не может быть восстановлен. Независимо от того, является ли <xref:System.Web.UI.WebControls.WebParts.WebPart> или серверный элемент управления статическим (объявленный в разметке страницы) или динамическими (добавлен на страницу программно или пользователем из каталога веб-части), его можно закрыть и снова открыть на странице.  
  
 Как правило, пользователи могут закрыть элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, щелкнув его меню команд и выбрав команду Закрыть. Элемент управления можно также закрыть, напрямую вызвав метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> и передав ему ссылку на `webPart`.  
  
 На странице, где были закрыты элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, если разработчик объявляет элемент `<asp:catalogzone>`, а внутри него добавляет элемент `<asp:pagecatalogpart>`, он предоставляет простой пользовательский интерфейс для восстановления закрытых элементов управления на странице во время выполнения. Пользователи могут переключить страницу в режим отображения каталога, и закрытые элементы управления будут отображаться в каталоге страниц. Пользователи могут выбирать закрытые элементы управления и добавлять их обратно на страницу в любом требуемом месте, после чего выбранные элементы управления восстанавливаются на странице и подготавливаются к просмотру как обычные.  
  
 При вызове метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> вызывается несколько событий: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> (если есть несколько элементов управления) и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> (если имеются подключенные элементы управления). Обычно разработчики могут отменить эти события, но в некоторых случаях их невозможно отменить. Дополнительные сведения см. в документации по событиям <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>.  
  
 Пример кода состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы просмотра страницы.  
  
-   Пользовательский элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>.  
  
-   Веб-страница.  
  
-   Описание работы примера в браузере.  
  
 Первая часть примера кода — это пользовательский элемент управления для изменения режимов экрана. Исходный код для пользовательского элемента управления можно получить из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Дополнительные сведения о режимах отображения и способах работы пользовательского элемента управления см. [в разделе Пошаговое руководство. изменение режимов отображения на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Второй частью примера кода является пользовательский элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере используется метод динамической компиляции. Поэтому в верхней части веб-страницы отсутствует атрибут `Assembly` в директиве `Register` для этого элемента управления. Пошаговое руководство, в котором показано, как выполнить компиляцию, см. в разделе [Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/textdisplaywebpart.vb#3)]  
  
 Третья часть примера кода — веб-страница. Страница содержит зону <xref:System.Web.UI.WebControls.WebParts.CatalogZone>, в которой объявлен элемент `<asp:pagecatalogpart>`. Это то, что будет содержать закрытый элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> и позволить пользователям добавить его обратно на страницу. Метод `Button1_Click` напрямую вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, чтобы закрыть пользовательский элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, хотя пользователь также может закрыть элемент управления через меню команд.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/closeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/closeWebPartVB.aspx#1)]  
  
 После загрузки страницы в браузере закройте пользовательский элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, щелкнув меню команд (символ стрелки) в заголовке элемента управления и нажав кнопку **Закрыть**. Теперь измените страницу на режим каталога, выбрав **Каталог** в раскрывающемся списке **режим экрана** . Каталог страницы отображается с закрытым элементом управления. Установите флажок рядом с закрытым элементом управления, нажмите кнопку **Добавить** , чтобы добавить его на страницу, а затем нажмите кнопку **Закрыть** , чтобы вернуть страницу в режим просмотра. Элемент управления восстанавливается на странице. Теперь закройте его снова, на этот раз нажав кнопку **Закрыть веб-часть** .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Элемент <paramref name="webPart" /> отсутствует в коллекции <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />.  
  
- или - 
 <paramref name="webPart" /> является общим элементом управления и уже был закрыт другим пользователем.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConnectDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ ConnectDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConnectDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет режим отображения, используемый для отображения специального пользовательского интерфейса для пользователей в целях управления подключениями между элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поле <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> ссылается на настраиваемый объект <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, который создается и содержится в элементе управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Поскольку это статический объект, вы можете обращаться к нему напрямую через класс <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, не требуя наличия экземпляра элемента управления.  
  
 Если пользователи хотят управлять подключениями между элементами управления <xref:System.Web.UI.WebControls.WebParts.WebPart> на веб-странице, если на странице была объявлена зона <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>, они могут переключить страницу в режим <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>. В режиме отображения подключения отображается специальный пользовательский интерфейс для управления соединениями, который включает возможность подключения и отключения элементов управления, а также для изменения сведений о существующих соединениях.  
  
 Если вы хотите предоставить пользователям возможность управлять подключениями с помощью пользовательского интерфейса, предоставленного набором элементов управления веб-части, необходимо объявить элемент `<asp:connectionszone>` в разметке страницы. В отличие от элементов для других типов <xref:System.Web.UI.WebControls.WebParts.WebZone>ных зон, не нужно добавлять другие теги в этот элемент. Вы просто объявляете сам элемент.  
  
   
  
## Examples  
 В следующем примере кода показано использование режима <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>.  
  
 Пример кода состоит из трех частей:  
  
-   Исходный файл, содержащий интерфейс и пользовательские элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые могут формировать соединение.  
  
-   Веб-страница, которая предоставляет пользовательский интерфейс подключения и демонстрирует работу с режимом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>.  
  
-   Пояснения к запуску примера.  
  
 В первой части примера кода представлен исходный файл, содержащий интерфейс и два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, разработанных таким образом, чтобы их можно было подключить. Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере кода используется метод динамической компиляции. Пошаговое руководство, в котором показано, как выполнить компиляцию, см. в разделе [Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ZipCodeComponent.vb#2)]  
  
 Вторая часть примера — веб-страница, на которой размещены пользовательские элементы управления. В тегах сервера `<script>` на странице представлены несколько методов, которые заполняют раскрывающийся список режимами экрана, доступными на странице. Пользователь может выбрать их из раскрывающегося списка, чтобы изменить режим просмотра страницы. Один из доступных режимов экрана — режим экрана подключения, поскольку элемент `<asp:connectionszone>` объявлен в разметке страницы. Обратите внимание, что этот элемент не содержит других дочерних элементов. он существует только для включения пользовательского интерфейса управления подключениями для пользователей.  
  
 В этом примере в двух местах отображается режим <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>. Во-первых, в методе `Page_Init` режим экрана подключения добавляется в раскрывающийся список режимов вывода, так как код проходит через коллекцию, на которую ссылается свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>. Во-вторых, метод `Page_PreRender` проверяет текущий режим отображения на странице, и, если текущий режим <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>, сообщение отображается в элементе управления <xref:System.Web.UI.WebControls.Label>.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ConnectDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ConnectDisplayModeVB.aspx#1)]  
  
 После загрузки страницы в браузере щелкните раскрывающийся список и выберите **подключить** , чтобы переключить страницу в режим экрана подключения. Обратите внимание, что отображается сообщение о том, что страница находится в режиме отображения подключения. Теперь щелкните меню команд (символ стрелки) в заголовке окна одного из элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, а затем в меню команды выберите пункт **Подключиться** . После отображения пользовательского интерфейса подключения щелкните ссылку, чтобы создать соединение. Используйте раскрывающийся список в появившемся пользовательском интерфейсе подключения, выберите другой элемент управления, который будет участвовать в соединении, и нажмите кнопку **Подключиться** . Соединение установлено. Нажмите кнопку **Закрыть** , а затем используйте раскрывающийся список в верхней части страницы, чтобы вернуть страницу в режим просмотра.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">веб-части режимах просмотра страницы</related>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ Connections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на коллекцию текущих подключений на веб-странице.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" />, в которой содержится набор объектов <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> предоставляет способ доступа к текущему набору соединений на странице. Сама коллекция доступна только для чтения, и разработчики, желающие управлять конкретным соединением из коллекции, должны использовать <xref:System.Web.UI.WebControls.WebParts.WebPartManager> методы, такие как <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано декларативное и программное использование элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
 Пример кода состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на веб-части странице.  
  
-   Веб-страница, содержащая два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые могут быть подключены, и элемент `<asp:webpartmanager>`.  
  
-   Файл исходного кода, содержащий два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> и настраиваемый интерфейс.  
  
-   Описание работы примера в браузере.  
  
 Следующий код содержит только часть веб-страницы примера. Кроме того, вам потребуется пользовательский элемент управления и исходный код для пользовательских элементов управления, упомянутых выше. Получите эти два элемента из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
 Следующий код веб-страницы демонстрирует программное использование свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> для получения числа текущих соединений на странице. Обратите внимание, что в разделе тега `<script>` код, обрабатывающий два события для элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, обращается к свойству <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> для получения числа.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 После загрузки веб-страницы в браузере щелкните раскрывающийся список **режим экрана** и выберите **подключить** , чтобы переключить страницу в режим подключения. Режим подключения использует элемент `<asp:connectionszone>`, позволяющий создавать соединения между элементами управления. В режиме подключения щелкните стрелку вниз в заголовке окна элемента управления " **почтовый индекс** ", чтобы активировать его меню команд, а затем нажмите кнопку **подключить**. После отображения ПОЛЬЗОВАТЕЛЬСКОГО интерфейса подключения щелкните ссылку **создать соединение с потребителем** . Появится ячейка с элементом управления "раскрывающийся список". Выберите **элемент управления Weather** в раскрывающемся списке и нажмите кнопку **подключить** , чтобы завершить подключение двух элементов управления. Нажмите кнопку **Закрыть**, а затем используйте раскрывающийся список **режим отображения** , чтобы вернуть страницу в нормальный режим просмотра. Обратите внимание, что теперь метка отображает количество подключений и число элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Если теперь вернуться в режим подключения и отключить два элемента управления, то при возврате в режим просмотра содержимое метки должно быть обновлено и не должно быть соединений.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivated;" />
      <MemberSignature Language="F#" Value="member this.ConnectionsActivated : EventHandler " Usage="member this.ConnectionsActivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после того, как все текущие подключения веб-частей на странице не только будут подключены, но и начнут активно обмениваться данными между элементами управления поставщиков и получателей в каждом подключении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В жизненном цикле соединений это событие возникает после того, как страница завершает процесс загрузки. Это также происходит после события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>, которое означает, что успешно подключены <xref:System.Web.UI.WebControls.WebParts.WebPart> или серверные элементы управления, вовлеченные в определенное подключение. Если на странице имеется несколько соединений, метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> указывает, что все допустимые веб-части подключения на странице теперь активны и могут обмениваться данными. Зная, что все подключения активны, разработчики могут выполнять любое количество задач, включая уведомление пользователей о состоянии всех подключений, уведомление элементов управления потребителя для обработки и вывода данных от своих поставщиков и т. д.  
  
 Это событие связано с методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>, который вызывает событие и позволяет разработчикам создавать пользовательские обработчики для события.  
  
 Разработчики страниц могут создать пользовательский обработчик для события, добавив атрибут `OnConnectionsActivated` к элементу `<asp:webpartmanager>` на странице, а затем присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivating">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivating As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivating;" />
      <MemberSignature Language="F#" Value="member this.ConnectionsActivating : EventHandler " Usage="member this.ConnectionsActivating : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит во время активации всех установленных подключений веб-частей на веб-странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В жизненном цикле соединений это событие происходит, когда страница завершает процесс загрузки, непосредственно перед вызовом метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>. Он отличается от события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>, которое включает определенное соединение между <xref:System.Web.UI.WebControls.WebParts.WebPart> или другими серверными элементами управления. Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> возникает, когда все возможные подключения на странице подключены и будут активированы.  
  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> связано с методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>, который вызывает событие. Разработчики элементов управления, желающие расширить тип соединений, которые могут быть добавлены на страницу, могут переопределить защищенный метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> и активировать дополнительные типы подключений.  
  
 Разработчики страниц могут создать пользовательский обработчик для события, добавив атрибут `OnConnectionsActivating` к элементу `<asp:webpartmanager>` на странице, а затем присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает подключение между двумя элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (или другими серверными элементами управления, способными создавать подключения), которые находятся в зоне <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> формирует соединение между любыми двумя элементами управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые могут быть подключены. Перед вызовом этого метода для создания соединения может также потребоваться вызвать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> в условной проверке, чтобы обеспечить соответствие элементов управления требованиям для формирования соединения.  
  
> [!NOTE]
>  Также можно создать соединение между двумя серверными элементами управления, не <xref:System.Web.UI.WebControls.WebParts.WebPart> элементами управления. Как правило, эти два элемента управления должны быть пользовательскими серверными элементами управления (например, элементы управления, которые наследуют от <xref:System.Web.UI.WebControls.WebControl> или существующих серверных элементов управления ASP.NET), чтобы можно было добавить необходимые члены. Элементы управления также должны удовлетворять указанным ниже требованиям.  
  
 Любой тип сценария подключения между двумя элементами управления должен соответствовать следующим требованиям, чтобы иметь возможность подключения:  
  
-   Каждый элемент управления находится в зоне <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> (она не обязательно должна быть той же зоной).  
  
-   Как реализованное в наборе элементов управления веб-части, элемент управления поставщика в соединении реализует интерфейс как открытый метод, который выступает в качестве обратного вызова поставщика, и имеет атрибут метаданных `ConnectionProvider` в методе, чтобы определить его как точку подключения поставщика. Так как метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>, который получает точки подключения поставщика, является виртуальным, производный элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> не обязательно должен использовать один и тот же атрибут метаданных.  
  
-   Как реализованное в наборе элементов управления веб-части, элемент управления получателя в соединении также имеет специальный метод, позволяющий ему получить ссылку на интерфейс, предоставляемый в методе обратного вызова поставщика, а потребитель имеет атрибут метаданных `ConnectionConsumer` в , чтобы опознать его как точку подключения потребителя. Так как метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, который получает точки подключения потребителя, является виртуальным, производный элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> не обязательно должен использовать один и тот же атрибут метаданных.  
  
-   Методы обратного вызова должны быть совместимыми, в том, что потребитель может использовать тип интерфейса, предоставленный в методе обратного вызова поставщика (это означает, что потребитель и поставщик могут обмениваться данными напрямую) или разработчику необходимо использовать объект <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> для преобразования данные из поставщика в форму, которую может использовать потребитель.  
  
    > [!IMPORTANT]
    >  Если преобразователь не нужен, используйте перегрузку метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>. Если требуется преобразователь, используйте перегрузку метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberSignature Language="F#" Value="member this.ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection" Usage="webPartManager.ConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">Элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, который играет роль передачи данных в другой подключенный элемент управления.</param>
        <param name="providerConnectionPoint">Метод, который служит в качестве метода обратного вызова для этого подключения. В соответствии с реализацией в наборе элементов управления веб-частей это открытый метод в <paramref name="provider" />, который отмечен при помощи атрибута метаданных <see langword="ConnectionProvider" />.</param>
        <param name="consumer">Элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, выполняющий функцию получения данных <paramref name="provider" /> с последующей их обработкой и отображением.</param>
        <param name="consumerConnectionPoint">Метод, который подключается к точке <paramref name="providerConnectionPoint" /> для получения данных для подключения. В соответствии с реализацией в наборе элементов управления веб-частей это открытый метод в <paramref name="consumer" />, который отмечен при помощи атрибута метаданных <see langword="ConnectionConsumer" />.</param>
        <summary>Создает подключение между двумя элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> с использованием только ссылок на элементы управления и их определенные объекты <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />.</summary>
        <returns>Подключение <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />, которое содержит различные необходимые для подключения сведения о поставщике и получателе.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка используется для подключения элементов управления, если их точки соединения имеют достаточную совместимость, так как они могут подключаться без использования объекта <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>. При вызове этой перегрузки метода он просто передает вызов другой перегруженной версии метода и передает `null` для параметра, для которого требуется объект <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>.  
  
 При попытке подключить два элемента управления программным способом можно использовать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> в условной проверке, чтобы определить, можно ли напрямую подключить элементы управления.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот метод для создания подключения программным способом. Полный код, необходимый для выполнения примера, см. в разделе "пример" раздела Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. В этом примере вам понадобится исходный код для пользовательского элемента управления, который позволяет изменять режимы экрана на странице, и исходный код для двух пользовательских элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>.  
  
 Код для веб-страницы, на которой размещены два элемента управления, выглядит следующим образом. На странице используются директивы `Register` в верхней части, чтобы объявить пользовательский элемент управления и пользовательские элементы управления. Затем на пользовательские элементы управления осуществляется декларативная ссылка в элементе `<asp:webpartzone>`. Код, обрабатывающий метод `Button1_Click`, создает соединение между элементами управления с помощью метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 После загрузки страницы в браузере нажмите кнопку **Connect WebPart Controls (соединить элементы управления** ), чтобы сформировать соединение. Затем можно ввести данные в текстовое поле и нажать кнопку **Enter 5-значный почтовый индекс** , чтобы продемонстрировать, что элементы управления подключены и данные, введенные в первом элементе управления, обновляются во втором.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Коллекция элемента подключения <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, принадлежащая динамическим коллекциям, доступна только для чтения.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberSignature Language="F#" Value="abstract member ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection&#xA;override this.ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection" Usage="webPartManager.ConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">Элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, который играет роль передачи данных в другой подключенный элемент управления.</param>
        <param name="providerConnectionPoint">Открытый метод в <paramref name="provider" />, который помечен атрибутом метаданных <see langword="ConnectionProvider" /> и служит в качестве метода обратного вызова для подключения.</param>
        <param name="consumer">Элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, выполняющий функцию получения данных от <paramref name="provider" /> или <paramref name="transformer" /> с последующей их обработкой и отображением.</param>
        <param name="consumerConnectionPoint">Открытый метод в <paramref name="consumer" />, который помечен атрибутом метаданных <see langword="ConnectionConsumer" /> и создает подключение с <paramref name="providerConnectionPoint" /> для получения данных для подключения.</param>
        <param name="transformer">Преобразователь <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />, который позволяет создать подключение между двумя элементами управления посредством преобразования данных поставщика <paramref name="provider" /> в формат, который может быть обработан получателем <paramref name="consumer" />.</param>
        <summary>Создает подключение между двумя элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> с использованием только ссылок на элементы управления и их определенные объекты <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, а также объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />.</summary>
        <returns>Подключение <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />, которое содержит различные необходимые для подключения сведения о поставщике, получателе и преобразователе.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка используется для подключения элементов управления, если их точки соединения несовместимы. Несовместимость возникает, когда `consumer` реализует интерфейс, отличный от интерфейса, `provider` в качестве точки соединения. Преобразователь преобразует данные в тип, который может быть понят `consumer`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Подключения уже были активированы в событии <see cref="E:System.Web.UI.Control.PreRender" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, серверных или пользовательских элементов управления, которые содержатся в зонах <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> на веб-странице и управляются элементом управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.ControlCollection" />, которая содержит все элементы управления, управляемые элементом управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A> не ссылается на другие элементы управления, на которые ссылается элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, например различные элементы управления зоны, <xref:System.Web.UI.WebControls.WebParts.EditorPart> или <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления и другие.  
  
 Это свойство используется набором элементов управления веб-части, и в большинстве случаев разработки он не должен вызываться из кода. Поэтому, несмотря на то, что свойство является открытым, оно скрыто от IntelliSense. Разработчики, желающие получить доступ к коллекции <xref:System.Web.UI.WebControls.WebParts.WebPart> или других серверных элементов управления, управляемых <xref:System.Web.UI.WebControls.WebParts.WebPartManager>ным элементом управления, должны использовать его свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CopyWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart CopyWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ CopyWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member CopyWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPart&#xA;override this.CopyWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.CopyWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Копируемый объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверный элемент управления.</param>
        <summary>Используется набором элементов управления веб-частей для создания копии <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверного элемента управления для добавления элемента управления на веб-страницу.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, добавляемый на страницу.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> нельзя вызывать непосредственно из кода. Этот метод вызывается внутри элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> как часть процесса добавления нового динамического <xref:System.Web.UI.WebControls.WebParts.WebPart> или серверного элемента управления на страницу. Динамический элемент управления добавляется на страницу программным способом или через пользовательский интерфейс веб-части (UI), например пользователь добавляет элемент управления из каталога элементов управления, а не статический элемент управления, который объявляется непосредственно в разметке страницы.  
  
> [!NOTE]
>  Метод может быть переопределен в производном классе, если разработчики хотят разрешить методу обрабатывать дополнительные сценарии копирования элементов управления. Дополнительные сведения см. в разделе Примечания к наследникам.  
  
 При добавлении нового динамического элемента управления, если он является <xref:System.Web.UI.WebControls.WebParts.WebPart>ным элементом управления, метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> возвращает новый экземпляр элемента управления. Если добавляемый элемент управления является другим типом серверного элемента управления (например, пользовательским элементом управления, пользовательским элементом управления или элементом управления ASP.NET), элемент управления уже помещается в объект <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> набором элементов управления веб-части. Когда метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> встречает элемент управления <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>, он возвращает новый экземпляр элемента управления <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> с новым экземпляром дочернего элемента управления, заключенного в него.  
  
 Когда метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> создает новую копию элемента управления для возврата, она также сбрасывает значения всех свойств до значений по умолчанию. Обратите внимание, что, если необходимо сохранить значения настраиваемых свойств и скопировать их в новый экземпляр элемента управления, следует также вызвать метод <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A>. Последний шаг, выполненный методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, — вызов метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A> для получения нового идентификатора элемента управления.  
  
> [!NOTE]
>  Поскольку метод получает новый идентификатор для копируемого элемента управления, не следует полагаться на ссылку на динамический элемент управления, который добавляется на страницу с помощью исходного идентификатора. Вместо этого следует ссылаться на новый экземпляр элемента управления, возвращаемый методом.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Метод объявляется как <see langword="virtual" />, чтобы разработчики могли наследовать от класса <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, переопределять метод и предоставлять дополнительные сценарии, в которых можно создавать копии элементов управления. Например, при необходимости метод может получить в качестве входных данных элемент управления, сериализованный в XML-файл. Метод может десериализовать XML (при наличии), а затем вызвать базовый метод для выполнения существующих вариантов и возврата нового экземпляра элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAvailableTransformers">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAvailableTransformers () As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ CreateAvailableTransformers();" />
      <MemberSignature Language="F#" Value="abstract member CreateAvailableTransformers : unit -&gt; System.Web.UI.WebControls.WebParts.TransformerTypeCollection&#xA;override this.CreateAvailableTransformers : unit -&gt; System.Web.UI.WebControls.WebParts.TransformerTypeCollection" Usage="webPartManager.CreateAvailableTransformers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает набор преобразователей, указанный в файле конфигурации веб-сайта, и добавляет эти преобразователи в коллекцию преобразователей, на которую ссылается свойство <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />.</summary>
        <returns>Коллекция преобразователей, указанные в файле конфигурации веб-сайта.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Этот метод можно переопределить для добавления дополнительных преобразователей, которые могут использоваться приложением. Например, можно написать метод для получения списка доступных преобразователей из веб-службы.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="webPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию всех элементов управления, которые управляются на веб-странице с помощью элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />. Этот класс не наследуется.</summary>
        <returns>Коллекция <see cref="T:System.Web.UI.ControlCollection" />, которая состоит из различных элементов управления веб-частей, управляемых с помощью элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Поскольку этот метод защищен и запечатан, он является видимым для классов, которые наследуют от класса <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, но не может быть переопределен.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDisplayModes">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDisplayModes () As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ CreateDisplayModes();" />
      <MemberSignature Language="F#" Value="abstract member CreateDisplayModes : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&#xA;override this.CreateDisplayModes : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="webPartManager.CreateDisplayModes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает набор всех возможных режимов отображения для приложения веб-частей.</summary>
        <returns>Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" />, которая содержит все поддерживаемые режимы отображения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод создает список всех возможных режимов экрана, а не только режимов экрана, поддерживаемых на конкретной странице. Дополнительные сведения о поддерживаемых режимах экрана см. в описании свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>.  
  
 По умолчанию набор элементов управления веб-части создает следующий набор режимов экрана для использования на веб-части страницах:  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>  
  
 Разработчики могут создавать пользовательские режимы интерфейса с помощью настраиваемых зон, которые являются производными от классов <xref:System.Web.UI.WebControls.WebParts.WebZone> или <xref:System.Web.UI.WebControls.WebParts.ToolZone>, и без них. Чтобы создать пользовательский режим экрана, необходимо наследовать от класса <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, а также добавить режим экрана в качестве поддерживаемого режима на странице, необходимо наследовать от класса <xref:System.Web.UI.WebControls.WebParts.WebPartManager> и переопределить метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A>.  
  
 При добавлении режимов отображения с помощью метода <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A> следует добавлять их в том порядке, в котором они должны отображаться в любых элементах управления пользовательского интерфейса (например, <xref:System.Web.UI.WebControls.ListBox>), которые предоставляют пользователям возможные режимы отображения на странице.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A>.  
  
 Пример кода состоит из пяти частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на веб-части странице.  
  
-   Веб-страница, на которой размещены другие элементы управления.  
  
-   Пользовательский элемент управления, находящийся в зоне <xref:System.Web.UI.WebControls.WebParts.WebPartZone> на веб-странице, и позволяет вводить и отображать текст в метке.  
  
-   Файл исходного кода, содержащий два элемента управления. Одним из них является пользовательский элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, а другой — пользовательский объект <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, который добавляется в режимы экрана по умолчанию для страницы.  
  
-   Файл исходного кода, содержащий два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> и пользовательский интерфейс.  
  
-   Описание работы примера в браузере.  
  
 Первая часть примера кода — это пользовательский элемент управления для изменения режимов экрана. Исходный код для пользовательского элемента управления можно получить из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Дополнительные сведения о режимах отображения и способах работы пользовательского элемента управления см. [в разделе Пошаговое руководство. изменение режимов отображения на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Вторая часть примера — веб-страница. Он содержит два элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, как пользовательские элементы управления, так и пользовательский элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Обратите внимание на директивы `Register` в верхней части страницы, чтобы ссылаться на пользовательские элементы управления и пространство имен для скомпилированных элементов управления.  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/createDisplayModeCS.aspx#1)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/createDisplayModeVB.aspx#1)]  
  
 Третья часть примера — пользовательский элемент управления для ввода и отображения текста. Для создания нескольких представлений пользовательского интерфейса используется элемент управления <xref:System.Web.UI.WebControls.MultiView>. Одно представление отображается с кнопкой `Button1`, другой — без. Обратите внимание, что в переопределенном `OnPreRender`ном методе код проверяет, находится ли страница в пользовательском режиме отображения, и, если это так, отображает первое представление пользовательского элемента управления, которое включает кнопку. Если страница не находится в пользовательском режиме просмотра, например, если страница находится в режиме просмотра или конструктора, кнопка скрыта.  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/TextDisplaycs.ascx#2)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/TextDisplayvb.ascx#2)]  
  
 Четвертой частью примера является исходный файл для двух пользовательских классов. Обратите внимание, что пользовательский класс <xref:System.Web.UI.WebControls.WebParts.WebPartManager> переопределяет метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> и сначала вызывает базовый метод, чтобы добавить все режимы экрана по умолчанию, а затем добавляет пользовательский режим экрана. Класс пользовательского режима интерфейса `InLineEditDisplayMode`, просто наследует от <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, задает имя режима экрана в конструкторе и переопределяет число базовых свойств, чтобы установить характеристики пользовательского интерфейса.  
  
 Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. Пошаговое руководство, в котором показано, как выполнить компиляцию, см. в разделе [Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/CustomDisplayMode.cs#3)]
 [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/CustomDisplayMode.vb#3)]  
  
 Чтобы запустить пример кода, загрузите страницу в браузере. Обратите внимание, что эта страница в данный момент находится в режиме просмотра, и кнопка не видна. С помощью раскрывающегося списка **режим отображения** измените страницу на **встроенный режим отображения редактирования** и обратите внимание, что теперь кнопка `Button1` видима в нижнем пользовательском элементе управления. Добавьте некоторый текст и нажмите кнопку, чтобы обновить элемент управления. Обратите внимание, что отображение страницы возвращается в режим просмотра, введенный текст отображается, а кнопка снова становится скрытой, так как страница больше не находится в пользовательском режиме отображения.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Пошаговое руководство. изменение режима просмотра на странице веб-части</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicConnectionID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicConnectionID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicConnectionID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicConnectionID () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicConnectionID();" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicConnectionID : unit -&gt; string&#xA;override this.CreateDynamicConnectionID : unit -&gt; string" Usage="webPartManager.CreateDynamicConnectionID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает уникальное значение, которое будет служить в качестве идентификатора для динамического подключения.</summary>
        <returns>Строка, которая содержит уникальный идентификатор для подключения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> создает значение GUID и преобразует его в строку, которая служит уникальным ИДЕНТИФИКАТОРом для соединения. Метод вызывается каждый раз при создании динамического соединения.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики могут переопределить этот метод в производном классе <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, чтобы изменить реализацию для создания уникального идентификатора.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicWebPartID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicWebPartID (Type webPartType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicWebPartID(class System.Type webPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicWebPartID (webPartType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicWebPartID(Type ^ webPartType);" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicWebPartID : Type -&gt; string&#xA;override this.CreateDynamicWebPartID : Type -&gt; string" Usage="webPartManager.CreateDynamicWebPartID webPartType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPartType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="webPartType">Тип <see cref="T:System.Type" /> элемента управления, для которого создается идентификатор.</param>
        <summary>Создает уникальные идентификатор для динамического элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <returns>Строка, содержащая уникальный идентификатор для элемента управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При добавлении <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления на веб-страницу они могут быть статическими (что означает, что элемент управления объявлен в разметке страницы) или динамически (то есть они добавляются программно). В любом сценарии, где элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> создает новые динамические элементы управления для добавления на страницу, он вызывает этот метод для создания уникального идентификатора.  
  
 Метод является виртуальным, чтобы разработчики могли переопределить его, если им нужно предоставить пользовательскую реализацию для создания идентификатора.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPartType" /> — <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart(string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateErrorWebPart (originalID As String, originalTypeName As String, originalPath As String, genericWebPartID As String, errorMessage As String) As ErrorWebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::ErrorWebPart ^ CreateErrorWebPart(System::String ^ originalID, System::String ^ originalTypeName, System::String ^ originalPath, System::String ^ genericWebPartID, System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member CreateErrorWebPart : string * string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.ErrorWebPart&#xA;override this.CreateErrorWebPart : string * string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.ErrorWebPart" Usage="webPartManager.CreateErrorWebPart (originalID, originalTypeName, originalPath, genericWebPartID, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ErrorWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalID" Type="System.String" />
        <Parameter Name="originalTypeName" Type="System.String" />
        <Parameter Name="originalPath" Type="System.String" />
        <Parameter Name="genericWebPartID" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="originalID">Строка, которая представляет идентификатор элемента управления со сбоем. Если элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> связан со сбоем, идентификатор является идентификатором его дочернего серверного элемента управления.</param>
        <param name="originalTypeName">Строка, содержащая имя <see cref="T:System.Type" /> элемента управления со сбоем. Если элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> связан со сбоем, имя типа — это тип его дочернего серверного элемента управления.</param>
        <param name="originalPath">Строка, содержащая путь к пользовательскому элементу управления, если элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, содержащий дочерний пользовательский элемент управления, связан со сбоем.</param>
        <param name="genericWebPartID">Строка, возвращающая идентификатор элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, если этот тип элемента управления связан со сбоем загрузки или создания элемента управления.</param>
        <param name="errorMessage">Строка, содержащая сообщение об ошибке для отображения на странице.</param>
        <summary>Создает специальный элемент управления, который вставляется на страницу и отображается для конечных пользователей при завершении со сбоем попытки загрузки или создания динамического элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> по какой-либо причине.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />, который вставляется на странице вместо элемента управления, загрузка или создание которого завершилась со сбоем.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> вызывается, когда набор элементов управления веб-части пытается загрузить или создать экземпляр динамического <xref:System.Web.UI.WebControls.WebParts.WebPart> или серверного элемента управления и по какой-то причине завершается с ошибкой. Метод создает объект <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>, присваивает ему сообщение об ошибке и возвращает его. Элемент управления <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> вставляется вместо элемента управления, на котором произошел сбой, и на странице отображается сообщение об ошибке.  
  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> нельзя вызывать непосредственно из кода. Однако можно наследовать от класса <xref:System.Web.UI.WebControls.WebParts.WebPartManager> и расширить метод. Дополнительные сведения см. в разделе Примечания для наследников.  
  
 Конечные пользователи могут работать с элементом управления <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> на странице так же, как и обычные элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Чтобы удалить сообщение об ошибке, можно закрыть элемент управления, щелкнув команду Закрыть, после чего элемент управления будет добавлен в <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> объект, как и любой другой закрытый элемент управления. Если конечный пользователь удаляет элемент управления <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>, то серверный элемент управления, который не удалось загрузить, также будет удален со страницы.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если необходимо настроить сведения, возвращаемые в элементе управления <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />, можно переопределить метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" />, вызвать базовый метод, назначить различные значения параметрам, передаваемым базовому методу, а затем вернуть полученный элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />. Например, если нежелательно, чтобы конечные пользователи отображали значение <paramref name="originalPath" /> (которое показывает путь к виртуальному каталогу пользовательского элемента управления), при вызове базового метода можно передать пустую строку ("") для этого параметра.  
  
Поведение самого элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> также можно настроить путем наследования от него. Например, может потребоваться переопределить свойство <see cref="P:System.Web.UI.WebControls.WebParts.Part.Title" /> или <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" />.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePersonalization">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreatePersonalization () As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ CreatePersonalization();" />
      <MemberSignature Language="F#" Value="abstract member CreatePersonalization : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartPersonalization&#xA;override this.CreatePersonalization : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartPersonalization" Usage="webPartManager.CreatePersonalization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект персонализации, который должен содержать пользовательские данные персонализации для текущей веб-страницы.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />, который должен содержать пользовательские данные персонализации.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A> возвращает объект для хранения параметров персонализации пользователя для текущей страницы и управления ими. Этот объект управляется элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Общие сведения о персонализации веб-части</related>
      </Docs>
    </Member>
    <Member MemberName="CreateWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::GenericWebPart ^ CreateWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member CreateWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart&#xA;override this.CreateWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="webPartManager.CreateWebPart control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Серверный элемент управления, который не является элементом управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</param>
        <summary>Помещает серверный элемент управления, который не является элементом управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, в оболочку из объекта <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, чтобы этот элемент управления имел функциональные возможности веб-частей.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, который служит оболочкой для параметра <paramref name="control" /> и позволяет последнему функционировать как настоящий элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> является основным механизмом для включения серверных элементов управления, которые не <xref:System.Web.UI.WebControls.WebParts.WebPart> элементы управления, для получения тех же функций, что и элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, и, таким образом, могут участвовать в веб-части приложениях полностью. Используя этот метод, разработчики радикально расширяют количество серверных элементов управления, которые они могут использовать в веб-части приложении, так как практически любой тип серверного элемента управления — стандартные элементы управления ASP.NET, пользовательские элементы управления и пользовательские элементы управления — можно использовать.  
  
 Элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> также использует этот метод в двух других сценариях для обертывания серверных элементов управления с помощью объекта <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>. Когда пользователи добавляют серверные элементы управления на страницу с помощью элемента управления <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>, если импортированный элемент управления не является <xref:System.Web.UI.WebControls.WebParts.WebPart>ным, вызывается метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>. Кроме того, если серверные элементы управления объявляются в формате сохраняемости в зоне <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> на веб-странице, метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> вызывается для всех элементов управления, не <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления.  
  
 При программном добавлении серверного элемента управления в зону типичный подход заключается в использовании метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> для создания оболочки элемента управления с <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>ным объектом, а затем вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, чтобы добавить элемент управления в коллекцию всех элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart> на странице. , на который ссылается свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано использование метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>. В `Button2_Click method`вызывается метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> для упаковки элемента управления <xref:System.Web.UI.WebControls.Calendar> с объектом <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> перед его добавлением в зону.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Этот метод можно переопределить для использования производного класса <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> вместо базового класса, предоставляемого в наборе элементов управления веб-части.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWarning">
      <MemberSignature Language="C#" Value="public virtual string DeleteWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает пользовательское предупреждение, отображаемое для конечных пользователей, которые удаляют элемент управления.</summary>
        <value>Строка, содержащая текст предупреждения. Значением по умолчанию является локализованное предупреждение.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда пользователь удаляет элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, обычно отображается предупреждающее сообщение по умолчанию. Он предупреждает пользователя о том, что при удалении этого экземпляра элемента управления Удаление является постоянным. Разработчик страницы может предоставить пользователям способ добавления нового экземпляра элемента управления на страницу (например, через каталог элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart> или через некоторые программные средства), но текущий экземпляр элемента управления удаляется навсегда. Диалоговое окно, в котором отображается предупреждение, содержит кнопку, которая позволяет пользователю отменить удаление при необходимости.  
  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> позволяет разработчикам задавать предупреждающее сообщение, отображаемое пользователю.  
  
 Если разработчик страницы присваивает этому свойству пустую строку (""), диалоговое окно с предупреждением не будет отображаться, когда пользователь удалит элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>.  
  
> [!NOTE]
>  Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> не отображается в случае статических элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart> и серверных элементов управления. Статические элементы управления — это серверные элементы управления, которые объявляются в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ной зоне в разметке веб-страницы. Поскольку такие элементы управления являются статическими, они не могут быть удалены, поэтому в этом случае сообщение об удалении не отображается. Статические элементы управления могут быть закрыты пользователем, но закрытый элемент управления добавляется в каталог страниц, из которого пользователь может быть добавлен обратно на страницу, в то время как удаленный элемент управления не может быть восстановлен.  
  
   
  
## Examples  
 В следующем примере кода показано использование свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> декларативно и программным способом.  
  
 Пример кода состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы просмотра страницы.  
  
-   Пользовательский элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>.  
  
-   Веб-страница.  
  
-   Описание работы примера в браузере.  
  
 Первая часть примера кода — это пользовательский элемент управления для изменения режимов экрана. Исходный код для пользовательского элемента управления можно получить из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Дополнительные сведения о режимах отображения и способах работы пользовательского элемента управления см. [в разделе Пошаговое руководство. изменение режимов отображения на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Второй частью примера кода является пользовательский элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере используется метод динамической компиляции. Поэтому в верхней части веб-страницы отсутствует атрибут `Assembly` в директиве `Register` для этого элемента управления. Пошаговое руководство, в котором показано, как выполнить компиляцию, см. в разделе [Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/textdisplaywebpart.vb#3)]  
  
 Третья часть примера кода — веб-страница. Страница содержит <xref:System.Web.UI.WebControls.WebParts.CatalogZone>ную зону с пользовательским элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, объявленным в зоне, чтобы пользователь мог добавить его на страницу во время выполнения. Обратите внимание, что на странице можно удалить только динамические элементы управления (элементы управления, которые добавляются на страницу программным способом или из каталога, наподобие этого). Статические элементы управления (элементы управления, объявляемые в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ной зоне в разметке страницы) можно закрыть, но никогда не удалять. Элемент `<asp:webpartmanager>` объявляет пользовательское значение для свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> с помощью атрибута `DeleteWarning`. Метод `Button1_Click` присваивает свойству <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> другое пользовательское значение.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/deleteWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/deleteWarningVB.aspx#1)]  
  
 После загрузки страницы в браузере необходимо добавить элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> на страницу. В раскрывающемся списке **режим экрана** выберите режим каталога. Когда появится каталог, установите флажок рядом с пользовательским элементом управления, нажмите кнопку **Добавить** , чтобы добавить его на страницу, а затем нажмите кнопку **Закрыть** , чтобы вернуть страницу в режим просмотра. Теперь, когда элемент управления видим, его можно удалить. Снова с помощью элемента управления " **режим экрана** " переключите страницу в режим конструктора (нельзя удалить элементы управления, пока страница находится в режиме просмотра). Щелкните меню глаголы (символ стрелки) в заголовке элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> и выберите **Удалить**. Появится предупреждение, заданное для атрибута `DeleteWarning`. Нажмите кнопку **Отмена**. Теперь нажмите кнопку с надписью **изменить удаление**, которая программно изменит значение свойства. В меню команды в элементе управления выберите пункт **Удалить** еще раз и обратите внимание, что на этот раз появляется другое предупреждающее сообщение.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWebPart">
      <MemberSignature Language="C#" Value="public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.DeleteWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.DeleteWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Удаляемый серверный элемент управления.</param>
        <summary>Окончательно удаляет динамический экземпляр элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> с веб-страницы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> окончательно удаляет элемент управления, представленный параметром `webPart`, из страницы. В отличие от закрытого элемента управления, который добавляется к элементу управления <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> и может быть возвращен на страницу, удаленный экземпляр элемента управления никогда не может быть добавлен обратно на страницу.  
  
> [!NOTE]
>  В соответствии с реализацией набора элементов управления веб-части возможность пользователей удалять динамический элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> зависит от пользователя и области персонализации, в которой элемент управления был добавлен на страницу. Если элемент управления добавляется, когда страница находится в общей области (пользователь с разрешениями), элемент управления не может быть удален отдельными пользователями, если страница находится в области пользователя.  
  
 Удалять можно только динамические элементы управления. Динамические элементы управления добавляются на страницу программным способом или пользователями, добавляя элементы управления из каталога. Статические элементы управления добавляются на страницу декларативно в разметке или в формате сохраняемости. Поскольку декларативные Теги постоянно содержатся в разметке, статические элементы управления никогда не могут быть удалены, но их можно закрыть и повторно открыть.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>. При первом нажатии кнопки **Добавить календарь** код в обработчике событий создает <xref:System.Web.UI.WebControls.Calendar> элемент управления и добавляет его в зону как объект <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>. Поскольку элемент управления добавляется программно, он является динамическим элементом управления и поэтому может быть удален. Когда пользователь нажимает кнопку " **Удалить календарь** ", код проверяет, что элемент управления существует, а затем удаляет его, вызывая метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DesignDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesignDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DesignDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesignDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет режим отображения, используемый для изменения макета веб-страниц, содержащих элементы управления веб-частей. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поле <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> ссылается на настраиваемый объект <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, который создается и содержится в элементе управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Поскольку это статический объект, вы можете обращаться к нему напрямую через класс <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, не требуя наличия экземпляра элемента управления.  
  
 При первой загрузке страницы, содержащей элементы управления веб-части, она по умолчанию находится в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (режим просмотра). Когда пользователи хотят изменить макет страницы, перемещая элементы управления в разные зоны или в пределах текущей зоны, они должны сначала переключить страницу в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> (режим конструктора). В режиме конструктора отображается пользовательский интерфейс для различных зон, и пользователи могут перетаскивать элементы управления для изменения макета.  
  
   
  
## Examples  
 В следующем примере кода показано, как работать с полем <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> программным способом. Код заполняет раскрывающийся список поддерживаемыми режимами экрана для страницы, в данном случае это просмотр и проектирование. Обратите внимание, что в методе `Page_PreRender` код проверяет, имеет ли текущее свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> значение <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>. Если это так, `Label1` будет видимым, а если нет, `Label1` будут скрыты.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/CS/wpmgrDesignDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/VB/wpmgrDesignDisplayModevb.aspx#1)]  
  
 После загрузки страницы в браузере режим просмотра по умолчанию находится в режиме обзора. Обратите внимание, что метка на странице скрыта. Используйте элемент управления "раскрывающийся список", чтобы переключить страницу в режим конструктора. Обратите внимание, что из-за кода в методе `Page_PreRender` метка теперь видна.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">веб-части режимах просмотра страницы</related>
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebPart">
      <MemberSignature Language="C#" Value="protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DisconnectWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DisconnectWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.DisconnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.DisconnectWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Отключаемый элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</param>
        <summary>Удаляет <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверный элемент управления, который закрывается или удаляется из любого подключения, в котором принимал участие.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> вызывается внутренне набором элементов управления веб-части, когда элемент управления либо закрывается на странице, либо удаляется со страницы. В таком сценарии вызывается метод для удаления элемента управления из любого соединения, в котором он участвует как потребитель или поставщик. Если элемент управления удаляется из любого соединения, этот метод также вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> для завершения подключений, в которых было вовлечено `webPart`.  
  
 При вызове метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> вызывается событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>. Обычно это событие можно отменить, но в двух случаях его нельзя отменить. Один из вариантов происходит во время запросов к странице, когда вызывается метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>. В случае конфликта между существующими соединениями вызывается метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, чтобы закрыть одно из конфликтующих соединений, и в этом экземпляре событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> не может быть отменено, так как конфликт должен быть разрешен.  
  
 В другом случае это происходит, когда <xref:System.Web.UI.WebControls.WebParts.WebPart> или серверный элемент управления, подключенный в данный момент, либо закрыт, либо удален. В этом случае, поскольку элемент управления удаляется со страницы, его соединение также должно быть завершено, поэтому по разработке невозможно отменить событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>, чтобы прервать процесс завершения подключения. Дополнительные сведения см. в описании события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>. С помощью двух пользовательских элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart> веб-страница позволяет создать подключение между элементами управления, нажав кнопку, а другая — для отключения элементов управления. Если закрыть один из элементов управления, когда страница находится в режиме просмотра и подключены элементы управления, переопределение метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> отключает закрытый элемент управления, завершает соединение и отображает сообщение.  
  
 Пример кода состоит из четырех частей:  
  
-   Пользовательский элемент управления для изменения режима экрана.  
  
-   Исходный файл, содержащий пользовательские элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>.  
  
-   Веб-страница для размещения элементов управления.  
  
-   Описание работы примера в браузере.  
  
 Первая часть примера кода — это пользовательский элемент управления для изменения режимов экрана. Исходный код для пользовательского элемента управления можно получить из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Дополнительные сведения о режимах отображения и способах работы пользовательского элемента управления см. [в разделе Пошаговое руководство. изменение режимов отображения на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Вторая часть — это файл, содержащий исходный код для двух пользовательских элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые будут подключены, и пользовательский элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере используется динамическая компиляция, поэтому директива `Register`, которая ссылается на эти компоненты на веб-странице, объявляется соответствующим образом в верхней части веб-страницы. Пошаговое руководство, в котором демонстрируется компиляция параметров, см. [в разделе Пошаговое руководство. Разработка и использование пользовательского серверного веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 В исходном коде обратите внимание на унаследованный элемент управления `MyWebPartManager`, переопределяющий метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>. Этот метод проверяет каждое соединение на странице, чтобы определить, участвует ли закрывающийся элемент управления в соединении, и, если это так, вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> для завершения соединения. Это идентично базовой реализации метода в элементе управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Затем переопределенный метод настраивает базовую реализацию, записывая сообщение на страницу.  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 Третья часть примера кода — веб-страница. Обратите внимание, что в верхней части содержатся директивы `Register` для регистрации пользовательского элемента управления и динамически компилируемая сборка с элементами управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Страница имеет два основных метода. Метод `Button1_Click` создает соединение между элементами управления, а метод `Button2_Click` отключает элементы управления.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 После загрузки страницы нажмите кнопку **подключить** , чтобы подключить элементы управления. Затем щелкните меню команд в одном из элементов управления (стрелка вниз в заголовке элемента управления) и выберите пункт **Закрыть** в меню команды. При попытке закрыть элемент управления вызывается переопределенный метод, соединение завершается и сообщение записывается на страницу. Если вы хотите сбросить страницу для восстановления закрытого элемента управления и поэкспериментировать с другими параметрами, щелкните ссылку **сбросить пользовательское состояние** , чтобы удалить данные персонализации и восстановить исходное состояние страницы.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebParts">
      <MemberSignature Language="C#" Value="public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectWebParts(class System.Web.UI.WebControls.WebParts.WebPartConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DisconnectWebParts (connection As WebPartConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DisconnectWebParts(System::Web::UI::WebControls::WebParts::WebPartConnection ^ connection);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectWebParts : System.Web.UI.WebControls.WebParts.WebPartConnection -&gt; unit&#xA;override this.DisconnectWebParts : System.Web.UI.WebControls.WebParts.WebPartConnection -&gt; unit" Usage="webPartManager.DisconnectWebParts connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Web.UI.WebControls.WebParts.WebPartConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />, предоставляющее подключение между серверными элементами управления.</param>
        <summary>Выполняет отключение серверных элементов управления, которые подключены на веб-странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> выполняет полный процесс завершения соединения между <xref:System.Web.UI.WebControls.WebParts.WebPart> или серверными элементами управления при передаче ему параметра `connection`.  
  
 Этот метод используется для отключения элементов управления при помещении элемента `<asp:connectionszone>` на веб-странице, чтобы предоставить пользовательский интерфейс для управления соединениями. Если страница находится в режиме экрана подключения (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>) и существует текущее соединение, пользователи могут нажать кнопку, которая вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, чтобы завершить соединение.  
  
 Можно также вызвать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> непосредственно из кода, если требуется отключить элементы управления программным способом и без необходимости добавлять элемент `<asp:connectionszone>` на страницу.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>. С помощью двух пользовательских элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart> веб-страница позволяет создать подключение между элементами управления, нажав кнопку, а другая — для отключения элементов управления.  
  
 Пример кода состоит из четырех частей:  
  
-   Пользовательский элемент управления для изменения режима экрана.  
  
-   Исходный файл, содержащий пользовательские элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>.  
  
-   Веб-страница для размещения элементов управления.  
  
-   Описание работы примера в браузере.  
  
 Первая часть примера кода — это пользовательский элемент управления для изменения режимов экрана. Исходный код для пользовательского элемента управления можно получить из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Дополнительные сведения о режимах отображения и способах работы пользовательского элемента управления см. [в разделе Пошаговое руководство. изменение режимов отображения на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Вторая часть — это файл, содержащий исходный код для двух настраиваемых элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые будут подключены. Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере используется динамическая компиляция, поэтому директива `Register`, которая ссылается на эти компоненты на веб-странице, объявляется соответствующим образом в верхней части веб-страницы. Пошаговое руководство, в котором демонстрируется компиляция параметров, см. [в разделе Пошаговое руководство. Разработка и использование пользовательского серверного веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 Третья часть примера кода — веб-страница. Обратите внимание, что в верхней части он содержит директивы `Register` для регистрации пользовательского элемента управления и динамически компилируемой сборки с элементами управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Страница имеет два основных метода. Метод `Button1_Click` создает соединение между элементами управления, а метод `Button2_Click` отключает элементы управления.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 После загрузки страницы можно нажать кнопку **подключить** , чтобы подключить элементы управления. Если ввести какой-либо текст в элемент управления "текстовое поле", а затем нажать кнопку " **Ввод** ", текст будет отображаться в подключенном элементе управления (он не будет отображаться при отключении элементов управления). Если нажать кнопку **Отключить** , элементы управления будут отключены. Состояние подключения элементов управления можно проверить с помощью раскрывающегося списка **режим экрана** , чтобы переключить страницу в режим **подключения** . После этого щелкните меню глаголы (представленные стрелкой) в заголовке окна одного из элементов управления и выберите элемент **подключить** . Отобразится пользовательский интерфейс подключения. Он доступен, так как на странице объявлен элемент `<asp:connectionszone>`. Можно также подключать и отключать элементы управления из этого пользовательского интерфейса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="connection" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="connection" /> не содержится в <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> или <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />.</exception>
        <exception cref="T:System.InvalidOperationException">Объект <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> доступен только для чтения.  
  
- или - 
 <paramref name="connection" /> уже было отключено от <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />.  
  
- или - 
 Объект <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> доступен только для чтения.  
  
- или - 
 <paramref name="connection" /> уже было отключено от <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />.</exception>
        <block subset="none" type="overrides"><para>Можно переопределить метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />, если требуется изменить реализацию по умолчанию для отключения элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />. Если вы переопределяете метод и просто хотите добавить реализацию к существующему методу, можно вызвать базовый метод перед выполнением собственного кода.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayMode As WebPartDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DisplayMode { System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ get(); void set(System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает активный режим отображения для веб-страницы, на которой содержатся элементы управления веб-частей.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />, который определяет режим отображения страницы.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Страница, содержащая элементы управления веб-части, всегда находится в одном из нескольких возможных режимов просмотра. Дополнительные сведения о режимах вывода см. в разделе [веб-части страницы режима просмотра](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4).  
  
 Класс <xref:System.Web.UI.WebControls.WebParts.WebPartManager> создает режимы интерфейса для веб-страницы. С помощью базового класса <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> создает несколько стандартных объектов режима экрана, которые можно использовать на страницах, содержащих элементы управления веб-части. Эти стандартные режимы интерфейса описаны в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>.  
  
 Элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> также управляет режимами экрана для страниц, использующих элементы управления веб-части. С помощью свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> сохраняет ссылку на текущий режим экрана на странице. Можно также использовать свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> для переключения страницы в различные режимы экрана. Пример изменения режима экрана на странице, использующей веб-части элементы управления, см. [в разделе Пошаговое руководство. изменение режимов экрана на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 В рамках управления режимом просмотра <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемент управления также предоставляет события и обработчики событий, связанные с режимами экрана, такими как метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> и метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>. Эти методы предоставляют механизм для настройки поведения страницы и даже для добавления пользовательского режима экрана.  
  
   
  
## Examples  
 В следующем примере кода показано программное использование свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>. После загрузки страницы в браузере можно использовать кнопки, расположенные в нижней части страницы, для переключения режимов экрана. Страница находится в режиме просмотра по умолчанию при загрузке. При переключении в режим конструктора можно перетаскивать серверные элементы управления из одной зоны в другую или располагать два элемента управления в одной зоне. При переключении в режим редактирования можно щелкнуть меню команд в заголовке любого из элементов управления сервера, выбрать **изменить**и изменить элемент управления, используя предоставленный пользовательский интерфейс редактирования.  
  
> [!NOTE]
>  Переключение между режимами экрана в веб-части приложении очень распространено, и вам может потребоваться использовать единообразный, многократно используемый способ сделать это для всех страниц, содержащих элементы управления веб-части. Пример пользовательского элемента управления, который изменяет режимы экрана и может быть повторно использован на многих страницах, см. в разделе [Пошаговое руководство. изменение режима экрана на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/CS/wpmgrDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/VB/wpmgrDisplayModevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />, который назначается для этого свойства, равен <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />, назначаемый для этого свойства, не является одним из поддерживаемых режимов отображения.  
  
- или - 
Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />, который назначается для этого свойства, отключен.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">веб-части режимах просмотра страницы</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Пошаговое руководство. изменение режима просмотра на странице веб-части</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanged As WebPartDisplayModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventHandler ^ DisplayModeChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler " Usage="member this.DisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после изменения текущего режима отображения на странице веб-частей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Режимы просмотра являются неотъемлемой частью веб-части приложений. Когда пользователи переключаются в другой режим отображения на веб-странице, страница часто принимает на себя совершенно другой внешний вид в зависимости от назначения нового режима отображения. После изменения режима отображения может потребоваться внести определенные изменения в пользовательский интерфейс, например скрыть или показать определенные элементы управления, изменить внешний вид выбранных элементов пользовательского интерфейса и т. д.  
  
> [!NOTE]
>  Дополнительные сведения о режимах вывода см. в разделе [веб-части страницы режима просмотра](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). Дополнительные сведения о потреблении событий см. в разделе [как использовать события в приложении веб-форм](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanging As WebPartDisplayModeCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventHandler ^ DisplayModeChanging;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler " Usage="member this.DisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после щелчка пользователем команды на веб-странице, которая запускает процесс переключения в другой режим отображения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Режимы просмотра являются неотъемлемой частью веб-части приложений. Когда пользователи переключаются в другой режим отображения на веб-странице, страница часто принимает на себя совершенно другой внешний вид в зависимости от назначения нового режима отображения. После того как пользователь инициирует процесс перехода на новый режим экрана, щелкнув команду, может потребоваться внести определенные изменения в пользовательский интерфейс с помощью свойства <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A>, чтобы определить, что будет новым режимом экрана, а затем изменить различные элементы пользовательского интерфейса на ккордингли. Для этого удобно переопределить метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>, чтобы настроить пользовательский интерфейс.  
  
> [!NOTE]
>  Дополнительные сведения о режимах вывода см. в разделе [веб-части страницы режима просмотра](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). Дополнительные сведения о потреблении событий см. в разделе [как использовать события в приложении веб-форм](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ DisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayModes : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает доступную только для чтения коллекцию всех режимов отображения, сопоставленных с элементом управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" />, которая содержит набор объектов <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />, сопоставленных с элементом управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> ссылается на все связанные режимы экрана, в отличие от свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, которое ссылается только на доступные на текущей странице режимы просмотра (поддерживаемые).  
  
 На странице всегда поддерживаются два указанных режима экрана: обзор и разработка. Другие три режима экрана, изменения, каталога и подключения поддерживаются только в том случае, если страница имеет соответствующий тип зоны, необходимый для работы определенного режима экрана. Например, если страница не содержит зону <xref:System.Web.UI.WebControls.WebParts.EditorZone>, режим отображения редактирования будет отображаться в коллекции, на которую ссылается свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, но не будет отображаться в коллекции, на которую ссылается свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано программное использование свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>. Код использует это свойство для заполнения списка всеми режимами просмотра, доступными в наборе элементов управления веб-части, даже тех, которые не поддерживаются на текущей странице. В этом случае режимы экрана каталога и подключения не поддерживаются, так как соответствующие им зоны не находятся на странице.  
  
 Другие три режима экрана: обзор, проектирование и редактирование — поддерживаются на странице. Режим редактирования поддерживается, так как страница содержит зону <xref:System.Web.UI.WebControls.WebParts.EditorZone>, в то время как режимы просмотра и разработки всегда поддерживаются.  
  
 После загрузки страницы в браузере можно использовать раскрывающийся список для переключения страницы из режима просмотра в режим конструктора, а затем в режим редактирования. В режиме редактирования можно щелкнуть раскрывающееся меню команд в заголовке одного из элементов управления сервера и выбрать **изменить** , чтобы изменить элемент управления. Обратите внимание, что если выбрать **Каталог** или **Подключиться** в раскрывающемся списке, будет создана страница ошибки.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/CS/wpmgrDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/VB/wpmgrDisplayModesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">веб-части режимах просмотра страницы</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Пошаговое руководство. изменение режима просмотра на странице веб-части</related>
      </Docs>
    </Member>
    <Member MemberName="DynamicConnections">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DynamicConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ DynamicConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicConnections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию всех динамических подключений, которые в настоящее время существуют на веб-странице.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" />, которая содержит ссылки на все динамические подключения на странице.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Динамические соединения — это соединения, создаваемые программно, а не статически. Статические соединения создаются путем объявления их в разметке страницы веб-форм. Динамические соединения формируются либо программно, либо пользователем, создающим соединение с помощью пользовательского интерфейса подключения.  
  
 Коллекция <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>, хотя она доступна только для чтения и не может изменить ее содержимое, предоставляет программный доступ к каждому динамическому объекту соединения.  
  
> [!NOTE]
>  Для выполнения общих операций, таких как подключение или отключение элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, разработчики должны использовать открытые методы класса <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, такие как <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, вместо того, чтобы пытаться напрямую изменять объекты соединения в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> набор.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EditDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ EditDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет режим отображения, в котором конечные пользователи смогут изменять серверные элементы управления. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поле <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> ссылается на настраиваемый объект <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, который создается и содержится в элементе управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Поскольку это статический объект, вы можете обращаться к нему напрямую через класс <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, не требуя наличия экземпляра элемента управления.  
  
 При первой загрузке страницы, содержащей элементы управления веб-части, она по умолчанию находится в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (режим просмотра). Если пользователь хочет изменить или изменить серверный элемент управления, он должен сначала переключить страницу в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> (режим редактирования). Во-вторых, они должны выбрать конкретный серверный элемент управления для изменения, щелкнув команду изменить в меню команд в заголовке этого элемента управления. После того как элемент управления находится в режиме редактирования, для редактирования выбранного элемента управления отображается пользовательский интерфейс редактирования.  
  
 Чтобы включить режим редактирования на странице, страница должна содержать по крайней мере одну <xref:System.Web.UI.WebControls.WebParts.EditorZone> зону, которая включает один или несколько предоставленных элементов управления редактирования, таких как элемент управления <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> или настраиваемые элементы управления редактированием.  
  
   
  
## Examples  
 В следующем примере кода показано, как работать с полем <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> программным способом. Код заполняет раскрывающийся список поддерживаемыми режимами экрана для страницы, в данном случае это просмотр, проектирование и редактирование. Для поддержки редактирования элемент `<asp:EditorZone>` находится на странице. Обратите внимание, что в методе `Page_PreRender` код проверяет, имеет ли текущее свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> значение <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>. Если это так, `Label1` будет видимым, а если нет, `Label1` будут скрыты.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/CS/wpmgrEditDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/VB/wpmgrEditDisplayModevb.aspx#1)]  
  
 После загрузки страницы в браузере режим просмотра по умолчанию находится в режиме обзора. Обратите внимание, что метка на странице скрыта. Используйте элемент управления "раскрывающийся список", чтобы переключить страницу в режим редактирования. Обратите внимание, что из-за кода в методе `Page_PreRender` метка теперь видна. Щелкните команду **изменить** в меню команд на одном из элементов управления, чтобы разрешить редактирование этого конкретного элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">веб-части режимах просмотра страницы</related>
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public virtual bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, которое определяет, включено ли создание скриптов на стороне клиента для веб-странице, на которой содержится элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <value>Логическое значение, указывающее, можно ли выполнять на странице клиентские скрипты. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> предоставляет разработчикам возможность отключить клиентские скрипты. Может потребоваться отключить сценарии клиента в целях безопасности или убедиться, что все пользователи страницы будут иметь аналогичные возможности взаимодействия с пользователем, даже если они используют разные браузеры.  
  
 Можно отключить клиентские скрипты, добавив атрибут `EnableClientScript` к элементу <xref:System.Web.UI.WebControls.WebParts.WebPartManager> на веб-странице, как показано в следующей строке декларативного кода:  
  
 `<asp:webpartmanager id="manager" runat="server"`  
  
 `EnableClientScript="false" />`  
  
 Кроме того, разработчики могут исключить это свойство путем наследования от класса <xref:System.Web.UI.WebControls.WebParts.WebPartManager> и установки значения по умолчанию `false`.  
  
 Набор элементов управления веб-части использует сценарии клиента для предоставления некоторых функций пользовательского интерфейса и персонализации клиента. Если отключить сценарии клиента, веб-части элементы управления будут работать, но некоторые функции отключаются. Возможность перетаскивать элементы управления в разные зоны отключается вместе с возможностью отрисовки команд в меню с раскрывающимися командами в заголовке окна элемента управления (команды вместо этого отображаются как ссылки в заголовке окна элемента управления).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, которое указывает, что использование тем на веб-странице включено.</summary>
        <value>Логическое значение, которое указывает, включены ли темы. Значение <see langword="true" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемент управления переопределяет свойство базового <xref:System.Web.UI.Control.EnableTheming%2A>, чтобы гарантировать, что оно всегда возвращает значение `true`. Это делается потому, что в наборе элементов управления веб-части необходимо использовать темы для отрисовки элементов управления веб-части, которые являются дочерними элементами управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> и формируют пользовательский интерфейс веб-страницы. Например, темы используются для отображения различных зон и элементов управления, которые находятся в зонах, включая различные типы элементов управления частей (элементы управления, которые наследуются от класса <xref:System.Web.UI.WebControls.WebParts.Part>), пользовательские элементы управления, ASP.NET серверные элементы управления и пользовательские серверные элементы управления.  
  
 Несмотря на то что переопределенное <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A> свойство реализовано как свойство для чтения и записи в соответствии с его базовым свойством, нельзя задать свойство, так как оно всегда должно возвращать значение `true`. При попытке задать свойство возникает исключение <xref:System.NotSupportedException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Предпринята попытка присвоить значение свойству.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartConnecting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartConnecting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartConnecting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartConnecting();" />
      <MemberSignature Language="F#" Value="abstract member EndWebPartConnecting : unit -&gt; unit&#xA;override this.EndWebPartConnecting : unit -&gt; unit" Usage="webPartManager.EndWebPartConnecting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Завершает процесс подключения элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> к другому элементу управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> завершает процесс подключения элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> к другому элементу управления. Это аналог метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>.  
  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> гарантирует, что объект персонализации, на который ссылается свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>, является изменяемым, что необходимо, так как формирование соединения само по себе является типом персонализации. Затем метод гарантирует, что объект <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> не `null`и, наконец, вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Элемент управления, на который ссылается свойство <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />, равен <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Разработчикам, которым требуется расширение элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, может потребоваться переопределить этот метод в производном классе. Один из подходов заключается в вызове базового метода, а затем при добавлении дополнительной пользовательской обработки или при необходимости полностью настраивать весь процесс завершения соединения между элементами управления.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartEditing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartEditing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartEditing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartEditing();" />
      <MemberSignature Language="F#" Value="abstract member EndWebPartEditing : unit -&gt; unit&#xA;override this.EndWebPartEditing : unit -&gt; unit" Usage="webPartManager.EndWebPartEditing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Завершает редактирование элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> завершает процесс редактирования элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Это аналог метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>.  
  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> гарантирует, что объект персонализации, на который ссылается свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>, является изменяемым, что необходимо, поскольку редактирование элемента управления — это процесс, требующий изменений персонализации. Затем метод гарантирует, что <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> объект не `null`, чтобы текущий выбранный элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> мог измениться, и, наконец, он вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Элемент управления, на который ссылается свойство <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />, равен <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Разработчикам, которым требуется расширение элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, может потребоваться переопределить этот метод в производном классе. Один из подходов заключается в вызове базового метода, а затем при добавлении дополнительной пользовательской обработки или при необходимости полностью настраивать весь процесс завершения редактирования элемента управления. Например, в методе переопределения можно сначала вызвать базовый метод, а затем добавить код, который определяет, какие изменения были внесены, и отображает список изменений, возвращенных пользователю в качестве подтверждения.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExportSensitiveDataWarning">
      <MemberSignature Language="C#" Value="public virtual string ExportSensitiveDataWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExportSensitiveDataWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExportSensitiveDataWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ExportSensitiveDataWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExportSensitiveDataWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст предупреждения, которое отображается при попытке пользователем экспортировать конфиденциальные данные состояния из элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, содержащая предупреждение. Сообщением по умолчанию является соответствующее конкретному языку значение, которое предоставляется платформой .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда пользователь пытается экспортировать конфиденциальные данные о состоянии из элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, если какой-либо из экспортируемых данных поступает из элемента, помеченного как конфиденциальный в исходном коде, в окне сообщения выводится предупреждающее сообщение. , указывая, что экспортируются конфиденциальные данные, и предоставляет возможность отменить экспорт. Разработчики могут пометить данные определенного элемента как конфиденциальные, установив для параметра `isSensitive` атрибута `[Personalizable]` значение `true` в элементе. Дополнительные сведения об этом атрибуте и параметре см. в описании класса <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>.  
  
> [!IMPORTANT]
>  При использовании функции экспорта веб-части конфиденциальные данные могут быть экспортированы для неавторизованных пользователей. Дополнительные сведения о защите от этой угрозы см. в статье [защита веб-части страниц](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 Сообщение по умолчанию отображается каждый раз, когда пользователи пытаются выполнить экспорт. Однако, назначив значение свойству <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>, можно указать пользовательское предупреждающее сообщение.  
  
   
  
## Examples  
 В следующем примере кода показано декларативное использование свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>.  
  
 Код для следующей веб-страницы использует стандартный <xref:System.Web.UI.WebControls.BulletedList> элемент управления и помещает его в зону. Элемент управления будет заключен в оболочку элемента управления <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> во время выполнения, что позволяет ему действовать как истинный элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Чтобы сделать элемент управления экспортируемым, в элемент `<asp:bulletedlist>` добавляется атрибут `ExportMode`, а для атрибута устанавливается значение <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>, что означает, что можно экспортировать как конфиденциальные, так и неконфиденциальные данные. Обратите внимание, что в элементе `<asp:webpartmanager>` атрибуту `ExportSensitiveDataWarning` присваивается пользовательское значение.  
  
 Обратите внимание, что для работы с примером кода необходимо добавить параметр в файл Web. config, чтобы включить экспорт веб-частиных файлов описания. Убедитесь, что у вас есть файл Web. config в том же каталоге, что и веб-страница для этого примера кода. В разделе `<system.web>` убедитесь, что имеется элемент `<webParts>` с атрибутом `enableExport`, для которого задано значение `true`, как показано в следующей разметке.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/CS/wpmgrExportSensitiveWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/VB/wpmgrExportSensitiveWarningVB.aspx#1)]  
  
 После загрузки страницы в браузере щелкните меню команд (представленное стрелкой вниз) в заголовке окна элемента управления, содержащего ссылки. В меню команды выберите **Экспорт**и обратите внимание, что отображается окно сообщения с пользовательским предупреждением. Если вы хотите продолжить экспорт, нажмите кнопку **ОК**, что позволит сохранить локальную копию XML-файла описания со всеми данными об элементе управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExportWebPart">
      <MemberSignature Language="C#" Value="public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExportWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member ExportWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Xml.XmlWriter -&gt; unit&#xA;override this.ExportWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Xml.XmlWriter -&gt; unit" Usage="webPartManager.ExportWebPart (webPart, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="webPart">Элемент управления, из которого будут экспортированы данные.</param>
        <param name="writer">Средство записи <see cref="T:System.Xml.XmlWriter" />, который записывает экспортированные из <paramref name="webPart" /> данные в XML-файл описания.</param>
        <summary>Создает XML-файл описания, который содержит состояние и данные свойства для серверного элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> собирает различные данные о состоянии и свойствах из `webPart` в XML-файл. Данные содержат сведения о самом элементе управления, включая его сборку, данные о состоянии и данные свойств. Пользователь, инициирующий экспорт, может сохранить XML-файл на диске на локальном компьютере или в сети. Другие пользователи могут импортировать файл описания на другую страницу или на другой веб-сайт и применить данные состояния и свойства к другому экземпляру `webPart`. Это обеспечивает быстрый и удобный механизм, позволяющий пользователям совместно использовать и повторно использовать свои параметры в серверных элементах управления, а также предоставляет разработчикам средства для управления внешним видом и поведением экспортируемых и импортируемых элементов управления.  
  
 По умолчанию свойства `webPart` не экспортируются. Чтобы включить экспорт свойства, необходимо пометить его атрибутом `[Personalizable]` в исходном коде. При необходимости можно также пометить экспортируемое свойство как конфиденциальные данные, установив для параметра `isSensitive` атрибута `[Personalizable]` значение `true`. По умолчанию `isSensitive` `false`. Разработчики могут задать параметру значение `true`, чтобы указать, что данные являются конфиденциальными.  
  
 Чтобы разрешить экспорт `webPart`, разработчик устанавливает для его свойства <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> значение либо <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All> (включая все настраиваемые и конфиденциальные свойства), либо для <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, который экспортирует все, кроме конфиденциальных свойств.  
  
> [!IMPORTANT]
>  Предоставление пользователям возможности экспорта данных из элементов управления и импорт данных в другие элементы управления влечет за собой некоторые угрозы безопасности. Разработчики должны использовать описанный выше подход для защиты конфиденциальных данных и, если они хотят избежать риска предоставления данных, не должны вообще включать экспорт на `webPart`. Дополнительные сведения о веб-части проблем безопасности см. в разделе [Защита страниц веб-части](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="webPart" /> имеет значение <see langword="null" />.  
  
- или - 
 <paramref name="writer" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> не содержится в коллекции элементов управления, на которую ссылается свойство <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />.  
  
- или - 
Значение свойства <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />, принадлежащее <paramref name="webPart" />, задано равным <see cref="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None" />, что означает отключение экспорта для <paramref name="webPart" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2">Защита страниц веб-части</related>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="webPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переопределен для предотвращения перевода фокуса на элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, так как для последнего отсутствует пользовательский интерфейс.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Focus%2A> переопределяет базовый метод <xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType> и создает исключение, если вызывающий объект вызывает метод. Поскольку элемент управления "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>" не имеет пользовательского интерфейса и никогда не отображается для пользователей, он не может установить фокус сам на себя.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Вызывающий объект пытается вызвать метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" />, который не поддерживается в элементе управления, не имеющем пользовательского интерфейса.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ConsumerConnectionPointCollection ^ GetConsumerConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetConsumerConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&#xA;override this.GetConsumerConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" Usage="webPartManager.GetConsumerConnectionPoints webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Серверный элемент управления, который выполняет роль получателя в подключении.</param>
        <summary>Получает коллекцию объектов <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />, которые могут функционировать в качестве точек подключения серверного элемента управления, выполняющего роль получателя в подключении веб-частей.</summary>
        <returns>Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" />, которая содержит все точки подключения в получателе.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Веб-частиное подключение всегда включает в себя ровно два элемента управления, один из которых выступает в качестве поставщика данных, а другой выступает в качестве потребителя данных. Каждый элемент управления должен иметь один или несколько методов, определенных как точки соединения. В случае с элементом управления получателя его точки соединения <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объекты. Получение точек подключения потребителя является необходимым шагом для формирования веб-части соединения.  
  
 Потребитель всегда должен иметь по крайней мере одну точку подключения, чтобы иметь возможность установить соединение. Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> проверяет элемент управления потребителя и получает коллекцию всех его точек соединения. Если у элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> нет точек соединения, метод возвращает пустую коллекцию.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>.  
  
 Пример кода состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на веб-части странице.  
  
-   Веб-страница, содержащая два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые могут быть подключены, и элемент `<asp:webpartmanager>`.  
  
-   Файл исходного кода, содержащий два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> и настраиваемый интерфейс.  
  
-   Описание работы примера в браузере.  
  
 Первая часть примера кода — это пользовательский элемент управления для изменения режимов экрана. Исходный код для пользовательского элемента управления можно получить из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Дополнительные сведения о режимах отображения и способах работы пользовательского элемента управления см. в разделе [Пошаговое руководство. изменение режимов отображения на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Декларативная разметка для веб-страницы содержит директивы `Register` как для пользовательского элемента управления, так и для пользовательских элементов управления. Существует элемент `<asp:webpartmanager>`, элемент `<asp:webpartzone>` для хранения пользовательских элементов управления и элемент `<asp:connectionszone>`. Обратите внимание, что в методе `Page_Load` код проверяет, существует ли уже соединение, и, если нет, определяет поставщик, потребитель и соответствующие точки соединения, а затем добавляет новое соединение в набор статических соединений, на которые ссылается @no__t Свойство _1_.<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> Обратите внимание, что объект <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection>, который извлекается с помощью метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, затем передается методу <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, чтобы определить, можно ли создать соединение между двумя элементами управления.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 В третьей части примера приведен исходный код для элементов управления. Этот код и инструкции по его компиляции можно получить из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
 После загрузки веб-страницы в браузере щелкните раскрывающийся список **режим экрана** и выберите **подключить** , чтобы переключить страницу в режим подключения. Режим подключения использует элемент `<asp:connectionszone>`, позволяющий создавать соединения между элементами управления. В режиме подключения щелкните стрелку вниз в заголовке окна элемента управления " **почтовый индекс** ", чтобы активировать его меню команд, а затем нажмите кнопку **подключить**. После того как появится пользовательский интерфейс подключения, обратите внимание, что соединение уже создано кодом, содержащимся в методе `Page_Load`. Если вернуться на эту страницу в более позднем сеансе браузера, это статическое соединение уже будет установлено и его не нужно будет создавать заново при каждой загрузке страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="webPart" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentWebPartManager">
      <MemberSignature Language="C#" Value="public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::WebControls::WebParts::WebPartManager ^ GetCurrentWebPartManager(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="static member GetCurrentWebPartManager : System.Web.UI.Page -&gt; System.Web.UI.WebControls.WebParts.WebPartManager" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">Веб-страница, содержащая экземпляр <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</param>
        <summary>Получает ссылку на текущий экземпляр элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> на странице.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, который ссылается на текущий экземпляр элемента управления на странице.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> полезен в контекстах, где требуется получить ссылку на текущий элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Обычно это происходит при написании пользовательского элемента управления, который не может быть известно во время разработки, какой идентификатор элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> на странице.  
  
> [!NOTE]
>  Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> является статическим, поэтому его можно вызывать напрямую, не требуя наличия экземпляра элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
 Некоторые элементы управления в наборе веб-части, такие как элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, имеют свойство <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>, которое может получить ссылку на текущий элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Поэтому при работе с такими элементами управления следует использовать это свойство для получения ссылки.  
  
 При кодировании в контексте, где известно, что идентификатор элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, например написание кода на веб-странице, проще и эффективнее ссылаться непосредственно на элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> с помощью его идентификатора.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A>. Пример состоит из двух частей: пользовательского серверного элемента управления и веб-страницы, на которой размещен элемент управления.  
  
 Пользовательский элемент управления <xref:System.Web.UI.WebControls.Label> использует метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> для получения идентификатора элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> на текущей странице, а затем отображает идентификатор.  
  
 [!code-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/MyManagerIDLabel.cs#2)]
 [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/MyManagerIDLabel.vb#2)]  
  
 В следующем примере кода представлена веб-страница, на которой размещен элемент управления в <xref:System.Web.UI.WebControls.WebParts.WebPartZone>ной зоне.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/getCurrentWPManagerCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/getcurrentWPManagervb.aspx#1)]  
  
 После загрузки страницы в браузере Обратите внимание, что идентификатор текущего элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> отображается в пользовательском элементе управления <xref:System.Web.UI.WebControls.Label>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="page" /> имеет значение <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayTitle">
      <MemberSignature Language="C#" Value="protected internal virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetDisplayTitle(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetDisplayTitle(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayTitle : System.Web.UI.WebControls.WebParts.WebPart -&gt; string&#xA;override this.GetDisplayTitle : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartManager.GetDisplayTitle webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Элемент управления, для которого этот метод возвращает значение свойства <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />.</param>
        <summary>Возвращает строку, содержащую значение для свойства <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <returns>Строка, которая содержит вычисленное значение свойства <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> для параметра <paramref name="webPart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает вычисленное значение свойства <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> для `webPart`. Когда разработчики не присваивают значение свойству <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, этот метод создает значение, отображаемое в качестве заголовка. Вычисленное значение для элементов управления без названия состоит из числа, добавленного к строке, с номером, указывающим последовательность элемента управления в текущей зоне.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Элемент <paramref name="webPart" /> отсутствует в коллекции <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />.</exception>
        <block subset="none" type="overrides"><para>Этот метод можно переопределить, чтобы изменить способ вычисления заголовка отображения по умолчанию.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="GetExportUrl">
      <MemberSignature Language="C#" Value="public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetExportUrl(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetExportUrl(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.GetExportUrl : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartManager.GetExportUrl webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Экспортируемый объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</param>
        <summary>Возвращает относительный виртуальный путь и строку запроса, которые являются частью запроса, если пользователь пытается экспортировать элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <returns>Строка, которая содержит относительный виртуальный путь и строку запроса, которые вмести формируют запрос на экспорт элемента управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение, возвращаемое методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A>, является относительным виртуальным путем к расположению на сервере страницы, содержащей элемент управления, плюс добавленное значение строки запроса, которое формирует запрос на экспорт, отправленный на сервер. Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A> кодирует строку перед тем, как разрешить отправку запроса, чтобы защититься от атак вредоносных сценариев.  
  
> [!NOTE]
>  Дополнительные сведения о защите веб-части приложений см. в разделе [Защита страниц веб-части](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetGenericWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::GenericWebPart ^ GetGenericWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetGenericWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="webPartManager.GetGenericWebPart control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Серверный элемент управления, который существует в <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> и помещен в оболочку в качестве дочернего элемента управления для объекта <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> во время выполнения.</param>
        <summary>Возвращает ссылку на экземпляр элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, содержащий серверный элемент управления.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />,который служит оболочкой для параметра <paramref name="control" /> в качестве дочернего элемента управления. Этот метод возвращает значение <see langword="null" />, если параметр <paramref name="control" /> не содержится в объекте <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно существует две категории элементов управления, которые разработчики размещают в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> зонах для участия в веб-части приложениях: <xref:System.Web.UI.WebControls.WebParts.WebPart> элементы управления, которые наследуют от базового класса <xref:System.Web.UI.WebControls.WebParts.WebPart> и других серверных элементов управления, которые могут быть стандартными элементами управления ASP.NET , пользовательские элементы управления или пользовательские элементы управления. Когда любой из этих элементов управления размещается в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ной зоне, он берет на себя функциональность элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> имеет эту функциональность по сути, но другие виды серверных элементов управления этого не делают. Чтобы другие серверные элементы управления действовали в качестве <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, помещаемых в зону <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>, ASP.NET заключает их в элемент управления <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>. Поскольку элемент управления <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> наследуется непосредственно от класса <xref:System.Web.UI.WebControls.WebParts.WebPart>, он предоставляет свои дочерние элементы управления с истинными веб-части функциями.  
  
 Часто во время выполнения разработчикам страниц может потребоваться получить ссылку на элемент управления <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>, содержащий один из серверных элементов управления в зоне. Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> позволяет им получить ссылку на элемент управления <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>.  
  
   
  
## Examples  
 В следующем примере кода показано использование метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>. Пример кода содержит элемент управления <xref:System.Web.UI.WebControls.Calendar>, объявленный в зоне <xref:System.Web.UI.WebControls.WebParts.WebPartZone>. Метод `Button1_Click` сначала выводит идентификатор элемента управления <xref:System.Web.UI.WebControls.Calendar> в метку, а затем использует метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> для получения ссылки на элемент управления <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>, который создает оболочку для календаря. Идентификатор элемента управления <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> и идентификатор его дочернего элемента управления (который является элементом управления <xref:System.Web.UI.WebControls.Calendar>) выводятся во вторую метку.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/CS/getGenericWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/VB/getGenericWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> — <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ProviderConnectionPointCollection ^ GetProviderConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&#xA;override this.GetProviderConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" Usage="webPartManager.GetProviderConnectionPoints webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Серверный элемент управления, который выполняет роль поставщика в подключении.</param>
        <summary>Получает коллекцию объектов <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />, которые могут функционировать в качестве точек подключения серверного элемента управления, выполняющего роль поставщика в подключении веб-частей.</summary>
        <returns>Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" />, которая содержит все точки подключения в поставщике.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Веб-частиное подключение всегда включает в себя ровно два элемента управления, один из которых выступает в качестве поставщика данных, а другой выступает в качестве потребителя данных. Каждый элемент управления должен иметь один или несколько методов, определенных как точки соединения. В случае элемента управления поставщика его точки соединения являются <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объектами.  
  
 Для установления соединения поставщик должен всегда иметь по крайней мере одну точку подключения. Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> проверяет элемент управления поставщика и получает коллекцию всех его точек соединения. Получение точек подключения поставщика является необходимым шагом для формирования веб-части соединения.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.  
  
 Пример состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на веб-части странице.  
  
-   Веб-страница, содержащая два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые могут быть подключены, и элемент `<asp:webpartmanager>`.  
  
-   Файл исходного кода, содержащий два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> и настраиваемый интерфейс.  
  
-   Описание работы примера в браузере.  
  
 Первая часть примера кода — это пользовательский элемент управления для изменения режимов экрана. Исходный код для пользовательского элемента управления можно получить из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Дополнительные сведения о режимах отображения и способах работы пользовательского элемента управления см. [в разделе Пошаговое руководство. изменение режимов отображения на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Декларативная разметка для веб-страницы содержит директивы `Register` как для пользовательского элемента управления, так и для пользовательских элементов управления. Существует элемент `<asp:webpartmanager>`, элемент `<asp:webpartzone>` для хранения пользовательских элементов управления и элемент `<asp:connectionszone>`. Обратите внимание, что в методе `Page_Load` код проверяет, существует ли уже соединение, и, если нет, определяет поставщик, потребитель и соответствующие точки соединения, а затем добавляет новое соединение в набор статических соединений, на которые ссылается @no__t Свойство _1_.<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> Обратите внимание, что объект <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection>, который извлекается с помощью метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>, затем передается методу <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, чтобы определить, можно ли создать соединение между двумя элементами управления.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 В третьей части примера приведен исходный код для элементов управления. Этот код и инструкции по его компиляции можно получить из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
 После загрузки веб-страницы в браузере щелкните раскрывающийся список **режим экрана** и выберите **подключить** , чтобы переключить страницу в режим подключения. Режим подключения использует элемент `<asp:connectionszone>`, позволяющий создавать соединения между элементами управления. В режиме подключения щелкните стрелку вниз в заголовке окна элемента управления " **почтовый индекс** ", чтобы активировать его меню команд, а затем нажмите кнопку **подключить**. После того как появится пользовательский интерфейс подключения, обратите внимание, что соединение уже создано кодом, содержащимся в методе `Page_Load`. Если вернуться на эту страницу в более позднем сеансе браузера, это статическое соединение уже будет установлено и его не нужно будет создавать заново при каждой загрузке страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="webPart" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ImportWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart ImportWebPart(class System.Xml.XmlReader reader, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportWebPart (reader As XmlReader, ByRef errorMessage As String) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ ImportWebPart(System::Xml::XmlReader ^ reader, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member ImportWebPart : System.Xml.XmlReader * string -&gt; System.Web.UI.WebControls.WebParts.WebPart&#xA;override this.ImportWebPart : System.Xml.XmlReader * string -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.ImportWebPart (reader, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">Средство чтения <see cref="T:System.Xml.XmlReader" />, которое считывает данные состояния и свойств из импортируемого XML-файла описания.</param>
        <param name="errorMessage">Строка <see cref="T:System.String" />, которая отображается для пользователей, если во время импорта возникает ошибка.</param>
        <summary>Импортирует XML-файл описания, который содержит данные состояния и свойств для элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> и применяет эти данные к элементу управления.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (или серверный элемент управления, оболочкой для которого является <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, и поэтому он воспринимается как <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />), на который имеется ссылка в импортированном XML-файле описания.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> импортирует XML-файл описания, созданный методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> для серверного элемента управления. Это не сам импортируемый серверный элемент управления, но только файл описания, содержащий сведения о состоянии и свойстве элемента управления. Элемент управления и сборка, на которые ссылается файл описания, должны быть уже доступны на сервере, где пользователь пытается импортировать файл описания.  
  
 Чтобы включить импорт элемента управления, разработчику необходимо добавить на страницу элемент управления <xref:System.Web.UI.WebControls.WebParts.CatalogZone>, на котором будет включена импорт. В пределах зоны необходимо добавить элемент управления <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>. Этот элемент управления предоставляет диалоговое окно файла, позволяющее пользователям просматривать и искать импортируемый файл описания.  
  
 После того как пользователь найдет файл описания и начнет импорт, файл описания считывается методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>. Если ошибок нет, а сборка и элемент управления найдены, серверный элемент управления добавляется в каталог в элементе управления <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>, а различные свойства и данные о состоянии, указанные в файле описания, применяются к элементу управления. Затем пользователь может выбрать элемент управления и добавить его на страницу.  
  
> [!IMPORTANT]
>  Как и метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> имеет некоторый потенциал для угроз безопасности. Поскольку в него входит импорт данных на веб-сайт, злоумышленник может попытаться вставить в импортируемый файл описания неверные данные или даже код скрипта. После этого неправильные данные могут отображаться на странице или в базе данных, а также может выполняться вставленный скрипт. Общие сведения о потенциальных рисках, связанных с импортом файлов описания, и способах устранения этих рисков см. в статье [защита веб-части страниц](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="reader" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.IO.EndOfStreamException"><paramref name="reader" /> не может прочитать файл.  
  
- или - 
 <paramref name="reader" /> должен был отобразить сообщение об ошибке импорта, однако не нашел такого сообщения в файле.  
  
- или - 
 <paramref name="reader" /> достиг конца файла и не нашел XML-элемент, содержащий экспортированные данные.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2">Защита страниц веб-части</related>
      </Docs>
    </Member>
    <Member MemberName="Internals">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Internals As WebPartManagerInternals" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ Internals { System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Internals : System.Web.UI.WebControls.WebParts.WebPartManagerInternals" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManagerInternals</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на класс <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />, который используется для объединения и отделения набора методов, которые фактически реализованы в классе <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, но предназначены преимущественно для разработчиков элементов управления.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />, через который объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> может ссылаться на различные методы, которые были отдельно вынесены в <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> предоставляет API-интерфейсы для вызова набора методов <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, которые используются главным образом в случаях расширяемости.  
  
 Разработанный способ использования этих внутренних методов заключается в доступе к ним через свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>. Поскольку свойство защищено, доступ к нему можно получить только и вызвать методы в экземпляре класса <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>, наследуя от класса <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
> [!NOTE]
>  Это свойство скрыто от IntelliSense в [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]. Однако в производном классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager> можно по-прежнему обращаться к свойству и его различным элементам.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAuthorized">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, можно ли добавить на страницу объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или другой серверный элемент управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Частью гибкости функции веб-части является возможность добавлять серверные элементы управления на веб-страницы во время выполнения. Существует несколько распространенных сценариев, в которых можно добавить серверный элемент управления (который может быть пользовательским элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, настраиваемым серверным элементом управления, пользовательским элементом управления или элементом управления ASP.NET).  
  
 В следующих распространенных сценариях набор элементов управления веб-части пытается добавить серверные элементы управления на страницу, а метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> вызывается для авторизации:  
  
-   При добавлении серверного элемента управления путем объявления его в разметке веб-страницы в зоне <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>.  
  
-   Когда серверный элемент управления добавляется в зону программным способом.  
  
-   Когда пользователь импортирует серверный элемент управления в каталог веб-части элементов управления.  
  
-   Когда существующий серверный элемент управления загружается из хранилища данных персонализации.  
  
-   При добавлении серверного элемента управления в <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> элемент управления, чтобы сделать его доступным в каталоге серверных элементов управления.  
  
 В каждом сценарии, в котором добавляются элементы управления, вызывается метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, чтобы убедиться, что выполнены все условия авторизации, позволяющие добавить элемент управления. Если элемент управления является полномочным, он добавляется обычным образом, как если бы не существовал сценарий фильтрации. Если элемент управления не является полномочным, набор элементов управления веб-части может отвечать несколькими способами в зависимости от контекста. Набор элементов управления может без вмешательства пользователя добавить несанкционированный компонент (если нет необходимости информировать пользователей), он может отобразить сообщение об ошибке или добавить экземпляр класса <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> в качестве заполнителя. Этот объект-заполнитель не отображается на странице, но отображается в исходном коде страницы, чтобы указать, что несанкционированный контроль был исключен.  
  
 Определить, является ли элемент управления авторизованным, является фильтр авторизации. Фильтр авторизации — это функция в наборе элементов управления веб-части, которая позволяет разработчикам исключить из страницы все элементы управления, которые не соответствуют заданным критериям.  
  
 Чтобы создать сценарий фильтрации, разработчики должны выполнить два действия. Во-первых, им необходимо назначить строковое значение (значение может быть произвольным) для свойства <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> каждого элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, который они запланировать использовать в сценарии. Они также могут присваивать этому свойству значение для других типов серверных элементов управления, не <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, так как если они помещаются в зоны <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>, такие элементы управления упаковываются с элементом управления <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> во время выполнения, и этот элемент управления наследует <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> свойства.  
  
 Второй шаг, необходимый для создания сценария фильтрации, — переопределение метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> или создание обработчика событий для события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>. В этих методах разработчик может проверить свойство <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>, и если значение указывает, что элемент управления не должен быть разрешен, разработчик гарантирует, что метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> возвращает значение `false`.  
  
> [!NOTE]
>  Примеры кода и описание настройки настраиваемого сценария фильтрации с помощью метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> см. в разделах, посвященных перегрузкам метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAuthorized(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAuthorized(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.IsAuthorized : System.Web.UI.WebControls.WebParts.WebPart -&gt; bool" Usage="webPartManager.IsAuthorized webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или другой серверный элемент управления, для которого проверяется авторизация.</param>
        <summary>Выполняет начальные действия по определению, авторизован ли элемент управления для добавления на страницу.</summary>
        <returns>Логическое значение, указывающее, можно ли добавить на страницу параметр <paramref name="webPart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> — это начальный метод, вызываемый набором элементов управления веб-части для проверки авторизации для элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Он принимает `webPart` в качестве параметра и начинает процесс, который в конечном итоге определяет, будет ли элемент управления добавлен на страницу. Вызывайте этот метод из кода напрямую, если необходимо определить, является ли данный элемент управления полномочным.  
  
 Этот метод выполняет начальные задачи по определению того, наследуется ли элемент управления от <xref:System.Web.UI.WebControls.WebParts.WebPart> класса или является <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>ным элементом управления и, если да, какой тип дочернего элемента управления он содержит. Для завершения задачи авторизации вызывается метод перегрузки <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29> из кода, чтобы определить, разрешен ли добавление элемента управления на страницу.  
  
 Пример кода состоит из трех частей:  
  
-   Пользовательский элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, переопределяющий метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>.  
  
-   Веб-страница, на которой создается фильтр для элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>.  
  
-   Пояснения к запуску примера кода.  
  
 В этом примере кода используется пользовательский элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, который переопределяет метод перегрузки <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>, чтобы обеспечить настраиваемую обработку свойства <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>. Этот элемент управления проверяет значение свойства `admin` и, если значение указано, авторизует элемент управления. Если значение элемента управления отличается, оно не имеет полномочий; элементы управления без значения свойства также являются полномочными, так как они предположительно не являются частью сценария фильтрации.  
  
 Для выполнения этого примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере кода используется динамический метод компиляции. Пошаговое руководство, в котором показано, как выполнить компиляцию, см. в разделе [Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 Во второй части примера кода создается фильтр, который может исключить элемент управления. Следующая веб-страница содержит три элемента управления ASP.NET Server в элементе `<asp:webpartzone>`. Обратите внимание, что в первом и втором элементах управления для свойств <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> заданы разные значения, а третья не назначает свойство. Это значение авторизации можно проверить во время выполнения, и элемент управления можно добавить на страницу, если фильтр соответствует критериям, заданным разработчиком. Кроме того, обратите внимание, что в методе `Page_Load` код вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29>, чтобы определить, разрешен ли каждый из элементов управления, и если да, то он задает свойство <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> каждого элемента управления.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 Обратите внимание, что для работы с примером кода необходимо добавить параметр в файл Web. config, чтобы включить экспорт файлов описания веб-части. Убедитесь, что у вас есть файл Web. config в том же каталоге, что и веб-страница для этого примера кода. В разделе `<system.web>` убедитесь, что имеется элемент `<webParts>` с атрибутом `enableExport`, для которого задано значение `true`, как показано в следующей разметке.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 После загрузки страницы в браузере Обратите внимание, что первый элемент управления отображается, так как он соответствует критериям в переопределенном методе. Второй элемент управления не добавляется на страницу, так как он исключен фильтром. Также добавляется третий элемент управления, так как он не имеет установленного свойства <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>. Обратите внимание, что если щелкнуть значок меню команд в заголовке окна любого элемента управления, то они смогут экспортироваться, так как были назначены соответствующие значения свойств <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> — <see langword="null" />.</exception>
        <block subset="none" type="usage"><para>Этот метод вызывается непосредственно из кода. Если вы хотите получить более программный контроль над процессом авторизации, можно переопределить метод перегрузки <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" />.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAuthorized(class System.Type type, string path, string authorizationFilter, bool isShared) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAuthorized(Type ^ type, System::String ^ path, System::String ^ authorizationFilter, bool isShared);" />
      <MemberSignature Language="F#" Value="abstract member IsAuthorized : Type * string * string * bool -&gt; bool&#xA;override this.IsAuthorized : Type * string * string * bool -&gt; bool" Usage="webPartManager.IsAuthorized (type, path, authorizationFilter, isShared)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="authorizationFilter" Type="System.String" />
        <Parameter Name="isShared" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">Тип <see cref="T:System.Type" /> элемента управления, для которого проверяется авторизация.</param>
        <param name="path">Путь относительно приложения к файлу исходного кода для элемента управления, проходящего авторизацию, если он является пользовательским элементом управления.</param>
        <param name="authorizationFilter">Произвольное строковое значение, которое присваивается свойству <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" /> элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> и используется для авторизации добавления элемента управления на страницу.</param>
        <param name="isShared">Показывает, является ли общим элемент управления, проходящий авторизацию, что означает, что он отображается для многих или для всех пользователей приложения, а его свойство <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" /> имеет значение <see langword="true" />.</param>
        <summary>Выполняет завершающие действия по определению, авторизован ли элемент управления для добавления на страницу.</summary>
        <returns>Логическое значение, указывающее, авторизован ли элемент управления для добавления на страницу.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод перегрузки <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> выполняет завершающие действия по определению, разрешено ли добавление элемента управления на страницу. Метод гарантирует, что `type` является допустимым типом, а `path` имеет значение только в том случае, если проверяемый элемент управления является пользовательским элементом управления. Затем вызывается метод критической <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>, который вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, чтобы определить, разрешен ли добавление элемента управления на страницу.  
  
 Первым шагом является создание фильтра, который может исключить элемент управления. Следующая веб-страница содержит три элемента управления ASP.NET Server в элементе `<asp:webpartzone>`. Обратите внимание, что в первом и втором элементах управления для свойств <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> заданы разные значения, а третья не назначает свойство. Это значение авторизации можно проверить во время выполнения, и элемент управления можно добавить на страницу, если фильтр соответствует критериям, заданным разработчиком.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 Вторым шагом является переопределение метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> и создание настраиваемой обработки для фильтров авторизации. Обратите внимание, что код сначала проверяет, имеет ли свойство значение, так что любой элемент управления, который не назначает свойство <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>, будет добавлен автоматически. Если элемент управления имеет фильтр, код возвращает `true` только в том случае, если значение фильтра равно `admin`. Это демонстрирует простой механизм, который можно использовать для отображения определенных элементов управления определенным пользователям в зависимости от их роли. Хотя полный пример использования ролей выходит за рамки данного раздела, можно использовать ту же логику, что и переопределенный метод в этом примере кода, за исключением того, что можно проверить, находится ли текущий пользователь в роли, соответствующей значению фильтра авторизации. , а затем добавить элемент управления только для этого пользователя. Это позволит создавать страницы, в которых некоторые пользователи увидят все элементы управления, а другие пользователи увидят только выбранные элементы управления. Вот как логика, проверяющая фильтр, может выглядеть, если вы использовали роли:  
  
```vb  
If Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  
  return True  
Else  
  return False  
End If  
```  
  
```csharp  
if(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  
    return true;  
else  
    return false;  
```  
  
 Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере кода используется динамический метод компиляции. Пошаговое руководство, в котором показано, как выполнить компиляцию, см. в разделе [Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 После загрузки страницы в браузере Обратите внимание, что первый элемент управления отображается, так как он соответствует критериям в переопределенном методе. Второй элемент управления не добавляется на страницу, так как его значение фильтра исключается. Добавлен третий элемент управления, так как для него не задано свойство <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>. Если изменить значение свойства второго элемента управления так, чтобы оно совпадало с именем первого элемента управления, а затем снова запустить эту страницу, также будет добавлен второй элемент управления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="type" /> — это пользовательский элемент управления, а <paramref name="path" /> равен или <see langword="null" /> или пустой строке ("").  
  
- или - 
 <paramref name="type" /> не является пользовательским элементом управления, а <paramref name="path" /> содержит назначенное для него значение.</exception>
        <block subset="none" type="overrides"><para>Этот метод может быть переопределен путем наследования от класса <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, если необходимо обеспечить дополнительную обработку при проверке авторизации. Может потребоваться переопределить метод для проверки определенных значений в параметре <paramref name="authorizationFilter" /> и на основе значения вернуть логическое значение, определяющее, будет ли элемент управления добавлен на страницу.  
  
Для разработчиков страниц, которые также хотят проверить фильтры авторизации и предоставить настраиваемую обработку, существует возможность сделать это встроенным на странице. aspx или в файле кода программной части без наследования от каких-либо классов. Можно объявить альтернативный обработчик событий на странице для метода <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" /> элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />. Дополнительные сведения и пример см. в описании метода <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsCustomPersonalizationStateDirty">
      <MemberSignature Language="C#" Value="protected virtual bool IsCustomPersonalizationStateDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsCustomPersonalizationStateDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsCustomPersonalizationStateDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomPersonalizationStateDirty : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, которое указывает, были ли сделаны изменения персонализации, затронувшие персонализацию на уровне страницы, управляемой элементом управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <value>Логическое значение, указывающее, были ли внесены изменения персонализации. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> использует свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> внутренне для того, чтобы контролировать, изменились ли какие-либо данные персонализации на уровне страницы, которыми она управляет. Данные персонализации изменяются, когда пользователи выполняют различные действия персонализации на уровне страницы, такие как добавление или удаление элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, подключение или отключение элементов управления, изменение макета страницы путем перемещения элементов управления и других действий.  
  
> [!NOTE]
>  Пользователи также могут выполнять персонализацию на уровне элемента управления, что означает внесение изменений персонализации в конкретный элемент управления, и изменения затрагивают только этот элемент управления. В качестве примера можно изменить элемент управления и изменить его текст заголовка или цвет фона. Персонализация на уровне элемента управления не влияет на данные персонализации на уровне страницы, которые отписываются элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, поэтому значение свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> не изменяется на `true` при выполнении персонализации на уровне элемента управления.  
  
 Несмотря на то, что метод защищен и недоступен непосредственно вызывающему объекту, доступ к свойству <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> может осуществляться напрямую вызывающими объектами, и он возвращает значение этого свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.PersonalizationState.IsDirty" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.PersonalizationState.SetDirty" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="webPartManager.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Содержит постоянные данные состояния, которые должны быть загружены.</param>
        <summary>Загружает данные состояния элемента управления, которые были сохранены после предыдущего запроса страницы и должны быть восстановлены в последующем запросе.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A> полезен для восстановления данных свойств, которые должны сохраняться между обратными передачами страницы, даже если свойство <xref:System.Web.UI.Control.EnableViewState%2A> имеет значение `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> не является допустимым <see cref="P:System.Web.UI.PageStatePersister.ControlState" />.</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit&#xA;override this.LoadCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="webPartManager.LoadCustomPersonalizationState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, содержащий данные о состоянии для загрузки.</param>
        <summary>Сохраняет пользовательские данные персонализации, переданные объектами персонализации в элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> для использования в будущем процессе инициализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A> предоставляет сохраненные данные о состоянии в виде объекта <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>. Эти данные в конечном итоге используются для загрузки данных персонализации в элементы управления веб-части и для выполнения других задач инициализации.  
  
> [!NOTE]
>  Этот метод вызывается последовательностью методов, которые начинаются, когда метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A> изначально запрашивает связанный объект <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> для предоставления данных персонализации элементу управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
 Этот метод нельзя вызывать непосредственно из кода. Однако можно напрямую вызвать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, который сам вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A> и возвращает данные персонализации.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики могут переопределить метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> в производном классе <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="MediumPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MediumPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MediumPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MediumPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MediumPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MediumPermissionSet : System.Security.PermissionSet" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Security.PermissionSet" />, допускающий только разрешение <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> и разрешение <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</summary>
        <value>Объект <see cref="T:System.Security.PermissionSet" />, допускающий только разрешение <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> и разрешение <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Security.PermissionSet>, возвращаемый этим свойством, используется во время импорта для десериализации типов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimalPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MinimalPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MinimalPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MinimalPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimalPermissionSet : System.Security.PermissionSet" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Security.PermissionSet" />, допускающий только разрешение <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> и разрешение <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</summary>
        <value>Получает объект <see cref="T:System.Security.PermissionSet" />, допускающий только разрешение <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> и разрешение <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Security.PermissionSet>, возвращаемый этим свойством, используется во время импорта для всех элементов, кроме десериализации типов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveWebPart">
      <MemberSignature Language="C#" Value="public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberSignature Language="F#" Value="abstract member MoveWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; unit&#xA;override this.MoveWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; unit" Usage="webPartManager.MoveWebPart (webPart, zone, zoneIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart">Элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или другой перемещаемый серверный элемент управления.</param>
        <param name="zone">Целевой элемент <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />, в который перемещается элемент <paramref name="webPart" />.</param>
        <param name="zoneIndex">Целое число, указывающее индекс элемента <paramref name="webPart" /> относительно других элементов управления в пределах зоны <paramref name="zone" />.</param>
        <summary>Перемещает объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверный элемент управления из одной зоны <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> в другую или в новую позицию в той же зоне.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> использует метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> для перемещения `webPart` в новое расположение в той же зоне или в другой зоне. Этот метод можно вызвать непосредственно из кода, и он также вызывается, когда пользователь перемещает элемент управления в новую точку с помощью различных параметров в веб-части пользовательском интерфейсе (UI).  
  
 Прежде чем можно будет переместить `webPart`, необходимо выполнить ряд условий, и большинство из них будут отмечены элементами, перечисленными в разделе "исключения" этого раздела. Если `webPart` не содержались в зоне <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>, она не может быть перемещена в зону.  
  
 После выполнения условий выполняется следующая последовательность действий для перемещения `webPart`:  
  
1.  Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>.  
  
2.  `webPart` удаляется из текущей зоны (при необходимости) и добавляется в новую зону или в новую точку в текущей зоне.  
  
3.  Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>.  
  
4.  `zoneIndex` каждого элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> в исходной и целевой зонах сбрасываются в соответствии с перемещенным элементом управления.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> непосредственно из кода, чтобы переместить элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> из одной зоны в другую.  
  
 Пример кода состоит из трех частей:  
  
-   Пользовательский элемент управления для изменения режима экрана.  
  
-   Веб-страница для размещения элементов управления.  
  
-   Пояснения к запуску примера кода.  
  
 Первая часть примера кода — это пользовательский элемент управления для изменения режимов экрана. Исходный код для пользовательского элемента управления можно получить из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Дополнительные сведения о режимах отображения и способах работы пользовательского элемента управления см. [в разделе Пошаговое руководство. изменение режимов отображения на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Вторая часть примера — это веб-страница, которая содержит две зоны, каждая из которых содержит два серверных элемента управления. Когда пользователь нажимает кнопку " **переместить веб-часть** " на странице, код в методе `Button1_Click` перемещает элемент управления из первой зоны в новое положение во второй зоне. Обратите внимание, что код сначала должен вызвать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, чтобы получить объект <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>, который упаковывает элемент управления `list1`. Это необходимо, поскольку для первого параметра метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> требуется элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, тогда как `list1` является серверным элементом управления ASP.NET.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/CS/MoveWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/VB/MoveWebPartVB.aspx#1)]  
  
 После загрузки страницы нажмите кнопку **Move WebPart (переместить веб-часть** ) и обратите внимание, что элемент управления, содержащий ссылки, перемещается в среднюю положение во второй зоне. Это перемещение элемента управления выполняется программно путем вызова метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>. Можно также использовать раскрывающийся список **режим экрана** для переключения страницы в режим конструктора, а в режиме конструктора можно перетаскивать элементы управления в разные зоны или на разные позиции в их зонах. Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> также вызывается элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> для решения таких перемещений, инициированных пользователем.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> не содержится в коллекции <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.  
  
- или - 
 <paramref name="zone" /> не содержится в коллекции <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" /> элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.  
  
- или - 
Зона, на которую ссылается свойство <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Zone" /> элемента управления <paramref name="webPart" /> равна <see langword="null" />. Это означает, что <paramref name="webPart" /> в настоящее время не содержится в зоне.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="webPart" /> или <paramref name="zone" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="zoneIndex" /> меньше нуля.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizeWebPart">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizeWebPart(class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizeWebPart (e As WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizeWebPart(System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs -&gt; unit&#xA;override this.OnAuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs -&gt; unit" Usage="webPartManager.OnAuthorizeWebPart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" /> и вызывает обработчик для этого события, если таковой существует.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> вызывается методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, когда элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> проверяется на наличие авторизации для добавления на страницу. При вызове метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> вызывается событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, и если для события существует метод обработчика, он вызывает обработчик.  
  
 Процесс авторизации <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления является важной веб-частиой функцией. Каждый <xref:System.Web.UI.WebControls.WebParts.WebPart> или серверный элемент управления, добавленный в зону с помощью элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, проходит через процесс авторизации, чтобы определить, можно ли добавить элемент управления. По умолчанию набор элементов управления веб-части не предоставляет никаких критериев фильтрации для предотвращения добавления элементов управления в зону. Но набор элементов управления предоставляет механизмы, необходимые разработчикам для создания собственных критериев фильтрации. С помощью этих механизмов можно создавать сценарии настраиваемой фильтрации. Например, можно создать фильтр таким образом, чтобы, если пользователь входит в роль администратора, некоторые элементы управления добавляются в зону при подготовке страницы, и если пользователь входит в роль пользователя, эти элементы управления не добавляются.  
  
 Механизмы фильтрации элементов управления в процессе авторизации — это свойство <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> для элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, методов <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>, а также события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> в элементе управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
 Для создания сценария фильтрации существует две задачи. Сначала необходимо назначить строки свойству <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> каждого элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, который требуется отфильтровать. Эти строковые значения могут быть произвольными, но они должны содержать критерии, по которым необходимо выполнить фильтрацию. Например, если требуется, чтобы указанный элемент управления был добавлен в зону только в том случае, если пользователь с правами администратора просматривает страницу, то в свойство можно присвоить строковое значение `admin`. Затем можно использовать функцию ASP.NET Roles и добавить всех пользователей сайта к различным ролям, таким как администратор, менеджер и пользователь. При загрузке страницы код фильтрации проверяет, в какой роли находится пользователь, сравнивает его со значением фильтра авторизации на проверяемом элементе управления, и если (например) пользователь входит в роль администратора и вы установили для элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> значение `admin`, можно добавить элемент управления.  
  
 Вторым шагом при создании сценария фильтрации является написание кода для проверки значений <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> свойств в <xref:System.Web.UI.WebControls.WebParts.WebPart>ных элементах управления и определения того, разрешен ли каждый элемент управления перед его добавлением в зону. Существует два варианта размещения этого кода фильтрации. Первый вариант — предпочтительный вариант для разработчиков страниц. Можно создать метод, обрабатывающий событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> непосредственно в коде сценария сервера веб-страниц или в файле разделения кода. Свяжите метод с событием, добавив атрибут `OnAuthorizeWebPart` к тегу для элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> на странице, как показано в следующем образце кода разметки.  
  
```  
<asp:webpartmanager id="manager1" runat="server"   
   OnAuthorizeWebPart="manager1_AuthorizeWebPart" />  
```  
  
 Все, что нужно сделать, — проверить каждый <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления на соответствие критериям фильтрации, а затем, основываясь на результатах, присвоить логическое значение свойству <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> объекта <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs>, чтобы указать, можно ли добавить элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. В коде в разделе "пример" показано, как это сделать.  
  
 Второй способ размещения кода фильтрации заключается в наследовании от класса <xref:System.Web.UI.WebControls.WebParts.WebPartManager> и переопределении метода для проверки условий фильтра. Для этого можно переопределить два метода: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> метод или метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>. Хотя любой из этих методов будет работать, в большинстве случаев предпочтительнее переопределить метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, так как он обеспечивает более программный контроль над всем процессом авторизации, в то время как метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> выполняет только одну конкретную задачу, которая Создайте событие и проверьте наличие обработчика. Пример кода пользовательского <xref:System.Web.UI.WebControls.WebParts.WebPartManager> класса, переопределяющего метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, см. в описании <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> перегрузки метода.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать пользовательский обработчик событий для события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, чтобы обработчик мог предоставить пользовательский код фильтрации для метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>. Этот пример является обычным способом для разработчика страницы, который предоставляет сценарий фильтрации и авторизацию <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, добавляемых на страницу.  
  
 На веб-странице Обратите внимание, что элемент `<asp:webpartmanager>` имеет атрибут `OnAuthorizeWebPart` с именем назначенного ему обработчика событий. Метод проверяет, имеют ли соответствующие свойства <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> значения свойств, равные `admin` и, если да, возвращает `true`, что означает, что они будут разрешены и добавлены на страницу.  
  
> [!NOTE]
>  Обратите внимание, что элементы управления, не имеющие значения, назначенного свойству <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>, также добавляются, поскольку предполагается, что они не являются частью сценария фильтрации. Это будет распространенный подход в сценарии фильтрации: некоторые элементы управления будут отфильтрованы, а другие — нет, так как они предположительно доступны для всех пользователей.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 Поскольку Настройка пользователей в ролях выходит за рамки данного раздела, этот пример кода не проверяет роли пользователей в фильтрации. Однако сценарий фильтрации элементов управления в соответствии с ролями пользователей, скорее всего, будет одним из наиболее распространенных способов применения этой функции фильтрации. Если у вас есть роли на сайте и вы хотите проверить роли пользователей в этом методе для фильтрации элементов управления, метод будет выглядеть следующим образом (а не более простой подход в предыдущем примере кода, который не использует роли).  
  
```vb  
Protected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  
  As Object, ByVal e As WebPartAuthorizationEventArgs)  
  
  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  
    If Roles.IsUserInRole(Page.User.Identity.Name, _  
      e.AuthorizationFilter) Then  
  
      e.IsAuthorized = True  
    Else  
      e.IsAuthorized = False  
    End If  
  End If  
  
End Sub  
```  
  
```csharp  
protected void mgr1_AuthorizeWebPart(object sender,   
  WebPartAuthorizationEventArgs e)  
{  
  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  
  {  
    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  
      e.IsAuthorized = true;  
    else  
      e.IsAuthorized = false;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionsActivated : EventArgs -&gt; unit&#xA;override this.OnConnectionsActivated : EventArgs -&gt; unit" Usage="webPartManager.OnConnectionsActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" /> для указания загрузки страницы и ее элементов управления, а также активации подключений на странице, что означает готовность к началу совместного использования данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> после того, как страница завершила процесс загрузки. Метод предоставляет способ добавления обработчика для события.  
  
 Разработчики страниц могут добавить пользовательский обработчик для события, добавив атрибут `OnConnectionsActivated` к элементу `<asp:webpartmanager>` на странице, а затем присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики могут переопределить метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" /> в производном классе <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivating">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivating (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivating(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivating (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivating(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionsActivating : EventArgs -&gt; unit&#xA;override this.OnConnectionsActivating : EventArgs -&gt; unit" Usage="webPartManager.OnConnectionsActivating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" /> для указания загрузки страницы и ее элементов управления, а также возможности активации подключений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>, которое предоставляет разработчикам механизм для программной настройки процесса активации подключений.  
  
 Разработчики страниц могут добавить пользовательский обработчик для события, добавив атрибут `OnConnectionsActivating` к элементу `<asp:webpartmanager>` на странице, а затем присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики могут переопределить метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" /> в производном классе <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanged(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanged (e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanged(System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="webPartManager.OnDisplayModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />, который содержит данные события, сопоставленные с измененным режимом отображения.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> для указания того, что элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> завершил переключение на веб-странице из одного режима отображения в другой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> в его базовой форме просто вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" /> можно переопределить. Например, после изменения режима отображения может потребоваться изменить какой-либо внешний вид пользовательского интерфейса в зависимости от того, какой режим отображения содержится в свойстве <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs.OldDisplayMode" />. Или может потребоваться скрыть определенное содержимое или отобразить определенный элемент управления.  
  
При переопределении метода следует, как правило, вызвать базовый метод в качестве последнего шага переопределенного метода, чтобы пользовательский код выполнялся в первый раз, а событие вызывается последним, что означает, что изменение режима завершено.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanging(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanging (e As WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanging(System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs -&gt; unit" Usage="webPartManager.OnDisplayModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, который содержит данные события, сопоставленные с изменением режима отображения.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" /> для указания того, что элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> находится в процессе переключения из одного режима отображения в другой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> в его базовой форме просто вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" /> можно переопределить. Например, при изменении режима экрана может потребоваться проверить новый режим экрана (с помощью свойства <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode" />) и изменить что-либо в пользовательском интерфейсе в зависимости от того, что будет новым режимом экрана. При наличии пользовательского режима отображения может потребоваться сделать некоторые элементы управления видимыми, если пользовательский режим будет новым режимом отображения.  
  
При переопределении этого метода следует как обычно вызвать базовый метод в качестве первого шага переопределенного метода, чтобы событие вызывалось, чтобы показать, что режим отображения начинает изменяться. Затем пользовательский код может вносить изменения в пользовательский интерфейс перед отображением нового режима отображения.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="webPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.Control.Init" />, которое является первым событием в жизненном цикле элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A> вызывает базовый метод, который вызывает событие <xref:System.Web.UI.Control.Init> для элемента управления, а затем выполняет несколько подготовительных действий, таких как обеспечение наличия только одного экземпляра элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> на странице и загрузка данных персонализации.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">На странице существует другой элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /></exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="webPartManager.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.Control.PreRender" />, которое происходит перед визуализацией элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> на веб-странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender%2A> вызывает базовый метод, который вызывает событие <xref:System.Web.UI.Control.PreRender> для элемента управления, а затем регистрирует несколько клиентских скриптов, необходимых для страниц, содержащих элементы управления веб-части.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanged(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanged (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanged(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnSelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnSelectedWebPartChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />, которое происходит после выбора элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или отмены выбора этого элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>, которое обычно представляет собой момент времени, когда разработчик может захотеть изменить внешний вид пользовательского интерфейса. Например, при выборе нового элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> набор элементов управления веб-части изменяет отрисовку только что выбранного элемента управления. После очистки выделения элемента управления отрисовка возвращается в нормальный режим.  
  
 Когда пользователь выбирает определенный элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> для редактирования, вызывается метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>. Когда пользователь заканчивает редактирование элемента управления и закрывает его, в результате чего выделение элемента управления удаляется, метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> вызывается снова.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Существует несколько параметров, связанных с событием <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />, которые позволяют разработчикам настраивать отрисовку, выполняемую после изменения выбранного элемента управления. В декларативном коде в элементе <see langword="&lt;asp:webpartmanager&gt;" /> можно задать атрибут <see langword="OnSelectedWebPartChanged" /> и присвоить ему имя пользовательского метода. В пользовательском методе можно изменить отрисовку выбранных элементов управления при возникновении события. Другим вариантом является наследование от класса <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> и переопределение метода. Третьим вариантом является Настройка отрисовки на уровне зоны. Например, можно наследовать от класса <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> и переопределить его метод <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />, чтобы настроить отрисовку элементов управления, выбранных и снятых в процессе редактирования.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanging(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanging (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanging(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnSelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnSelectedWebPartChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />, которое происходит во время изменения текущего выбора элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>, которое происходит в процессе изменения выбранного элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>.  
  
 Элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> использует этот метод и связанное с ним событие, чтобы предоставить возможность отмены процесса, в котором изменяется выбранный элемент управления. Например, метод вызывается в методе <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, а также в методе <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, чтобы предоставить способ отмены процесса. Если пользователь щелкает команду отмены редактируемого элемента управления, он больше не выбирается и изменения не сохраняются, так как метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> позволяет отменить изменения.  
  
> [!NOTE]
>  Метод аналогично вызывается во время методов, которые начинают и завершают процесс подключения элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> к другому элементу управления, чтобы разрешить отмену этого процесса.  
  
 Разработчики страниц могут создать пользовательский обработчик для события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>, добавив атрибут `OnSelectedWebPartChanging` к элементу `<asp:webpartmanager>` в декларативной разметке страницы и назначив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="webPartManager.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные события, сопоставленные с удалением элемента управления.</param>
        <summary>Создает базовое событие <see cref="E:System.Web.UI.Control.Unload" /> и удаляет экземпляр <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> с веб-страницы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdded(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdded (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdded(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />, которое происходит после добавления на страницу элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> вызывается в процессе добавления элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> (или другого серверного элемента управления, добавленного в зону <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>) на страницу.  
  
 Разработчики страниц могут создать пользовательский обработчик для события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>, добавив атрибут `OnWebPartAdded` к элементу `<asp:webpartmanager>` и присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdding">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdding(class System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdding (e As WebPartAddingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdding(System::Web::UI::WebControls::WebParts::WebPartAddingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs -&gt; unit&#xA;override this.OnWebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs -&gt; unit" Usage="webPartManager.OnWebPartAdding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />, которое происходит во время процесса добавления элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (или серверного, или пользовательского элемента управления) в зону <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>, чтобы указать, что элемент управления находится в процессе добавления. Метод также предоставляет возможность отмены добавления процесса. Если элемент управления успешно добавлен, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> событие выполняется следующим образом.  
  
 Разработчики страниц могут предоставить пользовательский обработчик для связанного события, добавив атрибут `OnWebPartAdding` в элемент `<asp:webpartmanager>` на веб-странице, а затем присвоить атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики, создающие производные классы <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, могут переопределять метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" /> для настройки обработки событий.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosed(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosed (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosed(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" /> для оповещение об удалении элемента управления со страницы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>, чтобы указать, что элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> (или другой сервер или пользовательский элемент управления) был успешно закрыт на странице.  
  
 Чтобы закрыть <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления, можно удалить его со страницы, чтобы он не отображался, а также поместить его в специальный объект, называемый каталогом страниц. Каталог страниц, который соответствует элементу управления <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>, хранит ссылки на закрытые элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart> для каждой страницы. Если элемент управления <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> объявлен на странице в зоне <xref:System.Web.UI.WebControls.WebParts.CatalogZone>, пользователи могут переключить страницу в режим просмотра каталога и добавить обратно на страницу все ранее закрытые элементы управления.  
  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> предоставляет разработчикам возможность создавать пользовательский обработчик для события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>. Разработчики страниц могут добавить пользовательский обработчик для события, добавив атрибут `OnWebPartClosed` к элементу `<asp:webpartmanager>` на странице, а затем присвоив атрибуту имя пользовательского метода. Одной из полезных задач, которую может выполнить разработчик в этом методе, является отображение заполнителя вместо закрытого элемента управления с помощью подсказки, сообщающей пользователям о том, как добавить элемент управления обратно на страницу.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosing(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosing (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosing(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnWebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />, которое происходит во время удаления со страницы серверного элемента управления или объекта <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, чтобы указать, что элемент управления находится в процессе закрытия или удаления со страницы. Метод также предоставляет возможность отмены закрывающего процесса. Если элемент управления успешно удален со страницы, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> событие выполняется следующим образом.  
  
 Разработчики страниц могут предоставить пользовательский обработчик для связанного события, добавив атрибут `OnWebPartClosing` в элемент `<asp:webpartmanager>` на веб-странице, а затем присвоить атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики, создающие производные классы <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, могут переопределять метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" /> для настройки обработки событий.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleted(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleted (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleted(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />, которое происходит после окончательного удаления со страницы элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A> вызывается в процессе удаления элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> (или другого серверного элемента управления, добавленного в зону <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>) со страницы.  
  
 Разработчики страниц могут создать пользовательский обработчик для события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>, добавив атрибут `OnWebPartDeleted` к элементу `<asp:webpartmanager>` и присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleting(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleting (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleting(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnWebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />, которое указывает, что динамический элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (или серверный, или пользовательский элемент управления, содержащийся в зоне <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />) находится в процессе удаления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Только динамические элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart> могут быть удалены, и при удалении элемента управления экземпляр будет окончательно удален из страницы и не может быть восстановлен. Динамические элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart> — это те, которые добавляются программно или из каталога веб-части, а не статические элементы управления, объявленные в разметке веб-страницы.  
  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>, чтобы указать, что элемент управления окончательно удаляется из своей зоны. Метод также предоставляет возможность отмены процесса удаления. Если элемент управления успешно удален со страницы, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> событие выполняется следующим образом.  
  
 Разработчики страниц могут предоставить пользовательский обработчик для связанного события, добавив атрибут `OnWebPartDeleting` в элемент `<asp:webpartmanager>` на веб-странице, а затем присвоить атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики, создающие производные классы <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, могут переопределять метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" /> для настройки обработки событий.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoved(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoved (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoved(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartMoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />, которое происходит после перемещения элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> в другое место на странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> в самом конце метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>, что гарантирует, что процесс перемещения элемента управления завершится до выполнения любого кода в обработчике событий.  
  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> возникает, когда элемент управления перемещается в пределах текущей зоны или в другую зону и не имеет значения, выполняется ли перемещение программно или путем перетаскивания элемента управления пользователем.  
  
 Разработчики страниц могут создать пользовательский обработчик для события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>, добавив атрибут `OnWebPartMoved` к элементу `<asp:webpartmanager>` и присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoving(class System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoving (e As WebPartMovingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoving(System::Web::UI::WebControls::WebParts::WebPartMovingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs -&gt; unit&#xA;override this.OnWebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs -&gt; unit" Usage="webPartManager.OnWebPartMoving e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />, которое указывает, что <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверный, или пользовательский элемент управления в зоне <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> находится в процессе перемещения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>, которое происходит при перемещении <xref:System.Web.UI.WebControls.WebParts.WebPart> или другого серверного элемента управления в пределах зоны или в другую зону. Метод также предоставляет возможность отмены процесса перемещения. Если перемещение успешно завершено, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> событие выполняется следующим образом.  
  
 Разработчики страниц могут предоставить пользовательский обработчик для связанного события, добавив атрибут `OnWebPartMoving` в элемент `<asp:webpartmanager>` на веб-странице, а затем присвоить атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики, создающие производные классы <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, могут переопределять метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" /> для настройки обработки событий.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit&#xA;override this.OnWebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsConnected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />, которое происходит после установки подключения между элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> вызывает соответствующее событие в самом конце метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, что гарантирует, что шаги, необходимые для соединения двух элементов управления, выполняются до выполнения любого кода в обработчике событий.  
  
 Метод обеспечивает программный контроль над процессом создания соединений, а связанное событие — это удобное место для обновления пользовательского интерфейса или уведомления пользователя о том, что установлено соединение.  
  
 Разработчики страниц могут создать пользовательский обработчик для события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>, добавив атрибут `OnWebPartsConnected` к элементу `<asp:webpartmanager>` и присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit&#xA;override this.OnWebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsConnecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />, которое происходит во время установки подключения между двумя <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверными, или пользовательскими элементами управления, содержащимися в зоне <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>, которое происходит, когда два элемента управления пытаются установить соединение. Метод предоставляет возможность отменить попытку подключения. Если соединение установлено успешно, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> событие выполняется следующим образом.  
  
 Разработчики страниц могут предоставить пользовательский обработчик для связанного события, добавив атрибут `OnWebPartsConnecting` в элемент `<asp:webpartmanager>` на веб-странице, а затем присвоить атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики, создающие производные классы <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, могут переопределять метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" /> для настройки обработки событий.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit&#xA;override this.OnWebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsDisconnected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />, которое происходит после завершения подключения между элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> вызывает соответствующее событие в самом конце метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, который выполняет процесс завершения соединения между двумя элементами управления.  
  
 Метод обеспечивает программный контроль над процессом завершения соединения, чтобы разработчики могли информировать пользователя, вносить изменения в пользовательский интерфейс или вносить другие изменения в приложение.  
  
 Разработчики страниц могут создать пользовательский обработчик для события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>, добавив атрибут `OnWebPartsDisconnected` к элементу `<asp:webpartmanager>` и присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit&#xA;override this.OnWebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsDisconnecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />, которое указывает, что два объекта <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверных, или пользовательских элементов управления в зоне <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> находятся в процессе завершения подключения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>, которое происходит, когда два элемента управления завершают соединение. Метод позволяет отменить процесс отключения. Если подключение успешно удалено, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> событие выполняется следующим образом.  
  
 Разработчики страниц могут предоставить пользовательский обработчик для связанного события, добавив атрибут `OnWebPartsDisconnecting` в элемент `<asp:webpartmanager>` на веб-странице, а затем присвоить атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики, создающие производные классы <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, могут переопределять метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" /> для настройки обработки событий.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Personalization">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Personalization As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ Personalization { System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Personalization : System.Web.UI.WebControls.WebParts.WebPartPersonalization" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на объект, который содержит данные персонализации для веб-страницы.</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />, содержащий данные персонализации.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> предоставляет способ доступа к объекту <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>, связанному со страницей через элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. С помощью этого свойства можно получить доступ к различным элементам объекта персонализации. Например, можно использовать метод <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> для переключения области персонализации страницы с общей на область пользователя или наоборот. Вы также можете узнать текущую область персонализации на странице, является ли персонализация даже включенной на странице, какой поставщик используется для данных персонализации, и многое другое.  
  
 Обратите внимание, что данные, на которые ссылается свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>, — это только данные персонализации на уровне страницы, которые отписываются элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Данные персонализации, относящиеся к элементам управления, такие как значения настраиваемых свойств элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, не являются частью свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>.  
  
> [!NOTE]
>  Дополнительные сведения о веб-части персонализации см. в разделе [Обзор персонализации веб-части](https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)).  
  
   
  
## Examples  
 В следующем примере кода показано, как программно использовать свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>.  
  
 Следующая веб-страница позволяет пользователю перейти в режим правки для изменения определенных аспектов элемента управления <xref:System.Web.UI.WebControls.Calendar>. Кнопка **Переключить область** переключает страницу в область пользователь или Общая Настройка персонализации. Кнопки **режим изменения** и **режим просмотра** переключают страницу в соответствующий режим экрана. Обратите внимание, что в разделе тега `<script>` файла два метода, обрабатывающих события, используют свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> для доступа к полезным членам базового объекта. В частности, эти методы используют метод <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> и свойство <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> объекта, доступ к которому осуществляется через свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Personalization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/CS/wpmgrPersonalizationCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Personalization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/VB/wpmgrPersonalizationVB.aspx#1)]  
  
 Для выполнения примера кода необходимо также предоставить пользователю или пользователям возможность персонализировать страницы в общей области. Добавьте запись в файл Web. config в разделе `<system.web>`, который выглядит как приведенная ниже разметка.  
  
```  
<webParts>  
  <personalization>  
    <authorization>  
      <allow  
        users="[Replace the text and brackets with a user name or   
           group.]"  
        roles="admin"   
        verbs="enterSharedScope"  />  
    </authorization>  
  </personalization>  
</webParts>   
```  
  
 После загрузки страницы в браузере нажмите кнопку **Переключить область** и обратите внимание, что теперь эта страница указывает на то, что область является общей. Щелкните **режим правки** , чтобы изменить режим отображения, выберите меню команды в видимом элементе управления и в меню выберите пункт **изменить** . Обратите внимание, что отображается пользовательский интерфейс для обоих элементов управления редактирования. Теперь щелкните **режим просмотра** , чтобы вернуться к нормальному просмотру. Если на странице указано, что она находится в общей области, нажмите кнопку **Переключить область** еще раз, чтобы убедиться, что страница находится в области пользователя. Затем выполните те же действия, чтобы снова изменить элемент управления, но обратите внимание, что теперь в пользовательском интерфейсе редактирования элемент управления <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> не отображается. Это связано с тем, что этот элемент управления работает только в том случае, если страница находится в общей области персонализации.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Общие сведения о персонализации веб-части</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScript">
      <MemberSignature Language="C#" Value="protected virtual void RegisterClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RegisterClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RegisterClientScript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RegisterClientScript();" />
      <MemberSignature Language="F#" Value="abstract member RegisterClientScript : unit -&gt; unit&#xA;override this.RegisterClientScript : unit -&gt; unit" Usage="webPartManager.RegisterClientScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Разрешает элементу управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> запустить скрипт на стороне клиента, который используется для различных функциональных возможностей персонализации, таких как перетаскивание элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> на веб-странице.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webPartManager.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий содержимое элемента управления, для записи на страницу.</param>
        <summary>Переопределен, чтобы не дать элементу управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> отрисовать какое-либо содержимое.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="webPartManager.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет данные состояния для элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, так что данные могут быть восстановлены при будущих запросах веб-страницы, содержащей элемент управления.</summary>
        <returns>Объект <see cref="T:System.Object" />, который должен содержать сохраненные данные состояния элемента управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A> сохраняет данные о состоянии для свойств, которые должны сохраняться в обратных передачах страниц, даже если свойство <xref:System.Web.UI.Control.EnableViewState%2A> имеет значение `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SaveCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SaveCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SaveCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member SaveCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit&#xA;override this.SaveCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="webPartManager.SaveCustomPersonalizationState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, содержащий данные о состоянии для загрузки.</param>
        <summary>Сохраняет данные состояния пользовательской персонализации, поддерживаемые элементом управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, чтобы эти данные могли быть повторно загружены при повторной загрузке страницы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A> является критически важным в процессе персонализации, так как позволяет сохранять персонализированные параметры пользователя для будущих сеансов браузера и посещений страниц. Метод сохраняет пользовательские данные о состоянии персонализации, включая следующие элементы: динамические <xref:System.Web.UI.WebControls.WebParts.WebPart> или серверные элементы управления, добавленные на страницу или удаленные со страницы. элементы управления, которые были перемещены на страницу; и динамические подключения, которые были созданы или удалены.  
  
 Этот метод нельзя вызывать непосредственно из кода. Однако можно вызвать метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>, который сам вызывает этот метод для сохранения данных персонализации.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики могут переопределить этот метод в производном классе <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, чтобы настроить процесс сохранения данных персонализации.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedWebPart As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ SelectedWebPart { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPart : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или другой серверный элемент управления, который в настоящее время выбран для редактирования или для создания подключения к другому элементу управления.</summary>
        <value>Элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, который выбран в настоящее время для редактирования или создания подключения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> возвращает ссылку на <xref:System.Web.UI.WebControls.WebParts.WebPart> или другой серверный элемент управления, выбранный в данный момент для редактирования, или для создания соединения с другим элементом управления.  
  
 Элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> предоставляет несколько полезных методов и событий для обработки процесса выбора элемента управления. Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> возникает сразу после выбора элемента управления, но перед внесением любых изменений. Чтобы выполнить некоторые действия с элементом управления после его выбора, переопределите метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>. Например, может потребоваться изменить внешний вид элемента управления, который выбран, но еще не изменился, чтобы подчеркнуть визуальный выбор элемента управления.  
  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> возникает сразу после изменения выбранного элемента управления. Чтобы выполнить некоторые действия с элементом управления после его изменения, переопределите метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanged As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ SelectedWebPartChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.SelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после изменение и перемещения выбранного элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> в другой элемент управления на веб-странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие можно использовать в сочетании с методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> для изменения пользовательского интерфейса выбранного элемента управления. Например, если пользователь переключает страницу в режим конструктора (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>), а затем выбирает элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> с намерением перетаскивать его в новую точку, обычно изменяется отрисовка выбранного элемента управления, например изменение цвета его границы или ба ккграунд, пока он выбран.  
  
> [!NOTE]
>  Дополнительные сведения о потреблении событий см. в разделе [как использовать события в приложении веб-форм](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanging As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ SelectedWebPartChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.SelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит во время изменения текущего выбора на странице элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверного элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие можно использовать в сочетании с методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>. Разработчики страниц могут создать обработчик событий в своем коде, добавив атрибут `OnSelectedWebPartChanging` к элементу `<asp:webpartmanager>` на странице и установив значение атрибута в имя пользовательского метода, который будет обработано событие.  
  
 Это событие возникает в процессе начала или завершения соединения между элементами управления, а также при запуске и завершении редактирования элемента управления. Дополнительные сведения см. в описании метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>.  
  
 Как правило, когда событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> возникает в результате действия пользователя, которое изменяет выбранный элемент управления, событие может быть отменено. Однако существует сценарий, в котором событие не может быть отменено. Если элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartZone> удаляется, все элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые он содержит, должны быть закрыты, в противном случае они будут потеряны. В этом случае элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> закрывает элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, а не пользователя и должен определить, какой элемент управления выбран в данный момент, и когда нужно изменить выбор без каких-либо помех, чтобы он мог завершить процесс очистки всех элементы управления. Таким образом, при проектировании метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> не может быть отменен в этом сценарии. Сведения о связанном событии, которое можно отменить, см. в описании события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="protected void SetPersonalizationDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPersonalizationDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPersonalizationDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPersonalizationDirty();" />
      <MemberSignature Language="F#" Value="member this.SetPersonalizationDirty : unit -&gt; unit" Usage="webPartManager.SetPersonalizationDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Задает флаг, указывающий, что пользовательские данные персонализации для элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> были изменены.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A> задает флаг, который в конечном итоге приводит к тому, что компоненты персонализации в наборе элементов управления веб-части сохраняют обновленные данные персонализации. Дополнительные сведения о сценариях, которые могут вызвать изменения в данных персонализации, отслеживании с помощью элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, см. в описании свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>.  
  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A> не может быть вызван непосредственно из кода и не может быть переопределен, так как он используется внутренне набором элементов управления веб-части как часть функции персонализации веб-части.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Метод может быть вызван производным классом <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />. Это было бы полезно, если необходимо настроить компоненты персонализации набора элементов управления веб-части и, таким образом, управлять процессом установки флагов для данных персонализации.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedWebPart">
      <MemberSignature Language="C#" Value="protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetSelectedWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetSelectedWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.SetSelectedWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.SetSelectedWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Выбранный объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверный элемент управления.</param>
        <summary>Задает значение свойства <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> равным выбранному в настоящий момент <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверному элементу управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A> вызывается во время процессов, которые начинают или завершают редактирование элемента управления, указанного параметром `webPart`, и те, которые начинают или завершают соединение, включающее `webPart`.  
  
 В начале процесса изменения и подключения `webPart` является элементом управления, который был выбран для изменения или для ввода соединения.  
  
 В конце процесса изменения и подключения `null` передается методу <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A>, что приводит к большему выделению выбранного элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает пустую строку (""), чтобы к элементу управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> можно было применить обложку.</summary>
        <value>Пустая строка, которая препятствует назначению обложки для элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> переопределяет унаследованное свойство <xref:System.Web.UI.Control.SkinID%2A?displayProperty=nameWithType>, чтобы предотвратить использование обложек элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, который является невидимым элементом управления. Реализация свойства предотвращает присваивание обложки, всегда возвращая пустую строку из метода доступа `get` и всегда создает исключение, если при попытке задать значение в методе доступа `set`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Предпринята попытка присвоить значение свойству.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на коллекцию всех объектов <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> на веб-странице, которые определены как статические подключения.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" />, которая содержит все статические подключения на странице.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> используется элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> для трассировки всех статических соединений на странице и управления ими. Статическое соединение, в отличие от динамического соединения, не требуется добавлять на страницу при каждом отображении страницы.  
  
 Коллекция, на которую ссылается это свойство, содержит все статические соединения, существующие на странице, независимо от того, созданы они программно или заданы с помощью элемента `<asp:webpartconnection>` в разметке страницы.  
  
   
  
## Examples  
 В следующем примере кода показано программное использование свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>.  
  
 Пример кода состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на веб-части странице.  
  
-   Файл исходного кода, содержащий два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> и настраиваемый интерфейс.  
  
-   Веб-страница, содержащая два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые могут быть подключены, и элемент `<asp:webpartmanager>`.  
  
-   Описание работы примера в браузере.  
  
 Следующий код содержит только часть веб-страницы примера. Кроме того, необходимо получить первые две части примера — пользовательский элемент управления и исходный код для пользовательских элементов управления и интерфейса — из раздела Пример в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. В этом разделе также объясняются варианты компиляции элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>.  
  
 Третья часть примера кода — веб-страница. Декларативная разметка страницы содержит директивы `Register` как для пользовательского элемента управления, так и для пользовательских элементов управления. Существует элемент `<asp:webpartmanager>`, элемент `<asp:webpartzone>` для хранения пользовательских элементов управления и элемент `<asp:connectionszone>`. Обратите внимание, что в методе `Page_Load` код проверяет, существует ли уже соединение, и, если нет, определяет поставщик, потребитель и соответствующие точки соединения, а затем добавляет новое соединение в набор статических соединений, на которые ссылается @no__t Свойство _1_.<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 После загрузки веб-страницы в браузере щелкните раскрывающийся список **режим экрана** и выберите **подключить** , чтобы переключить страницу в режим подключения. Режим подключения использует элемент `<asp:connectionszone>`, позволяющий создавать соединения между элементами управления. В режиме подключения щелкните стрелку вниз в заголовке окна элемента управления " **почтовый индекс** ", чтобы активировать его меню команд, а затем нажмите кнопку **подключить**. После того как появится пользовательский интерфейс подключения, обратите внимание, что соединение уже создано кодом, содержащимся в методе `Page_Load`. Если вернуться на эту страницу в более позднем сеансе браузера, это статическое соединение уже будет установлено и его не нужно будет создавать заново при каждой загрузке страницы.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SupportedDisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedDisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ SupportedDisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedDisplayModes : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает доступную только для чтения коллекцию всех режимов отображения, которые доступны на определенной веб-странице.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" />, которая содержит набор объектов <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />, доступных на определенной веб-странице.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> содержит только режимы отображения, фактически доступные на странице, с учетом типов элементов управления зоны, имеющихся на странице.  
  
> [!NOTE]
>  Режимы отображения могут быть отключены, и когда режим отображения отключен, он не добавляется в коллекцию <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, даже если на странице имеется соответствующий тип зоны, поддерживающей этот режим отображения.  
  
 Режим просмотра и режим конструктора всегда поддерживаются. Режимы экрана, которые могут различаться, — это режимы редактирования, каталога и подключения. Каждый из этих режимов экрана связан с определенным типом <xref:System.Web.UI.WebControls.WebParts.ToolZone> управления. Это наличие специально типизированной зоны на веб-странице, которая приводит к добавлению определенного режима экрана в коллекцию, на которую ссылается свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>. Например, если веб-страница содержит зону <xref:System.Web.UI.WebControls.WebParts.EditorZone>, но не является зоной <xref:System.Web.UI.WebControls.WebParts.CatalogZone>, то режим редактирования режима просмотра является одним из поддерживаемых режимов на этой странице, но режим просмотра каталога не поддерживается.  
  
> [!NOTE]
>  Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> отличается от свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, которое ссылается на коллекцию, содержащую все режимы интерфейса, доступные для текущего элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, даже те, которые не поддерживаются на конкретной странице.  
  
   
  
## Examples  
 В следующем примере кода показано программное использование свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>. Код использует это свойство для заполнения списка только режимами экрана, доступными на текущей веб-странице.  
  
 На этой странице доступно три поддерживаемых режима экрана: обзор, проектирование и редактирование. Первые два доступны всегда, а режим редактирования доступен в этом примере кода, так как страница содержит элемент управления <xref:System.Web.UI.WebControls.WebParts.EditorZone>. Режимы отображения каталога и подключения не отображаются, так как их соответствующие зоны не находятся на этой странице.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/CS/wpmgrSuppDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/VB/wpmgrSuppDisplayModesvb.aspx#1)]  
  
 После загрузки страницы в браузере можно использовать раскрывающийся список для переключения страницы из режима просмотра в режим конструктора, а затем в режим редактирования. В режиме редактирования можно щелкнуть раскрывающееся меню команд в заголовке одного из элементов управления сервера и выбрать **изменить** , чтобы изменить элемент управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">веб-части режимах просмотра страницы</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsDirty As Boolean Implements IPersonalizable.IsDirty" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::WebParts::IPersonalizable::IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, которое указывает, были ли изменены на веб-страницы данные состояния персонализации, управляемые элементом управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <value>Логическое значение, которое указывает, были ли изменены данные состояния персонализации.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> предоставляет вызывающим объектам возможность определить, изменились ли данные состояния персонализации, управляемые <xref:System.Web.UI.WebControls.WebParts.WebPartManager>ным элементом управления. Когда пользователь настраивает сведения на уровне страницы, например, изменяя макет страницы, создавая или удаляя подключения, а также добавляя или удаляя элементы управления, данные персонализации, управляемые <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элементом управления, меняются. Это сквозной метод, возвращающий вызывающему объекту значение защищенного <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> свойства, доступ к которому через вызывающие объекты невозможен напрямую.  
  
> [!NOTE]
>  Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> не указывает, были ли изменены настраиваемые значения свойств или отдельные свойства, влияющие на внешний вид отдельных элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Персонализация на уровне элементов управления контролируется отдельно для каждого элемента управления. Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> указывает, изменились ли данные персонализации на уровне страницы и управляется элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>.  
  
 В следующем списке описаны некоторые распространенные экземпляры персонализации, которые приводят к тому, что свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> возвращает значение `true`, указывающее на то, что элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> имеет некоторые измененные данные персонализации:  
  
-   Закрытие статического элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> (или сервера или пользовательского элемента управления) на странице.  
  
-   Восстановление закрытого статического элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> из каталога страниц обратно на страницу.  
  
-   Перемещение любого элемента управления в своей зоне или в другую зону.  
  
-   Добавление элемента управления из каталога <xref:System.Web.UI.WebControls.WebParts.WebPart> или серверных элементов управления или программным путем к добавлению элемента управления.  
  
-   Создание соединения между двумя <xref:System.Web.UI.WebControls.WebParts.WebPart> элементами управления, либо программно, либо с помощью пользовательского интерфейса соединения.  
  
-   Удаление соединения между двумя элементами управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, либо программно, либо с помощью пользовательского интерфейса подключения.  
  
 Чтобы получить доступ к этому значению свойства, необходимо привести экземпляр элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> к интерфейсу <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>. Затем можно прочитать значение свойства <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано простое использование свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>, чтобы указать некоторые общие экземпляры персонализации страницы, которые приводят к изменению данных персонализации <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления.  
  
 Пример кода состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на странице, содержащей элементы управления веб-части.  
  
-   Исходный файл, содержащий код для двух пользовательских элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые могут быть подключены, и интерфейсом.  
  
-   Веб-страница, на которой размещены все элементы управления.  
  
-   Описание работы примера кода.  
  
 Первая часть примера кода — это пользовательский элемент управления для изменения режимов экрана. Исходный код для пользовательского элемента управления можно получить из раздела "пример" в разделе Общие сведения о классе <xref:System.Web.UI.WebControls.WebParts.WebPartManager>. Сведения о режимах отображения и способах работы пользовательского элемента управления см. [в разделе Пошаговое руководство. изменение режима отображения на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Второй частью примера является исходный файл с пользовательскими элементами управления и интерфейсом. Обратите внимание, что интерфейс `IZipCode` предоставляет один метод, и этот метод, реализованный в пользовательском элементе управления `ZipCodeWebPart`, служит методом обратного вызова, чтобы `ZipCodeWebPart` действовать в качестве поставщика в сценарии подключения. Другой элемент управления, `WeatherWebPart`, выступает в качестве элемента управления потребителя в соединении; Он может использовать определенный интерфейс, предоставляемый `ZipCodeWebPart`. В реальном приложении `WeatherWebPart` может использовать личное значение почтового индекса от поставщика, а затем предоставлять пользователям графические сведения о погоде.  
  
 Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере кода используется динамическая компиляция. Поэтому обратите внимание, что директива `Register` для этого компонента в верхней части веб-страницы содержит только атрибуты `TagPrefix` и `Namespace` без атрибута `Assembly`. Пошаговое руководство, в котором показано, как выполнить компиляцию, см. в разделе [Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/ZipCodeComponent.vb#2)]  
  
 Третья часть примера кода — веб-страница. Обратите внимание, что он содержит две <xref:System.Web.UI.WebControls.WebParts.WebPartZone> зоны, первая из которых содержит два пользовательских элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Существует также <xref:System.Web.UI.WebControls.WebParts.CatalogZone>ная зона, которая содержит стандартный элемент управления <xref:System.Web.UI.WebControls.Calendar>, который пользователи могут добавлять на страницу. Элемент `<asp:connectionszone>` предоставляет пользовательский интерфейс подключения, позволяющий пользователям создавать соединения между элементами управления. В методе `Page_PreRender` Обратите внимание, что он проверяет, изменились ли данные персонализации, и обновляет текст `Label1`.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/wpmgrIsDirtyCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/wpmgrIsDirtyVB.aspx#1)]  
  
 После загрузки страницы в браузере попробуйте создать некоторые сценарии, перечисленные в подразделе "Примечания" этого раздела, которые будут изменять данные персонализации. При внесении различных изменений, когда изменение включает один из сценариев персонализации, отводимых элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, текст элемента управления `Label1` отображается, чтобы указать, что данные персонализации изменились. Например, с их помощью можно выполнять следующее.  
  
-   Создайте подключение между элементами управления, нажав кнопку **подключить элементы управления WebPart** .  
  
-   Используйте раскрывающийся список **режим экрана** , чтобы переключить страницу в режим каталога и добавить элемент управления " **Календарь** " во вторую зону <xref:System.Web.UI.WebControls.WebParts.WebPartZone>.  
  
-   Снова перейдите в режим просмотра, щелкните меню команд (отображается с символом стрелки в заголовке окна) для элемента управления " **Календарь** " и нажмите кнопку **Закрыть** , чтобы закрыть его и добавить в каталог страниц.  
  
-   Верните страницу в режим каталога и добавьте элемент управления " **Мой календарь** " обратно на страницу.  
  
-   Используйте элемент управления " **режим экрана** ", чтобы переключить страницу в режим конструктора и изменить расположение элементов управления, перетащив одну или несколько из них в другую зону или в другую точку в той же зоне.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Load">
      <MemberSignature Language="C#" Value="void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Load (state As PersonalizationDictionary) Implements IPersonalizable.Load" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Load;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, содержащий данные о состоянии для загрузки.</param>
        <summary>Возвращает сохраненные данные о состоянии пользовательской персонализации, которые требуется загрузить в элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод является реализацией метода <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=nameWithType>, который предоставляет элементу управления веб-части возможность прямого доступа к защищенному методу <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=nameWithType>. При вызове этого метода он сохраняет пользовательские персонализированные данные, которые управляются элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> и ранее сохранялись в хранилище постоянных данных для дальнейшего использования в процессе инициализации.  
  
> [!NOTE]
>  В большинстве случаев код разработчика страницы и элемента управления не обязан вызывать этот метод, так как он главным образом используется набором элементов управления веб-части в качестве механизма для получения данных персонализации.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Один из сценариев, в котором разработчики используют этот метод, заключается в том, что он разрабатывает пользовательскую платформу персонализации для использования вместо той, которая предоставляется набором элементов управления веб-части. В таких случаях разработчики могут наследовать от класса <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> и переопределять метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" /> для возврата пользовательской реализации объекта <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />. Пользовательский объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> вызовет реализацию метода <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> в нужное время для загрузки пользовательских данных персонализации.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Save">
      <MemberSignature Language="C#" Value="void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Save (state As PersonalizationDictionary) Implements IPersonalizable.Save" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Save;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Словарь <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, который содержит сохраняемые данные о состоянии.</param>
        <summary>Сохраняет пользовательские данные состояния персонализации, которые управляются элементом управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> является реализацией метода <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=nameWithType>, который предоставляет элементу управления веб-части прямой доступ к защищенному методу <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=nameWithType>. При вызове этого метода он сохраняет все персонализированные данные, которыми управляет элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, в постоянное хранилище данных, настроенное для веб-части приложения.  
  
> [!NOTE]
>  В большинстве случаев код разработчика страницы и элемента управления не обязан вызывать этот метод, так как он главным образом используется набором элементов управления веб-части в качестве механизма для сохранения данных персонализации.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Один из сценариев, в котором разработчики будут работать с этим методом, — это разработка пользовательской платформы персонализации вместо той, которая предоставляется набором элементов управления веб-части. В таких случаях разработчики могут наследовать от класса <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> и переопределять метод <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" /> для возврата пользовательской реализации объекта <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />. Пользовательский объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> вызовет реализацию метода <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> в нужное время для сохранения пользовательских данных персонализации.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webPartManager.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Применяет данные состояния персонализации к элементу управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> и вызывает базовый метод для разрешения отслеживания изменений данных состояния просмотра для этого элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Изменения данных состояния представления хранятся в объекте <xref:System.Web.UI.StateBag> и доступны через свойство <xref:System.Web.UI.Control.ViewState%2A> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, которое делает видимыми дочерними элементы управления.</summary>
        <value>Логическое значение, которое указывает, являются ли видимыми элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> и его дочерние элементы управления. Значение <see langword="true" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемент управления переопределяет свойство базового <xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType>, чтобы всегда возвращать значение `true` для свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>. Несмотря на то, что сам элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> невидим, для свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> необходимо задать значение `true`, чтобы все его дочерние элементы управления были видимы по умолчанию.  
  
 Если вы попытаетесь задать значение свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>, оно всегда выдает ошибку, так как элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> переопределил поведение базового свойства и не позволяет присваивать свойству какое-либо значение.  
  
 Это свойство не может быть привязано в визуальных конструкторах, но может быть привязано во время выполнения. Для получения дополнительной информации см. <xref:System.ComponentModel.BindableAttribute>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Предпринята попытка присвоить значение свойству.</exception>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdded As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartAdded;" />
      <MemberSignature Language="F#" Value="member this.WebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после добавления динамического или другого элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> в зону <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> для указания успешного добавления элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> полезно для указания того, что динамический элемент управления (элемент управления, добавленный программным способом, в отличие от объявления в разметке страницы) был успешно добавлен в зону. В сочетании с методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> это событие предоставляет разработчикам способ обновления ПОЛЬЗОВАТЕЛЬСКОГО интерфейса или иным образом уведомлять пользователей о том, что элемент управления был успешно добавлен.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdding">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdding As WebPartAddingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAddingEventHandler ^ WebPartAdding;" />
      <MemberSignature Language="F#" Value="member this.WebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler " Usage="member this.WebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит во время процесса добавления динамического <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или другого серверного элемента управления в зону <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> вызывается методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> после начала процесса добавления элемента управления в зону. Это событие предоставляет возможность отменить процесс до его завершения. Если процесс добавления завершается успешно, за этим событием следует событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>.  
  
 Разработчики страниц могут предоставлять настраиваемые обработчики для события, добавляя атрибут `OnWebPartAdding` к элементу `<asp:webpartmanager>` на странице и присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartClosed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosed As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartClosed;" />
      <MemberSignature Language="F#" Value="member this.WebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при удалении со страницы элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (или серверный, или пользовательский элемент управления).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> указывает, что элемент управления успешно закрыт пользователем или программным путем. Чтобы закрыть <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления, можно удалить его со страницы, чтобы он не отображался, а также поместить его в специальный объект, называемый каталогом страниц. Каталог страниц, который соответствует элементу управления <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>, хранит ссылки на закрытые элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart> для каждой страницы. Если элемент управления <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> объявляется на странице в зоне <xref:System.Web.UI.WebControls.WebParts.CatalogZone>, пользователи могут переключать страницу в режим просмотра каталога и добавлять обратно на страницу все ранее закрытые элементы управления.  
  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> связано с методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>, который вызывает событие и предоставляет обработчик для него.  
  
 Разработчики страниц могут добавить пользовательский обработчик для события, добавив атрибут `OnWebPartClosed` к элементу `<asp:webpartmanager>` на странице, а затем присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartClosing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosing As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartClosing;" />
      <MemberSignature Language="F#" Value="member this.WebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.WebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит во время удаления элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control (или серверного, или пользовательского элемента управления) со страницы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> вызывается методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A>, когда элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> находится в процессе закрытия элемента управления. Если удаление элемента управления прошло успешно, за этим событием следует событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>.  
  
 Разработчики страниц могут предоставить пользовательский обработчик для события, добавив атрибут `OnWebPartClosed` к элементу `<asp:webpartmanager>` на странице и назначив атрибуту имя пользовательского метода.  
  
 Как правило, при возникновении события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> как непосредственный результат закрытия элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPart> событие может быть отменено. Однако существует сценарий, в котором событие не может быть отменено. Если элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartZone> удаляется, все элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, которые он содержит, должны быть закрыты, в противном случае они будут потеряны. В этом случае элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> закрывает элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, а не пользователя. А когда элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> находится в процессе вызова метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> для закрытия каждого элемента управления и вызывается событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, событие не может быть отменено (по проекту), так как <xref:System.Web.UI.WebControls.WebParts.WebPartManager> необходимо выполнить задачу очистки всех элементов управления зоны.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleted As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartDeleted;" />
      <MemberSignature Language="F#" Value="member this.WebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после удаления элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или другого серверного элемента управления из зоны <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> полезно для указания того, что динамический элемент управления (элемент управления, добавленный программным способом, в отличие от объявления в разметке страницы) был успешно удален из зоны. В сочетании с методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A> это событие предоставляет разработчикам способ обновления ПОЛЬЗОВАТЕЛЬСКОГО интерфейса или иным образом уведомлять пользователей об успешном удалении элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleting As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartDeleting;" />
      <MemberSignature Language="F#" Value="member this.WebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.WebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит во время процесса окончательного удаления экземпляра динамического <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или другого серверного элемента управления из зоны <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> вызывается методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A>, в процессе удаления динамического элемента управления (который был добавлен программно или пользователем через пользовательский интерфейс веб-части). Это событие предоставляет возможность отменить процесс до его завершения. Если процесс удаления успешно завершен, за этим событием следует событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>.  
  
 Разработчики страниц могут предоставлять настраиваемые обработчики для события, добавляя атрибут `OnWebPartDeleting` к элементу `<asp:webpartmanager>` на странице и присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartMoved">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoved As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartMoved;" />
      <MemberSignature Language="F#" Value="member this.WebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после перемещения в другое место веб-страницы элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверного элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие относится как к статическим (объявленным в разметке веб-страницы), так и к динамическим элементам управления. Он связан с методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>. Поскольку событие возникает после завершения перемещения, разработчики могут включить обработчик событий, чтобы предоставить пользователю некоторые уведомления, некоторые проверки или другие действия. Чтобы добавить обработчик событий, можно добавить атрибут `OnWebPartMoved` к элементу `<asp:webpartmanager>` на странице и присвоить атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartMoving">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoving As WebPartMovingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartMovingEventHandler ^ WebPartMoving;" />
      <MemberSignature Language="F#" Value="member this.WebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler " Usage="member this.WebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит во время процесса перемещения <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или другого серверного элемента, содержащегося в зоне <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> возникает при перемещении <xref:System.Web.UI.WebControls.WebParts.WebPart> или другого серверного элемента управления в собственную зону или в другую зону. Это может произойти как при перетаскивании элемента управления пользователем, так и при программном перемещении.  
  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> вызывается методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> и дает возможность отменить процесс перемещения до его завершения. Если перемещение завершено и элемент управления помещен в новую точку, за этим событием следует событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>.  
  
 Разработчики страниц могут создать пользовательский обработчик для события, добавив атрибут `OnWebPartMoving` к элементу `<asp:webpartmanager>` и присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartCollection WebParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebParts As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartCollection ^ WebParts { System::Web::UI::WebControls::WebParts::WebPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebParts : System.Web.UI.WebControls.WebParts.WebPartCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на все элементы управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, отслеживаемые элементом управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> на веб-странице.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" />, содержащий ссылки на набор элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> используется элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> для трассировки всех элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, содержащихся в зонах <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> на странице. Несмотря на то, что коллекция доступна только для чтения, можно получить доступ к отдельным элементам управления <xref:System.Web.UI.WebControls.WebParts.WebPart> через коллекцию и внести в них изменения программными средствами.  
  
> [!NOTE]
>  Элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> может быть помещен на страницу за пределами <xref:System.Web.UI.WebControls.WebParts.WebPartZone> зоны, что приводит к неотслеживаемости элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> или по ссылке в его коллекции <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>. Однако существует небольшая причина использовать элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> за пределами зоны, так как он теряет свою веб-частиную функциональность и выступает в качестве обычного серверного элемента управления.  
  
 Любой тип элемента управления, который можно поместить в зону, будь то пользовательский элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, стандартный элемент управления ASP.NET, Пользовательский элемент управления или пользовательский серверный элемент управления, может рассматриваться как элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> во время выполнения. Когда элемент управления, не являющийся элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, помещается в зону <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, во время выполнения ASP.NET заключает элемент управления в объект <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>, чтобы элемент управления мог вести себя как истинный элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Таким образом, с помощью свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> может контролировать любой тип серверного элемента управления независимо от того, является ли он производным от класса <xref:System.Web.UI.WebControls.WebParts.WebPart>.  
  
   
  
## Examples  
 В следующем примере кода показано, как программно использовать свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> для доступа к отдельным элементам управления <xref:System.Web.UI.WebControls.WebParts.WebPart>. Обратите внимание, что в декларативной разметке для веб-страницы в элементе `<asp:webpartzone>` есть два стандартных элемента управления ASP.NET Server. Несмотря на то что они не наследуются от класса <xref:System.Web.UI.WebControls.WebParts.WebPart>, поскольку они находятся в зоне, они будут упаковываться с помощью объекта <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> во время выполнения, и поэтому будут включены в коллекцию, на которую ссылается свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>. В эту зону можно также добавить пользовательские элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, пользовательские элементы управления или пользовательские серверные элементы управления, которые будут обрабатываться одинаково.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_WebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/CS/wpmgrWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_WebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/VB/wpmgrWebPartsVB.aspx#1)]  
  
 Обратите внимание, что для работы с примером кода необходимо добавить параметр в файл Web. config, чтобы включить экспорт файлов описания веб-части. Убедитесь, что у вас есть файл Web. config в том же каталоге, что и веб-страница для этого примера кода. В разделе `<system.web>` убедитесь, что имеется элемент `<webParts>` с атрибутом `enableExport`, для которого задано значение `true`, как показано в следующей разметке.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 После загрузки страницы в браузер при нажатии кнопки **число веб-частей** в коде используется свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>, возвращающее количество элементов управления в коллекции. Если нажать кнопку **скрыть заголовок календаря** , код изменит календарь так, чтобы он отображался только с границей, а не с заголовком.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsConnected;" />
      <MemberSignature Language="F#" Value="member this.WebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " Usage="member this.WebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после установки определенного подключения между элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (или серверными, или пользовательскими элементами управления).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> связано с методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>. Это событие полезно, поскольку после того, как известно, что соединение завершено, может потребоваться сообщить пользователю об этом или даже изменить пользовательский интерфейс страницы. Например, может потребоваться отобразить изображение, которое предлагает успешное соединение между двумя элементами управления, или вывести краткое сообщение, а затем снова изменить режим отображения страницы на режим просмотра.  
  
 Разработчики страниц могут связать пользовательский обработчик событий с этим событием, добавив атрибут `OnWebPartsConnected` к элементу `<asp:webpartmanager>` на странице и назначив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsConnecting;" />
      <MemberSignature Language="F#" Value="member this.WebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " Usage="member this.WebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит во время процесса создания подключения между элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (или серверными, или пользовательскими элементами управления, размещенными в зоне <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> вызывается методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> и сигнализирует, что процесс подключения начался (например, пользователь выбрал элемент управления и щелкнул команду подключения), но еще не завершился. Это событие предоставляет возможность отменить подключение до его завершения. Если соединение успешно завершено, за этим событием следует событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>.  
  
 Разработчики страниц могут добавить пользовательский обработчик для события, добавив атрибут `OnWebPartsConnecting` к элементу `<asp:webpartmanager>` и присвоив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsDisconnected;" />
      <MemberSignature Language="F#" Value="member this.WebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " Usage="member this.WebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после разрыва подключения между двумя элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверными элементами управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> связано с методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>. Это событие полезно, поскольку после того, как известно, что соединение разорвано, может потребоваться сообщить пользователю, выполнить некоторые действия по очистке в коде или внести другие изменения в пользовательский интерфейс.  
  
 Разработчики страниц могут связать пользовательский обработчик событий с этим событием, добавив атрибут `OnWebPartsDisConnected` к элементу `<asp:webpartmanager>` на странице и назначив атрибуту имя пользовательского метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsDisconnecting;" />
      <MemberSignature Language="F#" Value="member this.WebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " Usage="member this.WebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит во время процесса завершения подключения между ранее подключенными <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или серверными элементами управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> вызывается методом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> и сигнализирует о том, что пользователь щелкнул команду отключения или если в противном случае вызывался метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>. Это событие предоставляет возможность отменить процесс завершения подключения до его завершения. Если соединение успешно завершается, за этим событием следует событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>.  
  
 Разработчики страниц могут добавить пользовательский обработчик для события, добавив атрибут `OnWebPartsDisconnecting` к элементу `<asp:webpartmanager>` и присвоив атрибуту имя пользовательского метода.  
  
 Как правило, при возникновении события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> в результате непосредственных действий пользователя, завершающего подключение, событие может быть отменено. Однако существует несколько сценариев, в которых событие не может быть отменено. Первый сценарий заключается в том, что при удалении элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartZone> <xref:System.Web.UI.WebControls.WebParts.WebPart> элементы управления, которые он содержит, должны быть закрыты, в противном случае они будут утеряны. В этом случае элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> закрывает элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, а не пользователя, и он также должен иметь возможность завершать подключения любых подключенных элементов управления без каких бы то ни было возможного перерыва, чтобы он мог завершить процесс очистки и закрытия всех элементы управления. Таким образом, при проектировании метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> не может быть отменен в этом сценарии. Сведения о связанном событии, которое можно отменить, см. в описании события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>.  
  
 Второй сценарий, в котором событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> не может быть отменено, — это то, что вызывается метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> (например, он вызывается при каждом запросе к странице), и существует некоторый тип конфликта в существующих соединениях на странице. Например, пользователь подключается к элементу управления x для управления y, но общий пользователь подключается к элементу управления x к элементу управления z, но элемент управления x не может формировать несколько подключений. В этом случае параметры отдельного пользователя соединения имеют приоритет, а элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> разрешает конфликт, вызывая метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> и заканчивая соединением между x и z для конкретного пользователя. Так как это отключение важно для устранения конфликта, проектирование события <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> не может быть отменено в этом сценарии.  
  
 Третий сценарий, в котором метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> не может быть отменен, — это то, что <xref:System.Web.UI.WebControls.WebParts.WebPart> или серверный элемент управления, подключенный в данный момент, либо удален, либо закрыт. Поскольку элемент управления определенно будет удален со страницы, это логическая возможность удалить его соединение. Таким образом, когда элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, который, в свою очередь, вызывает событие <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>, в конструкторе не существует возможности отменять событие.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Zones">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Zones As WebPartZoneCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ Zones { System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Zones : System.Web.UI.WebControls.WebParts.WebPartZoneCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartZoneCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на коллекцию всех зон <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> на веб-странице.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneCollection" />, которая ссылается на набор зон <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> используется элементом управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager> для наблюдения за зонами <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> на веб-странице. Обратите внимание, что свойство не ссылается на все типы зон; Он ссылается только на зоны, производные от класса <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>, включая зоны <xref:System.Web.UI.WebControls.WebParts.WebPartZone>.  
  
 Несмотря на то, что коллекция, на которую ссылается свойство, доступна только для чтения, ее можно использовать для доступа к отдельным объектам в коллекции и работы с ними программным способом.  
  
   
  
## Examples  
 В следующем примере кода показано, как программно использовать свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> для доступа к отдельным элементам управления <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ной зоны. Обратите внимание, что в декларативной разметке для веб-страницы имеется два элемента `<asp:webpartzone>`, каждый из которых содержит серверный элемент управления. В разделе `<script>` страницы код использует свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> для доступа к отдельным зонам, перечисляя все идентификаторы зон, а затем изменяя цвет фона во второй зоне.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Zones#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/CS/wpmgrzonescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Zones#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/VB/wpmgrzonesvb.aspx#1)]  
  
 Обратите внимание, что для работы с примером кода необходимо добавить параметр в файл Web. config, чтобы включить экспорт файлов описания веб-части. Убедитесь, что у вас есть файл Web. config в том же каталоге, что и веб-страница для этого примера кода. В разделе `<system.web>` убедитесь, что имеется элемент `<webParts>` с атрибутом `enableExport`, для которого задано значение `true`, как показано в следующей разметке.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 После загрузки страницы в браузер при нажатии кнопки **List Zone IDS (список идентификаторов зон** ) код использует свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>, чтобы получить список идентификаторов всех зон в коллекции. Если нажать кнопку изменить фоновый **Цвет зоны** , код изменит цвет фона второй зоны.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
