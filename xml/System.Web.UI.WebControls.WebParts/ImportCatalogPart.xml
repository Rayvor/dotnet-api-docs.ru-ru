<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cdd982b836c4a2e800a68dfea5d63537526419d1" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70625086" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Импортирует файл описания для элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (или другого серверного элемента управления ASP.NET, используемого как элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />), чтобы пользователи могли добавлять на веб-страницу элементы управления с предопределенными установками. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления позволяет пользователям импортировать файл описания, описывающий параметры <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления или серверного элемента управления, которые пользователь <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> хочет добавить в зону. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>  
  
 После того как пользователь импортирует файл описания, <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления, на который ссылается файл, появляется <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> в элементе управления и пользователь может добавить его на страницу.  
  
 Файл описания отличается от самого элемента управления. Это XML-файл, заканчивающийся на. Расширение WebPart и содержит пары "имя-значение" — в основном это значения свойств, которые описывают состояние элемента управления. Файл описания создается в соответствии с указанным форматом XML, как описано в разделе [веб-части файлы описания элементов управления](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8).  
  
 Как и для элемента управления, на который ссылается файл описания, он может быть либо скомпилирован в сборку, либо пользовательским элементом управления, определенным в ASCX-файле. В любом случае элемент управления, на который ссылается импортированный файл описания, должен существовать на веб-сервере, на котором размещена страница, на которой выполняется попытка импорта элемента управления. Файл описания ссылается на имя элемента управления, сборку (или файл), содержащую элемент управления, а файл описания содержит параметры, влияющие на значения свойств, внешний вид и поведение элемента управления.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Элемент управления позволяет пользователям предоставлять общий доступ к параметрам элементов управления. Сложный элемент управления может иметь множество свойств и параметров. Например, в типичном сайте интрасети крупной компании пользовательский <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления может содержать ряд свойств, содержащих значения, характерные для среды пользователей, такие как подключения к базам данных, сведения о отделе и т. д. Элемент управления может также содержать ряд свойств, влияющих на его внешний вид. Один пользователь может персонализировать элемент управления на определенном сайте и обеспечить его правильную работу, экспортировать файл описания для элемента управления, а затем предоставить общий доступ к файлу описания другим пользователям, который может импортировать файл, чтобы добавить полностью настроенный элемент управления в другую интрасеть. сайты, которые им разрешено персонализировать. Если скомпилированная сборка или файл пользовательского элемента управления, содержащий элемент управления, существует на веб-сервере, где размещается сайт, пользователи могут добавить этот элемент управления на другие веб-сайты.  
  
 Механизм, с помощью которого пользователи импортируют файл описания (и, следовательно, связанный серверный элемент управления) на веб <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -страницу, — это элемент управления, который разработчик страницы должен добавить на веб-страницу. Когда пользователь переключает страницу в режим отображения каталога, <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> отображается элемент управления, и пользователь может перейти к элементу управления. Файл описания WebPart, соответствующий серверному элементу управления, который требуется импортировать. После пользовательского интерфейса и инструкций, предоставленных <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элементом управления, пользователь может добавить требуемый серверный элемент управления в веб-страницу, внешний вид и свойства которого полностью настроены, как указано в импортированном файле описания.  
  
 Прежде чем импортировать файл описания <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления, пользователь должен сначала создать (экспортировать) файл на основе существующего элемента управления. <xref:System.Web.UI.WebControls.WebParts.WebPart> Файл описания можно экспортировать для элемента управления, если выполняются следующие условия.  
  
-   Элемент управления имеет свойства, отмеченные `Personalizable` атрибутом.  
  
-   В файле `enableExport` Web. config задается значение атрибута для `true` `<webParts>` элемента.  
  
-   Разработчик устанавливает значение <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> свойства элемента управления в значение <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>, отличное от значения по умолчанию, которое запрещает экспорт. Если значение <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A> `Personalizable` свойства равно <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, то любое свойство, содержащее параметр с атрибутом, не экспортируется, когда пользователь экспортирует файл описания. <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> Это позволяет разработчикам элементов управления предотвращать экспорт конфиденциальных данных, таких как строки подключения, в определенных ситуациях.  
  
 Пользователь может экспортировать элемент управления, который был включен для экспорта, щелкнув команду экспорта, которая отображается в меню команд элемента управления, и следуя инструкциям по сохранению. Файл описания веб-части для элемента управления. Затем другие пользователи могут импортировать этот файл, чтобы настроить собственные экземпляры элемента управления.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Класс содержит несколько свойств. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Свойство содержит текст с инструкциями для пользователей при поиске файла описания. Свойство содержит текст, который служит меткой для импортируемого элемента управления, так как он отображается <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> в элементе управления. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Содержит текст, который отображается при возникновении ошибки при импорте описания элемента управления. Свойство переопределяет базовое свойство, чтобы назначить заголовок по умолчанию <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> для элемента управления, если разработчик не назначает заголовок. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Свойство содержит текст для кнопки, которую пользователь щелкает для отправки файла описания, <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> а свойство содержит инструкции для процесса передачи. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Класс также содержит несколько уникальных методов. Метод извлекает объект для <xref:System.Web.UI.WebControls.WebParts.WebPart> каждого <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>  элемента управления в каталоге, который позволяет элементу управления отображать сведения о каждом серверном элементе управления, не создавая его экземпляр. <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Метод получает экземпляр определенного <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления на основе описания, переданного в метод. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>  
  
 Использование <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления связано с некоторыми определенными рисками. Одним из примеров является возможность импорта вредоносных данных в веб-приложение с помощью файлов описания, используемых для импорта. Если кто-то поместил вредоносный код скрипта в качестве значения строкового свойства в файле описания, этот сценарий потенциально может быть выполнен, когда пользователь импортирует файл описания и добавляет указанный серверный элемент управления на веб-страницу. Чтобы снизить риск импорта файлов описания с вредоносными данными, серверные элементы управления, имеющие строковые свойства, должны всегда кодировать данные свойств. Другой риск предполагает импорт типов через файлы описания (см. раздел [веб-части Control Description Files](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)). Пользователь-злоумышленник может отправлять запросы на загрузку множества сборок <xref:System.AppDomain>в, что приводит к чрезмерному объему потребляемой памяти.  
  
 Чтобы избежать рисков, связанных с импортом, можно полностью отключить функцию, не используя функцию импорта или <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемент управления. Также можно ограничить доступ пользователей к элементу управления. Это можно сделать программным путем с помощью управления ролями (см. раздел [Управление авторизацией с помощью ролей](https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195)). Например, при загрузке страницы можно проверить, имеет ли пользователь определенную роль, например роль администратора. Если пользователь находится в роли, можно программно добавить <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемент управления на страницу этого пользователя. Можно также использовать декларативный подход для ограничения набора пользователей, которые могут использовать <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемент управления.  На веб-странице, содержащей каталог, можно разместить два <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемента управления: один для пользователей, которые могут импортировать, и один для тех, кто не может. Зона для пользователей, которые могут импортировать, будет содержать <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемент управления. Саму зону можно поместить внутри <xref:System.Web.UI.WebControls.LoginView> элемента управления, что позволит ограничить использование элемента управления в зоне только указанными пользователями или ролями, прошедших проверку подлинности.  
  
   
  
## Examples  
 В следующем примере кода показано, как декларативно <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> и программно использовать элемент управления на веб-странице. Пример состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на веб-части странице.  
  
-   Веб-страница, содержащая <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемент управления <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> и элемент управления.  
  
-   Файл исходного кода, содержащий два пользовательских <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления.  
  
-   Описание работы этого примера при загрузке страницы в браузере.  
  
 Первая часть этого примера кода — это пользовательский элемент управления, позволяющий пользователям изменять режимы экрана на веб-странице. Поместите следующий исходный код в файл и назовите его Дисплаймодеменукс. ascx или Дисплаймодеменувб. ascx (в зависимости от языка, который вы используете). Дополнительные сведения о режимах вывода и описание исходного кода в этом элементе управления см. в разделе [Пошаговое руководство. изменение режимов экрана на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 Вторая часть примера кода — веб-страница. В верхней части страницы находятся две `register` директивы: одна для пользовательского элемента управления, а другая — для скомпилированного компонента, который содержит два пользовательских <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления. Обратите внимание, что страница содержит декларативную ссылку <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> на элемент управления, вложенную в соответствующую иерархию декларативных элементов. Кроме того, обратите внимание, что в `<asp:importcatalogpart>` элементе декларативно присваиваются несколько значений свойств. Кроме того, `Button1_Click` метод обновляет ряд значений <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> свойств элемента управления.  
  
 В <xref:System.Web.UI.WebControls.WebParts.WebPartZone> элементе управления страницы объявляются два пользовательских <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления. `<aspSample:userinfowebpart>` Элемент управления `exportmode="all"`  имеет атрибут. Этот атрибут необходим, чтобы пользователи могли экспортировать файл описания для элемента управления, который затем может быть импортирован другими пользователями, которые хотят импортировать элемент управления с помощью файла описания.  
  
> [!NOTE]
>  Чтобы пользователи веб-частиного приложения могли экспортировать файл описания для <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, необходимо также включить функцию экспорта в веб-приложении, `enableExport="true"` добавив атрибут к `<webParts>` элементу (который является дочерним  `<system.web>` элементом элемента элемент) в файле Web. config. Экспорт по умолчанию отключен, поэтому если вы еще не включили экспорт для своего приложения, измените файл Web. config и выполните его сейчас.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 Третья часть примера кода — это исходный код для двух <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления. Обратите внимание, что некоторые свойства этих элементов управления помечаются `WebBrowsable` атрибутом. Это позволяет <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> элементу управления динамически создавать пользовательский интерфейс (UI) для редактирования этих свойств, когда элементы управления находятся в режиме редактирования. Свойства также помечаются `WebDisplayName` атрибутом, чтобы указать текст метки, которая отображается рядом с каждым элементом управления в пользовательском интерфейсе редактирования. Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере кода используется динамическая компиляция. Пошаговое руководство, в котором демонстрируются оба метода компиляции, см. [в разделе Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 Обращение к пользовательскому `TextDisplayWebPart` элементу управления осуществляется на веб-странице `<aspSample:TextDisplayWebPart>` с помощью элемента. Другой элемент управления, вызываемый `UserInfoWebPart`, также объявляется на веб-странице изначально, хотя он будет удален позже, чтобы продемонстрировать возможность импортировать файл описания для элемента управления.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 Теперь запустите пример кода. Загрузите веб-страницу в браузере. Первым шагом является редактирование `UserInfoWebPart` элемента управления. Используйте раскрывающийся список **режим экрана** и выберите **изменить** , чтобы переключить страницу в режим редактирования. Щелкните меню `UserInfoWebPart` команд элемента управления (стрелка вниз в заголовке окна) и нажмите кнопку **изменить**. Когда появляется пользовательский интерфейс редактирования, под `UserInfoWebPart` элементом управления появляются несколько элементов управления для редактирования, которые можно использовать для изменения значений полей. Измените некоторые поля, нажмите кнопку **ОК**, а затем используйте раскрывающийся список **режим отображения** , чтобы вернуть страницу в режим просмотра.  
  
 Вторым шагом является экспорт. Файл описания веб-части `UserInfoWebPart` для элемента управления. Щелкните меню команд в пользовательском элементе управления (представленной стрелкой вниз в заголовке окна) и нажмите кнопку **Экспорт**. Следуйте инструкциям по сохранению. Файл описания веб-части для элемента управления. Теперь закройте веб-страницу и измените источник страницы в редакторе. Удалите элемент объявления элемента управления, а затем сохраните и закройте файл. `<aspSample:userinfowebpart>` (Этот шаг выполняется для имитации пользователя, который еще не имеет `UserInfoWebPart` элемента управления, поэтому можно импортировать элемент управления на страницу).  
  
 Снова загрузите веб-страницу в браузере. `UserInfoWebPart` Элемент управления не должен отображаться, так как он был удален. Используйте раскрывающийся список **режим экрана** и выберите **Каталог** , чтобы переключить страницу в режим каталога. В элементе управления нажмите кнопку Обзор и перейдите к. **** <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Созданный файл WebPart, а затем нажмите кнопку **Upload (отправить** ). Появится ссылка на элемент управления с флажком рядом с ним. Установите флажок, а затем нажмите кнопку **Добавить** , чтобы добавить элемент управления на страницу.  
  
 Находясь в этом представлении страницы, нажмите кнопку **Обновить импорткаталогпарт** в нижней части страницы, чтобы увидеть результат программного обновления ряда значений <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> свойств элемента управления. После нажатия кнопки Обратите внимание на изменение различных свойств в пользовательском интерфейсе.  
  
 Наконец, нажмите кнопку **Закрыть** , чтобы выйти из режима каталога и вернуть страницу в режим просмотра. Теперь `UserInfoWebPart` элемент управления должен отображаться на странице, содержащей значения, которые он имел при экспорте ранее.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8">Файлы описания веб-части элемента управления</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Конструктор является значением по умолчанию; <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> в классе не объявлен конструктор, поэтому специальные задачи не выполняются при создании нового экземпляра класса. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> .NET Framework использует конструктор для внутренних целей, чтобы создать экземпляр класса.  
  
 Обычно <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> конструктор не нужно использовать программным способом в своем коде. Использование элемента управления предполагает, что разработчики страниц добавляют ее на страницу декларативно во время разработки.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текстовое сообщение, сообщающее пользователям о необходимости поиска расположения файла описания.</summary>
        <value>Строка, содержащая текст сообщения. Используемым по умолчанию значением является соответствующее языку и региональным стандартам сообщение, которое предоставляет платформа .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Свойство предоставляет пользователям простой обзор первого элемента, который необходимо сделать в процессе добавления импортированного элемента управления: укажите расположение файла описания, введя путь или перейдя к файлу. Типичной причиной предоставления пользовательского значения для этого свойства является наличие специальных инструкций для пользователей, таких как конкретная общая сетевая папка, в которую они должны перейти для поиска файла описания.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> свойство декларативно и программно. Полный код и инструкции, необходимые для выполнения примера, см. в разделе "пример" <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> раздела Обзор класса.  
  
 Обратите внимание, что <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> в следующем разделе кода значение свойства задается декларативно для элемента управления.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 В этом разделе кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> значение свойства назначается программно.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 При загрузке страницы в браузере можно использовать элемент управления раскрывающийся список **режим экрана** для выбора **режима каталога** и переключения страницы в режим каталога. Когда страница в режиме каталога и файл описания загружены, обратите внимание на различные текстовые строки, отображаемые в пользовательском интерфейсе для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Если нажать кнопку **Отправить Описание файла** , будет изменен текст для некоторых свойств в пользовательском интерфейсе, включая текст для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> свойства.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает, какая кнопка в интерфейсе пользователя обрабатывается как кнопка по умолчанию, получающая фокус во время отрисовки формы, содержащей кнопку. Это свойство не предназначено для непосредственного вызова из кода разработчика страницы.</summary>
        <value>Строка, содержащая идентификатор объекта <see cref="T:System.Web.UI.WebControls.Button" />, которая получает фокус по умолчании в элементе управления <see cref="T:System.Web.UI.WebControls.Panel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Код этого свойства переопределяет базовое свойство, унаследованное от <xref:System.Web.UI.WebControls.Panel> класса, чтобы скрыть свойство от конструкторов и предотвратить его влияние темами. Хотя это и является открытым, это свойство используется внутренне веб-части наборе элементов управления для отрисовки этого элемента управления по умолчанию и не предназначен для использования разработчиками страниц.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см <xref:System.Web.UI.ThemeableAttribute> . в статьях и [ASP.NET Themes и обложки](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию описаний доступных элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> в каталоге.</summary>
        <returns>Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />, содержащая объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> для каждого элемента управления в каталоге.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод предоставляет реализацию для абстрактного базового метода, объявленного <xref:System.Web.UI.WebControls.WebParts.CatalogPart> в классе. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Метод возвращает сведения о описании для каждого элемента управления в каталоге. Обратите внимание, что в случае <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> с элементом управления в каталоге может быть только один серверный элемент управления, хотя метод будет работать, если существовало несколько элементов управления.  
  
 Объект — это объект, который содержит важные сведения <xref:System.Web.UI.WebControls.WebParts.WebPart> об элементе управления, включая его идентификатор, ссылку на объект и значения нескольких важных свойств, унаследованных от <xref:System.Web.UI.WebControls.WebParts.Part> класса, например <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> и . <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Метод повышает производительность. При создании каталога ему требуются некоторые сведения о каждом элементе управления, включая заголовок, описание, значок (если он существует) и идентификатор. Вместо создания экземпляра каждого элемента управления для получения этих сведений <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> зона, которая создает каталог, <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> вызывает метод, и вызов возвращает только сведения о описании для элемента управления, а не экземпляр класса элемента.  
  
   
  
## Examples  
 В следующем примере кода показано, <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> как использовать метод на веб-странице. Пример состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на веб-части странице.  
  
-   Веб-страница, содержащая <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемент управления <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> и элемент управления, а также код, использующий <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> метод.  
  
-   Файл исходного кода, содержащий два пользовательских <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления.  
  
-   Описание работы этого примера при загрузке страницы в браузере.  
  
 Первая часть этого примера кода — это пользовательский элемент управления, позволяющий пользователям изменять режимы экрана на веб-странице. Поместите следующий исходный код в файл и назовите его Дисплаймодеменукс. ascx или Дисплаймодеменувб. ascx (в зависимости от языка, который вы используете). Дополнительные сведения о режимах вывода и описание исходного кода в этом элементе управления см. в разделе [Пошаговое руководство. изменение режимов экрана на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Вторая часть примера кода — веб-страница. В верхней части страницы находятся две `register` директивы: одна для пользовательского элемента управления, а другая — для скомпилированного компонента, который содержит два пользовательских <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления. На оба этих элемента управления ссылаются декларативно в разметке страницы. Обратите внимание, что в <xref:System.Web.UI.WebControls.WebParts.WebPart> декларативных ссылках на элементы `aspSample` управления (оба начинаются с префикса) Заметьте, что к каждому из них добавлен атрибут. `exportMode="all"` Этот атрибут позволяет экспортировать. Файл описания WebPart для элемента управления, который позже будет использоваться для импорта элемента управления на страницу.  
  
> [!NOTE]
>  Чтобы пользователи веб-частиного приложения могли экспортировать файл описания для <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, необходимо также включить функцию экспорта в веб-приложении, `enableExport="true"` добавив атрибут к `<webParts>` элементу (который является дочерним  `<system.web>` элементом элемента элемент) в файле Web. config. Экспорт по умолчанию отключен, поэтому если вы еще не включили экспорт для своего приложения, измените файл Web. config и выполните его сейчас.  
  
 Веб-страница также имеет декларативную ссылку на <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемент управления, вложенную в соответствующую иерархию декларативных элементов. Метод вызывается в коде `Button1_Click` метода. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Третья часть примера кода — это исходный код для двух <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления. Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере кода используется динамическая компиляция. Пошаговое руководство, в котором демонстрируются оба метода компиляции, см. [в разделе Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Теперь запустите пример кода. Загрузите веб-страницу в браузере. Первый шаг — экспорт. Файл описания веб-части <xref:System.Web.UI.WebControls.WebParts.WebPart> для каждого элемента управления `TextDisplayWebPart` (для и `UserInfoWebPart` для элемента управления). Для каждого элемента управления щелкните меню глаголы в элементе управления (представленной стрелкой вниз в заголовке окна) и нажмите кнопку **Экспорт**. Следуйте инструкциям по сохранению. Файл описания веб-части для элемента управления. После экспорта файла описания для каждого элемента управления закройте веб-страницу и измените источник страницы в редакторе. Удалите элементы объявления элемента управления, а затем сохраните и закройте файл. `<aspSample:textdisplaywebpart>` `<aspSample:userinfowebpart>` (Этот шаг выполняется для имитации пользователя, который еще не имеет таких элементов управления, поэтому можно импортировать элементы управления на страницу).  
  
 Снова загрузите веб-страницу в браузере. Используйте раскрывающийся список **режим экрана** и выберите **Каталог** , чтобы переключить страницу в режим каталога. В элементе управления нажмите кнопку Обзор и перейдите к. **** <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Созданные файлы WebPart, выберите один из них, а затем нажмите кнопку **Upload (отправить** ). Появится ссылка на элемент управления с флажком рядом с ним. Установите флажок, а затем нажмите кнопку **Добавить** , чтобы добавить элемент управления на страницу. Повторите эту процедуру для другого элемента управления.  
  
 В этом представлении страницы нажмите кнопку " **получить описание веб-части** " в нижней части страницы, чтобы увидеть результат программного доступа <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> к объекту для описания элемента управления, которое <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> в данный момент загружено в элемента. Метод, используемый для доступа к сведениям об описании, `Button1_Click` обнаруженным в методе источника страницы, <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> — это метод. Метка под кнопкой отображает основные сведения об элементе управления.  
  
 После добавления первого элемента управления повторите процесс, чтобы добавить второй элемент управления на страницу. Наконец, нажмите кнопку **Закрыть** , чтобы выйти из режима каталога и вернуть страницу в режим просмотра. Теперь на странице должны отобразиться и пользовательские элементы управления, содержащие значения, которые они имели при экспорте файлов описаний ранее.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />, содержащий сведения об элементе управления.</param>
        <summary>Возвращает ссылку на элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, основанный на значениях в описании, передаваемом в метод.</summary>
        <returns>Элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, описание которого совпадает со значениями в параметре <paramref name="description" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод возвращает ссылку <xref:System.Web.UI.WebControls.WebParts.WebPart> на элемент управления, сведения о описании которого <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> соответствуют значениям объекта, переданного в метод. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Как правило, этот метод используется вместе с <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> методом, который используется для получения описаний элементов управления в каталоге. Затем <xref:System.Web.UI.WebControls.WebParts.WebPart> отдельные элементы управления могут извлекаться или обрабатываться по мере необходимости <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> путем передачи отдельных <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> объектов в метод.  
  
   
  
## Examples  
 В следующем примере кода показано, <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> как использовать метод на веб-странице. Пример состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на веб-части странице.  
  
-   Веб-страница, содержащая <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемент управления <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> и элемент управления, а также код, использующий <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> метод.  
  
-   Файл исходного кода, содержащий два пользовательских <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления.  
  
-   Описание работы этого примера при загрузке страницы в браузере.  
  
 Первая часть этого примера кода — это пользовательский элемент управления, позволяющий пользователям изменять режимы экрана на веб-странице. Поместите следующий исходный код в файл и назовите его Дисплаймодеменукс. ascx или Дисплаймодеменувб. ascx (в зависимости от языка, который вы используете). Дополнительные сведения о режимах вывода и описание исходного кода в этом элементе управления см. в разделе [Пошаговое руководство. изменение режимов экрана на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Вторая часть примера кода — веб-страница. В верхней части страницы находятся две `register` директивы: одна для пользовательского элемента управления, а другая — для скомпилированного компонента, который содержит два пользовательских <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления. На оба этих элемента управления ссылаются декларативно в разметке страницы. Обратите внимание, что в <xref:System.Web.UI.WebControls.WebParts.WebPart> декларативных ссылках на элементы `aspSample` управления (оба начинаются с префикса) Заметьте, что к каждому из них добавлен атрибут. `exportMode="all"` Этот атрибут позволяет экспортировать. Файл описания WebPart для элемента управления, который позже будет использоваться для импорта элемента управления на страницу.  
  
> [!NOTE]
>  Чтобы пользователи веб-частиного приложения могли экспортировать файл описания для <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, необходимо также включить функцию экспорта в веб-приложении, `enableExport="true"` добавив атрибут к `<webParts>` элементу (который является дочерним  `<system.web>` элементом элемента элемент) в файле Web. config. Экспорт по умолчанию отключен, поэтому если вы еще не включили экспорт для своего приложения, измените файл Web. config и выполните его сейчас.  
  
 Веб-страница также имеет декларативную ссылку на <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемент управления, вложенную в соответствующую иерархию декларативных элементов. Метод вызывается в коде `Button2_Click` метода. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Третья часть примера кода — это исходный код для двух <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления. Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере кода используется динамическая компиляция. Пошаговое руководство, в котором демонстрируются оба метода компиляции, см. [в разделе Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Теперь запустите пример кода. Загрузите веб-страницу в браузере. Первый шаг — экспорт. Файл описания веб-части <xref:System.Web.UI.WebControls.WebParts.WebPart> для каждого элемента управления `TextDisplayWebPart` (для и `UserInfoWebPart` для элемента управления). Для каждого элемента управления щелкните меню глаголы в элементе управления (представленной стрелкой вниз в заголовке окна) и нажмите кнопку **Экспорт**. Следуйте инструкциям по сохранению. Файл описания веб-части для элемента управления. После экспорта файла описания для каждого элемента управления закройте веб-страницу и измените источник страницы в редакторе. Удалите элементы объявления элемента управления, а затем сохраните и закройте файл. `<aspSample:textdisplaywebpart>` `<aspSample:userinfowebpart>` (Этот шаг выполняется для имитации пользователя, который еще не имеет таких элементов управления, поэтому можно импортировать элементы управления на страницу).  
  
 Снова загрузите веб-страницу в браузере. Используйте раскрывающийся список **режим экрана** и выберите **Каталог** , чтобы переключить страницу в режим каталога. В элементе управления нажмите кнопку Обзор и перейдите к. **** <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Созданные файлы WebPart, выберите один из них, а затем нажмите кнопку **Upload (отправить** ). Появится ссылка на элемент управления с флажком рядом с ним. Теперь, когда описание элемента управления загружается <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> в элемент управления, нажмите кнопку **использовать веб-часть** в нижней части страницы. Это покажет результат вызова <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> метода и передачи ему описания элемента управления, загруженного <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> в данный момент в элементе управления. Обратите внимание, что связанный серверный элемент управления немедленно добавляется на веб-страницу без нажатия пользователем кнопки **Добавить** . Метод, который вызывается `Button2_Click` в методе источника <xref:System.Web.UI.WebControls.WebParts.WebPart> страницы, возвращает элемент управления, связанный с текущим описанием, которое загружается в <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемент управления. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Затем вызывается <xref:System.Web.UI.WebControls.WebParts.WebPart> метод, и элемент управления непосредственно добавляется на страницу. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> В этом примере показано, как программным способом добавить <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемент управления из элемента управления без вмешательства пользователя.  
  
 После добавления первого элемента управления повторите процесс, чтобы добавить второй элемент управления на страницу. Наконец, нажмите кнопку **Закрыть** , чтобы выйти из режима каталога и вернуть страницу в режим просмотра. Теперь на странице должны отобразиться и пользовательские элементы управления, содержащие значения, которые они имели при экспорте файлов описаний ранее.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="description" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="description" /> не является доступным значением <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст, отображаемый после импортирования пользователем файла описания, для представления или описания импортированного элемента управления в каталоге импортируемых элементов управления.</summary>
        <value>Строка, содержащая текст метки. Используемым по умолчанию значением является соответствующее языку и региональным стандартам сообщение, которое предоставляет платформа .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство обычно используется для хранения короткой общей метки, описывающей элемент управления, содержащийся <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> в элементе управления. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> свойство декларативно и программно. Полный код и инструкции, необходимые для выполнения примера, см. в разделе "пример" <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> раздела Обзор класса.  
  
 Обратите внимание, что <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> в следующем разделе кода значение свойства задается декларативно для элемента управления.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 В этом разделе кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> значение свойства назначается программно.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 При загрузке страницы в браузере можно использовать элемент управления раскрывающийся список **режим экрана** для выбора **режима каталога** и переключения страницы в режим каталога. Когда страница в режиме каталога и файл описания загружены, обратите внимание на различные текстовые строки, отображаемые в пользовательском интерфейсе для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Если нажать кнопку **Отправить Описание файла** , будет изменен текст для некоторых свойств в пользовательском интерфейсе, включая текст для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> свойства.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает сообщение об ошибке, отображаемое, если происходит ошибка во время процесса импортирования.</summary>
        <value>Строка, содержащая текст метки. Используемым по умолчанию значением является соответствующее языку и региональным стандартам сообщение, которое предоставляет платформа .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Свойство полезно для уведомления пользователя, если при попытке страницы импортировать файл описания возникла какая-либо проблема или ошибка.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> свойство декларативно и программно. Полный код и инструкции, необходимые для выполнения примера, см. в разделе "пример" <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> раздела Обзор класса.  
  
 Обратите внимание, что <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> в следующем разделе кода значение свойства задается декларативно для элемента управления.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 В этом разделе кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> значение свойства назначается программно.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 При загрузке страницы в браузере можно использовать элемент управления раскрывающийся список **режим экрана** для выбора **режима каталога** и переключения страницы в режим каталога. Когда страница в режиме каталога и файл описания загружены, обратите внимание на различные текстовые строки, отображаемые в пользовательском интерфейсе для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Если нажать кнопку **Отправить Описание файла** , будет изменен текст для некоторых свойств в пользовательском интерфейсе, включая текст для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> свойства.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает название, появляющееся в заголовке окна элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />.</summary>
        <value>Строка, используемая в качестве заголовка элемента управления. Значением по умолчанию является вычисляемое имя элемента управления, которое предоставляет набор элементов управления веб-частей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства отображается в заголовке окна <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления, когда элемент управления отображается в режиме каталога. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> При объявлении элемента управления на странице можно задать значение для свойства с помощью `Title` атрибута. Если не указать значение для заголовка, то для описания типа свойств, которые этот элемент управления разрешает пользователям изменять, используется значение по умолчанию, зависящее от языка и региональных параметров.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> свойство декларативно и программно. Полный код и инструкции, необходимые для выполнения примера, см. в разделе "пример" <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> раздела Обзор класса.  
  
 Обратите внимание, что <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> в следующем разделе кода значение свойства задается декларативно для элемента управления.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 В этом разделе кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> значение свойства назначается программно.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 При загрузке страницы в браузере можно использовать элемент управления раскрывающийся список **режим экрана** для выбора **режима каталога** и переключения страницы в режим каталога. Когда страница в режиме каталога и файл описания загружены, обратите внимание на различные текстовые строки, отображаемые в пользовательском интерфейсе для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Если нажать кнопку **Отправить Описание файла** , будет изменен текст для некоторых свойств в пользовательском интерфейсе, включая текст для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> свойства.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст для элемента управления <see cref="T:System.Web.UI.WebControls.Button" />, который запускает отправку файла описания.</summary>
        <value>Строка, используемая в качестве текста для <see cref="T:System.Web.UI.WebControls.Button" />. Используемым по умолчанию значением является соответствующая языку и региональным параметрам строка, которую предоставляет набор элементов управления веб-частей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство предоставляет текст <xref:System.Web.UI.WebControls.Button> для элемента управления, который инициирует процесс отправки. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Если для этого свойства присвоить пользовательский текст или <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> свойство, текст должен быть ясно, что пользователь отправляет файл описания. Текст не должен говорить о том, что процесс передачи фактически отправляет сам элемент управления.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> свойство декларативно и программно. Полный код и инструкции, необходимые для выполнения примера, см. в разделе "пример" <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> раздела Обзор класса.  
  
 Обратите внимание, что <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> в следующем разделе кода значение свойства задается декларативно для элемента управления.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 В этом разделе кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> значение свойства назначается программно.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 При загрузке страницы в браузере можно использовать элемент управления раскрывающийся список **режим экрана** для выбора **режима каталога** и переключения страницы в режим каталога. Когда страница в режиме каталога и файл описания загружены, обратите внимание на различные текстовые строки, отображаемые в пользовательском интерфейсе для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Если нажать кнопку **Отправить Описание файла** , будет изменен текст для некоторых свойств в пользовательском интерфейсе, включая текст для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> свойства.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст сообщения, информирующего пользователя о том, как отправлять файл описания.</summary>
        <value>Строка, используемая в качестве инструкций для пользователя по отправке файла описания. Используемым по умолчанию значением является соответствующая языку и региональным параметрам строка, которую предоставляет набор элементов управления веб-частей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> Свойство предоставляет краткое предложение или фразу инструкций для пользователей, указывая, что нужно нажать кнопку, чтобы отправить файл описания. Если для этого свойства присвоить пользовательский текст или <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> свойство, текст должен быть ясно, что пользователь отправляет файл описания. Текст не должен говорить о том, что процесс передачи фактически отправляет сам элемент управления.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> свойство декларативно и программно. Полный код и инструкции, необходимые для выполнения примера, см. в разделе "пример" <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> раздела Обзор класса.  
  
 Обратите внимание, что <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> в следующем разделе кода значение свойства задается декларативно для элемента управления.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 В этом разделе кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> значение свойства назначается программно.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 При загрузке страницы в браузере можно использовать элемент управления раскрывающийся список **режим экрана** для выбора **режима каталога** и переключения страницы в режим каталога. Когда страница в режиме каталога и файл описания загружены, обратите внимание на различные текстовые строки, отображаемые в пользовательском интерфейсе для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Если нажать кнопку **Отправить Описание файла** , будет изменен текст для некоторых свойств в пользовательском интерфейсе, включая текст для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> свойства.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
