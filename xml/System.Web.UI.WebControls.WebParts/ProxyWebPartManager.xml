<Type Name="ProxyWebPartManager" FullName="System.Web.UI.WebControls.WebParts.ProxyWebPartManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e1fce1cb9ac7a2829c58575b55cc2fd3a1fb69b" /><Meta Name="ms.sourcegitcommit" Value="6b9d64332f31de312efea785fbb19e4d80f544d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/12/2019" /><Meta Name="ms.locfileid" Value="67027218" /></Metadata><TypeSignature Language="C#" Value="public class ProxyWebPartManager : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyWebPartManager extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyWebPartManager&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyWebPartManager : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type ProxyWebPartManager = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет разработчикам способ объявления статических соединений на странице содержимого, когда на главной странице, связанной со страницей содержимого, объявлен элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> Существует элемент управления для конкретного сценария объявления статических подключений в содержимом страниц, когда <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления уже объявлен на главной странице.  
  
 По своей структуре веб-страницы, которое использует элементы управления веб-частей должен содержать один (и только один) <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемент управления, который управляет всеми элементами управления веб-частей на странице. Когда приложение веб-частей использует главные страницы, довольно часто для размещения <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления на главной странице, так как все страницы содержимого объединяются с главной страницей во время выполнения и один <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления будет управлять все элементы управления веб-частей из всех страниц содержимого. Тем не менее если разработчикам нужно объявить статические подключения на страницах содержимого такого приложения, они покажутся столкнуться с ограничением. Статическое подключение веб-частей, которые могут быть объявлены только путем добавления `<asp:webpartconnection>` как дочерний элемент элемента `<staticconnections>` элемент, который сам должен быть дочерним элементом `<asp:webpartmanager>` элемент. Но так как <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления уже был объявлен на главной странице, и имеет одно разрешение <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления, разработчики не может объявить дополнительные <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элементов управления на страницах содержимого для добавления статических подключений.  
  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> Управления занимает место <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления в этом сценарии. Разработчики объявить `<asp:proxywebpartmanager>` вместо элемента `<asp:webpartmanager>` элемент в свои страницы содержимого и затем объявить статические подключения как дочерние элементы. Во время выполнения, соединения в <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> управления просто добавляются <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> коллекцию <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления и как любые другие соединения.  
  
 Так как <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> управления используется только в этом сценарии разработки, он имеет более ограниченные возможности, чем <xref:System.Web.UI.WebControls.WebParts.WebPartManager> класса. На самом деле несмотря на то что <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> управления действует как прокси-сервер должен содержать статические подключения для <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления на страницах содержимого, он не наследуется от <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления. Он наследует непосредственно от <xref:System.Web.UI.Control> класса и переопределяет лишь небольшое число базовых членов. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A>, И <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> переопределены и присваивать значения, которые препятствуют их от использования свойства. Другие наследуемые свойства переопределены нужно отрегулировать поведение времени разработки, но в противном случае они ведут себя так же как базового свойства. К ним относятся <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A> и <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A> свойства. Наконец <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> класс имеет одно свойство, относящихся к ненаследуемым. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> Свойство возвращает свою собственную коллекцию статических подключений ( <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection> объекта).  
  
 Как и для методов <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> класс аналогичным образом переопределяет лишь несколько методов, главным образом, чтобы ограничить их использование. Унаследованный <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A> метод становится непригодным для использования путем создания исключения при вызове. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A> Метод всегда возвращает коллекцию пустого элемента управления, который действует как из-за его не может содержать коллекцию элементов управления. Наконец <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A> метод вызывает базовый метод, а затем назначает коллекцию подключений, на которые <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType> свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления. Это приводит к свертке всех статических связей, объявленных на всех страницах содержимого и становятся частью коллекции подключений обслуживается <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления на главной странице.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> класса для объявления статических подключений на страницах содержимого в приложение, использующее главных страниц. Пример состоит из пяти частей.  
  
-   Режим отображения пользовательского элемента управления, позволяющий изменить веб-частей на странице.  
  
-   Исходный код для интерфейса, а также два <xref:System.Web.UI.WebControls.WebParts.WebPart> управляет действующего в качестве поставщика и потребителя для подключения.  
  
-   Основной веб-страницы, на котором размещается пользовательский элемент управления, страницы содержимого, и <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления приложения.  
  
-   Содержимое веб-страницы, на котором размещена <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемент управления, две пользовательские <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, а также статические подключение для подключения двух элементов управления.  
  
-   Объяснение того, как запустить пример страницы.  
  
 Первая часть этого примера кода — пользовательский элемент управления, позволяющий пользователю изменять режим отображения на веб-страницы. Сохраните следующий исходный код в файле ASCX, задав для него имя файла, который назначен `Src` атрибут `Register` директив для этого пользовательского элемента управления, который расположено в верхней части главной страницы размещения. Сведения о режимах отображения и описание исходного кода в этом элементе управления, см. в разделе [Пошаговое руководство: Изменение режимов отображения на веб-частей страницы](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 Вторая часть в примере кода приведен исходный код для интерфейса и элементов управления. Исходный файл содержит простой интерфейс с именем `IZipCode`. Имеется также <xref:System.Web.UI.WebControls.WebParts.WebPart> класс с именем `ZipCodeWebPart` , реализующий интерфейс и выступает в качестве элемента управления поставщика. Его `ProvideIZipCode` метод является методом обратного вызова, реализующий единственный член этого интерфейса. Метод просто возвращает экземпляр интерфейса. Обратите внимание, что метод помечен атрибутом `ConnectionProvider` атрибут в своих метаданных. Это механизм для идентификации метода как метода обратного вызова для точки подключения поставщика. Другой <xref:System.Web.UI.WebControls.WebParts.WebPart> класс называется `WeatherWebPart`, и он выступает в роли потребителя для соединения. Этот класс содержит метод с именем `GetZipCode` , возвращает экземпляр `IZipCode` интерфейса из элемента управления поставщика. Обратите внимание, что этот метод помечен как метод точки подключения потребителя с `ConnectionConsumer` в метаданных атрибутом.  
  
 Для выполнения примера кода необходимо скомпилировать этот исходный код. Можно выполнить явную компиляцию и разместить сборку в папку Bin веб сайта или в глобальном кэше сборок. Кроме того можно поместить исходный код в папку App_Code веб сайта, где он будет компилироваться динамически во время выполнения. Данный пример кода использует динамической компиляции. Пошаговое руководство по компиляции, см. в разделе [Пошаговое руководство: Разработка и использование пользовательского веб-серверного элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/ZipCodeComponent.cs#4)]
 [!code-vb[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/ZipCodeComponent.vb#4)]  
  
 В третьей части в примере кода является главной страницей. Необходимо выполнить следующий исходный код и сохраните его в файле, назовите его MasterPageCS.master или MasterPageVB.master (в зависимости от того, какой язык используется). Обратите внимание, что главная страница содержит `Register` директиву, чтобы зарегистрировать пользовательский элемент управления и он ссылается на пользовательский элемент управления в основной части страницы. Главная страница также объявляет один `<asp:webpartmanager>` элемент, используемый для этой страницы и всех связанных страниц содержимого. Наконец, Главная страница имеет `<asp: contentplaceholder>` элемент, который объявляет точку на странице, куда вставляется страница содержимого.  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/MasterPageCS.master#1)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/MasterPageVB.master#1)]  
  
 В четвертой части в примере кода — это странице содержимого. Следует скопировать следующий исходный код и сохраните его в файл с расширением .aspx. Обратите внимание, что его `Page` директива содержит `MasterFile` атрибут для ссылки на главную страницу. Кроме того, эта страница содержит `Register` директива для регистрации файла в папке App_Code, содержащий динамически скомпилированного настраиваемые <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, участвующих в соединении. В рамках `<asp:content>` теги страницы, имеется `<asp:proxywebpartmanager>` элемент с дочерним `<staticconnections>` элемент, который в свою очередь имеет дочерний элемент `<asp:webpartconnection>` элемент для объявления сведения о соединении. В рамках `<script>` тегов на странице `Button1_Click` метод добавляет код, который обращается к основной <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления на главной странице и <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемента управления на странице содержимого и записывает некоторые из сведений о них на страницу.  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 После загрузки страницы в браузере, щелкните **сведения WebPartManager** кнопку и наблюдать за сведениями о <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления на главной странице и <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемента управления на странице содержимого. Например, обратите внимание, что они оба одинаковым количеством в их соответствующих свойствах, которые отслеживают статические подключения ( <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойство). Обратите внимание, что несмотря на то что <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемент управления имеет <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> свойство, которое отслеживает количество <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, он управляет, <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемент управления имеет такого свойства нет, так как он предназначен только для хранения статических подключений.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Веб-частей ASP.NET элементов управления</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyWebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProxyWebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает идентификатор элемента управления для HTML-разметки, созданной ASP.NET.</summary>
        <value>Идентификатор элемента управления для HTML-разметки, созданной ASP.NET.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.ControlCollection" />, который представляет дочерние элементы управления для указанного элемента управления сервера в иерархии пользовательского интерфейса.</summary>
        <value>Коллекция дочерних элементов для указанного элемента управления сервера.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="proxyWebPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переопределяет базовое свойство, чтобы запретить включение элементов управления в элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />.</summary>
        <returns>Всегда возвращает <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A> Метод переопределяет базовый метод, чтобы предотвратить <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемента управления, содержащий и возвращение коллекции элементов управления. Его единственная цель — Чтобы включить статические подключения объявляемые на страницах содержимого в приложение, использующее главных страниц.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Переопределяет базовое свойство, чтобы запретить использование тем.</summary>
        <value>Всегда возвращает значение <see langword="false" />, чтобы запретить использование тем.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A> Свойство переопределяет базовое свойство, чтобы запретить с тем <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемента управления. Это позволяет предотвратить он поступает в конфликт с все темы, который используется с <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления на главной странице (его <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=nameWithType> свойство всегда возвращает `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Вызывающий объект пытается присвоить значение этому свойству.</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="proxyWebPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переопределяет базовый метод, чтобы запретить вызов метода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A> Метод переопределяет базовый метод и создает исключение, если любой вызывающий объект пытается вызвать метод. Это обусловлено наследуемого <xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType> метод предназначен для элементов управления с пользовательским интерфейсом (UI), но <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> управления без пользовательского интерфейса и, следовательно, нет необходимости, чтобы установить фокус.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Вызывающий объект пытается вызвать этот метод.</exception>
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="proxyWebPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.Control.Init" /> и инициализирует элемент управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A> Метод вызывает базовый метод, а затем выполняет задачи инициализации <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемента управления. Важная задача этого метода — присвоить коллекцию подключений, на которые <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойства <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType> коллекции.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> на сопоставленной главной странице имеет значение <see langword="null" />.</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Переопределяет базовое свойство, чтобы запретить присваивание значений.</summary>
        <value>Всегда возвращает пустую строку ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> Переопределения свойств обложек базовое свойство, чтобы запретить присваивание, значение которого имеет дает больше не использовался с <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемента управления. Это делается потому, что элемент управления никогда не предоставляет пользовательский интерфейс (UI) на странице. То же поведение реализуется <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления для его <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=nameWithType> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Вызывающий объект пытается присвоить значение этому свойству.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As ProxyWebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию статических связей, объявленных в элементе <see langword="&lt;asp:proxywebpartmanager&gt;" /> на странице содержимого.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" />, содержащий все статические объекты <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />, объявленные в элементе <see langword="&lt;asp:proxywebpartmanager&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> Свойство ссылается на коллекцию <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> объекты, объявленные в `<asp:proxywebpartmanager>` элемент. Соединения, содержащихся в данной коллекции добавляются статические подключения из <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элементов управления (ссылается его <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType> коллекции) и обрабатываются так же, как и любые другие подключения, связанные с <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления.  
  
 Декларативный элемент, соответствующий <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойство `<staticconnections>` элемент. В приложении, использующем главные страницы `<staticconnections>` элемент добавляется в качестве дочернего элемента `<asp:proxywebpartmanager>` элемент на странице содержимого и `<asp:webpartconnection>` в свою очередь добавляется как дочерний элемент `<staticconnections>` элемент. Несколько `<asp:webpartconnection>` элементы могут быть добавлены к одной `<staticconnections>` элемента и нескольких страниц можно объявить статические подключения как часть приложения главных страниц.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойство <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> класса. Этот пример кода показывает только необходимые части кода на странице содержимого, который объявляет <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> управления и статического соединения. Другие страницы, необходимые для запуска в примере кода, а также описание того, как их настроить, см. в разделе "Пример" <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> Общие сведения о классе.  
  
 Следующий код является страница содержимого, которая объявляет `<staticconnections>` как дочерний элемент элемента `<asp:proxywebpartmanager>` элемент. Также Обратите внимание, что `Button1_Click` метод проверяет число <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойство <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> управления и записывает его на страницу.  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 После загрузки страницы в браузере, щелкните **сведения WebPartManager** кнопку и наблюдать за сведениями о <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления на главной странице и <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемента управления на странице содержимого. Например, обратите внимание, что они оба одинаковым количеством в их соответствующих свойствах, которые отслеживают статические подключения ( <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойство).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Переопределяет базовое свойство, чтобы запретить присваивание значений.</summary>
        <value>Всегда возвращает значение <see langword="false" />, чтобы элемент управления было нельзя сделать видимым.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A> Свойство переопределяет базовое свойство, чтобы предотвратить <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемента управления, когда-либо было нельзя сделать видимым. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> Управления, как <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления, у него отсутствует интерфейс пользователя (UI) и никогда не отображается для пользователя.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Вызывающий объект пытается присвоить значение этому свойству.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
        <altmember cref="P:System.Web.UI.Control.Visible" />
      </Docs>
    </Member>
  </Members>
</Type>