<Type Name="ProxyWebPartManager" FullName="System.Web.UI.WebControls.WebParts.ProxyWebPartManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6bdb65d8082839992e9c9f14aafe65d91a1b2156" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69394817" /></Metadata><TypeSignature Language="C#" Value="public class ProxyWebPartManager : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyWebPartManager extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyWebPartManager&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyWebPartManager : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type ProxyWebPartManager = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет разработчикам способ объявления статических соединений на странице содержимого, когда на главной странице, связанной со страницей содержимого, объявлен элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемент управления существует для конкретного сценария объявления статических соединений на страницах содержимого, <xref:System.Web.UI.WebControls.WebParts.WebPartManager> если элемент управления уже объявлен в главной странице.  
  
 Веб-страница, в которой используются элементы управления веб-части, должна содержать один (и только один <xref:System.Web.UI.WebControls.WebParts.WebPartManager> ) элемент управления, управляющий всеми элементами управления веб-части на странице. Когда веб-части приложение использует главные страницы, обычно <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемент управления помещается на главную страницу, так как все страницы содержимого объединяются с главной страницей во время выполнения, и один <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемент управления будет управлять всеми элементами управления веб-части со всех страниц содержимого. Однако, когда разработчики хотят объявлять статические подключения на страницах содержимого такого приложения, они могут показаться ограниченными. Статическое веб-части соединение может быть объявлено только путем добавления `<asp:webpartconnection>` элемента в качестве дочернего `<staticconnections>` для элемента, который сам должен `<asp:webpartmanager>` быть дочерним элементом элемента. Но поскольку <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемент управления уже объявлен на главной странице и является одним из разрешенных <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элементов управления, разработчики не могут объявлять дополнительные <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элементы управления на страницах содержимого для добавления статических соединений.  
  
 Элемент управления занимает место <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления в этом сценарии. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> Разработчики объявляют `<asp:proxywebpartmanager>` элемент вместо `<asp:webpartmanager>` элемента на страницах его содержимого, а затем могут объявлять статические соединения как дочерние элементы. Во время выполнения соединения в <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элементе управления просто добавляются <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> в коллекцию <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления и обрабатываются как любые другие соединения.  
  
 Поскольку элемент управления используется только в этом конкретном сценарии разработки, он имеет более ограниченную функциональность, <xref:System.Web.UI.WebControls.WebParts.WebPartManager> чем класс. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> Фактически, хотя <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемент управления выступает в качестве прокси-сервера для включения статических соединений <xref:System.Web.UI.WebControls.WebParts.WebPartManager> для элемента управления на страницах содержимого, он не наследует от <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления. Он наследуется непосредственно от <xref:System.Web.UI.Control> класса и переопределяет только некоторые из базовых членов. Свойства <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A> и<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> переопределяются и присваиваются значения, которые не позволяют использовать их. Другие наследуемые свойства переопределяются для настройки их поведения во время разработки, но в противном случае они имеют то же поведение, что и базовые свойства. К <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A> ним относятся свойства <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A> и. Наконец, <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> класс имеет одно свойство, не наследуемое. Свойство возвращает собственную коллекцию статических соединений <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection> (объект). <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>  
  
 Как и для методов, <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> класс аналогично переопределяет только несколько методов, в основном ограничивающих их использование. Унаследованный <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A> метод становится непригодным для использования, вызывая исключение при вызове. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A> Метод всегда возвращает пустую коллекцию элементов управления, которая влияет на то, что она не может содержать коллекцию элементов управления. Наконец, <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A> метод вызывает базовый метод, а затем назначает коллекцию соединений, на которые ссылается <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType> , свойству <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления. Это приводит к сведению всех статических подключений, объявленных во всех страницах содержимого, и внесении их в коллекцию Connections, поддерживаемую <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элементом управления на главной странице.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> класс для объявления статических соединений на страницах содержимого в приложении, использующем главные страницы. Пример состоит из пяти частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режим просмотра веб-части на странице.  
  
-   Исходный код для интерфейса и два <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления, выступающих в качестве поставщика и потребителя для соединения.  
  
-   Главная веб-страница, на которой размещен пользовательский элемент управления, страницы содержимого и <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемент управления для приложения.  
  
-   Веб-страница содержимого, на которой <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> размещается элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart> , два пользовательских элемента управления и статическое соединение для соединения двух элементов управления.  
  
-   Объяснение того, как запустить пример страницы.  
  
 Первая часть этого примера кода — это пользовательский элемент управления, позволяющий пользователям изменять режимы экрана на веб-странице. Сохраните следующий исходный код в ASCX-файл, указав имя файла, присвоенное `Src` атрибуту `Register` директивы для этого пользовательского элемента управления, который находится ближе к верхней части главной страницы размещения. Дополнительные сведения о режимах вывода и описание исходного кода в этом элементе управления см. в [разделе Пошаговое руководство. Изменение режима экрана на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 Вторая часть примера кода — это исходный код для интерфейса и элементов управления. Исходный файл содержит простой интерфейс с именем `IZipCode`. Также <xref:System.Web.UI.WebControls.WebParts.WebPart> существует класс с именем `ZipCodeWebPart` , который реализует интерфейс и выступает в качестве элемента управления поставщика. Его `ProvideIZipCode` метод — это метод обратного вызова, реализующий член интерфейса. Метод просто возвращает экземпляр интерфейса. Обратите внимание, что метод помечен `ConnectionProvider` атрибутом в его метаданных. Это механизм идентификации метода в качестве метода обратного вызова для точки соединения поставщика. Другой <xref:System.Web.UI.WebControls.WebParts.WebPart> класс`WeatherWebPart`называется, и он выступает в качестве потребителя для соединения. Этот класс имеет метод с именем `GetZipCode` , который получает экземпляр `IZipCode` интерфейса из элемента управления поставщика. Обратите внимание, что этот метод помечен как метод точки подключения потребителя с `ConnectionConsumer` атрибутом в его метаданных.  
  
 Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере кода используется динамическая компиляция. Пошаговое руководство, в котором демонстрируется компиляция [, см. в разделе Пошаговое руководство. Разработка и использование пользовательского серверного веб-](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)элемента управления.  
  
 [!code-csharp[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/ZipCodeComponent.cs#4)]
 [!code-vb[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/ZipCodeComponent.vb#4)]  
  
 Третья часть примера кода — Главная страница. Следует принять следующий исходный код и сохранить его в файле, назвав его Мастерпажекс. master или Мастерпажевб. master (в зависимости от используемого языка). Обратите внимание, что эталонная `Register` страница содержит директиву для регистрации пользовательского элемента управления и ссылается на сам пользовательский элемент управления в тексте страницы. На главной странице также объявляется единственный `<asp:webpartmanager>` элемент, используемый для этой страницы и всех связанных страниц содержимого. Наконец, на главной странице есть `<asp: contentplaceholder>` элемент, объявляющий точку на странице, где вставляется страница содержимого.  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/MasterPageCS.master#1)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/MasterPageVB.master#1)]  
  
 Четвертой частью примера кода является страница содержимого. Скопируйте следующий исходный код и сохраните его в файле с расширением. aspx. Обратите внимание `Page` , что его `MasterFile` директива содержит атрибут для ссылки на главную страницу. Кроме того, эта страница содержит `Register` директиву для регистрации файла в папке App_Code, содержащей динамически скомпилированные пользовательские <xref:System.Web.UI.WebControls.WebParts.WebPart> элементы управления, участвующие в соединении. В тегах страницы имеется `<asp:proxywebpartmanager>` элемент с дочерним `<staticconnections>` элементом, который, в свою очередь, имеет дочерний `<asp:webpartconnection>` элемент для объявления сведений о соединении. `<asp:content>` В тегах на странице `Button1_Click` метод добавляет некоторый код, обращающийся к главному <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элементу управления на главной странице и <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемент управления на странице содержимого, и записывает некоторые сведения о них на страницу. `<script>`  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 После загрузки страницы в браузере нажмите кнопку **сведения о WebPartManager** и просмотрите сведения об <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элементе управления на главной <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> странице и элементе управления на странице содержимое. Например, обратите внимание, что они имеют одинаковое количество в соответствующих свойствах, которые отправляют статические соединения ( <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойство). Обратите внимание, что <xref:System.Web.UI.WebControls.WebParts.WebPartManager> хотя у элемента <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> управления есть свойство <xref:System.Web.UI.WebControls.WebParts.WebPart> , отслеживающее количество управляемых им элементов управления <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> , у него нет такого свойства, так как его единственная цель — содержать статические соединения.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyWebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProxyWebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает идентификатор элемента управления для HTML-разметки, созданной ASP.NET.</summary>
        <value>Идентификатор элемента управления для HTML-разметки, созданной ASP.NET.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.ControlCollection" /> , который представляет дочерние элементы управления для указанного элемента управления сервера в иерархии пользовательского интерфейса.</summary>
        <value>Коллекция дочерних элементов для указанного элемента управления сервера.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="proxyWebPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переопределяет базовое свойство, чтобы запретить включение элементов управления в элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />.</summary>
        <returns>Всегда возвращает <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод переопределяет базовый метод, чтобы <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> запретить элементу управления содержать и возвращать коллекции элементов управления. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A> Его единственная задача — включить объявление статических соединений на страницах содержимого в приложении, использующем главные страницы.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Переопределяет базовое свойство, чтобы запретить использование тем.</summary>
        <value>Всегда возвращает значение <see langword="false" />, чтобы запретить использование тем.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство переопределяет базовое свойство, чтобы предотвратить использование тем <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> с элементом управления. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A> Это позволяет предотвратить конфликт с темами, используемыми с <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элементом управления на главной странице <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=nameWithType> (свойство всегда возвращает `true`значение).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Вызывающий объект пытается присвоить значение этому свойству.</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="proxyWebPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переопределяет базовый метод, чтобы запретить вызов метода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A> Метод переопределяет базовый метод и создает исключение, если любой вызывающий объект пытается вызвать метод. Это обусловлено тем, <xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType> что наследуемый метод предназначен для элементов управления с пользовательским интерфейсом, <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> но элемент управления не имеет пользовательского интерфейса и, следовательно, не должен устанавливать фокус.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Вызывающий объект пытается вызвать этот метод.</exception>
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="proxyWebPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.Control.Init" /> и инициализирует элемент управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод вызывает базовый метод, а затем выполняет задачи для <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> инициализации элемента управления. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A> Важной задачей этого метода является присвоение коллекции соединений, на которые ссылается <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойство <xref:System.Web.UI.WebControls.WebParts.WebPartManager> , <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType> коллекции элементов управления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> на сопоставленной главной странице имеет значение <see langword="null" />.</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Переопределяет базовое свойство, чтобы запретить присваивание значений.</summary>
        <value>Всегда возвращает пустую строку ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство переопределяет базовое свойство, чтобы предотвратить присвоение ему значения, что может препятствовать применению обложек <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> с элементом управления. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> Это делается потому, что элемент управления никогда не предоставляет пользовательский интерфейс на странице. То же поведение реализуется <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элементом управления для его <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=nameWithType> свойства.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Вызывающий объект пытается присвоить значение этому свойству.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As ProxyWebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию статических связей, объявленных в элементе <see langword="&lt;asp:proxywebpartmanager&gt;" /> на странице содержимого.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" />, содержащий все статические объекты <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />, объявленные в элементе <see langword="&lt;asp:proxywebpartmanager&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство ссылается на <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> коллекцию объектов, объявленных в `<asp:proxywebpartmanager>` элементе. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> Соединения, содержащиеся в этой коллекции, добавляются к статическим соединениям <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элементов управления (на которые ссылается его <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType> коллекция) и обрабатываются точно так же, <xref:System.Web.UI.WebControls.WebParts.WebPartManager> как и любые другие соединения, связанные с элементом управления.  
  
 Декларативный элемент, соответствующий <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойству, `<staticconnections>` является элементом. В `<staticconnections>` приложении, использующем главные страницы, элемент добавляется в качестве дочернего `<asp:proxywebpartmanager>` элемента на странице `<asp:webpartconnection>` содержимого, а элемент, в `<staticconnections>` свою очередь, добавляется в качестве дочернего элемента для элемента. К `<asp:webpartconnection>` одному`<staticconnections>` элементу можно добавить несколько элементов, и несколько страниц содержимого могут объявлять статические соединения как часть приложения главной страницы.  
  
   
  
## Examples  
 В следующем примере кода показано, <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> как использовать свойство <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> класса. В этом примере кода показана только соответствующая часть кода со страницы содержимого, которая объявляет <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемент управления и статическое соединение. Другие страницы, необходимые для выполнения примера кода, и описание их настройки см. в разделе "пример" <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> раздела Общие сведения о классе.  
  
 Следующий код представляет собой страницу содержимого, которая объявляет `<staticconnections>` элемент как дочерний `<asp:proxywebpartmanager>` элемент. Также обратите внимание `Button1_Click` , что метод проверяет количество <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойства <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> элемента управления и записывает его на страницу.  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 После загрузки страницы в браузере нажмите кнопку **сведения о WebPartManager** и просмотрите сведения об <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элементе управления на главной <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> странице и элементе управления на странице содержимое. Например, обратите внимание, что они имеют одинаковое количество в соответствующих свойствах, которые отправляют статические соединения ( <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> свойство).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Переопределяет базовое свойство, чтобы запретить присваивание значений.</summary>
        <value>Всегда возвращает значение <see langword="false" />, чтобы элемент управления было нельзя сделать видимым.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство переопределяет базовое свойство, чтобы <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> предотвратить невидимость элемента управления. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A> Элемент управления, <xref:System.Web.UI.WebControls.WebParts.WebPartManager> как и элемент управления, не имеет пользовательского интерфейса и никогда не отображается для пользователя. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Вызывающий объект пытается присвоить значение этому свойству.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
        <altmember cref="P:System.Web.UI.Control.Visible" />
      </Docs>
    </Member>
  </Members>
</Type>
