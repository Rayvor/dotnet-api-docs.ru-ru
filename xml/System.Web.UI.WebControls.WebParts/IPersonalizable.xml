<Type Name="IPersonalizable" FullName="System.Web.UI.WebControls.WebParts.IPersonalizable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="654722cd1d314fa0d612bc497e3192abe3a40033" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64073955" /></Metadata><TypeSignature Language="C#" Value="public interface IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersonalizable" />
  <TypeSignature Language="F#" Value="type IPersonalizable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет дополнительные возможности управления для применения и извлечения состояния персонализации.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Помимо использования `Personalizable` атрибут на свойства элементов управления, элемент управления также можно реализовать <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> для дополнительные возможности управления для применения и извлечения состояния персонализации. Например элементы управления, которым требуется управлять закрытые сведения о состоянии должны реализовывать этот интерфейс. Элементы управления, доступ к персонализированной данным через сложные механизмы, такие как решения для пользовательского кэша, сохранение данных на мэйнфреймах, или веб-служб XML, также должен реализовывать этот интерфейс.  
  
> [!IMPORTANT]
>  Не следует добавлять типы, основанные на классы, определенные в каталоге App_Code и затем зависят от механизм двоичной сериализации по умолчанию. Артефакты на основе App_Code не постоянно сериализуются двоичного файла, из-за того, что они могут иметь имена сборок меняться в произвольный момент времени.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> интерфейс. Пример состоит из страницы ASPX, ссылающийся на элемент управления веб-части с именем `UrlListWebPart`. Ниже приведен пример ASPX-файла.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 Следующий код является источником для настраиваемого <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления. Этот файл должен находиться в каталоге App_Code.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 Загрузите страницу в браузере. Введите имя для представления URL-адрес, а затем добавьте начала URL-адрес с `http://`и нажмите кнопку **добавить** кнопку, чтобы добавить URL-адрес.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, показывающее, изменились ли пользовательские данные, которыми управляет элемент управления.</summary>
        <value>Значение <see langword="true" />, если изменились пользовательские данные, которые управляются через интерфейс <see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />. В противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При изменении данных, которыми управляет элемент управления, элемент управления считается «грязным». Элемент управления должен возвращать `true` Если пользовательские данные, ИТ-отдел управляет через <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> интерфейс изменился. Если элемент управления возвращает `true` из этого свойства, элемент управления <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> реализацию метода интерфейса вызывается во время извлечения значения свойства.  
  
> [!NOTE]
>  Это свойство автоматически проверяется в инфраструктуре персонализации во время второй фазы обработки запроса POST. Тем не менее, для запросов GET, значение, возвращаемое из <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> свойство не проверяется. Некоторые другие событие должно вызвать элемент управления, чтобы считаться «грязный» для любого состояния элемента управления — не только данные, управляемые <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>--должен быть сохранен. Если элемент управления можно пометить себя как «грязный» во время запроса GET, или если инфраструктуре персонализации некоторых определенных условиях границ считает, что элемент управления «грязный» во время запроса GET, затем <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> всегда будет вызываться.  
  
 Элемент управления может ссылаться на связанный с ним <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления и проверьте <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> свойство для определения текущей области. «Грязный» состояние данных пользовательского элемента управления следует подходить для текущей области.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> свойство. Первая часть примера — веб-страницы, на котором размещена <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 Во второй части примера приведен код для настраиваемого <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления под названием `UrlListWebPart`. Этот файл должен находиться в каталоге App_Code, для выполнения этого примера. Обратите внимание, что исходный код реализует <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> свойство.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 Загрузите страницу в браузере. Введите имя для представления URL-адрес, а затем добавьте начала URL-адрес с `http://`и нажмите кнопку **добавить** кнопку, чтобы добавить URL-адрес.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Load state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, содержащий данные пользовательской области, которые были загружены из базового хранилища данных.</param>
        <summary>Загружает пользовательские данные в элемент управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается в элементе управления, чтобы его можно загрузить пользовательские данные в саму себя. Он также может возвращать значение, указывающее ли пользовательское состояние элемента управления необходимо записать в базовом хранилище данных, независимо от того, изменилось ли данные персонализации для страницы. Элемент управления можно задать собственные пользовательские свойства и выполнять дополнительные внутренние операции на основе значений, содержащихся в словаре персонализации. Этот метод вызывается элементом управления веб-частей, которые задаются в процессе применения данных персонализации к элементу управления.  
  
 Также следует иметь в виду поведение слияния <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-области и <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>-области свойств, содержащихся в <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> объекта. `state` Параметр содержит объединенное представление пользовательских данных, который был загружен из базового хранилища данных. В <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> область, все значения, которые ранее были добавлены в момент самой страницы <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> области будут доступны. В <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> область, если значение, связанное с <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> область персонализации были добавлены, если страница находилась в одно значение <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> область и другое значение, если страница находилась в <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> области, то будет инфраструктуре персонализации включать только <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-значение с заданной областью (в отличие от <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> область значение) в пределах `state` параметра.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется реализация <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> метод в настраиваемом <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления. Полный код, необходимый для выполнения этого примера, см. в разделе "Пример" в <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> Общие сведения о классе.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Save state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, содержащий данные пользовательской области, которые были загружены из базового хранилища данных.</param>
        <summary>Сохраняет пользовательские свойства и внутренние сведения о состоянии в объекте <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Серверный элемент управления можно хранить свои собственные пользовательские свойства и сведения о внутреннем состоянии <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> указано в `state` параметра. Сведения хранятся в виде последовательности пар "имя значение". Он отвечает за эти элементы управления для пар имя/значение, он может распознать во время последующих вызовов к этим элементом управления посредством <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> метод.  
  
 Элемент управления может ссылаться на связанный с ним <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления и проверьте <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> для определения текущей области. Пользовательские сведения о состоянии должны соответствовать текущей области. Обратите внимание, что каждый <xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry> значение, которое добавляется к <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> объект должен быть связан с значение соответствующей области, так как инфраструктуру персонализации зависит это при слиянии <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> и <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-пользовательские данные с заданной областью. до его передачи в <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> метод.  
  
 При использовании стандартной реализации ASP.NET веб-частей, элементы управления необходимо убедиться, что объекты, размещенные в словаре состояния может быть сериализован с ASP.NET <xref:System.Web.UI.ObjectStateFormatter> класса. На практике это означает следующее:  
  
-   Типы-примитивы платформы .NET Framework, строк и ориентированных на коллекцию типов .NET Framework, таких как массивы, списки массивов, хэш-таблицы и гибридные словари, автоматически доступны для сериализации.  
  
-   Пользовательские типы, которые предоставляют свои собственные <xref:System.ComponentModel.TypeConverter> классы поддерживают сериализацию и десериализацию из строки рассматриваются как сериализуемые.  
  
-   Пользовательские типы, которые могут быть сериализованы <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> класса, считаются serializable.  
  
> [!IMPORTANT]
>  Не следует добавлять типы, основанные на классы, определенные в каталоге App_Code и затем зависят от механизм двоичной сериализации по умолчанию. Артефакты на основе App_Code не постоянно сериализуются двоичного файла, из-за того, что они могут иметь имена сборок меняться в произвольный момент времени.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется реализация <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> метод в настраиваемом <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления. Полный код, необходимый для выполнения этого примера, см. в разделе "Пример" в <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> Общие сведения о классе.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>