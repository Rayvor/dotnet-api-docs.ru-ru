<Type Name="IPersonalizable" FullName="System.Web.UI.WebControls.WebParts.IPersonalizable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9762519573962218a7aa1fc2c8df4ccce38aea70" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69395358" /></Metadata><TypeSignature Language="C#" Value="public interface IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersonalizable" />
  <TypeSignature Language="F#" Value="type IPersonalizable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет дополнительные возможности управления для применения и извлечения состояния персонализации.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Помимо использования `Personalizable` атрибута в свойствах элемента управления, элемент управления может также реализовать <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> дополнительные возможности управления для приложения и извлечение состояния персонализации. Например, элементы управления, которым требуется управлять конфиденциальными сведениями о состоянии, должны реализовывать этот интерфейс. Элементы управления, которые обращаются к персонализированным данным через сложные механизмы, такие как решения для пользовательского кэша, сохраняемость данных для мэйнфреймов или веб-службы XML, должны также реализовать этот интерфейс.  
  
> [!IMPORTANT]
>  Не следует добавлять типы на основе классов, определенных в каталоге App_Code, а затем зависеть от механизма двоичной сериализации по умолчанию. Артефакты на основе App_Code не всегда являются двоичными сериализуемыми из-за того факта, что имена сборок могут изменяться в произвольные моменты времени.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> интерфейс. Пример состоит из ASPX-страницы, ссылающейся на элемент управления веб-части `UrlListWebPart`с именем. Следующий код представляет собой ASPX-файл для примера.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 Следующий код является источником для пользовательского <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления. Этот файл должен быть помещен в каталог App_Code.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 Загрузите страницу в браузере. Введите имя для представления URL-адреса, а затем добавьте фактический URL-адрес `http://`, начинающийся с, и нажмите кнопку " **добавить** ", чтобы добавить URL-адрес.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, показывающее, изменились ли пользовательские данные, которыми управляет элемент управления.</summary>
        <value>Значение <see langword="true" />, если изменились пользовательские данные, которые управляются через интерфейс <see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />. В противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При изменении данных, управляемых элементом управления, элемент управления считается «грязным». Элемент управления должен возвращать `true` значение, если пользовательские данные, которыми он управляет <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> через интерфейс, изменились. Если элемент управления возвращает `true` из этого свойства, реализация метода <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> интерфейса элемента управления вызывается во время извлечения значения свойства.  
  
> [!NOTE]
>  Это свойство проверяется автоматически инфраструктурой персонализации во время последних этапов обработки запроса POST. Однако для запросов GET значение, возвращаемое <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> свойством, не проверяется. Некоторые другие события должны были привести к тому, что элемент управления будет считаться "грязным" для любого состояния элемента управления, а <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>не только данными, управляемыми, для сохранения. Если элемент управления может пометить себя как "грязный" во время запроса GET, или если инфраструктура персонализации в некоторых специфических условиях границы считает элемент управления "грязным" во время запроса Get <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> , то всегда будет вызываться.  
  
 Элемент управления может ссылаться на связанный <xref:System.Web.UI.WebControls.WebParts.WebPartManager> с ним элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> и проверять свойство для определения текущей области. Состояние "грязного" настраиваемых данных элемента управления должно соответствовать текущей области.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> свойства. Первая часть примера — это веб-страница, на которой размещен <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 Вторая часть примера — код для пользовательского <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления с именем. `UrlListWebPart` Этот файл должен быть помещен в каталог App_Code для выполнения примера. Обратите внимание, что исходный код <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> реализует свойство.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 Загрузите страницу в браузере. Введите имя для представления URL-адреса, а затем добавьте фактический URL-адрес `http://`, начинающийся с, и нажмите кнопку " **добавить** ", чтобы добавить URL-адрес.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Load state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, содержащий данные пользовательской области, которые были загружены из базового хранилища данных.</param>
        <summary>Загружает пользовательские данные в элемент управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается для элемента управления, чтобы позволить ему загружать пользовательские данные в себя. Он также может возвращать значение, указывающее, должно ли пользовательское состояние элемента управления быть записано обратно в базовое хранилище данных независимо от того, изменились ли какие-либо другие данные персонализации на странице. Элемент управления может задавать собственные пользовательские свойства и выполнять дополнительную внутреннюю логику на основе значений, содержащихся в словаре персонализации. Этот метод вызывается набором элементов управления веб-части, при применении данных персонализации к элементу управления.  
  
 Кроме того, следует учитывать поведение <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>слияния свойств с областью видимости и <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>свойства, <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> содержащихся в объекте. `state` Параметр содержит объединенное представление пользовательских данных, которые были загружены из базового хранилища данных. В <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> области действия все значения, ранее добавленные при Находе самой страницы в <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> области, будут доступны. В <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> области, если значение, связанное <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> с областью персонализации, было добавлено одно значение, когда <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> страница находилась в области действия, и другое значение <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> , когда страница находилась в области действия, инфраструктура персонализации в `state` параметре <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>следует включать только значение области (в отличие <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> от значения области).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется реализация <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> метода в пользовательском <xref:System.Web.UI.WebControls.WebParts.WebPart> элементе управления. Полный код, необходимый для выполнения этого примера, см. в разделе "пример" <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> в обзоре класса.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Save state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, содержащий данные пользовательской области, которые были загружены из базового хранилища данных.</param>
        <summary>Сохраняет пользовательские свойства и внутренние сведения о состоянии в объекте <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Серверный элемент управления может хранить собственные пользовательские свойства и внутренние сведения о состоянии <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> , указанные `state` в параметре. Информация хранится в виде последовательности пар "имя-значение". Элемент управления должен использовать пары "имя-значение", которые он может распознать при последующих вызовах элемента управления с помощью <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> метода.  
  
 Элемент управления может ссылаться на связанный <xref:System.Web.UI.WebControls.WebParts.WebPartManager> с ним элемент управления <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> и проверять объект на предмет текущей области. Сведения о пользовательском состоянии должны соответствовать текущей области. Обратите внимание <xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry> , что каждое значение, добавляемое <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> к объекту, должно быть связано с соответствующим значением области, так как инфраструктура персонализации зависит от этого <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> при <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>объединении и области пользовательских данных. перед передачей его в <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> метод.  
  
 При использовании стандартной ASP.NET реализации веб-части элементы управления должны обеспечивать сериализацию объектов, помещаемых в словарь состояний, с помощью класса ASP.NET <xref:System.Web.UI.ObjectStateFormatter> . На практике это означает следующее:  
  
-   Примитивные типы .NET Framework, строки и типы .NET Framework, ориентированные на коллекцию, такие как массивы, списки массивов, хэш-таблицы и гибридные словари, автоматически сериализуются.  
  
-   Пользовательские типы, которые предоставляют собственные <xref:System.ComponentModel.TypeConverter> классы, способные выполнять сериализацию и десериализацию из строк, считаются сериализуемыми.  
  
-   Пользовательские типы, которые могут быть сериализованы <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> классом, считаются сериализуемыми.  
  
> [!IMPORTANT]
>  Не следует добавлять типы на основе классов, определенных в каталоге App_Code, а затем зависеть от механизма двоичной сериализации по умолчанию. Артефакты на основе App_Code не всегда являются двоичными сериализуемыми из-за того факта, что имена сборок могут изменяться в произвольные моменты времени.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется реализация <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> метода в пользовательском <xref:System.Web.UI.WebControls.WebParts.WebPart> элементе управления. Полный код, необходимый для выполнения этого примера, см. в разделе "пример" <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> в обзоре класса.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
