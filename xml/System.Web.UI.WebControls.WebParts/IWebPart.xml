<Type Name="IWebPart" FullName="System.Web.UI.WebControls.WebParts.IWebPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="244f2d3d456f34e730d468b1cf8b57cee486f32c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70664886" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPart" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPart" />
  <TypeSignature Language="F#" Value="type IWebPart = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет общие свойства пользовательского интерфейса, используемые элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Интерфейс предоставляет несколько свойств, ориентированных на интерфейс пользователя, которые улучшают работу с <xref:System.Web.UI.WebControls.WebParts.WebPart> элементами управления. <xref:System.Web.UI.WebControls.WebParts.IWebPart> При создании элементов управления, производных от базового <xref:System.Web.UI.WebControls.WebParts.WebPart> класса, вы получаете реализацию всех свойств <xref:System.Web.UI.WebControls.WebParts.IWebPart> в интерфейсе, так как <xref:System.Web.UI.WebControls.WebParts.WebPart> базовый класс реализует этот интерфейс.  
  
 Можно использовать существующие пользовательские элементы управления, элементы управления ASP.NET или пользовательские серверные элементы управления, не наследуемые от <xref:System.Web.UI.WebControls.WebParts.WebPart> класса в составе веб-частиного приложения, и они также могут использовать эти свойства, ориентированные на <xref:System.Web.UI.WebControls.WebParts.IWebPart> пользовательский интерфейс, объявленные интерфейсом. При помещении существующих серверных элементов управления в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> зону во время выполнения они упаковываются <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> с помощью объекта. Поскольку класс наследуется <xref:System.Web.UI.WebControls.WebParts.WebPart> от базового класса, он позволяет существующим серверным элементам управления действовать как истинные <xref:System.Web.UI.WebControls.WebParts.WebPart> элементы управления и добавляет к ним свойства <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса. <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>  
  
 При помещении серверных элементов управления, которые <xref:System.Web.UI.WebControls.WebParts.WebPart> не являются элементами управления в зонах, они <xref:System.Web.UI.WebControls.WebParts.IWebPart> могут использовать эти свойства во время выполнения. Кроме того, можно объявить значения для этих свойств в серверных элементах управления в разметке страницы (в формате сохранения страницы). Однако поскольку эти свойства доступны только серверным элементам управления во время выполнения, функции написания кода во время разработки, такие как IntelliSense, не распознают <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства, объявленные в серверных элементах управления. Объявленные свойства этих элементов управления по-прежнему работают при загрузке страницы, но Microsoft Visual Studio не распознают свойства как допустимые во время разработки. Если вы хотите добавить <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства к существующим серверным и пользовательским элементам управления для улучшения взаимодействия с пользователем во время разработки, можно <xref:System.Web.UI.WebControls.WebParts.IWebPart> реализовать интерфейс в серверном элементе управления.  
  
 Возможно, основная причина реализации <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса — для элементов управления, которые не поддерживают использование свойств expando (Custom). Свойства expando — это строки, которые можно добавить в класс динамически в качестве свойства с помощью <xref:System.Web.UI.IAttributeAccessor> интерфейса. Элементы управления, реализующие этот интерфейс, <xref:System.Web.UI.WebControls.WebControl> включая класс и его дочерние объекты, могут использовать свойства expando. Таким образом, все серверные элементы управления ASP.NET, пользовательские элементы управления, производные от них, пользовательские <xref:System.Web.UI.WebControls.WebParts.WebPart> веб-элементы управления и элементы управления, поддерживают использование свойств expando. Но пользовательские элементы управления, которые наследуют непосредственно <xref:System.Web.UI.Control> от базового класса, не поддерживают свойства expando. Таким образом, если вы объявили эти элементы <xref:System.Web.UI.WebControls.WebParts.WebPartZone>управления в, вы не сможете объявлять общие <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства элементов управления, такие как <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> и <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>. Если вы хотите использовать эти свойства с такими элементами управления, необходимо реализовать <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейс.  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейс в пользовательском элементе управления. Это простая реализация, которая демонстрирует минимальную реализацию свойств.  
  
 В первой части примера кода показан пользовательский элемент управления. Пользовательский элемент управления реализует все свойства <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса, а также два дополнительных общих свойства, привязанные к элементам управления в пользовательском интерфейсе. В каждом из двух пользовательских свойств используется `Personalizable` атрибут, который позволяет сохранять значения этих свойств в сеансах браузера. Обратите внимание, что <xref:System.Web.UI.WebControls.WebParts.WebPart> в реализации базового класса все свойства <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса реализуются как настраиваемые, хотя и не в этом примере кода.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#2)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#2)]  
  
 Во второй части примера кода показана веб-страница, на которой размещен пользовательский элемент управления. Страница содержит <xref:System.Web.UI.WebControls.WebParts.WebPartZone> элемент управления, в котором имеется ссылка на пользовательский элемент управления. Обратите внимание, что <xref:System.Web.UI.WebControls.WebParts.IWebPart> некоторые значения свойств интерфейса задаются декларативно в разметке для пользовательского элемента управления, что позволяет ему вести себя и выглядеть аналогично <xref:System.Web.UI.WebControls.WebParts.WebPart> элементу управления во время разработки и во время выполнения. При загрузке страницы в браузере можно использовать пользовательский интерфейс на странице, чтобы продемонстрировать возможность программно изменять значения реализованных <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойств во время выполнения. При изменении некоторых значений свойств эти изменения не будут очевидны на странице, но видимы в источнике страницы ( <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойство) или хранятся в данных состояния приложения <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> (свойство).  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Обычно не требуется реализовывать <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> интерфейс на пользовательских <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> элементах управления или серверных элементах управления, так как базовый <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> класс уже реализует интерфейс. Пользовательские <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> элементы управления и другие серверные элементы управления, размещенные в <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> зонах <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> , могут использовать все свойства.  
  
Основная причина для самостоятельной реализации <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> интерфейса, будь то пользовательский <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> элемент управления или другой серверный элемент управления, заключается в том, что необходимо изменить реализацию по умолчанию. Например, может потребоваться указать значения по умолчанию для некоторых свойств. Другой причиной реализации интерфейса в пользовательском или серверном элементе управления является то, что во время разработки работа с этими свойствами элемента управления будет расширена.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес для изображения, представляющего элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> в каталоге элементов управления.</summary>
        <value>Строка, представляющая URL-адрес для изображения, которое используется для представления элемента управления в каталоге. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Веб-части приложения часто предоставляют каталог (или список) элементов управления, которые пользователи могут добавлять на страницу. <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> Свойство элемента управления содержит URL-адрес изображения, которое представляет элемент управления, когда он отображается в каталоге.  
  
   
  
## Examples  
 В следующем примере кода показано декларативное и программное использование <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойства. Полный исходный код для примера см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPart> «пример» в обзоре класса.  
  
 В первой части примера кода показано, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#8)]
 [!code-vb[WebParts_IWebPart_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#8)]  
  
 Во второй части примера кода демонстрируется метод в пользовательском элементе управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойства, когда пользователь выбирает соответствующее имя свойства из переключателей на странице, устанавливает новое значение в текстовом поле и затем нажимает кнопку **Обновить** .  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части примера кода показано, как на элемент управления ссылается <xref:System.Web.UI.WebControls.WebParts.IWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> пользовательский элемент управления, реализующий интерфейс, и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойство задается декларативно на элементе управления. Обратите внимание, что, поскольку в этом примере отсутствует каталог элементов управления веб-части, фактический результат установки этого свойства не отображается.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает краткий текст, описывающий функции элемента управления для использования в подсказке и в каталогах серверных элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, кратко описывающая функции элемента управления. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства обычно используется в качестве описательной строки для элемента управления в каталогах, предоставляющих <xref:System.Web.UI.WebControls.WebParts.WebPart> списки элементов управления, а также в качестве подсказки в заголовке окна элемента управления. <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> Содержимое свойства отображается в подсказке, когда пользователь позиционирует указатель мыши над текстом заголовка в заголовке окна элемента управления.  
  
   
  
## Examples  
 В следующем примере кода показано декларативное и программное использование <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> свойства. Полный исходный код для примера см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPart> «пример» в обзоре класса.  
  
 В первой части примера кода показано, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#3)]
 [!code-vb[WebParts_IWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#3)]  
  
 Во второй части примера кода демонстрируется метод в пользовательском элементе управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> свойства, когда пользователь выбирает соответствующее имя свойства из переключателей на странице, устанавливает новое значение в текстовом поле и затем нажимает кнопку **Обновить** .  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части примера кода показано, как на элемент управления ссылается <xref:System.Web.UI.WebControls.WebParts.IWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> пользовательский элемент управления, реализующий интерфейс, и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> свойство задается декларативно на элементе управления. Обратите внимание, что значение этого свойства можно увидеть, наведя указатель мыши на текст заголовка в заголовке окна элемента управления после загрузки страницы в браузере. Можно также поэкспериментировать с изменением значения свойства программным способом во время выполнения, загрузив веб-страницу и используя предоставленный пользовательский интерфейс для изменения значения свойства.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subtitle : string" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает строку, которая объединены со значением свойства <see cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" /> для формирования полного заголовка для элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, служащая подзаголовком для элемента управления. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство используется для возврата строки подзаголовка по умолчанию <xref:System.Web.UI.WebControls.WebParts.WebPart> для элемента управления, добавляемого к заголовку элемента управления в заголовке окна. <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>  
  
 При предоставлении значения по умолчанию для <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> свойства в элементе управления, который <xref:System.Web.UI.WebControls.WebParts.IWebPart> реализует интерфейс, набор элементов управления веб-части автоматически добавляет его <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> к значению свойства элемента управления во время выполнения.  
  
   
  
## Examples  
 В следующем примере кода показано декларативное и программное использование <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> свойства. Полный исходный код для примера см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPart> «пример» в обзоре класса.  
  
 В первой части примера кода показано, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> свойство. Обратите внимание, что свойство доступно только для чтения и должно использоваться для предоставления подзаголовка по умолчанию, добавляемого к главному заголовку элемента управления.  
  
 [!code-csharp[WebParts_IWebPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#5)]
 [!code-vb[WebParts_IWebPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#5)]  
  
 Во второй части примера кода показано, как на элемент управления ссылается <xref:System.Web.UI.WebControls.WebParts.IWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> пользовательский элемент управления, реализующий интерфейс, и <xref:System.Web.UI.WebControls.WebParts.IWebPart> как свойства, доступные для записи, задаются декларативно на элементе управления. После загрузки страницы в браузере Обратите внимание, что значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> свойства по умолчанию, которое было задано в коде реализации пользовательского элемента управления, добавляется к заголовку в заголовке окна элемента управления.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает название элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, содержащая заголовок элемента управления. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Видимый текст заголовка в заголовке окна элемента управления задается <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойством.  
  
 Если не указать заголовок для элемента управления, набор элементов управления веб-части автоматически вычисляет строку по умолчанию для использования в качестве заголовка. Для получения дополнительной информации см. <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>. Кроме того, можно предоставить подзаголовок по умолчанию, добавляемый к строке заголовка. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано декларативное и программное использование <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойства. Полный исходный код для примера см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPart> «пример» в обзоре класса.  
  
 В первой части примера кода показано, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#4)]
 [!code-vb[WebParts_IWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#4)]  
  
 Во второй части примера кода демонстрируется метод в пользовательском элементе управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойства, когда пользователь выбирает соответствующее имя свойства из переключателей на странице, устанавливает новое значение в текстовом поле и затем нажимает кнопку **Обновить** .  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части примера кода показано, как на элемент управления ссылается <xref:System.Web.UI.WebControls.WebParts.IWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> пользовательский элемент управления, реализующий интерфейс, и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойство задается декларативно на элементе управления.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес изображения, которое используется для представления элемента управления веб-частей в собственном заголовке окна элемента управления.</summary>
        <value>Строка, представляющая URL-адрес изображения. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство предоставляет способ связывания значка <xref:System.Web.UI.WebControls.WebParts.WebPart> с элементом управления. <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> Значок отображается в заголовке окна элемента управления. Для согласованности тематическим разработчики приложений могут захотеть сделать этот значок похожим на изображение, представляющее элемент управления в каталоге элементов управления веб-части (изображение, на которое ссылается <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойство).  
  
 Так как она реализована в наборе элементов управления веб-части <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> , это свойство может быть персонализировано конечными пользователями для изменения изображения или значка, отображаемого в заголовке окна элемента управления.  
  
   
  
## Examples  
 В следующем примере кода показано декларативное и программное использование <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойства. Полный исходный код для примера см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPart> «пример» в обзоре класса.  
  
 В первой части примера кода показано, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#6)]
 [!code-vb[WebParts_IWebPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#6)]  
  
 Во второй части примера кода демонстрируется метод в пользовательском элементе управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойства, когда пользователь выбирает соответствующее имя свойства из переключателей на странице, устанавливает новое значение в текстовом поле и затем нажимает кнопку **Обновить** .  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части примера кода показано, как на элемент управления ссылается <xref:System.Web.UI.WebControls.WebParts.IWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> пользовательский элемент управления, реализующий интерфейс, и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойство задается декларативно на элементе управления. Обратите внимание, что если не указать URL-адрес для реального изображения, в заголовке окна появится заполнитель для значка.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес для дополнительных сведений об элементе управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, представляющая URL-адреса для дополнительных сведений об элементе управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При назначении URL-адреса <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойств заголовок элемента управления превращается в ссылку. Это свойство предназначено для предоставления конечным пользователям удобного способа доступа к дополнительным сведениям об элементе управления. Дополнительные сведения могут предоставлять данные об авторских правах, контактные данные, сведения об авторе элемента управления или сводку по назначению элемента управления.  
  
> [!NOTE]
>  Как правило, для связи с содержимым справки не используется <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойство. Лучший способ предоставить ссылку на справку по элементу управления — это использовать <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано декларативное и программное использование <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойства. Полный исходный код для примера см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPart> «пример» в обзоре класса.  
  
 В первой части примера кода показано, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#7)]
 [!code-vb[WebParts_IWebPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#7)]  
  
 Во второй части примера кода демонстрируется метод в пользовательском элементе управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойства, когда пользователь выбирает соответствующее имя свойства из переключателей на странице, устанавливает новое значение в текстовом поле и затем нажимает кнопку **Обновить** .  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части примера кода показано, как на элемент управления ссылается <xref:System.Web.UI.WebControls.WebParts.IWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> пользовательский элемент управления, реализующий интерфейс, и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойство задается декларативно на элементе управления. Обратите внимание, что если не указать URL-адрес для реальной страницы, а затем пользователь щелкнет ссылку в заголовке окна, появится сообщение об ошибке.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
