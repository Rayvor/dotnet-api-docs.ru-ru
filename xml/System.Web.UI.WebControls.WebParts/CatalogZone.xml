<Type Name="CatalogZone" FullName="System.Web.UI.WebControls.WebParts.CatalogZone">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cef57369c67df3c744525c16314e7261b734f49a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69402035" /></Metadata><TypeSignature Language="C#" Value="public class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogZone extends System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZone" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogZone&#xA;Inherits CatalogZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZone : System::Web::UI::WebControls::WebParts::CatalogZoneBase" />
  <TypeSignature Language="F#" Value="type CatalogZone = class&#xA;    inherit CatalogZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Служит основным элементом управления в наборе элементов управления веб-частей для размещения элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> на веб-странице.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В наборе элементов управления веб-части зона — это область на веб-странице, которая содержит элементы управления веб-части. Зона веб-части создается элементом управления зоны, который является типом <xref:System.Web.UI.WebControls.CompositeControl> , предназначенным для хранения других элементов управления. Основными функциями зоны являются размещение элементов управления, которые она содержит, и предоставление общего пользовательского интерфейса для этих элементов управления. Общие сведения о зонах и их использовании в веб-части приложениях см. в разделе Базовый <xref:System.Web.UI.WebControls.WebParts.WebZone> класс и [Общие сведения о наборе элементов управления веб-части](https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)).  
  
 Ключевой особенностью элементов управления веб-части является то, что они позволяют конечным пользователям изменять (или персонализировать) веб-страницы в соответствии с их предпочтениями и сохранять персонализированные параметры для будущих сеансов браузера. Одним из аспектов изменения веб-части страниц является возможность добавлять <xref:System.Web.UI.WebControls.WebParts.WebPart> элементы управления или другие серверные элементы управления на страницу веб-части. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Элемент управления предоставляет список или каталог элементов управления, которые пользователи могут добавлять на страницу.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Элемент управления является одним из основных элементов управления в наборе элементов управления веб-части. Он является производным от <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> класса, и большая часть его поведения наследуется от этого класса. Класс <xref:System.Web.UI.WebControls.WebParts.CatalogZone> , по сути, добавляет в базовый класс шаблон зоны, который является реализацией <xref:System.Web.UI.ITemplate> интерфейса. Шаблон зоны позволяет разработчикам декларативно добавлять <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления в зону в формате сохранения страницы.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.WebParts.CatalogPart> <xref:System.Web.UI.WebControls.WebParts.CatalogPart> <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Зона может содержать только элементы управления, и наоборот, элементы управления могут находиться только в зонах, <xref:System.Web.UI.WebControls.WebParts.CatalogZone>производных от класса, например. <xref:System.Web.UI.WebControls.WebParts.CatalogZone>  
  
 Элемент управления отображается только в том случае, если пользователь переключает веб-страницу в режим отображения<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>каталога (). <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Каталог может содержать несколько типов <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления. Каждый <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элемент управления — это тип контейнера, который содержит элементы управления сервера, которые пользователи могут добавлять на страницу. <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Элементы управления отличаются в зависимости от того, откуда поступают серверные элементы управления, которые они содержат. В следующей таблице перечислены <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления, предоставляемые набором элементов управления веб-части, а также типы элементов управления сервера, которые он содержит.  
  
|Элемент управления|Описание|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Хранит ссылки на элементы управления, закрытые на странице. Эти элементы управления можно повторно открыть (добавить обратно на страницу) пользователями.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Содержит ссылки на элементы управления, которые объявляются в веб-частином каталоге в разметке веб-страницы. Пользователи могут добавлять эти элементы управления на веб-страницу.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Предоставляет пользовательский интерфейс для отправки файла определения (XML-файл с расширением. Расширение WebPart и заданный формат, который содержит сведения о состоянии для элемента управления в каталоге, чтобы элемент управления можно было добавить на веб-страницу.|  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Поскольку класс добавляет только шаблон зоны к поведению своего базового класса, он имеет несколько элементов. Конструктор является конструктором без параметров. с его помощью можно инициализировать новый экземпляр <xref:System.Web.UI.WebControls.WebParts.CatalogZone> класса. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> Свойство получает или задает ссылку <xref:System.Web.UI.ITemplate> на объект, содержащий элементы управления для зоны. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Метод является критически важным. Он переопределяет базовый метод для создания коллекции всех <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления, содержащихся в шаблоне зоны.  
  
> [!NOTE]
>  Для правильной работы кнопок <xref:System.Web.UI.WebControls.WebParts.CatalogZone> в пользовательском интерфейсе требуются сценарии на стороне клиента. Если в браузере отключено создание скриптов, пользователь не сможет выполнять действия через <xref:System.Web.UI.WebControls.WebParts.CatalogZone> пользовательский интерфейс.  
  
## <a name="accessibility"></a>Специальные возможности  
 Разметка, отображаемая по умолчанию для этого элемента управления, может не соответствовать стандартам специальных возможностей, таким как рекомендации по обеспечению доступности веб-содержимого 1,0 (WCAG) с приоритетом 1. Дополнительные сведения о поддержке специальных возможностей для этого элемента управления см. в разделе [ASP.NET Controls and Accessibility](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 В следующем примере кода показано декларативное и программное использование <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемента управления. Пример кода состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы экрана на веб-странице.  
  
-   Файл с исходным кодом для пользовательского <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемента управления и пользовательский <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления, который импортируется по каталогу и добавляется на веб-страницу.  
  
-   Веб-страница, объявляющая пользовательский элемент управления и пользовательский <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемент управления.  
  
-   Пояснения к запуску примера.  
  
 Первая часть этого примера кода — это пользовательский элемент управления, позволяющий пользователям изменять режимы экрана на веб-странице. Дополнительные сведения о режимах вывода и описание исходного кода в этом элементе управления см. в [разделе Пошаговое руководство. Изменение режима экрана на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/displaymodemenucs.ascx#7)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/displaymodemenuvb.ascx#7)]  
  
 Вторая часть примера кода содержит код для пользовательских <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элементов управления и. <xref:System.Web.UI.WebControls.WebParts.WebPart> Код для <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемента управления демонстрирует наследование <xref:System.Web.UI.WebControls.WebParts.CatalogZone> от класса и настройку его свойств путем установки некоторых значений свойств по умолчанию в конструкторе. Исходный код также демонстрирует создание пользовательского <xref:System.Web.UI.WebControls.WebParts.WebPart> класса с именем. `TextDisplayWebPart` Это элемент управления, связанный с. Файл описания WebPart, который будет импортирован как часть этого примера кода. После импорта файла описания с помощью <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления на веб-странице вы сможете `TextDisplayWebPart` добавить элемент управления на страницу, предварительно настроенный в файле описания.  
  
 Для выполнения примера кода необходимо скомпилировать этот исходный код. Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок. Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения. В этом примере кода используется динамическая компиляция, поэтому если вы хотите выполнить этот пример таким образом, присвойте файлу исходного кода имя и добавьте его во вложенную папку App_Code корневого каталога веб-приложения. Пошаговое руководство, в котором демонстрируются оба метода компиляции [, см. в разделе Пошаговое руководство. Разработка и использование пользовательского серверного веб-](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)элемента управления.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 Третья часть примера кода — это веб-страница, содержащая элементы управления. Он содержит `Register` директиву для пользовательского элемента управления, а другой — для исходного файла с пользовательскими элементами управления. Обратите внимание, что во второй директиве она не применяет имя сборки, так как в примере не используется сборка, она использует динамическую компиляцию с исходным кодом, помещенным во вложенную папку App_Code. Веб-страница объявляет <xref:System.Web.UI.WebControls.WebParts.WebPartZone> элемент управления и в его дочернем `<zonetemplate>` элементе объявляет <xref:System.Web.UI.WebControls.BulletedList> элемент управления. Хотя это стандартный элемент управления ASP.NET, он будет иметь полную веб-частиную функциональность во время выполнения, поскольку <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемент управления заключает в оболочку любой серверный элемент управления, помещенный <xref:System.Web.UI.WebControls.WebParts.WebPartZone> в <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> объект, чтобы другие серверные элементы управления могли участвовать в Интернете. Части приложений. Кроме того, в этой зоне объявлен пользовательский <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления `TextDisplayWebPart`с именем. Обратите внимание, что этот элемент управления `ExportMode="All"` имеет атрибут, объявленный для него. Это позволяет экспортировать. Файл описания WebPart, содержащий значения свойств элемента управления, которые могут быть импортированы другими пользователями для добавления предварительно настроенного элемента управления на другие веб-страницы.  
  
> [!NOTE]
>  Чтобы пользователи веб-частиного приложения могли экспортировать файл описания для <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, необходимо также включить функцию экспорта в веб-приложении, `enableExport="true"` добавив атрибут к `<webParts>` элементу (который является дочерним `<system.web>`элементомэлементаэлемент) в файле Web. config. Экспорт по умолчанию отключен, поэтому если вы еще не включили экспорт для своего приложения, измените файл Web. config и выполните его сейчас.  
  
 На веб-странице также объявляется пользовательский <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемент управления и, внутри него `<zonetemplate>` , элемент, содержащий <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемент управления. Пользователь будет использовать этот элемент управления во время выполнения для импорта. Файл описания веб-части для <xref:System.Web.UI.WebControls.WebParts.WebPart> пользовательского элемента управления.  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogzonevb.aspx#2)]  
  
 Теперь запустите пример кода. Загрузите веб-страницу в браузере. Первым шагом является экспорт. Файл описания веб-части `TextDisplayWebPart` для элемента управления. Щелкните меню команд в пользовательском элементе управления (представленной стрелкой вниз в заголовке окна) и нажмите кнопку **Экспорт**. Следуйте инструкциям, чтобы сохранить файл описания для элемента управления. Откройте. Файл описания WebPart в редакторе и изменить значение текста свойства Title. Найдите элемент с атрибутом `name="Title"`и измените текст заголовка, содержащийся между открывающим и закрывающим `<property>` тегами. `<property>` Теперь закройте веб-страницу и измените источник страницы в редакторе. Удалите элемент объявления элемента управления, а затем сохраните и закройте файл. `<aspSample:TextDisplayWebPart>`  
  
 Снова загрузите веб-страницу в браузере. `TextDisplayWebPart` Элемент управления не должен отображаться, так как он был удален. Используйте раскрывающийся список **режим экрана** и выберите **Каталог** , чтобы переключить страницу в режим каталога. Обратите внимание, <xref:System.Web.UI.WebControls.WebParts.CatalogZone> что отображается пользовательский элемент управления вместе <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> с элементом управления. Нажмите кнопку **Обзор** , чтобы найти. Файл описания веб-части, экспортированный `TextDisplayWebPart` для элемента управления. Можно нажать кнопку **Отправить**, установить флажок рядом с импортированным элементом управления и нажать кнопку **Добавить** , чтобы добавить его на страницу. Нажмите кнопку **Закрыть каталог** , чтобы вернуть страницу в нормальный режим просмотра. Импортированный элемент управления должен отобразиться на странице, а заголовок, отображаемый в заголовке окна элемента управления, должен быть текстом заголовка, добавленным в. Файл описания веб-части.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">для работы в размещенной на сервере среде. Значение запроса: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; значение разрешения: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <block subset="none" type="overrides"><para>Можно создавать пользовательские <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> классы, если требуется больший контроль над отрисовкой и поведением пользовательского интерфейса каталога. Если не требуется предоставлять пользователям элемента управления возможность декларативного добавления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> элементов управления, можно напрямую наследовать <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> от класса. Если требуется, чтобы элементы управления добавлялись декларативно, простой подход заключается в наследовании от <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> класса, так как он предоставляет шаблон основной зоны.  
  
<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> При наследовании от класса можно <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /> переопределить метод и использовать метод для <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />добавления пользовательских элементов управления в, если требуется более программное управление добавлением пользовательских <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> элементов управления в зону. .</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)">Общие сведения о наборе элементов управления веб-части</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Общие сведения о персонализации веб-части</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку элемент управления реализует шаблон зоны, он обычно используется декларативно, и вам редко приходится создавать новый экземпляр класса <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> с помощью конструктора. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Однако при наследовании от <xref:System.Web.UI.WebControls.WebParts.CatalogZone> класса для создания пользовательской зоны может потребоваться использовать конструктор для инициализации некоторых значений свойств и настройки его внешнего вида.  
  
   
  
## Examples  
 В следующем примере кода показано программное использование <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> конструктора в пользовательском <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элементе управления. Конструктор используется для инициализации некоторых значений свойств по умолчанию для элемента управления. В следующем коде показан пользовательский <xref:System.Web.UI.WebControls.WebParts.CatalogZone> класс с конструктором, объявленным рядом с верхней. Полный код и инструкции, необходимые для настройки и выполнения примера, см. в разделе "пример" в <xref:System.Web.UI.WebControls.WebParts.CatalogZone> обзоре класса.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="override this.CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZone.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает экземпляр каждого типа <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, объявленного в зоне.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> со ссылками на все элементы управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> в зоне.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод является критическим методом, поскольку когда пользователь переключает страницу в режим просмотра каталога, этот метод создает <xref:System.Web.UI.WebControls.WebParts.CatalogPart> все элементы управления, составляющие каталог веб-части. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A>  
  
 Метод в классе, поставляемом с набором элементов управления веб-части <xref:System.Web.UI.WebControls.WebParts.CatalogPart> , может создавать любой серверный элемент управления, наследующий от класса. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Таким образом, если создать пользовательский <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элемент управления и объявить его на странице <xref:System.Web.UI.WebControls.WebParts.CatalogZone> в элементе управления, этот метод создаст элемент управления, когда пользователь переключается на страницу в режим каталога.  
  
 Однако по различным причинам может потребоваться контроль над <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> методом. Может потребоваться создать только определенные <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления. Например, предположим, что вы создаете набор пользовательских <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления, имеющих единообразный внешний вид и относящихся к одному продукту или организации. Если вы хотите, чтобы разработчики страниц были ограничены использованием пользовательских элементов управления в каталоге, следует наследовать от <xref:System.Web.UI.WebControls.WebParts.CatalogZone> класса, <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> переопределить метод и разрешить методу создавать только элементы управления того же типа, что и пользовательские элементы управления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Текущий элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> не имеет идентификатора.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.CatalogZone))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает шаблон, в котором будут содержаться дочерние элементы управления для элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> в формате сохранения страницы.</summary>
        <value>Объект <see cref="T:System.Web.UI.ITemplate" />, выступающий в качестве контейнера для дочерних элементов управления в зоне.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство ссылается на шаблон типа <xref:System.Web.UI.ITemplate> , который используется для хранения <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления в зоне. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> Шаблон зоны позволяет разработчикам страниц объявлять <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления, которые они хотят использовать в формате сохраняемости, вместо того, чтобы создавать все элементы управления программным способом.  
  
 Метод доступа set для <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> свойства <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> вызывает метод, <xref:System.Web.UI.WebControls.WebParts.CatalogPart> который вызывает принудительное обновление коллекции элементов управления, объявленных в шаблоне зоны на странице. Это гарантирует, что коллекция элементов управления, на которые ссылается зона, остается актуальной всякий раз, когда пользователь изменяет элементы управления, фактически объявленные в шаблоне на странице.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если вы хотите создать пользовательскую <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> зону, но планируете <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> создавать элементы управления программным способом, не позволяя разработчикам страниц объявлять их, не требуется поддержка шаблонов зон, и вы <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> можете наследовать непосредственно от см.</para></block>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Элементы управления веб-части ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
