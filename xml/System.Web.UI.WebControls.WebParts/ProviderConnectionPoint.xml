<Type Name="ProviderConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64b02411247bc4383c9d0ba96309240f908373f9" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70637536" /></Metadata><TypeSignature Language="C#" Value="public class ProviderConnectionPoint : System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ProviderConnectionPoint extends System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class ProviderConnectionPoint&#xA;Inherits ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProviderConnectionPoint : System::Web::UI::WebControls::WebParts::ConnectionPoint" />
  <TypeSignature Language="F#" Value="type ProviderConnectionPoint = class&#xA;    inherit ConnectionPoint" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ConnectionPoint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d63db-101">Определяет объект точки подключения, позволяющий серверному элементу управления действовать в качестве поставщика, чтобы сформировать подключение к потребителю.</span><span class="sxs-lookup"><span data-stu-id="d63db-101">Defines a connection point object that enables a server control acting as a provider to form a connection with a consumer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d63db-102">Каждый элемент управления в каждом веб-части соединении между двумя серверными элементами управления должен иметь (среди прочих требований) связанный объект точки соединения, который позволяет ему подключаться к другому элементу управления и предоставлять или использовать данные в зависимости от того, является ли элемент управления назначается поставщиком или потребителем для соединения.</span><span class="sxs-lookup"><span data-stu-id="d63db-102">In every Web Parts connection between two server controls, each control must have (among other requirements) an associated connection point object that enables it to connect to the other control and to either provide or consume data, depending on whether the control is designated as the provider or consumer for the connection.</span></span> <span data-ttu-id="d63db-103"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Объект в целом содержит сведения о том, как элемент управления может подключаться к другому элементу управления и типу данных, к которым он может предоставлять общий доступ.</span><span class="sxs-lookup"><span data-stu-id="d63db-103">A <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> object in general contains the details for how a control can connect to another control and the type of data it can share.</span></span> <span data-ttu-id="d63db-104">Для элемента управления, действующего в качестве поставщика в соединении, его точка соединения должна <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> быть объектом.</span><span class="sxs-lookup"><span data-stu-id="d63db-104">For a control acting as the provider in a connection, its connection point must be a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span> <span data-ttu-id="d63db-105">Дополнительные сведения о веб-части подключениях и точках подключения см. в подразделах, перечисленных в разделе см. также ниже.</span><span class="sxs-lookup"><span data-stu-id="d63db-105">For details on Web Parts connections and connection points, see the topics listed in the See Also section below.</span></span>  
  
 <span data-ttu-id="d63db-106">Чтобы создать <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объект, необходимо выполнить несколько действий.</span><span class="sxs-lookup"><span data-stu-id="d63db-106">To create a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, several steps are required:</span></span>  
  
1.  <span data-ttu-id="d63db-107">Создайте интерфейс.</span><span class="sxs-lookup"><span data-stu-id="d63db-107">Create an interface.</span></span> <span data-ttu-id="d63db-108">Когда поставщик использует данные совместно с потребителем, он делает это, получая экземпляр интерфейса и возвращая этот экземпляр потребителю.</span><span class="sxs-lookup"><span data-stu-id="d63db-108">When a provider shares data with a consumer, it does so by getting an instance of an interface, and returning that instance to a consumer.</span></span>  
  
2.  <span data-ttu-id="d63db-109">Реализуйте интерфейс в поставщике.</span><span class="sxs-lookup"><span data-stu-id="d63db-109">Implement the interface in a provider.</span></span> <span data-ttu-id="d63db-110">Можно использовать <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> или другой серверный элемент управления (любой тип серверного элемента управления в зоне), который будет поставщиком должен реализовывать интерфейс, созданный на первом шаге. <xref:System.Web.UI.WebControls.WebParts.WebPart></span><span class="sxs-lookup"><span data-stu-id="d63db-110">A <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control (any type of server control in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone can be used) that will be the provider must implement the interface created in the first step.</span></span>  
  
3.  <span data-ttu-id="d63db-111">Определяет метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d63db-111">Identify a callback method.</span></span> <span data-ttu-id="d63db-112">Для установления соединения метод в поставщике должен быть идентифицирован как метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d63db-112">A method in the provider must be identified as the callback method to establish a connection.</span></span> <span data-ttu-id="d63db-113">Этот метод возвращает экземпляр реализованного интерфейса для потребителя.</span><span class="sxs-lookup"><span data-stu-id="d63db-113">This method returns an instance of the implemented interface to a consumer.</span></span> <span data-ttu-id="d63db-114">Веб-части подход для идентификации метода обратного вызова в поставщике заключается в добавлении `ConnectionProvider` атрибута метаданных (определенного <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> классом) в метод, возвращающий экземпляр интерфейса.</span><span class="sxs-lookup"><span data-stu-id="d63db-114">The Web Parts approach for identifying a callback method in the provider is to add a `ConnectionProvider` metadata attribute (defined by the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> class) to the method that returns the interface instance.</span></span> <span data-ttu-id="d63db-115">При добавлении атрибута единственным обязательным параметром является отображаемое имя, используемое для точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-115">When the attribute is added, the only required parameter is a display name to use for the provider connection point.</span></span> <span data-ttu-id="d63db-116">Кроме того, можно добавить необязательные параметры, например идентификатор точки подключения.</span><span class="sxs-lookup"><span data-stu-id="d63db-116">Optional parameters can also be added, such as an ID for the connection point.</span></span>  
  
 <span data-ttu-id="d63db-117">После того, как элемент управления будет функционировать в качестве поставщика, элемент управления может участвовать в соединениях (предполагая, что элемент управления "потребитель" аналогичен и доступен).</span><span class="sxs-lookup"><span data-stu-id="d63db-117">After a control has been equipped to act as a provider, the control can participate in connections (assuming that a consumer control is similarly equipped and available).</span></span> <span data-ttu-id="d63db-118">Чтобы создать статическое, декларативное соединение в разметке веб-страницы, разработчики могут использовать `<asp:webpartconnection>` элемент.</span><span class="sxs-lookup"><span data-stu-id="d63db-118">To create a static, declarative connection in the markup of a Web page, developers can use the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="d63db-119">Если атрибут в исходном коде поставщика, определяющий метод обратного вызова, задает идентификатор для точки подключения, то это значение должно быть присвоено `ProviderConnectionPointID` атрибуту в `<asp:webpartconnection>` элементе на странице. `ConnectionProvider`</span><span class="sxs-lookup"><span data-stu-id="d63db-119">If the `ConnectionProvider` attribute in the provider source code that identifies the callback method specifies an ID for the connection point, then that value must be assigned to the `ProviderConnectionPointID` attribute in the `<asp:webpartconnection>` element on a page.</span></span> <span data-ttu-id="d63db-120">Одной из причин, по которой разработчик может указать идентификатор для точки подключения поставщика, является наличие нескольких точек подключения в элементе управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-120">One reason that a developer might specify an ID for a provider connection point is if there are multiple connection points in the provider control.</span></span> <span data-ttu-id="d63db-121">Если идентификатор не указан для точки подключения поставщика в элементе управления поставщика, значение не обязательно должно быть назначено `ProviderConnectionPointID` атрибуту на странице, так как соединение будет создано с использованием значения по умолчанию, полученного из <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> полями.</span><span class="sxs-lookup"><span data-stu-id="d63db-121">If an ID is not specified for the provider connection point in the provider control, a value does not have to be assigned to the `ProviderConnectionPointID` attribute in the page either, because the connection will be created using a default value obtained from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field.</span></span>  
  
 <span data-ttu-id="d63db-122">Чтобы создать соединение в коде, разработчики должны создать новый <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объект, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> вызвав метод и передав ему идентификатор элемента управления поставщика, а также идентификатор или индекс определенного <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объекта в элементе управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-122">To create a connection in code, developers must create a new <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method and passing to it the ID of the provider control, along with the ID or index of the defined <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object in the provider control.</span></span> <span data-ttu-id="d63db-123">Возвращаемый <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объект, а также ссылка на элемент управления поставщика, ссылка на элемент управления потребителя и соответствующий <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объект передаются <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> в метод для создания нового <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> объекта.</span><span class="sxs-lookup"><span data-stu-id="d63db-123">The returned <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, along with a reference to the provider control, a reference to the consumer control, and a corresponding <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object, are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create a new <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="d63db-124">Несмотря на то, что разработчики могут использовать точки подключения поставщика как часть установления соединений декларативно или программно, пользователи также могут взаимодействовать с точками подключения поставщика для установления соединений через пользовательский интерфейс.</span><span class="sxs-lookup"><span data-stu-id="d63db-124">Although developers can use provider connection points as part of establishing connections either declaratively or programmatically, users can also interact with provider connection points to establish connections through the user interface (UI).</span></span> <span data-ttu-id="d63db-125">Если разработчики объявляют <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> элемент управления на веб-странице, он предоставляет пользователям пользовательский интерфейс времени выполнения для создания подключений.</span><span class="sxs-lookup"><span data-stu-id="d63db-125">If developers declare a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control on a Web page, it provides a run-time UI for users to create connections.</span></span> <span data-ttu-id="d63db-126">Если пользователь выбирает элемент управления "потребитель" в качестве начальной точки для установления соединения, щелкнув его команду подключения (он мог бы также выбрать поставщик; в этом случае нет разницы в результирующем соединении), в пользовательском интерфейсе он увидит раскрывающийся список с элементом управления отображаемое имя доступной точки подключения поставщика (или указывает, если имеется несколько).</span><span class="sxs-lookup"><span data-stu-id="d63db-126">If users choose the consumer control as the starting point for establishing the connection by clicking its connect verb (they could also choose the provider; there is no difference in the resulting connection), in the UI they will see a drop-down list control with the display name of the available provider connection point (or points if there are multiple ones).</span></span> <span data-ttu-id="d63db-127">Чтобы создать подключение, пользователи должны выбрать точку подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-127">Users must select a provider connection point to create a connection.</span></span>  
  
 <span data-ttu-id="d63db-128">Объект напрямую связывается с конкретным элементом управления поставщика и сохраняет сведения о соединении в свойствах, которые он наследует от базового <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> класса. <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint></span><span class="sxs-lookup"><span data-stu-id="d63db-128">A <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object associates directly with a specific provider control, and stores details about a connection in the properties it inherits from the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class.</span></span> <span data-ttu-id="d63db-129">Например, в унаследованном <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> свойстве точка подключения поставщика сохраняет тип интерфейса, возвращаемого поставщиком.</span><span class="sxs-lookup"><span data-stu-id="d63db-129">For example, in the inherited <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property, a provider connection point keeps the type of interface returned by the provider.</span></span> <span data-ttu-id="d63db-130">Если поставщик и потребитель в соединении работают с одним и тем же типом интерфейса, элементы управления совместимы и могут создавать прямое соединение.</span><span class="sxs-lookup"><span data-stu-id="d63db-130">If the provider and consumer in a connection both work with the same interface type, the controls are compatible and capable of forming a direct connection.</span></span> <span data-ttu-id="d63db-131">Если поставщик и потребитель не могут работать с одним и тем же типом интерфейса, они несовместимы и должны использовать <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> объект для преобразования <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> значения точки подключения поставщика в тип, с которым может работать потребитель.</span><span class="sxs-lookup"><span data-stu-id="d63db-131">If the provider and consumer cannot work with the same interface type, they are incompatible and must use a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object to translate the provider connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> value into a type that the consumer can work with.</span></span> <span data-ttu-id="d63db-132">Еще одним важным наследуемым <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> свойством является свойство, которое предоставляет понятное имя, отображаемое в пользовательском интерфейсе, чтобы пользователи могли выбрать точку подключения поставщика при создании подключений.</span><span class="sxs-lookup"><span data-stu-id="d63db-132">Another important inherited property is the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property, which provides a friendly name to display in the UI for users to choose a provider connection point when creating connections.</span></span> <span data-ttu-id="d63db-133">Отображаемое имя является обязательным параметром, когда разработчики добавляют `ConnectionProvider` атрибут в метод обратного вызова в элементе управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-133">The display name is the required parameter when developers add a `ConnectionProvider` attribute to the callback method in a provider control.</span></span> <span data-ttu-id="d63db-134">Унаследованное <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> свойство также полезно, как указано выше, так как оно предоставляет уникальный идентификатор для точки подключения поставщика в случае, когда у поставщика есть несколько точек подключения.</span><span class="sxs-lookup"><span data-stu-id="d63db-134">The inherited <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property is also useful, as indicated above, because it provides a unique identifier for a provider connection point in the event that a provider has multiple connection points.</span></span> <span data-ttu-id="d63db-135">В поставщике может быть <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> определено несколько объектов, и в данном случае, когда разработчики `ConnectionProvider` добавляют атрибут к методу, они должны указать значение идентификатора, чтобы отличать каждую точку соединения.</span><span class="sxs-lookup"><span data-stu-id="d63db-135">A provider can have multiple <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> objects defined in it, and in this case, when developers add the `ConnectionProvider` attribute to a method, they should specify an ID value to distinguish each connection point.</span></span> <span data-ttu-id="d63db-136">Еще одним важным наследуемым свойством является <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> свойство, которое указывает, может ли точка подключения поставщика одновременно подключаться к нескольким потребителям.</span><span class="sxs-lookup"><span data-stu-id="d63db-136">One other notable inherited property is the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property, which indicates whether a provider connection point can connect simultaneously to multiple consumers.</span></span> <span data-ttu-id="d63db-137">Значение этого свойства по `true` умолчанию используется для точек соединения поставщика (в `false` то время как по умолчанию используется для точек подключения потребителя).</span><span class="sxs-lookup"><span data-stu-id="d63db-137">This property value is `true` by default for provider connection points (whereas it defaults to `false` for consumer connection points).</span></span>  
  
 <span data-ttu-id="d63db-138">Класс добавляет несколько уникальных методов к членам, которые он наследует <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> от класса. <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint></span><span class="sxs-lookup"><span data-stu-id="d63db-138">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> class adds several unique methods to the members it inherits from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class.</span></span> <span data-ttu-id="d63db-139"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> Метод получает экземпляр интерфейса, который метод обратного вызова будет возвращать потребителям.</span><span class="sxs-lookup"><span data-stu-id="d63db-139">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> method retrieves an instance of the interface that the callback method will return to consumers.</span></span> <span data-ttu-id="d63db-140"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A> Метод получает дополнительные пользовательские интерфейсы, которые являются частью существующего соединения, но не являются интерфейсами, используемыми для установления соединения.</span><span class="sxs-lookup"><span data-stu-id="d63db-140">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A> method retrieves additional consumer interfaces that are part of an existing connection, but are not the interfaces used to establish the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d63db-141">В следующем примере кода показаны простые способы создания соединения декларативно, программно или через пользовательский интерфейс в каждом случае использования точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-141">The following code example shows simple ways to create a connection declaratively, programmatically, or through the UI, in each case making use of a provider connection point.</span></span>  
  
 <span data-ttu-id="d63db-142">Пример состоит из четырех частей:</span><span class="sxs-lookup"><span data-stu-id="d63db-142">The example has four parts:</span></span>  
  
-   <span data-ttu-id="d63db-143">Пользовательский элемент управления, позволяющий изменять режим просмотра веб-части на странице.</span><span class="sxs-lookup"><span data-stu-id="d63db-143">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="d63db-144">Исходный код для интерфейса и два <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления, выступающих в качестве поставщика и потребителя для соединения.</span><span class="sxs-lookup"><span data-stu-id="d63db-144">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="d63db-145">Веб-страница для размещения всех элементов управления и выполнения примера кода.</span><span class="sxs-lookup"><span data-stu-id="d63db-145">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="d63db-146">Объяснение того, как запустить пример страницы.</span><span class="sxs-lookup"><span data-stu-id="d63db-146">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="d63db-147">Первая часть этого примера кода — это пользовательский элемент управления, позволяющий пользователям изменять режимы экрана на веб-странице.</span><span class="sxs-lookup"><span data-stu-id="d63db-147">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="d63db-148">Сохраните следующий исходный код в ASCX-файл и присвойте ему имя файла, присвоенное `Src` атрибуту `Register` директивы для этого пользовательского элемента управления, который находится ближе к верхней части страницы размещения.</span><span class="sxs-lookup"><span data-stu-id="d63db-148">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="d63db-149">Дополнительные сведения о режимах вывода и описание исходного кода в этом элементе управления см. в разделе [Пошаговое руководство. изменение режимов экрана на веб-части странице](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span><span class="sxs-lookup"><span data-stu-id="d63db-149">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="d63db-150">Вторая часть примера кода — это исходный код для интерфейса и элементов управления.</span><span class="sxs-lookup"><span data-stu-id="d63db-150">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="d63db-151">Исходный файл содержит простой интерфейс с именем `IZipCode`.</span><span class="sxs-lookup"><span data-stu-id="d63db-151">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="d63db-152">Также <xref:System.Web.UI.WebControls.WebParts.WebPart> существует класс с именем `ZipCodeWebPart` , который реализует интерфейс и выступает в качестве элемента управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-152">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="d63db-153">Его `ProvideIZipCode` метод — это метод обратного вызова, реализующий член интерфейса.</span><span class="sxs-lookup"><span data-stu-id="d63db-153">Its `ProvideIZipCode` method is the callback method that implements the interface's only member.</span></span> <span data-ttu-id="d63db-154">Метод просто возвращает экземпляр интерфейса.</span><span class="sxs-lookup"><span data-stu-id="d63db-154">The method simply returns an instance of the interface.</span></span> <span data-ttu-id="d63db-155">Обратите внимание, что метод помечен `ConnectionProvider` атрибутом в его метаданных.</span><span class="sxs-lookup"><span data-stu-id="d63db-155">Note that the method is marked with a `ConnectionProvider` attribute in its metadata.</span></span> <span data-ttu-id="d63db-156">Это механизм идентификации метода в качестве метода обратного вызова для точки соединения поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-156">This is the mechanism for identifying the method as the callback method for the provider's connection point.</span></span> <span data-ttu-id="d63db-157">Другой <xref:System.Web.UI.WebControls.WebParts.WebPart> класс `WeatherWebPart` называется, и он выступает в качестве потребителя для соединения.</span><span class="sxs-lookup"><span data-stu-id="d63db-157">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="d63db-158">Этот класс имеет метод с именем `GetZipCode` , который получает экземпляр `IZipCode` интерфейса из элемента управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-158">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="d63db-159">Обратите внимание, что этот метод помечен как метод точки подключения потребителя с `ConnectionConsumer` атрибутом в его метаданных.</span><span class="sxs-lookup"><span data-stu-id="d63db-159">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span> <span data-ttu-id="d63db-160">Это механизм идентификации метода точки подключения в элементе управления потребителя.</span><span class="sxs-lookup"><span data-stu-id="d63db-160">This is the mechanism for identifying the connection point method in the consumer control.</span></span>  
  
 <span data-ttu-id="d63db-161">Для выполнения примера кода необходимо скомпилировать этот исходный код.</span><span class="sxs-lookup"><span data-stu-id="d63db-161">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="d63db-162">Его можно скомпилировать явным образом и разместить полученную сборку в папке Bin веб-сайта или в глобальном кэше сборок.</span><span class="sxs-lookup"><span data-stu-id="d63db-162">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="d63db-163">Кроме того, можно разместить исходный код в папке App_Code сайта, где он будет динамически компилироваться во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="d63db-163">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="d63db-164">В этом примере кода используется динамическая компиляция.</span><span class="sxs-lookup"><span data-stu-id="d63db-164">This code example uses dynamic compilation.</span></span> <span data-ttu-id="d63db-165">Пошаговое руководство, в котором показано, как выполнить компиляцию, см. в разделе [Пошаговое руководство. Разработка и использование пользовательского веб-элемента управления](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span><span class="sxs-lookup"><span data-stu-id="d63db-165">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="d63db-166">Третья часть примера кода — веб-страница.</span><span class="sxs-lookup"><span data-stu-id="d63db-166">The third part of the code example is the Web page.</span></span> <span data-ttu-id="d63db-167">В верхней части приведены `Register` директивы для регистрации пользовательских элементов управления, образующих соединение, и пользовательского элемента управления, который позволяет пользователям изменять режимы экрана на странице.</span><span class="sxs-lookup"><span data-stu-id="d63db-167">Near the top are `Register` directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page.</span></span> <span data-ttu-id="d63db-168">Само соединение создается декларативно в `<staticconnections>` элементе на странице.</span><span class="sxs-lookup"><span data-stu-id="d63db-168">The connection itself is created declaratively within the `<staticconnections>` element on the page.</span></span> <span data-ttu-id="d63db-169">Это демонстрирует один из способов создания соединения — Обратите внимание на `ProviderConnectionPointID` атрибут `<asp:webpartconnection>` в элементе.</span><span class="sxs-lookup"><span data-stu-id="d63db-169">This demonstrates one way of creating a connection--note the `ProviderConnectionPointID` attribute in the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="d63db-170">Можно также создать подключение программным способом. код для этого используется в `Button1_Click` методе.</span><span class="sxs-lookup"><span data-stu-id="d63db-170">You can also create the connection programmatically; the code for doing that is in the `Button1_Click` method.</span></span> <span data-ttu-id="d63db-171">В этом случае <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> создается объект, который затем передается в метод, который создает фактическое соединение.</span><span class="sxs-lookup"><span data-stu-id="d63db-171">In this case, a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object is created and then passed to a method that creates the actual connection.</span></span> <span data-ttu-id="d63db-172">Независимо от того, создается ли соединение декларативно или программно, точки соединения всегда должны быть указаны как для поставщика, так и для потребителя.</span><span class="sxs-lookup"><span data-stu-id="d63db-172">Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer.</span></span> <span data-ttu-id="d63db-173">Метод обращается к <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> объектам как для поставщика, так и для потребителя и записывает некоторые значения их свойств в метку на странице. `Button2_Click`</span><span class="sxs-lookup"><span data-stu-id="d63db-173">The `Button2_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects for both the provider and the consumer, and writes some of their property values to a label in the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 <span data-ttu-id="d63db-174">После загрузки страницы в браузере нажмите кнопку **сведения о точке соединения** .</span><span class="sxs-lookup"><span data-stu-id="d63db-174">After you load the page in a browser, click the **Connection Point Details** button.</span></span> <span data-ttu-id="d63db-175">Отобразятся сведения о точках подключения поставщика и потребителя, установленных в декларативном соединении.</span><span class="sxs-lookup"><span data-stu-id="d63db-175">Information about the provider and consumer connection points established in the declarative connection appears.</span></span> <span data-ttu-id="d63db-176">Затем с помощью раскрывающегося списка **режим экрана** переключите страницу в режим подключения.</span><span class="sxs-lookup"><span data-stu-id="d63db-176">Next, use the **Display Mode** drop-down control to switch the page into connect mode.</span></span> <span data-ttu-id="d63db-177">В меню команды<xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления **почтовый индекс почтового индекса** (представленного стрелкой вниз в заголовке окна) щелкните команду подключения.</span><span class="sxs-lookup"><span data-stu-id="d63db-177">On the verbs menu of the **ZIP Code Consumer**<xref:System.Web.UI.WebControls.WebParts.WebPart> control (represented by a downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="d63db-178">Открывается пользовательский интерфейс подключения, который `<asp:connectionszone>` автоматически создается элементом управления, объявленным на странице.</span><span class="sxs-lookup"><span data-stu-id="d63db-178">The connection UI appears, created automatically by the `<asp:connectionszone>` control declared in the page.</span></span> <span data-ttu-id="d63db-179">Это еще один способ создания соединения (через пользовательский интерфейс), а также декларативный и программный метод, описанный выше.</span><span class="sxs-lookup"><span data-stu-id="d63db-179">This is another way of creating a connection (through the UI), along with the declarative and programmatic methods discussed earlier.</span></span> <span data-ttu-id="d63db-180">Нажмите кнопку **Disconnect (отключить** ), чтобы завершить существующее статическое соединение.</span><span class="sxs-lookup"><span data-stu-id="d63db-180">Click the **Disconnect** button to terminate the existing static connection.</span></span> <span data-ttu-id="d63db-181">Щелкните ссылку **создать соединение с поставщиком** .</span><span class="sxs-lookup"><span data-stu-id="d63db-181">Click the **Create a Connection to a Provider** link.</span></span> <span data-ttu-id="d63db-182">Теперь в пользовательском интерфейсе отображается раскрывающийся список, содержащий отображаемое имя точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-182">The UI now displays a drop-down control that lists the provider connection point display name.</span></span> <span data-ttu-id="d63db-183">Выберите точку подключения в раскрывающемся списке и нажмите кнопку **Подключиться** , чтобы завершить подключение.</span><span class="sxs-lookup"><span data-stu-id="d63db-183">Select the connection point in the drop-down list, and then click **Connect** to complete the connection.</span></span> <span data-ttu-id="d63db-184">Затем снова нажмите кнопку **Отключить** .</span><span class="sxs-lookup"><span data-stu-id="d63db-184">Next, click **Disconnect** again.</span></span> <span data-ttu-id="d63db-185">Затем нажмите кнопку **динамического подключения** , чтобы создать подключение программным способом.</span><span class="sxs-lookup"><span data-stu-id="d63db-185">Then, click the **Dynamic Connection** button to create a connection programmatically.</span></span> <span data-ttu-id="d63db-186">Используйте элемент управления " **режим отображения** ", чтобы вернуть страницу в режим просмотра.</span><span class="sxs-lookup"><span data-stu-id="d63db-186">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="d63db-187">Снова нажмите кнопку **сведения о точке соединения** , чтобы еще раз указать сведения об объекте точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-187">Click the **Connection Point Details** button again, to once more indicate details about the provider connection point object.</span></span>  
  
 <span data-ttu-id="d63db-188">В примере демонстрируется установка соединения и использование точки подключения поставщика тремя способами: статическое соединение, объявленное в разметке веб-страницы. соединение, созданное в коде, в <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> котором использовался объект, и соединение, созданное пользователем через пользовательский интерфейс подключения.</span><span class="sxs-lookup"><span data-stu-id="d63db-188">The example has demonstrated establishing a connection and using a provider connection point in three ways: a static connection declared in the Web page markup; a connection created in code that used a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object; and a connection created by a user through the connection UI.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="d63db-189">Элементы управления веб-части ASP.NET</span><span class="sxs-lookup"><span data-stu-id="d63db-189">ASP.NET Web Parts Controls</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)"><span data-ttu-id="d63db-190">Общие сведения о веб-части подключениях</span><span class="sxs-lookup"><span data-stu-id="d63db-190">Web Parts Connections Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderConnectionPoint (System.Reflection.MethodInfo callbackMethod, Type interfaceType, Type controlType, string displayName, string id, bool allowsMultipleConnections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo callbackMethod, class System.Type interfaceType, class System.Type controlType, string displayName, string id, bool allowsMultipleConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackMethod As MethodInfo, interfaceType As Type, controlType As Type, displayName As String, id As String, allowsMultipleConnections As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProviderConnectionPoint(System::Reflection::MethodInfo ^ callbackMethod, Type ^ interfaceType, Type ^ controlType, System::String ^ displayName, System::String ^ id, bool allowsMultipleConnections);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.ProviderConnectionPoint : System.Reflection.MethodInfo * Type * Type * string * string * bool -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" Usage="new System.Web.UI.WebControls.WebParts.ProviderConnectionPoint (callbackMethod, interfaceType, controlType, displayName, id, allowsMultipleConnections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callbackMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="interfaceType" Type="System.Type" />
        <Parameter Name="controlType" Type="System.Type" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="allowsMultipleConnections" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callbackMethod"><span data-ttu-id="d63db-191">Метод в элементе управления поставщика, возвращающий экземпляр интерфейса потребителям для установления подключения.</span><span class="sxs-lookup"><span data-stu-id="d63db-191">The method in the provider control that returns an interface instance to consumers to establish a connection.</span></span></param>
        <param name="interfaceType"><span data-ttu-id="d63db-192">Объект <see cref="T:System.Type" /> интерфейса, который поставщик обслуживает для потребителей.</span><span class="sxs-lookup"><span data-stu-id="d63db-192">The <see cref="T:System.Type" /> of the interface that the provider serves to consumers.</span></span></param>
        <param name="controlType"><span data-ttu-id="d63db-193">Объект <see cref="T:System.Type" /> элемента управления поставщика, с которым сопоставлена точка подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-193">The <see cref="T:System.Type" /> of the provider control with which the provider connection point is associated.</span></span></param>
        <param name="displayName"><span data-ttu-id="d63db-194">Понятное отображаемое имя для точки подключения поставщика, которое видят пользователи в пользовательском интерфейсе подключения.</span><span class="sxs-lookup"><span data-stu-id="d63db-194">A friendly display name for the provider connection point that appears to users in the connection user interface (UI).</span></span></param>
        <param name="id"><span data-ttu-id="d63db-195">Уникальный идентификатор для точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-195">A unique identifier for the provider connection point.</span></span></param>
        <param name="allowsMultipleConnections"><span data-ttu-id="d63db-196">Логическое значение, указывающее может ли точка подключения поставщика иметь несколько одновременных подключений с потребителями.</span><span class="sxs-lookup"><span data-stu-id="d63db-196">A Boolean value indicating whether the provider connection point can have multiple simultaneous connections with consumers.</span></span></param>
        <summary><span data-ttu-id="d63db-197">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />.</span><span class="sxs-lookup"><span data-stu-id="d63db-197">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d63db-198"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.%23ctor%2A> Конструктор <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>  для класса просто вызывает базовый конструктор, передавая ему различные параметры и инициализирует базовый класс.</span><span class="sxs-lookup"><span data-stu-id="d63db-198">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.%23ctor%2A> constructor for the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> class simply calls the base constructor, passing to it the various parameters and initializing the base class.</span></span>  
  
 <span data-ttu-id="d63db-199">Конструктор базового класса проверяет количество параметров для точки соединения и может вызывать несколько исключений.</span><span class="sxs-lookup"><span data-stu-id="d63db-199">The base class constructor checks a number of the parameters for a connection point and can throw several exceptions.</span></span> <span data-ttu-id="d63db-200">Список возможных исключений см. в разделе исключения.</span><span class="sxs-lookup"><span data-stu-id="d63db-200">For a list of possible exceptions, see the Exceptions section.</span></span>  
  
 <span data-ttu-id="d63db-201">Можно вызвать <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.%23ctor%2A> конструктор, чтобы создать собственный экземпляр <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> класса.</span><span class="sxs-lookup"><span data-stu-id="d63db-201">You can call the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.%23ctor%2A> constructor to create your own instance of the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> class.</span></span> <span data-ttu-id="d63db-202">Однако в случаях, когда вы просто устанавливаете соединение и не расширяете класс, следует вызвать <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> метод, чтобы вернуть существующий объект точки соединения от поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-202">However, in cases where you are simply establishing a connection and not extending the class, you should call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method to return an existing connection point object from a provider.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d63db-203">В следующем примере кода показано, как выполнить наследование от <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> класса для создания настраиваемой точки подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-203">The following code example demonstrates how to derive from the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> class to create a custom provider connection point.</span></span>  
  
 <span data-ttu-id="d63db-204">Пример кода состоит из трех частей:</span><span class="sxs-lookup"><span data-stu-id="d63db-204">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="d63db-205">Исходный файл, содержащий элемент управления поставщика <xref:System.Web.UI.WebControls.WebParts.WebPart> , элемент управления получателя <xref:System.Web.UI.WebControls.WebParts.WebPart> и пользовательский <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объект.</span><span class="sxs-lookup"><span data-stu-id="d63db-205">A source file that contains a provider <xref:System.Web.UI.WebControls.WebParts.WebPart> control, a consumer <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and a custom <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span>  
  
-   <span data-ttu-id="d63db-206">Веб-страница, на которой размещены элементы управления в статическом соединении.</span><span class="sxs-lookup"><span data-stu-id="d63db-206">A Web page that hosts the controls in a static connection.</span></span>  
  
-   <span data-ttu-id="d63db-207">Объяснение того, как выполнить пример кода.</span><span class="sxs-lookup"><span data-stu-id="d63db-207">An explanation of how to run the example code.</span></span>  
  
 <span data-ttu-id="d63db-208">Первая часть примера кода — это источник для элементов управления поставщика и потребителя <xref:System.Web.UI.WebControls.WebParts.WebPart> , а также пользовательский <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> класс с именем `TableProviderConnectionPoint`.</span><span class="sxs-lookup"><span data-stu-id="d63db-208">The first part of the code example is the source for the provider and consumer <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> class, named `TableProviderConnectionPoint`.</span></span> <span data-ttu-id="d63db-209">Обратите внимание, что конструктор `TableProviderConnectionPoint` класса вызывает базовый конструктор, передавая ему необходимые параметры, как указано в разделе Parameters.</span><span class="sxs-lookup"><span data-stu-id="d63db-209">Note that the constructor of the `TableProviderConnectionPoint` class calls the base constructor, passing it the required parameters as indicated in the Parameters section.</span></span> <span data-ttu-id="d63db-210">Также обратите внимание, `TableProviderWebPart` что в классе `GetConnectionInterface` метод указывается как метод обратного вызова `ConnectionProvider` для соединений, а атрибут объявляет настраиваемый `TableProviderConnectionPoint` в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="d63db-210">Also note that in the `TableProviderWebPart` class, the `GetConnectionInterface` method is specified as the callback method for connections, and the `ConnectionProvider` attribute declares the custom `TableProviderConnectionPoint` as a parameter.</span></span> <span data-ttu-id="d63db-211">В этом примере показано, как создать настраиваемую точку подключения поставщика, а затем связать ее с элементом управления поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-211">This demonstrates how to create a custom provider connection point and then associate it with a provider control.</span></span> <span data-ttu-id="d63db-212">В этом примере предполагается, что исходный код компилируется динамически, поэтому файл исходного кода следует поместить во вложенную папку App_Code веб-приложения.</span><span class="sxs-lookup"><span data-stu-id="d63db-212">This example assumes that the source code is dynamically compiled, so you should place the source code file in an App_Code subfolder of your Web application.</span></span>  
  
 [!code-csharp[UI.WebControls.WebParts.ProviderConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/UI.WebControls.WebParts.ProviderConnectionPoint/CS/connectionControls.cs#1)]  
  
 <span data-ttu-id="d63db-213">Вторая часть примера кода — это веб-страница, на которой размещены пользовательские элементы управления в статическом соединении веб-части.</span><span class="sxs-lookup"><span data-stu-id="d63db-213">The second part of the code example is the Web page that hosts the custom controls in a static Web Parts connection.</span></span> <span data-ttu-id="d63db-214">В верхней части страницы находится `Register` директива для объявления префикса и пространства имен для пользовательских элементов управления.</span><span class="sxs-lookup"><span data-stu-id="d63db-214">At the top of the page is a `Register` directive to declare a prefix and the namespace for the custom controls.</span></span> <span data-ttu-id="d63db-215">Соединение объявляется с помощью `<asp:webpartconnection>` элемента, а элементы управления поставщика и потребителя объявляются `<asp:webpartzone>` внутри элемента.</span><span class="sxs-lookup"><span data-stu-id="d63db-215">The connection is declared by using an `<asp:webpartconnection>` element, and the provider and consumer controls are declared within an `<asp:webpartzone>` element.</span></span>  
  
 [!code-aspx-csharp[UI.WebControls.WebParts.ProviderConnectionPoint#3](~/samples/snippets/csharp/VS_Snippets_WebNet/UI.WebControls.WebParts.ProviderConnectionPoint/CS/defaultcs.aspx#3)]  
  
 <span data-ttu-id="d63db-216">Загрузите страницу в браузере.</span><span class="sxs-lookup"><span data-stu-id="d63db-216">Load the page in a browser.</span></span> <span data-ttu-id="d63db-217">Соединение между элементами управления уже существует, и потребитель отображает данные от поставщика, поскольку соединение было объявлено как статическое соединение на странице.</span><span class="sxs-lookup"><span data-stu-id="d63db-217">The connection between the controls already exists, and the consumer displays the data from the provider, because the connection was declared as a static connection in the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d63db-218"><paramref name="callbackMethod" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d63db-218"><paramref name="callbackMethod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d63db-219">-или-</span><span class="sxs-lookup"><span data-stu-id="d63db-219">-or-</span></span> 
 <span data-ttu-id="d63db-220">Свойство <paramref name="interfaceType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d63db-220"><paramref name="interfaceType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d63db-221">-или-</span><span class="sxs-lookup"><span data-stu-id="d63db-221">-or-</span></span> 
 <span data-ttu-id="d63db-222">Свойство <paramref name="controlType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d63db-222"><paramref name="controlType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d63db-223">- или -</span><span class="sxs-lookup"><span data-stu-id="d63db-223">-or-</span></span> 
 <span data-ttu-id="d63db-224">Параметр <paramref name="displayName" /> имеет значение <see langword="null" /> или равен пустой строке ("").</span><span class="sxs-lookup"><span data-stu-id="d63db-224"><paramref name="displayName" /> is <see langword="null" /> or an empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d63db-225">Параметр <paramref name="controlType" /> имеет тип, отличный от типа элемента управления поставщика (или производного от него допустимого класса).</span><span class="sxs-lookup"><span data-stu-id="d63db-225"><paramref name="controlType" /> is not the same type as the provider control (or a valid class derived from it).</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="d63db-226">Элементы управления веб-части ASP.NET</span><span class="sxs-lookup"><span data-stu-id="d63db-226">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : System.Web.UI.Control -&gt; obj&#xA;override this.GetObject : System.Web.UI.Control -&gt; obj" Usage="providerConnectionPoint.GetObject control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="d63db-227">Элемент управления, действующий как поставщик в связи веб-частей.</span><span class="sxs-lookup"><span data-stu-id="d63db-227">The control acting as the provider in a Web Parts connection.</span></span></param>
        <summary><span data-ttu-id="d63db-228">Вызывает метод обратного вызова в элементе управления поставщика, который получает экземпляр интерфейса для возвращения потребителям.</span><span class="sxs-lookup"><span data-stu-id="d63db-228">Invokes the callback method in a provider control that gets an interface instance to return to consumers.</span></span></summary>
        <returns><span data-ttu-id="d63db-229">Объект <see cref="T:System.Object" />, являющийся экземпляром интерфейса, который поставщик возвращает потребителям для установления подключения.</span><span class="sxs-lookup"><span data-stu-id="d63db-229">An <see cref="T:System.Object" /> that is an instance of the interface a provider returns to consumers to establish a connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d63db-230">Этот метод возвращает объект из элемента управления поставщика, который является экземпляром интерфейса, используемого для установления соединения.</span><span class="sxs-lookup"><span data-stu-id="d63db-230">This method returns an object from the provider control that is an instance of the interface used to establish a connection.</span></span> <span data-ttu-id="d63db-231">Тип объекта будет типом реализованного интерфейса.</span><span class="sxs-lookup"><span data-stu-id="d63db-231">The type of the object will be the type of the implemented interface.</span></span> <span data-ttu-id="d63db-232">Например, двумя интерфейсами, которые реализуются для соединений в наборе элементов управления веб-части <xref:System.Web.UI.WebControls.WebParts.IWebPartField> , <xref:System.Web.UI.WebControls.WebParts.IWebPartRow>являются и.</span><span class="sxs-lookup"><span data-stu-id="d63db-232">For example, two interfaces that are implemented for connections in the Web Parts control set are <xref:System.Web.UI.WebControls.WebParts.IWebPartField> and <xref:System.Web.UI.WebControls.WebParts.IWebPartRow>.</span></span> <span data-ttu-id="d63db-233">При вызове  <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> метода для объекта, если связанный поставщик реализует один из этих интерфейсов, возвращаемый объект будет иметь тот же тип. <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A></span><span class="sxs-lookup"><span data-stu-id="d63db-233">When the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> method is called on a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, if the associated provider implements one of these interfaces, the returned object will be of the same type.</span></span>  
  
 <span data-ttu-id="d63db-234"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> Метод вызывается <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>  объектами при активации подключения.</span><span class="sxs-lookup"><span data-stu-id="d63db-234">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> method is called by <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> objects when a connection is being activated.</span></span> <span data-ttu-id="d63db-235">Это важный шаг, который фактически инициирует соединение и начинает процесс, который позволяет двум элементам управления обмениваться данными.</span><span class="sxs-lookup"><span data-stu-id="d63db-235">This is a critical step that actually initiates a connection and begins the process that enables two controls to share data.</span></span>  
  
 <span data-ttu-id="d63db-236">Элемент управления "потребитель" в соединении должен иметь возможность работать с тем же типом интерфейса, что и поставщик.</span><span class="sxs-lookup"><span data-stu-id="d63db-236">The consumer control in a connection must be able to work with the same type of interface as the provider.</span></span> <span data-ttu-id="d63db-237">В противном случае элементы управления несовместимы, и <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> для установления соединения необходимо использовать объект.</span><span class="sxs-lookup"><span data-stu-id="d63db-237">If it does not, the controls are incompatible and a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to establish a connection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d63db-238"><paramref name="control" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d63db-238"><paramref name="control" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecondaryInterfaces">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection GetSecondaryInterfaces (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection GetSecondaryInterfaces(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ConnectionInterfaceCollection ^ GetSecondaryInterfaces(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetSecondaryInterfaces : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection&#xA;override this.GetSecondaryInterfaces : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" Usage="providerConnectionPoint.GetSecondaryInterfaces control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="d63db-239">Элемент управления, действующий как поставщик в связи веб-частей.</span><span class="sxs-lookup"><span data-stu-id="d63db-239">The control acting as the provider in a Web Parts connection.</span></span></param>
        <summary><span data-ttu-id="d63db-240">Получает дополнительную коллекцию дополнительных интерфейсов, которые могут поддерживаться точкой подключения поставщика.</span><span class="sxs-lookup"><span data-stu-id="d63db-240">Gets an optional collection of secondary interfaces that can be supported by a provider connection point.</span></span></summary>
        <returns><span data-ttu-id="d63db-241">Объект <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> дополнительных интерфейсов, предоставленных элементом управления, действующим как поставщик.</span><span class="sxs-lookup"><span data-stu-id="d63db-241">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> of additional interfaces provided by the control acting as a provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d63db-242">Объект точки подключения поставщика всегда имеет интерфейс по умолчанию, который используется для установления соединения с потребителями.</span><span class="sxs-lookup"><span data-stu-id="d63db-242">A provider connection point object always has a default interface that is used to establish a connection with consumers.</span></span> <span data-ttu-id="d63db-243">Экземпляр интерфейса по умолчанию извлекается путем вызова <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> метода <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> для объекта.</span><span class="sxs-lookup"><span data-stu-id="d63db-243">An instance of the default interface is retrieved by calling the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> method on a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span>  
  
 <span data-ttu-id="d63db-244">Однако некоторые элементы управления поставщика будут реализовывать несколько интерфейсов для предоставления потребителям в рамках подключения.</span><span class="sxs-lookup"><span data-stu-id="d63db-244">However, some provider controls will implement multiple interfaces to provide to consumers as part of a connection.</span></span> <span data-ttu-id="d63db-245">Эти интерфейсы, которые не используются по умолчанию для установления соединения, называются дополнительными интерфейсами.</span><span class="sxs-lookup"><span data-stu-id="d63db-245">These interfaces, which are not the default ones used to establish a connection, are called secondary interfaces.</span></span> <span data-ttu-id="d63db-246">Метод предоставляет способ возврата коллекции ссылок на дополнительные интерфейсы так же, <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> как метод возвращает ссылку на интерфейс по умолчанию. <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A></span><span class="sxs-lookup"><span data-stu-id="d63db-246">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A> method provides a way to return a collection of references to the secondary interfaces, just as the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A> method returns a reference to the default interface.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d63db-247"><see cref="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces(System.Web.UI.Control)" /> Метод <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />  в классе не содержит реализации; он возвращает пустую коллекцию вторичных интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="d63db-247">The <see cref="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces(System.Web.UI.Control)" /> method in the <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> class contains no implementation; it returns an empty collection of secondary interfaces.</span></span> <span data-ttu-id="d63db-248">Чтобы реализовать этот метод, необходимо наследовать от <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> класса и переопределять этот метод, возвращая из него определенный набор дополнительных интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="d63db-248">To implement this method, you must inherit from the <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> class, and override this method, returning from it a specific set of secondary interfaces.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
