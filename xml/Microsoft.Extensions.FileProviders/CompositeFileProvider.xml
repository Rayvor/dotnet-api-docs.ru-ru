<Type Name="CompositeFileProvider" FullName="Microsoft.Extensions.FileProviders.CompositeFileProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47df9e80d58ea701adb642eed9b787283ba0d953" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72415556" /></Metadata><TypeSignature Language="C#" Value="public class CompositeFileProvider : Microsoft.Extensions.FileProviders.IFileProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositeFileProvider extends System.Object implements class Microsoft.Extensions.FileProviders.IFileProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.FileProviders.CompositeFileProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositeFileProvider&#xA;Implements IFileProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeFileProvider : Microsoft::Extensions::FileProviders::IFileProvider" />
  <TypeSignature Language="F#" Value="type CompositeFileProvider = class&#xA;    interface IFileProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.FileProviders.IFileProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="91bb0-101">Ищет файлы с помощью коллекции <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />.</span><span class="sxs-lookup"><span data-stu-id="91bb0-101">Looks up files using a collection of <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeFileProvider (params Microsoft.Extensions.FileProviders.IFileProvider[] fileProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.FileProviders.IFileProvider[] fileProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.#ctor(Microsoft.Extensions.FileProviders.IFileProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray fileProviders As IFileProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeFileProvider(... cli::array &lt;Microsoft::Extensions::FileProviders::IFileProvider ^&gt; ^ fileProviders);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileProviders.CompositeFileProvider : Microsoft.Extensions.FileProviders.IFileProvider[] -&gt; Microsoft.Extensions.FileProviders.CompositeFileProvider" Usage="new Microsoft.Extensions.FileProviders.CompositeFileProvider fileProviders" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileProviders" Type="Microsoft.Extensions.FileProviders.IFileProvider[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fileProviders"><span data-ttu-id="91bb0-102">Коллекция <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />.</span><span class="sxs-lookup"><span data-stu-id="91bb0-102">The collection of <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /></span></span></param>
        <summary><span data-ttu-id="91bb0-103">Инициализирует новый экземпляр класса <see cref="T:Microsoft.Extensions.FileProviders.CompositeFileProvider" /> с помощью коллекции поставщика файлов.</span><span class="sxs-lookup"><span data-stu-id="91bb0-103">Initializes a new instance of the <see cref="T:Microsoft.Extensions.FileProviders.CompositeFileProvider" /> class using a collection of file provider.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeFileProvider (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt; fileProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.FileProviders.IFileProvider&gt; fileProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileProviders As IEnumerable(Of IFileProvider))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeFileProvider(System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::FileProviders::IFileProvider ^&gt; ^ fileProviders);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileProviders.CompositeFileProvider : seq&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt; -&gt; Microsoft.Extensions.FileProviders.CompositeFileProvider" Usage="new Microsoft.Extensions.FileProviders.CompositeFileProvider fileProviders" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileProviders" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="fileProviders"><span data-ttu-id="91bb0-104">Коллекция <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />.</span><span class="sxs-lookup"><span data-stu-id="91bb0-104">The collection of <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /></span></span></param>
        <summary><span data-ttu-id="91bb0-105">Инициализирует новый экземпляр класса <see cref="T:Microsoft.Extensions.FileProviders.CompositeFileProvider" /> с помощью коллекции поставщика файлов.</span><span class="sxs-lookup"><span data-stu-id="91bb0-105">Initializes a new instance of the <see cref="T:Microsoft.Extensions.FileProviders.CompositeFileProvider" /> class using a collection of file provider.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileProviders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt; FileProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.FileProviders.IFileProvider&gt; FileProviders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileProviders.CompositeFileProvider.FileProviders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileProviders As IEnumerable(Of IFileProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::FileProviders::IFileProvider ^&gt; ^ FileProviders { System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::FileProviders::IFileProvider ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileProviders : seq&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt;" Usage="Microsoft.Extensions.FileProviders.CompositeFileProvider.FileProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91bb0-106">Возвращает список настроенных экземпляров <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />.</span><span class="sxs-lookup"><span data-stu-id="91bb0-106">Gets the list of configured <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> instances.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryContents">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.FileProviders.IDirectoryContents GetDirectoryContents (string subpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.FileProviders.IDirectoryContents GetDirectoryContents(string subpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.GetDirectoryContents(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectoryContents (subpath As String) As IDirectoryContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::FileProviders::IDirectoryContents ^ GetDirectoryContents(System::String ^ subpath);" />
      <MemberSignature Language="F#" Value="abstract member GetDirectoryContents : string -&gt; Microsoft.Extensions.FileProviders.IDirectoryContents&#xA;override this.GetDirectoryContents : string -&gt; Microsoft.Extensions.FileProviders.IDirectoryContents" Usage="compositeFileProvider.GetDirectoryContents subpath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileProviders.IDirectoryContents</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subpath"><span data-ttu-id="91bb0-107">Путь, идентифицирующий каталог</span><span class="sxs-lookup"><span data-stu-id="91bb0-107">The path that identifies the directory</span></span></param>
        <summary><span data-ttu-id="91bb0-108">Перечисляет каталог по заданному пути, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="91bb0-108">Enumerate a directory at the given path, if any.</span></span></summary>
        <returns><span data-ttu-id="91bb0-109">Содержимое каталога.</span><span class="sxs-lookup"><span data-stu-id="91bb0-109">Contents of the directory.</span></span> <span data-ttu-id="91bb0-110">Вызывающий объект должен проверить свойство Exists.</span><span class="sxs-lookup"><span data-stu-id="91bb0-110">Caller must check Exists property.</span></span>
<span data-ttu-id="91bb0-111">Содержимое представляет собой объединенное содержимое предоставленного <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />.</span><span class="sxs-lookup"><span data-stu-id="91bb0-111">The content is a merge of the contents of the provided <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />.</span></span>
<span data-ttu-id="91bb0-112">Если имеется несколько <see cref="T:Microsoft.Extensions.FileProviders.IFileInfo" /> с одинаковым свойством Name, в результаты включается только первый из них.</span><span class="sxs-lookup"><span data-stu-id="91bb0-112">When there is multiple <see cref="T:Microsoft.Extensions.FileProviders.IFileInfo" /> with the same Name property, only the first one is included on the results.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileInfo">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.FileProviders.IFileInfo GetFileInfo (string subpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.FileProviders.IFileInfo GetFileInfo(string subpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.GetFileInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileInfo (subpath As String) As IFileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::FileProviders::IFileInfo ^ GetFileInfo(System::String ^ subpath);" />
      <MemberSignature Language="F#" Value="abstract member GetFileInfo : string -&gt; Microsoft.Extensions.FileProviders.IFileInfo&#xA;override this.GetFileInfo : string -&gt; Microsoft.Extensions.FileProviders.IFileInfo" Usage="compositeFileProvider.GetFileInfo subpath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileProviders.IFileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subpath"><span data-ttu-id="91bb0-113">Путь, идентифицирующий файл.</span><span class="sxs-lookup"><span data-stu-id="91bb0-113">The path that identifies the file.</span></span></param>
        <summary><span data-ttu-id="91bb0-114">Находит файл по указанному пути.</span><span class="sxs-lookup"><span data-stu-id="91bb0-114">Locates a file at the given path.</span></span></summary>
        <returns><span data-ttu-id="91bb0-115">Сведения о файле.</span><span class="sxs-lookup"><span data-stu-id="91bb0-115">The file information.</span></span> <span data-ttu-id="91bb0-116">Вызывающий объект должен проверить свойство Exists.</span><span class="sxs-lookup"><span data-stu-id="91bb0-116">Caller must check Exists property.</span></span> <span data-ttu-id="91bb0-117">Это будет первый существующий <see cref="T:Microsoft.Extensions.FileProviders.IFileInfo" />, возвращенный предоставленным <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />, или ненайденный <see cref="T:Microsoft.Extensions.FileProviders.IFileInfo" />, если существующие файлы не найдены.</span><span class="sxs-lookup"><span data-stu-id="91bb0-117">This will be the first existing <see cref="T:Microsoft.Extensions.FileProviders.IFileInfo" /> returned by the provided <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> or a not found <see cref="T:Microsoft.Extensions.FileProviders.IFileInfo" /> if no existing files is found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Watch">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.IChangeToken Watch (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Primitives.IChangeToken Watch(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.CompositeFileProvider.Watch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Watch (pattern As String) As IChangeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::Primitives::IChangeToken ^ Watch(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="abstract member Watch : string -&gt; Microsoft.Extensions.Primitives.IChangeToken&#xA;override this.Watch : string -&gt; Microsoft.Extensions.Primitives.IChangeToken" Usage="compositeFileProvider.Watch pattern" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.FileProviders.IFileProvider.Watch(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.IChangeToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="91bb0-118">Строка фильтра, которая используется для определения файлов или папок, подлежащих отслеживанию.</span><span class="sxs-lookup"><span data-stu-id="91bb0-118">Filter string used to determine what files or folders to monitor.</span></span> <span data-ttu-id="91bb0-119">Пример: **/\*.cs, *.*, subFolder/**/\*.cshtml.</span><span class="sxs-lookup"><span data-stu-id="91bb0-119">Example: **/\*.cs, *.*, subFolder/**/\*.cshtml.</span></span></param>
        <summary><span data-ttu-id="91bb0-120">Создает объект <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> для указанного объекта <paramref name="pattern" />.</span><span class="sxs-lookup"><span data-stu-id="91bb0-120">Creates a <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> for the specified <paramref name="pattern" />.</span></span></summary>
        <returns><span data-ttu-id="91bb0-121">Интерфейс <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" />, который получает уведомление при добавлении, изменении или удалении файла, соответствующего <paramref name="pattern" />.</span><span class="sxs-lookup"><span data-stu-id="91bb0-121">An <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> that is notified when a file matching <paramref name="pattern" /> is added, modified or deleted.</span></span>
<span data-ttu-id="91bb0-122">Этот маркер изменений будет уведомлен при уведомлении одного из маркеров изменений, возвращенных предоставленным <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />.</span><span class="sxs-lookup"><span data-stu-id="91bb0-122">The change token will be notified when one of the change token returned by the provided <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> will be notified.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
