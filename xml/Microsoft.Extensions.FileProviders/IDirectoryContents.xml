<Type Name="IDirectoryContents" FullName="Microsoft.Extensions.FileProviders.IDirectoryContents">
  <Metadata><Meta Name="ms.openlocfilehash" Value="debb5fbb2a4267577f9d8f3c748573f811299bbc" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72415456" /></Metadata><TypeSignature Language="C#" Value="public interface IDirectoryContents : System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDirectoryContents implements class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.FileProviders.IFileInfo&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.FileProviders.IDirectoryContents" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDirectoryContents&#xA;Implements IEnumerable(Of IFileInfo)" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDirectoryContents : System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::FileProviders::IFileInfo ^&gt;" />
  <TypeSignature Language="F#" Value="type IDirectoryContents = interface&#xA;    interface seq&lt;IFileInfo&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.FileProviders.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c6667-101">Представляет содержимое каталога в поставщике файлов.</span><span class="sxs-lookup"><span data-stu-id="c6667-101">Represents a directory's content in the file provider.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileProviders.IDirectoryContents.Exists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="Microsoft.Extensions.FileProviders.IDirectoryContents.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6667-102">Значение true, если каталог обнаружен по указанному пути.</span><span class="sxs-lookup"><span data-stu-id="c6667-102">True if a directory was located at the given path.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
