<Type Name="WebAuditEvent" FullName="System.Web.Management.WebAuditEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0c641019015b0c2536bac8394b48f6333c49201" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70660816" /></Metadata><TypeSignature Language="C#" Value="public class WebAuditEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebAuditEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebAuditEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebAuditEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebAuditEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Служит базовым классом для всех событий аудита контроля рабочего состояния ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Мониторинг работоспособности ASP.NET позволяет рабочим и операционным сотрудникам управлять развернутыми веб-приложениями. <xref:System.Web.Management> Пространство имен содержит типы событий работоспособности, отвечающие за упаковку данных о состоянии работоспособности приложения и типы поставщиков, ответственные за обработку этих данных. Он также содержит вспомогательные типы, помогающие в управлении событиями работоспособности.  
  
 <xref:System.Web.Management.WebAuditEvent> Класс является базовым классом, из которого наследуются классы событий ASP.NET Health для мониторинга работоспособности. События аудита создают сведения о операциях, связанных с безопасностью, в веб-приложении и предоставляют события успешного и неудачи для каждой операции аудита.  
  
 Система мониторинга работоспособности может проводить аудит как успешных, так и неуспешных событий, что означает, что приложение можно отслеживать как для обычных, так и для неработоспособных условий. По умолчанию регистрируются только события неудачного аудита.  
  
 С помощью ASP.NET выполняется аудит следующих операций и могут создаваться события аудита работоспособности или сбоя.  
  
-   Попытки входа, выполненные пользователями приложения ASP.NET. Дополнительные сведения об этом аудите см <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> . в статьях и. <xref:System.Web.Management.WebSuccessAuditEvent>  
  
-   События, связанные с безопасностью, такие как сбои проверки подлинности, неудачные попытки доступа к ресурсам и другие события, связанные с безопасностью. Журнал этих событий может быть полезен при исследовании вторжения или атаки на приложение. По умолчанию для сбоев авторизации анонимных пользователей не предусмотрена поддержка аудита. Дополнительные сведения об аудите событий сбоя см <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> . в статьях и. <xref:System.Web.Management.WebFailureAuditEvent>  
  
-   Пользовательские события, создаваемые приложением ASP.NET. Можно проводить аудит пользовательских событий, расширяя функциональные возможности, предоставляемые <xref:System.Web.Management.WebAuditEvent> классом и производными классами.  
  
> [!NOTE]
>  В большинстве случаев вы сможете использовать типы мониторинга работоспособности ASP.NET в соответствии с реализацией, и вы сможете управлять системой мониторинга работоспособности, указав значения в `healthMonitoring` разделе конфигурации. Вы также можете получить от типов мониторинга работоспособности, чтобы создавать собственные пользовательские события и поставщики. Пример наследования от <xref:System.Web.Management.WebAuditEvent> класса см. в примере, приведенном в этом разделе.  
  
   
  
## Examples  
 В следующем примере кода показано, как выполнить наследование от <xref:System.Web.Management.WebAuditEvent> класса для создания пользовательского события аудита.  
  
 [!code-csharp[System.Web.Management.WebAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/CS/webauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/VB/webauditevent.vb#1)]  
  
 Ниже приведен фрагмент файла конфигурации, который позволяет ASP.NET использовать событие.  
  
```  
<healthMonitoring   
  enabled="true"  
  heartBeatInterval="0">   
  
  <providers>  
    <add name="EventLogProvider"   
      type="System.Web.Management.EventLogWebEventProvider,  
      System.Web,Version=2.0.3600.0,Culture=neutral,  
      PublicKeyToken=b03f5f7f11d50a3a"/>  
  </providers>  
  
  <eventMappings>  
    <add  name="SampleWebAuditEvent"   
      type="SamplesAspNet.SampleWebAuditEvent,  
      webauditevent,Version=1.0.1663.31140,   
      Culture=neutral,   
      PublicKeyToken=0d1fa0f69d94de96,   
      processorArchitecture=MSIL"/>  
  </eventMappings>  
  
  <rules>  
    <add name="Custom Audit Default"  
      eventName="SampleWebAuditEvent"  
      provider="EventLogProvider"  
      profile="Default"/>    
  </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>При форматировании сведений о пользовательских событиях для вывода Переопределите <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> метод, а не <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> метод. Это позволит избежать перезаписи или изменения конфиденциальной информации о системе.</para></block>
    <altmember cref="T:System.Web.Management.WebManagementEvent" />
    <altmember cref="T:System.Web.Management.WebFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebViewStateFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Общие сведения о мониторинге работоспособности ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuditEvent : string * obj * int -&gt; System.Web.Management.WebAuditEvent" Usage="new System.Web.Management.WebAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Описание события.</param>
        <param name="eventSource">Объект, являющийся источником события.</param>
        <param name="eventCode">Код, связанный с событием. При реализации пользовательского события код события должен превышать <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Management.WebAuditEvent" /> с использованием предоставленных параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор внутренне используется системой мониторинга работоспособности ASP.NET. Он никогда не будет использоваться для создания экземпляра <xref:System.Web.Management.WebAuditEvent> объекта, но этот конструктор можно вызвать при реализации собственного типа событий, наследуемого от этого класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот конструктор. Этот пример кода является частью большого примера, <xref:System.Web.Management.WebAuditEvent> приведенного для класса.  
  
 [!code-csharp[System.Web.Management.WebAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/CS/webauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/VB/webauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebAuditEvent" Usage="new System.Web.Management.WebAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Описание события.</param>
        <param name="eventSource">Объект, являющийся источником события.</param>
        <param name="eventCode">Код, связанный с событием. При реализации пользовательского события код события должен превышать <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Значение <see cref="T:System.Web.Management.WebEventCodes" />, указывающее подробный идентификатор для события.</param>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.Web.Management.WebAuditEvent" /> с указанными параметрами события.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор внутренне используется системой мониторинга работоспособности ASP.NET. Он никогда не будет использоваться для создания экземпляра <xref:System.Web.Management.WebAuditEvent> объекта, но этот конструктор можно вызвать при реализации собственного типа событий, наследуемого от этого класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот конструктор. Этот пример кода является частью большого примера, <xref:System.Web.Management.WebAuditEvent> приведенного для класса.  
  
 [!code-csharp[System.Web.Management.WebAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/CS/webauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/VB/webauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestInformation">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebRequestInformation RequestInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebRequestInformation RequestInformation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebAuditEvent.RequestInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestInformation As WebRequestInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Management::WebRequestInformation ^ RequestInformation { System::Web::Management::WebRequestInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestInformation : System.Web.Management.WebRequestInformation" Usage="System.Web.Management.WebAuditEvent.RequestInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebRequestInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сведения, связанные с веб-запросом.</summary>
        <value><see cref="T:System.Web.Management.WebRequestInformation" />, содержащий сведения, связанные с веб-запросом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте сведения, <xref:System.Web.Management.WebAuditEvent.RequestInformation%2A> предоставленные свойством, чтобы упростить обнаружение причин сбоя.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить сведения о запросе с <xref:System.Web.Management.WebRequestInformation> помощью свойства.  
  
 [!code-csharp[System.Web.Management.WebAuditEvent#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/CS/webauditevent.cs#5)]
 [!code-vb[System.Web.Management.WebAuditEvent#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/VB/webauditevent.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebRequestInformation" />
      </Docs>
    </Member>
  </Members>
</Type>
