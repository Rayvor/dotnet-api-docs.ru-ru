<Type Name="WebManagementEvent" FullName="System.Web.Management.WebManagementEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62aadef812f7852688f2fa5138d202f7ade1e7e2" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70697776" /></Metadata><TypeSignature Language="C#" Value="public class WebManagementEvent : System.Web.Management.WebBaseEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebManagementEvent extends System.Web.Management.WebBaseEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebManagementEvent&#xA;Inherits WebBaseEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebManagementEvent : System::Web::Management::WebBaseEvent" />
  <TypeSignature Language="F#" Value="type WebManagementEvent = class&#xA;    inherit WebBaseEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebBaseEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Определяет базовый класс для событий, содержащих сведения о процессах и приложениях.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Мониторинг работоспособности ASP.NET позволяет рабочим и операционным сотрудникам управлять развернутыми веб-приложениями. <xref:System.Web.Management?displayProperty=nameWithType> Пространство имен содержит типы событий работоспособности, отвечающие за упаковку данных о состоянии работоспособности приложения и типы поставщиков, ответственные за обработку этих данных. Он также содержит вспомогательные типы, помогающие в управлении событиями работоспособности.  
  
 <xref:System.Web.Management.WebManagementEvent> Является базовым классом для всех типов событий мониторинга работоспособности ASP.NET. Он использует <xref:System.Web.Management.WebProcessInformation> класс для получения сведений о процессе, доступных производным классам.  
  
> [!NOTE]
>  В большинстве случаев вы сможете использовать типы мониторинга работоспособности ASP.NET в соответствии с реализацией, и вы сможете управлять системой мониторинга работоспособности, указав значения в `healthMonitoring` разделе конфигурации. Вы также можете получить от типов мониторинга работоспособности, чтобы создавать собственные пользовательские события и поставщики. Пример наследования от <xref:System.Web.Management.WebManagementEvent> класса см. в примере, приведенном в этом разделе.  
  
   
  
## Examples  
 В следующем примере показано, как реализовать пользовательское событие, производное от <xref:System.Web.Management.WebManagementEvent> класса.  
  
 [!code-csharp[System.Web.Management.WebManagementEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebManagementEvent/CS/webmanagementevent.cs#1)]
 [!code-vb[System.Web.Management.WebManagementEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebManagementEvent/VB/webmanagementevent.vb#1)]  
  
 Ниже приведен фрагмент файла конфигурации, который позволяет ASP.NET использовать пользовательское событие.  
  
```  
<healthMonitoring enabled="true"   
  heartBeatInterval="0">  
  <eventMappings>  
  
    <add  name="SampleWebManagementEvent" type="SamplesAspNet.SampleWebManagementEvent,webmanagementevent,Version=1.0.1573.24438, Culture=neutral, PublicKeyToken=2f5f337ae5c9bdaa, processorArchitecture=MSIL"/>  
  
  </eventMappings>  
  <rules>  
    <add   
      name="Custom WebManagementEvent"  
      eventName="SampleWebManagementEvent"  
      provider="EventLogProvider"  
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>При форматировании сведений о пользовательских событиях для вывода Переопределите <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> метод, а не <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> метод. Это позволит избежать перезаписи или изменения конфиденциальной информации о системе.  
  
Код события, указанный для пользовательского события, должен быть больше <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</para></block>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Общие сведения о мониторинге работоспособности ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Management.WebManagementEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebManagementEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebManagementEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebManagementEvent : string * obj * int -&gt; System.Web.Management.WebManagementEvent" Usage="new System.Web.Management.WebManagementEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Описание события.</param>
        <param name="eventSource">Объект, являющийся источником события.</param>
        <param name="eventCode">Код, связанный с событием. При реализации пользовательского события код события должен превышать <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Management.WebManagementEvent" /> с использованием предоставленных параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebManagementEvent.%23ctor%2A> Конструктор не предназначен для непосредственного использования в коде. Он вызывается методом ASP.NET. <xref:System.Web.Management.WebManagementEvent.%23ctor%2A> Конструктор можно вызвать при наследовании <xref:System.Web.Management.WebManagementEvent> от класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebManagementEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebManagementEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebManagementEvent : string * obj * int * int -&gt; System.Web.Management.WebManagementEvent" Usage="new System.Web.Management.WebManagementEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Описание события.</param>
        <param name="eventSource">Объект, являющийся источником события.</param>
        <param name="eventCode">Код, связанный с событием. При реализации пользовательского события код события должен превышать <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Значение <see cref="T:System.Web.Management.WebEventCodes" />, указывающее подробный идентификатор для события.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Management.WebManagementEvent" /> с использованием предоставленных параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebManagementEvent.%23ctor%2A> Конструктор не предназначен для непосредственного использования в коде. Он вызывается методом ASP.NET. <xref:System.Web.Management.WebManagementEvent.%23ctor%2A> Конструктор можно вызвать при наследовании <xref:System.Web.Management.WebManagementEvent> от класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessInformation">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebProcessInformation ProcessInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebProcessInformation ProcessInformation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebManagementEvent.ProcessInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessInformation As WebProcessInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Management::WebProcessInformation ^ ProcessInformation { System::Web::Management::WebProcessInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessInformation : System.Web.Management.WebProcessInformation" Usage="System.Web.Management.WebManagementEvent.ProcessInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebProcessInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сведения о размещающем приложение процессе ASP.NET.</summary>
        <value>Объект <see cref="T:System.Web.Management.WebProcessInformation" />, содержащий сведения о процессе.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как получить <xref:System.Web.Management.WebManagementEvent.ProcessInformation%2A> значение.  
  
 [!code-csharp[System.Web.Management.WebManagementEvent#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebManagementEvent/CS/webmanagementevent.cs#5)]
 [!code-vb[System.Web.Management.WebManagementEvent#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebManagementEvent/VB/webmanagementevent.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebProcessInformation" />
      </Docs>
    </Member>
  </Members>
</Type>
