<Type Name="WebApplicationLifetimeEvent" FullName="System.Web.Management.WebApplicationLifetimeEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9dec4539e083e1e13543ddc121a16aea14f5417d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70442850" /></Metadata><TypeSignature Language="C#" Value="public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebApplicationLifetimeEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebApplicationLifetimeEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebApplicationLifetimeEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebApplicationLifetimeEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebApplicationLifetimeEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет значительное событие в жизненном цикле приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Мониторинг работоспособности ASP.NET позволяет рабочим и операционным сотрудникам управлять развернутыми веб-приложениями. <xref:System.Web.Management> Пространство имен содержит типы событий работоспособности, отвечающие за упаковку данных о состоянии работоспособности приложения и типы поставщиков, ответственные за обработку этих данных. Он также содержит вспомогательные типы, помогающие в управлении событиями работоспособности.  
  
 События времени жизни приложения включают такие события, как запуск приложения и события завершения работы. В случае завершения работы приложения можно определить причину, просмотрев соответствующее поле сообщения о событии.  
  
 Когда происходит <xref:System.Web.Management.WebApplicationLifetimeEvent> экземпляр, ASP.NET мониторинга работоспособности обновляет счетчик производительности "события жизненного цикла приложения". Эти события можно регистрировать, добавив <xref:System.Web.Management.WebApplicationLifetimeEvent> объект `rules` в подраздел `healthMonitoring` раздела файла конфигурации, как показано в следующем примере.  
  
```  
<rules>  
  <add name="Application Events"  
    eventName="Application Lifetime Events"  
    provider="EventLogProvider"  
    profile="Default"  
    minInterval="00:01:00" />  
</rules>  
  
```  
  
 Счетчик производительности "события жизненного цикла приложения" содержит общую сумму всех событий времени жизни ASP.NET. Чтобы просмотреть этот счетчик производительности в системном мониторе (PerfMon), в окне **Добавление счетчиков** выберите **ASP.NET** из раскрывающегося списка **объект производительности** . Выберите счетчик производительности " **события жизненного цикла приложения** " и нажмите кнопку **Добавить** . Дополнительные сведения см. в разделе "использование системного монитора (PerfMon) с приложениями ASP.NET" на [сайте MSDN](https://go.microsoft.com/fwlink/?linkid=37118). Если вы разрешаете регистрировать события по стандарту <xref:System.Web.Management.EventLogWebEventProvider>, их можно просмотреть в [Просмотр событий](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc756915\(v=ws.10\)) , выбрав журнал **приложений** .
  
> [!CAUTION]
>  <xref:System.Web.Management.WebApplicationLifetimeEvent> Поскольку объект является событием большого объема, его запись в журнал занимает много ресурсов и может замедлить работу системы. Это также может привести к перезаписи других событий в случае <xref:System.Web.Management.EventLogWebEventProvider> класса из-за большого объема событий и способа работы ведения журнала событий.  
  
> [!NOTE]
>  В большинстве случаев вы сможете использовать типы мониторинга работоспособности ASP.NET в соответствии с реализацией, и вы сможете управлять системой мониторинга работоспособности, указав значения в `healthMonitoring` разделе конфигурации. Вы также можете получить от типов мониторинга работоспособности, чтобы создавать собственные пользовательские события и поставщики. Пример наследования от <xref:System.Web.Management.WebApplicationLifetimeEvent> класса см. в примере, приведенном в этом разделе.  
  
   
  
## Examples  
 В следующем примере кода показано, как выполнить наследование от <xref:System.Web.Management.WebApplicationLifetimeEvent> класса для создания пользовательского события.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#1)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#1)]  
  
 В следующем фрагменте файла конфигурации показано, как настроить `healthMonitoring` раздел файла конфигурации, чтобы `SampleWebApplicationLifetimeEvent` добавить код, определенный выше, в систему мониторинга работоспособности ASP.NET. Чтобы добавить событие в систему, необходимо определить событие, добавив новую запись в `eventMappings` раздел и соотнесение события с поставщиком, добавив новую запись `rules` в раздел.  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <eventMappings>  
       <clear />  
       <!-- Configure the application lifetime event -->  
       <!-- object to handle the Web application events. -->  
       <add name="SampleApplicationLifetimeEvents"  
         type="System.Web.Management.SampleWebApplicationLifetimeEvent,  
         System.Web,Version=2.0.3600.0,  
         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a" />  
     </eventMappings>  
  
    <rules>  
      <clear/>  
       // Configure the connection between the   
       // application lifetime event object   
       // and the provider that must process it.  
       <add name="Custom Application Events"  
         eventName="SampleApplicationLifetimeEvents"  
         provider="EventLogProvider"  
         profile="Default"  
         minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>При форматировании сведений о пользовательских событиях для вывода Переопределите <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> метод, а не <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> метод. Это позволит избежать перезаписи или изменения конфиденциальной информации о системе.</para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Общие сведения о мониторинге работоспособности ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Общие сведения о мониторинге работоспособности ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение, связанное с событием.</param>
        <param name="eventSource">Объект, являющийся источником события.</param>
        <param name="eventCode">Код, связанный с событием. При реализации пользовательского события код события должен превышать <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Инициализирует класс <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" />, используя предоставленные параметры.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор внутренне используется системой мониторинга работоспособности ASP.NET. Он никогда не будет использоваться для создания экземпляра <xref:System.Web.Management.WebApplicationLifetimeEvent> класса, но этот конструктор можно вызвать при реализации собственного типа событий, наследуемого от этого класса.  
  
> [!NOTE]
>  <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Конструктор не предназначен для непосредственного использования в коде. Он вызывается методом ASP.NET. <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Конструктор можно вызвать при наследовании <xref:System.Web.Management.WebApplicationLifetimeEvent> от класса.  
  
   
  
## Examples  
 В следующем примере кода показано, <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> как использовать в настраиваемом событии работоспособности ASP.NET. Этот пример кода в основном предназначен для отображения правильного синтаксиса.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#2)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Общие сведения о мониторинге работоспособности ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение, связанное с событием.</param>
        <param name="eventSource">Объект, являющийся источником события.</param>
        <param name="eventCode">Код, связанный с событием. При реализации пользовательского события код события должен превышать <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Значение <see cref="T:System.Web.Management.WebEventCodes" />, указывающее подробный идентификатор для события.</param>
        <summary>Инициализирует класс <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" />, используя предоставленные параметры.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор внутренне используется системой мониторинга работоспособности ASP.NET. Он никогда не будет использоваться для создания экземпляра <xref:System.Web.Management.WebApplicationLifetimeEvent> класса, но этот конструктор можно вызвать при реализации собственного типа событий, наследуемого от этого класса.  
  
> [!NOTE]
>  <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Конструктор не предназначен для непосредственного использования в коде. Он вызывается методом ASP.NET. <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Конструктор можно вызвать при наследовании <xref:System.Web.Management.WebApplicationLifetimeEvent> от класса.  
  
   
  
## Examples  
 В следующем примере кода показано, <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> как использовать в настраиваемом событии работоспособности ASP.NET. Этот пример кода в основном предназначен для отображения правильного синтаксиса.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#3)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Общие сведения о мониторинге работоспособности ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webApplicationLifetimeEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Используется для внутренних целей для увеличения значений счетчиков производительности.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Общие сведения о мониторинге работоспособности ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
