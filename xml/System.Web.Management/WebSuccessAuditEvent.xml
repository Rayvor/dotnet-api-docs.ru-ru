<Type Name="WebSuccessAuditEvent" FullName="System.Web.Management.WebSuccessAuditEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2409e76e5b7f238291bf0cbfb159fafea5b0b84" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70722039" /></Metadata><TypeSignature Language="C#" Value="public class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebSuccessAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebSuccessAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebSuccessAuditEvent : System::Web::Management::WebAuditEvent" />
  <TypeSignature Language="F#" Value="type WebSuccessAuditEvent = class&#xA;    inherit WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет сведения об успешных событиях безопасности.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Мониторинг работоспособности ASP.NET позволяет рабочим и операционным сотрудникам управлять развернутыми веб-приложениями. <xref:System.Web.Management> Пространство имен содержит типы событий работоспособности, отвечающие за упаковку данных о состоянии работоспособности приложения и типы поставщиков, ответственные за обработку этих данных. Он также содержит вспомогательные типы, помогающие в управлении событиями работоспособности.  
  
 <xref:System.Web.Management.WebSuccessAuditEvent> Класс используется, когда происходит успешная операция, связанная с безопасностью. Примером этого является успешная авторизация URL для веб-запроса.  
  
 В следующем списке описаны функции, для которых события типа <xref:System.Web.Management.WebSuccessAuditEvent> вызываются ASP.NET:  
  
-   Авторизация файла. Аудит успешных условий. Авторизация файла выполняется только с помощью ASP.NET, когда с запросом связано удостоверение Windows. Связанный код аудита событий — <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>.  
  
-   Авторизация URL-адреса. Он обозначает доступ к URL-адресу ресурса, для которого предоставляется авторизация. Аудит успешных условий. Связанный код аудита событий — <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>.  
  
-   Другие условия безопасности. Ниже приведен список связанных кодов событий.  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>  
  
 При вызове ASP.NET мониторинг работоспособности увеличивает значение связанного счетчика производительности "события успешного аудита успехов", а затем `healthMonitoring` проверяет конфигурацию, чтобы определить, подписаны ли поставщики на событие. <xref:System.Web.Management.WebSuccessAuditEvent> Если поставщики подписываются на событие, ASP.NET отправляет событие для обработки.  
  
> [!NOTE]
>  Чтобы просмотреть счетчик производительности "события аудита успехов" в системном мониторе (PerfMon), в окне **Добавление счетчиков** выберите **ASP.NET** из раскрывающегося списка **объект производительности** и выберите **событие аудит успехов** . Счетчик производительности и нажмите кнопку **Добавить** . Дополнительные сведения см. в разделе [наблюдение за производительностью приложений ASP.NET](https://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5).  
  
 Поскольку аудит успехов представляет ожидаемое условие, вы можете не подписываться на них. Вы можете подписываться на них, чтобы обеспечить аудит доступа для сайта.  
  
> [!NOTE]
>  В большинстве случаев вы сможете использовать типы мониторинга работоспособности ASP.NET в соответствии с реализацией, и вы сможете управлять системой мониторинга работоспособности, указав значения в `healthMonitoring` разделе конфигурации. Вы также можете получить от типов мониторинга работоспособности, чтобы создавать собственные пользовательские события и поставщики. Пример наследования от <xref:System.Web.Management.WebSuccessAuditEvent> класса см. в примере, приведенном в этом разделе.  
  
   
  
## Examples  
 В следующем примере кода показано, как выполнить наследование от <xref:System.Web.Management.WebSuccessAuditEvent> класса для создания пользовательского события аудита.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#1)]  
  
 Следующий пример является выдержкой из файла конфигурации, который позволяет ASP.NETному мониторингу работоспособности использовать событие.  
  
```  
<healthMonitoring   
..enabled="true"  
..heartBeatInterval="0">   
  <providers>  
    <add name="EventLogProvider"   
    type="System.Web.Management.EventLogWebEventProvider,  
    System.Web,Version=2.0.3600.0,Culture=neutral,  
    PublicKeyToken=b03f5f7f11d50a3a"/>  
  </providers>  
  <eventMappings>  
    <add  name="SampleWebSuccessAuditEvent"   
      type="SamplesAspNet.SampleWebSuccessAuditEvent,  
      websuccessauditevent,Version=1.0.1663.31140,   
      Culture=neutral,   
      PublicKeyToken=0d1fa0f69d94de96,   
      processorArchitecture=MSIL"/>  
  </eventMappings>  
  <rules>  
    <add name="Custom Failure Audit Default"  
      eventName=" SampleWebFailureAuditEvent "  
      provider="EventLogProvider"  
      profile="Default"/>    
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Общие сведения о мониторинге работоспособности ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Management.WebSuccessAuditEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Описание события.</param>
        <param name="eventSource">Объект, являющийся источником события.</param>
        <param name="eventCode">Код, связанный с событием. При реализации пользовательского события код события должен превышать <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> с использованием предоставленных параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор внутренне используется системой мониторинга работоспособности ASP.NET. Он никогда не будет использоваться для создания экземпляра <xref:System.Web.Management.WebSuccessAuditEvent> объекта, но этот конструктор можно вызвать при реализации собственного типа событий, наследуемого от этого класса.  
  
> [!NOTE]
>  <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> Конструктор не предназначен для непосредственного использования в коде. Он вызывается методом ASP.NET. <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> Конструктор можно вызвать при наследовании <xref:System.Web.Management.WebSuccessAuditEvent> от класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот конструктор в `SampleWebSuccessAuditEvent` классе. Этот пример кода является частью большого примера, <xref:System.Web.Management.WebSuccessAuditEvent> приведенного для класса.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Описание события.</param>
        <param name="eventSource">Объект, являющийся источником события.</param>
        <param name="eventCode">Код, связанный с событием. При реализации пользовательского события код события должен превышать <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Значение <see cref="T:System.Web.Management.WebEventCodes" />, указывающее подробный идентификатор для события.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> с использованием предоставленных параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор внутренне используется системой мониторинга работоспособности ASP.NET. Он никогда не будет использоваться для создания экземпляра <xref:System.Web.Management.WebSuccessAuditEvent> объекта, но этот конструктор можно вызвать при реализации собственного типа событий, наследуемого от этого класса.  
  
> [!NOTE]
>  <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> Конструктор не предназначен для непосредственного использования в коде. Он вызывается методом ASP.NET. <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> Конструктор можно вызвать при наследовании <xref:System.Web.Management.WebSuccessAuditEvent> от класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот конструктор в `SampleWebSuccessAuditEvent` классе. Этот пример кода является частью большого примера, <xref:System.Web.Management.WebSuccessAuditEvent> приведенного для класса.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webSuccessAuditEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Увеличивает значение счетчика "Событий аудита успехов".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Счетчик производительности "события аудита успехов" отслеживает количество успешных событий аудита, вызванных с момента запуска приложения. Этот метод также вызывает родительский <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> метод, который увеличивает счетчик, вызванный событиями. Этот счетчик отслеживает общее число вызванных событий.  
  
 Чтобы просмотреть эти счетчики производительности в системном мониторе (PerfMon), в окне **Добавление счетчиков** выберите **ASP.NET** из раскрывающегося списка **объект производительности** , выберите счетчик производительности, который необходимо просмотреть, и нажмите кнопку **Добавить** . . Дополнительные сведения см. в разделе [наблюдение за производительностью приложений ASP.NET](https://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
