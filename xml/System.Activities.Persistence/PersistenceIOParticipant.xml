<Type Name="PersistenceIOParticipant" FullName="System.Activities.Persistence.PersistenceIOParticipant">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b69874d34b91d880e3198631963112d393fa8fda" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70411320" /></Metadata><TypeSignature Language="C#" Value="public abstract class PersistenceIOParticipant : System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceIOParticipant extends System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Persistence.PersistenceIOParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceIOParticipant&#xA;Inherits PersistenceParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceIOParticipant abstract : System::Activities::Persistence::PersistenceParticipant" />
  <TypeSignature Language="F#" Value="type PersistenceIOParticipant = class&#xA;    inherit PersistenceParticipant" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Persistence.PersistenceParticipant</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0b671-101">Класс, производный от класса <see cref="T:System.Activities.Persistence.PersistenceParticipant" />, с методами, выполняющими операции ввода и вывода помимо сохранения и загрузки экземпляров рабочего процесса с помощью процесса сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="0b671-101">A derived vclass of the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class with methods that perform input and output operations in addition to the persisting and loading of workflow instances through the persistence process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b671-102">Узел выполняет следующие шаги (или этапы) при сохранении экземпляра.</span><span class="sxs-lookup"><span data-stu-id="0b671-102">A host executes the following steps (or stages) when persisting an instance:</span></span>  
  
1.  <span data-ttu-id="0b671-103">Собирает сохраняемые значения.</span><span class="sxs-lookup"><span data-stu-id="0b671-103">Collects values to be persisted.</span></span>  
  
2.  <span data-ttu-id="0b671-104">Сопоставляет поля монолитно структурированных значений отдельным значениям.</span><span class="sxs-lookup"><span data-stu-id="0b671-104">Maps fields of monolithic structured values to individual values.</span></span>  
  
3.  <span data-ttu-id="0b671-105">Выдает команду <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> поставщику сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="0b671-105">Issues the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> to the persistence provider.</span></span>  
  
4.  <span data-ttu-id="0b671-106">Выполняет ввод-вывод в ходе транзакции сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="0b671-106">Performs I/O under the persistence transaction.</span></span>  
  
 <span data-ttu-id="0b671-107">Узел завершает этап перед началом следующего этапа.</span><span class="sxs-lookup"><span data-stu-id="0b671-107">A host completes a stage before beginning the next stage.</span></span> <span data-ttu-id="0b671-108">Например, при постоянном хранении, узел собирает значения от всех участников сохраняемости перед переходом ко второму этапу.</span><span class="sxs-lookup"><span data-stu-id="0b671-108">For example when persisting, the host collects values from all the persistence participants before moving to the second stage.</span></span> <span data-ttu-id="0b671-109">На втором этапе узел предоставляет все собранные на первом этапе значения всем участникам сохраняемости на втором этапе для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="0b671-109">In the second stage, the host provides all the values collected in the first stage to all persistence participants in the second stage for mapping.</span></span> <span data-ttu-id="0b671-110">На третьем этапе узел предоставляет все собранные на первом и втором этапах значения поставщику сохраняемости при вызове <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>.</span><span class="sxs-lookup"><span data-stu-id="0b671-110">In the third stage, the host provides all the collected values in the first and second stages to the persistence provider when invoking the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>.</span></span> <span data-ttu-id="0b671-111">Затем на четвертом этапе узел предоставляет все собранные значения всем участникам ввода-вывода сохраняемости в транзакции сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="0b671-111">Then in the fourth stage, the host provides all the collected values to all the persistence IO participants under the persistence transaction.</span></span>  
  
 <span data-ttu-id="0b671-112">Узел выполняет следующие этапы при загрузке экземпляра сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="0b671-112">A host executes the following stages when loading a persistence instance:</span></span>  
  
1.  <span data-ttu-id="0b671-113">Выдает команды <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> и <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> поставщику сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="0b671-113">Issues the <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> and <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> to the persistence provider.</span></span>  
  
2.  <span data-ttu-id="0b671-114">Выполняет ввод-вывод в ходе транзакции сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="0b671-114">Performs I/O under the persistence transaction.</span></span>  
  
3.  <span data-ttu-id="0b671-115">Публикует загруженные значения.</span><span class="sxs-lookup"><span data-stu-id="0b671-115">Publishes the loaded values.</span></span>  
  
 <span data-ttu-id="0b671-116">На самом высоком уровне расширения экземпляра рабочего процесса, производные от класса <xref:System.Activities.Persistence.PersistenceParticipant>, могут участвовать в первом (сбор) и втором (сопоставление) этапах процесса сохранения, и третьем этапе (публикация) процесса загрузки.</span><span class="sxs-lookup"><span data-stu-id="0b671-116">At the highest level, workflow instance extensions that derive from the <xref:System.Activities.Persistence.PersistenceParticipant> class can participate in the first (Collect) and second (Map) stages of persisting process and the third stage (Publish) of loading process.</span></span>  <span data-ttu-id="0b671-117">Расширения экземпляра рабочего процесса, производные от класса PersistenceIOParticipant, могут дополнительно участвовать в четвертом этапе процесса сохранения и втором этапе процесса загрузки (ввод-вывод).</span><span class="sxs-lookup"><span data-stu-id="0b671-117">Workflow instance extensions deriving from the PersistenceIOParticipant class can additionally participate in the fourth stage of the persisting process and the second stage of the loading process (I/O).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceIOParticipant (bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isSaveTransactionRequired, bool isLoadTransactionRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isSaveTransactionRequired As Boolean, isLoadTransactionRequired As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceIOParticipant(bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberSignature Language="F#" Value="new System.Activities.Persistence.PersistenceIOParticipant : bool * bool -&gt; System.Activities.Persistence.PersistenceIOParticipant" Usage="new System.Activities.Persistence.PersistenceIOParticipant (isSaveTransactionRequired, isLoadTransactionRequired)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isSaveTransactionRequired" Type="System.Boolean" />
        <Parameter Name="isLoadTransactionRequired" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isSaveTransactionRequired"><span data-ttu-id="0b671-118">Значение <see langword="true" />, если для операции сохранения необходима транзакция.</span><span class="sxs-lookup"><span data-stu-id="0b671-118"><see langword="true" /> if a transaction is required for the Save operation.</span></span> <span data-ttu-id="0b671-119">Если при создании объекта <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> для этого параметра было задано значение <see langword="true" />, то при вызове метода BeginOnSave обязательно будет задан объект Transaction.Current.</span><span class="sxs-lookup"><span data-stu-id="0b671-119">If the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> object is created with this parameter set to <see langword="true" />,  Transaction.Current is guaranteed to be set when BeginOnSave is invoked.</span></span> <span data-ttu-id="0b671-120">Транзакция совместно осуществляется поставщиком сохраняемости, всеми расширениями PersistenceIOParticipant и потенциально другими участниками транзакции.</span><span class="sxs-lookup"><span data-stu-id="0b671-120">The transaction is shared between the persistence provider, all PersistenceIOParticipant extensions, and potentially other transaction participants.</span></span></param>
        <param name="isLoadTransactionRequired"><span data-ttu-id="0b671-121">Значение <see langword="true" />, если для операции загрузки необходима транзакция.</span><span class="sxs-lookup"><span data-stu-id="0b671-121"><see langword="true" /> if a transaction is required for the Load operation.</span></span> <span data-ttu-id="0b671-122">Если при создании объекта <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> для этого параметра было установлено значение <see langword="true" />, то при вызове метода BeginOnLoad обязательно будет задан объект Transaction.Current.</span><span class="sxs-lookup"><span data-stu-id="0b671-122">If the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> object is created with this parameter set to <see langword="true" />,  Transaction.Current is guaranteed to be set  when BeginOnLoad is invoked.</span></span> <span data-ttu-id="0b671-123">Транзакция совместно осуществляется поставщиком сохраняемости, всеми расширениями PersistenceIOParticipant и потенциально другими участниками транзакции.</span><span class="sxs-lookup"><span data-stu-id="0b671-123">The transaction is shared between the persistence provider, all PersistenceIOParticipant extensions, and potentially other transaction participants.</span></span></param>
        <summary><span data-ttu-id="0b671-124">Инициализирует экземпляр класса <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" />.</span><span class="sxs-lookup"><span data-stu-id="0b671-124">Initializes an instance of the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.Abort" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="persistenceIOParticipant.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b671-125">Прерывает выполнение отложенной операции ввода-вывода (загрузки или сохранения).</span><span class="sxs-lookup"><span data-stu-id="0b671-125">Aborts the pending IO (Load or Save) operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b671-126">Производные классы, переопределяющие методы BeginOnSave или BeginOnLoad, которые не всегда могут быть выполнены немедленно, должны переопределить метод Abort.</span><span class="sxs-lookup"><span data-stu-id="0b671-126">Derived classes that override BeginOnSave or BeginOnLoad and might not always complete immediately must override Abort.</span></span> <span data-ttu-id="0b671-127">При вызове метода Abort необходимо отменить выполнение всех отложенных операций ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="0b671-127">If Abort is invoked, any pending IO operations must be canceled.</span></span> <span data-ttu-id="0b671-128">В этом случае при отмене операции соответствующий метод End должен вызвать исключение OperationCanceledException.</span><span class="sxs-lookup"><span data-stu-id="0b671-128">If an operation is canceled in this way, the corresponding End method should throw OperationCanceledException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnLoad">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnLoad (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnLoad(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnLoad(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginOnLoad (readWriteValues As IDictionary(Of XName, Object), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginOnLoad(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOnLoad : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginOnLoad : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceIOParticipant.BeginOnLoad (readWriteValues, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues"><span data-ttu-id="0b671-129">Словарь значений, доступных для чтения и записи, загружаемых поставщиком сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="0b671-129">A dictionary of read-write values loaded by the persistence provider.</span></span> <span data-ttu-id="0b671-130">Соответствует набору значений для чтения и записи, передаваемых методу BeginOnSave в последнем сеансе сохранения для этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="0b671-130">This corresponds to the set of read-write values passed to BeginOnSave in the most recent persistence episode for this instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="0b671-131">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="0b671-131">The time span within which the operation should be completed without timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="0b671-132">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции загрузки.</span><span class="sxs-lookup"><span data-stu-id="0b671-132">The asynchronous callback delegate that receives notification of the completion of the asynchronous Load operation.</span></span></param>
        <param name="state"><span data-ttu-id="0b671-133">Сведения о состоянии, связанные с асинхронной операцией.</span><span class="sxs-lookup"><span data-stu-id="0b671-133">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="0b671-134">Начинает асинхронную операцию для загрузки дополнительного состояния совместно с загрузкой экземпляра из хранилища экземпляров.</span><span class="sxs-lookup"><span data-stu-id="0b671-134">Begins an asynchronous operation to load additional state in conjunction with an instance being loaded from the instance store.</span></span></summary>
        <returns><span data-ttu-id="0b671-135">Состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="0b671-135">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnSave">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnSave (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnSave(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginOnSave (readWriteValues As IDictionary(Of XName, Object), writeOnlyValues As IDictionary(Of XName, Object), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginOnSave(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOnSave : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginOnSave : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceIOParticipant.BeginOnSave (readWriteValues, writeOnlyValues, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues"><span data-ttu-id="0b671-136">Словарь значений, доступных для чтения и записи, сбор которых выполняется на этапах CollectValues и MapValues.</span><span class="sxs-lookup"><span data-stu-id="0b671-136">A dictionary of read-write values collected in the CollectValues and MapValues stages.</span></span></param>
        <param name="writeOnlyValues"><span data-ttu-id="0b671-137">Словарь значений, доступных только на запись, сбор которых выполняется на этапах CollectValues и MapValues.</span><span class="sxs-lookup"><span data-stu-id="0b671-137">A dictionary of write-only values collected in the CollectValues and MapValues stages.</span></span></param>
        <param name="timeout"><span data-ttu-id="0b671-138">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="0b671-138">The time span within which the operation should be completed without timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="0b671-139">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="0b671-139">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="0b671-140">Сведения о состоянии, связанные с асинхронной операцией.</span><span class="sxs-lookup"><span data-stu-id="0b671-140">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="0b671-141">Начинает асинхронную операцию для сохранения дополнительного состояния совместно с сохранением экземпляра в хранилище экземпляров.</span><span class="sxs-lookup"><span data-stu-id="0b671-141">Begins an asynchronous operation to save additional state in conjunction with an instance being persisted to the instance store.</span></span></summary>
        <returns><span data-ttu-id="0b671-142">Состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="0b671-142">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnLoad">
      <MemberSignature Language="C#" Value="protected virtual void EndOnLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndOnLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndOnLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOnLoad : IAsyncResult -&gt; unit&#xA;override this.EndOnLoad : IAsyncResult -&gt; unit" Usage="persistenceIOParticipant.EndOnLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0b671-143">Асинхронный результат, возвращаемый вызовом метода <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="0b671-143">The asynchronous result returned by a call to the <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="0b671-144">Завершает асинхронную операцию загрузки.</span><span class="sxs-lookup"><span data-stu-id="0b671-144">Completes the asynchronous Load operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnSave">
      <MemberSignature Language="C#" Value="protected virtual void EndOnSave (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnSave(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnSave(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndOnSave (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndOnSave(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOnSave : IAsyncResult -&gt; unit&#xA;override this.EndOnSave : IAsyncResult -&gt; unit" Usage="persistenceIOParticipant.EndOnSave result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0b671-145">Асинхронный результат, возвращаемый вызовом метода <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="0b671-145">The asynchronous result returned by a call to the <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="0b671-146">Завершает асинхронную операцию сохранения.</span><span class="sxs-lookup"><span data-stu-id="0b671-146">Completes the asynchronous Save operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
