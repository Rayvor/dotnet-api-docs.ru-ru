<Type Name="PersistenceParticipant" FullName="System.Activities.Persistence.PersistenceParticipant">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1229e3ac3949ceb6777a3886fe62a80e7839ebe0" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73376567" /></Metadata><TypeSignature Language="C#" Value="public abstract class PersistenceParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceParticipant extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceParticipant abstract" />
  <TypeSignature Language="F#" Value="type PersistenceParticipant = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Этот класс позволяет использовать объекты <see cref="T:System.Activities.WorkflowApplication" /> и <see cref="T:System.ServiceModel.WorkflowServiceHost" /> в процессе сохранения. Участник сохраняемости, являющийся производным от класса <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> или класса <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> (производный класс от класса <see cref="T:System.Activities.Persistence.PersistenceParticipant" />), реализует абстрактные методы, а затем добавляет экземпляр класса как расширение экземпляра рабочего процесса. Объекты <see cref="T:System.Activities.WorkflowApplication" /> и <see cref="T:System.ServiceModel.WorkflowServiceHost" /> выполняют поиск таких расширений при сохранении экземпляра и в соответствующее время вызывают соответствующие методы.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Узел выполняет следующие шаги (или этапы) при сохранении экземпляра.  
  
1.  Собирает сохраняемые значения.  
  
2.  Сопоставляет поля монолитно структурированных значений отдельным значениям.  
  
3.  Выдает команду <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> поставщику сохраняемости.  
  
4.  Выполняет ввод-вывод в ходе транзакции сохраняемости.  
  
 Узел завершает этап перед началом следующего этапа. Например, при постоянном хранении, узел собирает значения от всех участников сохраняемости перед переходом ко второму этапу. На втором этапе узел предоставляет все собранные на первом этапе значения всем участникам сохраняемости на втором этапе для сопоставления. На третьем этапе узел предоставляет все собранные на первом и втором этапах значения поставщику сохраняемости при вызове <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>. Затем на четвертом этапе узел предоставляет все собранные значения всем участникам ввода-вывода сохраняемости в транзакции сохраняемости.  
  
 Узел выполняет следующие этапы при загрузке экземпляра сохраняемости.  
  
1.  Выдает команды <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> и <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> поставщику сохраняемости.  
  
2.  Выполняет ввод-вывод в ходе транзакции сохраняемости.  
  
3.  Публикует загруженные значения.  
  
 На самом высоком уровне расширения экземпляра рабочего процесса, производные от класса <xref:System.Activities.Persistence.PersistenceParticipant>, могут участвовать в первом (сбор) и втором (сопоставление) этапах процесса сохранения, и третьем этапе (публикация) процесса загрузки.  Расширения экземпляра рабочего процесса, производные от класса PersistenceIOParticipant, могут дополнительно участвовать в четвертом этапе процесса сохранения и втором этапе процесса загрузки (ввод-вывод).  
  
   
  
## Examples  
 В следующем образце кода показано создание класса, производного от <xref:System.Activities.Persistence.PersistenceParticipant>. Этот пример представлен в примере с [процессом найма](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md) .  
  
 [!code-csharp[wfs_HiringRequestProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_hiringrequestprocess/cs/hiringrequestpersistenceparticipant.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceParticipant();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.Persistence.PersistenceParticipant" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем образце кода показано создание класса, производного от <xref:System.Activities.Persistence.PersistenceParticipant>. Этот пример представлен в примере с [процессом найма](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md) .  
  
 [!code-csharp[wfs_HiringRequestProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_hiringrequestprocess/cs/hiringrequestpersistenceparticipant.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectValues">
      <MemberSignature Language="C#" Value="protected virtual void CollectValues (out System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, out System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CollectValues([out] class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt;&amp; readWriteValues, [out] class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt;&amp; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CollectValues (ByRef readWriteValues As IDictionary(Of XName, Object), ByRef writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CollectValues([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ % readWriteValues, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ % writeOnlyValues);" />
      <MemberSignature Language="F#" Value="abstract member CollectValues : IDictionary * IDictionary -&gt; unit&#xA;override this.CollectValues : IDictionary * IDictionary -&gt; unit" Usage="persistenceParticipant.CollectValues (readWriteValues, writeOnlyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" RefType="out" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">Сохраняемые значения для чтения и записи.</param>
        <param name="writeOnlyValues">Сохраняемые значения, доступные только на запись.</param>
        <summary>Узел вызывает этот метод для нестандартного участника сохраняемости, собирающего значения, доступные для чтения и записи, и значения, доступные только на запись, которые необходимо сохранить.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Узел упаковывает значения, доступные для чтения и записи, в первый словарь в виде объектов <xref:System.Runtime.DurableInstancing.InstanceValue> коллекции <xref:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData*>, а значения, доступные только на запись, — во второй словарь в виде объектов <xref:System.Runtime.DurableInstancing.InstanceValue> с установленными флагами <xref:System.Runtime.DurableInstancing.InstanceValueOptions.Optional> и <xref:System.Runtime.DurableInstancing.InstanceValueOptions.WriteOnly>. Для получения дополнительной информации см. <xref:System.Runtime.DurableInstancing.InstanceValueOptions>.  
  
> [!IMPORTANT]
>  Все значения, предоставленные реализациями <xref:System.Activities.Persistence.PersistenceParticipant.CollectValues%2A> для всех участников сохраняемости в одном сеансе сохраняемости, должны иметь уникальные свойства XName.  
  
   
  
## Examples  
 В следующем образце кода показано использование метода CollectValues в классе, производном от <xref:System.Activities.Persistence.PersistenceParticipant>. Этот пример представлен в образце [участников сохраняемости](~/docs/framework/windows-workflow-foundation/persistence-participants.md) .  
  
 [!code-csharp[wfs_PersistenceParticipants#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_persistenceparticipants/cs/stepcountextension.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapValues">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; MapValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; MapValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MapValues (readWriteValues As IDictionary(Of XName, Object), writeOnlyValues As IDictionary(Of XName, Object)) As IDictionary(Of XName, Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ MapValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberSignature Language="F#" Value="abstract member MapValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt;&#xA;override this.MapValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt;" Usage="persistenceParticipant.MapValues (readWriteValues, writeOnlyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">Сохраняемые значения для чтения и записи.</param>
        <param name="writeOnlyValues">Сохраняемые значения, доступные только на запись.</param>
        <summary>Узел вызывает этот метод после завершения сбора значений на первом этапе. Узел перенаправляет два словаря значений, доступных только для чтения, собранных от всех участников сохраняемости на первом этапе (этапе CollectValues), этому методу для сопоставления. Узел добавляет значения из словаря, возвращаемого этим методом, в коллекцию значений, доступных только на запись.</summary>
        <returns>Словарь, содержащий дополнительные значения, доступные только на запись, которые необходимо сохранить.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все значения, предоставленные реализациями всех методов <xref:System.Activities.Persistence.PersistenceParticipant.MapValues%2A> для всех участников сохраняемости, включая все значения, собранные на первом этапе (CollectValues), должны иметь уникальные свойства XName.  
  
   
  
## Examples  
 В следующем образце кода показано использование метода MapValues в классе, производном от <xref:System.Activities.Persistence.PersistenceParticipant>. Этот пример представлен в примере с [корпоративным процессом приобретения](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) .  
  
 [!code-csharp[wfs_PurchaseProcess#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/xmlpersistenceparticipant.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishValues">
      <MemberSignature Language="C#" Value="protected virtual void PublishValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PublishValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PublishValues (readWriteValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PublishValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues);" />
      <MemberSignature Language="F#" Value="abstract member PublishValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit&#xA;override this.PublishValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit" Usage="persistenceParticipant.PublishValues readWriteValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">Значения, доступные для чтения и записи, загруженные из хранилища сохраняемости. Этот словарь соответствует словарю значений, доступных для чтения и записи, сохраняемых в последнем сеансе сохраняемости.</param>
        <summary>Узел вызывает этот метод и передает все загруженные значения из коллекции <see cref="P:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData" /> (заполненной <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> или <see cref="T:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand" />) в качестве параметра словаря.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем образце кода показано использование метода PublishValues в классе, производном от <xref:System.Activities.Persistence.PersistenceParticipant>. Этот пример представлен в образце [участников сохраняемости](~/docs/framework/windows-workflow-foundation/persistence-participants.md) .  
  
 [!code-csharp[wfs_PersistenceParticipants#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_persistenceparticipants/cs/stepcountextension.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
