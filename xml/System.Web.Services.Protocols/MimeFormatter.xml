<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21c13f63563ac6f45b9e5d9c268839da1c57b946" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64023642" /></Metadata><TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <TypeSignature Language="F#" Value="type MimeFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2a5ae-101">Предоставляет абстрактный базовый класс для всех средств чтения и записи веб-служб и клиентов, реализуемых с использованием HTTP, но без SOAP.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-101">Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a5ae-102">Создатели веб-службы и читатели сериализации и десериализации, соответственно, между параметрами или возвращаемыми объектами веб-методов и HTTP-запроса или ответа потоков.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-102">Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="2a5ae-103"><xref:System.Web.Services.Protocols.MimeFormatter> Класс устанавливает общий интерфейс и функциональность для чтения и записи классов, на стороне сервера и клиента.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-103">The <xref:System.Web.Services.Protocols.MimeFormatter> class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</span></span>  
  
 <span data-ttu-id="2a5ae-104"><xref:System.Web.Services.Protocols.MimeFormatter> Класс поддерживает платформы .NET Framework реализация веб-служб посредством операций HTTP-GET и HTTP-POST.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-104">The <xref:System.Web.Services.Protocols.MimeFormatter> class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="2a5ae-105">В операциях HTTP-GET параметры запроса шифруются в HTTP-запроса унифицированный указатель ресурса (URL).</span><span class="sxs-lookup"><span data-stu-id="2a5ae-105">In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</span></span> <span data-ttu-id="2a5ae-106">В операциях HTTP-POST параметры запроса кодируются в HTTP-запроса, как и в HTML-форму.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-106">In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</span></span> <span data-ttu-id="2a5ae-107">В обеих реализациях возвращаемое значение отображается в тексте ответа HTTP как документ SOAP XML.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-107">With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</span></span>  
  
 <span data-ttu-id="2a5ae-108">Разработчика обычно не требуется напрямую использовать <xref:System.Web.Services.Protocols.MimeFormatter> или его классов-потомков.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-108">A developer typically does not need to directly use <xref:System.Web.Services.Protocols.MimeFormatter> or its descendant classes.</span></span> <span data-ttu-id="2a5ae-109">Вместо этого, когда инструмент Wsdl.exe создает код прокси клиента в соответствии с реализации HTTP-GET или HTTP-POST, он применяется <xref:System.Web.Services.Protocols.HttpMethodAttribute> для каждого метода веб- и задает атрибут <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> и <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> свойства к соответствующему типу производный от <xref:System.Web.Services.Protocols.MimeFormatter> класса.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-109">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> and <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> properties to the appropriate type derived from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="2a5ae-110">На сервере соответствующие производные типы используются в соответствии с параметрами в файле конфигурации (Web.config) ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-110">On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</span></span> <span data-ttu-id="2a5ae-111">На клиенте соответствующие производные типы определяются из WSDL.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-111">On the client the appropriate derived types are determined from the WSDL.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a5ae-112">Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-112">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj -&gt; System.Web.Services.Protocols.MimeFormatter" Usage="System.Web.Services.Protocols.MimeFormatter.CreateInstance (type, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a5ae-113">Тип, полученный из <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> и используемый для создания экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-113">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, of which to create an instance.</span></span></param>
        <param name="initializer"><span data-ttu-id="2a5ae-114">Объект, используемый для инициализации экземпляра, полученного ранее через реализацию метода <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> производного класса.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-114">An object used to initialize the instance obtained earlier through the derived class's implementation of the <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method.</span></span></param>
        <summary><span data-ttu-id="2a5ae-115">Создает и инициализирует экземпляр конкретного класса, производного от <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-115">Creates and initializes an instance of a concrete class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="2a5ae-116">Объект <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-116">A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a5ae-117"><xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Метод создает экземпляр производного класса и вызывает реализацию абстрактного производного класса <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-117">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method creates an instance of the derived class and invokes the derived class's implementation of the abstract <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="2a5ae-118"><xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Метод вызывается во время обработки запроса или ответа.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-118">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is invoked at the time a request or response is processed.</span></span>  
  
 <span data-ttu-id="2a5ae-119">Инициализатор — это объект, переданный в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-119">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="2a5ae-120">Инициализатор, переданный в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> метод получается из другого экземпляра производного класса, путем вызова <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> метод во время инициализации клиента или службы.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-120">The initializer passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is obtained from another instance of the derived class, by invoking the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a5ae-121">Когда переопределен в производном классе, возвращает инициализатор для указанного метода.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-121">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="mimeFormatter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="2a5ae-122">Объект <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, указывающий веб-метод, для которого получен инициализатор.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-122">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="2a5ae-123">Когда переопределен в производном классе, возвращает инициализатор для указанного метода.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-123">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="2a5ae-124">Объект <see cref="T:System.Object" />, содержащий инициализатор для указанного метода.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-124">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a5ae-125">Инициализатор — это объект, переданный в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-125">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="2a5ae-126">Реализация производного класса <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> метод экземпляра вызывается во время инициализации клиента или службы.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-126">A derived class's implementation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method is invoked during client or service initialization.</span></span> <span data-ttu-id="2a5ae-127">Позже, во время обработки запроса или ответа, инициализатор объекта передается статический <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> метод, который создает экземпляр другого объекта производного класса, а затем <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод для его инициализации.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-127">Later, at the time a request or response is processed, the initializer object is passed to the static <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method, which creates an instance of another object of the derived class, and then to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method to initialize it.</span></span> <span data-ttu-id="2a5ae-128">Другой объект выполняет фактическое чтения или записи.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-128">The other object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="static member GetInitializer : Type * System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializer (type, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a5ae-129">Тип, извлекаемый из <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, для которого получается инициализатор.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-129">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />,- for which an initializer is obtained.</span></span></param>
        <param name="methodInfo"><span data-ttu-id="2a5ae-130">Объект <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, указывающий веб-метод, для которого получен инициализатор.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-130">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="2a5ae-131">Возвращает инициализатор для указанного метода.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-131">Returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="2a5ae-132">Объект <see cref="T:System.Object" />, содержащий инициализатор для указанного метода.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-132">A <see cref="T:System.Object" /> object that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a5ae-133">Инициализатор — это объект, переданный в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-133">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="2a5ae-134">Статический <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> производном классе вызывает метод <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> метод, неявном создании экземпляра производного класса.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-134">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method invokes the derived class's <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method, implicitly creating an instance of the derived class.</span></span> <span data-ttu-id="2a5ae-135">Во время обработки запроса или ответа, передаваемый объект инициализатора <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод другого экземпляра производного класса.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-135">At the time a request or response is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="2a5ae-136">Второй объект выполняет фактическое чтения или записи.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-136">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a5ae-137">Когда переопределен в производном классе, возвращает массив объектов инициализаторов, соответствующий входному массиву определений методов.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-137">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]&#xA;override this.GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="mimeFormatter.GetInitializers methodInfos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos"><span data-ttu-id="2a5ae-138">Массив веб-методов, где для каждого метода получают объект с соответствующим индексом в возвращаемом массиве инициализаторов.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-138">An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</span></span></param>
        <summary><span data-ttu-id="2a5ae-139">Когда переопределен в производном классе, возвращает массив объектов инициализаторов, соответствующий входному массиву определений методов.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-139">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
        <returns><span data-ttu-id="2a5ae-140">Массив объектов инициализаторов, соответствующий входному массиву определений методов.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-140">An array of initializer objects corresponding to the input array of method definitions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a5ae-141">Инициализатор — это объект, переданный в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-141">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="2a5ae-142"><xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> Вызывает метод экземпляра <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> метод экземпляра для каждого входного веб-метода.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-142">The <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> instance method invokes the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method for each input Web method.</span></span> <span data-ttu-id="2a5ae-143">Это означает, что экземпляр класса, производного от <xref:System.Web.Services.Protocols.MimeFormatter> уже создан.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-143">This means an instance of a class derived from <xref:System.Web.Services.Protocols.MimeFormatter> has already been created.</span></span> <span data-ttu-id="2a5ae-144">Во время обработки запроса или ответа, передается инициализатор <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод другого экземпляра производного класса.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-144">At the time a request or response is processed, the initializer is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="2a5ae-145">Второй объект выполняет фактическое чтения или записи.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-145">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="static member GetInitializers : Type * System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializers (type, methodInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a5ae-146">Тип, извлекаемый из средства форматирования <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, для которого получены инициализаторы.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-146">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, for which initializers are obtained.</span></span></param>
        <param name="methodInfos"><span data-ttu-id="2a5ae-147">Массив типа <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, задающий веб-методы, для которых получены инициализаторы.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-147">An array of type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web methods for which the initializers are obtained.</span></span></param>
        <summary><span data-ttu-id="2a5ae-148">Возвращает массив объектов инициализаторов, соответствующий входному массиву определений методов для указанного класса, полученного из класса <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-148">Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="2a5ae-149">Массив объектов инициализаторов, соответствующий входному массиву определений методов для указанного класса, полученного из класса <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-149">An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a5ae-150">Инициализатор — это объект, переданный в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-150">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="2a5ae-151">Статический <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> приводит к вызову <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> метода, принадлежащего объекту производного класса, указанного параметром `type` параметр.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-151">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> method causes the invocation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method belonging to the derived class specified by the `type` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="mimeFormatter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer"><span data-ttu-id="2a5ae-152">Объект, тип которого подходит для конкретного класса, реализующего метод.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-152">An object of a type appropriate to the particular class that is implementing the method.</span></span></param>
        <summary><span data-ttu-id="2a5ae-153">Когда переопределен в производном классе, инициализирует экземпляр.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-153">When overridden in a derived class, initializes an instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a5ae-154"><xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Метод вызывается во время обработки запроса или ответа; тем не менее, инициализатор получается путем вызова <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> метод на другом экземпляре во время инициализации клиента или службы.</span><span class="sxs-lookup"><span data-stu-id="2a5ae-154">The <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method on another instance during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>