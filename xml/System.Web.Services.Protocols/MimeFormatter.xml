<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21c13f63563ac6f45b9e5d9c268839da1c57b946" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64023642" /></Metadata><TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <TypeSignature Language="F#" Value="type MimeFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет абстрактный базовый класс для всех средств чтения и записи веб-служб и клиентов, реализуемых с использованием HTTP, но без SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Создатели веб-службы и читатели сериализации и десериализации, соответственно, между параметрами или возвращаемыми объектами веб-методов и HTTP-запроса или ответа потоков. <xref:System.Web.Services.Protocols.MimeFormatter> Класс устанавливает общий интерфейс и функциональность для чтения и записи классов, на стороне сервера и клиента.  
  
 <xref:System.Web.Services.Protocols.MimeFormatter> Класс поддерживает платформы .NET Framework реализация веб-служб посредством операций HTTP-GET и HTTP-POST. В операциях HTTP-GET параметры запроса шифруются в HTTP-запроса унифицированный указатель ресурса (URL). В операциях HTTP-POST параметры запроса кодируются в HTTP-запроса, как и в HTML-форму. В обеих реализациях возвращаемое значение отображается в тексте ответа HTTP как документ SOAP XML.  
  
 Разработчика обычно не требуется напрямую использовать <xref:System.Web.Services.Protocols.MimeFormatter> или его классов-потомков. Вместо этого, когда инструмент Wsdl.exe создает код прокси клиента в соответствии с реализации HTTP-GET или HTTP-POST, он применяется <xref:System.Web.Services.Protocols.HttpMethodAttribute> для каждого метода веб- и задает атрибут <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> и <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> свойства к соответствующему типу производный от <xref:System.Web.Services.Protocols.MimeFormatter> класса. На сервере соответствующие производные типы используются в соответствии с параметрами в файле конфигурации (Web.config) ASP.NET. На клиенте соответствующие производные типы определяются из WSDL.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj -&gt; System.Web.Services.Protocols.MimeFormatter" Usage="System.Web.Services.Protocols.MimeFormatter.CreateInstance (type, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">Тип, полученный из <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> и используемый для создания экземпляра.</param>
        <param name="initializer">Объект, используемый для инициализации экземпляра, полученного ранее через реализацию метода <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> производного класса.</param>
        <summary>Создает и инициализирует экземпляр конкретного класса, производного от <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</summary>
        <returns>Объект <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Метод создает экземпляр производного класса и вызывает реализацию абстрактного производного класса <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод. <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Метод вызывается во время обработки запроса или ответа.  
  
 Инициализатор — это объект, переданный в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод. Инициализатор, переданный в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> метод получается из другого экземпляра производного класса, путем вызова <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> метод во время инициализации клиента или службы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Когда переопределен в производном классе, возвращает инициализатор для указанного метода.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="mimeFormatter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">Объект <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, указывающий веб-метод, для которого получен инициализатор.</param>
        <summary>Когда переопределен в производном классе, возвращает инициализатор для указанного метода.</summary>
        <returns>Объект <see cref="T:System.Object" />, содержащий инициализатор для указанного метода.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Инициализатор — это объект, переданный в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод.  
  
 Реализация производного класса <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> метод экземпляра вызывается во время инициализации клиента или службы. Позже, во время обработки запроса или ответа, инициализатор объекта передается статический <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> метод, который создает экземпляр другого объекта производного класса, а затем <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод для его инициализации. Другой объект выполняет фактическое чтения или записи.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="static member GetInitializer : Type * System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializer (type, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type">Тип, извлекаемый из <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, для которого получается инициализатор.</param>
        <param name="methodInfo">Объект <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, указывающий веб-метод, для которого получен инициализатор.</param>
        <summary>Возвращает инициализатор для указанного метода.</summary>
        <returns>Объект <see cref="T:System.Object" />, содержащий инициализатор для указанного метода.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Инициализатор — это объект, переданный в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод.  
  
 Статический <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> производном классе вызывает метод <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> метод, неявном создании экземпляра производного класса. Во время обработки запроса или ответа, передаваемый объект инициализатора <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод другого экземпляра производного класса. Второй объект выполняет фактическое чтения или записи.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Когда переопределен в производном классе, возвращает массив объектов инициализаторов, соответствующий входному массиву определений методов.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]&#xA;override this.GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="mimeFormatter.GetInitializers methodInfos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos">Массив веб-методов, где для каждого метода получают объект с соответствующим индексом в возвращаемом массиве инициализаторов.</param>
        <summary>Когда переопределен в производном классе, возвращает массив объектов инициализаторов, соответствующий входному массиву определений методов.</summary>
        <returns>Массив объектов инициализаторов, соответствующий входному массиву определений методов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Инициализатор — это объект, переданный в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод.  
  
 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> Вызывает метод экземпляра <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> метод экземпляра для каждого входного веб-метода. Это означает, что экземпляр класса, производного от <xref:System.Web.Services.Protocols.MimeFormatter> уже создан. Во время обработки запроса или ответа, передается инициализатор <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод другого экземпляра производного класса. Второй объект выполняет фактическое чтения или записи.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="static member GetInitializers : Type * System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializers (type, methodInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type">Тип, извлекаемый из средства форматирования <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, для которого получены инициализаторы.</param>
        <param name="methodInfos">Массив типа <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, задающий веб-методы, для которых получены инициализаторы.</param>
        <summary>Возвращает массив объектов инициализаторов, соответствующий входному массиву определений методов для указанного класса, полученного из класса <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</summary>
        <returns>Массив объектов инициализаторов, соответствующий входному массиву определений методов для указанного класса, полученного из класса <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Инициализатор — это объект, переданный в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> метод.  
  
 Статический <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> приводит к вызову <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> метода, принадлежащего объекту производного класса, указанного параметром `type` параметр.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="mimeFormatter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">Объект, тип которого подходит для конкретного класса, реализующего метод.</param>
        <summary>Когда переопределен в производном классе, инициализирует экземпляр.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Метод вызывается во время обработки запроса или ответа; тем не менее, инициализатор получается путем вызова <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> метод на другом экземпляре во время инициализации клиента или службы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>