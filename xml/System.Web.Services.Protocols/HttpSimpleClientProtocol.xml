<Type Name="HttpSimpleClientProtocol" FullName="System.Web.Services.Protocols.HttpSimpleClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d50f1489d37dfa83d618abba7f89416b5b7b423c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70582845" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpSimpleClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpSimpleClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpSimpleClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSimpleClientProtocol abstract : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpSimpleClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2f543-101">Представляет базовый класс для взаимодействия с веб-службой XML, используя простые привязки протоколов HTTP-GET и HTTP-POST.</span><span class="sxs-lookup"><span data-stu-id="2f543-101">Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f543-102">Этот класс задает большую часть реализации для взаимодействия с веб-службой XML через HTTP, используя кодировщики для кодирования параметров и возвращаемых значений в общие форматы MIME.</span><span class="sxs-lookup"><span data-stu-id="2f543-102">This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats.</span></span> <span data-ttu-id="2f543-103">Эти кодировщики являются производными от <xref:System.Web.Services.Protocols.MimeFormatter> класса.</span><span class="sxs-lookup"><span data-stu-id="2f543-103">These encoders derive from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="2f543-104">По умолчанию класс-посредник, производный <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> от, кодирует параметры с помощью типа MIME application/x-www-Form-UrlEncoded и ответа в виде обычного XML.</span><span class="sxs-lookup"><span data-stu-id="2f543-104">By default, a proxy class deriving from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML.</span></span> <span data-ttu-id="2f543-105">Пользовательские модули форматирования MIME можно указать с помощью <xref:System.Web.Services.Protocols.HttpMethodAttribute> атрибута, однако не существует поддержки интеграции этого в описание службы и создание прокси-сервера.</span><span class="sxs-lookup"><span data-stu-id="2f543-105">Custom mime formatters can be specified using the <xref:System.Web.Services.Protocols.HttpMethodAttribute> attribute, however, there is no support for integrating this into a service description and proxy generation.</span></span>  
  
 <span data-ttu-id="2f543-106">`Notes to Inheritors:`При переопределении этого класса можно ввести в производный класс методы, относящиеся к конкретному типу веб-службы XML.</span><span class="sxs-lookup"><span data-stu-id="2f543-106">`Notes to Inheritors:` When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service.</span></span> <span data-ttu-id="2f543-107">Методы просто захватывают параметры и вызывают базовый класс для выполнения работы по взаимодействию с сайтом.</span><span class="sxs-lookup"><span data-stu-id="2f543-107">The methods simply capture the parameters, and call the base class to do the work of communicating with the site.</span></span> <span data-ttu-id="2f543-108">Если введенные методы являются асинхронными, <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> вызовите <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> методы и.</span><span class="sxs-lookup"><span data-stu-id="2f543-108">If the introduced methods are asynchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> and <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> methods.</span></span> <span data-ttu-id="2f543-109">Если введенные методы являются синхронными, вызовите <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2f543-109">If the introduced methods are synchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="2f543-110">Переопределенный конструктор обычно задает <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> для свойства URI метода веб-службы XML.</span><span class="sxs-lookup"><span data-stu-id="2f543-110">The overridden constructor typically sets the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to the URI of the XML Web service method.</span></span>  
  
 <span data-ttu-id="2f543-111">Средство языка описания веб-служб (WSDL. exe) создает производные классы <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> для указанного описания службы.</span><span class="sxs-lookup"><span data-stu-id="2f543-111">The Web Services Description Language tool (Wsdl.exe) generates derived classes of <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> for a given Service Description.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f543-112">В следующем примере кода показан прокси-класс, созданный WSDL `Math`</span><span class="sxs-lookup"><span data-stu-id="2f543-112">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below.</span></span> <span data-ttu-id="2f543-113">Класс-посредник является производным <xref:System.Web.Services.Protocols.HttpGetClientProtocol>от класса, производного от абстрактного. <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol></span><span class="sxs-lookup"><span data-stu-id="2f543-113">The proxy class derives from <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2f543-114">Следующий пример кода представляет собой `Math` веб-службу XML, из которой был создан предыдущий прокси-класс.</span><span class="sxs-lookup"><span data-stu-id="2f543-114">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="2f543-115">Данный тип потокобезопасен.</span><span class="sxs-lookup"><span data-stu-id="2f543-115">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpSimpleClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpSimpleClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f543-116">Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />.</span><span class="sxs-lookup"><span data-stu-id="2f543-116">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, string requestUrl, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, string requestUrl, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, requestUrl As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="httpSimpleClientProtocol.BeginInvoke (methodName, requestUrl, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="2f543-117">Имя метода веб-службы XML.</span><span class="sxs-lookup"><span data-stu-id="2f543-117">The name of the XML Web service method.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="2f543-118">URL-адрес, используемый при создании <see cref="T:System.Net.WebRequest" />.</span><span class="sxs-lookup"><span data-stu-id="2f543-118">The URL to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="2f543-119">Массив объектов, содержащий параметры для передачи методу веб-службы XML.</span><span class="sxs-lookup"><span data-stu-id="2f543-119">An array of objects containing the parameters to pass to the XML Web service method.</span></span> <span data-ttu-id="2f543-120">Порядок значений в массиве соответствует порядку параметров в вызывающем методе производного класса.</span><span class="sxs-lookup"><span data-stu-id="2f543-120">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <param name="callback"><span data-ttu-id="2f543-121">Делегат, который вызывается после завершения асинхронного вызова метода.</span><span class="sxs-lookup"><span data-stu-id="2f543-121">The delegate to call when the asynchronous method call is complete.</span></span> <span data-ttu-id="2f543-122">Если значение параметра <paramref name="callback" /> равно <see langword="null" />, делегат не вызывается.</span><span class="sxs-lookup"><span data-stu-id="2f543-122">If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="asyncState"><span data-ttu-id="2f543-123">Дополнительная информация, предоставляемая клиентом.</span><span class="sxs-lookup"><span data-stu-id="2f543-123">The additional information supplied by a client.</span></span></param>
        <summary><span data-ttu-id="2f543-124">Начинает асинхронный вызов метода веб-службы XML.</span><span class="sxs-lookup"><span data-stu-id="2f543-124">Starts an asynchronous invocation of a method of an XML Web service.</span></span></summary>
        <returns><span data-ttu-id="2f543-125">Объект <see cref="T:System.IAsyncResult" />, который может передаваться методу <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> для получения возвращаемых значений из метода веб-службы XML.</span><span class="sxs-lookup"><span data-stu-id="2f543-125">An <see cref="T:System.IAsyncResult" /> that can be passed to the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the XML Web service method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f543-126">Параметр используется для поиска типов параметров и возвращаемых значений метода, вызывающего <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> метод. `methodName`</span><span class="sxs-lookup"><span data-stu-id="2f543-126">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="2f543-127">Он также используется для поиска настраиваемых атрибутов, которые могли быть добавлены в метод.</span><span class="sxs-lookup"><span data-stu-id="2f543-127">It is also used to find custom attributes that may have been added to the method.</span></span> <span data-ttu-id="2f543-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> и <xref:System.Xml.Serialization.XmlElementAttribute>  предоставляют дополнительные сведения о производном методе, который требуется для протокола HTTP.</span><span class="sxs-lookup"><span data-stu-id="2f543-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the HTTP protocol.</span></span>  
  
 <span data-ttu-id="2f543-129">`asyncState`передается `callback` в и включается <xref:System.IAsyncResult> в <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> , который возвращается методом.</span><span class="sxs-lookup"><span data-stu-id="2f543-129">`asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="2f543-130">Это полезно для передачи информации из контекста асинхронного вызова в обработку асинхронного результата в `callback`.</span><span class="sxs-lookup"><span data-stu-id="2f543-130">It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in `callback`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f543-131">Следующий пример кода представляет собой веб-форму ASP.NET, которая вызывает веб-службу XML с `Math`именем.</span><span class="sxs-lookup"><span data-stu-id="2f543-131">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="2f543-132">В рамках `Add` функции веб-форма запускается и завершает асинхронный вызов метода веб-службы XML. `EnterBtn_Click`</span><span class="sxs-lookup"><span data-stu-id="2f543-132">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="2f543-133">В следующем примере кода показан прокси-класс, созданный с помощью средства языка описания веб-служб (WSDL. exe) `Math` для XML Web Service, приведенного ниже.</span><span class="sxs-lookup"><span data-stu-id="2f543-133">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="2f543-134">В методе класса <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> -посредника метод запускает `Add` асинхронный вызов метода веб-службы XML. `BeginAdd`</span><span class="sxs-lookup"><span data-stu-id="2f543-134">Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="2f543-135">Следующий пример кода представляет собой `Math` веб-службу XML, из которой был создан предыдущий прокси-класс.</span><span class="sxs-lookup"><span data-stu-id="2f543-135">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="2f543-136">Запрос достиг сервера, но не обработан успешно.</span><span class="sxs-lookup"><span data-stu-id="2f543-136">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj" Usage="httpSimpleClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="2f543-137">Объект <see cref="T:System.IAsyncResult" />, возвращаемый из метода <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="2f543-137">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="2f543-138">Завершает асинхронный вызов метода веб-службы XML с использованием HTTP.</span><span class="sxs-lookup"><span data-stu-id="2f543-138">Completes asynchronous invocation of an XML Web service method using HTTP.</span></span></summary>
        <returns><span data-ttu-id="2f543-139">Массив объектов, содержащий возвращаемое значение и все параметры, передаваемые по ссылке, и параметры <paramref name="out" /> для метода веб-службы XML.</span><span class="sxs-lookup"><span data-stu-id="2f543-139">An array of objects containing the return value and any by reference or <paramref name="out" /> parameters for the XML Web service method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f543-140">Следующий пример кода представляет собой веб-форму ASP.NET, которая вызывает веб-службу XML с `Math`именем.</span><span class="sxs-lookup"><span data-stu-id="2f543-140">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="2f543-141">В рамках `Add` функции веб-форма запускается и завершает асинхронный вызов метода веб-службы XML. `EnterBtn_Click`</span><span class="sxs-lookup"><span data-stu-id="2f543-141">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="2f543-142">В следующем примере кода показан прокси-класс, созданный с помощью средства языка описания веб-служб (WSDL. exe) `Math` для XML Web Service, приведенного ниже.</span><span class="sxs-lookup"><span data-stu-id="2f543-142">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="2f543-143">В методе класса <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> -посредника метод запускает `Add` асинхронный вызов метода веб-службы XML. `EndAdd`</span><span class="sxs-lookup"><span data-stu-id="2f543-143">Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="2f543-144">Следующий пример кода представляет собой `Math` веб-службу XML, из которой был создан указанный выше прокси-класс.</span><span class="sxs-lookup"><span data-stu-id="2f543-144">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2f543-145"><paramref name="asyncResult" /> не является значением, возвращаемым из метода <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="2f543-145"><paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object Invoke (string methodName, string requestUrl, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object Invoke(string methodName, string requestUrl, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, requestUrl As String, parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ Invoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * string * obj[] -&gt; obj" Usage="httpSimpleClientProtocol.Invoke (methodName, requestUrl, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="2f543-146">Имя метода веб-службы XML в производном классе, вызывающем метод <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="2f543-146">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /> method.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="2f543-147">URL-адрес метода веб-службы XML, запрошенного клиентом.</span><span class="sxs-lookup"><span data-stu-id="2f543-147">The URL of the XML Web service method that the client is requesting.</span></span></param>
        <param name="parameters"><span data-ttu-id="2f543-148">Массив объектов, содержащий параметры для передачи удаленной веб-службе XML.</span><span class="sxs-lookup"><span data-stu-id="2f543-148">An array of objects containing the parameters to pass to the remote XML Web service.</span></span> <span data-ttu-id="2f543-149">Порядок значений в массиве соответствует порядку параметров в вызывающем методе производного класса.</span><span class="sxs-lookup"><span data-stu-id="2f543-149">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <summary><span data-ttu-id="2f543-150">Вызывает метод веб-службы XML с использованием HTTP.</span><span class="sxs-lookup"><span data-stu-id="2f543-150">Invokes an XML Web service method using HTTP.</span></span></summary>
        <returns><span data-ttu-id="2f543-151">Массив объектов, содержащий возвращаемое значение и все параметры <paramref name="out" /> или параметры, передаваемые по ссылке, метода производного класса.</span><span class="sxs-lookup"><span data-stu-id="2f543-151">An array of objects containing the return value and any by-reference or <paramref name="out" /> parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f543-152">Параметр используется для поиска типов параметров и возвращаемых значений метода, вызывающего <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> метод. `methodName`</span><span class="sxs-lookup"><span data-stu-id="2f543-152">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="2f543-153">Он также используется для поиска настраиваемых атрибутов, которые могли быть добавлены в метод.</span><span class="sxs-lookup"><span data-stu-id="2f543-153">It is also used to find custom attributes which may have been added to the method.</span></span> <span data-ttu-id="2f543-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute>и <xref:System.Xml.Serialization.XmlElementAttribute> предоставляют дополнительные сведения о производном методе, который требуется для протокола SOAP.</span><span class="sxs-lookup"><span data-stu-id="2f543-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute> and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the SOAP protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f543-155">Следующий пример кода представляет собой веб-форму ASP.NET, которая вызывает веб-службу XML с `Math`именем.</span><span class="sxs-lookup"><span data-stu-id="2f543-155">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="2f543-156">В рамках `Add` функции веб-форма синхронно вызывает метод веб-службы XML. `EnterBtn_Click`</span><span class="sxs-lookup"><span data-stu-id="2f543-156">Within the `EnterBtn_Click` function, the Web Form synchronously invokes the `Add` XML Web service method.</span></span>  
  
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/sourcecs.aspx#2)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/sourcevb.aspx#2)]  
  
 <span data-ttu-id="2f543-157">В следующем примере кода показан прокси-класс, созданный с помощью средства языка описания веб-служб (WSDL. exe) `Math` для XML Web Service, приведенного ниже.</span><span class="sxs-lookup"><span data-stu-id="2f543-157">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="2f543-158">В методе прокси-класса <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> метод `Add` синхронно вызывает метод веб-службы. `Add`</span><span class="sxs-lookup"><span data-stu-id="2f543-158">Within the `Add` method of the proxy class, the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method synchronously invokes the `Add` Web Service method.</span></span>  
  
 [!code-cpp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2f543-159">Следующий пример кода представляет собой `Math` веб-службу XML, из которой был создан указанный выше прокси-класс.</span><span class="sxs-lookup"><span data-stu-id="2f543-159">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
 [!code-aspx-csharp[HttpSimpleClientProtocol.Invoke Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[HttpSimpleClientProtocol.Invoke Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/sourcevb.asmx)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="2f543-160">Запрос достиг сервера, но не обработан успешно.</span><span class="sxs-lookup"><span data-stu-id="2f543-160">The request reached the server computer, but was not processed successfully.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f543-161">Асинхронно вызывает указанный метод.</span><span class="sxs-lookup"><span data-stu-id="2f543-161">Invokes the specified method asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="requestUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="2f543-162">Имя вызываемого метода.</span><span class="sxs-lookup"><span data-stu-id="2f543-162">The name of the method to invoke.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="2f543-163">URL-адрес запроса вызываемой веб-службы.</span><span class="sxs-lookup"><span data-stu-id="2f543-163">The request URL of the invoked web service.</span></span></param>
        <param name="parameters"><span data-ttu-id="2f543-164">Параметры для передачи методу.</span><span class="sxs-lookup"><span data-stu-id="2f543-164">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="2f543-165">Делегат, вызываемый при завершении вызова метода.</span><span class="sxs-lookup"><span data-stu-id="2f543-165">The delegate called when the method invocation has completed.</span></span></param>
        <summary><span data-ttu-id="2f543-166">Асинхронно вызывает указанный метод.</span><span class="sxs-lookup"><span data-stu-id="2f543-166">Invokes the specified method asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="requestUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userState" Type="System.Object" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="2f543-167">Имя вызываемого метода.</span><span class="sxs-lookup"><span data-stu-id="2f543-167">The name of the method to invoke.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="2f543-168">URL-адрес запроса вызываемой веб-службы.</span><span class="sxs-lookup"><span data-stu-id="2f543-168">The request URL of the invoked web service.</span></span></param>
        <param name="parameters"><span data-ttu-id="2f543-169">Параметры для передачи методу.</span><span class="sxs-lookup"><span data-stu-id="2f543-169">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="2f543-170">Делегат, вызываемый при завершении вызова метода.</span><span class="sxs-lookup"><span data-stu-id="2f543-170">The delegate called when the method invocation has completed.</span></span></param>
        <param name="userState"><span data-ttu-id="2f543-171">Объект, содержащий информацию сопоставленного состояния, передается делегату <paramref name="callback" /> по завершении выполнения метода.</span><span class="sxs-lookup"><span data-stu-id="2f543-171">An object containing associated state information that is passed to the <paramref name="callback" /> delegate when the method has completed.</span></span></param>
        <summary><span data-ttu-id="2f543-172">Асинхронно вызывает указанный метод, сохраняя сопоставленное состояние.</span><span class="sxs-lookup"><span data-stu-id="2f543-172">Invokes the specified method asynchronously while maintaining an associated state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
