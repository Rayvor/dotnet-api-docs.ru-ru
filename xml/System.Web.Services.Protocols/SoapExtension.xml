<Type Name="SoapExtension" FullName="System.Web.Services.Protocols.SoapExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ddbecf0fb6f86cf2309eb940f31b0df1734172db" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70564085" /></Metadata><TypeSignature Language="C#" Value="public abstract class SoapExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtension abstract" />
  <TypeSignature Language="F#" Value="type SoapExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Базовый класс расширений SOAP для веб-служб XML, создаваемых с помощью ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET позволяет создавать инфраструктуру, связанную с SOAP, с помощью механизма расширяемости. Архитектура расширения SOAP ASP.NET основана на расширении, позволяющем проверять или изменять сообщения на конкретных этапах обработки сообщений на клиенте или сервере.  
  
 Расширения SOAP ASP.NET являются производными от <xref:System.Web.Services.Protocols.SoapExtension> класса. Методы <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> и <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>  предоставляют альтернативные механизмы инициализации расширения SOAP для повышения производительности. <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>— Это сердце большинства расширений SOAP, так как метод вызывается на каждом этапе, определенном <xref:System.Web.Services.Protocols.SoapMessageStage>в, что позволяет расширению SOAP выполнять требуемое поведение конкретного расширения SOAP. Для расширений SOAP, требующих изменения запроса SOAP или ответа SOAP, <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> предоставляет возможность получения предложенных данных для передачи по сети.  
  
   
  
## Examples  
 Следующее `TraceExtension` расширение SOAP выводит запрос SOAP и ответ SOAP к указанному файлу при применении к методу веб-службы XML. Если следующее расширение SOAP установлено для запуска с веб-службой XML, учетная запись ASPNET должна иметь разрешение на запись в каталог, в который записывается файл журнала.  
  
 [!code-cpp[Classic SoapExtension Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
    <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.Protocols.SoapExtension" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChainStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream ChainStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream ChainStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ ChainStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ChainStream : System.IO.Stream -&gt; System.IO.Stream&#xA;override this.ChainStream : System.IO.Stream -&gt; System.IO.Stream" Usage="soapExtension.ChainStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Буфер памяти, содержащий запрос или ответ SOAP.</param>
        <summary>При переопределении в производном классе позволяет расширению SOAP получать доступ к буферу памяти, хранящему запрос и ответ SOAP.</summary>
        <returns>Объект <see cref="T:System.IO.Stream" />, представляющий новый буфер памяти, который это расширение SOAP может изменять.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>гарантирует, что расширения SOAP с наивысшим приоритетом могут изменить фактические данные, ближайшие к сообщению SOAP, отправленному или возвращаемому по сети.  
  
 Расширения SOAP должны <xref:System.IO.Stream> сохранять ссылки, переданные в <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> , и <xref:System.IO.Stream> возвращаемые из. <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> Если расширение SOAP настроено для работы с <xref:System.IO.Stream> методом веб-службы XML, переданный в <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> содержит сериализованный запрос SOAP на <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. Аналогичным образом <xref:System.IO.Stream> , ссылка, <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> возвращенная из, записывается в, когда выполняется сериализация и, таким образом, <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize>содержит сериализованный ответ SOAP в <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 <xref:System.IO.Stream> В следующем примере <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> выполняется сохранение передаваемых в и <xref:System.IO.Stream> возвращаемых элементов в переменных `oldStream` членов и `newStream`соответственно.  
  
 [!code-cpp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>При переопределении в производном классе позволяет расширению SOAP инициализировать данные, относящиеся к методу веб-службы XML с минимальной потерей в производительности.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : Type -&gt; obj" Usage="soapExtension.GetInitializer serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Тип класса, реализующего веб-службу XML, к которой применено расширение SOAP.</param>
        <summary>При переопределении в производном классе позволяет расширению SOAP инициализировать данные, относящиеся к классу, реализующему веб-службу XML с минимальной потерей в производительности.</summary>
        <returns>Объект <see cref="T:System.Object" />, инициализируемый расширением SOAP для кэширования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перегрузка <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> , вызываемая ASP.NET, зависит от того, как было указано расширение SOAP. Существует два метода для указания расширения SOAP:  
  
-   Примените настраиваемый атрибут, производный <xref:System.Web.Services.Protocols.SoapExtensionAttribute>от, к отдельному методу веб-службы XML.  
  
-   Добавьте ссылку в файлы конфигурации Web. config или App. config.  
  
 При добавлении ссылки на один из файлов конфигурации расширение SOAP выполняется для всех веб-служб XML в области этого файла конфигурации. При указании расширения SOAP путем ссылки на файл конфигурации ASP.NET вызывает <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> перегрузку, которая передается <xref:System.Type>в. При указании расширения путем применения настраиваемого атрибута ASP.NET вызывает метод <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> , который передает <xref:System.Web.Services.Protocols.LogicalMethodInfo> в и <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.  
  
 Дополнительные сведения о добавлении расширений SOAP в файл конфигурации см. в разделе [Параметры конфигурации для веб-служб XML, созданных с помощью ASP.NET](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/b2c0ew36(v=vs.100)).  
  
   
  
## Examples  
 В следующем коде показано, как один из них может сохранять данные расширения SOAP для каждой веб-службы XML. Если расширение SOAP настроено с использованием файла конфигурации вместо атрибута, расширение SOAP может хранить данные для каждого класса, к которому применяется расширение SOAP. В этом примере сохраняется имя файла, в который записывается сообщение SOAP, отправленное в и из метода веб-службы XML, на основе имени класса, реализующего веб-службу XML, в кэш. Этот пример кода является частью полного примера кода для расширения SOAP трацеекстенсион, которое можно найти в <xref:System.Web.Services.Protocols.SoapExtension> обзоре класса.  
  
 [!code-cpp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CPP/traceextension.cpp#1)]
 [!code-csharp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CS/traceextension.cs#1)]
 [!code-vb[SoapExtension.GetInitializer-Type#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/VB/traceextension.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo, System.Web.Services.Protocols.SoapExtensionAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo, class System.Web.Services.Protocols.SoapExtensionAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo, attribute As SoapExtensionAttribute) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo, System::Web::Services::Protocols::SoapExtensionAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo * System.Web.Services.Protocols.SoapExtensionAttribute -&gt; obj" Usage="soapExtension.GetInitializer (methodInfo, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
        <Parameter Name="attribute" Type="System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Parameters>
      <Docs>
        <param name="methodInfo">Объект <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, представляющий прототип конкретной функции для метода веб-службы XML, к которому применяется расширение SOAP.</param>
        <param name="attribute">Атрибут <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />, применяемый к методу веб-службы XML.</param>
        <summary>При переопределении в производном классе позволяет расширению SOAP инициализировать данные, относящиеся к методу веб-службы XML, используя атрибут, применяемый к методу веб-службы XML, с минимальной потерей в производительности.</summary>
        <returns>Объект <see cref="T:System.Object" />, инициализируемый расширением SOAP для кэширования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если расширение SOAP настроено с помощью файла конфигурации, см <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> <xref:System.Type>. перегрузку, которая принимает.  
  
 Расширение SOAP имеет три возможности для инициализации данных, и все они имеют разные цели.  
  
-   Конструктор класса — конструктор класса вызывается каждый раз при создании экземпляра расширения SOAP и обычно используется для инициализации переменных-членов.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>, однако вызывается только один раз, при первом запросе SOAP к методу веб-служб XML. Если к методу веб-службы XML применяется настраиваемый атрибут, <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> вызывается метод. Это позволяет расширению SOAP опрашивать <xref:System.Web.Services.Protocols.LogicalMethodInfo> метод веб-службы XML для получения сведений о прототипе или для доступа к данным, относящимся к расширению, передаваемым классом, производным от. <xref:System.Web.Services.Protocols.SoapExtensionAttribute> Возвращаемое значение кэшируется ASP.NET и передается в <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> последующие методы. Таким образом, инициализация <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> , выполненная в, инкапсулируется по сути в одну временную производительность.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>вызывается каждый раз при выполнении запроса SOAP к методу веб-службы XML, но имеет преимущество над конструктором класса в том, что <xref:System.Object> в него передается инициализированный в. <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>  
  
   
  
## Examples  
 В следующем коде показано, как можно получить данные, относящиеся к расширению SOAP, передаваемые с помощью класса, <xref:System.Web.Services.Protocols.SoapExtensionAttribute>производного от, а затем кэшировать <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>эти данные в. Этот пример кода является частью полного примера кода для `TraceExtension` расширения SOAP, которое можно найти <xref:System.Web.Services.Protocols.SoapExtension> в обзоре класса. Этот пример кода основан на `TraceExtensionAttribute` переданном `attribute` параметре. В полном примере `TraceExtensionAttribute` кода является производным от <xref:System.Web.Services.Protocols.SoapExtensionAttribute> и добавляет `Filename` свойство, которое является <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> хранилищем в кэше.  
  
 [!code-cpp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
        <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="soapExtension.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">Объект <see cref="T:System.Object" />, возвращаемый методом  <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />, кэшируется ASP.NET.</param>
        <summary>При переопределении в производном классе позволяет расширению SOAP инициализировать свои данные с использованием данных, сохраненных в кэше методом <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Расширение SOAP имеет три возможности для инициализации данных, и все они имеют разные цели.  
  
-   Конструктор класса — конструктор класса вызывается каждый раз при создании экземпляра расширения SOAP и обычно используется для инициализации переменных-членов.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>— Этот метод вызывается только один раз, при первом запросе SOAP к методу веб-служб XML. Если к методу веб-службы XML применяется настраиваемый атрибут, <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> вызывается метод. Это позволяет расширению SOAP опрашивать <xref:System.Web.Services.Protocols.LogicalMethodInfo> метод веб-службы XML для получения сведений о прототипе или для доступа к данным, относящимся к расширению, передаваемым классом, производным от. <xref:System.Web.Services.Protocols.SoapExtensionAttribute> Возвращаемое значение кэшируется ASP.NET и передается в <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> последующие методы. Таким образом, инициализация <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> , выполненная в, инкапсулируется по сути в одну временную производительность.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>— Этот метод вызывается каждый раз при выполнении запроса SOAP к методу веб-службы XML, но имеет преимущество над конструктором класса, в котором в него <xref:System.Object> передается <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> инициализированный объект.
  
> [!NOTE]
>  Кроме того, можно добавить расширение SOAP, не производное <xref:System.Web.Services.Protocols.SoapExtensionAttribute> от, [ \<с помощью элемента соапекстенсионтипес >](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) в файле конфигурации. Дополнительные сведения см. в разделе [ \<соапекстенсионтипес >](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) и [изменение сообщений SOAP с помощью расширений SOAP](https://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95).  
  
## Examples  
 В следующем примере показано, как можно использовать данные, кэшированные во <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> время выполнения метода.  
  
 [!code-cpp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.Initialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public abstract void ProcessMessage (System.Web.Services.Protocols.SoapMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessage(class System.Web.Services.Protocols.SoapMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessMessage (message As SoapMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessMessage(System::Web::Services::Protocols::SoapMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Web.Services.Protocols.SoapMessage -&gt; unit" Usage="soapExtension.ProcessMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapMessage" />
      </Parameters>
      <Docs>
        <param name="message">Обрабатываемый тип <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</param>
        <summary>При переопределении в производном классе позволяет расширению SOAP получать сообщение <see cref="T:System.Web.Services.Protocols.SoapMessage" /> для обработки на каждой стадии <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>вызывается на всех <xref:System.Web.Services.Protocols.SoapMessageStage> стадиях для расширений SOAP, применяемых к веб-службам XML, созданным с помощью ASP.NET и их клиентов. В каждом <xref:System.Web.Services.Protocols.SoapMessageStage>экземпляре класса, производного от <xref:System.Web.Services.Protocols.SoapMessage> , передается <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>. Если расширение SOAP выполняется на клиенте веб-службы XML, <xref:System.Web.Services.Protocols.SoapClientMessage> объект передается в <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>; в противном случае <xref:System.Web.Services.Protocols.SoapServerMessage> передается объект.  
  
   
  
## Examples  
 В следующем примере показана <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> часть расширения SOAP, которая регистрирует SOAP-запросы и ответы SOAP. Записывая <xref:System.Web.Services.Protocols.SoapMessage> <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> в, расширение SOAP обращается к перенаправленному каналу. <xref:System.Web.Services.Protocols.SoapMessageStage> Если расширение SOAP применяется к методу веб-службы XML, созданному с помощью ASP.NET, <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> то содержит ответ SOAP от метода веб-службы XML. Если расширение SOAP применяется к клиенту веб-службы XML, объект <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> содержит запрос SOAP к методу веб-службы XML.  
  
 Пример классической Соапекстенсион. ProcessMessage. 1  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
