<Type Name="SoapExtension" FullName="System.Web.Services.Protocols.SoapExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="17b63f38a36a90371cc9be3b3343e96a7fb89653" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67243068" /></Metadata><TypeSignature Language="C#" Value="public abstract class SoapExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtension abstract" />
  <TypeSignature Language="F#" Value="type SoapExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Базовый класс расширений SOAP для веб-служб XML, создаваемых с помощью ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET обеспечивает инфраструктуру, связанную с SOAP, создаваемой посредством механизма расширения среды. Архитектура расширения ASP.NET SOAP связано расширение, которое может проверять или изменять сообщение на определенных этапах на клиенте или сервере.  
  
 Расширения SOAP, ASP.NET, которые являются производными от <xref:System.Web.Services.Protocols.SoapExtension> класса. <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> И <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> методы предоставляют альтернативные механизмы для инициализации расширения SOAP для повышения производительности. <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> является сердцем большинство расширений SOAP, так как метод вызывается на каждом этапе, определенные в <xref:System.Web.Services.Protocols.SoapMessageStage>, что расширение SOAP для выполнения требуемого поведения, определенного расширения SOAP. Для расширения SOAP, которые необходимо изменить, запроса или ответа SOAP <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> предоставляет возможность получать предложенное данные для отправки по каналу связи.  
  
   
  
## Examples  
 Следующие `TraceExtension` расширение SOAP выводит запрос и ответ SOAP на файл, указанный при применении к методу XML-веб-службы. Если следующее расширение SOAP установлено для работы с XML-веб-службой, учетная запись ASPNET должен иметь разрешение на запись в каталог, в который записывается файл журнала.  
  
 [!code-cpp[Classic SoapExtension Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
    <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.Protocols.SoapExtension" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChainStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream ChainStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream ChainStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ ChainStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ChainStream : System.IO.Stream -&gt; System.IO.Stream&#xA;override this.ChainStream : System.IO.Stream -&gt; System.IO.Stream" Usage="soapExtension.ChainStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Буфер памяти, содержащий запрос или ответ SOAP.</param>
        <summary>При переопределении в производном классе позволяет расширению SOAP получать доступ к буферу памяти, хранящему запрос и ответ SOAP.</summary>
        <returns>Объект <see cref="T:System.IO.Stream" />, представляющий новый буфер памяти, который это расширение SOAP может изменять.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> гарантирует, что расширений SOAP с самым высоким приоритетом можно изменить текущие данные в сообщение SOAP отправлено или возвращается по сети.  
  
 Расширения SOAP, которые следует сохранить ссылки <xref:System.IO.Stream> переданные <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> и <xref:System.IO.Stream> возвращаемые <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>. Если расширение SOAP настроено для запуска с методом XML-веб-службы, <xref:System.IO.Stream> переданные <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> содержит сериализованный запрос SOAP на стороне <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. Аналогичным образом <xref:System.IO.Stream> ссылку, возвращенную из <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> записывается, когда происходит сериализация и поэтому он содержит сериализованный ответ SOAP в <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 В следующем примере сохраняется как <xref:System.IO.Stream> переданные <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> и <xref:System.IO.Stream> возвращаемые <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> в переменных-членов `oldStream` и `newStream`, соответственно.  
  
 [!code-cpp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>При переопределении в производном классе позволяет расширению SOAP инициализировать данные, относящиеся к методу веб-службы XML с минимальной потерей в производительности.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : Type -&gt; obj" Usage="soapExtension.GetInitializer serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Тип класса, реализующего веб-службу XML, к которой применено расширение SOAP.</param>
        <summary>При переопределении в производном классе позволяет расширению SOAP инициализировать данные, относящиеся к классу, реализующему веб-службу XML с минимальной потерей в производительности.</summary>
        <returns>Объект <see cref="T:System.Object" />, инициализируемый расширением SOAP для кэширования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перегрузка <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> , вызываемым ASP.NET зависит от того, как было указано расширение SOAP. Существует два метода для указания расширения SOAP:  
  
-   Применение пользовательского атрибута, наследующий <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, методу отдельных XML-веб-службы.  
  
-   Добавьте ссылку в файлах конфигурации web.config или app.config.  
  
 Если добавить ссылку на один из файлов конфигурации, расширение SOAP выполняется для всех XML-веб-служб в области этого файла конфигурации. При указании расширения SOAP, ссылаясь на файл конфигурации ASP.NET вызывает <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> перегрузку, которая передает в <xref:System.Type>. При указании расширения, применив настраиваемый атрибут, ASP.NET вызывает <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> , прошедший <xref:System.Web.Services.Protocols.LogicalMethodInfo> и <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.  
  
 Дополнительные сведения о добавлении расширений SOAP в файл конфигурации, см. в разделе [параметры конфигурации для XML-веб-службы создан с помощью ASP.NET](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/b2c0ew36(v=vs.100)).  
  
   
  
## Examples  
 В следующем коде показано сохранение данных расширения SOAP на каждой XML-веб-службы. Если расширение SOAP настроено с помощью файла конфигурации вместо атрибута, расширение SOAP может хранить данные для каждого класса, к которому применяется расширение SOAP. В этом примере сохраняется имя файла, в котором в журнал сообщений SOAP, отправляемых и получаемых метода XML-веб-службы, на основе имени класса, реализующего веб-службу XML в кэш. Данный пример кода является частью полный пример кода для расширения TraceExtension SOAP, которое можно найти в <xref:System.Web.Services.Protocols.SoapExtension> Общие сведения о классе.  
  
 [!code-cpp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CPP/traceextension.cpp#1)]
 [!code-csharp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CS/traceextension.cs#1)]
 [!code-vb[SoapExtension.GetInitializer-Type#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/VB/traceextension.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo, System.Web.Services.Protocols.SoapExtensionAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo, class System.Web.Services.Protocols.SoapExtensionAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo, attribute As SoapExtensionAttribute) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo, System::Web::Services::Protocols::SoapExtensionAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo * System.Web.Services.Protocols.SoapExtensionAttribute -&gt; obj" Usage="soapExtension.GetInitializer (methodInfo, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
        <Parameter Name="attribute" Type="System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Parameters>
      <Docs>
        <param name="methodInfo">Объект <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, представляющий прототип конкретной функции для метода веб-службы XML, к которому применяется расширение SOAP.</param>
        <param name="attribute">Атрибут <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />, применяемый к методу веб-службы XML.</param>
        <summary>При переопределении в производном классе позволяет расширению SOAP инициализировать данные, относящиеся к методу веб-службы XML, используя атрибут, применяемый к методу веб-службы XML, с минимальной потерей в производительности.</summary>
        <returns>Объект <see cref="T:System.Object" />, инициализируемый расширением SOAP для кэширования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если расширение SOAP настроено с помощью файла конфигурации см <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> перегрузку, которая принимает <xref:System.Type>.  
  
 Расширение SOAP имеет три варианта инициализации данных и все они предназначены для разных целей:  
  
-   Конструктор класса - конструктора класса вызывается каждый раз создается расширение SOAP и обычно используется для инициализации переменных-членов.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>, тем не менее, вызывается только один раз, в первый раз, делается запрос SOAP для XML-веб-служб метод. Если настраиваемый атрибут применяется к метод XML-веб-службы, <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> вызывается метод. Это позволяет расширению SOAP для опроса <xref:System.Web.Services.Protocols.LogicalMethodInfo> метода XML-веб-службы, прототип сведения или получить доступ к расширениям данными, переданными в класс, наследуемый от <xref:System.Web.Services.Protocols.SoapExtensionAttribute>. Возвращаемое значение в кэше ASP.NET и передается в последующих <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> методы. Таким образом, инициализация <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> производимая лишь однажды.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> вызывается каждый раз SOAP-запрос выполняется к методу XML-веб-службы, но имеет преимущество конструктора класса, в который <xref:System.Object> инициализированы в <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> передается в него.  
  
   
  
## Examples  
 В следующем коде показано, как можно получить данные конкретного расширения SOAP, переданный с помощью класса, производного от <xref:System.Web.Services.Protocols.SoapExtensionAttribute>и затем кэширование этих данных <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>. Данный пример кода является частью полный пример кода для `TraceExtension` расширения SOAP, который можно найти в <xref:System.Web.Services.Protocols.SoapExtension> Общие сведения о классе. Этот пример кода основан на `TraceExtensionAttribute` передаваемый `attribute` параметра. В примере полного кода `TraceExtensionAttribute` является производным от <xref:System.Web.Services.Protocols.SoapExtensionAttribute> и добавляет `Filename` свойство, которое является то, что <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> хранит в кэше.  
  
 [!code-cpp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
        <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="soapExtension.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">Объект <see cref="T:System.Object" />, возвращаемый методом  <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />, кэшируется ASP.NET.</param>
        <summary>При переопределении в производном классе позволяет расширению SOAP инициализировать свои данные с использованием данных, сохраненных в кэше методом <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Расширение SOAP имеет три варианта инициализации данных и все они предназначены для разных целей:  
  
-   Конструктор класса - конструктора класса вызывается каждый раз создается расширение SOAP и обычно используется для инициализации переменных-членов.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> — Этот метод вызывается только один раз, при первом выполнении SOAP запроса к XML-веб-служб метод. Если настраиваемый атрибут применяется к метод XML-веб-службы, <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> вызывается метод. Это позволяет расширению SOAP для опроса <xref:System.Web.Services.Protocols.LogicalMethodInfo> метода XML-веб-службы, прототип сведения или получить доступ к расширениям данными, переданными в класс, наследуемый от <xref:System.Web.Services.Protocols.SoapExtensionAttribute>. Возвращаемое значение в кэше ASP.NET и передается в последующих <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> методы. Таким образом, инициализация <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> производимая лишь однажды.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> — Этот метод вызывается каждый раз при отправке SOAP-запроса метода XML-веб-службы, но имеет преимущество конструктора класса, в который <xref:System.Object> инициализированы в <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> передается в него.
  
> [!NOTE]
>  Можно также добавить расширение SOAP не на основе <xref:System.Web.Services.Protocols.SoapExtensionAttribute> с помощью [ \<soapExtensionTypes > элемент](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) в файле конфигурации. Дополнительные сведения см. в разделе [ \<soapExtensionTypes > элемент](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) и [сообщений SOAP изменения с помощью расширений SOAP](https://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95).  
  
## Examples  
 В следующем примере показано, как можно использовать кэширование данных при выполнении <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> метод.  
  
 [!code-cpp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.Initialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public abstract void ProcessMessage (System.Web.Services.Protocols.SoapMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessage(class System.Web.Services.Protocols.SoapMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessMessage (message As SoapMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessMessage(System::Web::Services::Protocols::SoapMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Web.Services.Protocols.SoapMessage -&gt; unit" Usage="soapExtension.ProcessMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapMessage" />
      </Parameters>
      <Docs>
        <param name="message">Обрабатываемый тип <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</param>
        <summary>При переопределении в производном классе позволяет расширению SOAP получать сообщение <see cref="T:System.Web.Services.Protocols.SoapMessage" /> для обработки на каждой стадии <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> вызывается на всех <xref:System.Web.Services.Protocols.SoapMessageStage> этапов для расширения SOAP, применяемые к обеих XML-веб-служб, созданных с помощью ASP.NET и их клиентов. На каждом <xref:System.Web.Services.Protocols.SoapMessageStage>, экземпляр класса, производного от <xref:System.Web.Services.Protocols.SoapMessage> передается <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>. Если расширение SOAP выполняется на стороне клиента XML-веб-службы, а затем <xref:System.Web.Services.Protocols.SoapClientMessage> объект передается в <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>; в противном случае <xref:System.Web.Services.Protocols.SoapServerMessage> переданный объект.  
  
   
  
## Examples  
 Ниже приведен пример <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> часть расширение SOAP, который регистрирует SOAP-запросов и ответов SOAP. При ведении журнала <xref:System.Web.Services.Protocols.SoapMessage> в <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>, расширение SOAP получает доступ <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> к отправке по сети. Если расширение SOAP применяется к методу XML-веб-службы, созданные с помощью ASP.NET, а затем <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> содержит ответ SOAP на основе метода XML-веб-службы. Если расширение SOAP применяется к клиенту XML-веб-службы, <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> содержит запрос SOAP к методу XML-веб-службы.  
  
 Классический пример SoapExtension.ProcessMessage № 1  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>