<Type Name="HttpGetClientProtocol" FullName="System.Web.Services.Protocols.HttpGetClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a44f72b8caf27005972730ce957f54c300603a64" /><Meta Name="ms.sourcegitcommit" Value="d273738f2e9a7125fddf20a2da56406d86290ce9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/10/2019" /><Meta Name="ms.locfileid" Value="67724799" /></Metadata><TypeSignature Language="C#" Value="public class HttpGetClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpGetClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpGetClientProtocol&#xA;Inherits HttpSimpleClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpGetClientProtocol : System::Web::Services::Protocols::HttpSimpleClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpGetClientProtocol = class&#xA;    inherit HttpSimpleClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Базовый класс для прокси клиентов веб-служб XML, использующих протокол HTTP-GET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда клиент XML-веб-службы использует протокол HTTP-GET, параметры кодируются в URL-адрес, и ответ возвращается в виде XML.  
  
 Если вы создаете клиент XML-веб-службы, с помощью ASP.NET, а затем класс прокси, косвенно производным, или непосредственно из <xref:System.Web.Services.Protocols.WebClientProtocol> должна быть создана для XML-веб-службы, необходимо вызвать. Когда клиент XML-веб-службы вызывает веб-службу XML с использованием HTTP, прокси-сервера создайте класс, производный от <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, который, в свою очередь, наследуется от <xref:System.Web.Services.Protocols.WebClientProtocol>.  
  
 <xref:System.Web.Services.Protocols.HttpGetClientProtocol> и <xref:System.Web.Services.Protocols.HttpPostClientProtocol> являются производными от <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, предоставляя поддержку для вызова метода XML-веб-службы, с использованием протоколов HTTP-GET и HTTP-POST, соответственно. Клиенты, вызывающие XML-веб-службу с использованием протокола SOAP должен быть производным от <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.  
  
 Дополнительные сведения о построении класса прокси-сервера, см. в разделе [создание прокси веб-службы XML](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/d2s8y7bs(v=vs.100)).  
  
   
  
## Examples  
 Следующий пример — это класс прокси, созданный программой Wsdl.exe для `Math` XML-веб-службы. Класс прокси является производным от <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, который является производным от абстрактного <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> класса.  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 Ниже приведен пример `Math` веб-службы XML, из которого был создан выше прокси-класса.  
  
 [!code-aspx-csharp[Classic HttpGetClientProtocol Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic HttpGetClientProtocol Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/sourcevb.asmx)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpGetClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpGetClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpGetClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[HttpGetClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CPP/httpgetclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpGetClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CS/httpgetclientprotocol_constructor.cs#1)]
 [!code-vb[HttpGetClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/VB/httpgetclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="httpGetClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Идентификатор <see cref="T:System.Uri" /> для использования при создании объекта <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Создает экземпляр класса <see cref="T:System.Net.WebRequest" /> для указанного URI-кода.</summary>
        <returns>Экземпляр класса <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет базовую версию <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> для указания, что HTTP-запроса для веб-службу XML с помощью HTTP-GET. Путем переопределения этого метода, дополнительные настройки можно заставить <xref:System.Net.WebRequest> объекта перед выполнением запроса XML-веб-службы. Например можно добавить пользовательский заголовок к запросу.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Параметр <paramref name="uri" /> равен null или имеет нулевую длину.</exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>