<Type Name="ActiveDirectorySchedule" FullName="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da6e1e5daf8007f8a68575bbcac984650729c83e" /><Meta Name="ms.sourcegitcommit" Value="385ff23cc00fe9aa1c93460c62603b45c2041d0b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/22/2019" /><Meta Name="ms.locfileid" Value="74386932" /></Metadata><TypeSignature Language="C#" Value="public class ActiveDirectorySchedule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectorySchedule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveDirectorySchedule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectorySchedule" />
  <TypeSignature Language="F#" Value="type ActiveDirectorySchedule = class" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> class represents the weekly schedule for an Active Directory Domain Services replication.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySchedule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySchedule (System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schedule As ActiveDirectorySchedule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySchedule(System::DirectoryServices::ActiveDirectory::ActiveDirectorySchedule ^ schedule);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule : System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule -&gt; System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" Usage="new System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schedule" Type="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      </Parameters>
      <Docs>
        <param name="schedule">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object that is copied to this object.</param>
        <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> class, using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="schedule" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RawSchedule">
      <MemberSignature Language="C#" Value="public bool[,,] RawSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool[,,] RawSchedule" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property RawSchedule As Boolean(,,)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;bool, 3&gt; ^ RawSchedule { cli::array &lt;bool, 3&gt; ^ get(); void set(cli::array &lt;bool, 3&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RawSchedule : bool[,,] with get, set" Usage="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[,,]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a three-dimensional array that indicates at what time during the week that the source is available for replication.</summary>
        <value>Трехмерный массив элементов <see cref="T:System.Boolean" />, в которых элемент <see langword="true" />, если источник доступен для репликации в течение данного интервала в 15 минут. Элемент <see langword="false" />, если источник недоступен для репликации.  
  
Массив имеет вид Равсчедуле [&lt;день недели&gt;, &lt;час&gt;, &lt;15-минутный интервал&gt;]. Все эти значения отсчитываются от нуля, а неделя начинается с 00:00 в воскресенье утром в формате UTC.  
  
Ниже приведены допустимые значения дня недели.  
  
 <list type="table"><listheader><term> Значение дня недели 
 </term><description> Указанный день недели.  
  
 </description></listheader><item><term> 0 
 </term><description> Воскресенье 
 </description></item><item><term> 1 
 </term><description> понедельник 
 </description></item><item><term> 2 
 </term><description> Вторник 
 </description></item><item><term> 3 
 </term><description> среда 
 </description></item><item><term> 4 
 </term><description> Четверг 
 </description></item><item><term> 5 
 </term><description> Пятница 
 </description></item><item><term> 6 
 </term><description> Суббота 
 </description></item></list>  

 Час отсчитывается от нуля и указывается в 24-часовом формате. Например, 2 вечера указывается как 14. Допустимые значения: 0-23.  
  
15-минутный интервал указывает на 15-минутный блок в течение часа, когда источник доступен для репликации. В следующей таблице приведены возможные значения для интервала в 15 минут.  
  
 <list type="table"><listheader><term> 15-минутный интервал 
 </term><description> Описание 
 </description></listheader><item><term> 0 
 </term><description> Источник доступен для репликации от 0 до 14 минут после часа.  
  
 </description></item><item><term> 1 
 </term><description> Источник доступен для репликации с 15 до 29 минут после часа.  
  
 </description></item><item><term> 2 
 </term><description> Источник доступен для репликации от 30 до 44 минут после часа.  
  
 </description></item><item><term> 3 
 </term><description> Источник доступен для репликации с 45 до 59 минут после часа.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  

В следующем примере показано, как использовать это свойство, чтобы определить, доступен ли источник для репликации в 15:50 координированного Всемирного времени во вторник:
  
```csharp  
bool isAvailable = scheduleObject.RawSchedule[2, 15, 3];
```  
  
В следующем примере показано, как использовать это свойство для вычисления 15-минутного интервала во время выполнения, разделив минуты на 15: 
  
```csharp  
bool isAvailable = scheduleObject.RawSchedule[2, 15, (Int32)50/15];  
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSchedule">
      <MemberSignature Language="C#" Value="public void ResetSchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSchedule() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSchedule ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSchedule();" />
      <MemberSignature Language="F#" Value="member this.ResetSchedule : unit -&gt; unit" Usage="activeDirectorySchedule.ResetSchedule " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the entire schedule to unavailable.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDailySchedule">
      <MemberSignature Language="C#" Value="public void SetDailySchedule (System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDailySchedule(valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDailySchedule (fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDailySchedule(System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberSignature Language="F#" Value="member this.SetDailySchedule : System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour -&gt; unit" Usage="activeDirectorySchedule.SetDailySchedule (fromHour, fromMinute, toHour, toMinute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="fromHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> members that specifies the first hour that the source will be available for replication.</param>
        <param name="fromMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> members that specifies the first 15-minute interval that the source will be available for replication.</param>
        <param name="toHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> members that specifies the final hour that the source will be available for replication.</param>
        <param name="toMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> members that specifies the final 15-minute interval that the source will be available for replication.</param>
        <summary>Adds a range of times for every day of the week to the schedule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все параметры в этом методе являются инклюзивными.  
  
 Этот метод является кумулятивным и не удаляет существующие сведения о расписании. Если существующее расписание и новое расписание перекрываются, результат будет по-прежнему накопительным. Чтобы очистить расписание, используйте метод <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSchedule">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adds a range of times to the schedule.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSchedule">
      <MemberSignature Language="C#" Value="public void SetSchedule (DayOfWeek day, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchedule(valuetype System.DayOfWeek day, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSchedule (day As DayOfWeek, fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSchedule(DayOfWeek day, System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberSignature Language="F#" Value="member this.SetSchedule : DayOfWeek * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour -&gt; unit" Usage="activeDirectorySchedule.SetSchedule (day, fromHour, fromMinute, toHour, toMinute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="day" Type="System.DayOfWeek" />
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="day">One of the <see cref="T:System.DayOfWeek" /> members that specifies the day of the week that the source will be available for replication.</param>
        <param name="fromHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> members that specifies the first hour that the source will be available for replication.</param>
        <param name="fromMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> members that specifies the first 15-minute interval that the source will be available for replication.</param>
        <param name="toHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> members that specifies the final hour that the source will be available for replication.</param>
        <param name="toMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> members that specifies the final 15-minute interval that the source will be available for replication.</param>
        <summary>Adds a range of times for a single day to the schedule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все параметры в этом методе являются инклюзивными.  
  
 Этот метод является кумулятивным и не удаляет существующие сведения о расписании. Если существующее расписание и новое расписание перекрываются, результат будет по-прежнему накопительным. Чтобы очистить расписание, используйте метод <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The start time is after the end time.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">One or more parameters is not valid.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="days" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
    <Member MemberName="SetSchedule">
      <MemberSignature Language="C#" Value="public void SetSchedule (DayOfWeek[] days, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchedule(valuetype System.DayOfWeek[] days, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSchedule (days As DayOfWeek(), fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSchedule(cli::array &lt;DayOfWeek&gt; ^ days, System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberSignature Language="F#" Value="member this.SetSchedule : DayOfWeek[] * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour -&gt; unit" Usage="activeDirectorySchedule.SetSchedule (days, fromHour, fromMinute, toHour, toMinute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.DayOfWeek[]" />
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="days">One of the <see cref="T:System.DayOfWeek" /> members that specifies the day of the week that the source will be available for replication.</param>
        <param name="fromHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> members that specifies the first hour that the source will be available for replication.</param>
        <param name="fromMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> members that specifies the first 15-minute interval that the source will be available for replication.</param>
        <param name="toHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> members that specifies the final hour that the source will be available for replication.</param>
        <param name="toMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> members that specifies the final 15-minute interval that the source will be available for replication.</param>
        <summary>Adds a range of times for multiple days to the schedule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все параметры в этом методе являются инклюзивными.  
  
 Этот метод является кумулятивным и не удаляет существующие сведения о расписании. Если существующее расписание и новое расписание перекрываются, результат будет по-прежнему накопительным. Чтобы очистить расписание, используйте метод <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The start time is after the end time.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">One or more parameters is not valid.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="days" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
  </Members>
</Type>
