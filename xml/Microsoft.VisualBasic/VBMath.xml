<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="086fd8354ac22fbfbd72357cc31b0e1d6a8c63c4" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73377329" /></Metadata><TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <TypeSignature Language="F#" Value="type VBMath = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>В модуле <see langword="VbMath" /> содержатся процедуры, используемые для выполнения математических операций.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот модуль поддерживает ключевые слова языка Visual Basic и элементы библиотеки времени выполнения для создания случайных чисел.  
  
   
  
## Examples  
 В этом примере используется функция `Rnd` для создания случайного целочисленного значения в диапазоне от 1 до 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Сводка по математическим функциям</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/derived-math-functions.md">Производные математические функции (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md">Ключевые слова (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md">Visual Basic элементов библиотеки времени выполнения</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует генератор случайных чисел.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Randomize() cil managed" FrameworkAlternate="netcore-3.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberSignature Language="F#" Value="static member Randomize : unit -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize " />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Инициализирует генератор случайных чисел.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка метода `Randomize` не принимает начальное значение. Вместо этого в качестве нового начального значения используется значение, возвращаемое системным таймером.  
  
 Если `Randomize` не используется, функция `Rnd` (без аргументов) использует тот же номер, что и начальное значение, при первом вызове, а затем использует Последнее созданное число в качестве начального значения.  
  
> [!NOTE]
>  Чтобы повторить последовательности случайных чисел, вызовите `Rnd` с отрицательным аргументом непосредственно перед использованием `Randomize` с числовым аргументом.  
  
> [!IMPORTANT]
>  Так как оператор `Random` и функция `Rnd` начинаются с начального значения и формируют числа, которые попадают в конечный диапазон, результаты могут быть прогнозируемыми для того, кто знает алгоритм, используемый для их создания. Следовательно, не следует использовать оператор `Random` и функцию `Rnd` для создания случайных чисел для использования в криптографии. Для получения дополнительной информации см. <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 В этом примере используется оператор `Randomize` для инициализации генератора случайных чисел. Поскольку аргумент Number опущен, `Randomize` использует возвращаемое значение функции `Timer` в качестве нового начального значения.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Сводка по математическим функциям</related>
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Randomize(float64 Number) cil managed" FrameworkAlternate="netcore-3.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberSignature Language="F#" Value="static member Randomize : double -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize Number" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">Необязательный параметр. Любое допустимое числовое выражение или <see langword="Object" />.</param>
        <summary>Инициализирует генератор случайных чисел.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Randomize` использует `Number` для инициализации генератора случайных чисел функции `Rnd`, предоставляя ему новое начальное значение. Если опустить `Number`, значение, возвращаемое системным таймером, будет использоваться в качестве нового начального значения.  
  
 Если `Randomize` не используется, функция `Rnd` (без аргументов) использует тот же номер, что и начальное значение, при первом вызове, а затем использует Последнее созданное число в качестве начального значения.  
  
> [!NOTE]
>  Чтобы повторить последовательности случайных чисел, вызовите `Rnd` с отрицательным аргументом непосредственно перед использованием `Randomize` с числовым аргументом. Использование `Randomize` с одинаковым значением для `Number` не повторяет предыдущую последовательность.  
  
> [!IMPORTANT]
>  Так как оператор `Random` и функция `Rnd` начинаются с начального значения и формируют числа, которые попадают в конечный диапазон, результаты могут быть прогнозируемыми для того, кто знает алгоритм, используемый для их создания. Следовательно, не следует использовать оператор `Random` и функцию `Rnd` для создания случайных чисел для использования в криптографии. Для получения дополнительной информации см. <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 В этом примере используется оператор `Randomize` для инициализации генератора случайных чисел. Поскольку аргумент Number опущен, `Randomize` использует возвращаемое значение функции `Timer` в качестве нового начального значения.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Сводка по математическим функциям</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает случайное число типа <see langword="Single" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Rnd() cil managed" FrameworkAlternate="netcore-3.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberSignature Language="F#" Value="static member Rnd : unit -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd " />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает случайное число типа <see langword="Single" />.</summary>
        <returns>Следующее случайное число в последовательности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Функция `Rnd` возвращает значение меньше 1, но больше или равно нулю.  
  
 Перед вызовом `Rnd`используйте инструкцию `Randomize` без аргумента для инициализации генератора случайных чисел с начальным значением на основе системного таймера.  
  
 Для получения случайных целых чисел в заданном диапазоне используйте следующую формулу.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 Здесь `upperbound` — наибольшее число в диапазоне, а `lowerbound` — наименьшее число в диапазоне.  
  
> [!NOTE]
>  Чтобы повторить последовательности случайных чисел, вызовите `Rnd` с отрицательным аргументом непосредственно перед использованием `Randomize` с числовым аргументом.  
  
> [!IMPORTANT]
>  Так как оператор `Random` и функция `Rnd` начинаются с начального значения и формируют числа, которые попадают в конечный диапазон, результаты могут быть прогнозируемыми для того, кто знает алгоритм, используемый для их создания. Следовательно, не следует использовать оператор `Random` и функцию `Rnd` для создания случайных чисел для использования в криптографии.  
  
   
  
## Examples  
 В этом примере используется функция `Rnd` для создания случайного целочисленного значения в диапазоне от 1 до 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Сводка по математическим функциям</related>
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Rnd(float32 Number) cil managed" FrameworkAlternate="netcore-3.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberSignature Language="F#" Value="static member Rnd : single -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd Number" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">Необязательный параметр. Значение типа <see langword="Single" /> значение или любое допустимое выражение типа <see langword="Single" />.</param>
        <summary>Возвращает случайное число типа <see langword="Single" />.</summary>
        <returns>Если аргумент Number меньше нуля, Rnd создает каждый раз одно и то же число, используя <paramref name="Number" /> в качестве начального числа. Если аргумент Number больше нуля, Rnd создает следующее случайное число в последовательности. Если аргумент Number равен нулю, функция Rnd генерирует самое последнее созданное число. Если аргумент Number не указан, функция Rnd создает следующее случайное число в последовательности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Функция `Rnd` возвращает значение меньше 1, но больше или равно нулю.  
  
 Значение `Number` определяет, как `Rnd` создает случайное число.  
  
 Для любого заданного начального начального значения создается одна и та же последовательность номеров, поскольку при каждом последующем вызове функции `Rnd` используется ранее созданное число в качестве начального значения для следующего числа в последовательности.  
  
 Перед вызовом `Rnd`используйте инструкцию `Randomize` без аргумента для инициализации генератора случайных чисел с начальным значением на основе системного таймера.  
  
 Для получения случайных целых чисел в заданном диапазоне используйте следующую формулу.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 Здесь `upperbound` — наибольшее число в диапазоне, а `lowerbound` — наименьшее число в диапазоне.  
  
> [!NOTE]
>  Чтобы повторить последовательности случайных чисел, вызовите `Rnd` с отрицательным аргументом непосредственно перед использованием `Randomize` с числовым аргументом. Использование `Randomize` с одинаковым значением для `Number` не повторяет предыдущую последовательность.  
  
> [!IMPORTANT]
>  Так как оператор `Random` и функция `Rnd` начинаются с начального значения и формируют числа, которые попадают в конечный диапазон, результаты могут быть прогнозируемыми для того, кто знает алгоритм, используемый для их создания. Следовательно, не следует использовать оператор `Random` и функцию `Rnd` для создания случайных чисел для использования в криптографии.  
  
   
  
## Examples  
 В этом примере используется функция `Rnd` для создания случайного целочисленного значения в диапазоне от 1 до 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">Сводка по математическим функциям</related>
      </Docs>
    </Member>
  </Members>
</Type>
