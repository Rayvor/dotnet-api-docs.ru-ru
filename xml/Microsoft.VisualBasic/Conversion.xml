<Type Name="Conversion" FullName="Microsoft.VisualBasic.Conversion">
  <Metadata><Meta Name="ms.openlocfilehash" Value="832d83873c6cbf36518e1732725165db13f148da" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75156220" /></Metadata><TypeSignature Language="C#" Value="public sealed class Conversion" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Conversion extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Conversion" />
  <TypeSignature Language="VB.NET" Value="Public Module Conversion" />
  <TypeSignature Language="C++ CLI" Value="public ref class Conversion sealed" />
  <TypeSignature Language="F#" Value="type Conversion = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
    <AssemblyVersion>10.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0c1dd-101">В модуле <see langword="Conversion" /> содержатся процедуры, используемые для выполнения различных операций преобразования.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-101">The <see langword="Conversion" /> module contains the procedures used to perform various conversion operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-102">Этот модуль поддерживает ключевые слова языка Visual Basic и элементы библиотеки времени выполнения, которые преобразуют десятичные числа в другие типы, числа в строки, строки в числа и один тип данных в другой.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-102">This module supports the Visual Basic language keywords and run-time library members that convert decimal numbers to other bases, numbers to strings, strings to numbers, and one data type to another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-103">В этом примере функция `Hex` используется для возврата шестнадцатеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-103">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-104">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-104">Conversion Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="0c1dd-105">Ключевые слова (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="0c1dd-106">Visual Basic элементов библиотеки времени выполнения</span><span class="sxs-lookup"><span data-stu-id="0c1dd-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CTypeDynamic">
      <MemberSignature Language="C#" Value="public static object CTypeDynamic (object Expression, Type TargetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CTypeDynamic(object Expression, class System.Type TargetType) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CTypeDynamic (Expression As Object, TargetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CTypeDynamic(System::Object ^ Expression, Type ^ TargetType);" />
      <MemberSignature Language="F#" Value="static member CTypeDynamic : obj * Type -&gt; obj" Usage="Microsoft.VisualBasic.Conversion.CTypeDynamic (Expression, TargetType)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CTypeDynamic(object Expression, class System.Type TargetType) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="TargetType" Type="System.Type" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="0c1dd-107">Преобразуемый объект.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-107">The object to convert.</span></span></param>
        <param name="TargetType"><span data-ttu-id="0c1dd-108">Тип данных, в который требуется преобразовать объект.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-108">The type to which to convert the object.</span></span></param>
        <summary><span data-ttu-id="0c1dd-109">Преобразовывает объект в указанный тип.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-109">Converts an object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-110">Объект, тип которого во время выполнения является запрошенным типом целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-110">An object whose type at run time is the requested target type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-111">Метод `CTypeDynamic` преобразует объект, переданный в качестве параметра `Expression`, в тип, указанный параметром `TargetType`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-111">The `CTypeDynamic` method converts the object passed as the `Expression` parameter to the type specified by the `TargetType` parameter.</span></span> <span data-ttu-id="0c1dd-112">Если объект является динамическим объектом, то метод `CTypeDynamic` применяет доступные динамические преобразования.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-112">If the object is a dynamic object, the `CTypeDynamic` method applies available dynamic conversions.</span></span>  
  
 <span data-ttu-id="0c1dd-113">Метод `CTypeDynamic` применяет динамические преобразования в соответствии с семантикой преобразования, определенной самим объектом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-113">The `CTypeDynamic` method applies dynamic conversions in accordance with the conversion semantics defined by the object itself.</span></span> <span data-ttu-id="0c1dd-114">Если динамический объект наследуется от <xref:System.Dynamic.DynamicObject>, метод `CTypeDynamic` сначала пытается выполнить преобразование, используя определяемое пользователем статическое преобразование.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-114">If a dynamic object inherits from <xref:System.Dynamic.DynamicObject>, the `CTypeDynamic` method first attempts to perform the conversion by using a user-defined, static conversion.</span></span> <span data-ttu-id="0c1dd-115">Если определяемое пользователем статическое преобразование завершается неудачей, метод `CTypeDynamic` пытается выполнить преобразование с помощью динамических преобразований.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-115">If the user-defined, static conversion fails, the `CTypeDynamic` method attempts to perform the conversion by using dynamic conversions.</span></span> <span data-ttu-id="0c1dd-116">Если динамический объект реализует <xref:System.Dynamic.IDynamicMetaObjectProvider>, метод `CTypeDynamic` обеспечивает приоритет динамического преобразования по определяемым пользователем статическим преобразованиям.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-116">If a dynamic object implements <xref:System.Dynamic.IDynamicMetaObjectProvider>, the `CTypeDynamic` method gives precedence to dynamic conversions over user-defined, static conversions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-117">В следующем примере метод `CTypeDynamic` используется для преобразования динамического объекта в строку с помощью преобразования, определенного динамическим объектом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-117">The following example uses the `CTypeDynamic` method to convert a dynamic object to a string by using the conversion defined by the dynamic object.</span></span>  
  
```vb  
Imports System.Dynamic  
  
Module Module1  
    Sub Main()  
        Dim dyn As Object = New SampleDynamicObject  
        Dim sampleString = CTypeDynamic(dyn, GetType(String))  
        Console.WriteLine(sampleString)  
    End Sub  
End Module  
  
Class SampleDynamicObject  
    Inherits DynamicObject  
  
    Public Overrides Function TryConvert(ByVal binder As ConvertBinder,  
                                         ByRef result As Object) As Boolean  
  
        If binder.Type = GetType(String) Then  
            result = "Sample String"  
            Return True  
        End If  
  
        Return False  
    End Function  
End Class  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Dynamic.DynamicObject.TryConvert(System.Dynamic.ConvertBinder,System.Object@)" />
        <altmember cref="M:System.Dynamic.DynamicMetaObject.BindConvert(System.Dynamic.ConvertBinder)" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/early-late-binding/working-with-dynamic-objects.md"><span data-ttu-id="0c1dd-118">Работа с динамическими объектами (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-118">Working with Dynamic Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/csharp/programming-guide/types/walkthrough-creating-and-using-dynamic-objects.md"><span data-ttu-id="0c1dd-119">Пошаговое руководство. Создание и использование динамических объектов (C# и Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-119">Walkthrough: Creating and Using Dynamic Objects (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CTypeDynamic&lt;TargetType&gt;">
      <MemberSignature Language="C#" Value="public static TargetType CTypeDynamic&lt;TargetType&gt; (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TargetType CTypeDynamic&lt;TargetType&gt;(object Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CTypeDynamic(Of TargetType) (Expression As Object) As TargetType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TargetType&gt;&#xA; static TargetType CTypeDynamic(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member CTypeDynamic : obj -&gt; 'argetType" Usage="Microsoft.VisualBasic.Conversion.CTypeDynamic Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static !!TargetType CTypeDynamic&lt;TargetType&gt;(object Expression) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TargetType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TargetType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TargetType"><span data-ttu-id="0c1dd-120">Тип данных, в который требуется преобразовать объект.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-120">The type to which to convert the object.</span></span></typeparam>
        <param name="Expression"><span data-ttu-id="0c1dd-121">Преобразуемый объект.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-121">The object to convert.</span></span></param>
        <summary><span data-ttu-id="0c1dd-122">Преобразует объект в указанный универсальный тип.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-122">Converts an object to the specified generic type.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-123">Объект со статической типизацией, имеющий запрошенный универсальный тип.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-123">An object statically typed as the requested generic type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-124">Метод `CTypeDynamic` преобразует объект, переданный в качестве параметра `Expression`, в тип, заданный типом универсального параметра.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-124">The `CTypeDynamic` method converts the object passed as the `Expression` parameter to the type specified by the type of the generic parameter.</span></span> <span data-ttu-id="0c1dd-125">Если объект является динамическим объектом, то метод `CTypeDynamic` применяет доступные динамические преобразования.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-125">If the object is a dynamic object, the `CTypeDynamic` method applies available dynamic conversions.</span></span>  
  
 <span data-ttu-id="0c1dd-126">Метод `CTypeDynamic` применяет динамические преобразования в соответствии с семантикой преобразования, определенной самим объектом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-126">The `CTypeDynamic` method applies dynamic conversions in accordance with the conversion semantics defined by the object itself.</span></span> <span data-ttu-id="0c1dd-127">Если динамический объект наследуется от <xref:System.Dynamic.DynamicObject>, метод `CTypeDynamic` сначала пытается выполнить преобразование, используя определяемое пользователем статическое преобразование.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-127">If a dynamic object inherits from <xref:System.Dynamic.DynamicObject>, the `CTypeDynamic` method first attempts to perform the conversion by using a user-defined, static conversion.</span></span> <span data-ttu-id="0c1dd-128">Если определяемое пользователем статическое преобразование завершается неудачей, метод `CTypeDynamic` пытается выполнить преобразование с помощью динамических преобразований.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-128">If the user-defined, static conversion fails, the `CTypeDynamic` method attempts to perform the conversion by using dynamic conversions.</span></span> <span data-ttu-id="0c1dd-129">Если динамический объект реализует <xref:System.Dynamic.IDynamicMetaObjectProvider>, метод `CTypeDynamic` обеспечивает приоритет динамического преобразования по определяемым пользователем статическим преобразованиям.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-129">If a dynamic object implements <xref:System.Dynamic.IDynamicMetaObjectProvider>, the `CTypeDynamic` method gives precedence to dynamic conversions over user-defined, static conversions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-130">В следующем примере метод `CTypeDynamic` используется для преобразования динамического объекта в строку с помощью преобразования, определенного динамическим объектом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-130">The following example uses the `CTypeDynamic` method to convert a dynamic object to a string by using the conversion defined by the dynamic object.</span></span>  
  
```vb  
Imports System.Dynamic  
  
Module Module1  
    Sub Main()  
        Dim dyn As Object = New SampleDynamicObject  
        Dim str = CTypeDynamic(Of String)(dyn)  
        Console.WriteLine(str)  
    End Sub  
End Module  
  
Class SampleDynamicObject  
    Inherits DynamicObject  
  
    Public Overrides Function TryConvert(ByVal binder As ConvertBinder,  
                                         ByRef result As Object) As Boolean  
  
        If binder.Type = GetType(String) Then  
            result = "Sample String"  
            Return True  
        End If  
  
        Return False  
    End Function  
End Class  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Dynamic.DynamicObject.TryConvert(System.Dynamic.ConvertBinder,System.Object@)" />
        <altmember cref="M:System.Dynamic.DynamicMetaObject.BindConvert(System.Dynamic.ConvertBinder)" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/early-late-binding/working-with-dynamic-objects.md"><span data-ttu-id="0c1dd-131">Работа с динамическими объектами (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-131">Working with Dynamic Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/csharp/programming-guide/types/walkthrough-creating-and-using-dynamic-objects.md"><span data-ttu-id="0c1dd-132">Пошаговое руководство. Создание и использование динамических объектов (C# и Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-132">Walkthrough: Creating and Using Dynamic Objects (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ErrorToString">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c1dd-133">Возвращает сообщение об ошибке, соответствующее данному номеру ошибки.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-133">Returns the error message that corresponds to a given error number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ErrorToString">
      <MemberSignature Language="C#" Value="public static string ErrorToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorToString() cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ErrorToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ErrorToString();" />
      <MemberSignature Language="F#" Value="static member ErrorToString : unit -&gt; string" Usage="Microsoft.VisualBasic.Conversion.ErrorToString " />
      <MemberSignature Language="ILAsm" Value=".method public static string ErrorToString() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c1dd-134">Возвращает сообщение об ошибке, соответствующее данному номеру ошибки.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-134">Returns the error message that corresponds to a given error number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-135">Сообщение об ошибке, соответствующее самой последней ошибке времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-135">The error message that corresponds to the most recent run-time error.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-136">Функция `ErrorToString` проверяет параметры свойств объекта `Err`, чтобы определить самую последнюю ошибку времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-136">The `ErrorToString` function examines the property settings of the `Err` object to identify the most recent run-time error.</span></span> <span data-ttu-id="0c1dd-137">Возвращаемое значение функции `ErrorToString` соответствует свойству `Description` объекта `Err`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-137">The return value of the `ErrorToString` function corresponds to the `Description` property of the `Err` object.</span></span> <span data-ttu-id="0c1dd-138">Если ошибка времени выполнения не возникла, `ErrorToString` возвращает строку нулевой длины ("").</span><span class="sxs-lookup"><span data-stu-id="0c1dd-138">If no run-time error has occurred, `ErrorToString` returns a zero-length string ("").</span></span>  
  
 <span data-ttu-id="0c1dd-139">В Visual Basic версии 6,0 и более ранних эта функция была предоставлена функцией `Error`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-139">In Visual Basic version 6.0 and earlier, this functionality was provided by the `Error` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-140">В следующем коде функция `ErrorToString` используется для вывода сообщений об ошибках, соответствующих указанным номерам ошибок.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-140">The following code uses the `ErrorToString` function to display error messages that correspond to the specified error numbers.</span></span>  
  
 [!code-vb[VbVbalrCatRef#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-141"><paramref name="ErrorNumber" /> выходит за пределы диапазона.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-141"><paramref name="ErrorNumber" /> is out of range.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="P:Microsoft.VisualBasic.ErrObject.Description" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="ErrorToString">
      <MemberSignature Language="C#" Value="public static string ErrorToString (int ErrorNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorToString(int32 ErrorNumber) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ErrorToString (ErrorNumber As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ErrorToString(int ErrorNumber);" />
      <MemberSignature Language="F#" Value="static member ErrorToString : int -&gt; string" Usage="Microsoft.VisualBasic.Conversion.ErrorToString ErrorNumber" />
      <MemberSignature Language="ILAsm" Value=".method public static string ErrorToString(int32 ErrorNumber) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ErrorNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ErrorNumber"><span data-ttu-id="0c1dd-142">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-142">Optional.</span></span> <span data-ttu-id="0c1dd-143">Любой допустимый номер ошибки.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-143">Any valid error number.</span></span></param>
        <summary><span data-ttu-id="0c1dd-144">Возвращает сообщение об ошибке, соответствующее данному номеру ошибки.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-144">Returns the error message that corresponds to a given error number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-145">Сообщение об ошибке, соответствующее данному номеру ошибки.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-145">The error message that corresponds to a given error number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-146">Функция `ErrorToString` проверяет параметры свойств объекта `Err`, чтобы определить самую последнюю ошибку времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-146">The `ErrorToString` function examines the property settings of the `Err` object to identify the most recent run-time error.</span></span> <span data-ttu-id="0c1dd-147">Возвращаемое значение функции `ErrorToString` соответствует свойству `Description` объекта `Err`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-147">The return value of the `ErrorToString` function corresponds to the `Description` property of the `Err` object.</span></span> <span data-ttu-id="0c1dd-148">Если `ErrorNumber` является допустимым номером ошибки, но не определен, `ErrorToString` возвращает строку `"Application-defined or object-defined error."` если `ErrorNumber` является недопустимым, возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-148">If `ErrorNumber` is a valid error number but is not defined, `ErrorToString` returns the string `"Application-defined or object-defined error."` If `ErrorNumber` is not valid, an error occurs.</span></span> <span data-ttu-id="0c1dd-149">Если `ErrorNumber` опущено, возвращается сообщение, соответствующее самой последней ошибке времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-149">If `ErrorNumber` is omitted, the message corresponding to the most recent run-time error is returned.</span></span> <span data-ttu-id="0c1dd-150">Если ошибка времени выполнения или `ErrorNumber` равен 0, `ErrorToString` возвращает строку нулевой длины ("").</span><span class="sxs-lookup"><span data-stu-id="0c1dd-150">If no run-time error has occurred or `ErrorNumber` is 0, `ErrorToString` returns a zero-length string ("").</span></span>  
  
 <span data-ttu-id="0c1dd-151">В Visual Basic версии 6,0 и более ранних эта функция была предоставлена функцией `Error`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-151">In Visual Basic version 6.0 and earlier, this functionality was provided by the `Error` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-152">В следующем коде функция `ErrorToString` используется для вывода сообщений об ошибках, соответствующих указанным номерам ошибок.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-152">The following code uses the `ErrorToString` function to display error messages that correspond to the specified error numbers.</span></span>  
  
 [!code-vb[VbVbalrCatRef#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-153"><paramref name="ErrorNumber" /> выходит за пределы диапазона.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-153"><paramref name="ErrorNumber" /> is out of range.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="P:Microsoft.VisualBasic.ErrObject.Description" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fix">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c1dd-154">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-154">Returns the integer portion of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static decimal Fix (decimal Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Fix(valuetype System.Decimal Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Fix(System::Decimal Number);" />
      <MemberSignature Language="F#" Value="static member Fix : decimal -&gt; decimal" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.Decimal Fix(valuetype System.Decimal Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-155">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-155">Required.</span></span> <span data-ttu-id="0c1dd-156">Число типа <see langword="Decimal" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-156">A number of type <see langword="Decimal" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-157">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-157">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-158">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-158">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-159">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-159">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-160">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-160">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-161">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-161">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-162">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-162">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
## Examples  
 <span data-ttu-id="0c1dd-163">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-163">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-164">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-164">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-165">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-165">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-166">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-166">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-167">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-167">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-168">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-168">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-169">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-169">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-170">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-170">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-171">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-171">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-172">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-172">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-173">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-173">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-174">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-174">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-175">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-175">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-176">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-176">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-177">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-177">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-178">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-178">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static double Fix (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Fix(float64 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Fix(double Number);" />
      <MemberSignature Language="F#" Value="static member Fix : double -&gt; double" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Fix(float64 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-179">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-179">Required.</span></span> <span data-ttu-id="0c1dd-180">Число типа <see langword="Double" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-180">A number of type <see langword="Double" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-181">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-181">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-182">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-182">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-183">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-183">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-184">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-184">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-185">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-185">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-186">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-186">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  

<span data-ttu-id="0c1dd-187">Начиная с Visual Basic 15,8, производительность преобразования `Double`в целое число оптимизирована, если передать значение, возвращаемое методом `Fix`, в любую из [целочисленных функций преобразования](~/docs/visual-basic/language-reference/functions/conversion-functions.md)или значение `Double`, возвращаемое `Fix`, неявно преобразуется в целое число с [параметром Option](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) , равным `Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-187">Starting with Visual Basic 15.8, the performance of `Double`-to-integer conversion is optimized if you pass the value returned by the `Fix` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the `Double` value returned by `Fix` is implicitly converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to `Off`.</span></span> <span data-ttu-id="0c1dd-188">Эта оптимизация позволяет коду выполняться быстрее — до двух раз быстрее для кода, который выполняет большое количество преобразований в целочисленные типы.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-188">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="0c1dd-189">В следующем примере показано такое Оптимизированное преобразование:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-189">The following example illustrates such an optimized conversion:</span></span>

```vb
Dim d As Double = 173.7619
Dim i1 As Integer = CInt(Fix(d))           ' Result: 173
```  
  
## Examples  
 <span data-ttu-id="0c1dd-190">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-190">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-191">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-191">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-192">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-192">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-193">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-193">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-194">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-194">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-195">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-195">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-196">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-196">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-197">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-197">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-198">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-198">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-199">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-199">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-200">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-200">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-201">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-201">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-202">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-202">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-203">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-203">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-204">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-204">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-205">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-205">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static short Fix (short Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Fix(int16 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Fix(short Number);" />
      <MemberSignature Language="F#" Value="static member Fix : int16 -&gt; int16" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Fix(int16 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-206">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-206">Required.</span></span> <span data-ttu-id="0c1dd-207">Число типа <see langword="Short" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-207">A number of type <see langword="Short" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-208">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-208">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-209">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-209">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-210">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-210">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-211">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-211">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-212">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-212">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-213">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-213">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-214">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-214">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-215">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-215">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-216">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-216">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-217">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-217">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-218">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-218">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-219">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-219">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-220">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-220">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-221">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-221">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-222">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-222">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-223">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-223">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-224">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-224">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-225">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-225">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-226">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-226">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-227">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-227">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-228">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-228">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-229">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-229">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static int Fix (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Fix(int32 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Fix(int Number);" />
      <MemberSignature Language="F#" Value="static member Fix : int -&gt; int" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Fix(int32 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-230">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-230">Required.</span></span> <span data-ttu-id="0c1dd-231">Число типа <see langword="Integer" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-231">A number of type <see langword="Integer" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-232">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-232">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-233">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-233">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-234">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-234">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-235">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-235">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-236">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-236">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-237">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-237">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-238">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-238">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-239">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-239">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-240">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-240">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-241">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-241">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-242">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-242">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-243">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-243">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-244">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-244">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-245">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-245">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-246">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-246">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-247">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-247">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-248">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-248">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-249">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-249">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-250">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-250">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-251">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-251">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-252">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-252">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-253">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-253">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static long Fix (long Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Fix(int64 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Fix(long Number);" />
      <MemberSignature Language="F#" Value="static member Fix : int64 -&gt; int64" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Fix(int64 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-254">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-254">Required.</span></span> <span data-ttu-id="0c1dd-255">Число типа <see langword="Long" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-255">A number of type <see langword="Long" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-256">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-256">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-257">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-257">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-258">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-258">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-259">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-259">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-260">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-260">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-261">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-261">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-262">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-262">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-263">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-263">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-264">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-264">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-265">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-265">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-266">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-266">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-267">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-267">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-268">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-268">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-269">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-269">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-270">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-270">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-271">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-271">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-272">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-272">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-273">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-273">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-274">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-274">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-275">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-275">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-276">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-276">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-277">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-277">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static object Fix (object Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Fix(object Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Fix(System::Object ^ Number);" />
      <MemberSignature Language="F#" Value="static member Fix : obj -&gt; obj" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberSignature Language="ILAsm" Value=".method public static object Fix(object Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-278">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-278">Required.</span></span> <span data-ttu-id="0c1dd-279">Число типа <see langword="Object" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-279">A number of type <see langword="Object" /> or any valid numeric expression.</span></span> <span data-ttu-id="0c1dd-280">Если параметр <paramref name="Number" /> имеет значение <see langword="Nothing" />, то возвращается значение <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-280">If <paramref name="Number" /> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span></span></param>
        <summary><span data-ttu-id="0c1dd-281">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-281">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-282">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-282">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-283">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-283">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-284">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-284">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-285">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-285">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-286">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-286">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  

<span data-ttu-id="0c1dd-287">Начиная с Visual Basic 15,8, если аргумент `Number` является объектом, тип среды выполнения которого — `Double` или `Single`, производительность преобразования с плавающей запятой в целое число оптимизирована, если передать значение, возвращаемое методом `Fix`, в любую из [целочисленных функций преобразования](~/docs/visual-basic/language-reference/functions/conversion-functions.md)или значение, возвращаемое `Fix`, автоматически преобразуется в целое число с [параметром Option строго](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) со значением OFF.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-287">Starting with Visual Basic 15.8, if the `Number` argument is an object whose runtime type is `Double` or `Single`, the performance of floating-point-to-integer conversion is optimized if you pass the value returned by the `Fix` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the value returned by `Fix` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="0c1dd-288">Эта оптимизация позволяет коду выполняться быстрее — до двух раз быстрее для кода, который выполняет большое количество преобразований в целочисленные типы.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-288">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="0c1dd-289">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-289">For example:</span></span>

```vb
Dim d As Object = 173.7619
Dim i1 As Integer = CInt(Fix(d))           ' Result: 173
Dim s As Object = 173.7619F
Dim i2 As Integer = CInt(Fix(s))           ' Result: 173
```     
  
## Examples  
 <span data-ttu-id="0c1dd-290">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-290">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-291">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-291">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-292">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-292">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-293">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-293">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-294">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-294">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-295">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-295">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-296">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-296">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-297">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-297">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-298">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-298">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-299">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-299">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-300">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-300">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-301">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-301">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-302">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-302">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-303">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-303">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-304">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-304">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-305">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-305">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static float Fix (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Fix(float32 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Fix(float Number);" />
      <MemberSignature Language="F#" Value="static member Fix : single -&gt; single" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Fix(float32 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-306">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-306">Required.</span></span> <span data-ttu-id="0c1dd-307">Число типа <see langword="Single" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-307">A number of type <see langword="Single" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-308">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-308">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-309">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-309">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-310">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-310">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-311">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-311">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-312">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-312">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-313">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-313">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
<span data-ttu-id="0c1dd-314">Начиная с Visual Basic 15,8, производительность преобразования `Single`в целое число оптимизирована, если передать значение, возвращаемое методом `Fix`, в любую из [целочисленных функций преобразования](~/docs/visual-basic/language-reference/functions/conversion-functions.md)или значение `Single`, возвращаемое `Fix`, автоматически преобразуется в целое число с [параметром Option-on](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) Off.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-314">Starting with Visual Basic 15.8, the performance of `Single`-to-integer conversion is optimized if you pass the value returned by the `Fix` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the `Single` value returned by `Fix` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="0c1dd-315">Эта оптимизация позволяет коду выполняться быстрее — до двух раз быстрее для кода, который выполняет большое количество преобразований в целочисленные типы.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-315">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="0c1dd-316">В следующем примере показано такое Оптимизированное преобразование:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-316">The following example illustrates such an optimized conversion:</span></span>
   
```vb
Dim s As Single = 173.7619
Dim i2 As Integer = CInt(Fix(s))           ' Result: 173
```

## Examples  
 <span data-ttu-id="0c1dd-317">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-317">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-318">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-318">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-319">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-319">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-320">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-320">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-321">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-321">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-322">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-322">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-323">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-323">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-324">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-324">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-325">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-325">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-326">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-326">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-327">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-327">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-328">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-328">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-329">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-329">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-330">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-330">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-331">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-331">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-332">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-332">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Hex">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c1dd-333">Возвращает строку, представляющую шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-333">Returns a string representing the hexadecimal value of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (byte Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Hex(unsigned int8 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(System::Byte Number);" />
      <MemberSignature Language="F#" Value="static member Hex : byte -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(unsigned int8 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-334">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-334">Required.</span></span> <span data-ttu-id="0c1dd-335">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-335">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-336">Возвращает строку, представляющую шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-336">Returns a string representing the hexadecimal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-337">Строка, представляющая шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-337">A string representing the hexadecimal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-338">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-338">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-339">Если `Number`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-339">If `Number` is</span></span>|<span data-ttu-id="0c1dd-340">Шестнадцатеричные возвраты</span><span class="sxs-lookup"><span data-stu-id="0c1dd-340">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-341">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-341">Empty</span></span>|<span data-ttu-id="0c1dd-342">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-342">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-343">Любое числовое значение</span><span class="sxs-lookup"><span data-stu-id="0c1dd-343">Any numeric value</span></span>|<span data-ttu-id="0c1dd-344">До шестнадцати шестнадцатеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-344">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-345">Шестнадцатеричные числа можно представить непосредственно, выполнив значения в соответствующем диапазоне с `&H`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-345">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="0c1dd-346">Например, `&H10` представляет десятичное число 16 в шестнадцатеричной нотации.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-346">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-347">В этом примере функция `Hex` используется для возврата шестнадцатеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-347">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-348"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-348"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-349"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-349"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-350">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-350">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md"><span data-ttu-id="0c1dd-351">Практическое руководство. Преобразование шестнадцатеричных строк в числа</span><span class="sxs-lookup"><span data-stu-id="0c1dd-351">How to: Convert Hexadecimal Strings to Numbers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (short Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Hex(int16 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(short Number);" />
      <MemberSignature Language="F#" Value="static member Hex : int16 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(int16 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-352">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-352">Required.</span></span> <span data-ttu-id="0c1dd-353">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-353">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-354">Возвращает строку, представляющую шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-354">Returns a string representing the hexadecimal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-355">Строка, представляющая шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-355">A string representing the hexadecimal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-356">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-356">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-357">Если `Number`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-357">If `Number` is</span></span>|<span data-ttu-id="0c1dd-358">Шестнадцатеричные возвраты</span><span class="sxs-lookup"><span data-stu-id="0c1dd-358">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-359">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-359">Empty</span></span>|<span data-ttu-id="0c1dd-360">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-360">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-361">Любое числовое значение</span><span class="sxs-lookup"><span data-stu-id="0c1dd-361">Any numeric value</span></span>|<span data-ttu-id="0c1dd-362">До шестнадцати шестнадцатеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-362">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-363">Шестнадцатеричные числа можно представить непосредственно, выполнив значения в соответствующем диапазоне с `&H`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-363">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="0c1dd-364">Например, `&H10` представляет десятичное число 16 в шестнадцатеричной нотации.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-364">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-365">В этом примере функция `Hex` используется для возврата шестнадцатеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-365">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-366"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-366"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-367"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-367"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-368">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-368">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md"><span data-ttu-id="0c1dd-369">Практическое руководство. Преобразование шестнадцатеричных строк в числа</span><span class="sxs-lookup"><span data-stu-id="0c1dd-369">How to: Convert Hexadecimal Strings to Numbers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Hex(int32 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(int Number);" />
      <MemberSignature Language="F#" Value="static member Hex : int -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(int32 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-370">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-370">Required.</span></span> <span data-ttu-id="0c1dd-371">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-371">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-372">Возвращает строку, представляющую шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-372">Returns a string representing the hexadecimal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-373">Строка, представляющая шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-373">A string representing the hexadecimal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-374">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-374">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-375">Если `Number`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-375">If `Number` is</span></span>|<span data-ttu-id="0c1dd-376">Шестнадцатеричные возвраты</span><span class="sxs-lookup"><span data-stu-id="0c1dd-376">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-377">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-377">Empty</span></span>|<span data-ttu-id="0c1dd-378">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-378">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-379">Любое числовое значение</span><span class="sxs-lookup"><span data-stu-id="0c1dd-379">Any numeric value</span></span>|<span data-ttu-id="0c1dd-380">До шестнадцати шестнадцатеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-380">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-381">Шестнадцатеричные числа можно представить непосредственно, выполнив значения в соответствующем диапазоне с `&H`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-381">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="0c1dd-382">Например, `&H10` представляет десятичное число 16 в шестнадцатеричной нотации.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-382">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-383">В этом примере функция `Hex` используется для возврата шестнадцатеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-383">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-384"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-384"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-385"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-385"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-386">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-386">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md"><span data-ttu-id="0c1dd-387">Практическое руководство. Преобразование шестнадцатеричных строк в числа</span><span class="sxs-lookup"><span data-stu-id="0c1dd-387">How to: Convert Hexadecimal Strings to Numbers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (long Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Hex(int64 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(long Number);" />
      <MemberSignature Language="F#" Value="static member Hex : int64 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(int64 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-388">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-388">Required.</span></span> <span data-ttu-id="0c1dd-389">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-389">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-390">Возвращает строку, представляющую шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-390">Returns a string representing the hexadecimal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-391">Строка, представляющая шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-391">A string representing the hexadecimal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-392">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-392">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-393">Если `Number`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-393">If `Number` is</span></span>|<span data-ttu-id="0c1dd-394">Шестнадцатеричные возвраты</span><span class="sxs-lookup"><span data-stu-id="0c1dd-394">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-395">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-395">Empty</span></span>|<span data-ttu-id="0c1dd-396">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-396">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-397">Любое числовое значение</span><span class="sxs-lookup"><span data-stu-id="0c1dd-397">Any numeric value</span></span>|<span data-ttu-id="0c1dd-398">До шестнадцати шестнадцатеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-398">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-399">Шестнадцатеричные числа можно представить непосредственно, выполнив значения в соответствующем диапазоне с `&H`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-399">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="0c1dd-400">Например, `&H10` представляет десятичное число 16 в шестнадцатеричной нотации.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-400">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-401">В этом примере функция `Hex` используется для возврата шестнадцатеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-401">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-402"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-402"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-403"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-403"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-404">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-404">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md"><span data-ttu-id="0c1dd-405">Практическое руководство. Преобразование шестнадцатеричных строк в числа</span><span class="sxs-lookup"><span data-stu-id="0c1dd-405">How to: Convert Hexadecimal Strings to Numbers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (object Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Hex(object Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(System::Object ^ Number);" />
      <MemberSignature Language="F#" Value="static member Hex : obj -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(object Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-406">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-406">Required.</span></span> <span data-ttu-id="0c1dd-407">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-407">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-408">Возвращает строку, представляющую шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-408">Returns a string representing the hexadecimal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-409">Строка, представляющая шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-409">A string representing the hexadecimal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-410">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-410">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-411">Если `Number`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-411">If `Number` is</span></span>|<span data-ttu-id="0c1dd-412">Шестнадцатеричные возвраты</span><span class="sxs-lookup"><span data-stu-id="0c1dd-412">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-413">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-413">Empty</span></span>|<span data-ttu-id="0c1dd-414">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-414">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-415">Любое числовое значение</span><span class="sxs-lookup"><span data-stu-id="0c1dd-415">Any numeric value</span></span>|<span data-ttu-id="0c1dd-416">До шестнадцати шестнадцатеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-416">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-417">Шестнадцатеричные числа можно представить непосредственно, выполнив значения в соответствующем диапазоне с `&H`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-417">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="0c1dd-418">Например, `&H10` представляет десятичное число 16 в шестнадцатеричной нотации.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-418">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-419">В этом примере функция `Hex` используется для возврата шестнадцатеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-419">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-420"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-420"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-421"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-421"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-422">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-422">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md"><span data-ttu-id="0c1dd-423">Практическое руководство. Преобразование шестнадцатеричных строк в числа</span><span class="sxs-lookup"><span data-stu-id="0c1dd-423">How to: Convert Hexadecimal Strings to Numbers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (sbyte Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Hex(int8 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(System::SByte Number);" />
      <MemberSignature Language="F#" Value="static member Hex : sbyte -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(int8 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.SByte" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-424">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-424">Required.</span></span> <span data-ttu-id="0c1dd-425">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-425">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-426">Возвращает строку, представляющую шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-426">Returns a string representing the hexadecimal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-427">Строка, представляющая шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-427">A string representing the hexadecimal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-428">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-428">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-429">Если `Number`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-429">If `Number` is</span></span>|<span data-ttu-id="0c1dd-430">Шестнадцатеричные возвраты</span><span class="sxs-lookup"><span data-stu-id="0c1dd-430">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-431">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-431">Empty</span></span>|<span data-ttu-id="0c1dd-432">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-432">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-433">Любое числовое значение</span><span class="sxs-lookup"><span data-stu-id="0c1dd-433">Any numeric value</span></span>|<span data-ttu-id="0c1dd-434">До шестнадцати шестнадцатеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-434">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-435">Шестнадцатеричные числа можно представить непосредственно, выполнив значения в соответствующем диапазоне с `&H`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-435">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="0c1dd-436">Например, `&H10` представляет десятичное число 16 в шестнадцатеричной нотации.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-436">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-437">В этом примере функция `Hex` используется для возврата шестнадцатеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-437">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-438"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-438"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-439"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-439"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-440">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-440">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md"><span data-ttu-id="0c1dd-441">Практическое руководство. Преобразование шестнадцатеричных строк в числа</span><span class="sxs-lookup"><span data-stu-id="0c1dd-441">How to: Convert Hexadecimal Strings to Numbers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (ushort Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Hex(unsigned int16 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(System::UInt16 Number);" />
      <MemberSignature Language="F#" Value="static member Hex : uint16 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(unsigned int16 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.UInt16" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-442">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-442">Required.</span></span> <span data-ttu-id="0c1dd-443">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-443">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-444">Возвращает строку, представляющую шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-444">Returns a string representing the hexadecimal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-445">Строка, представляющая шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-445">A string representing the hexadecimal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-446">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-446">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-447">Если `Number`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-447">If `Number` is</span></span>|<span data-ttu-id="0c1dd-448">Шестнадцатеричные возвраты</span><span class="sxs-lookup"><span data-stu-id="0c1dd-448">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-449">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-449">Empty</span></span>|<span data-ttu-id="0c1dd-450">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-450">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-451">Любое числовое значение</span><span class="sxs-lookup"><span data-stu-id="0c1dd-451">Any numeric value</span></span>|<span data-ttu-id="0c1dd-452">До шестнадцати шестнадцатеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-452">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-453">Шестнадцатеричные числа можно представить непосредственно, выполнив значения в соответствующем диапазоне с `&H`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-453">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="0c1dd-454">Например, `&H10` представляет десятичное число 16 в шестнадцатеричной нотации.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-454">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-455">В этом примере функция `Hex` используется для возврата шестнадцатеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-455">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-456"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-456"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-457"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-457"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-458">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-458">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md"><span data-ttu-id="0c1dd-459">Практическое руководство. Преобразование шестнадцатеричных строк в числа</span><span class="sxs-lookup"><span data-stu-id="0c1dd-459">How to: Convert Hexadecimal Strings to Numbers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (uint Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Hex(unsigned int32 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(System::UInt32 Number);" />
      <MemberSignature Language="F#" Value="static member Hex : uint32 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(unsigned int32 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.UInt32" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-460">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-460">Required.</span></span> <span data-ttu-id="0c1dd-461">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-461">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-462">Возвращает строку, представляющую шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-462">Returns a string representing the hexadecimal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-463">Строка, представляющая шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-463">A string representing the hexadecimal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-464">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-464">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-465">Если `Number`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-465">If `Number` is</span></span>|<span data-ttu-id="0c1dd-466">Шестнадцатеричные возвраты</span><span class="sxs-lookup"><span data-stu-id="0c1dd-466">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-467">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-467">Empty</span></span>|<span data-ttu-id="0c1dd-468">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-468">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-469">Любое числовое значение</span><span class="sxs-lookup"><span data-stu-id="0c1dd-469">Any numeric value</span></span>|<span data-ttu-id="0c1dd-470">До шестнадцати шестнадцатеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-470">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-471">Шестнадцатеричные числа можно представить непосредственно, выполнив значения в соответствующем диапазоне с `&H`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-471">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="0c1dd-472">Например, `&H10` представляет десятичное число 16 в шестнадцатеричной нотации.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-472">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-473">В этом примере функция `Hex` используется для возврата шестнадцатеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-473">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-474"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-474"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-475"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-475"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-476">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-476">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md"><span data-ttu-id="0c1dd-477">Практическое руководство. Преобразование шестнадцатеричных строк в числа</span><span class="sxs-lookup"><span data-stu-id="0c1dd-477">How to: Convert Hexadecimal Strings to Numbers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (ulong Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Hex(unsigned int64 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(System::UInt64 Number);" />
      <MemberSignature Language="F#" Value="static member Hex : uint64 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(unsigned int64 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.UInt64" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-478">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-478">Required.</span></span> <span data-ttu-id="0c1dd-479">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-479">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-480">Возвращает строку, представляющую шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-480">Returns a string representing the hexadecimal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-481">Строка, представляющая шестнадцатеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-481">A string representing the hexadecimal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-482">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-482">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-483">Если `Number`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-483">If `Number` is</span></span>|<span data-ttu-id="0c1dd-484">Шестнадцатеричные возвраты</span><span class="sxs-lookup"><span data-stu-id="0c1dd-484">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-485">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-485">Empty</span></span>|<span data-ttu-id="0c1dd-486">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-486">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-487">Любое числовое значение</span><span class="sxs-lookup"><span data-stu-id="0c1dd-487">Any numeric value</span></span>|<span data-ttu-id="0c1dd-488">До шестнадцати шестнадцатеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-488">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-489">Шестнадцатеричные числа можно представить непосредственно, выполнив значения в соответствующем диапазоне с `&H`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-489">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="0c1dd-490">Например, `&H10` представляет десятичное число 16 в шестнадцатеричной нотации.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-490">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-491">В этом примере функция `Hex` используется для возврата шестнадцатеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-491">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-492"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-492"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-493"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-493"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-494">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-494">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md"><span data-ttu-id="0c1dd-495">Практическое руководство. Преобразование шестнадцатеричных строк в числа</span><span class="sxs-lookup"><span data-stu-id="0c1dd-495">How to: Convert Hexadecimal Strings to Numbers</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Int">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c1dd-496">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-496">Returns the integer portion of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static decimal Int (decimal Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Int(valuetype System.Decimal Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Int(System::Decimal Number);" />
      <MemberSignature Language="F#" Value="static member Int : decimal -&gt; decimal" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.Decimal Int(valuetype System.Decimal Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-497">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-497">Required.</span></span> <span data-ttu-id="0c1dd-498">Число типа <see langword="Decimal" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-498">A number of type <see langword="Decimal" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-499">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-499">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-500">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-500">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-501">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-501">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-502">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-502">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-503">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-503">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-504">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-504">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
## Examples  
 <span data-ttu-id="0c1dd-505">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-505">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-506">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-506">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-507">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-507">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-508">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-508">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-509">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-509">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-510">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-510">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-511">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-511">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-512">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-512">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-513">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-513">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-514">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-514">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-515">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-515">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-516">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-516">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-517">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-517">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-518">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-518">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-519">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-519">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-520">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-520">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static double Int (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Int(float64 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Int(double Number);" />
      <MemberSignature Language="F#" Value="static member Int : double -&gt; double" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Int(float64 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-521">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-521">Required.</span></span> <span data-ttu-id="0c1dd-522">Число типа <see langword="Double" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-522">A number of type <see langword="Double" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-523">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-523">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-524">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-524">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-525">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-525">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-526">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-526">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-527">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-527">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-528">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-528">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
<span data-ttu-id="0c1dd-529">Начиная с Visual Basic 15,8, производительность преобразования типа "двойное в целое число" оптимизирована, если передать значение, возвращаемое методом `Int`, в любую из [целочисленных функций преобразования](~/docs/visual-basic/language-reference/functions/conversion-functions.md)или значение Double, возвращаемое функцией `Int`, автоматически преобразуется в целое число с [параметром Option](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) , равным OFF.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-529">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Int` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Int` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="0c1dd-530">Эта оптимизация позволяет коду выполняться быстрее — до двух раз быстрее для кода, который выполняет большое количество преобразований в целочисленные типы.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-530">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="0c1dd-531">В следующем примере показано такое Оптимизированное преобразование:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-531">The following example illustrates such an optimized conversion:</span></span>

```vb
Dim dbl As Double = 175.7619
Dim i3 As Integer = CInt(Int(dbl))         ' Result: 175
```  
  
## Examples  
 <span data-ttu-id="0c1dd-532">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-532">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-533">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-533">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-534">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-534">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-535">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-535">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-536">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-536">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-537">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-537">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-538">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-538">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-539">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-539">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-540">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-540">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-541">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-541">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-542">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-542">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-543">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-543">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-544">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-544">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-545">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-545">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-546">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-546">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-547">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-547">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static short Int (short Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Int(int16 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Int(short Number);" />
      <MemberSignature Language="F#" Value="static member Int : int16 -&gt; int16" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Int(int16 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-548">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-548">Required.</span></span> <span data-ttu-id="0c1dd-549">Число типа <see langword="Short" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-549">A number of type <see langword="Short" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-550">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-550">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-551">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-551">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-552">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-552">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-553">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-553">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-554">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-554">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-555">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-555">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-556">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-556">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-557">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-557">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-558">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-558">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-559">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-559">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-560">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-560">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-561">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-561">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-562">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-562">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-563">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-563">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-564">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-564">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-565">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-565">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-566">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-566">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-567">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-567">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-568">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-568">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-569">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-569">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-570">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-570">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-571">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-571">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static int Int (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Int(int32 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Int(int Number);" />
      <MemberSignature Language="F#" Value="static member Int : int -&gt; int" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Int(int32 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-572">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-572">Required.</span></span> <span data-ttu-id="0c1dd-573">Число типа <see langword="Integer" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-573">A number of type <see langword="Integer" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-574">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-574">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-575">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-575">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-576">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-576">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-577">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-577">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-578">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-578">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-579">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-579">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-580">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-580">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-581">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-581">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-582">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-582">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-583">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-583">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-584">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-584">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-585">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-585">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-586">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-586">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-587">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-587">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-588">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-588">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-589">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-589">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-590">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-590">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-591">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-591">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-592">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-592">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-593">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-593">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-594">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-594">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-595">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-595">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static long Int (long Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Int(int64 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Int(long Number);" />
      <MemberSignature Language="F#" Value="static member Int : int64 -&gt; int64" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Int(int64 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-596">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-596">Required.</span></span> <span data-ttu-id="0c1dd-597">Число типа <see langword="Long" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-597">A number of type <see langword="Long" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-598">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-598">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-599">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-599">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-600">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-600">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-601">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-601">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-602">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-602">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-603">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-603">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-604">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-604">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-605">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-605">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-606">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-606">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-607">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-607">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-608">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-608">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-609">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-609">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-610">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-610">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-611">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-611">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-612">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-612">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-613">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-613">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-614">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-614">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-615">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-615">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-616">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-616">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-617">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-617">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-618">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-618">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-619">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-619">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static object Int (object Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Int(object Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Int(System::Object ^ Number);" />
      <MemberSignature Language="F#" Value="static member Int : obj -&gt; obj" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberSignature Language="ILAsm" Value=".method public static object Int(object Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-620">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-620">Required.</span></span> <span data-ttu-id="0c1dd-621">Число типа <see langword="Object" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-621">A number of type <see langword="Object" /> or any valid numeric expression.</span></span> <span data-ttu-id="0c1dd-622">Если параметр <paramref name="Number" /> имеет значение <see langword="Nothing" />, то возвращается значение <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-622">If <paramref name="Number" /> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span></span></param>
        <summary><span data-ttu-id="0c1dd-623">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-623">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-624">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-624">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-625">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-625">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-626">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-626">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-627">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-627">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-628">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-628">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
<span data-ttu-id="0c1dd-629">Начиная с Visual Basic 15,8, если аргумент `Number` является объектом, тип среды выполнения которого — `Double` или `Single`, производительность преобразования с плавающей запятой в целое число оптимизирована, если передать значение, возвращаемое методом `Int`, в любую из [целочисленных функций преобразования](~/docs/visual-basic/language-reference/functions/conversion-functions.md)или значение, возвращаемое `Int`, автоматически преобразуется в целое число с [параметром Option строго](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) со значением OFF.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-629">Starting with Visual Basic 15.8, if the `Number` argument is an object whose runtime type is `Double` or `Single`, the performance of floating-point-to-integer conversion is optimized if you pass the value returned by the `Int` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the value returned by `Int` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="0c1dd-630">Эта оптимизация позволяет коду выполняться быстрее — до двух раз быстрее для кода, который выполняет большое количество преобразований в целочисленные типы.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-630">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="0c1dd-631">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-631">For example:</span></span>

```vb
Dim d As Object = 173.7619
Dim i1 As Integer = CInt(Int(d))           ' Result: 173
Dim s As Object = 173.7619F
Dim i2 As Integer = CInt(Int(s))           ' Result: 173
```

## Examples  
 <span data-ttu-id="0c1dd-632">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-632">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-633">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-633">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-634">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-634">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-635">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-635">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-636">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-636">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-637">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-637">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-638">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-638">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-639">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-639">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-640">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-640">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-641">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-641">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-642">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-642">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-643">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-643">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-644">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-644">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-645">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-645">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-646">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-646">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-647">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-647">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static float Int (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Int(float32 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Int(float Number);" />
      <MemberSignature Language="F#" Value="static member Int : single -&gt; single" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Int(float32 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-648">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-648">Required.</span></span> <span data-ttu-id="0c1dd-649">Число типа <see langword="Single" /> или любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-649">A number of type <see langword="Single" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-650">Возвращает целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-650">Returns the integer portion of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-651">Целая часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-651">The integer portion of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-652">Функции `Int` и `Fix` удаляют дробную часть `Number` и возвращают результирующее целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-652">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="0c1dd-653">Различие между функциями `Int` и `Fix` заключается в том, что если `Number` имеет отрицательное значение, `Int` возвращает первое отрицательное целое число, меньшее или равное `Number`, тогда как `Fix` возвращает первое отрицательное целое число, которое больше или равно `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-653">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="0c1dd-654">Например, `Int` преобразует-8,4 в-9, а `Fix` преобразует-8,4 в-8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-654">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="0c1dd-655">`Fix(number)` — это эквивалент `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="0c1dd-655">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
<span data-ttu-id="0c1dd-656">Начиная с Visual Basic 15,8, производительность преобразования `Single`в целое число оптимизирована, если передать значение, возвращаемое методом `Int`, в любую из [целочисленных функций преобразования](~/docs/visual-basic/language-reference/functions/conversion-functions.md)или значение `Single`, возвращаемое `Int`, автоматически преобразуется в целое число с [параметром Option-on](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) Off.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-656">Starting with Visual Basic 15.8, the performance of `Single`-to-integer conversion is optimized if you pass the value returned by the `Int` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the `Single` value returned by `Int` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="0c1dd-657">Эта оптимизация позволяет коду выполняться быстрее — до двух раз быстрее для кода, который выполняет большое количество преобразований в целочисленные типы.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-657">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="0c1dd-658">В следующем примере показано такое Оптимизированное преобразование:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-658">The following example illustrates such an optimized conversion:</span></span>

```vb
Dim sng As Single = 175.7619
Dim i3 As Integer = CInt(Fix(sng))         ' Result: 175
```

## Examples  
 <span data-ttu-id="0c1dd-659">В этом примере показано, как функции `Int` и `Fix` возвращают целые части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-659">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="0c1dd-660">В случае отрицательного числового аргумента функция `Int` возвращает первое отрицательное целое число, которое меньше или равно числу. Функция `Fix` возвращает первое отрицательное целое число, которое больше или равно числу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-660">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="0c1dd-661">В следующем примере необходимо указать `Option Strict Off` Поскольку неявные преобразования из типа `Double` в тип `Integer` не допускаются в `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-661">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="0c1dd-662">Функцию `CInt` можно использовать для явного преобразования других типов данных в тип `Integer` с помощью `Option Strict Off`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-662">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="0c1dd-663">Однако `CInt` округляет до ближайшего целого числа вместо усечения дробной части чисел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-663">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="0c1dd-664">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-664">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="0c1dd-665">Для выполнения явного преобразования в целое число без округления можно использовать функцию `CInt` в результате вызова метода `Fix` или `Int`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-665">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="0c1dd-666">Пример:</span><span class="sxs-lookup"><span data-stu-id="0c1dd-666">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="0c1dd-667">Дополнительные сведения о `CInt`см. в разделе [функции преобразования типов](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-667">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-668">Число не указано.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-668">Number is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-669">Число не является числовым типом.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-669">Number is not a numeric type.</span></span></exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-670">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-670">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="0c1dd-671">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-671">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md"><span data-ttu-id="0c1dd-672">Сводка по математическим функциям</span><span class="sxs-lookup"><span data-stu-id="0c1dd-672">Math Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md"><span data-ttu-id="0c1dd-673">Математические функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-673">Math Functions (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-674">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-674">Conversion Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Oct">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c1dd-675">Возвращает строку, представляющую восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-675">Returns a string representing the octal value of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (byte Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Oct(unsigned int8 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(System::Byte Number);" />
      <MemberSignature Language="F#" Value="static member Oct : byte -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(unsigned int8 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-676">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-676">Required.</span></span> <span data-ttu-id="0c1dd-677">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-677">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-678">Возвращает строку, представляющую восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-678">Returns a string representing the octal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-679">Строка, представляющая восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-679">A string representing the octal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-680">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-680">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-681">Если число равно</span><span class="sxs-lookup"><span data-stu-id="0c1dd-681">If Number is</span></span>|<span data-ttu-id="0c1dd-682">Функция Oct возвращает</span><span class="sxs-lookup"><span data-stu-id="0c1dd-682">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-683">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-683">Empty</span></span>|<span data-ttu-id="0c1dd-684">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-684">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-685">Любое другое число</span><span class="sxs-lookup"><span data-stu-id="0c1dd-685">Any other number</span></span>|<span data-ttu-id="0c1dd-686">До 22 восьмеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-686">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-687">Восьмеричные числа можно представить непосредственно, перед числами в правильном диапазоне с `&O`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-687">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="0c1dd-688">Например, `&O10` является восьмеричной нотацией для десятичного 8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-688">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-689">В этом примере функция `Oct` используется для возврата восьмеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-689">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-690"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-690"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-691"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-691"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-692">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-692">Conversion Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-693">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-693">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (short Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Oct(int16 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(short Number);" />
      <MemberSignature Language="F#" Value="static member Oct : int16 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(int16 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-694">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-694">Required.</span></span> <span data-ttu-id="0c1dd-695">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-695">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-696">Возвращает строку, представляющую восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-696">Returns a string representing the octal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-697">Строка, представляющая восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-697">A string representing the octal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-698">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-698">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-699">Если число равно</span><span class="sxs-lookup"><span data-stu-id="0c1dd-699">If Number is</span></span>|<span data-ttu-id="0c1dd-700">Функция Oct возвращает</span><span class="sxs-lookup"><span data-stu-id="0c1dd-700">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-701">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-701">Empty</span></span>|<span data-ttu-id="0c1dd-702">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-702">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-703">Любое другое число</span><span class="sxs-lookup"><span data-stu-id="0c1dd-703">Any other number</span></span>|<span data-ttu-id="0c1dd-704">До 22 восьмеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-704">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-705">Восьмеричные числа можно представить непосредственно, перед числами в правильном диапазоне с `&O`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-705">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="0c1dd-706">Например, `&O10` является восьмеричной нотацией для десятичного 8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-706">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-707">В этом примере функция `Oct` используется для возврата восьмеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-707">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-708"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-708"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-709"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-709"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-710">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-710">Conversion Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-711">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-711">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Oct(int32 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(int Number);" />
      <MemberSignature Language="F#" Value="static member Oct : int -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(int32 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-712">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-712">Required.</span></span> <span data-ttu-id="0c1dd-713">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-713">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-714">Возвращает строку, представляющую восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-714">Returns a string representing the octal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-715">Строка, представляющая восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-715">A string representing the octal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-716">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-716">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-717">Если число равно</span><span class="sxs-lookup"><span data-stu-id="0c1dd-717">If Number is</span></span>|<span data-ttu-id="0c1dd-718">Функция Oct возвращает</span><span class="sxs-lookup"><span data-stu-id="0c1dd-718">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-719">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-719">Empty</span></span>|<span data-ttu-id="0c1dd-720">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-720">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-721">Любое другое число</span><span class="sxs-lookup"><span data-stu-id="0c1dd-721">Any other number</span></span>|<span data-ttu-id="0c1dd-722">До 22 восьмеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-722">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-723">Восьмеричные числа можно представить непосредственно, перед числами в правильном диапазоне с `&O`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-723">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="0c1dd-724">Например, `&O10` является восьмеричной нотацией для десятичного 8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-724">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-725">В этом примере функция `Oct` используется для возврата восьмеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-725">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-726"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-726"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-727"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-727"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-728">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-728">Conversion Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-729">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-729">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (long Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Oct(int64 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(long Number);" />
      <MemberSignature Language="F#" Value="static member Oct : int64 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(int64 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-730">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-730">Required.</span></span> <span data-ttu-id="0c1dd-731">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-731">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-732">Возвращает строку, представляющую восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-732">Returns a string representing the octal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-733">Строка, представляющая восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-733">A string representing the octal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-734">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-734">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-735">Если число равно</span><span class="sxs-lookup"><span data-stu-id="0c1dd-735">If Number is</span></span>|<span data-ttu-id="0c1dd-736">Функция Oct возвращает</span><span class="sxs-lookup"><span data-stu-id="0c1dd-736">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-737">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-737">Empty</span></span>|<span data-ttu-id="0c1dd-738">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-738">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-739">Любое другое число</span><span class="sxs-lookup"><span data-stu-id="0c1dd-739">Any other number</span></span>|<span data-ttu-id="0c1dd-740">До 22 восьмеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-740">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-741">Восьмеричные числа можно представить непосредственно, перед числами в правильном диапазоне с `&O`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-741">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="0c1dd-742">Например, `&O10` является восьмеричной нотацией для десятичного 8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-742">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-743">В этом примере функция `Oct` используется для возврата восьмеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-743">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-744"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-744"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-745"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-745"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-746">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-746">Conversion Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-747">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-747">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (object Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Oct(object Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(System::Object ^ Number);" />
      <MemberSignature Language="F#" Value="static member Oct : obj -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(object Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-748">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-748">Required.</span></span> <span data-ttu-id="0c1dd-749">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-749">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-750">Возвращает строку, представляющую восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-750">Returns a string representing the octal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-751">Строка, представляющая восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-751">A string representing the octal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-752">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-752">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-753">Если число равно</span><span class="sxs-lookup"><span data-stu-id="0c1dd-753">If Number is</span></span>|<span data-ttu-id="0c1dd-754">Функция Oct возвращает</span><span class="sxs-lookup"><span data-stu-id="0c1dd-754">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-755">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-755">Empty</span></span>|<span data-ttu-id="0c1dd-756">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-756">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-757">Любое другое число</span><span class="sxs-lookup"><span data-stu-id="0c1dd-757">Any other number</span></span>|<span data-ttu-id="0c1dd-758">До 22 восьмеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-758">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-759">Восьмеричные числа можно представить непосредственно, перед числами в правильном диапазоне с `&O`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-759">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="0c1dd-760">Например, `&O10` является восьмеричной нотацией для десятичного 8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-760">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-761">В этом примере функция `Oct` используется для возврата восьмеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-761">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-762"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-762"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-763"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-763"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-764">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-764">Conversion Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-765">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-765">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (sbyte Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Oct(int8 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(System::SByte Number);" />
      <MemberSignature Language="F#" Value="static member Oct : sbyte -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(int8 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.SByte" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-766">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-766">Required.</span></span> <span data-ttu-id="0c1dd-767">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-767">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-768">Возвращает строку, представляющую восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-768">Returns a string representing the octal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-769">Строка, представляющая восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-769">A string representing the octal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-770">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-770">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-771">Если число равно</span><span class="sxs-lookup"><span data-stu-id="0c1dd-771">If Number is</span></span>|<span data-ttu-id="0c1dd-772">Функция Oct возвращает</span><span class="sxs-lookup"><span data-stu-id="0c1dd-772">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-773">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-773">Empty</span></span>|<span data-ttu-id="0c1dd-774">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-774">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-775">Любое другое число</span><span class="sxs-lookup"><span data-stu-id="0c1dd-775">Any other number</span></span>|<span data-ttu-id="0c1dd-776">До 22 восьмеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-776">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-777">Восьмеричные числа можно представить непосредственно, перед числами в правильном диапазоне с `&O`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-777">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="0c1dd-778">Например, `&O10` является восьмеричной нотацией для десятичного 8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-778">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-779">В этом примере функция `Oct` используется для возврата восьмеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-779">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-780"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-780"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-781"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-781"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-782">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-782">Conversion Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-783">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-783">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (ushort Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Oct(unsigned int16 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(System::UInt16 Number);" />
      <MemberSignature Language="F#" Value="static member Oct : uint16 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(unsigned int16 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.UInt16" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-784">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-784">Required.</span></span> <span data-ttu-id="0c1dd-785">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-785">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-786">Возвращает строку, представляющую восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-786">Returns a string representing the octal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-787">Строка, представляющая восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-787">A string representing the octal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-788">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-788">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-789">Если число равно</span><span class="sxs-lookup"><span data-stu-id="0c1dd-789">If Number is</span></span>|<span data-ttu-id="0c1dd-790">Функция Oct возвращает</span><span class="sxs-lookup"><span data-stu-id="0c1dd-790">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-791">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-791">Empty</span></span>|<span data-ttu-id="0c1dd-792">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-792">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-793">Любое другое число</span><span class="sxs-lookup"><span data-stu-id="0c1dd-793">Any other number</span></span>|<span data-ttu-id="0c1dd-794">До 22 восьмеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-794">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-795">Восьмеричные числа можно представить непосредственно, перед числами в правильном диапазоне с `&O`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-795">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="0c1dd-796">Например, `&O10` является восьмеричной нотацией для десятичного 8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-796">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-797">В этом примере функция `Oct` используется для возврата восьмеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-797">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-798"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-798"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-799"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-799"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-800">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-800">Conversion Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-801">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-801">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (uint Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Oct(unsigned int32 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(System::UInt32 Number);" />
      <MemberSignature Language="F#" Value="static member Oct : uint32 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(unsigned int32 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.UInt32" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-802">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-802">Required.</span></span> <span data-ttu-id="0c1dd-803">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-803">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-804">Возвращает строку, представляющую восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-804">Returns a string representing the octal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-805">Строка, представляющая восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-805">A string representing the octal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-806">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-806">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-807">Если число равно</span><span class="sxs-lookup"><span data-stu-id="0c1dd-807">If Number is</span></span>|<span data-ttu-id="0c1dd-808">Функция Oct возвращает</span><span class="sxs-lookup"><span data-stu-id="0c1dd-808">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-809">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-809">Empty</span></span>|<span data-ttu-id="0c1dd-810">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-810">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-811">Любое другое число</span><span class="sxs-lookup"><span data-stu-id="0c1dd-811">Any other number</span></span>|<span data-ttu-id="0c1dd-812">До 22 восьмеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-812">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-813">Восьмеричные числа можно представить непосредственно, перед числами в правильном диапазоне с `&O`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-813">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="0c1dd-814">Например, `&O10` является восьмеричной нотацией для десятичного 8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-814">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-815">В этом примере функция `Oct` используется для возврата восьмеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-815">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-816"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-816"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-817"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-817"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-818">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-818">Conversion Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-819">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-819">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (ulong Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Oct(unsigned int64 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(System::UInt64 Number);" />
      <MemberSignature Language="F#" Value="static member Oct : uint64 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(unsigned int64 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.UInt64" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-820">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-820">Required.</span></span> <span data-ttu-id="0c1dd-821">Любое допустимое числовое выражение или выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-821">Any valid numeric expression or <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-822">Возвращает строку, представляющую восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-822">Returns a string representing the octal value of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-823">Строка, представляющая восьмеричное значение числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-823">A string representing the octal value of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-824">Если `Number` не является целым числом, то перед вычислением оно округляется до ближайшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-824">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="0c1dd-825">Если число равно</span><span class="sxs-lookup"><span data-stu-id="0c1dd-825">If Number is</span></span>|<span data-ttu-id="0c1dd-826">Функция Oct возвращает</span><span class="sxs-lookup"><span data-stu-id="0c1dd-826">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="0c1dd-827">Empty</span><span class="sxs-lookup"><span data-stu-id="0c1dd-827">Empty</span></span>|<span data-ttu-id="0c1dd-828">Ноль (0)</span><span class="sxs-lookup"><span data-stu-id="0c1dd-828">Zero (0)</span></span>|  
|<span data-ttu-id="0c1dd-829">Любое другое число</span><span class="sxs-lookup"><span data-stu-id="0c1dd-829">Any other number</span></span>|<span data-ttu-id="0c1dd-830">До 22 восьмеричных символов</span><span class="sxs-lookup"><span data-stu-id="0c1dd-830">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="0c1dd-831">Восьмеричные числа можно представить непосредственно, перед числами в правильном диапазоне с `&O`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-831">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="0c1dd-832">Например, `&O10` является восьмеричной нотацией для десятичного 8.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-832">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-833">В этом примере функция `Oct` используется для возврата восьмеричного значения числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-833">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-834"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-834"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-835"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-835"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-836">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-836">Conversion Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-837">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-837">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Str">
      <MemberSignature Language="C#" Value="public static string Str (object Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Str(object Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Str (Number As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Str(System::Object ^ Number);" />
      <MemberSignature Language="F#" Value="static member Str : obj -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Str Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Str(object Number) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="0c1dd-838">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-838">Required.</span></span> <span data-ttu-id="0c1dd-839"><see langword="Object" />, содержащий любое допустимое числовое выражение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-839">An <see langword="Object" /> containing any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="0c1dd-840">Возвращает представление <see langword="String" /> числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-840">Returns a <see langword="String" /> representation of a number.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-841">Представление <see langword="String" /> числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-841">A <see langword="String" /> representation of a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-842">При преобразовании чисел в строки начальное пространство всегда резервируется для знака `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-842">When numbers are converted to strings, a leading space is always reserved for the sign of `Number`.</span></span> <span data-ttu-id="0c1dd-843">Если `Number` положительное, возвращаемая строка содержит начальный пробел, а знак «плюс» является подразумеваемым.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-843">If `Number` is positive, the returned string contains a leading space, and the plus sign is implied.</span></span> <span data-ttu-id="0c1dd-844">Отрицательное число будет содержать знак "минус" (-) без начального пробела.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-844">A negative number will include the minus sign (-) and no leading space.</span></span>  
  
 <span data-ttu-id="0c1dd-845">Используйте функцию `Format` для преобразования числовых значений, которые нужно отформатировать как даты, время или денежные единицы или в других пользовательских форматах.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-845">Use the `Format` function to convert numeric values you want formatted as dates, times, or currency or in other user-defined formats.</span></span> <span data-ttu-id="0c1dd-846">В отличие от функции `Str`, функция `Format` не включает начальный пробел для знака `Number`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-846">Unlike the `Str` function, the `Format` function does not include a leading space for the sign of `Number`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c1dd-847">Функция `Str` распознает только точку (`.`) в качестве допустимого десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-847">The `Str` function recognizes only the period (`.`) as a valid decimal separator.</span></span> <span data-ttu-id="0c1dd-848">Если используются разные десятичные разделители (например, в международных приложениях), используйте функции `CStr` или `Format`, чтобы преобразовать число в строку.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-848">If different decimal separators are used (for example, in international applications), use the `CStr` or `Format` functions to convert a number to a string.</span></span> <span data-ttu-id="0c1dd-849">Чтобы получить строковое представление числа в определенном языке и региональных параметрах, используйте метод `ToString(IFormatProvider)` числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-849">To get the string representation of a number in a particular culture, use the number's `ToString(IFormatProvider)` method.</span></span> <span data-ttu-id="0c1dd-850">Например, используйте <xref:System.Double.ToString%2A> при преобразовании значения типа `Double` в строку.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-850">For example, use <xref:System.Double.ToString%2A> when converting a value of type `Double` to a string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-851">В этом примере функция `Str` используется для возврата `String` представления числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-851">This example uses the `Str` function to return a `String` representation of a number.</span></span> <span data-ttu-id="0c1dd-852">Если положительное число преобразуется в строку, то для его знака всегда резервируется начальное пространство.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-852">When a positive number is converted to a string, a leading space is always reserved for its sign.</span></span>  
  
 [!code-vb[VbVbalrStrings#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0c1dd-853"><paramref name="Number" /> не задан.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-853"><paramref name="Number" /> is not specified.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="0c1dd-854"><paramref name="Number" /> не относится к числовому типу.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-854"><paramref name="Number" /> is not a numeric type.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Val" />
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md"><span data-ttu-id="0c1dd-855">Сводка по преобразованию</span><span class="sxs-lookup"><span data-stu-id="0c1dd-855">Conversion Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-856">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-856">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Val">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c1dd-857">Возвращает порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-857">Returns the numbers contained in a string as a numeric value of appropriate type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Val">
      <MemberSignature Language="C#" Value="public static int Val (char Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Val(char Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Val(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Val (Expression As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Val(char Expression);" />
      <MemberSignature Language="F#" Value="static member Val : char -&gt; int" Usage="Microsoft.VisualBasic.Conversion.Val Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Val(char Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="0c1dd-858">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-858">Required.</span></span> <span data-ttu-id="0c1dd-859">Любое допустимое выражение<see langword="String" />, переменная <see langword="Object" /> или значение <see langword="Char" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-859">Any valid <see langword="String" /> expression, <see langword="Object" /> variable, or <see langword="Char" /> value.</span></span> <span data-ttu-id="0c1dd-860">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, значение должно быть преобразуемым в <see langword="String" />. В противном случае возникает ошибка <see cref="T:System.ArgumentException" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-860">If <paramref name="Expression" /> is of type <see langword="Object" />, its value must be convertible to <see langword="String" /> or an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="0c1dd-861">Возвращает порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-861">Returns the numbers contained in a string as a numeric value of appropriate type.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-862">Порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-862">The numbers contained in a string as a numeric value of appropriate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-863">Функция `Val` прекращает чтение строки на первом символе, который она не может распознать как часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-863">The `Val` function stops reading the string at the first character it cannot recognize as part of a number.</span></span> <span data-ttu-id="0c1dd-864">Символы и символы, часто рассматриваемые как части числовых значений, такие как знаки доллара и запятые, не распознаются.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-864">Symbols and characters that are often considered parts of numeric values, such as dollar signs and commas, are not recognized.</span></span> <span data-ttu-id="0c1dd-865">Однако функция распознает префиксы системы счисления `&O` (для восьмеричного) и `&H` (для шестнадцатеричного).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-865">However, the function recognizes the radix prefixes `&O` (for octal) and `&H` (for hexadecimal).</span></span> <span data-ttu-id="0c1dd-866">Пробелы, знаки табуляции и символы перевода строки удаляются из аргумента.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-866">Blanks, tabs, and linefeed characters are stripped from the argument.</span></span>  
  
 <span data-ttu-id="0c1dd-867">Следующий вызов возвращает значение 1615198.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-867">The following call returns the value 1615198.</span></span>  
  
```vb  
Val(" 1615 198th Street N.E.")   
```  
  
<span data-ttu-id="0c1dd-868">Следующий вызов возвращает десятичное значение-1.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-868">The following call returns the decimal value -1.</span></span>  
  
```vb  
Val("&HFFFF")   
```  
  
> [!NOTE]
>  <span data-ttu-id="0c1dd-869">Функция `Val` распознает только точку (`.`) в качестве допустимого десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-869">The `Val` function recognizes only the period (`.`) as a valid decimal separator.</span></span> <span data-ttu-id="0c1dd-870">Если используются разные десятичные разделители, как в международных приложениях, используйте `CDbl` или `CInt` вместо преобразования строки в число.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-870">When different decimal separators are used, as in international applications, use `CDbl` or `CInt` instead to convert a string to a number.</span></span> <span data-ttu-id="0c1dd-871">Чтобы преобразовать строковое представление числа в определенном языке и региональных параметрах в числовое значение, используйте метод `Parse(String, IFormatProvider)` числового типа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-871">To convert the string representation of a number in a particular culture to a numeric value, use the numeric type's `Parse(String, IFormatProvider)` method.</span></span> <span data-ttu-id="0c1dd-872">Например, используйте <xref:System.Double.Parse%2A?displayProperty=nameWithType> при преобразовании строки в `Double`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-872">For example, use <xref:System.Double.Parse%2A?displayProperty=nameWithType> when converting a string to a `Double`.</span></span>  
  
<span data-ttu-id="0c1dd-873">Исключение <xref:System.InvalidCastException> может быть создано в ответ на определенные нестандартные числовые форматы.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-873">An <xref:System.InvalidCastException> exception might be thrown in response to certain uncommon number formats.</span></span> <span data-ttu-id="0c1dd-874">Например, следующий код вызывает это исключение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-874">For example, the following code raises this exception.</span></span>  

```vb
' These examples cause run-time errors.  
Console.WriteLine(Val("1.34%"))  
Console.WriteLine(Val("1.34&"))  
```

<span data-ttu-id="0c1dd-875">Конфликт между числом в формате `Double` и символами типа `Integer` и `Long` будет перехвачен компилятором, если он не содержал строку.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-875">The conflict between the number formatted as a `Double` and the `Integer` and `Long` type characters would be caught by the compiler if it were not contained in a string.</span></span>  

```vb
' These examples cause compiler errors.  
Dim m = 1.34%  
Dim n = 1.34&
```  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-876">В следующем примере функция `Val` используется для возврата чисел, содержащихся в каждой строке.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-876">The following example uses the `Val` function to return the numbers contained in each string.</span></span> <span data-ttu-id="0c1dd-877">`Val` прекращает преобразование на первом символе, который не может быть интерпретирован как цифра, числовой модификатор, числовой знак препинания или пробел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-877">`Val` stops converting at the first character that cannot be interpreted as a numeric digit, numeric modifier, numeric punctuation, or white space.</span></span>  
  
 [!code-vb[VbVbalrFunctions#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="0c1dd-878"><paramref name="InputStr" /> — слишком большое значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-878"><paramref name="InputStr" /> is too large.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-879"><see langword="Object" /> — это выражение типа <see langword="String" />, которое нельзя преобразовать в <paramref name="Expression" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-879"><paramref name="Expression" /> is an <see langword="Object" /> type expression that is not convertible to <see langword="String" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.OverflowException" />
        <altmember cref="T:System.InvalidCastException" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-880">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-880">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Val">
      <MemberSignature Language="C#" Value="public static double Val (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Val(object Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Val(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Val (Expression As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Val(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Val : obj -&gt; double" Usage="Microsoft.VisualBasic.Conversion.Val Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Val(object Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="0c1dd-881">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-881">Required.</span></span> <span data-ttu-id="0c1dd-882">Любое допустимое выражение<see langword="String" />, переменная <see langword="Object" /> или значение <see langword="Char" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-882">Any valid <see langword="String" /> expression, <see langword="Object" /> variable, or <see langword="Char" /> value.</span></span> <span data-ttu-id="0c1dd-883">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, значение должно быть преобразуемым в <see langword="String" />. В противном случае возникает ошибка <see cref="T:System.ArgumentException" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-883">If <paramref name="Expression" /> is of type <see langword="Object" />, its value must be convertible to <see langword="String" /> or an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="0c1dd-884">Возвращает порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-884">Returns the numbers contained in a string as a numeric value of appropriate type.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-885">Порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-885">The numbers contained in a string as a numeric value of appropriate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-886">Функция `Val` прекращает чтение строки на первом символе, который она не может распознать как часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-886">The `Val` function stops reading the string at the first character it cannot recognize as part of a number.</span></span> <span data-ttu-id="0c1dd-887">Символы и символы, часто рассматриваемые как части числовых значений, такие как знаки доллара и запятые, не распознаются.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-887">Symbols and characters that are often considered parts of numeric values, such as dollar signs and commas, are not recognized.</span></span> <span data-ttu-id="0c1dd-888">Однако функция распознает префиксы системы счисления `&O` (для восьмеричного) и `&H` (для шестнадцатеричного).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-888">However, the function recognizes the radix prefixes `&O` (for octal) and `&H` (for hexadecimal).</span></span> <span data-ttu-id="0c1dd-889">Пробелы, знаки табуляции и символы перевода строки удаляются из аргумента.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-889">Blanks, tabs, and linefeed characters are removed from the argument.</span></span>  
  
 <span data-ttu-id="0c1dd-890">Следующий вызов возвращает значение 1234123.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-890">The following call returns the value 1234123.</span></span>  
  
```vb  
Val(" 1234 123th Street N.E.")   
```  
  
<span data-ttu-id="0c1dd-891">Следующий вызов возвращает десятичное значение-1.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-891">The following call returns the decimal value -1.</span></span>  
  
```vb  
Val("&HFFFF")   
```  
  
> [!NOTE]
>  <span data-ttu-id="0c1dd-892">Функция `Val` распознает только точку (`.`) в качестве допустимого десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-892">The `Val` function recognizes only the period (`.`) as a valid decimal separator.</span></span> <span data-ttu-id="0c1dd-893">Если используются другие десятичные разделители, как в международных приложениях, используйте `CDbl` или `CInt` вместо преобразования строки в число.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-893">When other decimal separators are used, as in international applications, use `CDbl` or `CInt` instead to convert a string to a number.</span></span> <span data-ttu-id="0c1dd-894">Чтобы преобразовать строковое представление числа в определенном языке и региональных параметрах в числовое значение, используйте метод `Parse(String, IFormatProvider)` числового типа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-894">To convert the string representation of a number in a particular culture to a numeric value, use the numeric type's `Parse(String, IFormatProvider)` method.</span></span> <span data-ttu-id="0c1dd-895">Например, используйте <xref:System.Double.Parse%2A?displayProperty=nameWithType> при преобразовании строки в `Double`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-895">For example, use <xref:System.Double.Parse%2A?displayProperty=nameWithType> when converting a string to a `Double`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c1dd-896">Исключение <xref:System.InvalidCastException> может быть создано в ответ на определенные нестандартные числовые форматы.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-896">An <xref:System.InvalidCastException> exception might be thrown in response to certain uncommon number formats.</span></span> <span data-ttu-id="0c1dd-897">Например, следующий код вызывает это исключение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-897">For example, the following code raises this exception.</span></span>  
>   
>  `' These examples cause run-time errors.`  
>   
>  `'Console.WriteLine(Val("1.34%"))`  
>   
>  `'Console.WriteLine(Val("1.34&"))`  
>   
>  <span data-ttu-id="0c1dd-898">Конфликт между числом, отформатированным в виде `Double`, и символами типа `Integer` и `Long` будет перехвачен компилятором, если конфликт не содержался в строках.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-898">The conflict between the number formatted as a `Double` and the `Integer` and `Long` type characters would be caught by the compiler if the conflict were not contained in strings.</span></span>  
>   
>  `' These examples cause compiler errors.`  
>   
>  `'Dim m = 1.34%`  
>   
>  `'Dim n = 1.34&`  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-899">В следующем примере функция `Val` используется для возврата чисел, содержащихся в каждой строке.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-899">The following example uses the `Val` function to return the numbers contained in each string.</span></span> <span data-ttu-id="0c1dd-900">`Val` прекращает преобразование на первом символе, который не может быть интерпретирован как цифра, числовой модификатор, числовой знак препинания или пробел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-900">`Val` stops converting at the first character that cannot be interpreted as a numeric digit, numeric modifier, numeric punctuation, or white space.</span></span>  
  
 [!code-vb[VbVbalrFunctions#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="0c1dd-901"><paramref name="InputStr" /> — слишком большое значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-901"><paramref name="InputStr" /> is too large.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-902"><see langword="Object" /> — это выражение типа <see langword="String" />, которое нельзя преобразовать в <paramref name="Expression" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-902"><paramref name="Expression" /> is an <see langword="Object" /> type expression that is not convertible to <see langword="String" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.OverflowException" />
        <altmember cref="T:System.InvalidCastException" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-903">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-903">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Val">
      <MemberSignature Language="C#" Value="public static double Val (string InputStr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Val(string InputStr) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Val(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Val (InputStr As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Val(System::String ^ InputStr);" />
      <MemberSignature Language="F#" Value="static member Val : string -&gt; double" Usage="Microsoft.VisualBasic.Conversion.Val InputStr" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Val(string InputStr) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InputStr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="InputStr"><span data-ttu-id="0c1dd-904">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-904">Required.</span></span> <span data-ttu-id="0c1dd-905">Любое допустимое выражение<see langword="String" />, переменная <see langword="Object" /> или значение <see langword="Char" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-905">Any valid <see langword="String" /> expression, <see langword="Object" /> variable, or <see langword="Char" /> value.</span></span> <span data-ttu-id="0c1dd-906">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, значение должно быть преобразуемым в <see langword="String" />. В противном случае возникает ошибка <see cref="T:System.ArgumentException" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-906">If <paramref name="Expression" /> is of type <see langword="Object" />, its value must be convertible to <see langword="String" /> or an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="0c1dd-907">Возвращает порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-907">Returns the numbers contained in a string as a numeric value of appropriate type.</span></span></summary>
        <returns><span data-ttu-id="0c1dd-908">Порядковый номер, который содержится в строке в виде числовых значений соответствующего типа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-908">The numbers contained in a string as a numeric value of appropriate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c1dd-909">Функция `Val` прекращает чтение строки на первом символе, который она не может распознать как часть числа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-909">The `Val` function stops reading the string at the first character it cannot recognize as part of a number.</span></span> <span data-ttu-id="0c1dd-910">Символы и символы, часто рассматриваемые как части числовых значений, такие как знаки доллара и запятые, не распознаются.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-910">Symbols and characters that are often considered parts of numeric values, such as dollar signs and commas, are not recognized.</span></span> <span data-ttu-id="0c1dd-911">Однако функция распознает префиксы системы счисления `&O` (для восьмеричного) и `&H` (для шестнадцатеричного).</span><span class="sxs-lookup"><span data-stu-id="0c1dd-911">However, the function recognizes the radix prefixes `&O` (for octal) and `&H` (for hexadecimal).</span></span> <span data-ttu-id="0c1dd-912">Пробелы, знаки табуляции и символы перевода строки удаляются из аргумента.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-912">Blanks, tabs, and linefeed characters are removed from the argument.</span></span>  
  
 <span data-ttu-id="0c1dd-913">Следующий вызов возвращает значение 1234123.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-913">The following call returns the value 1234123.</span></span>  
  
```vb  
Val(" 1234 123th Street N.E.")   
```  
  
<span data-ttu-id="0c1dd-914">Следующий вызов возвращает десятичное значение-1.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-914">The following call returns the decimal value -1.</span></span>  
  
```vb  
Val("&HFFFF")   
```  
  
> [!NOTE]
>  <span data-ttu-id="0c1dd-915">Функция `Val` распознает только точку (`.`) в качестве допустимого десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-915">The `Val` function recognizes only the period (`.`) as a valid decimal separator.</span></span> <span data-ttu-id="0c1dd-916">Если используются другие десятичные разделители, как в международных приложениях, используйте `CDbl` или `CInt` вместо преобразования строки в число.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-916">When other decimal separators are used, as in international applications, use `CDbl` or `CInt` instead to convert a string to a number.</span></span> <span data-ttu-id="0c1dd-917">Чтобы преобразовать строковое представление числа в определенном языке и региональных параметрах в числовое значение, используйте метод `Parse(String, IFormatProvider)` числового типа.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-917">To convert the string representation of a number in a particular culture to a numeric value, use the numeric type's `Parse(String, IFormatProvider)` method.</span></span> <span data-ttu-id="0c1dd-918">Например, используйте <xref:System.Double.Parse%2A?displayProperty=nameWithType> при преобразовании строки в `Double`.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-918">For example, use <xref:System.Double.Parse%2A?displayProperty=nameWithType> when converting a string to a `Double`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c1dd-919">В ответ на определенные нестандартные числовые форматы может возникнуть исключение <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-919">An <xref:System.InvalidCastException> exception might be raised in response to certain uncommon number formats.</span></span> <span data-ttu-id="0c1dd-920">Например, следующий код вызывает это исключение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-920">For example, the following code raises this exception.</span></span>  
>   
>  `' These examples cause run-time errors.`  
>   
>  `'Console.WriteLine(Val("1.34%"))`  
>   
>  `'Console.WriteLine(Val("1.34&"))`  
>   
>  <span data-ttu-id="0c1dd-921">Конфликт между числом, отформатированным в виде `Double`, и символами типа `Integer` и `Long` будет перехвачен компилятором, если конфликт не содержался в строках.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-921">The conflict between the number formatted as a `Double` and the `Integer` and `Long` type characters would be caught by the compiler if the conflict were not contained in strings.</span></span>  
>   
>  `' These examples cause compiler errors.`  
>   
>  `'Dim m = 1.34%`  
>   
>  `'Dim n = 1.34&`  
  
   
  
## Examples  
 <span data-ttu-id="0c1dd-922">В следующем примере функция `Val` используется для возврата чисел, содержащихся в каждой строке.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-922">The following example uses the `Val` function to return the numbers contained in each string.</span></span> <span data-ttu-id="0c1dd-923">`Val` прекращает преобразование на первом символе, который не может быть интерпретирован как цифра, числовой модификатор, числовой знак препинания или пробел.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-923">`Val` stops converting at the first character that cannot be interpreted as a numeric digit, numeric modifier, numeric punctuation, or white space.</span></span>  
  
 [!code-vb[VbVbalrFunctions#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="0c1dd-924"><paramref name="InputStr" /> — слишком большое значение.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-924"><paramref name="InputStr" /> is too large.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0c1dd-925"><see langword="Object" /> — это выражение типа <see langword="String" />, которое нельзя преобразовать в <paramref name="Expression" />.</span><span class="sxs-lookup"><span data-stu-id="0c1dd-925"><paramref name="Expression" /> is an <see langword="Object" /> type expression that is not convertible to <see langword="String" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.OverflowException" />
        <altmember cref="T:System.InvalidCastException" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="0c1dd-926">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="0c1dd-926">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
