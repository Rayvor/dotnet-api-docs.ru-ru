<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67203d2e3262083e36b5d156d1c448b2571fa2ce" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65156373" /></Metadata><TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <TypeSignature Language="F#" Value="type ErrObject = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6a3d4-101"><see langword="ErrObject" /> Модуль содержит свойства и процедуры, используемые для идентификации и обработки ошибок времени выполнения, с помощью <see langword="Err" /> объекта.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3d4-102">`ErrObject` Модуль поддерживает `Err` объекта.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="6a3d4-103">Дополнительные сведения см. в разделе <xref:Microsoft.VisualBasic.Information.Err%2A>.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3d4-104">В этом примере используется свойства `Err` объекта при конструировании в диалоговом окне сообщения об ошибке.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="6a3d4-105">Обратите внимание на то, что происходит при использовании `Clear` метод первого: При создании ошибки Visual Basic с `Raise` метод, Visual Basic по умолчанию значения становятся свойства `Err` объекта.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="6a3d4-106">Оператор On Error (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="6a3d4-106">On Error Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="6a3d4-107">Оператор Try... Catch... Finally (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="6a3d4-107">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="6a3d4-108">Ключевые слова (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="6a3d4-108">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="6a3d4-109">Члены библиотеки времени выполнения Visual Basic</span><span class="sxs-lookup"><span data-stu-id="6a3d4-109">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errObject.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6a3d4-110">Очищает все значения свойств объекта <see langword="Err" /> объекта.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-110">Clears all property settings of the <see langword="Err" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3d4-111">Используйте `Clear` для явной очистки `Err` объекта после обработки ошибки, например, при использовании отложенной обработки ошибок с помощью `On Error Resume Next`.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-111">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="6a3d4-112">`Clear` Метод вызывается автоматически при выполнении любого из следующих инструкций:</span><span class="sxs-lookup"><span data-stu-id="6a3d4-112">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="6a3d4-113">Любой тип `Resume` инструкции</span><span class="sxs-lookup"><span data-stu-id="6a3d4-113">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="6a3d4-114">`Exit Sub`, `Exit Function`или `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="6a3d4-114">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="6a3d4-115">Любой `On Error` инструкции</span><span class="sxs-lookup"><span data-stu-id="6a3d4-115">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="6a3d4-116">Любой `Try...Catch...Finally` инструкции</span><span class="sxs-lookup"><span data-stu-id="6a3d4-116">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6a3d4-117">`On Error Resume Next` Конструкция может оказаться предпочтительнее `On Error GoTo` при обработке ошибок, возникших во время доступа к другим объектам.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-117">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="6a3d4-118">Проверка `Err` после каждого взаимодействия с объектом устраняет неоднозначность, о том, какие обращения к объекту с помощью кода: Вы можете быть уверены, какой объект поместил код ошибки в `Err.Number`, а также какой объект вызвавшего ошибку (объект, указанный в `Err.Source`).</span><span class="sxs-lookup"><span data-stu-id="6a3d4-118">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3d4-119">В этом примере используется `Err` объекта `Clear` метод, чтобы сбросить числовые свойства `Err` объекта и строковых свойств в строки нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-119">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="6a3d4-120">Без вызова `Clear`, второй вызов `MsgBox` будет отображаться такое сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-120">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="6a3d4-121">Оператор On Error (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="6a3d4-121">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6a3d4-122">Возвращает или задает <see langword="String" /> выражение, содержащее строку описания, связанную с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-122">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="6a3d4-123">Чтение и запись.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-123">Read/write.</span></span></summary>
        <value><span data-ttu-id="6a3d4-124">Возвращает или задает <see langword="String" /> выражение, содержащее строку описания, связанную с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-124">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="6a3d4-125">Чтение и запись.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-125">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3d4-126">`Description` Значение свойства содержит краткое описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-126">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="6a3d4-127">Это свойство используется для оповещения пользователя об ошибке, который нельзя или нежелательно для обработки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-127">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="6a3d4-128">При создании пользовательской ошибки, присвойте краткое описание ошибки для `Description` свойство.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-128">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="6a3d4-129">Если `Description` свойство не заполнено и значение <xref:Microsoft.VisualBasic.ErrObject.Number%2A> свойства соответствует ошибке времени выполнения Visual Basic, то строка, возвращаемая <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> функция задается в `Description` свойства, если происходит ошибка.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-129">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3d4-130">В этом примере назначает определенное пользователем сообщение, чтобы `Description` свойство `Err` объекта.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-130">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Erl : int" Usage="Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6a3d4-131">Возвращает целое число, указывающее номер строки последнего выполненного оператора.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-131">Gets an integer indicating the line number of the last executed statement.</span></span></summary>
        <value><span data-ttu-id="6a3d4-132">Номер строки последнего выполненного оператора.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-132">The line number of the last executed statement.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3d4-133">Если Visual Basic не обнаруживает номера строки, она возвращает 0.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-133">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3d4-134">В этом примере используется `Erl` свойство, указывающее номер строки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-134">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberSignature Language="F#" Value="member this.GetException : unit -&gt; Exception" Usage="errObject.GetException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6a3d4-135">Возвращает исключение, представляющее возникшую ошибку.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-135">Returns the exception representing the error that occurred.</span></span></summary>
        <returns><span data-ttu-id="6a3d4-136">Исключение, представляющее возникшую ошибку.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-136">The exception representing the error that occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3d4-137">`GetException` Функция доступна только из `Err` класса объектов.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-137">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="6a3d4-138">Она работает с `Exception` свойство `Err` объект для отображения возникшей ошибки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-138">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3d4-139">Следующий код отображает сообщение, связанное с исключением в `Err` объекта:</span><span class="sxs-lookup"><span data-stu-id="6a3d4-139">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HelpContext : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6a3d4-140">Возвращает или задает <see langword="Integer" /> содержащее идентификатор контекста для раздела в файле справки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-140">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="6a3d4-141">Чтение и запись.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-141">Read/write.</span></span></summary>
        <value><span data-ttu-id="6a3d4-142">Возвращает или задает <see langword="Integer" /> содержащее идентификатор контекста для раздела в файле справки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-142">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="6a3d4-143">Чтение и запись.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-143">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3d4-144">`HelpContext` Свойство используется для отображения контекстной справки для приложения.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-144">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="6a3d4-145">Если указан файл справки в `HelpFile`, `HelpContext` свойство используется для автоматического отображения определенного файла справки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-145">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="6a3d4-146">Если оба `HelpFile` и `HelpContext` свойства пусты, значение <xref:Microsoft.VisualBasic.ErrObject.Number%2A> свойство проверяется.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-146">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="6a3d4-147">Если значение `Number` свойство соответствует значению ошибки времени выполнения Visual Basic, то используется идентификатор контекста справки Visual Basic для ошибки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-147">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="6a3d4-148">Если значение `Number` свойства не соответствует ошибки Visual Basic, появится экран содержимое файла справки Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-148">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a3d4-149">В приложении для обработки типичных ошибок следует написать процедуры.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-149">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="6a3d4-150">При программировании с использованием объекта, можно использовать файл справки объекта для повышения качества обработки ошибок, или для отображения значимые сообщения, если ошибки не может быть восстановлен.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-150">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3d4-151">В этом примере используется `HelpContext` свойство `Err` объекта для отображения раздела справки Visual Basic для `Overflow` ошибки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-151">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpFile : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6a3d4-152">Возвращает или задает <see langword="String" /> выражение, содержащее полный путь к файлу справки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-152">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="6a3d4-153">Чтение и запись.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-153">Read/write.</span></span></summary>
        <value><span data-ttu-id="6a3d4-154">Возвращает или задает <see langword="String" /> выражение, содержащее полный путь к файлу справки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-154">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="6a3d4-155">Чтение и запись.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-155">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3d4-156">Если файл справки, задана `HelpFile` свойство, он вызывается автоматически при нажатии клавиши справки (или клавишу F1) в диалоговом окне сообщения об ошибке.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-156">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="6a3d4-157">Если `HelpContext` свойство содержит допустимый контекст идентификатора для указанного файла, этот раздел отображается автоматически.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-157">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="6a3d4-158">Если нет `HelpFile` указано, отображается в файле справки Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-158">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a3d4-159">В приложении для обработки типичных ошибок следует написать процедуры.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-159">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="6a3d4-160">При программировании с использованием объекта, можно использовать файл справки объекта для повышения качества обработки ошибок, или для отображения значимые сообщения, если ошибки не может быть восстановлен.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-160">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3d4-161">В этом примере используется `HelpFile` свойство `Err` объект для запуска справочной системы.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-161">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="6a3d4-162">По умолчанию `HelpFile` свойство содержит имя файла справки Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-162">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastDllError : int" Usage="Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6a3d4-163">Возвращает код системной ошибки, полученной при вызове библиотеки DLL.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-163">Gets a system error code produced by a call to a dynamic-link library (DLL).</span></span></summary>
        <value><span data-ttu-id="6a3d4-164">Код системной ошибки, полученной при вызове библиотеки динамической компоновки (DLL).</span><span class="sxs-lookup"><span data-stu-id="6a3d4-164">A system error code produced by a call to a dynamic-link library (DLL).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3d4-165"><xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Свойство применимо только к библиотеке DLL, вызовы из кода Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-165">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="6a3d4-166">При такой вызов, вызываемая функция обычно возвращает код, указывающий успешное или неуспешное завершение и <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> указано свойство.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-166">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="6a3d4-167">Обратитесь к документации для функций DLL определить возвращаемые значения, указывающие на успех или сбой.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-167">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="6a3d4-168">Каждый раз, когда возвращается код ошибки, приложение Visual Basic немедленно проверьте <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-168">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="6a3d4-169">Исключение не вызывается при <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> свойству.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-169">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a3d4-170"><xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Свойство защищен <xref:System.Security.Permissions.SecurityAction.LinkDemand>, который помогает препятствовать его доступу к от ненадежного кода.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-170">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="6a3d4-171">Тем не менее <xref:System.Security.Permissions.SecurityAction.LinkDemand> требует только непосредственного вызывающего объекта, чтобы <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> разрешение.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-171">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="6a3d4-172">Если ваш код может вызываться из частично доверенного кода, предоставляя значение <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> без проверки представляет угрозу безопасности.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-172">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="6a3d4-173">О важных ограничениях по использованию <xref:System.Security.Permissions.SecurityAction.LinkDemand> член, см. в разделе [Demand и. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span><span class="sxs-lookup"><span data-stu-id="6a3d4-173">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="6a3d4-174">Дополнительные сведения о разрешениях см. в разделе <xref:System.Security.Permissions.SecurityPermission> и [разрешений доступа к коду](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="6a3d4-174">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="6a3d4-175">Примечание для смарт-устройств, это свойство всегда возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-175">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3d4-176">В следующем примере показано, как можно использовать `LastDllError` свойства после вызова функции в Windows API.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-176">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="6a3d4-177">`PrintWindowCoordinates` Процедура принимает дескриптор окна и вызовы `GetWindowRect` функции.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-177">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="6a3d4-178">`GetWindowRect` заполняет структуру данных RECT длины сторон прямоугольника, образующих окна.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-178">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="6a3d4-179">Если передается недопустимый дескриптор, возникает ошибка, и номер ошибки, который доступен через `LastDllError` свойство.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-179">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Number : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6a3d4-180">Возвращает или задает численное значение, определяющее ошибку.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-180">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="6a3d4-181">Чтение и запись.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-181">Read/write.</span></span></summary>
        <value><span data-ttu-id="6a3d4-182">Возвращает или задает численное значение, определяющее ошибку.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-182">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="6a3d4-183">Чтение и запись.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-183">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3d4-184">Все `Raise` аргументы, кроме `Number` являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-184">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="6a3d4-185">Если опустить необязательные аргументы и параметры свойства `Err` объекта содержит значения, которые не были очищены, эти значения являются значениями ошибки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-185">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="6a3d4-186">Так как `Err` объект предоставляется больше данных, чем при генерации ошибок с `Error` инструкции `Raise` можно применять для создания ошибок при написании модулей класса.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-186">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="6a3d4-187">Например, с помощью `Raise` метод, можно указать источник, создавший ошибку в `Source` свойство, интерактивной справки для ошибки можно ссылаться и т. д.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-187">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="6a3d4-188">При возврате ошибок, определенные пользователем объектом, задать `Err.Number` путем сложения, выбранный в код ошибки для `VbObjectError` константы.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-188">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="6a3d4-189">Например вы используйте следующий код для возврата количества 1051 с кодом ошибки:</span><span class="sxs-lookup"><span data-stu-id="6a3d4-189">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="6a3d4-190">В этом примере демонстрируется типичное использование `Number` свойства в процедуре обработки ошибок.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-190">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="6a3d4-191">В этом примере используется `Err` объекта `Raise` метод для создания исходной ошибки внутри функции, написанной на Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-191">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="6a3d4-192">Вызывающая функция можно перехватить ошибку и сообщите о ней пользователю.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-192">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="6a3d4-193">Обратите внимание, что процедура `CallingProcedure` противопоставляет тип данных, которые могут быть производными от `Err` объекта со сведениями, можно получить из `Exception` объекта.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-193">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6a3d4-194"><paramref name="Number" /> больше 65535.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-194"><paramref name="Number" /> is greater than 65535.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Raise : int * obj * obj * obj * obj -&gt; unit" Usage="errObject.Raise (Number, Source, Description, HelpFile, HelpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="6a3d4-195">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-195">Required.</span></span> <span data-ttu-id="6a3d4-196"><see langword="Long" /> целое число, обозначающее характер ошибки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-196"><see langword="Long" /> integer that identifies the nature of the error.</span></span> <span data-ttu-id="6a3d4-197">Ошибки Visual Basic обозначаются числами в диапазоне 0-65535; диапазон 0-512 зарезервирован для системных ошибок; диапазон 513-65535 отводится для ошибок, определяемых пользователем.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-197">Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.</span></span> <span data-ttu-id="6a3d4-198">При задании <see langword="Number" /> свойство собственный код ошибки в модуле класса, добавьте номер пользовательского кода ошибки для <see langword="vbObjectError" /> константы.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-198">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span></span> <span data-ttu-id="6a3d4-199">Например, чтобы создать номер ошибки 513, нужно присвоить свойству <see langword="Number" /> значение <c>vbObjectError + 513</c>.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-199">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span></span></param>
        <param name="Source"><span data-ttu-id="6a3d4-200">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-200">Optional.</span></span> <span data-ttu-id="6a3d4-201"><see langword="String" /> выражение, содержащее имя объекта или приложения, вызвавшего ошибку.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-201"><see langword="String" /> expression naming the object or application that generated the error.</span></span> <span data-ttu-id="6a3d4-202">При задании этого свойства для объекта используется формат <c>проект</c>.<c>класс</c>.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-202">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span></span> <span data-ttu-id="6a3d4-203">Если <paramref name="Source" /> не указан, используется идентификатор процесса текущего проекта Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-203">If <paramref name="Source" /> is not specified, the process ID of the current Visual Basic project is used.</span></span></param>
        <param name="Description"><span data-ttu-id="6a3d4-204">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-204">Optional.</span></span> <span data-ttu-id="6a3d4-205"><see langword="String" /> выражение, описывающее ошибку.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-205"><see langword="String" /> expression describing the error.</span></span> <span data-ttu-id="6a3d4-206">Если не указан, значение в <see langword="Number" /> свойство проверяется.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-206">If unspecified, the value in the <see langword="Number" /> property is examined.</span></span> <span data-ttu-id="6a3d4-207">Если он может быть сопоставлен ошибки времени выполнения Visual Basic, строка кода, которые возвращаются по <see langword="Error" /> функция используется в качестве <see langword="Description" /> свойство.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-207">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span></span> <span data-ttu-id="6a3d4-208">Если отсутствуют ошибки Visual Basic, соответствующее <see langword="Number" /> используется свойство, сообщение «определяемые приложением или объектом ошибка».</span><span class="sxs-lookup"><span data-stu-id="6a3d4-208">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="6a3d4-209">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-209">Optional.</span></span> <span data-ttu-id="6a3d4-210">Полный путь к файлу справки, в котором можно найти справку по этой ошибке.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-210">The fully qualified path to the Help file in which help on this error can be found.</span></span> <span data-ttu-id="6a3d4-211">Если не указан, Visual Basic использует полное имя диска, путь и имя файла справки Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-211">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span></span></param>
        <param name="HelpContext"><span data-ttu-id="6a3d4-212">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-212">Optional.</span></span> <span data-ttu-id="6a3d4-213">Идентификатор контекста, определяющий раздел в <paramref name="HelpFile" /> , предоставляющий справки для ошибки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-213">The context ID identifying a topic within <paramref name="HelpFile" /> that provides help for the error.</span></span> <span data-ttu-id="6a3d4-214">Если этот параметр опущен, идентификатор контекста файла справки Visual Basic для ошибки, соответствующий <see langword="Number" /> свойство используется, если он существует.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-214">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span></span></param>
        <summary><span data-ttu-id="6a3d4-215">Вызывает ошибку времени выполнения; может использоваться вместо <see langword="Error" /> инструкции.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-215">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3d4-216">Все `Raise` аргументы, кроме `Number` являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-216">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="6a3d4-217">Если опустить необязательные аргументы и параметры свойства `Err` объекта содержит значения, которые не были очищены, эти значения являются значениями ошибки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-217">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="6a3d4-218">Так как `Err` объект предоставляется больше данных, чем при генерации ошибок с `Error` инструкции `Raise` можно применять для создания ошибок при написании модулей класса.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-218">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="6a3d4-219">Например, с помощью `Raise` метод, можно указать источник, создавший ошибку в `Source` свойство, интерактивной справки для ошибки можно ссылаться и т. д.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-219">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3d4-220">В этом примере используется `Err` объекта `Raise` метод для создания ошибки внутри функции, написанной на Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-220">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="6a3d4-221">Вызывающей функции можно перехватить ошибку и сообщит его пользователю в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-221">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="6a3d4-222">Оператор Error</span><span class="sxs-lookup"><span data-stu-id="6a3d4-222">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="6a3d4-223">Оператор On Error (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="6a3d4-223">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6a3d4-224">Возвращает или задает <see langword="String" /> выражение, указывающее имя объекта или приложения, вызвавшего ошибку.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-224">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="6a3d4-225">Чтение и запись.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-225">Read/write.</span></span></summary>
        <value><span data-ttu-id="6a3d4-226">Возвращает или задает <see langword="String" /> выражение, указывающее имя объекта или приложения, вызвавшего ошибку.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-226">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="6a3d4-227">Чтение и запись.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-227">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3d4-228">`Source` Указывает свойство `String` выражение, представляющее объект, создавший ошибку; выражение обычно имеет имя класса объекта или идентификатор процесса.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-228">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="6a3d4-229">Используйте `Source` свойство для предоставления сведений, если код не может обработать ошибку, сформированную в объекте, к которому осуществляется доступ.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-229">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="6a3d4-230">Например, если вы получить доступ к Microsoft Excel и создает `Division by zero` задает ошибки, Microsoft Excel `Err.Number` для его код ошибки для этой ошибки и наборов `Source` для «Excel.Application».</span><span class="sxs-lookup"><span data-stu-id="6a3d4-230">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="6a3d4-231">Когда приложение создает ошибку из кода, `Source` — это программный идентификатор вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-231">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="6a3d4-232">В классе `Source` должен содержать имя в форме *проекта*. *Класс*.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-232">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="6a3d4-233">При возникновении непредвиденной ошибки в коде, `Source` свойство заполняется автоматически.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-233">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="6a3d4-234">Для ошибок в модуле `Source` содержит имя проекта.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-234">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3d4-235">В этом примере демонстрируется использование `Source` свойство в типичной процедуре обработки ошибок.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-235">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="6a3d4-236">При возникновении ошибки из `Class1`, строка `"Class1"` назначается `Source` свойство `Err` объекта.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-236">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="6a3d4-237">Эта строка отображается в сообщении, указывающем источник и номер ошибки.</span><span class="sxs-lookup"><span data-stu-id="6a3d4-237">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="6a3d4-238">Оператор On Error (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="6a3d4-238">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>