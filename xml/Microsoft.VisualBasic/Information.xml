<Type Name="Information" FullName="Microsoft.VisualBasic.Information">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ae76229b66a7a71d521a64a406df63f7e7cf230" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70416610" /></Metadata><TypeSignature Language="C#" Value="public sealed class Information" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Information extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Information" />
  <TypeSignature Language="VB.NET" Value="Public Module Information" />
  <TypeSignature Language="C++ CLI" Value="public ref class Information sealed" />
  <TypeSignature Language="F#" Value="type Information = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="250ae-101">В модуле <see langword="Information" /> содержатся процедуры, используемые для возврата, тестирования и проверки информации.</span><span class="sxs-lookup"><span data-stu-id="250ae-101">The <see langword="Information" /> module contains the procedures used to return, test for, or verify information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-102">Этот модуль поддерживает ключевые слова языка Visual Basic и члены библиотеки времени выполнения, предоставляющие сведения об ошибках, проверку данных, определение границ массива и получение сведений о типах данных и цветах.</span><span class="sxs-lookup"><span data-stu-id="250ae-102">This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-103">В следующем примере `VbTypeName` функция используется для возврата имен типов данных для нескольких переменных.</span><span class="sxs-lookup"><span data-stu-id="250ae-103">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
```vb  
Dim sysDateName As String = "System.DateTime"  
Dim sysShortName As String = "Int16"  
Dim sysBadName As String = "Nonsense"  
Dim testVbName As String  
testVbName = VbTypeName(sysDateName)   
' Returns "Date".  
testVbName = VbTypeName(sysShortName)   
' Returns "Short".  
testVbName = VbTypeName(sysBadName)   
' Returns Nothing.  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/information-and-interaction-summary.md"><span data-ttu-id="250ae-104">Сводка по сведениям и взаимодействию</span><span class="sxs-lookup"><span data-stu-id="250ae-104">Information and Interaction Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/data-types-summary.md"><span data-ttu-id="250ae-105">Data Types Summary</span><span class="sxs-lookup"><span data-stu-id="250ae-105">Data Types Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/declarations-and-constants-summary.md"><span data-ttu-id="250ae-106">Сводка по объявлениям и константам</span><span class="sxs-lookup"><span data-stu-id="250ae-106">Declarations and Constants Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="250ae-107">Ключевые слова (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-107">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="250ae-108">Visual Basic элементов библиотеки времени выполнения</span><span class="sxs-lookup"><span data-stu-id="250ae-108">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public static int Erl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Erl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Erl" />
      <MemberSignature Language="VB.NET" Value="Public Function Erl () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Erl();" />
      <MemberSignature Language="F#" Value="static member Erl : unit -&gt; int" Usage="Microsoft.VisualBasic.Information.Erl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="250ae-109">Возвращает целое число, указывающее номер строки последнего выполненного оператора.</span><span class="sxs-lookup"><span data-stu-id="250ae-109">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="250ae-110">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="250ae-110">Read-only.</span></span></summary>
        <returns><span data-ttu-id="250ae-111">Возвращает целое число, указывающее номер строки последнего выполненного оператора.</span><span class="sxs-lookup"><span data-stu-id="250ae-111">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="250ae-112">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="250ae-112">Read-only.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-113">Если Visual Basic не встречает номера строк, возвращается 0.</span><span class="sxs-lookup"><span data-stu-id="250ae-113">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-114">В этом примере `Erl` свойство используется для указания номера строки.</span><span class="sxs-lookup"><span data-stu-id="250ae-114">This example uses the `Erl` property to indicate the line number.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Err">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.ErrObject Err ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.ErrObject Err() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Err" />
      <MemberSignature Language="VB.NET" Value="Public Function Err () As ErrObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::ErrObject ^ Err();" />
      <MemberSignature Language="F#" Value="static member Err : unit -&gt; Microsoft.VisualBasic.ErrObject" Usage="Microsoft.VisualBasic.Information.Err " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ErrObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="250ae-115">Содержит сведения об ошибках во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="250ae-115">Contains information about run-time errors.</span></span></summary>
        <returns><span data-ttu-id="250ae-116">Содержит сведения об ошибках во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="250ae-116">Contains information about run-time errors.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-117">Свойства `Err` объекта задаются генератором ошибок, Visual Basic, объектом или программистом.</span><span class="sxs-lookup"><span data-stu-id="250ae-117">The properties of the `Err` object are set by the generator of an error - Visual Basic, an object, or the programmer.</span></span>  
  
 <span data-ttu-id="250ae-118">При возникновении ошибки во время выполнения свойства `Err` объекта заполняются сведениями, которые однозначно идентифицируют ошибку и могут быть использованы для ее устранения.</span><span class="sxs-lookup"><span data-stu-id="250ae-118">When a run-time error occurs, the properties of the `Err` object are filled with information that uniquely identifies the error and that you can use to handle the error.</span></span> <span data-ttu-id="250ae-119">Чтобы создать ошибку времени выполнения в коде, используйте `Raise` метод.</span><span class="sxs-lookup"><span data-stu-id="250ae-119">To generate a run-time error in your code, use the `Raise` method.</span></span>  
  
 <span data-ttu-id="250ae-120">`Resume Next` `Exit Property` `Exit Function` `Exit Sub`Свойства объекта сбрасываются до нуля или строки нулевой длины ("") после оператора,, или в подпрограммы обработки ошибок. `Err`</span><span class="sxs-lookup"><span data-stu-id="250ae-120">The `Err` object's properties are reset to zero or zero-length strings ("") after an `Exit Sub`, `Exit Function`, `Exit Property`, or `Resume Next` statement within an error-handling routine.</span></span> <span data-ttu-id="250ae-121">Использование любой формы `Resume` оператора за пределами подпрограммы обработки ошибок не приведет к `Err` сбросу свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="250ae-121">Using any form of the `Resume` statement outside of an error-handling routine will not reset the `Err` object's properties.</span></span> <span data-ttu-id="250ae-122">Для явного сброса `Err`можно `Clear` использовать метод.</span><span class="sxs-lookup"><span data-stu-id="250ae-122">You can use the `Clear` method to explicitly reset `Err`.</span></span>  
  
 <span data-ttu-id="250ae-123">Используйте метод вместо `Error` инструкции для создания ошибок времени выполнения для системных ошибок и модулей классов. `Raise`</span><span class="sxs-lookup"><span data-stu-id="250ae-123">Use the `Raise` method rather than the `Error` statement to generate run-time errors for system errors and class modules.</span></span> <span data-ttu-id="250ae-124">Решение о том, следует ли использовать `Raise` метод в другом коде, зависит от полноты информации, которую вы хотите вернуть.</span><span class="sxs-lookup"><span data-stu-id="250ae-124">Your decision about whether to use the `Raise` method in other code depends on the richness of the information you want to return.</span></span>  
  
 <span data-ttu-id="250ae-125">`Err` Объект является внутренним объектом с глобальной областью видимости.</span><span class="sxs-lookup"><span data-stu-id="250ae-125">The `Err` object is an intrinsic object with global scope.</span></span> <span data-ttu-id="250ae-126">Поэтому не нужно создавать его экземпляр в коде.</span><span class="sxs-lookup"><span data-stu-id="250ae-126">Therefore, you do not need to create an instance of it in your code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-127">В этом примере используются свойства `Err` объекта при формировании диалогового окна сообщения об ошибке.</span><span class="sxs-lookup"><span data-stu-id="250ae-127">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="250ae-128">Обратите внимание, что если `Clear` сначала используется метод, то при возникновении ошибки Visual Basic `Raise` с методом Visual Basic значения по умолчанию `Err` становятся свойствами объекта.</span><span class="sxs-lookup"><span data-stu-id="250ae-128">Notice that if you use the `Clear` method first, when you generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="250ae-129">Оператор Error</span><span class="sxs-lookup"><span data-stu-id="250ae-129">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="250ae-130">Оператор On Error (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-130">On Error Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/exit-statement.md"><span data-ttu-id="250ae-131">Оператор Exit (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-131">Exit Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/resume-statement.md"><span data-ttu-id="250ae-132">Оператор Resume</span><span class="sxs-lookup"><span data-stu-id="250ae-132">Resume Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/error-messages/index.md"><span data-ttu-id="250ae-133">Сообщения об ошибке (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-133">Error Messages (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="250ae-134">Оператор Try... Catch... Finally (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-134">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public static bool IsArray (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsArray(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsArray (VarName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsArray(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member IsArray : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsArray VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="250ae-135">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-135">Required.</span></span> <span data-ttu-id="250ae-136">Переменная <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-136"><see langword="Object" /> variable.</span></span></param>
        <summary><span data-ttu-id="250ae-137">Возвращает значение типа <see langword="Boolean" />, показывающее, указывает ли переменная на массив.</span><span class="sxs-lookup"><span data-stu-id="250ae-137">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span></span></summary>
        <returns><span data-ttu-id="250ae-138">Возвращает значение типа <see langword="Boolean" />, показывающее, указывает ли переменная на массив.</span><span class="sxs-lookup"><span data-stu-id="250ae-138">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-139">`IsArray`Возвращает `True` значение, если переменная указывает на массив; в противном случае `False`возвращается значение.</span><span class="sxs-lookup"><span data-stu-id="250ae-139">`IsArray` returns `True` if the variable points to an array; otherwise, it returns `False`.</span></span> <span data-ttu-id="250ae-140">`IsArray`особенно полезен для объектов, которые могут содержать массивы.</span><span class="sxs-lookup"><span data-stu-id="250ae-140">`IsArray` is especially useful with objects that might contain arrays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-141">В этом примере `IsArray` функция используется для проверки того, ссылаются ли несколько переменных на массив.</span><span class="sxs-lookup"><span data-stu-id="250ae-141">This example uses the `IsArray` function to check if several variables refer to an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/arrays/index.md"><span data-ttu-id="250ae-142">Массивы в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="250ae-142">Arrays in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static bool IsDate (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDate(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDate (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDate(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDate : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDate Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="250ae-143">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-143">Required.</span></span> <span data-ttu-id="250ae-144">Выражение <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-144"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="250ae-145">Возвращает значение <see langword="Boolean" />, показывающее, представляет ли выражение допустимое значение <see langword="Date" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-145">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="250ae-146">Возвращает значение <see langword="Boolean" />, показывающее, представляет ли выражение допустимое значение <see langword="Date" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-146">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-147">`IsDate`Возвращает `True` , `Expression` если имеет `False`тип данных или может быть преобразован в него; в противном случае возвращается значение. <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="250ae-147">`IsDate` returns `True` if `Expression` is of the <xref:System.DateTime> data type or can be converted to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="250ae-148">Тип <xref:System.DateTime> данных содержит как значение даты, так и значение времени.</span><span class="sxs-lookup"><span data-stu-id="250ae-148">The <xref:System.DateTime> data type holds both a date value and a time value.</span></span> <span data-ttu-id="250ae-149">`IsDate`Возвращает `True` значение `Expression` , если представляет допустимую дату, допустимое время или допустимую дату и время.</span><span class="sxs-lookup"><span data-stu-id="250ae-149">`IsDate` returns `True` if `Expression` represents a valid date, a valid time, or a valid date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-150">В следующем примере `IsDate` функция используется для определения того, представляют ли несколько переменных <xref:System.DateTime> допустимые значения.</span><span class="sxs-lookup"><span data-stu-id="250ae-150">The following example uses the `IsDate` function to determine if several variables represent valid <xref:System.DateTime> values.</span></span>  
  
 [!code-vb[VbVbalrFunctions#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#35)]  
  
 <span data-ttu-id="250ae-151">В предыдущем примере `IsDate` возвращает `True` для первых четырех вызовов и `False` для последнего вызова.</span><span class="sxs-lookup"><span data-stu-id="250ae-151">In the preceding example, `IsDate` returns `True` for the first four calls and `False` for the last call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDBNull(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNull (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDBNull Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="250ae-152">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-152">Required.</span></span> <span data-ttu-id="250ae-153">Выражение <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-153"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="250ae-154">Возвращает значение <see langword="Boolean" />, показывающее, относится ли выражение к классу <see cref="T:System.DBNull" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-154">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span></span></summary>
        <returns><span data-ttu-id="250ae-155">Возвращает значение <see langword="Boolean" />, показывающее, относится ли выражение к классу <see cref="T:System.DBNull" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-155">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-156">`IsDBNull`Возвращает `True` , <xref:System.DBNull> `Expression` `False`если тип данных вычисляется как тип; в противном случае возвращает. `IsDBNull`</span><span class="sxs-lookup"><span data-stu-id="250ae-156">`IsDBNull` returns `True` if the data type of `Expression` evaluates to the <xref:System.DBNull> type; otherwise, `IsDBNull` returns `False`.</span></span>  
  
 <span data-ttu-id="250ae-157"><xref:System.DBNull?displayProperty=nameWithType> Значение указывает `Object` , что представляет отсутствующие или несуществующие данные.</span><span class="sxs-lookup"><span data-stu-id="250ae-157">The <xref:System.DBNull?displayProperty=nameWithType> value indicates that the `Object` represents missing or nonexistent data.</span></span> <span data-ttu-id="250ae-158">`DBNull`не совпадает с `Nothing`, что означает, что переменная еще не инициализирована.</span><span class="sxs-lookup"><span data-stu-id="250ae-158">`DBNull` is not the same as `Nothing`, which indicates that a variable has not yet been initialized.</span></span> <span data-ttu-id="250ae-159">`DBNull`также не совпадает со строкой нулевой длины (`""`), которую иногда называют пустой строкой.</span><span class="sxs-lookup"><span data-stu-id="250ae-159">`DBNull` is also not the same as a zero-length string (`""`), which is sometimes referred to as a null string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-160">В этом примере `IsDBNull` функция используется для определения, имеет `DBNull`ли переменная значение.</span><span class="sxs-lookup"><span data-stu-id="250ae-160">This example uses the `IsDBNull` function to determine if a variable evaluates to `DBNull`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DBNull" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public static bool IsError (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsError(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsError(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsError : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsError Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="250ae-161">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-161">Required.</span></span> <span data-ttu-id="250ae-162">Выражение <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-162"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="250ae-163">Возвращает значение типа <see langword="Boolean" />, указывающее, является ли выражение типом исключения.</span><span class="sxs-lookup"><span data-stu-id="250ae-163">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span></span></summary>
        <returns><span data-ttu-id="250ae-164">Возвращает значение типа <see langword="Boolean" />, указывающее, является ли выражение типом исключения.</span><span class="sxs-lookup"><span data-stu-id="250ae-164">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-165">`IsError`Возвращает `True` `Object` , если <xref:System>  выражение представляет переменную, производную от класса в пространстве имен. <xref:System.Exception></span><span class="sxs-lookup"><span data-stu-id="250ae-165">`IsError` returns `True` if the expression represents an `Object` variable that derives from the <xref:System.Exception> class in the <xref:System> namespace.</span></span>  
  
 <span data-ttu-id="250ae-166">Исключение, производное от <xref:System.Exception?displayProperty=nameWithType> , может быть перехвачено `Try...Catch...Finally` инструкциями.</span><span class="sxs-lookup"><span data-stu-id="250ae-166">An exception that derives from <xref:System.Exception?displayProperty=nameWithType> can be caught with the `Try...Catch...Finally` statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-167">В следующем примере `IsError` функция используется для проверки того, представляет ли выражение Системное исключение.</span><span class="sxs-lookup"><span data-stu-id="250ae-167">The following example uses the `IsError` function to check if an expression represents a system exception.</span></span>  
  
 [!code-vb[VbVbalrFunctions#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNothing">
      <MemberSignature Language="C#" Value="public static bool IsNothing (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNothing(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNothing (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNothing(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNothing : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNothing Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="250ae-168">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-168">Required.</span></span> <span data-ttu-id="250ae-169">Выражение <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-169"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="250ae-170">Возвращает значение <see langword="Boolean" />, показывающее отсутствует ли для выражения назначенный объект.</span><span class="sxs-lookup"><span data-stu-id="250ae-170">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span></span></summary>
        <returns><span data-ttu-id="250ae-171">Возвращает значение <see langword="Boolean" />, показывающее отсутствует ли для выражения назначенный объект.</span><span class="sxs-lookup"><span data-stu-id="250ae-171">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-172">`IsNothing`Возвращает `True` , если выражение представляет объектную переменную, которой не назначен объект, в противном случае возвращается значение `False`.</span><span class="sxs-lookup"><span data-stu-id="250ae-172">`IsNothing` returns `True` if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="250ae-173">`IsNothing`предназначен для работы со ссылочными типами.</span><span class="sxs-lookup"><span data-stu-id="250ae-173">`IsNothing` is intended to work on reference types.</span></span> <span data-ttu-id="250ae-174">Тип значения не может содержать значение [Nothing](~/docs/visual-basic/language-reference/nothing.md) и при назначении `Nothing` ему возвращается значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="250ae-174">A value type cannot hold a value of [Nothing](~/docs/visual-basic/language-reference/nothing.md) and reverts to its default value if you assign `Nothing` to it.</span></span> <span data-ttu-id="250ae-175">Если указать тип значения в `Expression`, `IsNothing` всегда возвращает `False`.</span><span class="sxs-lookup"><span data-stu-id="250ae-175">If you supply a value type in `Expression`, `IsNothing` always returns `False`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-176">В следующем примере `IsNothing` функция используется для определения, связана ли объектная переменная с каким-либо экземпляром объекта.</span><span class="sxs-lookup"><span data-stu-id="250ae-176">The following example uses the `IsNothing` function to determine if an object variable is associated with any object instance.</span></span>  
  
 [!code-vb[VbVbalrFunctions#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md"><span data-ttu-id="250ae-177">Value Types and Reference Types</span><span class="sxs-lookup"><span data-stu-id="250ae-177">Value Types and Reference Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static bool IsNumeric (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNumeric(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumeric (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumeric(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNumeric : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNumeric Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="250ae-178">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-178">Required.</span></span> <span data-ttu-id="250ae-179">Выражение <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-179"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="250ae-180">Возвращает значение типа <see langword="Boolean" />, указывающее, может ли выражение обрабатываться как число.</span><span class="sxs-lookup"><span data-stu-id="250ae-180">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span></span></summary>
        <returns><span data-ttu-id="250ae-181">Возвращает значение типа <see langword="Boolean" />, указывающее, может ли выражение обрабатываться как число.</span><span class="sxs-lookup"><span data-stu-id="250ae-181">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-182">`IsNumeric`Возвращает `True` , если `Expression` тип данных `Byte` `Decimal` — `Double`  ,, `UInteger`  ,, , `SByte` ,, , `Short` , `Long` `Boolean` `Integer` `Single` , `ULong`или . `UShort`</span><span class="sxs-lookup"><span data-stu-id="250ae-182">`IsNumeric` returns `True` if the data type of `Expression` is `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, or `UShort`.</span></span> <span data-ttu-id="250ae-183">Он также возвращает `True` `Char`, `Expression` если имеет значение `String`, или `Object` , которое может быть успешно преобразовано в число.</span><span class="sxs-lookup"><span data-stu-id="250ae-183">It also returns `True` if `Expression` is a `Char`, `String`, or `Object` that can be successfully converted to a number.</span></span> <span data-ttu-id="250ae-184">`Expression`может содержать нечисловые символы.</span><span class="sxs-lookup"><span data-stu-id="250ae-184">`Expression` can contain non-numeric characters.</span></span> <span data-ttu-id="250ae-185">`IsNumeric`Возвращает `True` значение `Expression` , если — строка, которая содержит допустимое шестнадцатеричное или восьмеричное число.</span><span class="sxs-lookup"><span data-stu-id="250ae-185">`IsNumeric` returns `True` if `Expression` is a string that contains a valid hexadecimal or octal number.</span></span> <span data-ttu-id="250ae-186">`IsNumeric`также возвращает `True` значение `Expression` , если содержит допустимое числовое выражение, которое начинается с символа + или-или содержит запятые.</span><span class="sxs-lookup"><span data-stu-id="250ae-186">`IsNumeric` also returns `True` if `Expression` contains a valid numeric expression that begins with a + or - character or contains commas.</span></span>  
  
 <span data-ttu-id="250ae-187">`IsNumeric`Возвращает `False` , `Expression` если имеет тип `Date`данных.</span><span class="sxs-lookup"><span data-stu-id="250ae-187">`IsNumeric` returns `False` if `Expression` is of data type `Date`.</span></span> <span data-ttu-id="250ae-188">Он возвращает `False` `Char`, `Expression` если является, `String` или `Object`  не может быть успешно преобразован в число.</span><span class="sxs-lookup"><span data-stu-id="250ae-188">It returns `False` if `Expression` is a `Char`, `String`, or `Object` that cannot be successfully converted to a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-189">В следующем примере `IsNumeric` функция используется для определения, может ли содержимое переменной оцениваться как число.</span><span class="sxs-lookup"><span data-stu-id="250ae-189">The following example uses the `IsNumeric` function to determine if the contents of a variable can be evaluated as a number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#39)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public static bool IsReference (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReference(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReference (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReference(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsReference : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsReference Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="250ae-190">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-190">Required.</span></span> <span data-ttu-id="250ae-191">Выражение <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-191"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="250ae-192">Возвращает значение <see langword="Boolean" />, показывающее, относится ли выражение к ссылочному типу.</span><span class="sxs-lookup"><span data-stu-id="250ae-192">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span></span></summary>
        <returns><span data-ttu-id="250ae-193">Возвращает значение <see langword="Boolean" />, показывающее, относится ли выражение к ссылочному типу.</span><span class="sxs-lookup"><span data-stu-id="250ae-193">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-194">`IsReference`Возвращает `True` значение `Expression` , если представляет ссылочный тип, например экземпляр класса, `String` тип или массив любого типа; в противном случае возвращается `False`значение.</span><span class="sxs-lookup"><span data-stu-id="250ae-194">`IsReference` returns `True` if `Expression` represents a reference type, such as a class instance, a `String` type, or an array of any type; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="250ae-195">Ссылочный тип содержит указатель на данные, хранящиеся в любом расположении в памяти.</span><span class="sxs-lookup"><span data-stu-id="250ae-195">A reference type contains a pointer to data stored elsewhere in memory.</span></span> <span data-ttu-id="250ae-196">Тип значения содержит собственные данные.</span><span class="sxs-lookup"><span data-stu-id="250ae-196">A value type contains its own data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-197">В этом примере `IsReference` функция используется для проверки того, ссылаются ли несколько переменных на ссылочные типы.</span><span class="sxs-lookup"><span data-stu-id="250ae-197">This example uses the `IsReference` function to check if several variables refer to reference types.</span></span>  
  
 [!code-vb[VbVbalrFunctions#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#40)]  
  
 <span data-ttu-id="250ae-198">В предыдущем примере первые три `IsReference` возвращаемых вызова возвращают. `True`</span><span class="sxs-lookup"><span data-stu-id="250ae-198">In the preceding example, the first three calls to `IsReference` return `True`.</span></span> <span data-ttu-id="250ae-199">Последний вызов возвращает `False`, поскольку `Integer` является типом значения, а не ссылочным типом.</span><span class="sxs-lookup"><span data-stu-id="250ae-199">The last call returns `False`, because `Integer` is a value type, not a reference type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md"><span data-ttu-id="250ae-200">Value Types and Reference Types</span><span class="sxs-lookup"><span data-stu-id="250ae-200">Value Types and Reference Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public static int LBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 LBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member LBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.LBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array"><span data-ttu-id="250ae-201">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-201">Required.</span></span> <span data-ttu-id="250ae-202">Массив данных любого типа.</span><span class="sxs-lookup"><span data-stu-id="250ae-202">Array of any data type.</span></span> <span data-ttu-id="250ae-203">Массив, в котором осуществляется поиск минимального индекса измерения.</span><span class="sxs-lookup"><span data-stu-id="250ae-203">The array in which you want to find the lowest possible subscript of a dimension.</span></span></param>
        <param name="Rank"><span data-ttu-id="250ae-204">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="250ae-204">Optional.</span></span> <span data-ttu-id="250ae-205"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-205"><see langword="Integer" />.</span></span> <span data-ttu-id="250ae-206">Измерение, для которого возвращается минимальный индекс.</span><span class="sxs-lookup"><span data-stu-id="250ae-206">The dimension for which the lowest possible subscript is to be returned.</span></span> <span data-ttu-id="250ae-207">Используйте 1 для первого измерения, 2 — для второго и т. д.</span><span class="sxs-lookup"><span data-stu-id="250ae-207">Use 1 for the first dimension, 2 for the second, and so on.</span></span> <span data-ttu-id="250ae-208">Если параметр <paramref name="Rank" /> опущен, используется значение 1.</span><span class="sxs-lookup"><span data-stu-id="250ae-208">If <paramref name="Rank" /> is omitted, 1 is assumed.</span></span></param>
        <summary><span data-ttu-id="250ae-209">Возвращает наименьший доступный индекс для указанного измерения массива.</span><span class="sxs-lookup"><span data-stu-id="250ae-209">Returns the lowest available subscript for the indicated dimension of an array.</span></span></summary>
        <returns><span data-ttu-id="250ae-210"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-210"><see langword="Integer" />.</span></span> <span data-ttu-id="250ae-211">Наименьшее значение, которое может содержать нижний индекс для указанного измерения.</span><span class="sxs-lookup"><span data-stu-id="250ae-211">The lowest value the subscript for the specified dimension can contain.</span></span> <span data-ttu-id="250ae-212">После инициализации массива <paramref name="Array" /> метод <see langword="LBound" /> всегда возвращает значение 0, даже если массив не содержит элементов (например, является строкой нулевой длины).</span><span class="sxs-lookup"><span data-stu-id="250ae-212"><see langword="LBound" /> always returns 0 as long as <paramref name="Array" /> has been initialized, even if it has no elements, for example if it is a zero-length string.</span></span> <span data-ttu-id="250ae-213">Если параметр <paramref name="Array" /> равен <see langword="Nothing" />, <see langword="LBound" /> вызывает исключение <see cref="T:System.ArgumentNullException" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-213">If <paramref name="Array" /> is <see langword="Nothing" />, <see langword="LBound" /> throws an <see cref="T:System.ArgumentNullException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-214">Поскольку значения индексов массива начинаются с 0, минимальный доступный индекс для любой размерности всегда равен 0.</span><span class="sxs-lookup"><span data-stu-id="250ae-214">Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</span></span>  
  
 <span data-ttu-id="250ae-215">Для массива со следующими измерениями возвращает значения `LBound` , приведенные в следующей таблице:</span><span class="sxs-lookup"><span data-stu-id="250ae-215">For an array with the following dimensions, `LBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="250ae-216">Вызов функции LBound</span><span class="sxs-lookup"><span data-stu-id="250ae-216">Call to LBound</span></span>|<span data-ttu-id="250ae-217">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="250ae-217">Return value</span></span>|  
|--------------------|------------------|  
|`LBound(a, 1)`|<span data-ttu-id="250ae-218">0</span><span class="sxs-lookup"><span data-stu-id="250ae-218">0</span></span>|  
|`LBound(a, 2)`|<span data-ttu-id="250ae-219">0</span><span class="sxs-lookup"><span data-stu-id="250ae-219">0</span></span>|  
|`LBound(a, 3)`|<span data-ttu-id="250ae-220">0</span><span class="sxs-lookup"><span data-stu-id="250ae-220">0</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="250ae-221">В следующем примере `LBound` функция используется для определения наименьшего доступного индекса для указанного измерения массива.</span><span class="sxs-lookup"><span data-stu-id="250ae-221">The following example uses the `LBound` function to determine the lowest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="250ae-222">Свойство <paramref name="Array" /> имеет значение <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-222"><paramref name="Array" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="250ae-223">Параметр <paramref name="Rank" /> меньше 1 или <paramref name="Rank" /> превышает ранг <paramref name="Array" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-223"><paramref name="Rank" /> less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md"><span data-ttu-id="250ae-224">Оператор Dim (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-224">Dim Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/redim-statement.md"><span data-ttu-id="250ae-225">Оператор ReDim (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-225">ReDim Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="QBColor">
      <MemberSignature Language="C#" Value="public static int QBColor (int Color);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 QBColor(int32 Color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function QBColor (Color As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QBColor(int Color);" />
      <MemberSignature Language="F#" Value="static member QBColor : int -&gt; int" Usage="Microsoft.VisualBasic.Information.QBColor Color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Color" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Color"><span data-ttu-id="250ae-226">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-226">Required.</span></span> <span data-ttu-id="250ae-227">Целое число от 0 до 15.</span><span class="sxs-lookup"><span data-stu-id="250ae-227">A whole number in the range 0-15.</span></span></param>
        <summary><span data-ttu-id="250ae-228">Возвращает значение типа <see langword="Integer" />, представляющее RGB-код цвета, соответствующего указанному номеру цвета.</span><span class="sxs-lookup"><span data-stu-id="250ae-228">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span></span></summary>
        <returns><span data-ttu-id="250ae-229">Возвращает значение типа <see langword="Integer" />, представляющее RGB-код цвета, соответствующего указанному номеру цвета.</span><span class="sxs-lookup"><span data-stu-id="250ae-229">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-230">Начиная с наименее значимого байта, возвращаемое значение задает красный, зеленый и синий значения, используемые для задания соответствующего цвета в системе RGB, используемой языком Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="250ae-230">Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</span></span>  
  
 <span data-ttu-id="250ae-231">`Color` Аргумент имеет эти параметры.</span><span class="sxs-lookup"><span data-stu-id="250ae-231">The `Color` argument has these settings.</span></span>  
  
|<span data-ttu-id="250ae-232">Число</span><span class="sxs-lookup"><span data-stu-id="250ae-232">Number</span></span>|<span data-ttu-id="250ae-233">Цвет</span><span class="sxs-lookup"><span data-stu-id="250ae-233">Color</span></span>|<span data-ttu-id="250ae-234">Число</span><span class="sxs-lookup"><span data-stu-id="250ae-234">Number</span></span>|<span data-ttu-id="250ae-235">Цвет</span><span class="sxs-lookup"><span data-stu-id="250ae-235">Color</span></span>|  
|------------|-----------|------------|-----------|  
|<span data-ttu-id="250ae-236">0</span><span class="sxs-lookup"><span data-stu-id="250ae-236">0</span></span>|<span data-ttu-id="250ae-237">Черный</span><span class="sxs-lookup"><span data-stu-id="250ae-237">Black</span></span>|<span data-ttu-id="250ae-238">8</span><span class="sxs-lookup"><span data-stu-id="250ae-238">8</span></span>|<span data-ttu-id="250ae-239">Gray</span><span class="sxs-lookup"><span data-stu-id="250ae-239">Gray</span></span>|  
|<span data-ttu-id="250ae-240">1</span><span class="sxs-lookup"><span data-stu-id="250ae-240">1</span></span>|<span data-ttu-id="250ae-241">Синий</span><span class="sxs-lookup"><span data-stu-id="250ae-241">Blue</span></span>|<span data-ttu-id="250ae-242">9</span><span class="sxs-lookup"><span data-stu-id="250ae-242">9</span></span>|<span data-ttu-id="250ae-243">Светло-синий</span><span class="sxs-lookup"><span data-stu-id="250ae-243">Light blue</span></span>|  
|<span data-ttu-id="250ae-244">2</span><span class="sxs-lookup"><span data-stu-id="250ae-244">2</span></span>|<span data-ttu-id="250ae-245">Зеленый</span><span class="sxs-lookup"><span data-stu-id="250ae-245">Green</span></span>|<span data-ttu-id="250ae-246">10</span><span class="sxs-lookup"><span data-stu-id="250ae-246">10</span></span>|<span data-ttu-id="250ae-247">Светло-зеленый</span><span class="sxs-lookup"><span data-stu-id="250ae-247">Light green</span></span>|  
|<span data-ttu-id="250ae-248">3</span><span class="sxs-lookup"><span data-stu-id="250ae-248">3</span></span>|<span data-ttu-id="250ae-249">Цвет</span><span class="sxs-lookup"><span data-stu-id="250ae-249">Cyan</span></span>|<span data-ttu-id="250ae-250">11</span><span class="sxs-lookup"><span data-stu-id="250ae-250">11</span></span>|<span data-ttu-id="250ae-251">Светло-голубой</span><span class="sxs-lookup"><span data-stu-id="250ae-251">Light cyan</span></span>|  
|<span data-ttu-id="250ae-252">4</span><span class="sxs-lookup"><span data-stu-id="250ae-252">4</span></span>|<span data-ttu-id="250ae-253">Красный</span><span class="sxs-lookup"><span data-stu-id="250ae-253">Red</span></span>|<span data-ttu-id="250ae-254">12</span><span class="sxs-lookup"><span data-stu-id="250ae-254">12</span></span>|<span data-ttu-id="250ae-255">Светло-красный</span><span class="sxs-lookup"><span data-stu-id="250ae-255">Light red</span></span>|  
|<span data-ttu-id="250ae-256">5</span><span class="sxs-lookup"><span data-stu-id="250ae-256">5</span></span>|<span data-ttu-id="250ae-257">Цвет</span><span class="sxs-lookup"><span data-stu-id="250ae-257">Magenta</span></span>|<span data-ttu-id="250ae-258">13</span><span class="sxs-lookup"><span data-stu-id="250ae-258">13</span></span>|<span data-ttu-id="250ae-259">Светло-пурпурный</span><span class="sxs-lookup"><span data-stu-id="250ae-259">Light magenta</span></span>|  
|<span data-ttu-id="250ae-260">6</span><span class="sxs-lookup"><span data-stu-id="250ae-260">6</span></span>|<span data-ttu-id="250ae-261">Желтый</span><span class="sxs-lookup"><span data-stu-id="250ae-261">Yellow</span></span>|<span data-ttu-id="250ae-262">14</span><span class="sxs-lookup"><span data-stu-id="250ae-262">14</span></span>|<span data-ttu-id="250ae-263">Светло-желтый</span><span class="sxs-lookup"><span data-stu-id="250ae-263">Light yellow</span></span>|  
|<span data-ttu-id="250ae-264">7</span><span class="sxs-lookup"><span data-stu-id="250ae-264">7</span></span>|<span data-ttu-id="250ae-265">Белый</span><span class="sxs-lookup"><span data-stu-id="250ae-265">White</span></span>|<span data-ttu-id="250ae-266">15</span><span class="sxs-lookup"><span data-stu-id="250ae-266">15</span></span>|<span data-ttu-id="250ae-267">Светлое белое</span><span class="sxs-lookup"><span data-stu-id="250ae-267">Bright white</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="250ae-268">В этом примере `QBColor` функция используется для изменения цвета, `colorInteger`указанного в.</span><span class="sxs-lookup"><span data-stu-id="250ae-268">This example uses the `QBColor` function to change to the color indicated by `colorInteger`.</span></span> <span data-ttu-id="250ae-269">`QBColor`принимает целочисленные значения от 0 до 15.</span><span class="sxs-lookup"><span data-stu-id="250ae-269">`QBColor` accepts integer values between 0 and 15.</span></span>  
  
 [!code-vb[VbVbalrCatRef#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="250ae-270">Параметр <paramref name="Color" /> находится вне диапазона от 0 до 15 включительно.</span><span class="sxs-lookup"><span data-stu-id="250ae-270"><paramref name="Color" /> is outside of range 0 to 15, inclusive.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RGB">
      <MemberSignature Language="C#" Value="public static int RGB (int Red, int Green, int Blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 RGB(int32 Red, int32 Green, int32 Blue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RGB (Red As Integer, Green As Integer, Blue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int RGB(int Red, int Green, int Blue);" />
      <MemberSignature Language="F#" Value="static member RGB : int * int * int -&gt; int" Usage="Microsoft.VisualBasic.Information.RGB (Red, Green, Blue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Red" Type="System.Int32" />
        <Parameter Name="Green" Type="System.Int32" />
        <Parameter Name="Blue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Red"><span data-ttu-id="250ae-271">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-271">Required.</span></span> <span data-ttu-id="250ae-272">Значение типа <see langword="Integer" /> в диапазоне 0–255 включительно, представляющее интенсивность красного компонента цвета.</span><span class="sxs-lookup"><span data-stu-id="250ae-272"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the red component of the color.</span></span></param>
        <param name="Green"><span data-ttu-id="250ae-273">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-273">Required.</span></span> <span data-ttu-id="250ae-274">Значение типа <see langword="Integer" /> в диапазоне 0–255 включительно, представляющее интенсивность зеленого компонента цвета.</span><span class="sxs-lookup"><span data-stu-id="250ae-274"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the green component of the color.</span></span></param>
        <param name="Blue"><span data-ttu-id="250ae-275">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-275">Required.</span></span> <span data-ttu-id="250ae-276">Значение типа <see langword="Integer" /> в диапазоне 0–255 включительно, представляющее интенсивность синего компонента цвета.</span><span class="sxs-lookup"><span data-stu-id="250ae-276"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the blue component of the color.</span></span></param>
        <summary><span data-ttu-id="250ae-277">Возвращает значение типа <see langword="Integer" />, представляющее RGB-значение цвета, состоящее из набора красного, зеленого и синего компонентов цвета.</span><span class="sxs-lookup"><span data-stu-id="250ae-277">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span></span></summary>
        <returns><span data-ttu-id="250ae-278">Возвращает значение типа <see langword="Integer" />, представляющее RGB-значение цвета, состоящее из набора красного, зеленого и синего компонентов цвета.</span><span class="sxs-lookup"><span data-stu-id="250ae-278">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-279">Методы и свойства приложения, принимающие спецификацию цвета, предполагают, что спецификация является числом, представляющим значение цвета RGB.</span><span class="sxs-lookup"><span data-stu-id="250ae-279">Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</span></span> <span data-ttu-id="250ae-280">Значение цвета RGB определяет относительную интенсивность красного, зеленого и синего цветов, что приводит к отображению определенного цвета.</span><span class="sxs-lookup"><span data-stu-id="250ae-280">An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</span></span>  
  
 <span data-ttu-id="250ae-281">Если значение любого аргумента в `RGB` больше 255, то используется 255.</span><span class="sxs-lookup"><span data-stu-id="250ae-281">If the value for any argument to `RGB` is greater than 255, 255 is used.</span></span>  
  
 <span data-ttu-id="250ae-282">В следующей таблице перечислены некоторые стандартные цвета и значения красного, зеленого и синего, которые они включают.</span><span class="sxs-lookup"><span data-stu-id="250ae-282">The following table lists some standard colors and the red, green, and blue values they include.</span></span>  
  
|<span data-ttu-id="250ae-283">Цвет</span><span class="sxs-lookup"><span data-stu-id="250ae-283">Color</span></span>|<span data-ttu-id="250ae-284">Красное значение</span><span class="sxs-lookup"><span data-stu-id="250ae-284">Red value</span></span>|<span data-ttu-id="250ae-285">Зеленое значение</span><span class="sxs-lookup"><span data-stu-id="250ae-285">Green value</span></span>|<span data-ttu-id="250ae-286">Синее значение</span><span class="sxs-lookup"><span data-stu-id="250ae-286">Blue value</span></span>|  
|-----------|---------------|-----------------|----------------|  
|<span data-ttu-id="250ae-287">Черный</span><span class="sxs-lookup"><span data-stu-id="250ae-287">Black</span></span>|<span data-ttu-id="250ae-288">0</span><span class="sxs-lookup"><span data-stu-id="250ae-288">0</span></span>|<span data-ttu-id="250ae-289">0</span><span class="sxs-lookup"><span data-stu-id="250ae-289">0</span></span>|<span data-ttu-id="250ae-290">0</span><span class="sxs-lookup"><span data-stu-id="250ae-290">0</span></span>|  
|<span data-ttu-id="250ae-291">Синий</span><span class="sxs-lookup"><span data-stu-id="250ae-291">Blue</span></span>|<span data-ttu-id="250ae-292">0</span><span class="sxs-lookup"><span data-stu-id="250ae-292">0</span></span>|<span data-ttu-id="250ae-293">0</span><span class="sxs-lookup"><span data-stu-id="250ae-293">0</span></span>|<span data-ttu-id="250ae-294">255</span><span class="sxs-lookup"><span data-stu-id="250ae-294">255</span></span>|  
|<span data-ttu-id="250ae-295">Зеленый</span><span class="sxs-lookup"><span data-stu-id="250ae-295">Green</span></span>|<span data-ttu-id="250ae-296">0</span><span class="sxs-lookup"><span data-stu-id="250ae-296">0</span></span>|<span data-ttu-id="250ae-297">255</span><span class="sxs-lookup"><span data-stu-id="250ae-297">255</span></span>|<span data-ttu-id="250ae-298">0</span><span class="sxs-lookup"><span data-stu-id="250ae-298">0</span></span>|  
|<span data-ttu-id="250ae-299">Цвет</span><span class="sxs-lookup"><span data-stu-id="250ae-299">Cyan</span></span>|<span data-ttu-id="250ae-300">0</span><span class="sxs-lookup"><span data-stu-id="250ae-300">0</span></span>|<span data-ttu-id="250ae-301">255</span><span class="sxs-lookup"><span data-stu-id="250ae-301">255</span></span>|<span data-ttu-id="250ae-302">255</span><span class="sxs-lookup"><span data-stu-id="250ae-302">255</span></span>|  
|<span data-ttu-id="250ae-303">Красный</span><span class="sxs-lookup"><span data-stu-id="250ae-303">Red</span></span>|<span data-ttu-id="250ae-304">255</span><span class="sxs-lookup"><span data-stu-id="250ae-304">255</span></span>|<span data-ttu-id="250ae-305">0</span><span class="sxs-lookup"><span data-stu-id="250ae-305">0</span></span>|<span data-ttu-id="250ae-306">0</span><span class="sxs-lookup"><span data-stu-id="250ae-306">0</span></span>|  
|<span data-ttu-id="250ae-307">Цвет</span><span class="sxs-lookup"><span data-stu-id="250ae-307">Magenta</span></span>|<span data-ttu-id="250ae-308">255</span><span class="sxs-lookup"><span data-stu-id="250ae-308">255</span></span>|<span data-ttu-id="250ae-309">0</span><span class="sxs-lookup"><span data-stu-id="250ae-309">0</span></span>|<span data-ttu-id="250ae-310">255</span><span class="sxs-lookup"><span data-stu-id="250ae-310">255</span></span>|  
|<span data-ttu-id="250ae-311">Желтый</span><span class="sxs-lookup"><span data-stu-id="250ae-311">Yellow</span></span>|<span data-ttu-id="250ae-312">255</span><span class="sxs-lookup"><span data-stu-id="250ae-312">255</span></span>|<span data-ttu-id="250ae-313">255</span><span class="sxs-lookup"><span data-stu-id="250ae-313">255</span></span>|<span data-ttu-id="250ae-314">0</span><span class="sxs-lookup"><span data-stu-id="250ae-314">0</span></span>|  
|<span data-ttu-id="250ae-315">Белый</span><span class="sxs-lookup"><span data-stu-id="250ae-315">White</span></span>|<span data-ttu-id="250ae-316">255</span><span class="sxs-lookup"><span data-stu-id="250ae-316">255</span></span>|<span data-ttu-id="250ae-317">255</span><span class="sxs-lookup"><span data-stu-id="250ae-317">255</span></span>|<span data-ttu-id="250ae-318">255</span><span class="sxs-lookup"><span data-stu-id="250ae-318">255</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="250ae-319">В этом примере показано, `RGB` как функция используется для возврата целого числа, `RGB` представляющего значение цвета.</span><span class="sxs-lookup"><span data-stu-id="250ae-319">This example shows how the `RGB` function is used to return a whole number representing an `RGB` color value.</span></span>  
  
 [!code-vb[VbVbalrCatRef#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="250ae-320"><paramref name="Green" />, <paramref name="Blue" /> или <paramref name="Red" /> находятся вне диапазона от 0 до 255 включительно.</span><span class="sxs-lookup"><span data-stu-id="250ae-320"><paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> is outside of range 0 to 255, inclusive.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SystemTypeName">
      <MemberSignature Language="C#" Value="public static string SystemTypeName (string VbName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string SystemTypeName(string VbName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SystemTypeName (VbName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SystemTypeName(System::String ^ VbName);" />
      <MemberSignature Language="F#" Value="static member SystemTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.SystemTypeName VbName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VbName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VbName"><span data-ttu-id="250ae-321">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-321">Required.</span></span> <span data-ttu-id="250ae-322">Переменная типа <see langword="String" />, содержащая имя типа Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="250ae-322">A <see langword="String" /> variable containing a Visual Basic type name.</span></span></param>
        <summary><span data-ttu-id="250ae-323">Возвращает значение типа <see langword="String" />, содержащее имя системного типа данных переменной.</span><span class="sxs-lookup"><span data-stu-id="250ae-323">Returns a <see langword="String" /> value containing the system data type name of a variable.</span></span></summary>
        <returns><span data-ttu-id="250ae-324">Возвращает значение типа <see langword="String" />, содержащее имя системного типа данных переменной.</span><span class="sxs-lookup"><span data-stu-id="250ae-324">Returns a <see langword="String" /> value containing the system data type name of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-325">`SystemTypeName`Возвращает полное имя типа среды CLR, соответствующее имени типа Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="250ae-325">`SystemTypeName` returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</span></span> <span data-ttu-id="250ae-326">Например, если `VbName` содержит "Date", `SystemTypeName` функция возвращает "System. DateTime".</span><span class="sxs-lookup"><span data-stu-id="250ae-326">For example, if `VbName` contains "Date", `SystemTypeName` returns "System.DateTime".</span></span> <span data-ttu-id="250ae-327">Если `SystemTypeName` не распознает `VbName`значение, возвращается `Nothing` (а не строка Nothing).</span><span class="sxs-lookup"><span data-stu-id="250ae-327">If `SystemTypeName` does not recognize the value of `VbName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-328">В следующем примере `SystemTypeName` функция используется для возврата имен типов данных для нескольких переменных.</span><span class="sxs-lookup"><span data-stu-id="250ae-328">The following example uses the `SystemTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#49)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="250ae-329">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-329">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public static string TypeName (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TypeName(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TypeName (VarName As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TypeName(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member TypeName : obj -&gt; string" Usage="Microsoft.VisualBasic.Information.TypeName VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="250ae-330">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-330">Required.</span></span> <span data-ttu-id="250ae-331">Переменная <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-331"><see langword="Object" /> variable.</span></span> <span data-ttu-id="250ae-332">Если <see langword="Option Strict" /> имеет значение <see langword="Off" />, разрешается передача переменной с любым типом данных, за исключением структуры.</span><span class="sxs-lookup"><span data-stu-id="250ae-332">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span></span></param>
        <summary><span data-ttu-id="250ae-333">Возвращает значение типа <see langword="String" />, содержащее сведения о типе данных переменной.</span><span class="sxs-lookup"><span data-stu-id="250ae-333">Returns a <see langword="String" /> value containing data-type information about a variable.</span></span></summary>
        <returns><span data-ttu-id="250ae-334">Возвращает значение типа <see langword="String" />, содержащее сведения о типе данных переменной.</span><span class="sxs-lookup"><span data-stu-id="250ae-334">Returns a <see langword="String" /> value containing data-type information about a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-335">В следующей таблице приведены `String` значения, возвращаемые функцией `TypeName` для другого содержимого `VarName`.</span><span class="sxs-lookup"><span data-stu-id="250ae-335">The following table shows the `String` values returned by `TypeName` for different contents of `VarName`.</span></span>  
  
|<span data-ttu-id="250ae-336">`VarName`содержимое</span><span class="sxs-lookup"><span data-stu-id="250ae-336">`VarName` contents</span></span>|<span data-ttu-id="250ae-337">Возвращаемая строка</span><span class="sxs-lookup"><span data-stu-id="250ae-337">String returned</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="250ae-338">16- `True` разрядный `False` или тип значения</span><span class="sxs-lookup"><span data-stu-id="250ae-338">16-bit `True` or `False` value type</span></span>|<span data-ttu-id="250ae-339">Логическая</span><span class="sxs-lookup"><span data-stu-id="250ae-339">"Boolean"</span></span>|  
|<span data-ttu-id="250ae-340">8-разрядный двоичный тип значения</span><span class="sxs-lookup"><span data-stu-id="250ae-340">8-bit binary value type</span></span>|<span data-ttu-id="250ae-341">Двухбайтовых</span><span class="sxs-lookup"><span data-stu-id="250ae-341">"Byte"</span></span>|  
|<span data-ttu-id="250ae-342">16-разрядный символьный тип значения</span><span class="sxs-lookup"><span data-stu-id="250ae-342">16-bit character value type</span></span>|<span data-ttu-id="250ae-343">Типа</span><span class="sxs-lookup"><span data-stu-id="250ae-343">"Char"</span></span>|  
|<span data-ttu-id="250ae-344">64-разрядный тип значения даты и времени</span><span class="sxs-lookup"><span data-stu-id="250ae-344">64-bit date and time value type</span></span>|<span data-ttu-id="250ae-345">Дата</span><span class="sxs-lookup"><span data-stu-id="250ae-345">"Date"</span></span>|  
|<span data-ttu-id="250ae-346">Ссылочный тип, указывающий на отсутствующие или несуществующие данные</span><span class="sxs-lookup"><span data-stu-id="250ae-346">Reference type indicating missing or nonexistent data</span></span>|<span data-ttu-id="250ae-347">DBNull</span><span class="sxs-lookup"><span data-stu-id="250ae-347">"DBNull"</span></span>|  
|<span data-ttu-id="250ae-348">128-разрядный тип числового значения с фиксированной запятой</span><span class="sxs-lookup"><span data-stu-id="250ae-348">128-bit fixed-point numeric value type</span></span>|<span data-ttu-id="250ae-349">Десятич</span><span class="sxs-lookup"><span data-stu-id="250ae-349">"Decimal"</span></span>|  
|<span data-ttu-id="250ae-350">64-разрядный тип числового значения с плавающей запятой</span><span class="sxs-lookup"><span data-stu-id="250ae-350">64-bit floating-point numeric value type</span></span>|<span data-ttu-id="250ae-351">Дважды</span><span class="sxs-lookup"><span data-stu-id="250ae-351">"Double"</span></span>|  
|<span data-ttu-id="250ae-352">32-разрядный целочисленный тип значения</span><span class="sxs-lookup"><span data-stu-id="250ae-352">32-bit integer value type</span></span>|<span data-ttu-id="250ae-353">Цело</span><span class="sxs-lookup"><span data-stu-id="250ae-353">"Integer"</span></span>|  
|<span data-ttu-id="250ae-354">Ссылочный тип, указывающий на неспециализированный объект</span><span class="sxs-lookup"><span data-stu-id="250ae-354">Reference type pointing to an unspecialized object</span></span>|<span data-ttu-id="250ae-355">Объектами</span><span class="sxs-lookup"><span data-stu-id="250ae-355">"Object"</span></span>|  
|<span data-ttu-id="250ae-356">Ссылочный тип, указывающий на специализированный объект, созданный из класса *objectClass*</span><span class="sxs-lookup"><span data-stu-id="250ae-356">Reference type pointing to a specialized object created from class *objectclass*</span></span>|<span data-ttu-id="250ae-357">"*objectClass*"</span><span class="sxs-lookup"><span data-stu-id="250ae-357">"*objectclass*"</span></span>|  
|<span data-ttu-id="250ae-358">64-разрядный целочисленный тип значения</span><span class="sxs-lookup"><span data-stu-id="250ae-358">64-bit integer value type</span></span>|<span data-ttu-id="250ae-359">Поддерживаем</span><span class="sxs-lookup"><span data-stu-id="250ae-359">"Long"</span></span>|  
|<span data-ttu-id="250ae-360">Ссылочный тип без объекта, который сейчас назначен ему</span><span class="sxs-lookup"><span data-stu-id="250ae-360">Reference type with no object currently assigned to it</span></span>|<span data-ttu-id="250ae-361">Возмож</span><span class="sxs-lookup"><span data-stu-id="250ae-361">"Nothing"</span></span>|  
|<span data-ttu-id="250ae-362">8-разрядный целочисленный тип значения со знаком</span><span class="sxs-lookup"><span data-stu-id="250ae-362">8-bit signed integer value type</span></span>|<span data-ttu-id="250ae-363">SByte</span><span class="sxs-lookup"><span data-stu-id="250ae-363">"SByte"</span></span>|  
|<span data-ttu-id="250ae-364">16-разрядный целочисленный тип значения</span><span class="sxs-lookup"><span data-stu-id="250ae-364">16-bit integer value type</span></span>|<span data-ttu-id="250ae-365">Промежуток</span><span class="sxs-lookup"><span data-stu-id="250ae-365">"Short"</span></span>|  
|<span data-ttu-id="250ae-366">32-разрядный тип числового значения с плавающей запятой</span><span class="sxs-lookup"><span data-stu-id="250ae-366">32-bit floating-point numeric value type</span></span>|<span data-ttu-id="250ae-367">Один</span><span class="sxs-lookup"><span data-stu-id="250ae-367">"Single"</span></span>|  
|<span data-ttu-id="250ae-368">Ссылочный тип, указывающий на строку из 16-разрядных символов</span><span class="sxs-lookup"><span data-stu-id="250ae-368">Reference type pointing to a string of 16-bit characters</span></span>|<span data-ttu-id="250ae-369">Строка</span><span class="sxs-lookup"><span data-stu-id="250ae-369">"String"</span></span>|  
|<span data-ttu-id="250ae-370">32-разрядный тип целочисленного значения без знака</span><span class="sxs-lookup"><span data-stu-id="250ae-370">32-bit unsigned integer value type</span></span>|<span data-ttu-id="250ae-371">UInteger</span><span class="sxs-lookup"><span data-stu-id="250ae-371">"UInteger"</span></span>|  
|<span data-ttu-id="250ae-372">64-разрядный тип целочисленного значения без знака</span><span class="sxs-lookup"><span data-stu-id="250ae-372">64-bit unsigned integer value type</span></span>|<span data-ttu-id="250ae-373">ULong</span><span class="sxs-lookup"><span data-stu-id="250ae-373">"ULong"</span></span>|  
|<span data-ttu-id="250ae-374">16-разрядный целочисленный тип значений без знака</span><span class="sxs-lookup"><span data-stu-id="250ae-374">16-bit unsigned integer value type</span></span>|<span data-ttu-id="250ae-375">UShort</span><span class="sxs-lookup"><span data-stu-id="250ae-375">"UShort"</span></span>|  
  
 <span data-ttu-id="250ae-376">Если `VarName` является массивом, возвращаемая строка может быть любой строкой в предыдущей таблице с добавленными пустыми скобками.</span><span class="sxs-lookup"><span data-stu-id="250ae-376">If `VarName` is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</span></span> <span data-ttu-id="250ae-377">Например, если `VarName` указывает на массив целых чисел, `TypeName` возвращает «Integer ()».</span><span class="sxs-lookup"><span data-stu-id="250ae-377">For example, if `VarName` points to an array of integers, `TypeName` returns "Integer()".</span></span>  
  
 <span data-ttu-id="250ae-378">Если `TypeName` метод возвращает имя ссылочного типа, например класса, он возвращает только само имя, а не полное имя.</span><span class="sxs-lookup"><span data-stu-id="250ae-378">When `TypeName` returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</span></span> <span data-ttu-id="250ae-379">Например, если `VarName` указывает на объект класса <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` возвращает «паперсаурце».</span><span class="sxs-lookup"><span data-stu-id="250ae-379">For example, if `VarName` points to an object of class <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` returns "PaperSource".</span></span> <span data-ttu-id="250ae-380">Обратите внимание, что если переменная объявлена как имеющая определенный тип класса, но ей не назначен объект, `TypeName` функция возвращает значение Nothing.</span><span class="sxs-lookup"><span data-stu-id="250ae-380">Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, `TypeName` returns "Nothing".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-381">В следующем примере `TypeName` функция используется для возврата сведений о типе данных о нескольких переменных.</span><span class="sxs-lookup"><span data-stu-id="250ae-381">The following example uses the `TypeName` function to return data type information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="250ae-382">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-382">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public static int UBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 UBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member UBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.UBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array"><span data-ttu-id="250ae-383">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-383">Required.</span></span> <span data-ttu-id="250ae-384">Массив данных любого типа.</span><span class="sxs-lookup"><span data-stu-id="250ae-384">Array of any data type.</span></span> <span data-ttu-id="250ae-385">Массив, в котором осуществляется поиск наибольшего индекса измерения.</span><span class="sxs-lookup"><span data-stu-id="250ae-385">The array in which you want to find the highest possible subscript of a dimension.</span></span></param>
        <param name="Rank"><span data-ttu-id="250ae-386">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="250ae-386">Optional.</span></span> <span data-ttu-id="250ae-387"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-387"><see langword="Integer" />.</span></span> <span data-ttu-id="250ae-388">Измерение, для которого возвращается максимальный индекс.</span><span class="sxs-lookup"><span data-stu-id="250ae-388">The dimension for which the highest possible subscript is to be returned.</span></span> <span data-ttu-id="250ae-389">Используйте 1 для первого измерения, 2 — для второго и т. д.</span><span class="sxs-lookup"><span data-stu-id="250ae-389">Use 1 for the first dimension, 2 for the second, and so on.</span></span> <span data-ttu-id="250ae-390">Если параметр <paramref name="Rank" /> опущен, используется значение 1.</span><span class="sxs-lookup"><span data-stu-id="250ae-390">If <paramref name="Rank" /> is omitted, 1 is assumed.</span></span></param>
        <summary><span data-ttu-id="250ae-391">Возвращает наибольший доступный индекс для указанной размерности массива.</span><span class="sxs-lookup"><span data-stu-id="250ae-391">Returns the highest available subscript for the indicated dimension of an array.</span></span></summary>
        <returns><span data-ttu-id="250ae-392"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-392"><see langword="Integer" />.</span></span> <span data-ttu-id="250ae-393">Может содержать самое большое значение нижнего индекса для указанного измерения.</span><span class="sxs-lookup"><span data-stu-id="250ae-393">The highest value the subscript for the specified dimension can contain.</span></span> <span data-ttu-id="250ae-394">Если массив <paramref name="Array" /> содержит ровно один элемент, метод <see langword="UBound" /> возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="250ae-394">If <paramref name="Array" /> has only one element, <see langword="UBound" /> returns 0.</span></span> <span data-ttu-id="250ae-395">Если массив <paramref name="Array" /> не содержит элементов (например, является строкой нулевой длины), метод <see langword="UBound" /> возвращает значение -1.</span><span class="sxs-lookup"><span data-stu-id="250ae-395">If <paramref name="Array" /> has no elements, for example if it is a zero-length string, <see langword="UBound" /> returns -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-396">Так как индексы массива начинаются с 0, длина измерения больше, чем максимальный доступный индекс для этого измерения.</span><span class="sxs-lookup"><span data-stu-id="250ae-396">Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.</span></span>  
  
 <span data-ttu-id="250ae-397">Для массива со следующими измерениями возвращает значения `UBound` , приведенные в следующей таблице:</span><span class="sxs-lookup"><span data-stu-id="250ae-397">For an array with the following dimensions, `UBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="250ae-398">Вызов функции UBound</span><span class="sxs-lookup"><span data-stu-id="250ae-398">Call to UBound</span></span>|<span data-ttu-id="250ae-399">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="250ae-399">Return value</span></span>|  
|--------------------|------------------|  
|`UBound(a, 1)`|<span data-ttu-id="250ae-400">100</span><span class="sxs-lookup"><span data-stu-id="250ae-400">100</span></span>|  
|`UBound(a, 2)`|<span data-ttu-id="250ae-401">5</span><span class="sxs-lookup"><span data-stu-id="250ae-401">5</span></span>|  
|`UBound(a, 3)`|<span data-ttu-id="250ae-402">4</span><span class="sxs-lookup"><span data-stu-id="250ae-402">4</span></span>|  
  
 <span data-ttu-id="250ae-403">Можно использовать `UBound` для определения общего количества элементов в массиве, но необходимо скорректировать возвращаемое значение, чтобы учесть тот факт, что индексы начинаются с 0.</span><span class="sxs-lookup"><span data-stu-id="250ae-403">You can use `UBound` to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0.</span></span> <span data-ttu-id="250ae-404">В следующем примере вычисляется общий размер массива `a` в предыдущем примере:</span><span class="sxs-lookup"><span data-stu-id="250ae-404">The following example calculates the total size of the array `a` in the preceding example:</span></span>  
  
```vb  
Dim total As Integer  
total = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  
```  
  
 <span data-ttu-id="250ae-405">Значение, вычисленное `total` для, — 3030, то есть 101 \* 6 \* 5.</span><span class="sxs-lookup"><span data-stu-id="250ae-405">The value calculated for `total` is 3030, which is 101 \* 6 \* 5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-406">В следующем примере `UBound` функция используется для определения наибольшего доступного индекса для указанного измерения массива.</span><span class="sxs-lookup"><span data-stu-id="250ae-406">The following example uses the `UBound` function to determine the highest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="250ae-407">Свойство <paramref name="Array" /> имеет значение <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-407"><paramref name="Array" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="250ae-408">Параметр <paramref name="Rank" /> меньше 1 или <paramref name="Rank" /> превышает ранг <paramref name="Array" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-408"><paramref name="Rank" /> is less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md"><span data-ttu-id="250ae-409">Оператор Dim (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-409">Dim Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/redim-statement.md"><span data-ttu-id="250ae-410">Оператор ReDim (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-410">ReDim Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VarType">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.VariantType VarType (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.VariantType VarType(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarType (VarName As Object) As VariantType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::VariantType VarType(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member VarType : obj -&gt; Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Information.VarType VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="250ae-411">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-411">Required.</span></span> <span data-ttu-id="250ae-412">Переменная <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="250ae-412"><see langword="Object" /> variable.</span></span> <span data-ttu-id="250ae-413">Если <see langword="Option Strict" /> имеет значение <see langword="Off" />, разрешается передача переменной с любым типом данных, за исключением структуры.</span><span class="sxs-lookup"><span data-stu-id="250ae-413">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span></span></param>
        <summary><span data-ttu-id="250ae-414">Возвращает значение типа <see langword="Integer" />, содержащее классификацию типа данных переменной.</span><span class="sxs-lookup"><span data-stu-id="250ae-414">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span></span></summary>
        <returns><span data-ttu-id="250ae-415">Возвращает значение типа <see langword="Integer" />, содержащее классификацию типа данных переменной.</span><span class="sxs-lookup"><span data-stu-id="250ae-415">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-416">Целочисленное значение, возвращаемое, `VarType` является членом. <xref:Microsoft.VisualBasic.VariantType></span><span class="sxs-lookup"><span data-stu-id="250ae-416">The integer value returned by `VarType` is a member of the <xref:Microsoft.VisualBasic.VariantType>.</span></span>  
  
 <span data-ttu-id="250ae-417">В следующей таблице приведены значения, возвращаемые `VarType` в, в особых `VarName`случаях.</span><span class="sxs-lookup"><span data-stu-id="250ae-417">The following table shows the values returned by `VarType` for special cases of `VarName`.</span></span>  
  
|<span data-ttu-id="250ae-418">Тип данных, представленный`VarName`</span><span class="sxs-lookup"><span data-stu-id="250ae-418">Data type represented by `VarName`</span></span>|<span data-ttu-id="250ae-419">Значение, возвращаемое`VarType`</span><span class="sxs-lookup"><span data-stu-id="250ae-419">Value returned by `VarType`</span></span>|  
|----------------------------------------|---------------------------------|  
|[<span data-ttu-id="250ae-420">Nothing</span><span class="sxs-lookup"><span data-stu-id="250ae-420">Nothing</span></span>](~/docs/visual-basic/language-reference/nothing.md)|`VariantType.Object`|  
|<xref:System.DBNull>|`VariantType.Null`|  
|<span data-ttu-id="250ae-421">Перечисление</span><span class="sxs-lookup"><span data-stu-id="250ae-421">Enumeration</span></span>|<span data-ttu-id="250ae-422">Базовый тип данных (`SByte` `Byte` `UShort` ,, `Integer` ,, , `UInteger`  , `ULong` или) `Short` `Long`</span><span class="sxs-lookup"><span data-stu-id="250ae-422">Underlying data type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)</span></span>|  
|<span data-ttu-id="250ae-423">Массив</span><span class="sxs-lookup"><span data-stu-id="250ae-423">Array</span></span>|<span data-ttu-id="250ae-424">Побитовое или для типа элемента массива и`VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="250ae-424">Bitwise OR of array element type and `VariantType.Array`</span></span>|  
|<span data-ttu-id="250ae-425">Массив массивов</span><span class="sxs-lookup"><span data-stu-id="250ae-425">Array of arrays</span></span>|<span data-ttu-id="250ae-426">Побитовое `VariantType.Object` или из и`VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="250ae-426">Bitwise OR of `VariantType.Object` and `VariantType.Array`</span></span>|  
|<span data-ttu-id="250ae-427">Structure (<xref:System.ValueType?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="250ae-427">Structure (<xref:System.ValueType?displayProperty=nameWithType>)</span></span>|`VariantType.UserDefinedType`|  
|<xref:System.Exception>|`VariantType.Error`|  
|<span data-ttu-id="250ae-428">Неизвестно</span><span class="sxs-lookup"><span data-stu-id="250ae-428">Unknown</span></span>|`VariantType.Object`|  
  
   
  
## Examples  
 <span data-ttu-id="250ae-429">В следующем примере `VarType` функция используется для возврата сведений о классификации типов данных о нескольких переменных.</span><span class="sxs-lookup"><span data-stu-id="250ae-429">The following example uses the `VarType` function to return data type classification information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="250ae-430">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-430">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VbTypeName">
      <MemberSignature Language="C#" Value="public static string VbTypeName (string UrtName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string VbTypeName(string UrtName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VbTypeName (UrtName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VbTypeName(System::String ^ UrtName);" />
      <MemberSignature Language="F#" Value="static member VbTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.VbTypeName UrtName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="UrtName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="UrtName"><span data-ttu-id="250ae-431">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="250ae-431">Required.</span></span> <span data-ttu-id="250ae-432">Переменная типа <see langword="String" />, содержащая имя типа, используемое средой CLR.</span><span class="sxs-lookup"><span data-stu-id="250ae-432"><see langword="String" /> variable containing a type name used by the common language runtime.</span></span></param>
        <summary><span data-ttu-id="250ae-433">Возвращает значение типа <see langword="String" />, содержащее имя типа данных Visual Basic для переменной.</span><span class="sxs-lookup"><span data-stu-id="250ae-433">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span></span></summary>
        <returns><span data-ttu-id="250ae-434">Возвращает значение типа <see langword="String" />, содержащее имя типа данных Visual Basic для переменной.</span><span class="sxs-lookup"><span data-stu-id="250ae-434">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="250ae-435">`VbTypeName`Возвращает имя типа Visual Basic, соответствующее имени типа среды CLR.</span><span class="sxs-lookup"><span data-stu-id="250ae-435">`VbTypeName` returns the Visual Basic type name corresponding to the common language runtime type name.</span></span> <span data-ttu-id="250ae-436">Например, если `UrtName` содержит "Int32" или "System. Int32", `VbTypeName` возвращает "integer".</span><span class="sxs-lookup"><span data-stu-id="250ae-436">For example, if `UrtName` contains "Int32" or "System.Int32", `VbTypeName` returns "Integer".</span></span> <span data-ttu-id="250ae-437">Если `VbTypeName` не распознает `UrtName`значение, возвращается `Nothing` (а не строка Nothing).</span><span class="sxs-lookup"><span data-stu-id="250ae-437">If `VbTypeName` does not recognize the value of `UrtName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
 <span data-ttu-id="250ae-438">Имя типа в `UrtName` может быть получено из различных источников, например <xref:System.Reflection.MemberInfo.Name%2A> из свойства <xref:System.Type> в <xref:System.Reflection.MemberInfo> массиве класса.</span><span class="sxs-lookup"><span data-stu-id="250ae-438">The type name in `UrtName` can be obtained from various sources, for example from the <xref:System.Reflection.MemberInfo.Name%2A> property in the <xref:System.Reflection.MemberInfo> array of the <xref:System.Type> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="250ae-439">В следующем примере `VbTypeName` функция используется для возврата имен типов данных для нескольких переменных.</span><span class="sxs-lookup"><span data-stu-id="250ae-439">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="250ae-440">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="250ae-440">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
