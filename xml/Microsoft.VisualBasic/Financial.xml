<Type Name="Financial" FullName="Microsoft.VisualBasic.Financial">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57d983ed1455c9ffc817c50bb44441942ca1e484" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69317633" /></Metadata><TypeSignature Language="C#" Value="public sealed class Financial" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Financial extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Financial" />
  <TypeSignature Language="VB.NET" Value="Public Module Financial" />
  <TypeSignature Language="C++ CLI" Value="public ref class Financial sealed" />
  <TypeSignature Language="F#" Value="type Financial = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="301e2-101">В модуле <see langword="Financial" /> содержатся процедуры, используемые для выполнения финансовых операций.</span><span class="sxs-lookup"><span data-stu-id="301e2-101">The <see langword="Financial" /> module contains procedures used to perform financial operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-102">Этот модуль поддерживает Visual Basic элементы библиотеки времени выполнения, которые выполняют финансовые вычисления, такие как амортизация, существующие и будущие значения, процентные ставки, ставки возврата и платежи.</span><span class="sxs-lookup"><span data-stu-id="301e2-102">This module supports the Visual Basic run-time library members that perform financial calculations such as depreciation, present and future values, interest rates, rates of return, and payments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-103">В этом примере `Rate` функция используется для вычисления процентной ставки ссуды с учетом общего числа платежей (`TotPmts`), суммы платежа (`Payment`), текущего значения или участника ссуды (`PVal`), будущего значение ссуды (`FVal`), число, указывающее, является ли оплата датой начала или окончания периода выплат (`PayType`), и приближением ожидаемой процентной ставки (`Guess`).</span><span class="sxs-lookup"><span data-stu-id="301e2-103">This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).</span></span>  
  
 [!code-vb[VbVbalrMath#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-104">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-104">Financial Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="301e2-105">Ключевые слова (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="301e2-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="301e2-106">Visual Basic элементов библиотеки времени выполнения</span><span class="sxs-lookup"><span data-stu-id="301e2-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="DDB">
      <MemberSignature Language="C#" Value="public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 DDB(float64 Cost, float64 Salvage, float64 Life, float64 Period, float64 Factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDB (Cost As Double, Salvage As Double, Life As Double, Period As Double, Optional Factor As Double = 2) As Double" />
      <MemberSignature Language="F#" Value="static member DDB : double * double * double * double * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.DDB (Cost, Salvage, Life, Period, Factor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
        <Parameter Name="Period" Type="System.Double" />
        <Parameter Name="Factor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="301e2-107">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-107">Required.</span></span> <span data-ttu-id="301e2-108">Начальная стоимость актива.</span><span class="sxs-lookup"><span data-stu-id="301e2-108">The initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="301e2-109">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-109">Required.</span></span> <span data-ttu-id="301e2-110">Стоимость актива на момент окончания срока его эксплуатации.</span><span class="sxs-lookup"><span data-stu-id="301e2-110">The value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="301e2-111">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-111">Required.</span></span> <span data-ttu-id="301e2-112">Срок эксплуатации актива.</span><span class="sxs-lookup"><span data-stu-id="301e2-112">The length of useful life of the asset.</span></span></param>
        <param name="Period"><span data-ttu-id="301e2-113">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-113">Required.</span></span> <span data-ttu-id="301e2-114">Период расчета амортизации актива.</span><span class="sxs-lookup"><span data-stu-id="301e2-114">The period for which asset depreciation is calculated.</span></span></param>
        <param name="Factor"><span data-ttu-id="301e2-115">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-115">Optional.</span></span> <span data-ttu-id="301e2-116">Коэффициент уменьшения остатка.</span><span class="sxs-lookup"><span data-stu-id="301e2-116">The rate at which the balance declines.</span></span> <span data-ttu-id="301e2-117">Если значение не указано, то предполагается 2 (метод двойного уменьшения остатка).</span><span class="sxs-lookup"><span data-stu-id="301e2-117">If omitted, 2 (double-declining method) is assumed.</span></span></param>
        <summary><span data-ttu-id="301e2-118">Возвращает значение, определяющее амортизацию актива за указанный период времени с помощью метода двойного уменьшения остатка или другого указанного метода.</span><span class="sxs-lookup"><span data-stu-id="301e2-118">Returns a value specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</span></span></summary>
        <returns><span data-ttu-id="301e2-119">Значение, определяющее амортизацию актива за указанный период времени с помощью метода двойного уменьшения остатка или другого указанного метода.</span><span class="sxs-lookup"><span data-stu-id="301e2-119">The depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-120">Метод двойного уменьшения остатка рассчитывает амортизацию с частотой ускорения.</span><span class="sxs-lookup"><span data-stu-id="301e2-120">The double-declining balance method computes depreciation at an accelerated rate.</span></span> <span data-ttu-id="301e2-121">Амортизация является наибольшей в первом периоде и уменьшается в последующих периодах.</span><span class="sxs-lookup"><span data-stu-id="301e2-121">Depreciation is highest in the first period and decreases in successive periods.</span></span>  
  
 <span data-ttu-id="301e2-122">Аргументы `Life` и`Period` должны быть выражены в одних и тех же единицах.</span><span class="sxs-lookup"><span data-stu-id="301e2-122">The `Life` and `Period` arguments must be expressed in the same units.</span></span> <span data-ttu-id="301e2-123">Например, если `Life` указано в месяцах, `Period` необходимо также указать в месяцах.</span><span class="sxs-lookup"><span data-stu-id="301e2-123">For example, if `Life` is given in months, `Period` must also be given in months.</span></span> <span data-ttu-id="301e2-124">Все аргументы должны быть положительными числами.</span><span class="sxs-lookup"><span data-stu-id="301e2-124">All arguments must be positive numbers.</span></span>  
  
 <span data-ttu-id="301e2-125">`DDB` Функция использует следующую формулу для вычисления амортизации за указанный период:</span><span class="sxs-lookup"><span data-stu-id="301e2-125">The `DDB` function uses the following formula to calculate depreciation for a given period:</span></span>  
  
 <span data-ttu-id="301e2-126">Амортизация/период = ((стоимость-остаточная_стоимость) \* коэффициент)/жизнь</span><span class="sxs-lookup"><span data-stu-id="301e2-126">Depreciation / Period = ((Cost - Salvage) \* Factor) / Life</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-127">В этом примере `DDB` функция используется для возврата амортизации актива за указанный период с учетом начальной стоимости (`InitCost`), остаточной стоимости в конце срока службы актива (`SalvageVal`), общего времени существования актива в годах (`LifeTime`) и период в годах, для которого вычисляется амортизация (`Depr`).</span><span class="sxs-lookup"><span data-stu-id="301e2-127">This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="301e2-128"><paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0 или <paramref name="Period" /> &gt; <paramref name="Life." /></span><span class="sxs-lookup"><span data-stu-id="301e2-128"><paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0, or <paramref name="Period" /> &gt; <paramref name="Life." /></span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-129">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-129">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FV">
      <MemberSignature Language="C#" Value="public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FV(float64 Rate, float64 NPer, float64 Pmt, float64 PV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function FV (Rate As Double, NPer As Double, Pmt As Double, Optional PV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member FV : double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.FV (Rate, NPer, Pmt, PV, Due)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="301e2-130">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-130">Required.</span></span> <span data-ttu-id="301e2-131">Процентная ставка за период.</span><span class="sxs-lookup"><span data-stu-id="301e2-131">The interest rate per period.</span></span> <span data-ttu-id="301e2-132">Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</span><span class="sxs-lookup"><span data-stu-id="301e2-132">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="301e2-133">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-133">Required.</span></span> <span data-ttu-id="301e2-134">Общее количество периодов платежей аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-134">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="301e2-135">Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов выплат будет равно 4 x 12 (или 48).</span><span class="sxs-lookup"><span data-stu-id="301e2-135">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="301e2-136">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-136">Required.</span></span> <span data-ttu-id="301e2-137">Платеж за каждый период.</span><span class="sxs-lookup"><span data-stu-id="301e2-137">The payment to be made each period.</span></span> <span data-ttu-id="301e2-138">Обычно платежи содержат основную сумму и проценты, которые не изменяются на протяжении периода действия аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-138">Payments usually contain principal and interest that doesn't change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="301e2-139">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-139">Optional.</span></span> <span data-ttu-id="301e2-140">Приведенная (нынешняя) стоимость, или общая сумма, равноценная на данный момент серии будущих выплат.</span><span class="sxs-lookup"><span data-stu-id="301e2-140">The present value (or lump sum) of a series of future payments.</span></span> <span data-ttu-id="301e2-141">Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</span><span class="sxs-lookup"><span data-stu-id="301e2-141">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span> <span data-ttu-id="301e2-142">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="301e2-142">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="301e2-143">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-143">Optional.</span></span> <span data-ttu-id="301e2-144">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="301e2-144">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="301e2-145">Этот аргумент должен равняться либо <see langword="DueDate.EndOfPeriod" />, если выплаты должны производиться в конце периода, либо <see langword="DueDate.BegOfPeriod" /> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="301e2-145">This argument must be either <see langword="DueDate.EndOfPeriod" /> if payments are due at the end of the payment period, or <see langword="DueDate.BegOfPeriod" /> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="301e2-146">Если этот аргумент опущен, используется <see langword="DueDate.EndOfPeriod" />.</span><span class="sxs-lookup"><span data-stu-id="301e2-146">If omitted, <see langword="DueDate.EndOfPeriod" /> is assumed.</span></span></param>
        <summary><span data-ttu-id="301e2-147">Возвращает значение, указывающее будущее значение аннуитета, рассчитываемого на основе периодических фиксированных выплат и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-147">Returns a value specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="301e2-148">Будущее значение аннуитета, рассчитываемое на основе периодических фиксированных выплат и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-148">The future value of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-149">Аннуитет — это серия фиксированных денежных выплат, сделанных с течением времени.</span><span class="sxs-lookup"><span data-stu-id="301e2-149">An annuity is a series of fixed cash payments made over time.</span></span> <span data-ttu-id="301e2-150">Аннуитет может быть ссудой (например, закладкой на дом) или инвестициями (например, планом экономии на месяц).</span><span class="sxs-lookup"><span data-stu-id="301e2-150">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="301e2-151">Аргументы `Rate` и`NPer` должны вычисляться с использованием периодов выплат, выраженных в одних и тех же единицах.</span><span class="sxs-lookup"><span data-stu-id="301e2-151">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="301e2-152">Например, если `Rate` вычисляется с использованием месяцев, `NPer` необходимо также вычислить его с помощью месяцев.</span><span class="sxs-lookup"><span data-stu-id="301e2-152">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="301e2-153">Для всех аргументов выплачиваемая наличность (например, депозиты на экономию) представлена отрицательными числами; денежные поступления (например, дивидендные чеки) представлены положительными числами.</span><span class="sxs-lookup"><span data-stu-id="301e2-153">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-154">В этом примере `FV` функция возвращает будущее значение инвестиции с учетом процентной ставки, которая начисляется за период (`APR / 12`), общего числа платежей (`TotPmts`), платежа (`Payment`), текущего значения инвестиции (`PVal`) и число, указывающее, выполняется ли оплата в начале или в конце платежного периода (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="301e2-154">This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`).</span></span> <span data-ttu-id="301e2-155">Обратите внимание `Payment` , что, поскольку представляет выплачиваемую денежную оплату, это отрицательное число.</span><span class="sxs-lookup"><span data-stu-id="301e2-155">Note that because `Payment` represents cash paid out, it is a negative number.</span></span>  
  
 [!code-vb[VbVbalrMath#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-156">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-156">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IPmt">
      <MemberSignature Language="C#" Value="public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 IPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPmt (Rate As Double, Per As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member IPmt : double * double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.IPmt (Rate, Per, NPer, PV, FV, Due)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Per" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="301e2-157">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-157">Required.</span></span> <span data-ttu-id="301e2-158">Процентная ставка за период.</span><span class="sxs-lookup"><span data-stu-id="301e2-158">The interest rate per period.</span></span> <span data-ttu-id="301e2-159">Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</span><span class="sxs-lookup"><span data-stu-id="301e2-159">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Per"><span data-ttu-id="301e2-160">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-160">Required.</span></span> <span data-ttu-id="301e2-161">Расчетный период в интервале от 1 до <paramref name="NPer" />.</span><span class="sxs-lookup"><span data-stu-id="301e2-161">The payment period in the range 1 through <paramref name="NPer" />.</span></span></param>
        <param name="NPer"><span data-ttu-id="301e2-162">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-162">Required.</span></span> <span data-ttu-id="301e2-163">Общее количество периодов платежей аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-163">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="301e2-164">Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов выплат будет равно 4 x 12 (или 48).</span><span class="sxs-lookup"><span data-stu-id="301e2-164">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="301e2-165">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-165">Required.</span></span> <span data-ttu-id="301e2-166">Значение, задающее текущую сумму (или значение на сегодняшний день) серии будущих платежей или поступлений.</span><span class="sxs-lookup"><span data-stu-id="301e2-166">The present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="301e2-167">Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</span><span class="sxs-lookup"><span data-stu-id="301e2-167">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="301e2-168">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-168">Optional.</span></span> <span data-ttu-id="301e2-169">Значение, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа.</span><span class="sxs-lookup"><span data-stu-id="301e2-169">The future value or cash balance you want after you've made the final payment.</span></span> <span data-ttu-id="301e2-170">Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты.</span><span class="sxs-lookup"><span data-stu-id="301e2-170">For example, the future value of a loan is $0 because that's its value after the final payment.</span></span> <span data-ttu-id="301e2-171">Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000.</span><span class="sxs-lookup"><span data-stu-id="301e2-171">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="301e2-172">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="301e2-172">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="301e2-173">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-173">Optional.</span></span> <span data-ttu-id="301e2-174">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="301e2-174">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="301e2-175">Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="301e2-175">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="301e2-176">Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</span><span class="sxs-lookup"><span data-stu-id="301e2-176">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="301e2-177">Возвращает значение, определяющее процентный платеж аннуитета, рассчитываемый на основе периодических фиксированных выплат и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-177">Returns a value specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="301e2-178">Процентный платеж аннуитета, рассчитываемый на основе периодических фиксированных выплат и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-178">The interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-179">Аннуитет — это серия фиксированных денежных выплат, сделанных с течением времени.</span><span class="sxs-lookup"><span data-stu-id="301e2-179">An annuity is a series of fixed cash payments made over time.</span></span> <span data-ttu-id="301e2-180">Аннуитет может быть ссудой (например, закладкой на дом) или инвестициями (например, планом экономии на месяц).</span><span class="sxs-lookup"><span data-stu-id="301e2-180">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="301e2-181">Аргументы `Rate` и`NPer` должны вычисляться с использованием периодов выплат, выраженных в одних и тех же единицах.</span><span class="sxs-lookup"><span data-stu-id="301e2-181">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="301e2-182">Например, если `Rate` вычисляется с использованием месяцев, `NPer` необходимо также вычислить его с помощью месяцев.</span><span class="sxs-lookup"><span data-stu-id="301e2-182">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="301e2-183">Для всех аргументов выплачиваемая наличность (например, депозиты на экономию) представлена отрицательными числами; денежные поступления (например, дивидендные чеки) представлены положительными числами.</span><span class="sxs-lookup"><span data-stu-id="301e2-183">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-184">В этом примере `IPmt` функция используется для расчета объема оплаты, когда все платежи имеют одинаковое значение.</span><span class="sxs-lookup"><span data-stu-id="301e2-184">This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value.</span></span> <span data-ttu-id="301e2-185">`APR / 12`Заданные процентные ставки за период (), период оплаты, для которого требуется интересная часть (`Period`), общее число платежей (`TotPmts`), текущее значение или основной субъект ссуды (`PVal`), будущее значение ссуды (`FVal`) и число, которое указывает, является ли платеж оплаченным в начале или в конце платежного периода (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="301e2-185">Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="301e2-186"><paramref name="Per" /> &lt;= 0 или <paramref name="Per" /> &gt; <paramref name="NPer" /></span><span class="sxs-lookup"><span data-stu-id="301e2-186"><paramref name="Per" /> &lt;= 0 or <paramref name="Per" /> &gt; <paramref name="NPer" /></span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-187">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-187">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IRR">
      <MemberSignature Language="C#" Value="public static double IRR (ref double[] ValueArray, double Guess = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 IRR(float64[]&amp; ValueArray, float64 Guess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function IRR (ByRef ValueArray As Double(), Optional Guess As Double = 0.1) As Double" />
      <MemberSignature Language="F#" Value="static member IRR :  * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.IRR (ValueArray, Guess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ValueArray" Type="System.Double[]" RefType="ref" />
        <Parameter Name="Guess" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ValueArray"><span data-ttu-id="301e2-188">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-188">Required.</span></span> <span data-ttu-id="301e2-189">Массив значений типа <see langword="Double" />, определяющий значения денежных операций.</span><span class="sxs-lookup"><span data-stu-id="301e2-189">Array of <see langword="Double" /> specifying cash flow values.</span></span> <span data-ttu-id="301e2-190">Этот массив должен содержать по крайней мере одно отрицательное значение (платеж) и одно положительное значение (поступление).</span><span class="sxs-lookup"><span data-stu-id="301e2-190">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <param name="Guess"><span data-ttu-id="301e2-191">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-191">Optional.</span></span> <span data-ttu-id="301e2-192">Объект, задающий значение, которое будет возвращено функцией <see langword="IRR" />.</span><span class="sxs-lookup"><span data-stu-id="301e2-192">Object specifying value you estimate will be returned by <see langword="IRR" />.</span></span> <span data-ttu-id="301e2-193">Если этот параметр опущен, используется значение <paramref name="Guess" />, равное 0,1 (10 процентам).</span><span class="sxs-lookup"><span data-stu-id="301e2-193">If omitted, <paramref name="Guess" /> is 0.1 (10 percent).</span></span></param>
        <summary><span data-ttu-id="301e2-194">Возвращает значение, определяющее внутреннюю ставку доходности для ряда периодических денежных потоков (платежей и поступлений).</span><span class="sxs-lookup"><span data-stu-id="301e2-194">Returns a value specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></summary>
        <returns><span data-ttu-id="301e2-195">Внутренняя ставка доходности для ряда периодических денежных потоков (платежей и поступлений).</span><span class="sxs-lookup"><span data-stu-id="301e2-195">The internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-196">Внутренняя ставка возврата — это процентная ставка, полученная для инвестиций, состоящих из выплат и поступлений, которые происходят через регулярные интервалы.</span><span class="sxs-lookup"><span data-stu-id="301e2-196">The internal rate of return is the interest rate received for an investment consisting of payments and receipts that occur at regular intervals.</span></span>  
  
 <span data-ttu-id="301e2-197">`IRR` Функция использует порядок значений в массиве для интерпретации порядка выплат и поступлений.</span><span class="sxs-lookup"><span data-stu-id="301e2-197">The `IRR` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="301e2-198">Обязательно введите значения платежей и поступлений в правильном порядке.</span><span class="sxs-lookup"><span data-stu-id="301e2-198">Be sure to enter your payment and receipt values in the correct sequence.</span></span> <span data-ttu-id="301e2-199">Поток денежных средств для каждого периода не обязательно исправлять, так как он предназначен для аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-199">The cash flow for each period does not need to be fixed, as it is for an annuity.</span></span>  
  
 <span data-ttu-id="301e2-200">`IRR`вычисляется по итерации.</span><span class="sxs-lookup"><span data-stu-id="301e2-200">`IRR` is calculated by iteration.</span></span> <span data-ttu-id="301e2-201">Начиная со значения `Guess`, выполняет циклическое вычисление, `IRR` пока результат не будет неточным в пределах 0,00001%.</span><span class="sxs-lookup"><span data-stu-id="301e2-201">Starting with the value of `Guess`, `IRR` cycles through the calculation until the result is accurate to within 0.00001 percent.</span></span> <span data-ttu-id="301e2-202">Если `IRR` не удается найти результат по истечении 20 попыток, происходит сбой.</span><span class="sxs-lookup"><span data-stu-id="301e2-202">If `IRR` cannot find a result after 20 tries, it fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-203">В этом примере `IRR` функция возвращает внутреннюю ставку возврата для ряда из пяти денежных потоков, содержащихся в массиве `Values()`.</span><span class="sxs-lookup"><span data-stu-id="301e2-203">In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`.</span></span> <span data-ttu-id="301e2-204">Первый элемент массива является отрицательным денежным потоком, представляющим затраты на начало бизнеса.</span><span class="sxs-lookup"><span data-stu-id="301e2-204">The first array element is a negative cash flow representing business start-up costs.</span></span> <span data-ttu-id="301e2-205">Оставшиеся четыре денежных потока представляют положительные денежные потоки для последующих четырех лет.</span><span class="sxs-lookup"><span data-stu-id="301e2-205">The remaining four cash flows represent positive cash flows for the subsequent four years.</span></span> <span data-ttu-id="301e2-206">`Guess`Предполагаемая внутренняя скорость возврата.</span><span class="sxs-lookup"><span data-stu-id="301e2-206">`Guess` is the estimated internal rate of return.</span></span>  
  
 [!code-vb[VbVbalrMath#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="301e2-207">Недопустимые значения аргументов массива, или <paramref name="Guess" /> &lt;= –1.</span><span class="sxs-lookup"><span data-stu-id="301e2-207">Array argument values are invalid or <paramref name="Guess" /> &lt;= -1.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-208">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-208">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MIRR">
      <MemberSignature Language="C#" Value="public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 MIRR(float64[]&amp; ValueArray, float64 FinanceRate, float64 ReinvestRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function MIRR (ByRef ValueArray As Double(), FinanceRate As Double, ReinvestRate As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MIRR(cli::array &lt;double&gt; ^ % ValueArray, double FinanceRate, double ReinvestRate);" />
      <MemberSignature Language="F#" Value="static member MIRR :  * double * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.MIRR (ValueArray, FinanceRate, ReinvestRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ValueArray" Type="System.Double[]" RefType="ref" />
        <Parameter Name="FinanceRate" Type="System.Double" />
        <Parameter Name="ReinvestRate" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ValueArray"><span data-ttu-id="301e2-209">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-209">Required.</span></span> <span data-ttu-id="301e2-210">Массив значений типа <see langword="Double" />, определяющий значения денежных операций.</span><span class="sxs-lookup"><span data-stu-id="301e2-210">Array of <see langword="Double" /> specifying cash-flow values.</span></span> <span data-ttu-id="301e2-211">Этот массив должен содержать по крайней мере одно отрицательное значение (платеж) и одно положительное значение (поступление).</span><span class="sxs-lookup"><span data-stu-id="301e2-211">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <param name="FinanceRate"><span data-ttu-id="301e2-212">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-212">Required.</span></span> <span data-ttu-id="301e2-213">Значение, определяющее процентную ставку оплаты как стоимость финансирования.</span><span class="sxs-lookup"><span data-stu-id="301e2-213">The interest rate paid as the cost of financing.</span></span></param>
        <param name="ReinvestRate"><span data-ttu-id="301e2-214">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-214">Required.</span></span> <span data-ttu-id="301e2-215">Значение, определяющее процентную ставку доходов от реинвестирования денежных средств.</span><span class="sxs-lookup"><span data-stu-id="301e2-215">The interest rate received on gains from cash reinvestment.</span></span></param>
        <summary><span data-ttu-id="301e2-216">Возвращает значение, определяющее внутреннюю ставку доходности для ряда периодических денежных потоков (платежей и поступлений).</span><span class="sxs-lookup"><span data-stu-id="301e2-216">Returns a value specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></summary>
        <returns><span data-ttu-id="301e2-217">Измененная внутренняя ставка доходности для ряда периодических денежных потоков (платежей и поступлений).</span><span class="sxs-lookup"><span data-stu-id="301e2-217">The modified internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-218">Измененная внутренняя частота возврата — это внутренняя ставка возврата, когда платежи и поступления изменяются по разным тарифам.</span><span class="sxs-lookup"><span data-stu-id="301e2-218">The modified internal rate of return is the internal rate of return when payments and receipts are financed at different rates.</span></span> <span data-ttu-id="301e2-219">Функция учитывает как стоимость инвестиций (`FinanceRate`), так и процентную ставку, полученную при реинвестировании денежных средств`ReinvestRate`(). `MIRR`</span><span class="sxs-lookup"><span data-stu-id="301e2-219">The `MIRR` function takes into account both the cost of the investment (`FinanceRate`) and the interest rate received on reinvestment of cash (`ReinvestRate`).</span></span>  
  
 <span data-ttu-id="301e2-220">Аргументы `FinanceRate` и`ReinvestRate` представляют собой процентные значения, выраженные в виде десятичных значений.</span><span class="sxs-lookup"><span data-stu-id="301e2-220">The `FinanceRate` and `ReinvestRate` arguments are percentages expressed as decimal values.</span></span> <span data-ttu-id="301e2-221">Например, 12 процентов выражается как 0,12.</span><span class="sxs-lookup"><span data-stu-id="301e2-221">For example, 12 percent is expressed as 0.12.</span></span>  
  
 <span data-ttu-id="301e2-222">`MIRR` Функция использует порядок значений в массиве для интерпретации порядка выплат и поступлений.</span><span class="sxs-lookup"><span data-stu-id="301e2-222">The `MIRR` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="301e2-223">Обязательно введите значения платежей и поступлений в правильном порядке.</span><span class="sxs-lookup"><span data-stu-id="301e2-223">Be sure to enter your payment and receipt values in the correct sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-224">В этом примере `MIRR` функция используется для возврата измененной внутренней ставки возврата для ряда денежных потоков, содержащихся в массиве `Values()`.</span><span class="sxs-lookup"><span data-stu-id="301e2-224">This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`.</span></span> <span data-ttu-id="301e2-225">`LoanAPR`представляет интерес финансирования и `InvAPR` представляет процентную ставку, полученную на реинвестиций.</span><span class="sxs-lookup"><span data-stu-id="301e2-225">`LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.</span></span>  
  
 [!code-vb[VbVbalrMath#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="301e2-226">Ранг <paramref name="ValueArray" /> не равен 1, <paramref name="FinanceRate" /> =-1, или <paramref name="ReinvestRate" /> =-1</span><span class="sxs-lookup"><span data-stu-id="301e2-226">Rank of <paramref name="ValueArray" /> does not equal 1, <paramref name="FinanceRate" /> = -1, or <paramref name="ReinvestRate" /> = -1</span></span></exception>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="301e2-227">Произошло деление на ноль.</span><span class="sxs-lookup"><span data-stu-id="301e2-227">Division by zero has occurred.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.DivideByZeroException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-228">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-228">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NPer">
      <MemberSignature Language="C#" Value="public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 NPer(float64 Rate, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPer (Rate As Double, Pmt As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member NPer : double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.NPer (Rate, Pmt, PV, FV, Due)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="301e2-229">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-229">Required.</span></span> <span data-ttu-id="301e2-230">Процентная ставка за период.</span><span class="sxs-lookup"><span data-stu-id="301e2-230">The interest rate per period.</span></span> <span data-ttu-id="301e2-231">Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</span><span class="sxs-lookup"><span data-stu-id="301e2-231">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Pmt"><span data-ttu-id="301e2-232">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-232">Required.</span></span> <span data-ttu-id="301e2-233">Платеж за каждый период.</span><span class="sxs-lookup"><span data-stu-id="301e2-233">The payment to be made each period.</span></span> <span data-ttu-id="301e2-234">Обычно платежи содержат основную сумму и проценты, которые не изменяются на протяжении периода действия аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-234">Payments usually contain principal and interest that does not change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="301e2-235">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-235">Required.</span></span> <span data-ttu-id="301e2-236">Значение, задающее текущую сумму (или значение на сегодняшний день) серии будущих платежей или поступлений.</span><span class="sxs-lookup"><span data-stu-id="301e2-236">The present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="301e2-237">Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</span><span class="sxs-lookup"><span data-stu-id="301e2-237">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="301e2-238">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-238">Optional.</span></span> <span data-ttu-id="301e2-239">Значение, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа.</span><span class="sxs-lookup"><span data-stu-id="301e2-239">The future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="301e2-240">Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты.</span><span class="sxs-lookup"><span data-stu-id="301e2-240">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="301e2-241">Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000.</span><span class="sxs-lookup"><span data-stu-id="301e2-241">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="301e2-242">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="301e2-242">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="301e2-243">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-243">Optional.</span></span> <span data-ttu-id="301e2-244">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="301e2-244">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="301e2-245">Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="301e2-245">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="301e2-246">Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</span><span class="sxs-lookup"><span data-stu-id="301e2-246">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="301e2-247">Возвращает значение, определяющее число периодов выплат аннуитета, рассчитываемое на основе периодических фиксированных платежей и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-247">Returns a value specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="301e2-248">Число периодов выплат аннуитета, рассчитываемое на основе периодических фиксированных платежей и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-248">The number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-249">Аннуитет — это серия фиксированных денежных выплат, сделанных за определенный период времени.</span><span class="sxs-lookup"><span data-stu-id="301e2-249">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="301e2-250">Аннуитет может быть ссудой (например, закладкой на дом) или инвестициями (например, планом экономии на месяц).</span><span class="sxs-lookup"><span data-stu-id="301e2-250">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="301e2-251">Для всех аргументов выплачиваемая наличность (например, депозиты на экономию) представлена отрицательными числами; денежные поступления (например, дивидендные чеки) представлены положительными числами.</span><span class="sxs-lookup"><span data-stu-id="301e2-251">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-252">В этом примере `NPer` функция возвращает количество периодов, в течение которых необходимо оплатить платежи, значение которых содержится в `PVal`.</span><span class="sxs-lookup"><span data-stu-id="301e2-252">This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`.</span></span> <span data-ttu-id="301e2-253">Кроме того, здесь указаны процентная ставка за период`APR / 12`(), платеж (`Payment`), будущее значение ссуды (`FVal`) и число, которое указывает, является ли платеж причиной начала или окончания периода оплаты (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="301e2-253">Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="301e2-254"><paramref name="Rate" /> = 0 и <paramref name="Pmt" /> = 0</span><span class="sxs-lookup"><span data-stu-id="301e2-254"><paramref name="Rate" /> = 0 and <paramref name="Pmt" /> = 0</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-255">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-255">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NPV">
      <MemberSignature Language="C#" Value="public static double NPV (double Rate, ref double[] ValueArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 NPV(float64 Rate, float64[]&amp; ValueArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPV (Rate As Double, ByRef ValueArray As Double()) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double NPV(double Rate, cli::array &lt;double&gt; ^ % ValueArray);" />
      <MemberSignature Language="F#" Value="static member NPV : double *  -&gt; double" Usage="Microsoft.VisualBasic.Financial.NPV (Rate, ValueArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="ValueArray" Type="System.Double[]" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="301e2-256">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-256">Required.</span></span> <span data-ttu-id="301e2-257">Представленное в виде десятичного числа значение, задающее размер учетной ставки за период времени.</span><span class="sxs-lookup"><span data-stu-id="301e2-257">The discount rate over the length of the period, expressed as a decimal.</span></span></param>
        <param name="ValueArray"><span data-ttu-id="301e2-258">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-258">Required.</span></span> <span data-ttu-id="301e2-259">Массив значений типа <see langword="Double" />, определяющий значения денежных операций.</span><span class="sxs-lookup"><span data-stu-id="301e2-259">Array of <see langword="Double" /> specifying cash flow values.</span></span> <span data-ttu-id="301e2-260">Этот массив должен содержать по крайней мере одно отрицательное значение (платеж) и одно положительное значение (поступление).</span><span class="sxs-lookup"><span data-stu-id="301e2-260">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <summary><span data-ttu-id="301e2-261">Возвращает значение, определяющее величину чистой приведенной стоимости инвестирования на основе ряда периодических денежных потоков (платежей и поступлений) и учетной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-261">Returns a value specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</span></span></summary>
        <returns><span data-ttu-id="301e2-262">Значение, определяющее величину чистой приведенной стоимости инвестирования на основе ряда периодических денежных потоков (платежей и поступлений) и учетной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-262">The net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-263">Чистая текущая стоимость инвестиции — текущее значение будущих выплат и поступлений.</span><span class="sxs-lookup"><span data-stu-id="301e2-263">The net present value of an investment is the current value of a future series of payments and receipts.</span></span>  
  
 <span data-ttu-id="301e2-264">`NPV` Функция использует порядок значений в массиве для интерпретации порядка выплат и поступлений.</span><span class="sxs-lookup"><span data-stu-id="301e2-264">The `NPV` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="301e2-265">Обязательно введите значения платежей и поступлений в правильном порядке.</span><span class="sxs-lookup"><span data-stu-id="301e2-265">Be sure to enter your payment and receipt values in the correct sequence.</span></span>  
  
 <span data-ttu-id="301e2-266">`NPV` Инвестиции начинаются на один период до даты первого значения потока денежных средств и заканчиваются последним значением потока денежных средств в массиве.</span><span class="sxs-lookup"><span data-stu-id="301e2-266">The `NPV` investment begins one period before the date of the first cash flow value and ends with the last cash flow value in the array.</span></span>  
  
 <span data-ttu-id="301e2-267">Вычисление чистой представленной величины основано на будущих денежных потоках.</span><span class="sxs-lookup"><span data-stu-id="301e2-267">The net present value calculation is based on future cash flows.</span></span> <span data-ttu-id="301e2-268">Если первый денежный поток происходит в начале первого периода, то первое значение должно быть добавлено к значению, возвращаемому `NPV` , и не должно включаться в `ValueArray`значения потока денежных средств.</span><span class="sxs-lookup"><span data-stu-id="301e2-268">If your first cash flow occurs at the beginning of the first period, the first value must be added to the value returned by `NPV` and must not be included in the cash flow values of `ValueArray`.</span></span>  
  
 <span data-ttu-id="301e2-269">Функция аналогична `PV` функции (текущее `PV` значение), за исключением того, что функция позволяет денежным потокам начинаться либо в конце, либо в начале периода. `NPV`</span><span class="sxs-lookup"><span data-stu-id="301e2-269">The `NPV` function is similar to the `PV` function (present value) except that the `PV` function allows cash flows to begin either at the end or the beginning of a period.</span></span> <span data-ttu-id="301e2-270">В отличие от значений `NPV` переменных денежных потоков `PV` , денежные потоки должны быть фиксированы на протяжении всего инвестиций.</span><span class="sxs-lookup"><span data-stu-id="301e2-270">Unlike the variable `NPV` cash flow values, `PV` cash flows must be fixed throughout the investment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-271">В этом примере `NPV` функция используется для возврата чистой текущей величины для ряда денежных потоков, содержащихся в массиве `values()`.</span><span class="sxs-lookup"><span data-stu-id="301e2-271">This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`.</span></span> <span data-ttu-id="301e2-272">Возвращаемое значение, хранящееся в `FixedRetRate`, представляет фиксированную внутреннюю скорость возврата.</span><span class="sxs-lookup"><span data-stu-id="301e2-272">The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.</span></span>  
  
 [!code-vb[VbVbalrMath#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="301e2-273">Значение <paramref name="ValueArray" /> равно <see langword="Nothing" />, ранг <paramref name="ValueArray" /> &lt;&gt; 1, или <paramref name="Rate" /> = –1</span><span class="sxs-lookup"><span data-stu-id="301e2-273"><paramref name="ValueArray" /> is <see langword="Nothing" />, rank of <paramref name="ValueArray" /> &lt;&gt; 1, or <paramref name="Rate" /> = -1</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-274">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-274">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Pmt">
      <MemberSignature Language="C#" Value="public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Pmt(float64 Rate, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pmt (Rate As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member Pmt : double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.Pmt (Rate, NPer, PV, FV, Due)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="301e2-275">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-275">Required.</span></span> <span data-ttu-id="301e2-276">Процентная ставка за период.</span><span class="sxs-lookup"><span data-stu-id="301e2-276">The interest rate per period.</span></span> <span data-ttu-id="301e2-277">Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</span><span class="sxs-lookup"><span data-stu-id="301e2-277">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="301e2-278">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-278">Required.</span></span> <span data-ttu-id="301e2-279">Общее количество периодов платежей аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-279">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="301e2-280">Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов выплат будет равно 4 \* 12 (или 48).</span><span class="sxs-lookup"><span data-stu-id="301e2-280">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="301e2-281">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-281">Required.</span></span> <span data-ttu-id="301e2-282">Значение, определяющее текущую стоимость (или общую сумму) платежей, которые должны быть уплачены в будущем.</span><span class="sxs-lookup"><span data-stu-id="301e2-282">The present value (or lump sum) that a series of payments to be paid in the future is worth now.</span></span> <span data-ttu-id="301e2-283">Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</span><span class="sxs-lookup"><span data-stu-id="301e2-283">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="301e2-284">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-284">Optional.</span></span> <span data-ttu-id="301e2-285">Значение, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа.</span><span class="sxs-lookup"><span data-stu-id="301e2-285">The future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="301e2-286">Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты.</span><span class="sxs-lookup"><span data-stu-id="301e2-286">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="301e2-287">Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000.</span><span class="sxs-lookup"><span data-stu-id="301e2-287">However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="301e2-288">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="301e2-288">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="301e2-289">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-289">Optional.</span></span> <span data-ttu-id="301e2-290">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="301e2-290">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="301e2-291">Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="301e2-291">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="301e2-292">Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</span><span class="sxs-lookup"><span data-stu-id="301e2-292">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="301e2-293">Возвращает значение, определяющее платеж по аннуитету на основе периодических фиксированных платежей и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-293">Returns a value specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="301e2-294">Платеж по аннуитету на основе периодических фиксированных платежей и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-294">The payment for an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-295">Аннуитет — это серия фиксированных денежных выплат, сделанных в течение определенного периода времени.</span><span class="sxs-lookup"><span data-stu-id="301e2-295">An annuity is a series of fixed cash payments made during a period of time.</span></span> <span data-ttu-id="301e2-296">Аннуитет может быть ссудой (например, закладкой на дом) или инвестициями (например, планом экономии на месяц).</span><span class="sxs-lookup"><span data-stu-id="301e2-296">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="301e2-297">Аргументы `Rate` и`NPer` должны вычисляться с использованием периодов выплат, выраженных в одних и тех же единицах.</span><span class="sxs-lookup"><span data-stu-id="301e2-297">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="301e2-298">Например, если `Rate` вычисляется с использованием месяцев, `NPer` необходимо также вычислить его с помощью месяцев.</span><span class="sxs-lookup"><span data-stu-id="301e2-298">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="301e2-299">Для всех аргументов выплачиваемая наличность (например, депозиты на экономию) представлена отрицательными числами; денежные поступления (например, дивидендные чеки) представлены положительными числами.</span><span class="sxs-lookup"><span data-stu-id="301e2-299">For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-300">В этом примере `Pmt` функция используется для возврата ежемесячного платежа за кредит в течение фиксированного периода.</span><span class="sxs-lookup"><span data-stu-id="301e2-300">This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period.</span></span> <span data-ttu-id="301e2-301">Это процентная ставка за период (`APR / 12`), общее количество платежей (`TotPmts`), текущее значение`PVal`ссуды (), будущее значение ссуды`FVal`() и число, указывающее, является ли Оплата происходит в начале или в конце платежного периода`(PayType).`</span><span class="sxs-lookup"><span data-stu-id="301e2-301">Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`</span></span>  
  
 [!code-vb[VbVbalrMath#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="301e2-302"><paramref name="NPer" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="301e2-302"><paramref name="NPer" /> = 0.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-303">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-303">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PPmt">
      <MemberSignature Language="C#" Value="public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function PPmt (Rate As Double, Per As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member PPmt : double * double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.PPmt (Rate, Per, NPer, PV, FV, Due)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Per" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="301e2-304">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-304">Required.</span></span> <span data-ttu-id="301e2-305">Процентная ставка за период.</span><span class="sxs-lookup"><span data-stu-id="301e2-305">The interest rate per period.</span></span> <span data-ttu-id="301e2-306">Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</span><span class="sxs-lookup"><span data-stu-id="301e2-306">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Per"><span data-ttu-id="301e2-307">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-307">Required.</span></span> <span data-ttu-id="301e2-308">Расчетный период в интервале от 1 до <paramref name="NPer" />.</span><span class="sxs-lookup"><span data-stu-id="301e2-308">The payment period in the range 1 through <paramref name="NPer" />.</span></span></param>
        <param name="NPer"><span data-ttu-id="301e2-309">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-309">Required.</span></span> <span data-ttu-id="301e2-310">Общее количество периодов платежей аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-310">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="301e2-311">Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов выплат будет равно 4 x 12 (или 48).</span><span class="sxs-lookup"><span data-stu-id="301e2-311">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="301e2-312">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-312">Required.</span></span> <span data-ttu-id="301e2-313">Текущее значение из серии будущих платежей или поступлений.</span><span class="sxs-lookup"><span data-stu-id="301e2-313">The current value of a series of future payments or receipts.</span></span> <span data-ttu-id="301e2-314">Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</span><span class="sxs-lookup"><span data-stu-id="301e2-314">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="301e2-315">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-315">Optional.</span></span> <span data-ttu-id="301e2-316">Значение, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа.</span><span class="sxs-lookup"><span data-stu-id="301e2-316">The future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="301e2-317">Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты.</span><span class="sxs-lookup"><span data-stu-id="301e2-317">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="301e2-318">Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000.</span><span class="sxs-lookup"><span data-stu-id="301e2-318">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="301e2-319">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="301e2-319">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="301e2-320">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-320">Optional.</span></span> <span data-ttu-id="301e2-321">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="301e2-321">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="301e2-322">Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="301e2-322">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="301e2-323">Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</span><span class="sxs-lookup"><span data-stu-id="301e2-323">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="301e2-324">Возвращает значение, определяющее главный платеж аннуитета, рассчитываемый на основе периодических фиксированных выплат и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-324">Returns a value specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="301e2-325">Главный платеж аннуитета, рассчитываемый на основе периодических фиксированных выплат и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-325">The principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-326">Аннуитет — это серия фиксированных денежных выплат, сделанных за определенный период времени.</span><span class="sxs-lookup"><span data-stu-id="301e2-326">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="301e2-327">Аннуитет может быть ссудой (например, закладкой на дом) или инвестициями (например, планом экономии на месяц).</span><span class="sxs-lookup"><span data-stu-id="301e2-327">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="301e2-328">Аргументы `Rate` и`NPer` должны вычисляться с использованием периодов выплат, выраженных в одних и тех же единицах.</span><span class="sxs-lookup"><span data-stu-id="301e2-328">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="301e2-329">Например, если `Rate` вычисляется с использованием месяцев, `NPer` необходимо также вычислить его с помощью месяцев.</span><span class="sxs-lookup"><span data-stu-id="301e2-329">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="301e2-330">Для всех аргументов выплачиваемая наличность (например, депозиты на экономию) представлена отрицательными числами; денежные поступления (например, дивидендные чеки) представлены положительными числами.</span><span class="sxs-lookup"><span data-stu-id="301e2-330">For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-331">В этом примере `PPmt` функция используется для вычисления того, какая часть платежа за определенный период является основным, если все платежи имеют одинаковое значение.</span><span class="sxs-lookup"><span data-stu-id="301e2-331">This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value.</span></span> <span data-ttu-id="301e2-332">`APR / 12`Это процентная ставка за период (), период платежа, для которого требуется основная часть (`Period`), общее количество платежей (`TotPmts`), текущее значение или основной субъект ссуды (`PVal`), будущее значение ссуды (`FVal`) и число, которое указывает, является ли платеж оплаченным в начале или в конце платежного периода (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="301e2-332">Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="301e2-333"><paramref name="Per" /> &lt;=0 или <paramref name="Per" /> &gt; <paramref name="NPer" />.</span><span class="sxs-lookup"><span data-stu-id="301e2-333"><paramref name="Per" /> &lt;=0 or <paramref name="Per" /> &gt; <paramref name="NPer" />.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-334">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-334">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PV">
      <MemberSignature Language="C#" Value="public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PV(float64 Rate, float64 NPer, float64 Pmt, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function PV (Rate As Double, NPer As Double, Pmt As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member PV : double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.PV (Rate, NPer, Pmt, FV, Due)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="301e2-335">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-335">Required.</span></span> <span data-ttu-id="301e2-336">Процентная ставка за период.</span><span class="sxs-lookup"><span data-stu-id="301e2-336">The interest rate per period.</span></span> <span data-ttu-id="301e2-337">Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</span><span class="sxs-lookup"><span data-stu-id="301e2-337">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="301e2-338">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-338">Required.</span></span> <span data-ttu-id="301e2-339">Общее количество периодов платежей аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-339">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="301e2-340">Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет количество периодов выплат будет равно 4 \* 12 (или 48).</span><span class="sxs-lookup"><span data-stu-id="301e2-340">For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="301e2-341">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-341">Required.</span></span> <span data-ttu-id="301e2-342">Платеж за каждый период.</span><span class="sxs-lookup"><span data-stu-id="301e2-342">The payment to be made each period.</span></span> <span data-ttu-id="301e2-343">Обычно платежи содержат основную сумму и проценты, которые не изменяются на протяжении периода действия аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-343">Payments usually contain principal and interest that does not change during the life of the annuity.</span></span></param>
        <param name="FV"><span data-ttu-id="301e2-344">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-344">Optional.</span></span> <span data-ttu-id="301e2-345">Значение, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа.</span><span class="sxs-lookup"><span data-stu-id="301e2-345">The future value or cash balance you want after you make the final payment.</span></span> <span data-ttu-id="301e2-346">Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты.</span><span class="sxs-lookup"><span data-stu-id="301e2-346">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="301e2-347">Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000.</span><span class="sxs-lookup"><span data-stu-id="301e2-347">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="301e2-348">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="301e2-348">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="301e2-349">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-349">Optional.</span></span> <span data-ttu-id="301e2-350">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="301e2-350">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="301e2-351">Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="301e2-351">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="301e2-352">Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</span><span class="sxs-lookup"><span data-stu-id="301e2-352">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="301e2-353">Возвращает значение, определяющее текущее значение аннуитета на основе фиксированных периодических платежей и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-353">Returns a value specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="301e2-354">Текущее значение аннуитета на основе фиксированных периодических платежей и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="301e2-354">The present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-355">Аннуитет — это серия фиксированных денежных выплат, сделанных за определенный период времени.</span><span class="sxs-lookup"><span data-stu-id="301e2-355">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="301e2-356">Аннуитет может быть ссудой (например, закладкой на дом) или инвестициями (например, планом экономии на месяц).</span><span class="sxs-lookup"><span data-stu-id="301e2-356">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="301e2-357">Аргументы `Rate` и`NPer` должны вычисляться с использованием периодов выплат, выраженных в одних и тех же единицах.</span><span class="sxs-lookup"><span data-stu-id="301e2-357">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="301e2-358">Например, если `Rate` вычисляется с использованием месяцев, `NPer` необходимо также вычислить его с помощью месяцев.</span><span class="sxs-lookup"><span data-stu-id="301e2-358">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="301e2-359">Для всех аргументов выплачиваемая наличность (например, депозиты на экономию) представлена отрицательными числами; денежные поступления (например, дивидендные чеки) представлены положительными числами.</span><span class="sxs-lookup"><span data-stu-id="301e2-359">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-360">В этом примере `PV` функция возвращает текущее значение $1 000 000 ренты, которое будет предоставлять $50 000 в течение следующих 20 лет.</span><span class="sxs-lookup"><span data-stu-id="301e2-360">In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years.</span></span> <span data-ttu-id="301e2-361">Указаны ожидаемая годовая процентная ставка`APR`(), общее число выплат (`TotPmts`), сумма каждого платежа (`YrIncome`), общее будущее значение инвестиции (`FVal`) и число, указывающее, все ли Оплата выполняется в начале или в конце платежного периода (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="301e2-361">Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`).</span></span> <span data-ttu-id="301e2-362">Обратите `YrIncome` внимание, что является отрицательным числом, так как оно представляет оплату денежных средств по аннуитету каждый год.</span><span class="sxs-lookup"><span data-stu-id="301e2-362">Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.</span></span>  
  
 [!code-vb[VbVbalrMath#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-363">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-363">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Rate(float64 NPer, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due, float64 Guess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rate (NPer As Double, Pmt As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod, Optional Guess As Double = 0.1) As Double" />
      <MemberSignature Language="F#" Value="static member Rate : double * double * double * double * Microsoft.VisualBasic.DueDate * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.Rate (NPer, Pmt, PV, FV, Due, Guess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
        <Parameter Name="Guess" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="NPer"><span data-ttu-id="301e2-364">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-364">Required.</span></span> <span data-ttu-id="301e2-365">Общее количество периодов платежей аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-365">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="301e2-366">Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов оплаты будет равно 4 x 12 (или 48).</span><span class="sxs-lookup"><span data-stu-id="301e2-366">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 \* 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="301e2-367">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-367">Required.</span></span> <span data-ttu-id="301e2-368">Платеж за каждый период.</span><span class="sxs-lookup"><span data-stu-id="301e2-368">The payment to be made each period.</span></span> <span data-ttu-id="301e2-369">Обычно платежи содержат основную сумму и проценты, которые не изменяются на протяжении периода действия аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-369">Payments usually contain principal and interest that doesn't change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="301e2-370">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-370">Required.</span></span> <span data-ttu-id="301e2-371">Значение, задающее текущую сумму (или значение на сегодняшний день) серии будущих платежей или поступлений.</span><span class="sxs-lookup"><span data-stu-id="301e2-371">The present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="301e2-372">Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</span><span class="sxs-lookup"><span data-stu-id="301e2-372">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="301e2-373">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-373">Optional.</span></span> <span data-ttu-id="301e2-374">Значение, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа.</span><span class="sxs-lookup"><span data-stu-id="301e2-374">The future value or cash balance you want after you make the final payment.</span></span> <span data-ttu-id="301e2-375">Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты.</span><span class="sxs-lookup"><span data-stu-id="301e2-375">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="301e2-376">Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000.</span><span class="sxs-lookup"><span data-stu-id="301e2-376">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="301e2-377">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="301e2-377">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="301e2-378">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-378">Optional.</span></span> <span data-ttu-id="301e2-379">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="301e2-379">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="301e2-380">Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="301e2-380">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="301e2-381">Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</span><span class="sxs-lookup"><span data-stu-id="301e2-381">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <param name="Guess"><span data-ttu-id="301e2-382">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="301e2-382">Optional.</span></span> <span data-ttu-id="301e2-383">Оцениваемое значение, возвращаемое функцией <see langword="Rate" />.</span><span class="sxs-lookup"><span data-stu-id="301e2-383">The value you estimate is returned by <see langword="Rate" />.</span></span> <span data-ttu-id="301e2-384">Если этот параметр опущен, используется значение <paramref name="Guess" />, равное 0,1 (10 процентам).</span><span class="sxs-lookup"><span data-stu-id="301e2-384">If omitted, <paramref name="Guess" /> is 0.1 (10 percent).</span></span></param>
        <summary><span data-ttu-id="301e2-385">Возвращает значение, определяющее процентную ставку за период для аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-385">Returns a value specifying the interest rate per period for an annuity.</span></span></summary>
        <returns><span data-ttu-id="301e2-386">Процентная ставка за период для аннуитета.</span><span class="sxs-lookup"><span data-stu-id="301e2-386">The interest rate per period for an annuity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-387">Аннуитет — это серия фиксированных денежных выплат, сделанных за определенный период времени.</span><span class="sxs-lookup"><span data-stu-id="301e2-387">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="301e2-388">Аннуитет может быть ссудой (например, закладкой на дом) или инвестициями (например, планом экономии на месяц).</span><span class="sxs-lookup"><span data-stu-id="301e2-388">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="301e2-389">Для всех аргументов выплачиваемая наличность (например, депозиты на экономию) представлена отрицательными числами; денежные поступления (например, дивидендные чеки) представлены положительными числами.</span><span class="sxs-lookup"><span data-stu-id="301e2-389">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
 <span data-ttu-id="301e2-390">`Rate`вычисляется по итерации.</span><span class="sxs-lookup"><span data-stu-id="301e2-390">`Rate` is calculated by iteration.</span></span> <span data-ttu-id="301e2-391">Начиная со значения `Guess`, выполняет циклическое вычисление, `Rate` пока результат не будет неточным в пределах 0,00001%.</span><span class="sxs-lookup"><span data-stu-id="301e2-391">Starting with the value of `Guess`, `Rate` cycles through the calculation until the result is accurate to within 0.00001 percent.</span></span> <span data-ttu-id="301e2-392">Если `Rate` не удается найти результат по истечении 20 попыток, происходит сбой.</span><span class="sxs-lookup"><span data-stu-id="301e2-392">If `Rate` cannot find a result after 20 tries, it fails.</span></span> <span data-ttu-id="301e2-393">Если предположение составляет 10 процентов и `Rate` завершается сбоем, попробуйте использовать другое `Guess`значение для.</span><span class="sxs-lookup"><span data-stu-id="301e2-393">If your guess is 10 percent and `Rate` fails, try a different value for `Guess`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-394">В этом примере `Rate` функция используется для вычисления процентной ставки по ссуде с учетом общего числа платежей (`TotPmts`), суммы платежа (`Payment`), текущего значения или участника ссуды (`PVal`), будущего значение ссуды (`FVal`), число, указывающее, является ли оплата датой начала или окончания периода выплат (`PayType`), и приближением ожидаемой процентной ставки (`Guess`).</span><span class="sxs-lookup"><span data-stu-id="301e2-394">This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).</span></span>  
  
 [!code-vb[VbVbalrMath#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="301e2-395"><paramref name="NPer" /> &lt;= 0.</span><span class="sxs-lookup"><span data-stu-id="301e2-395"><paramref name="NPer" /> &lt;= 0.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-396">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-396">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SLN">
      <MemberSignature Language="C#" Value="public static double SLN (double Cost, double Salvage, double Life);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 SLN(float64 Cost, float64 Salvage, float64 Life) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SLN (Cost As Double, Salvage As Double, Life As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SLN(double Cost, double Salvage, double Life);" />
      <MemberSignature Language="F#" Value="static member SLN : double * double * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.SLN (Cost, Salvage, Life)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="301e2-397">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-397">Required.</span></span> <span data-ttu-id="301e2-398">Начальная стоимость актива.</span><span class="sxs-lookup"><span data-stu-id="301e2-398">The initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="301e2-399">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-399">Required.</span></span> <span data-ttu-id="301e2-400">Стоимость актива на момент окончания срока его эксплуатации.</span><span class="sxs-lookup"><span data-stu-id="301e2-400">The value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="301e2-401">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-401">Required.</span></span> <span data-ttu-id="301e2-402">Срок эксплуатации актива.</span><span class="sxs-lookup"><span data-stu-id="301e2-402">The length of the useful life of the asset.</span></span></param>
        <summary><span data-ttu-id="301e2-403">Возвращает значение, определяющее равномерную амортизацию актива за один период времени.</span><span class="sxs-lookup"><span data-stu-id="301e2-403">Returns a value specifying the straight-line depreciation of an asset for a single period.</span></span></summary>
        <returns><span data-ttu-id="301e2-404">Равномерная амортизация актива за один период времени.</span><span class="sxs-lookup"><span data-stu-id="301e2-404">The straight-line depreciation of an asset for a single period.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-405">Период амортизации должен быть выражен в той же единице, что `Life` и аргумент.</span><span class="sxs-lookup"><span data-stu-id="301e2-405">The depreciation period must be expressed in the same unit as the `Life` argument.</span></span> <span data-ttu-id="301e2-406">Все аргументы должны быть положительными числами.</span><span class="sxs-lookup"><span data-stu-id="301e2-406">All arguments must be positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-407">В этом примере `SLN` функция используется для возврата линейной амортизации актива за один период с учетом первоначальной стоимости ресурса (`InitCost`), остаточной стоимости в конце полезного жизненного цикла актива (`SalvageVal`) и общего срока ресурс в годах (`LifeTime`).</span><span class="sxs-lookup"><span data-stu-id="301e2-407">This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="301e2-408"><paramref name="Life" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="301e2-408"><paramref name="Life" /> = 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-409">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-409">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SYD">
      <MemberSignature Language="C#" Value="public static double SYD (double Cost, double Salvage, double Life, double Period);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 SYD(float64 Cost, float64 Salvage, float64 Life, float64 Period) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SYD (Cost As Double, Salvage As Double, Life As Double, Period As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SYD(double Cost, double Salvage, double Life, double Period);" />
      <MemberSignature Language="F#" Value="static member SYD : double * double * double * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.SYD (Cost, Salvage, Life, Period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
        <Parameter Name="Period" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="301e2-410">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-410">Required.</span></span> <span data-ttu-id="301e2-411">Начальная стоимость актива.</span><span class="sxs-lookup"><span data-stu-id="301e2-411">The initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="301e2-412">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-412">Required.</span></span> <span data-ttu-id="301e2-413">Стоимость актива на момент окончания срока его эксплуатации.</span><span class="sxs-lookup"><span data-stu-id="301e2-413">The value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="301e2-414">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-414">Required.</span></span> <span data-ttu-id="301e2-415">Срок эксплуатации актива.</span><span class="sxs-lookup"><span data-stu-id="301e2-415">The length of the useful life of the asset.</span></span></param>
        <param name="Period"><span data-ttu-id="301e2-416">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="301e2-416">Required.</span></span> <span data-ttu-id="301e2-417">Период расчета амортизации актива.</span><span class="sxs-lookup"><span data-stu-id="301e2-417">The period for which asset depreciation is calculated.</span></span></param>
        <summary><span data-ttu-id="301e2-418">Возвращает значение, определяющее величину ускоренной амортизации актива за указанный период времени.</span><span class="sxs-lookup"><span data-stu-id="301e2-418">Returns a value specifying the sum-of-years digits depreciation of an asset for a specified period.</span></span></summary>
        <returns><span data-ttu-id="301e2-419">Величина ускоренной амортизации актива за указанный период времени.</span><span class="sxs-lookup"><span data-stu-id="301e2-419">The sum-of-years digits depreciation of an asset for a specified period.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="301e2-420">Аргументы `Life` и`Period` должны быть выражены в одних и тех же единицах.</span><span class="sxs-lookup"><span data-stu-id="301e2-420">The `Life` and `Period` arguments must be expressed in the same units.</span></span> <span data-ttu-id="301e2-421">Например, если `Life` указано в месяцах, `Period` необходимо также указать в месяцах.</span><span class="sxs-lookup"><span data-stu-id="301e2-421">For example, if `Life` is given in months, `Period` must also be given in months.</span></span> <span data-ttu-id="301e2-422">Все аргументы должны быть положительными числами.</span><span class="sxs-lookup"><span data-stu-id="301e2-422">All arguments must be positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="301e2-423">В этом примере `SYD` функция используется для возврата амортизации актива за указанный период с учетом начальной стоимости ресурса (`InitCost`), остаточной стоимости в конце полезного жизненного цикла актива (`SalvageVal`) и общего времени существования актива в years`LifeTime`().</span><span class="sxs-lookup"><span data-stu-id="301e2-423">This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="301e2-424"><paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" />, или <paramref name="Period" /> &lt;= 0.</span><span class="sxs-lookup"><span data-stu-id="301e2-424"><paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" />, or <paramref name="Period" /> &lt;=0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/financial-summary.md"><span data-ttu-id="301e2-425">Сводка по финансовым функциям</span><span class="sxs-lookup"><span data-stu-id="301e2-425">Financial Summary</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
