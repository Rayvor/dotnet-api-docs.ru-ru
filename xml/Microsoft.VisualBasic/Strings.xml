<Type Name="Strings" FullName="Microsoft.VisualBasic.Strings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d528e02921db08e62ef6a1e333f61d5bd469755c" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75156103" /></Metadata><TypeSignature Language="C#" Value="public sealed class Strings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Strings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Strings" />
  <TypeSignature Language="VB.NET" Value="Public Module Strings" />
  <TypeSignature Language="C++ CLI" Value="public ref class Strings sealed" />
  <TypeSignature Language="F#" Value="type Strings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
    <AssemblyVersion>10.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netcore-3.1">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="909a5-101">В модуле <see langword="Strings" /> содержатся процедуры, используемые для выполнения операций над строками.</span><span class="sxs-lookup"><span data-stu-id="909a5-101">The <see langword="Strings" /> module contains procedures used to perform string operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-102">Этот модуль поддерживает ключевые слова языка Visual Basic и элементы библиотеки времени выполнения, которые обрабатывают строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-102">This module supports the Visual Basic language keywords and run-time library members that manipulate strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-103">В следующем примере показано, как разделить строку в своих пробелах.</span><span class="sxs-lookup"><span data-stu-id="909a5-103">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-104">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-104">String Manipulation Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="909a5-105">Ключевые слова (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="909a5-106">Visual Basic элементов библиотеки времени выполнения</span><span class="sxs-lookup"><span data-stu-id="909a5-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Asc">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="909a5-107">Возвращает целочисленное значение, представляющее код заданного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-107">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Asc(char String) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asc (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(char String);" />
      <MemberSignature Language="F#" Value="static member Asc : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.Asc String" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(char String) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="909a5-108">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-108">Required.</span></span> <span data-ttu-id="909a5-109">Любое допустимое значение <see langword="Char" /> или выражение <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-109">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="909a5-110">Если параметр <paramref name="String" /> — выражение типа <see langword="String" />, в качестве входного значения используется только первый знак строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-110">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="909a5-111">Если параметр <paramref name="String" /> равен <see langword="Nothing" /> или не содержит знаков, возникает ошибка <see cref="T:System.ArgumentException" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-111">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="909a5-112">Возвращает целочисленное значение, представляющее код заданного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-112">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="909a5-113">Код символа, соответствующий символу.</span><span class="sxs-lookup"><span data-stu-id="909a5-113">The character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-114">`Asc` возвращает кодовую *точку*или код символа для входного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-114">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="909a5-115">Это может быть от 0 до 255 для значений однобайтовой кодировки (SBCS) и-32768 до 32767 для двухбайтовых значений кодировки (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-115">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="909a5-116">`AscW` возвращает кодовую точку Юникода для входного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-116">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="909a5-117">Это может быть от 0 до 65535.</span><span class="sxs-lookup"><span data-stu-id="909a5-117">This can be 0 through 65535.</span></span> <span data-ttu-id="909a5-118">Возвращаемое значение не зависит от языка и региональных параметров и параметров кодовой страницы для текущего потока.</span><span class="sxs-lookup"><span data-stu-id="909a5-118">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-119">Функция `AscB` более ранних версий Visual Basic возвращает код для байта, а не для символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-119">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="909a5-120">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-120">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-121">Все строки Visual Basic 2005 в Юникоде, а `AscB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-121">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-122">В следующем примере функция `Asc` используется для возврата `Integer` кодов символов, соответствующих первой букве в каждой строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-122">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md"><span data-ttu-id="909a5-123">Функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-123">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Asc(string String) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(System::String ^ String);" />
      <MemberSignature Language="F#" Value="static member Asc : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.Asc String" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(string String) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="909a5-124">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-124">Required.</span></span> <span data-ttu-id="909a5-125">Любое допустимое значение <see langword="Char" /> или выражение <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-125">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="909a5-126">Если параметр <paramref name="String" /> — выражение типа <see langword="String" />, в качестве входного значения используется только первый знак строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-126">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="909a5-127">Если параметр <paramref name="String" /> равен <see langword="Nothing" /> или не содержит знаков, возникает ошибка <see cref="T:System.ArgumentException" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-127">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="909a5-128">Возвращает целочисленное значение, представляющее код заданного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-128">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="909a5-129">Код символа, соответствующий символу.</span><span class="sxs-lookup"><span data-stu-id="909a5-129">The character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-130">`Asc` возвращает кодовую *точку*или код символа для входного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-130">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="909a5-131">Это может быть от 0 до 255 для значений однобайтовой кодировки (SBCS) и-32768 до 32767 для двухбайтовых значений кодировки (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-131">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="909a5-132">`AscW` возвращает кодовую точку Юникода для входного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-132">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="909a5-133">Это может быть от 0 до 65535.</span><span class="sxs-lookup"><span data-stu-id="909a5-133">This can be 0 through 65535.</span></span> <span data-ttu-id="909a5-134">Возвращаемое значение не зависит от языка и региональных параметров и параметров кодовой страницы для текущего потока.</span><span class="sxs-lookup"><span data-stu-id="909a5-134">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-135">Функция `AscB` более ранних версий Visual Basic возвращает код для байта, а не для символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-135">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="909a5-136">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-136">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-137">Все строки Visual Basic 2005 в Юникоде, а `AscB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-137">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-138">В следующем примере функция `Asc` используется для возврата `Integer` кодов символов, соответствующих первой букве в каждой строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-138">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md"><span data-ttu-id="909a5-139">Функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-139">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AscW">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="909a5-140">Возвращает целочисленное значение, представляющее код заданного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-140">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AscW(char String) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function AscW (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(char String);" />
      <MemberSignature Language="F#" Value="static member AscW : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.AscW String" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(char String) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="909a5-141">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-141">Required.</span></span> <span data-ttu-id="909a5-142">Любое допустимое значение <see langword="Char" /> или выражение <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-142">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="909a5-143">Если параметр <paramref name="String" /> — выражение типа <see langword="String" />, в качестве входного значения используется только первый знак строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-143">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="909a5-144">Если параметр <paramref name="String" /> равен <see langword="Nothing" /> или не содержит знаков, возникает ошибка <see cref="T:System.ArgumentException" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-144">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="909a5-145">Возвращает целочисленное значение, представляющее код заданного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-145">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="909a5-146">Код символа, соответствующий символу.</span><span class="sxs-lookup"><span data-stu-id="909a5-146">The character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-147">`Asc` возвращает кодовую *точку*или код символа для входного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-147">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="909a5-148">Это может быть от 0 до 255 для значений однобайтовой кодировки (SBCS) и-32768 до 32767 для двухбайтовых значений кодировки (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-148">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="909a5-149">`AscW` возвращает кодовую точку Юникода для входного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-149">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="909a5-150">Это может быть от 0 до 65535.</span><span class="sxs-lookup"><span data-stu-id="909a5-150">This can be 0 through 65535.</span></span> <span data-ttu-id="909a5-151">Возвращаемое значение не зависит от языка и региональных параметров и параметров кодовой страницы для текущего потока.</span><span class="sxs-lookup"><span data-stu-id="909a5-151">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-152">Функция `AscB` более ранних версий Visual Basic возвращает код для байта, а не для символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-152">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="909a5-153">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-153">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-154">Все строки Visual Basic 2005 в Юникоде, а `AscB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-154">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-155">В следующем примере функция `Asc` используется для возврата `Integer` кодов символов, соответствующих первой букве в каждой строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-155">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md"><span data-ttu-id="909a5-156">Функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-156">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AscW(string String) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(System::String ^ String);" />
      <MemberSignature Language="F#" Value="static member AscW : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.AscW String" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(string String) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="909a5-157">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-157">Required.</span></span> <span data-ttu-id="909a5-158">Любое допустимое значение <see langword="Char" /> или выражение <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-158">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="909a5-159">Если параметр <paramref name="String" /> — выражение типа <see langword="String" />, в качестве входного значения используется только первый знак строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-159">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="909a5-160">Если параметр <paramref name="String" /> равен <see langword="Nothing" /> или не содержит знаков, возникает ошибка <see cref="T:System.ArgumentException" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-160">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="909a5-161">Возвращает целочисленное значение, представляющее код заданного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-161">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="909a5-162">Код символа, соответствующий символу.</span><span class="sxs-lookup"><span data-stu-id="909a5-162">The character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-163">`Asc` возвращает кодовую *точку*или код символа для входного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-163">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="909a5-164">Это может быть от 0 до 255 для значений однобайтовой кодировки (SBCS) и-32768 до 32767 для двухбайтовых значений кодировки (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-164">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="909a5-165">`AscW` возвращает кодовую точку Юникода для входного символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-165">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="909a5-166">Это может быть от 0 до 65535.</span><span class="sxs-lookup"><span data-stu-id="909a5-166">This can be 0 through 65535.</span></span> <span data-ttu-id="909a5-167">Возвращаемое значение не зависит от языка и региональных параметров и параметров кодовой страницы для текущего потока.</span><span class="sxs-lookup"><span data-stu-id="909a5-167">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-168">Функция `AscB` более ранних версий Visual Basic возвращает код для байта, а не для символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-168">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="909a5-169">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-169">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-170">Все строки Visual Basic 2005 в Юникоде, а `AscB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-170">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-171">В следующем примере функция `Asc` используется для возврата `Integer` кодов символов, соответствующих первой букве в каждой строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-171">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md"><span data-ttu-id="909a5-172">Функции (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-172">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Chr">
      <MemberSignature Language="C#" Value="public static char Chr (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Chr(int32 CharCode) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Chr (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Chr(int CharCode);" />
      <MemberSignature Language="F#" Value="static member Chr : int -&gt; char" Usage="Microsoft.VisualBasic.Strings.Chr CharCode" />
      <MemberSignature Language="ILAsm" Value=".method public static char Chr(int32 CharCode) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="CharCode"><span data-ttu-id="909a5-173">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-173">Required.</span></span> <span data-ttu-id="909a5-174">Выражение <see langword="Integer" />, представляющее <c>кодовую точку</c> (код символа) для символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-174">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span></span></param>
        <summary><span data-ttu-id="909a5-175">Возвращает знак, связанный с указанным кодом знака.</span><span class="sxs-lookup"><span data-stu-id="909a5-175">Returns the character associated with the specified character code.</span></span></summary>
        <returns><span data-ttu-id="909a5-176">Знак, связанный с указанным кодом знака.</span><span class="sxs-lookup"><span data-stu-id="909a5-176">The character associated with the specified character code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-177">Асимметричный диапазон, принятый для `CharCode`, компенсирует различия в хранении между `Short` и `Integer`.</span><span class="sxs-lookup"><span data-stu-id="909a5-177">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="909a5-178">Например,-29183 — это `Short`, а + 36353 — `Integer`.</span><span class="sxs-lookup"><span data-stu-id="909a5-178">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="909a5-179">Это также обеспечивает совместимость с Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="909a5-179">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="909a5-180">`Chr` использует класс <xref:System.Text.Encoding> в пространстве имен <xref:System.Text?displayProperty=nameWithType>, чтобы определить, использует ли текущий поток однобайтовую кодировку (SBCS) или двухбайтовый набор символов (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-180">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="909a5-181">Затем он принимает `CharCode` в виде кодовой точки в соответствующем наборе.</span><span class="sxs-lookup"><span data-stu-id="909a5-181">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="909a5-182">Диапазон может быть от 0 до 255 для символов SBCS и от-32768 до 65535 для символов DBCS.</span><span class="sxs-lookup"><span data-stu-id="909a5-182">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="909a5-183">Возвращаемое значение зависит от кодовой страницы текущего потока, который содержится в свойстве <xref:System.Globalization.TextInfo.ANSICodePage%2A> класса <xref:System.Globalization.TextInfo> в пространстве имен <xref:System.Globalization>.</span><span class="sxs-lookup"><span data-stu-id="909a5-183">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="909a5-184"><xref:System.Globalization.TextInfo.ANSICodePage%2A> можно получить, указав `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span><span class="sxs-lookup"><span data-stu-id="909a5-184">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="909a5-185">`ChrW` принимает `CharCode` в виде кодовой точки Юникода.</span><span class="sxs-lookup"><span data-stu-id="909a5-185">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="909a5-186">Диапазон не зависит от языка и региональных параметров и параметров кодовой страницы для текущего потока.</span><span class="sxs-lookup"><span data-stu-id="909a5-186">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="909a5-187">Значения от-32768 до-1 обрабатываются так же, как значения в диапазоне + 32768 – + 65535.</span><span class="sxs-lookup"><span data-stu-id="909a5-187">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="909a5-188">Числа от 0 до 31 совпадают со стандартными непечатаемыми кодами ASCII.</span><span class="sxs-lookup"><span data-stu-id="909a5-188">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="909a5-189">Например, `Chr(10)` возвращает символ перевода строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-189">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-190">Функция `ChrB` в более ранних версиях Visual Basic возвращает один байт.</span><span class="sxs-lookup"><span data-stu-id="909a5-190">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="909a5-191">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-191">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-192">Все строки в Visual Basic и .NET Framework в Юникоде, а `ChrB` больше не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="909a5-192">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-193">В следующем примере функция `Chr` используется для возврата символа, связанного с указанным кодом символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-193">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-194"><paramref name="CharCode" /> &lt; 0 или &gt; 255 для <see langword="Chr" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-194"><paramref name="CharCode" /> &lt; 0 or &gt; 255 for <see langword="Chr" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-195">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-195">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChrW">
      <MemberSignature Language="C#" Value="public static char ChrW (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ChrW(int32 CharCode) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChrW (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ChrW(int CharCode);" />
      <MemberSignature Language="F#" Value="static member ChrW : int -&gt; char" Usage="Microsoft.VisualBasic.Strings.ChrW CharCode" />
      <MemberSignature Language="ILAsm" Value=".method public static char ChrW(int32 CharCode) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="CharCode"><span data-ttu-id="909a5-196">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-196">Required.</span></span> <span data-ttu-id="909a5-197">Выражение <see langword="Integer" />, представляющее <c>кодовую точку</c> (код символа) для символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-197">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span></span></param>
        <summary><span data-ttu-id="909a5-198">Возвращает знак, связанный с указанным кодом знака.</span><span class="sxs-lookup"><span data-stu-id="909a5-198">Returns the character associated with the specified character code.</span></span></summary>
        <returns><span data-ttu-id="909a5-199">Знак, связанный с указанным кодом знака.</span><span class="sxs-lookup"><span data-stu-id="909a5-199">The character associated with the specified character code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-200">Асимметричный диапазон, принятый для `CharCode`, компенсирует различия в хранении между `Short` и `Integer`.</span><span class="sxs-lookup"><span data-stu-id="909a5-200">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="909a5-201">Например,-29183 — это `Short`, а + 36353 — `Integer`.</span><span class="sxs-lookup"><span data-stu-id="909a5-201">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="909a5-202">Это также обеспечивает совместимость с Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="909a5-202">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="909a5-203">`Chr` использует класс <xref:System.Text.Encoding> в пространстве имен <xref:System.Text?displayProperty=nameWithType>, чтобы определить, использует ли текущий поток однобайтовую кодировку (SBCS) или двухбайтовый набор символов (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-203">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="909a5-204">Затем он принимает `CharCode` в виде кодовой точки в соответствующем наборе.</span><span class="sxs-lookup"><span data-stu-id="909a5-204">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="909a5-205">Диапазон может быть от 0 до 255 для символов SBCS и от-32768 до 65535 для символов DBCS.</span><span class="sxs-lookup"><span data-stu-id="909a5-205">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="909a5-206">Возвращаемое значение зависит от кодовой страницы текущего потока, который содержится в свойстве <xref:System.Globalization.TextInfo.ANSICodePage%2A> класса <xref:System.Globalization.TextInfo> в пространстве имен <xref:System.Globalization>.</span><span class="sxs-lookup"><span data-stu-id="909a5-206">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="909a5-207"><xref:System.Globalization.TextInfo.ANSICodePage%2A> можно получить, указав `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span><span class="sxs-lookup"><span data-stu-id="909a5-207">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="909a5-208">`ChrW` принимает `CharCode` в виде кодовой точки Юникода.</span><span class="sxs-lookup"><span data-stu-id="909a5-208">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="909a5-209">Диапазон не зависит от языка и региональных параметров и параметров кодовой страницы для текущего потока.</span><span class="sxs-lookup"><span data-stu-id="909a5-209">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="909a5-210">Значения от-32768 до-1 обрабатываются так же, как значения в диапазоне + 32768 – + 65535.</span><span class="sxs-lookup"><span data-stu-id="909a5-210">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="909a5-211">Числа от 0 до 31 совпадают со стандартными непечатаемыми кодами ASCII.</span><span class="sxs-lookup"><span data-stu-id="909a5-211">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="909a5-212">Например, `Chr(10)` возвращает символ перевода строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-212">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-213">Функция `ChrB` в более ранних версиях Visual Basic возвращает один байт.</span><span class="sxs-lookup"><span data-stu-id="909a5-213">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="909a5-214">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-214">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-215">Все строки в Visual Basic и .NET Framework в Юникоде, а `ChrB` больше не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="909a5-215">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-216">В следующем примере функция `Chr` используется для возврата символа, связанного с указанным кодом символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-216">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-217"><paramref name="CharCode" /> &lt; –32768 или &gt; 65535 для <see langword="ChrW" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-217"><paramref name="CharCode" /> &lt; -32768 or &gt; 65535 for <see langword="ChrW" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-218">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-218">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Filter">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="909a5-219">Возвращает массив (с индексацией от нуля), который содержит подмножество массива типа <see langword="String" />, выделяемое согласно указанным условиям фильтрации.</span><span class="sxs-lookup"><span data-stu-id="909a5-219">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (object[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Filter(object[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As Object(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Filter : obj[] * string * bool * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Filter (Source, Match, Include, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(object[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Match" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Include" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="909a5-220">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-220">Required.</span></span> <span data-ttu-id="909a5-221">Одномерный массив строк, в котором необходимо выполнить поиск.</span><span class="sxs-lookup"><span data-stu-id="909a5-221">One-dimensional array of strings to be searched.</span></span></param>
        <param name="Match"><span data-ttu-id="909a5-222">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-222">Required.</span></span> <span data-ttu-id="909a5-223">Строка, которую требуется найти.</span><span class="sxs-lookup"><span data-stu-id="909a5-223">String to search for.</span></span></param>
        <param name="Include"><span data-ttu-id="909a5-224">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-224">Optional.</span></span> <span data-ttu-id="909a5-225">Значение типа <see langword="Boolean" />, указывающее, какие подстроки требуется возвращать: содержащие или не содержащие строку <paramref name="Match" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-225"><see langword="Boolean" /> value indicating whether to return substrings that include or exclude <paramref name="Match" />.</span></span> <span data-ttu-id="909a5-226">Если параметр <paramref name="Include" /> равен <see langword="True" />, функция <see langword="Filter" /> возвращает подмножество строк массива, содержащих <paramref name="Match" /> в виде подстроки.</span><span class="sxs-lookup"><span data-stu-id="909a5-226">If <paramref name="Include" /> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <paramref name="Match" /> as a substring.</span></span> <span data-ttu-id="909a5-227">Если параметр <paramref name="Include" /> равен <see langword="False" />, функция <see langword="Filter" /> возвращает подмножество строк массива, не содержащих <paramref name="Match" /> в виде подстроки.</span><span class="sxs-lookup"><span data-stu-id="909a5-227">If <paramref name="Include" /> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</span></span></param>
        <param name="Compare"><span data-ttu-id="909a5-228">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-228">Optional.</span></span> <span data-ttu-id="909a5-229">Числовое значение, указывающее вид выполняемого сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-229">Numeric value indicating the kind of string comparison to use.</span></span> <span data-ttu-id="909a5-230">Сведения о значениях см. в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="909a5-230">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="909a5-231">Возвращает массив (с индексацией от нуля), который содержит подмножество массива типа <see langword="String" />, выделяемое согласно указанным условиям фильтрации.</span><span class="sxs-lookup"><span data-stu-id="909a5-231">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
        <returns><span data-ttu-id="909a5-232">Массив с индексацией от нуля, который содержит подмножество массива типа <see langword="String" />, выделяемое согласно указанным условиям фильтрации.</span><span class="sxs-lookup"><span data-stu-id="909a5-232">A zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-233">Если в `Source`не найдены совпадения `Match`, функция `Filter` возвращает пустой массив.</span><span class="sxs-lookup"><span data-stu-id="909a5-233">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="909a5-234">Если `Source` имеет значение `Nothing` или не является одномерным массивом, возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="909a5-234">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="909a5-235">Массив, возвращаемый функцией `Filter`, содержит достаточно элементов, чтобы вместить количество сопоставленных элементов.</span><span class="sxs-lookup"><span data-stu-id="909a5-235">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="909a5-236">Аргумент `Compare` может иметь следующие значения.</span><span class="sxs-lookup"><span data-stu-id="909a5-236">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="909a5-237">Константа</span><span class="sxs-lookup"><span data-stu-id="909a5-237">Constant</span></span>|<span data-ttu-id="909a5-238">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-238">Description</span></span>|  
|-|-|  
|<span data-ttu-id="909a5-239">Константа</span><span class="sxs-lookup"><span data-stu-id="909a5-239">Constant</span></span>|<span data-ttu-id="909a5-240">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-240">Description</span></span>|  
|`CompareMethod.Binary`|<span data-ttu-id="909a5-241">Выполняет двоичное сравнение</span><span class="sxs-lookup"><span data-stu-id="909a5-241">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="909a5-242">Выполняет текстовое сравнение</span><span class="sxs-lookup"><span data-stu-id="909a5-242">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="909a5-243">В этом примере демонстрируется использование функции `Filter`.</span><span class="sxs-lookup"><span data-stu-id="909a5-243">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-244"><paramref name="Source" /> является <see langword="Nothing" /> или не является одномерным массивом.</span><span class="sxs-lookup"><span data-stu-id="909a5-244"><paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-245">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-245">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (string[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Filter(string[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As String(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Filter : string[] * string * bool * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Filter (Source, Match, Include, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(string[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Match" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Include" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="909a5-246">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-246">Required.</span></span> <span data-ttu-id="909a5-247">Одномерный массив строк, в котором необходимо выполнить поиск.</span><span class="sxs-lookup"><span data-stu-id="909a5-247">One-dimensional array of strings to be searched.</span></span></param>
        <param name="Match"><span data-ttu-id="909a5-248">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-248">Required.</span></span> <span data-ttu-id="909a5-249">Строка, которую требуется найти.</span><span class="sxs-lookup"><span data-stu-id="909a5-249">String to search for.</span></span></param>
        <param name="Include"><span data-ttu-id="909a5-250">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-250">Optional.</span></span> <span data-ttu-id="909a5-251">Значение типа <see langword="Boolean" />, указывающее, какие подстроки требуется возвращать: содержащие или не содержащие строку <paramref name="Match" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-251"><see langword="Boolean" /> value indicating whether to return substrings that include or exclude <paramref name="Match" />.</span></span> <span data-ttu-id="909a5-252">Если параметр <paramref name="Include" /> равен <see langword="True" />, функция <see langword="Filter" /> возвращает подмножество строк массива, содержащих <paramref name="Match" /> в виде подстроки.</span><span class="sxs-lookup"><span data-stu-id="909a5-252">If <paramref name="Include" /> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <paramref name="Match" /> as a substring.</span></span> <span data-ttu-id="909a5-253">Если параметр <paramref name="Include" /> равен <see langword="False" />, функция <see langword="Filter" /> возвращает подмножество строк массива, не содержащих <paramref name="Match" /> в виде подстроки.</span><span class="sxs-lookup"><span data-stu-id="909a5-253">If <paramref name="Include" /> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</span></span></param>
        <param name="Compare"><span data-ttu-id="909a5-254">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-254">Optional.</span></span> <span data-ttu-id="909a5-255">Числовое значение, указывающее вид выполняемого сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-255">Numeric value indicating the kind of string comparison to use.</span></span> <span data-ttu-id="909a5-256">Сведения о значениях см. в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="909a5-256">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="909a5-257">Возвращает массив (с индексацией от нуля), который содержит подмножество массива типа <see langword="String" />, выделяемое согласно указанным условиям фильтрации.</span><span class="sxs-lookup"><span data-stu-id="909a5-257">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
        <returns><span data-ttu-id="909a5-258">Массив с индексацией от нуля, который содержит подмножество массива типа <see langword="String" />, выделяемое согласно указанным условиям фильтрации.</span><span class="sxs-lookup"><span data-stu-id="909a5-258">A zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-259">Если в `Source`не найдены совпадения `Match`, функция `Filter` возвращает пустой массив.</span><span class="sxs-lookup"><span data-stu-id="909a5-259">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="909a5-260">Если `Source` имеет значение `Nothing` или не является одномерным массивом, возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="909a5-260">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="909a5-261">Массив, возвращаемый функцией `Filter`, содержит достаточно элементов, чтобы вместить количество сопоставленных элементов.</span><span class="sxs-lookup"><span data-stu-id="909a5-261">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="909a5-262">Аргумент `Compare` может иметь следующие значения.</span><span class="sxs-lookup"><span data-stu-id="909a5-262">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="909a5-263">Константа</span><span class="sxs-lookup"><span data-stu-id="909a5-263">Constant</span></span>|<span data-ttu-id="909a5-264">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-264">Description</span></span>|  
|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="909a5-265">Выполняет двоичное сравнение</span><span class="sxs-lookup"><span data-stu-id="909a5-265">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="909a5-266">Выполняет текстовое сравнение</span><span class="sxs-lookup"><span data-stu-id="909a5-266">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="909a5-267">В этом примере демонстрируется использование функции `Filter`.</span><span class="sxs-lookup"><span data-stu-id="909a5-267">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-268"><paramref name="Source" /> является <see langword="Nothing" /> или не является одномерным массивом.</span><span class="sxs-lookup"><span data-stu-id="909a5-268"><paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-269">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-269">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (object Expression, string Style = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(object Expression, string Style) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (Expression As Object, Optional Style As String = &quot;&quot;) As String" />
      <MemberSignature Language="F#" Value="static member Format : obj * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Format (Expression, Style)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Format(object Expression, string Style) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Style" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-270">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-270">Required.</span></span> <span data-ttu-id="909a5-271">Любое допустимое выражение.</span><span class="sxs-lookup"><span data-stu-id="909a5-271">Any valid expression.</span></span></param>
        <param name="Style"><span data-ttu-id="909a5-272">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-272">Optional.</span></span> <span data-ttu-id="909a5-273">Правильно именованное или определенное пользователем выражение формата <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-273">A valid named or user-defined format <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="909a5-274">Возвращает строку, отформатированную в соответствии с инструкциями, содержащимися в формате выражения <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-274">Returns a string formatted according to instructions contained in a format <see langword="String" /> expression.</span></span></summary>
        <returns><span data-ttu-id="909a5-275">Строка, отформатированная в соответствии с инструкциями, содержащимися в формате выражения <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-275">A string formatted according to instructions contained in a format <see langword="String" /> expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-276">Метод <xref:System.String.Format%2A?displayProperty=nameWithType> также предоставляет аналогичные функции.</span><span class="sxs-lookup"><span data-stu-id="909a5-276">The <xref:System.String.Format%2A?displayProperty=nameWithType> method also provides similar functionality.</span></span>  
  
 <span data-ttu-id="909a5-277">При форматировании нелокализованной числовой строки следует использовать определенный пользователем числовой формат, чтобы убедиться, что вы хотите получить нужный вид.</span><span class="sxs-lookup"><span data-stu-id="909a5-277">If you are formatting a nonlocalized numeric string, you should use a user-defined numeric format to ensure that you get the look you want.</span></span>  
  
 <span data-ttu-id="909a5-278">Если вы попытаетесь отформатировать число без указания `Style`, функция `Format` предоставляет функциональные возможности, аналогичные функции `Str`, хотя она поддерживает международные стандарты.</span><span class="sxs-lookup"><span data-stu-id="909a5-278">If you try to format a number without specifying `Style`, the `Format` function provides functionality similar to the `Str` function, although it is internationally aware.</span></span> <span data-ttu-id="909a5-279">Однако положительные числа, отформатированные в виде строк с помощью функции `Format`, не включают в себя начальное пространство, зарезервированное для знака значения. данные, преобразованные с помощью функции `Str`, сохранены в начальном пространстве.</span><span class="sxs-lookup"><span data-stu-id="909a5-279">However, positive numbers formatted as strings using the `Format` function don't include a leading space reserved for the sign of the value; those converted using the `Str` function retain the leading space.</span></span>  
  
## <a name="different-formats-for-different-numeric-values"></a><span data-ttu-id="909a5-280">Различные форматы для различных числовых значений</span><span class="sxs-lookup"><span data-stu-id="909a5-280">Different Formats for Different Numeric Values</span></span>  
 <span data-ttu-id="909a5-281">Пользовательское выражение форматирования чисел может содержать от одного до трех разделов, разделенных точками с запятой.</span><span class="sxs-lookup"><span data-stu-id="909a5-281">A user-defined format expression for numbers can have from one to three sections separated by semicolons.</span></span> <span data-ttu-id="909a5-282">Если аргумент `Style` функции `Format` содержит один из стандартных числовых форматов, разрешается только один раздел.</span><span class="sxs-lookup"><span data-stu-id="909a5-282">If the `Style` argument of the `Format` function contains one of the predefined numeric formats, only one section is allowed.</span></span>  
  
|<span data-ttu-id="909a5-283">Если вы используете</span><span class="sxs-lookup"><span data-stu-id="909a5-283">If you use</span></span>|<span data-ttu-id="909a5-284">Это результат</span><span class="sxs-lookup"><span data-stu-id="909a5-284">This is the result</span></span>|  
|-|-|  
|<span data-ttu-id="909a5-285">Единственный раздел</span><span class="sxs-lookup"><span data-stu-id="909a5-285">One section only</span></span>|<span data-ttu-id="909a5-286">Выражение формата применяется ко всем значениям.</span><span class="sxs-lookup"><span data-stu-id="909a5-286">The format expression applies to all values.</span></span>|  
|<span data-ttu-id="909a5-287">Две секции</span><span class="sxs-lookup"><span data-stu-id="909a5-287">Two sections</span></span>|<span data-ttu-id="909a5-288">Первый раздел применяется к неотрицательным значениям, а второй — к отрицательным.</span><span class="sxs-lookup"><span data-stu-id="909a5-288">The first section applies to positive values and zeros; the second applies to negative values.</span></span>|  
|<span data-ttu-id="909a5-289">Три секции</span><span class="sxs-lookup"><span data-stu-id="909a5-289">Three sections</span></span>|<span data-ttu-id="909a5-290">Первый раздел применяется к положительным значениям, второй — к отрицательным, а третий — к нулевым.</span><span class="sxs-lookup"><span data-stu-id="909a5-290">The first section applies to positive values, the second applies to negative values, and the third applies to zeros.</span></span>|  
  
 <span data-ttu-id="909a5-291">Следующий пример содержит два раздела: первый определяет формат для положительных и нулевых значений; во втором разделе определяется формат отрицательных значений.</span><span class="sxs-lookup"><span data-stu-id="909a5-291">The following example has two sections: the first defines the format for positive values and zeros; the second section defines the format for negative values.</span></span> <span data-ttu-id="909a5-292">Поскольку аргумент `Style` функции `Format` принимает строку, она заключается в кавычки.</span><span class="sxs-lookup"><span data-stu-id="909a5-292">Since the `Style` argument of the `Format` function takes a string, it is enclosed by quotation marks.</span></span>  
  
 [!code-vb[VbVbalrStrings#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#18)]  
  
 <span data-ttu-id="909a5-293">Если в выражении форматирования встречаются точки с запятыми, между которыми ничего нет, пропущенный раздел выводится в формате положительного значения.</span><span class="sxs-lookup"><span data-stu-id="909a5-293">If you include semicolons with nothing between them, the missing section is printed using the format of the positive value.</span></span> <span data-ttu-id="909a5-294">Например, следующий формат отображает положительные и отрицательные значения, используя формат в первом разделе, и отображает `Zero`, если значение равно нулю.</span><span class="sxs-lookup"><span data-stu-id="909a5-294">For example, the following format displays positive and negative values using the format in the first section and displays `Zero` if the value is zero.</span></span>  
  
 [!code-vb[VbVbalrStrings#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#19)]  
  
## <a name="predefined-numeric-formats"></a><span data-ttu-id="909a5-295">Предопределенные числовые форматы</span><span class="sxs-lookup"><span data-stu-id="909a5-295">Predefined Numeric Formats</span></span>  
 <span data-ttu-id="909a5-296">В следующей таблице перечислены имена стандартных числовых форматов.</span><span class="sxs-lookup"><span data-stu-id="909a5-296">The following table identifies the predefined numeric format names.</span></span> <span data-ttu-id="909a5-297">Они могут использоваться по имени в качестве аргумента `Style` для функции `Format`:</span><span class="sxs-lookup"><span data-stu-id="909a5-297">These may be used by name as the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="909a5-298">Название формата</span><span class="sxs-lookup"><span data-stu-id="909a5-298">Format name</span></span>|<span data-ttu-id="909a5-299">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-299">Description</span></span>|  
|-|-|  
|<span data-ttu-id="909a5-300">`General Number`, `G`или `g`</span><span class="sxs-lookup"><span data-stu-id="909a5-300">`General Number`, `G`, or `g`</span></span>|<span data-ttu-id="909a5-301">Отображает число без разделителя тысяч.</span><span class="sxs-lookup"><span data-stu-id="909a5-301">Displays number with no thousand separator.</span></span><br /><br /> <span data-ttu-id="909a5-302">Например, `Format(&H3FA, "g")` возвращает `1018`.</span><span class="sxs-lookup"><span data-stu-id="909a5-302">For example, `Format(&H3FA, "g")` returns `1018`.</span></span>|  
|<span data-ttu-id="909a5-303">`Currency`, `C`или `c`</span><span class="sxs-lookup"><span data-stu-id="909a5-303">`Currency`, `C`, or `c`</span></span>|<span data-ttu-id="909a5-304">При необходимости отображает число с разделителем тысяч. отображает две цифры справа от десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-304">Displays number with thousand separator, if appropriate; displays two digits to the right of the decimal separator.</span></span> <span data-ttu-id="909a5-305">Выходные данные основываются на параметрах национальной настройки системы.</span><span class="sxs-lookup"><span data-stu-id="909a5-305">Output is based on system locale settings.</span></span><br /><br /> <span data-ttu-id="909a5-306">Например, `Format(1234567, "c")` возвращает `$1,234,567.00`.</span><span class="sxs-lookup"><span data-stu-id="909a5-306">For example, `Format(1234567, "c")` returns `$1,234,567.00`.</span></span>|  
|<span data-ttu-id="909a5-307">`Fixed`, `F`или `f`</span><span class="sxs-lookup"><span data-stu-id="909a5-307">`Fixed`, `F`, or `f`</span></span>|<span data-ttu-id="909a5-308">Отображает по крайней мере одну цифру слева и две цифры справа от десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-308">Displays at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="909a5-309">Например, `Format(1234567, "f")` возвращает `1234567.00`.</span><span class="sxs-lookup"><span data-stu-id="909a5-309">For example, `Format(1234567, "f")` returns `1234567.00`.</span></span>|  
|<span data-ttu-id="909a5-310">`Standard`, `N`или `n`</span><span class="sxs-lookup"><span data-stu-id="909a5-310">`Standard`, `N`, or `n`</span></span>|<span data-ttu-id="909a5-311">Отображает число с разделителем тысяч, по крайней мере одну цифру слева и две цифры справа от десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-311">Displays number with thousand separator, at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="909a5-312">Например, `Format(1234567, "n")` возвращает `1,234,567.00`.</span><span class="sxs-lookup"><span data-stu-id="909a5-312">For example, `Format(1234567, "n")` returns `1,234,567.00`.</span></span>|  
|`Percent`|<span data-ttu-id="909a5-313">Отображает умноженное на 100 число со знаком процента (%) непосредственно справа, всегда отображает две цифры справа от десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-313">Displays number multiplied by 100 with a percent sign (%) appended immediately to the right; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="909a5-314">Например, `Format(0.4744, "Percent")` возвращает `47.44%`.</span><span class="sxs-lookup"><span data-stu-id="909a5-314">For example, `Format(0.4744, "Percent")` returns `47.44%`.</span></span>|  
|<span data-ttu-id="909a5-315">`P`или `p`</span><span class="sxs-lookup"><span data-stu-id="909a5-315">`P`, or `p`</span></span>|<span data-ttu-id="909a5-316">Отображает умноженное на 100 число с разделителями групп разрядов со знаком процента (%) через пробел справа, всегда отображает две цифры справа от десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-316">Displays number with thousandths separator multiplied by 100 with a percent sign (%) appended to the right and separated by a single space; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="909a5-317">Например, `Format(0.80345, "p")` возвращает `80.35 %`.</span><span class="sxs-lookup"><span data-stu-id="909a5-317">For example, `Format(0.80345, "p")` returns `80.35 %`.</span></span>|  
|`Scientific`|<span data-ttu-id="909a5-318">Использует стандартное научное обозначение с двумя значащими разрядами.</span><span class="sxs-lookup"><span data-stu-id="909a5-318">Uses standard scientific notation, providing two significant digits.</span></span><br /><br /> <span data-ttu-id="909a5-319">Например, `Format(1234567, "Scientific")` возвращает `1.23E+06`.</span><span class="sxs-lookup"><span data-stu-id="909a5-319">For example, `Format(1234567, "Scientific")` returns `1.23E+06`.</span></span>|  
|<span data-ttu-id="909a5-320">`E`или `e`</span><span class="sxs-lookup"><span data-stu-id="909a5-320">`E`, or `e`</span></span>|<span data-ttu-id="909a5-321">Использует стандартное научное обозначение с шестью значащими разрядами.</span><span class="sxs-lookup"><span data-stu-id="909a5-321">Uses standard scientific notation, providing six significant digits.</span></span><br /><br /> <span data-ttu-id="909a5-322">Например, `Format(1234567, "e")` возвращает `1.234567e+006`.</span><span class="sxs-lookup"><span data-stu-id="909a5-322">For example, `Format(1234567, "e")` returns `1.234567e+006`.</span></span>|  
|<span data-ttu-id="909a5-323">`D`или `d`</span><span class="sxs-lookup"><span data-stu-id="909a5-323">`D`, or `d`</span></span>|<span data-ttu-id="909a5-324">Отображает число в виде строки, содержащей значение числа в десятичном формате (основание 10).</span><span class="sxs-lookup"><span data-stu-id="909a5-324">Displays number as a string that contains the value of the number in Decimal (base 10) format.</span></span> <span data-ttu-id="909a5-325">Этот параметр поддерживается только для целочисленных типов (`Byte`, `Short`, `Integer`, `Long`).</span><span class="sxs-lookup"><span data-stu-id="909a5-325">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="909a5-326">Например, `Format(&H7F, "d")` возвращает `127`.</span><span class="sxs-lookup"><span data-stu-id="909a5-326">For example, `Format(&H7F, "d")` returns `127`.</span></span>|  
|<span data-ttu-id="909a5-327">`X`или `x`</span><span class="sxs-lookup"><span data-stu-id="909a5-327">`X`, or `x`</span></span>|<span data-ttu-id="909a5-328">Отображает число в виде строки, содержащей значение числа в шестнадцатеричном формате (основание 16).</span><span class="sxs-lookup"><span data-stu-id="909a5-328">Displays number as a string that contains the value of the number in Hexadecimal (base 16) format.</span></span> <span data-ttu-id="909a5-329">Этот параметр поддерживается только для целочисленных типов (`Byte`, `Short`, `Integer`, `Long`).</span><span class="sxs-lookup"><span data-stu-id="909a5-329">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="909a5-330">Например, `Format(127, "x")` возвращает `7f`.</span><span class="sxs-lookup"><span data-stu-id="909a5-330">For example, `Format(127, "x")` returns `7f`.</span></span>|  
|`Yes/No`|<span data-ttu-id="909a5-331">Отображает `No`, если число равно 0; в противном случае отображает `Yes`.</span><span class="sxs-lookup"><span data-stu-id="909a5-331">Displays `No` if number is 0; otherwise, displays `Yes`.</span></span><br /><br /> <span data-ttu-id="909a5-332">Например, `Format(0, "Yes/No")` возвращает `No`.</span><span class="sxs-lookup"><span data-stu-id="909a5-332">For example, `Format(0, "Yes/No")` returns `No`.</span></span>|  
|`True/False`|<span data-ttu-id="909a5-333">Отображает `False`, если число равно 0; в противном случае отображает `True`.</span><span class="sxs-lookup"><span data-stu-id="909a5-333">Displays `False` if number is 0; otherwise, displays `True`.</span></span><br /><br /> <span data-ttu-id="909a5-334">Например, `Format(1, "True/False")` возвращает `True`.</span><span class="sxs-lookup"><span data-stu-id="909a5-334">For example, `Format(1, "True/False")` returns `True`.</span></span>|  
|`On/Off`|<span data-ttu-id="909a5-335">Отображает `Off`, если число равно 0; в противном случае отображает `On`.</span><span class="sxs-lookup"><span data-stu-id="909a5-335">Displays `Off` if number is 0; otherwise, displays `On`.</span></span><br /><br /> <span data-ttu-id="909a5-336">Например, `Format(1, "On/Off")` возвращает `On`.</span><span class="sxs-lookup"><span data-stu-id="909a5-336">For example, `Format(1, "On/Off")` returns `On`.</span></span>|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-337">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-337">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-338">Форматы `Yes/No`, `True/False`и `On/Off` не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-338">The `Yes/No`, `True/False`, and `On/Off` formats are not supported.</span></span>  
  
## <a name="user-defined-numeric-formats"></a><span data-ttu-id="909a5-339">Определяемые пользователем числовые форматы</span><span class="sxs-lookup"><span data-stu-id="909a5-339">User-Defined Numeric Formats</span></span>  
 <span data-ttu-id="909a5-340">В следующей таблице показаны символы, с помощью которых можно создавать определяемые пользователем числовые форматы.</span><span class="sxs-lookup"><span data-stu-id="909a5-340">The following table identifies characters you can use to create user-defined number formats.</span></span> <span data-ttu-id="909a5-341">Они могут использоваться для создания аргумента `Style` для функции `Format`:</span><span class="sxs-lookup"><span data-stu-id="909a5-341">These may be used to build the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="909a5-342">Знак</span><span class="sxs-lookup"><span data-stu-id="909a5-342">Character</span></span>|<span data-ttu-id="909a5-343">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-343">Description</span></span>|  
|-|-|  
|<span data-ttu-id="909a5-344">Отсутствуют</span><span class="sxs-lookup"><span data-stu-id="909a5-344">None</span></span>|<span data-ttu-id="909a5-345">Выводит число без форматирования.</span><span class="sxs-lookup"><span data-stu-id="909a5-345">Displays the number with no formatting.</span></span>|  
|<span data-ttu-id="909a5-346">(`0`)</span><span class="sxs-lookup"><span data-stu-id="909a5-346">(`0`)</span></span>|<span data-ttu-id="909a5-347">Заполнитель цифры.</span><span class="sxs-lookup"><span data-stu-id="909a5-347">Digit placeholder.</span></span> <span data-ttu-id="909a5-348">Выводит заданную цифру или ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-348">Displays a digit or a zero.</span></span> <span data-ttu-id="909a5-349">Если выражение содержит цифру в позиции, где ноль отображается в строке формата, отобразите его. в противном случае в этой должности отображается ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-349">If the expression has a digit in the position where the zero appears in the format string, display it; otherwise, displays a zero in that position.</span></span><br /><br /> <span data-ttu-id="909a5-350">Если число имеет меньше разрядов, чем задано нулей в выражении форматирования (с обеих сторон от десятичного разделителя), то число выводится с начальными или с конечными нулями.</span><span class="sxs-lookup"><span data-stu-id="909a5-350">If the number has fewer digits than there are zeros (on either side of the decimal) in the format expression, displays leading or trailing zeros.</span></span> <span data-ttu-id="909a5-351">Если число имеет больше разрядов справа от десятичного разделителя, чем задано нулей справа от десятичного разделителя в выражении форматирования, то значение округляется до стольких знаков после запятой, сколько задано нулей.</span><span class="sxs-lookup"><span data-stu-id="909a5-351">If the number has more digits to the right of the decimal separator than there are zeros to the right of the decimal separator in the format expression, rounds the number to as many decimal places as there are zeros.</span></span> <span data-ttu-id="909a5-352">Если число имеет больше цифр слева от десятичного разделителя, чем задано нулей слева от десятичного разделителя в выражении форматирования, то дополнительные разряды выводятся без изменений.</span><span class="sxs-lookup"><span data-stu-id="909a5-352">If the number has more digits to the left of the decimal separator than there are zeros to the left of the decimal separator in the format expression, displays the extra digits without modification.</span></span>|  
|<span data-ttu-id="909a5-353">(`#`)</span><span class="sxs-lookup"><span data-stu-id="909a5-353">(`#`)</span></span>|<span data-ttu-id="909a5-354">Заполнитель цифры.</span><span class="sxs-lookup"><span data-stu-id="909a5-354">Digit placeholder.</span></span> <span data-ttu-id="909a5-355">Выводит цифру или не выводит никакого символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-355">Displays a digit or nothing.</span></span> <span data-ttu-id="909a5-356">Если выражение содержит цифру в позиции, где `#` символ отображается в строке формата, отображает его; в противном случае в этой должности ничего не отображается.</span><span class="sxs-lookup"><span data-stu-id="909a5-356">If the expression has a digit in the position where the `#` character appears in the format string, displays it; otherwise, displays nothing in that position.</span></span><br /><br /> <span data-ttu-id="909a5-357">Этот символ работает так же, как заполнитель `0` digit, за исключением того, что начальные и конечные нули не отображаются, если число содержит меньше цифр, чем `#` символов с любой стороны десятичного разделителя в выражении формата.</span><span class="sxs-lookup"><span data-stu-id="909a5-357">This symbol works like the `0` digit placeholder, except that leading and trailing zeros aren't displayed if the number has fewer digits than there are `#` characters on either side of the decimal separator in the format expression.</span></span>|  
|<span data-ttu-id="909a5-358">(`.`)</span><span class="sxs-lookup"><span data-stu-id="909a5-358">(`.`)</span></span>|<span data-ttu-id="909a5-359">Заполнитель десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-359">Decimal placeholder.</span></span> <span data-ttu-id="909a5-360">Он определяет, сколько разрядов отображается слева и справа от десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-360">The decimal placeholder determines how many digits are displayed to the left and right of the decimal separator.</span></span> <span data-ttu-id="909a5-361">Если выражение формата содержит только `#` символы слева от этого символа; числа меньше 1 начинаются с десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-361">If the format expression contains only `#` characters to the left of this symbol; numbers smaller than 1 begin with a decimal separator.</span></span> <span data-ttu-id="909a5-362">Чтобы в этом случае в дробных числах отображались ведущие нули, укажите ноль в качестве первого заполнителя цифры слева от десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-362">To display a leading zero displayed with fractional numbers, use zero as the first digit placeholder to the left of the decimal separator.</span></span> <span data-ttu-id="909a5-363">В некоторых локалях в качестве десятичного разделителя используется запятая.</span><span class="sxs-lookup"><span data-stu-id="909a5-363">In some locales, a comma is used as the decimal separator.</span></span> <span data-ttu-id="909a5-364">Фактический символ, используемый в качестве десятичного заполнителя в отформатированном значении, зависит от числового формата, распознаваемого системой.</span><span class="sxs-lookup"><span data-stu-id="909a5-364">The actual character used as a decimal placeholder in the formatted output depends on the number format recognized by your system.</span></span> <span data-ttu-id="909a5-365">Поэтому даже в локали, где десятичным разделителем служит запятая, в выражениях форматирования в качестве десятичного заполнителя следует использовать точку.</span><span class="sxs-lookup"><span data-stu-id="909a5-365">Thus, you should use the period as the decimal placeholder in your formats even if you are in a locale that uses a comma as a decimal placeholder.</span></span> <span data-ttu-id="909a5-366">Отформатированная строка будет выводиться в соответствии с локалью.</span><span class="sxs-lookup"><span data-stu-id="909a5-366">The formatted string will appear in the format correct for the locale.</span></span>|  
|<span data-ttu-id="909a5-367">(`%`)</span><span class="sxs-lookup"><span data-stu-id="909a5-367">(`%`)</span></span>|<span data-ttu-id="909a5-368">Заполнитель процента.</span><span class="sxs-lookup"><span data-stu-id="909a5-368">Percent placeholder.</span></span> <span data-ttu-id="909a5-369">Умножает выражение на 100.</span><span class="sxs-lookup"><span data-stu-id="909a5-369">Multiplies the expression by 100.</span></span> <span data-ttu-id="909a5-370">Символ процента (`%`) вставляется в позицию, где она отображается в строке формата.</span><span class="sxs-lookup"><span data-stu-id="909a5-370">The percent character (`%`) is inserted in the position where it appears in the format string.</span></span>|  
|<span data-ttu-id="909a5-371">(`,`)</span><span class="sxs-lookup"><span data-stu-id="909a5-371">(`,`)</span></span>|<span data-ttu-id="909a5-372">Разделитель групп разрядов.</span><span class="sxs-lookup"><span data-stu-id="909a5-372">Thousand separator.</span></span> <span data-ttu-id="909a5-373">Разделитель групп разрядов отделяет тысячи от сотен в числе с четырьмя или более разрядами слева от десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-373">The thousand separator separates thousands from hundreds within a number that has four or more places to the left of the decimal separator.</span></span> <span data-ttu-id="909a5-374">Стандартное использование разделителя тысяч указывается, если формат содержит десятичный разделитель, окруженный заполнителями цифр (`0` или `#`).</span><span class="sxs-lookup"><span data-stu-id="909a5-374">Standard use of the thousand separator is specified if the format contains a thousand separator surrounded by digit placeholders (`0` or `#`).</span></span><br /><br /> <span data-ttu-id="909a5-375">Если разделитель групп разрядов расположен непосредственно слева от десятичного разделителя (независимо от того, указаны ли десятичные знаки) или в конце строки, это равносильно делению числа на 1 000 с последующим округлением.</span><span class="sxs-lookup"><span data-stu-id="909a5-375">A thousand separator immediately to the left of the decimal separator (whether or not a decimal is specified) or as the rightmost character in the string means "scale the number by dividing it by 1,000, rounding as needed."</span></span> <span data-ttu-id="909a5-376">Числа меньше 1 000, но больше или равно 500 отображаются как `1`, а числа меньше 500 отображаются как `0`.</span><span class="sxs-lookup"><span data-stu-id="909a5-376">Numbers smaller than 1,000 but greater or equal to 500 are displayed as `1`, and numbers smaller than 500 are displayed as `0`.</span></span> <span data-ttu-id="909a5-377">Если в этой позиции рядом находятся два разделителя групп разрядов, то число делится на 1 миллион и далее на 1 000 за каждый дополнительный разделитель.</span><span class="sxs-lookup"><span data-stu-id="909a5-377">Two adjacent thousand separators in this position scale by a factor of 1 million, and an additional factor of 1,000 for each additional separator.</span></span><br /><br /> <span data-ttu-id="909a5-378">Несколько разделителей групп разрядов в любой позиции, кроме позиции непосредственно слева от десятичного разделителя или конечной позиции в строке, интерпретируются просто как разделители групп разрядов.</span><span class="sxs-lookup"><span data-stu-id="909a5-378">Multiple separators in any position other than immediately to the left of the decimal separator or the rightmost position in the string are treated simply as specifying the use of a thousand separator.</span></span> <span data-ttu-id="909a5-379">В некоторых локалях в качестве разделителя групп разрядов используется точка.</span><span class="sxs-lookup"><span data-stu-id="909a5-379">In some locales, a period is used as a thousand separator.</span></span> <span data-ttu-id="909a5-380">Фактический символ, используемый в качестве разделителя групп разрядов в отформатированном значении, зависит от числового формата, распознаваемого системой.</span><span class="sxs-lookup"><span data-stu-id="909a5-380">The actual character used as the thousand separator in the formatted output depends on the Number Format recognized by your system.</span></span> <span data-ttu-id="909a5-381">Поэтому даже в локалях, где разделителем групп разрядов служит точка, в выражениях форматирования следует использовать запятую.</span><span class="sxs-lookup"><span data-stu-id="909a5-381">Thus, you should use the comma as the thousand separator in your formats even if you are in a locale that uses a period as a thousand separator.</span></span> <span data-ttu-id="909a5-382">Отформатированная строка будет выводиться в соответствии с локалью.</span><span class="sxs-lookup"><span data-stu-id="909a5-382">The formatted string will appear in the format correct for the locale.</span></span><br /><br /> <span data-ttu-id="909a5-383">Рассмотрим три строки форматирования:</span><span class="sxs-lookup"><span data-stu-id="909a5-383">For example, consider the three following format strings:</span></span><br /><br /> <span data-ttu-id="909a5-384">-   `"#,0."`, который использует разделитель тысяч для форматирования числа 100 000 000 в виде строки "100 000 000".</span><span class="sxs-lookup"><span data-stu-id="909a5-384">-   `"#,0."`, which uses the thousands separator to format the number 100 million as the string "100,000,000".</span></span><br /><span data-ttu-id="909a5-385">-   `"#0,."`, который использует масштабирование с коэффициентом 1000, чтобы отформатировать число 100 000 000 как строку "100000".</span><span class="sxs-lookup"><span data-stu-id="909a5-385">-   `"#0,."`, which uses scaling by a factor of one thousand to format the number 100 million as the string "100000".</span></span><br /><span data-ttu-id="909a5-386">-   `"#,0,."`, в котором используется разделитель групп разрядов и масштабирование на 1000 для форматирования числа 100 000 000 в виде строки "100 000".</span><span class="sxs-lookup"><span data-stu-id="909a5-386">-   `"#,0,."`, which uses the thousands separator and scaling by one thousand to format the number 100 million as the string "100,000".</span></span>|  
|<span data-ttu-id="909a5-387">(`:`)</span><span class="sxs-lookup"><span data-stu-id="909a5-387">(`:`)</span></span>|<span data-ttu-id="909a5-388">Разделитель компонентов времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-388">Time separator.</span></span> <span data-ttu-id="909a5-389">В некоторых локалях в качестве разделителя компонентов времени могут использоваться другие символы.</span><span class="sxs-lookup"><span data-stu-id="909a5-389">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="909a5-390">Разделитель компонентов времени разделяет часы, минуты и секунды при форматировании значений времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-390">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="909a5-391">Фактический символ, используемый в качестве разделителя компонентов времени в отформатированном значении, зависит от параметров системы.</span><span class="sxs-lookup"><span data-stu-id="909a5-391">The actual character used as the time separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="909a5-392">(`/`)</span><span class="sxs-lookup"><span data-stu-id="909a5-392">(`/`)</span></span>|<span data-ttu-id="909a5-393">Разделитель компонентов даты.</span><span class="sxs-lookup"><span data-stu-id="909a5-393">Date separator.</span></span> <span data-ttu-id="909a5-394">В некоторых локалях и региональных стандартах в качестве разделителя компонентов даты могут использоваться другие символы.</span><span class="sxs-lookup"><span data-stu-id="909a5-394">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="909a5-395">Разделитель компонентов даты разделяет день, месяц и год при форматировании значений даты.</span><span class="sxs-lookup"><span data-stu-id="909a5-395">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="909a5-396">Фактический символ, используемый в качестве разделителя компонентов даты в отформатированном значении, зависит от параметров системы.</span><span class="sxs-lookup"><span data-stu-id="909a5-396">The actual character used as the date separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="909a5-397">(`E-``E+``e-``e+`)</span><span class="sxs-lookup"><span data-stu-id="909a5-397">(`E-``E+``e-``e+`)</span></span>|<span data-ttu-id="909a5-398">Экспоненциальный формат.</span><span class="sxs-lookup"><span data-stu-id="909a5-398">Scientific format.</span></span> <span data-ttu-id="909a5-399">Если выражение формата содержит по крайней мере одну цифру-заполнитель (`0` или `#`) слева от `E-`, `E+`, `e-`или `e+`, то число отображается в экспоненциальном формате, `E` или `e` вставляется между числом и его экспонентой.</span><span class="sxs-lookup"><span data-stu-id="909a5-399">If the format expression contains at least one digit placeholder (`0` or `#`) to the left of `E-`, `E+`, `e-`, or `e+`, the number is displayed in scientific format and `E` or `e` is inserted between the number and its exponent.</span></span> <span data-ttu-id="909a5-400">Количество заполнителей цифр слева определяет количество разрядов в показателе степени.</span><span class="sxs-lookup"><span data-stu-id="909a5-400">The number of digit placeholders to the left determines the number of digits in the exponent.</span></span> <span data-ttu-id="909a5-401">Используйте `E-` или `e-`, чтобы поставить знак минуса рядом с отрицательной экспонентой.</span><span class="sxs-lookup"><span data-stu-id="909a5-401">Use `E-` or `e-` to place a minus sign next to negative exponents.</span></span> <span data-ttu-id="909a5-402">Используйте `E+` или `e+`, чтобы поставить знак минуса рядом с отрицательной экспонентой и знак плюса рядом с положительной экспонентой.</span><span class="sxs-lookup"><span data-stu-id="909a5-402">Use `E+` or `e+` to place a minus sign next to negative exponents and a plus sign next to positive exponents.</span></span> <span data-ttu-id="909a5-403">Для правильного форматирования также необходимо указывать заполнители цифр справа от этого символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-403">You must also include digit placeholders to the right of this symbol to get correct formatting.</span></span>|  
|<span data-ttu-id="909a5-404">`-` `+` `$` ()</span><span class="sxs-lookup"><span data-stu-id="909a5-404">`-` `+` `$` ( )</span></span>|<span data-ttu-id="909a5-405">Литералы.</span><span class="sxs-lookup"><span data-stu-id="909a5-405">Literal characters.</span></span> <span data-ttu-id="909a5-406">Эти символы выводятся так же, как в строке форматирования.</span><span class="sxs-lookup"><span data-stu-id="909a5-406">These characters are displayed exactly as typed in the format string.</span></span> <span data-ttu-id="909a5-407">Чтобы отобразить символ, отличный от приведенного в списке, введите перед ним обратную косую черту (`\`) или заключите его в двойные кавычки ("").</span><span class="sxs-lookup"><span data-stu-id="909a5-407">To display a character other than one of those listed, precede it with a backslash (`\`) or enclose it in double quotation marks (" ").</span></span>|  
|<span data-ttu-id="909a5-408">(`\`)</span><span class="sxs-lookup"><span data-stu-id="909a5-408">(`\`)</span></span>|<span data-ttu-id="909a5-409">Отображает следующий символ в строке формата.</span><span class="sxs-lookup"><span data-stu-id="909a5-409">Displays the next character in the format string.</span></span> <span data-ttu-id="909a5-410">Чтобы отобразить символ, имеющий специальное значение в виде литерального символа, перед ним введите обратную косую черту (`\`).</span><span class="sxs-lookup"><span data-stu-id="909a5-410">To display a character that has special meaning as a literal character, precede it with a backslash (`\`).</span></span> <span data-ttu-id="909a5-411">Сама обратная косая черта не отображается.</span><span class="sxs-lookup"><span data-stu-id="909a5-411">The backslash itself isn't displayed.</span></span> <span data-ttu-id="909a5-412">Использование обратной косой черты аналогично заключению следующего символа в двойные кавычки.</span><span class="sxs-lookup"><span data-stu-id="909a5-412">Using a backslash is the same as enclosing the next character in double quotation marks.</span></span> <span data-ttu-id="909a5-413">Чтобы отобразить обратную косую черту, используйте две обратные косые черты (`\\`).</span><span class="sxs-lookup"><span data-stu-id="909a5-413">To display a backslash, use two backslashes (`\\`).</span></span><br /><br /> <span data-ttu-id="909a5-414">Примеры символов, которые не могут быть показаны в виде литеральных символов, — это форматирование даты и времени (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`и `:`), символы числового форматирования (`#`, `0`, `%`, `E`, `e`, запятая и точка) и символы форматирования строки (`@`, `&`, `<`, `>`и `!`).</span><span class="sxs-lookup"><span data-stu-id="909a5-414">Examples of characters that can't be displayed as literal characters are the date-formatting and time-formatting characters (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, and `:`), the numeric-formatting characters (`#`, `0`, `%`, `E`, `e`, comma, and period), and the string-formatting characters (`@`, `&`, `<`, `>`, and `!`).</span></span>|  
|<span data-ttu-id="909a5-415">(`"``ABC``"`)</span><span class="sxs-lookup"><span data-stu-id="909a5-415">(`"``ABC``"`)</span></span>|<span data-ttu-id="909a5-416">Выводит строку, заключенную в двойные кавычки ("").</span><span class="sxs-lookup"><span data-stu-id="909a5-416">Displays the string inside the double quotation marks (" ").</span></span> <span data-ttu-id="909a5-417">Чтобы включить строку в аргумент Style из кода, необходимо использовать `Chr(34)`, чтобы заключить текст (`34` является кодом кавычек (")).</span><span class="sxs-lookup"><span data-stu-id="909a5-417">To include a string in the style argument from within code, you must use `Chr(34)` to enclose the text (`34` is the character code for a quotation mark (")).</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="909a5-418">Старый пример кода</span><span class="sxs-lookup"><span data-stu-id="909a5-418">Legacy Code Example</span></span>  
 <span data-ttu-id="909a5-419">В следующей таблице приводятся образцы выражений форматирования для чисел.</span><span class="sxs-lookup"><span data-stu-id="909a5-419">The following table contains some sample format expressions for numbers.</span></span> <span data-ttu-id="909a5-420">(В этих примерах предполагается, что параметр языкового стандарта системы — Английский-U. S.) Первый столбец содержит строки формата для аргумента `Style` функции `Format`; остальные столбцы содержат итоговый результат, если форматированные данные имеют значение, заданное в заголовках столбцов.</span><span class="sxs-lookup"><span data-stu-id="909a5-420">(These examples all assume that your system's locale setting is English-U.S.) The first column contains the format strings for the `Style` argument of the `Format` function; the other columns contain the resulting output if the formatted data has the value given in the column headings.</span></span>  
  
|<span data-ttu-id="909a5-421">Формат (`Style`)</span><span class="sxs-lookup"><span data-stu-id="909a5-421">Format (`Style`)</span></span>|<span data-ttu-id="909a5-422">Отформатированное представление для числа “5”</span><span class="sxs-lookup"><span data-stu-id="909a5-422">"5" formatted as</span></span>|<span data-ttu-id="909a5-423">Отформатированное представление для числа “–5”</span><span class="sxs-lookup"><span data-stu-id="909a5-423">"-5" formatted as</span></span>|<span data-ttu-id="909a5-424">Отформатированное представление для числа “0,5”</span><span class="sxs-lookup"><span data-stu-id="909a5-424">"0.5" formatted as</span></span>|  
|-|-|-|-|  
|`Zero-length string ("")`|`5`|`-5`|`0.5`|  
|`0`|`5`|`-5`|`1`|  
|`0.00`|`5.00`|`-5.00`|`0.50`|  
|`#,##0`|`5`|`-5`|`1`|  
|`$#,##0;($#,##0)`|`$5`|`($5)`|`$1`|  
|`$#,##0.00;($#,##0.00)`|`$5.00`|`($5.00)`|`$0.50`|  
|`0%`|`500%`|`-500%`|`50%`|  
|`0.00%`|`500.00%`|`-500.00%`|`50.00%`|  
|`0.00E+00`|`5.00E+00`|`-5.00E+00`|`5.00E-01`|  
|`0.00E-00`|`5.00E00`|`-5.00E00`|`5.00E-01`|  
  
## <a name="predefined-datetime-formats"></a><span data-ttu-id="909a5-425">Стандартные форматы даты и времени</span><span class="sxs-lookup"><span data-stu-id="909a5-425">Predefined Date/Time Formats</span></span>  
 <span data-ttu-id="909a5-426">В следующей таблице приведены имена стандартных форматов даты и времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-426">The following table identifies the predefined date and time format names.</span></span> <span data-ttu-id="909a5-427">Они могут использоваться именем в качестве аргумента Style для функции `Format`:</span><span class="sxs-lookup"><span data-stu-id="909a5-427">These may be used by name as the style argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="909a5-428">Название формата</span><span class="sxs-lookup"><span data-stu-id="909a5-428">Format Name</span></span>|<span data-ttu-id="909a5-429">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-429">Description</span></span>|  
|-|-|  
|<span data-ttu-id="909a5-430">`General Date`или `G`</span><span class="sxs-lookup"><span data-stu-id="909a5-430">`General Date`, or `G`</span></span>|<span data-ttu-id="909a5-431">Отображает дату и/или время.</span><span class="sxs-lookup"><span data-stu-id="909a5-431">Displays a date and/or time.</span></span> <span data-ttu-id="909a5-432">Например, `3/12/2008 11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="909a5-432">For example, `3/12/2008 11:07:31 AM`.</span></span> <span data-ttu-id="909a5-433">Отображение даты определяется текущим значением культуры в приложении.</span><span class="sxs-lookup"><span data-stu-id="909a5-433">Date display is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="909a5-434">`Long Date`, `Medium Date`или `D`</span><span class="sxs-lookup"><span data-stu-id="909a5-434">`Long Date`, `Medium Date`, or `D`</span></span>|<span data-ttu-id="909a5-435">Отображает дату в соответствии с полным форматом даты в текущей культуре.</span><span class="sxs-lookup"><span data-stu-id="909a5-435">Displays a date according to your current culture's long date format.</span></span> <span data-ttu-id="909a5-436">Например, `Wednesday, March 12, 2008`.</span><span class="sxs-lookup"><span data-stu-id="909a5-436">For example, `Wednesday, March 12, 2008`.</span></span>|  
|<span data-ttu-id="909a5-437">`Short Date`или `d`</span><span class="sxs-lookup"><span data-stu-id="909a5-437">`Short Date`, or `d`</span></span>|<span data-ttu-id="909a5-438">Отображает дату в соответствии с кратким форматом даты в текущей культуре.</span><span class="sxs-lookup"><span data-stu-id="909a5-438">Displays a date using your current culture's short date format.</span></span> <span data-ttu-id="909a5-439">Например, `3/12/2008`.</span><span class="sxs-lookup"><span data-stu-id="909a5-439">For example, `3/12/2008`.</span></span><br /><br /> <span data-ttu-id="909a5-440">`d` символ отображает день в определяемом пользователем формате даты.</span><span class="sxs-lookup"><span data-stu-id="909a5-440">The `d` character displays the day in a user-defined date format.</span></span>|  
|<span data-ttu-id="909a5-441">`Long Time`, `Medium Time`или `T`</span><span class="sxs-lookup"><span data-stu-id="909a5-441">`Long Time`, `Medium Time`, or `T`</span></span>|<span data-ttu-id="909a5-442">Выводит время в соответствии с полным форматом времени в текущей культуре. Обычно указываются часы, минуты и секунды.</span><span class="sxs-lookup"><span data-stu-id="909a5-442">Displays a time using your current culture's long time format; typically includes hours, minutes, seconds.</span></span> <span data-ttu-id="909a5-443">Например, `11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="909a5-443">For example, `11:07:31 AM`.</span></span>|  
|<span data-ttu-id="909a5-444">`Short Time` или `t`</span><span class="sxs-lookup"><span data-stu-id="909a5-444">`Short Time` or `t`</span></span>|<span data-ttu-id="909a5-445">Отображает время в соответствии с кратким форматом времени в текущей культуре.</span><span class="sxs-lookup"><span data-stu-id="909a5-445">Displays a time using your current culture's short time format.</span></span> <span data-ttu-id="909a5-446">Например, `11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="909a5-446">For example, `11:07 AM`.</span></span><br /><br /> <span data-ttu-id="909a5-447">`t` символ отображает `AM` или `PM` значения для языковых стандартов, которые используют 12-часовой формат времени в определенном пользователем формате.</span><span class="sxs-lookup"><span data-stu-id="909a5-447">The `t` character displays `AM` or `PM` values for locales that use a 12-hour clock in a user-defined time format.</span></span>|  
|`f`|<span data-ttu-id="909a5-448">Отображает дату в соответствии с полным форматом и время в соответствии с кратким форматом в текущей культуре.</span><span class="sxs-lookup"><span data-stu-id="909a5-448">Displays the long date and short time according to your current culture's format.</span></span> <span data-ttu-id="909a5-449">Например, `Wednesday, March 12, 2008 11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="909a5-449">For example, `Wednesday, March 12, 2008 11:07 AM`.</span></span>|  
|`F`|<span data-ttu-id="909a5-450">Отображает дату в соответствии с полным форматом и время в соответствии с полным форматом в текущей культуре.</span><span class="sxs-lookup"><span data-stu-id="909a5-450">Displays the long date and long time according to your current culture's format.</span></span> <span data-ttu-id="909a5-451">Например, `Wednesday, March 12, 2008 11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="909a5-451">For example, `Wednesday, March 12, 2008 11:07:31 AM`.</span></span>|  
|`g`|<span data-ttu-id="909a5-452">Отображает дату в соответствии с кратким форматом и время в соответствии с кратким форматом в текущей культуре.</span><span class="sxs-lookup"><span data-stu-id="909a5-452">Displays the short date and short time according to your current culture's format.</span></span> <span data-ttu-id="909a5-453">Например, `3/12/2008 11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="909a5-453">For example, `3/12/2008 11:07 AM`.</span></span>|  
|<span data-ttu-id="909a5-454">`M`, `m`</span><span class="sxs-lookup"><span data-stu-id="909a5-454">`M`, `m`</span></span>|<span data-ttu-id="909a5-455">Отображает месяц и день для даты.</span><span class="sxs-lookup"><span data-stu-id="909a5-455">Displays the month and the day of a date.</span></span> <span data-ttu-id="909a5-456">Например, `March 12`.</span><span class="sxs-lookup"><span data-stu-id="909a5-456">For example, `March 12`.</span></span><br /><br /> <span data-ttu-id="909a5-457">`M` символ отображает месяц в определенном пользователем формате даты.</span><span class="sxs-lookup"><span data-stu-id="909a5-457">The `M` character displays the month in a user-defined date format.</span></span> <span data-ttu-id="909a5-458">`m` символ отображает минуты в определенном пользователем формате времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-458">The `m` character displays the minutes in a user-defined time format.</span></span>|  
|<span data-ttu-id="909a5-459">`R`, `r`</span><span class="sxs-lookup"><span data-stu-id="909a5-459">`R`, `r`</span></span>|<span data-ttu-id="909a5-460">Форматирует дату в соответствии со свойством <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>.</span><span class="sxs-lookup"><span data-stu-id="909a5-460">Formats the date according to the <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> property.</span></span> <span data-ttu-id="909a5-461">Например, `Wed, 12 Mar 2008 11:07:31 GMT`.</span><span class="sxs-lookup"><span data-stu-id="909a5-461">For example, `Wed, 12 Mar 2008 11:07:31 GMT`.</span></span> <span data-ttu-id="909a5-462">При форматировании даты не изменяется значение даты и времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-462">The formatted date does not adjust the value of the date and time.</span></span> <span data-ttu-id="909a5-463">Перед вызовом функции `Format` необходимо изменить значение даты и времени на GMT.</span><span class="sxs-lookup"><span data-stu-id="909a5-463">You must adjust the Date/Time value to GMT before calling the `Format` function.</span></span>|  
|`s`|<span data-ttu-id="909a5-464">Форматирует дату и время в виде сортируемого индекса.</span><span class="sxs-lookup"><span data-stu-id="909a5-464">Formats the date and time as a sortable index.</span></span> <span data-ttu-id="909a5-465">Например, `2008-03-12T11:07:31`.</span><span class="sxs-lookup"><span data-stu-id="909a5-465">For example, `2008-03-12T11:07:31`.</span></span><br /><br /> <span data-ttu-id="909a5-466">Символ `s` отображает секунды в определенном пользователем формате времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-466">The `s` character displays the seconds in a user-defined time format.</span></span>|  
|`u`|<span data-ttu-id="909a5-467">Форматирует дату и время в виде сортируемого индекса GMT.</span><span class="sxs-lookup"><span data-stu-id="909a5-467">Formats the date and time as a GMT sortable index.</span></span> <span data-ttu-id="909a5-468">Например, `2008-03-12 11:07:31Z`.</span><span class="sxs-lookup"><span data-stu-id="909a5-468">For example, `2008-03-12 11:07:31Z`.</span></span>|  
|`U`|<span data-ttu-id="909a5-469">Форматирует дату и время в стандарте GMT, используя полный формат даты и полный формат времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-469">Formats the date and time with the long date and long time as GMT.</span></span> <span data-ttu-id="909a5-470">Например, `Wednesday, March 12, 2008 6:07:31 PM`.</span><span class="sxs-lookup"><span data-stu-id="909a5-470">For example, `Wednesday, March 12, 2008 6:07:31 PM`.</span></span>|  
|<span data-ttu-id="909a5-471">`Y`, `y`</span><span class="sxs-lookup"><span data-stu-id="909a5-471">`Y`, `y`</span></span>|<span data-ttu-id="909a5-472">Форматирует дату в виде года и месяца.</span><span class="sxs-lookup"><span data-stu-id="909a5-472">Formats the date as the year and month.</span></span> <span data-ttu-id="909a5-473">Например, `March, 2008`.</span><span class="sxs-lookup"><span data-stu-id="909a5-473">For example, `March, 2008`.</span></span><br /><br /> <span data-ttu-id="909a5-474">Символы `Y` и `y` отображают год в определяемом пользователем формате даты.</span><span class="sxs-lookup"><span data-stu-id="909a5-474">The `Y` and `y` characters display the year in a user-defined date format.</span></span>|  
  
 <span data-ttu-id="909a5-475">Дополнительные сведения о текущем языке и региональных параметрах приложения см. [в разделе влияние языка и региональных параметров на строки в Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="909a5-475">For more information about the application's current culture information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
## <a name="user-defined-datetime-formats"></a><span data-ttu-id="909a5-476">Пользовательские форматы даты и времени</span><span class="sxs-lookup"><span data-stu-id="909a5-476">User-Defined Date/Time Formats</span></span>  
 <span data-ttu-id="909a5-477">В следующей таблице показаны символы, с помощью которых можно создавать определяемые пользователем форматы даты-времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-477">The following table shows characters you can use to create user-defined date/time formats.</span></span> <span data-ttu-id="909a5-478">В отличие от более ранних версий Visual Basic, в этих символах формата учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-478">Unlike in earlier versions of Visual Basic, these format characters are case-sensitive.</span></span>  
  
|<span data-ttu-id="909a5-479">Знак</span><span class="sxs-lookup"><span data-stu-id="909a5-479">Character</span></span>|<span data-ttu-id="909a5-480">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-480">Description</span></span>|  
|-|-|  
|<span data-ttu-id="909a5-481">(`:`)</span><span class="sxs-lookup"><span data-stu-id="909a5-481">(`:`)</span></span>|<span data-ttu-id="909a5-482">Разделитель компонентов времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-482">Time separator.</span></span> <span data-ttu-id="909a5-483">В некоторых локалях в качестве разделителя компонентов времени могут использоваться другие символы.</span><span class="sxs-lookup"><span data-stu-id="909a5-483">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="909a5-484">Разделитель компонентов времени разделяет часы, минуты и секунды при форматировании значений времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-484">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="909a5-485">Символ, фактически используемый в качестве разделителя компонентов времени в отформатированном значении, зависит от текущего значения культуры в приложении.</span><span class="sxs-lookup"><span data-stu-id="909a5-485">The actual character that is used as the time separator in formatted output is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="909a5-486">(`/`)</span><span class="sxs-lookup"><span data-stu-id="909a5-486">(`/`)</span></span>|<span data-ttu-id="909a5-487">Разделитель компонентов даты.</span><span class="sxs-lookup"><span data-stu-id="909a5-487">Date separator.</span></span> <span data-ttu-id="909a5-488">В некоторых локалях и региональных стандартах в качестве разделителя компонентов даты могут использоваться другие символы.</span><span class="sxs-lookup"><span data-stu-id="909a5-488">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="909a5-489">Разделитель компонентов даты разделяет день, месяц и год при форматировании значений даты.</span><span class="sxs-lookup"><span data-stu-id="909a5-489">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="909a5-490">Символ, фактически используемый в качестве разделителя компонентов даты в отформатированном значении, зависит от текущего значения культуры в приложении.</span><span class="sxs-lookup"><span data-stu-id="909a5-490">The actual character that is used as the date separator in formatted output is determined by your application's current culture.</span></span>|  
|<span data-ttu-id="909a5-491">(`%`)</span><span class="sxs-lookup"><span data-stu-id="909a5-491">(`%`)</span></span>|<span data-ttu-id="909a5-492">Указывает, что следующий символ должен считываться в однобуквенном формате без учета последующих букв.</span><span class="sxs-lookup"><span data-stu-id="909a5-492">Used to indicate that the following character should be read as a single-letter format without regard to any trailing letters.</span></span> <span data-ttu-id="909a5-493">Также может показывать, что однобуквенный формат считывается как определяемый пользователем формат.</span><span class="sxs-lookup"><span data-stu-id="909a5-493">Also used to indicate that a single-letter format is read as a user-defined format.</span></span> <span data-ttu-id="909a5-494">Дополнительные сведения см. далее.</span><span class="sxs-lookup"><span data-stu-id="909a5-494">See what follows for additional details.</span></span>|  
|`d`|<span data-ttu-id="909a5-495">Отображает день в виде числа без нуля в начале (например, `1`).</span><span class="sxs-lookup"><span data-stu-id="909a5-495">Displays the day as a number without a leading zero (for example, `1`).</span></span> <span data-ttu-id="909a5-496">Используйте `%d`, если это единственный символ в определяемом пользователем числовом формате.</span><span class="sxs-lookup"><span data-stu-id="909a5-496">Use `%d` if this is the only character in your user-defined numeric format.</span></span>|  
|`dd`|<span data-ttu-id="909a5-497">Выводит день в виде числа с нулем в начале (например, `01`).</span><span class="sxs-lookup"><span data-stu-id="909a5-497">Displays the day as a number with a leading zero (for example, `01`).</span></span>|  
|`ddd`|<span data-ttu-id="909a5-498">Выводит день в виде аббревиатуры (например, `Sun`).</span><span class="sxs-lookup"><span data-stu-id="909a5-498">Displays the day as an abbreviation (for example, `Sun`).</span></span>|  
|`dddd`|<span data-ttu-id="909a5-499">Отображает день в виде полного имени (например, `Sunday`).</span><span class="sxs-lookup"><span data-stu-id="909a5-499">Displays the day as a full name (for example, `Sunday`).</span></span>|  
|`M`|<span data-ttu-id="909a5-500">Выводит месяц в виде числа без нуля в начале (например, Январь представлен как `1`).</span><span class="sxs-lookup"><span data-stu-id="909a5-500">Displays the month as a number without a leading zero (for example, January is represented as `1`).</span></span> <span data-ttu-id="909a5-501">Используйте `%M`, если это единственный символ в определяемом пользователем числовом формате.</span><span class="sxs-lookup"><span data-stu-id="909a5-501">Use `%M` if this is the only character in your user-defined numeric format.</span></span>|  
|`MM`|<span data-ttu-id="909a5-502">Выводит месяц в виде числа с нулем в начале (например, `01/12/01`).</span><span class="sxs-lookup"><span data-stu-id="909a5-502">Displays the month as a number with a leading zero (for example, `01/12/01`).</span></span>|  
|`MMM`|<span data-ttu-id="909a5-503">Выводит название месяца в виде аббревиатуры (например, `Jan`).</span><span class="sxs-lookup"><span data-stu-id="909a5-503">Displays the month as an abbreviation (for example, `Jan`).</span></span>|  
|`MMMM`|<span data-ttu-id="909a5-504">Отображает месяц в виде полного названия месяца (например, `January`).</span><span class="sxs-lookup"><span data-stu-id="909a5-504">Displays the month as a full month name (for example, `January`).</span></span>|  
|`gg`|<span data-ttu-id="909a5-505">Отображает строку периода или эры (например, `A.D.`).</span><span class="sxs-lookup"><span data-stu-id="909a5-505">Displays the period/era string (for example, `A.D.`).</span></span>|  
|`h`|<span data-ttu-id="909a5-506">Отображает часы в виде числа без ведущих нулей в 12-часовом формате (например, `1:15:15 PM`).</span><span class="sxs-lookup"><span data-stu-id="909a5-506">Displays the hour as a number without leading zeros using the 12-hour clock (for example, `1:15:15 PM`).</span></span> <span data-ttu-id="909a5-507">Используйте `%h`, если это единственный символ в определяемом пользователем числовом формате.</span><span class="sxs-lookup"><span data-stu-id="909a5-507">Use `%h` if this is the only character in your user-defined numeric format.</span></span>|  
|`hh`|<span data-ttu-id="909a5-508">Отображает часы в виде числа с начальными нулями, используя 12-часовой формат (например, `01:15:15 PM`).</span><span class="sxs-lookup"><span data-stu-id="909a5-508">Displays the hour as a number with leading zeros using the 12-hour clock (for example, `01:15:15 PM`).</span></span>|  
|`H`|<span data-ttu-id="909a5-509">Отображает часы в виде числа без ведущих нулей в 24-часовом формате (например, `1:15:15`).</span><span class="sxs-lookup"><span data-stu-id="909a5-509">Displays the hour as a number without leading zeros using the 24-hour clock (for example, `1:15:15`).</span></span> <span data-ttu-id="909a5-510">Используйте `%H`, если это единственный символ в определяемом пользователем числовом формате.</span><span class="sxs-lookup"><span data-stu-id="909a5-510">Use `%H` if this is the only character in your user-defined numeric format.</span></span>|  
|`HH`|<span data-ttu-id="909a5-511">Отображает часы в виде числа с начальными нулями, используя 24-часовой формат (например, `01:15:15`).</span><span class="sxs-lookup"><span data-stu-id="909a5-511">Displays the hour as a number with leading zeros using the 24-hour clock (for example, `01:15:15`).</span></span>|  
|`m`|<span data-ttu-id="909a5-512">Отображает минуты в виде числа без ведущих нулей (например, `12:1:15`).</span><span class="sxs-lookup"><span data-stu-id="909a5-512">Displays the minute as a number without leading zeros (for example, `12:1:15`).</span></span> <span data-ttu-id="909a5-513">Используйте `%m`, если это единственный символ в определяемом пользователем числовом формате.</span><span class="sxs-lookup"><span data-stu-id="909a5-513">Use `%m` if this is the only character in your user-defined numeric format.</span></span>|  
|`mm`|<span data-ttu-id="909a5-514">Отображает минуты в виде числа с нулями в начале (например, `12:01:15`).</span><span class="sxs-lookup"><span data-stu-id="909a5-514">Displays the minute as a number with leading zeros (for example, `12:01:15`).</span></span>|  
|`s`|<span data-ttu-id="909a5-515">Отображает секунды в виде числа без ведущих нулей (например, `12:15:5`).</span><span class="sxs-lookup"><span data-stu-id="909a5-515">Displays the second as a number without leading zeros (for example, `12:15:5`).</span></span> <span data-ttu-id="909a5-516">Используйте `%s`, если это единственный символ в определяемом пользователем числовом формате.</span><span class="sxs-lookup"><span data-stu-id="909a5-516">Use `%s` if this is the only character in your user-defined numeric format.</span></span>|  
|`ss`|<span data-ttu-id="909a5-517">Отображает секунды в виде числа с нулями в начале (например, `12:15:05`).</span><span class="sxs-lookup"><span data-stu-id="909a5-517">Displays the second as a number with leading zeros (for example, `12:15:05`).</span></span>|  
|`f`|<span data-ttu-id="909a5-518">Выводит доли секунды.</span><span class="sxs-lookup"><span data-stu-id="909a5-518">Displays fractions of seconds.</span></span> <span data-ttu-id="909a5-519">Например `ff` отображает сотые доли секунд, в то время как `ffff` отображает десять тысячных долей секунды.</span><span class="sxs-lookup"><span data-stu-id="909a5-519">For example `ff` displays hundredths of seconds, whereas `ffff` displays ten-thousandths of seconds.</span></span> <span data-ttu-id="909a5-520">В пользовательском формате можно использовать до семи `f` символов.</span><span class="sxs-lookup"><span data-stu-id="909a5-520">You may use up to seven `f` symbols in your user-defined format.</span></span> <span data-ttu-id="909a5-521">Используйте `%f`, если это единственный символ в определяемом пользователем числовом формате.</span><span class="sxs-lookup"><span data-stu-id="909a5-521">Use `%f` if this is the only character in your user-defined numeric format.</span></span>|  
|`t`|<span data-ttu-id="909a5-522">Использует 12-часовой формат времени и отображает `A` в верхнем регистре для любого часа до полудня; Отображает `P` в верхнем регистре для любого часа в диапазоне от полудня до 11:59 вечера.</span><span class="sxs-lookup"><span data-stu-id="909a5-522">Uses the 12-hour clock and displays an uppercase `A` for any hour before noon; displays an uppercase `P` for any hour between noon and 11:59 P.M.</span></span> <span data-ttu-id="909a5-523">Используйте `%t`, если это единственный символ в определяемом пользователем числовом формате.</span><span class="sxs-lookup"><span data-stu-id="909a5-523">Use `%t` if this is the only character in your user-defined numeric format.</span></span>|  
|`tt`|<span data-ttu-id="909a5-524">Для национальных настроек, в которых используется 12-часовой формат времени, отображает прописные `AM` с любым часовым до полудня; Отображает `PM` в верхнем регистре с любым часовым интервалом от полудня до 11:59 вечера.</span><span class="sxs-lookup"><span data-stu-id="909a5-524">For locales that use a 12-hour clock, displays an uppercase `AM` with any hour before noon; displays an uppercase `PM` with any hour between noon and 11:59 P.M.</span></span><br /><br /> <span data-ttu-id="909a5-525">В локалях, использующих 24-часовой формат времени, не выводит ничего.</span><span class="sxs-lookup"><span data-stu-id="909a5-525">For locales that use a 24-hour clock, displays nothing.</span></span>|  
|`y`|<span data-ttu-id="909a5-526">Выводит год без ведущих нулей (0-9).</span><span class="sxs-lookup"><span data-stu-id="909a5-526">Displays the year number (0-9) without leading zeros.</span></span> <span data-ttu-id="909a5-527">Используйте `%y`, если это единственный символ в определяемом пользователем числовом формате.</span><span class="sxs-lookup"><span data-stu-id="909a5-527">Use `%y` if this is the only character in your user-defined numeric format.</span></span>|  
|`yy`|<span data-ttu-id="909a5-528">Выводит год в виде двух цифр, в случае необходимости указываются ведущие нули.</span><span class="sxs-lookup"><span data-stu-id="909a5-528">Displays the year in two-digit numeric format with a leading zero, if applicable.</span></span>|  
|`yyy`|<span data-ttu-id="909a5-529">Выводит год в формате из четырех цифр.</span><span class="sxs-lookup"><span data-stu-id="909a5-529">Displays the year in four-digit numeric format.</span></span>|  
|`yyyy`|<span data-ttu-id="909a5-530">Выводит год в формате из четырех цифр.</span><span class="sxs-lookup"><span data-stu-id="909a5-530">Displays the year in four-digit numeric format.</span></span>|  
|`z`|<span data-ttu-id="909a5-531">Отображает смещение часового пояса без нуля в начале (например, `-8`).</span><span class="sxs-lookup"><span data-stu-id="909a5-531">Displays the timezone offset without a leading zero (for example, `-8`).</span></span> <span data-ttu-id="909a5-532">Используйте `%z`, если это единственный символ в определяемом пользователем числовом формате.</span><span class="sxs-lookup"><span data-stu-id="909a5-532">Use `%z` if this is the only character in your user-defined numeric format.</span></span>|  
|`zz`|<span data-ttu-id="909a5-533">Отображает смещение часового пояса с ведущим нулем (например, `-08`)</span><span class="sxs-lookup"><span data-stu-id="909a5-533">Displays the timezone offset with a leading zero (for example, `-08`)</span></span>|  
|`zzz`|<span data-ttu-id="909a5-534">Отображает полное смещение часового пояса (например, `-08:00`).</span><span class="sxs-lookup"><span data-stu-id="909a5-534">Displays the full timezone offset (for example, `-08:00`)</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="909a5-535">Старый пример кода</span><span class="sxs-lookup"><span data-stu-id="909a5-535">Legacy Code Example</span></span>  
 <span data-ttu-id="909a5-536">Ниже приведены примеры определяемых пользователем форматов даты и времени для `December 7, 1958, 8:50 PM, 35 seconds`.</span><span class="sxs-lookup"><span data-stu-id="909a5-536">The following are examples of user-defined date and time formats for `December 7, 1958, 8:50 PM, 35 seconds`:</span></span>  
  
|<span data-ttu-id="909a5-537">Формат</span><span class="sxs-lookup"><span data-stu-id="909a5-537">Format</span></span>|<span data-ttu-id="909a5-538">Отображение</span><span class="sxs-lookup"><span data-stu-id="909a5-538">Displays</span></span>|  
|-|-|  
|`M/d/yy`|`12/7/58`|  
|`d-MMM`|`7-Dec`|  
|`d-MMMM-yy`|`7-December-58`|  
|`d MMMM`|`7 December`|  
|`MMMM yy`|`December 58`|  
|`hh:mm tt`|`08:50 PM`|  
|`h:mm:ss t`|`8:50:35 P`|  
|`H:mm`|`20:50`|  
|`H:mm:ss`|`20:50:35`|  
|`M/d/yyyy H:mm`|`12/7/1958 20:50`|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-539">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-539">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-540">Минимальное разрешение времени для устройства определяется производителем устройства.</span><span class="sxs-lookup"><span data-stu-id="909a5-540">The minimum time resolution for a device is determined by the manufacturer of the device.</span></span> <span data-ttu-id="909a5-541">Если разрешающее время для устройства достаточно велика, символ формата `f` возвращает 0 при запуске на этом устройстве.</span><span class="sxs-lookup"><span data-stu-id="909a5-541">If the time resolution for the device is coarse enough, the `f` format character returns 0 when run on that device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-542">В данном примере показаны различные способы использования функции `Format` для форматирования значений с применением как форматов `String`, так и определенных пользователем форматов.</span><span class="sxs-lookup"><span data-stu-id="909a5-542">This example shows various uses of the `Format` function to format values using both `String` formats and user-defined formats.</span></span> <span data-ttu-id="909a5-543">Фактическое отображение системой разделителя даты (`/`), разделителя времени (`:` и индикаторов AM/PM (`t` и `tt`) зависит от региональных параметров, применяемых кодом.</span><span class="sxs-lookup"><span data-stu-id="909a5-543">For the date separator (`/`), time separator (`:`), and the AM/PM indicators (`t` and `tt`), the actual formatted output displayed by your system depends on the locale settings the code is using.</span></span> <span data-ttu-id="909a5-544">При отображении времени и даты в среде разработки используется короткий формат времени и даты региональных установок кода.</span><span class="sxs-lookup"><span data-stu-id="909a5-544">When times and dates are displayed in the development environment, the short time format and short date format of the code locale are used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-545">Для языков, использующих 24-часовой формат, индикаторы AM/PM (`t` и `tt`) не отображаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-545">For locales that use a 24-hour clock, the AM/PM indicators (`t` and `tt`) display nothing.</span></span>  
  
 [!code-vb[VbVbalrStrings#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-546">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-546">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatCurrency">
      <MemberSignature Language="C#" Value="public static string FormatCurrency (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatCurrency(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatCurrency (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatCurrency : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatCurrency (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatCurrency(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-547">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-547">Required.</span></span> <span data-ttu-id="909a5-548">Форматируемое выражение.</span><span class="sxs-lookup"><span data-stu-id="909a5-548">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="909a5-549">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-549">Optional.</span></span> <span data-ttu-id="909a5-550">Числовое значение, указывающее количество цифр, которые должны быть отображены справа от десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-550">Numeric value indicating how many places are displayed to the right of the decimal.</span></span> <span data-ttu-id="909a5-551">По умолчанию используется значение –1, указывающее на использование региональных настроек компьютера.</span><span class="sxs-lookup"><span data-stu-id="909a5-551">Default value is -1, which indicates that the computer's regional settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="909a5-552">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-552">Optional.</span></span> <span data-ttu-id="909a5-553">Перечисление <see cref="T:Microsoft.VisualBasic.TriState" />, указывающее, следует ли отображать ноль в начале дробных значений.</span><span class="sxs-lookup"><span data-stu-id="909a5-553"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not a leading zero is displayed for fractional values.</span></span> <span data-ttu-id="909a5-554">Значения см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="909a5-554">See "Remarks" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="909a5-555">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-555">Optional.</span></span> <span data-ttu-id="909a5-556">Перечисление <see cref="T:Microsoft.VisualBasic.TriState" />, указывающее, следует ли заключать отрицательные значения в скобки.</span><span class="sxs-lookup"><span data-stu-id="909a5-556"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not to place negative values within parentheses.</span></span> <span data-ttu-id="909a5-557">Значения см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="909a5-557">See "Remarks" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="909a5-558">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-558">Optional.</span></span> <span data-ttu-id="909a5-559">Перечисление <see cref="T:Microsoft.VisualBasic.TriState" />, указывающее, следует ли объединять разряды чисел в группы, используя разделитель групп, определенный в региональных параметрах компьютера.</span><span class="sxs-lookup"><span data-stu-id="909a5-559"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings.</span></span> <span data-ttu-id="909a5-560">Значения см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="909a5-560">See "Remarks" for values.</span></span></param>
        <summary><span data-ttu-id="909a5-561">Возвращает выражение в формате денежной единицы с использованием символа денежной единицы, определенного в системной панели управления.</span><span class="sxs-lookup"><span data-stu-id="909a5-561">Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</span></span></summary>
        <returns><span data-ttu-id="909a5-562">Выражение в формате денежной единицы с использованием символа денежной единицы, определенного в системной панели управления.</span><span class="sxs-lookup"><span data-stu-id="909a5-562">An expression formatted as a currency value using the currency symbol defined in the system control panel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-563">Если один или несколько необязательных аргументов опущены, вместо них используются соответствующие значения региональных параметров компьютера.</span><span class="sxs-lookup"><span data-stu-id="909a5-563">When one or more optional arguments are omitted, the computer's matching regional-settings values are used instead.</span></span>  
  
 <span data-ttu-id="909a5-564">Расположение символа валюты относительно значения валюты определяется региональными параметрами системы.</span><span class="sxs-lookup"><span data-stu-id="909a5-564">The position of the currency symbol relative to the currency value is determined by the system's regional settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-565">Все сведения о параметрах берутся из языкового стандарта приложения.</span><span class="sxs-lookup"><span data-stu-id="909a5-565">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="909a5-566">По умолчанию это будет языковой стандарт, заданный на панели управления.</span><span class="sxs-lookup"><span data-stu-id="909a5-566">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="909a5-567">Однако его можно изменить программным путем, используя .NET Framework, за исключением начального нуля, которое поступает на вкладке `Number`.</span><span class="sxs-lookup"><span data-stu-id="909a5-567">However, it may be changed programmatically by using the .NET Framework, except leading zero, which comes from the `Number` tab.</span></span>  
  
 <span data-ttu-id="909a5-568">Аргументы `IncludeLeadingDigit`, `UseParensForNegativeNumbers`и `GroupDigits` принимают следующие значения перечисления TriState.</span><span class="sxs-lookup"><span data-stu-id="909a5-568">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments take the following TriState enumeration values.</span></span>  
  
|<span data-ttu-id="909a5-569">Значение</span><span class="sxs-lookup"><span data-stu-id="909a5-569">Value</span></span>|<span data-ttu-id="909a5-570">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-570">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="909a5-571">Да</span><span class="sxs-lookup"><span data-stu-id="909a5-571">True</span></span>|  
|`TriState.False`|<span data-ttu-id="909a5-572">False</span><span class="sxs-lookup"><span data-stu-id="909a5-572">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="909a5-573">Региональные параметры компьютера</span><span class="sxs-lookup"><span data-stu-id="909a5-573">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="909a5-574">В следующем примере показано применение функции `FormatCurrency`.</span><span class="sxs-lookup"><span data-stu-id="909a5-574">The following example illustrates the use of the `FormatCurrency` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-575">Число цифр после десятичного разделителя превышает 99.</span><span class="sxs-lookup"><span data-stu-id="909a5-575">Number of digits after decimal point is greater than 99.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="909a5-576">Тип не является числовым.</span><span class="sxs-lookup"><span data-stu-id="909a5-576">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-577">Управление строками</span><span class="sxs-lookup"><span data-stu-id="909a5-577">String Manipulation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatDateTime">
      <MemberSignature Language="C#" Value="public static string FormatDateTime (DateTime Expression, Microsoft.VisualBasic.DateFormat NamedFormat = Microsoft.VisualBasic.DateFormat.GeneralDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatDateTime(valuetype System.DateTime Expression, valuetype Microsoft.VisualBasic.DateFormat NamedFormat) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatDateTime (Expression As DateTime, Optional NamedFormat As DateFormat = Microsoft.VisualBasic.DateFormat.GeneralDate) As String" />
      <MemberSignature Language="F#" Value="static member FormatDateTime : DateTime * Microsoft.VisualBasic.DateFormat -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatDateTime (Expression, NamedFormat)" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatDateTime(valuetype System.DateTime Expression, valuetype Microsoft.VisualBasic.DateFormat NamedFormat) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="NamedFormat" Type="Microsoft.VisualBasic.DateFormat" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-578">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-578">Required.</span></span> <span data-ttu-id="909a5-579">Форматируемое выражение <see langword="Date" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-579"><see langword="Date" /> expression to be formatted.</span></span></param>
        <param name="NamedFormat"><span data-ttu-id="909a5-580">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-580">Optional.</span></span> <span data-ttu-id="909a5-581">Числовое значение, указывающее используемый формат даты/времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-581">Numeric value that indicates the date/time format used.</span></span> <span data-ttu-id="909a5-582">Если опущен, используется <see langword="DateFormat.GeneralDate" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-582">If omitted, <see langword="DateFormat.GeneralDate" /> is used.</span></span></param>
        <summary><span data-ttu-id="909a5-583">Возвращает строковое выражение, представляющее значение даты и времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-583">Returns a string expression representing a date/time value.</span></span></summary>
        <returns><span data-ttu-id="909a5-584">Строковое выражение, представляющее значение даты и времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-584">A string expression representing a date/time value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-585">`Date` тип данных всегда содержит сведения о дате и времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-585">The `Date` data type always contains both date and time information.</span></span> <span data-ttu-id="909a5-586">В целях преобразования типов Visual Basic учитывает 1/1/1 (1 января 1 года) как нейтральное значение для даты, а 00:00:00 (полночь) — как нейтральное значение времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-586">For purposes of type conversion, Visual Basic considers 1/1/1 (January 1 of the year 1) to be a neutral value for the date, and 00:00:00 (midnight) to be a neutral value for the time.</span></span> <span data-ttu-id="909a5-587">При форматировании `Date` значения в виде строки даты и времени `FormatDateTime` не включает нейтральные значения в результирующую строку.</span><span class="sxs-lookup"><span data-stu-id="909a5-587">If you format a `Date` value as a date/time string, `FormatDateTime` does not include neutral values in the resulting string.</span></span> <span data-ttu-id="909a5-588">Например, если преобразовать #1/1/0001 9:30:00 # в строку, результатом будет "9:30:00 AM"; сведения о дате подавляются.</span><span class="sxs-lookup"><span data-stu-id="909a5-588">For example, if you convert #1/1/0001 9:30:00# to a string, the result is "9:30:00 AM"; the date information is suppressed.</span></span> <span data-ttu-id="909a5-589">Однако сведения о дате по-прежнему содержатся в исходном значении `Date` и могут быть восстановлены с помощью таких функций, как `DatePart`.</span><span class="sxs-lookup"><span data-stu-id="909a5-589">However, the date information is still present in the original `Date` value and can be recovered with functions such as `DatePart`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-590">Если аргумент `Expression` передается как литерал `String`, `FormatDateTime` интерпретирует его в соответствии с параметром <xref:System.Globalization.CultureInfo.CurrentCulture%2A> приложения.</span><span class="sxs-lookup"><span data-stu-id="909a5-590">If you pass the `Expression` argument as a `String` literal, `FormatDateTime` interprets it according to the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> setting of your application.</span></span> <span data-ttu-id="909a5-591">Однако, если вы передаете его в качестве `Date` литерала, используйте формат #mm/дд/ИИИИ #, так как `FormatDateTime` всегда интерпретирует литерал `Date` в соответствии с языком и региональными параметрами "Английский (США)".</span><span class="sxs-lookup"><span data-stu-id="909a5-591">However, if you pass it as a `Date` literal, use the format #mm/dd/yyyy#, because `FormatDateTime` always interprets a `Date` literal according to the English (US) culture.</span></span> <span data-ttu-id="909a5-592">Это необходимо, поскольку, если приложение разрабатывается и кодируется с помощью `Date` литералов из одного языка и региональных параметров, а затем выполняется на платформе с другим языком и региональными параметрами, `Date` литералы могут быть проанализированы неверно.</span><span class="sxs-lookup"><span data-stu-id="909a5-592">This is necessary because, if an application is developed and coded using `Date` literals from one culture, but is then executed on a platform with a different culture, the `Date` literals could be parsed incorrectly.</span></span>  
  
 <span data-ttu-id="909a5-593">Аргумент `NamedFormat` имеет следующие параметры.</span><span class="sxs-lookup"><span data-stu-id="909a5-593">The `NamedFormat` argument has the following settings.</span></span>  
  
|<span data-ttu-id="909a5-594">Константа</span><span class="sxs-lookup"><span data-stu-id="909a5-594">Constant</span></span>|<span data-ttu-id="909a5-595">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-595">Description</span></span>|  
|-|-|  
|`DateFormat.GeneralDate`|<span data-ttu-id="909a5-596">Отображение даты и (или) времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-596">Display a date and/or time.</span></span> <span data-ttu-id="909a5-597">Отображение части даты в виде краткой даты.</span><span class="sxs-lookup"><span data-stu-id="909a5-597">Display a date part as a short date.</span></span> <span data-ttu-id="909a5-598">Если имеется часть времени, отобразите ее в течение длительного времени.</span><span class="sxs-lookup"><span data-stu-id="909a5-598">If there is a time part, display it as a long time.</span></span> <span data-ttu-id="909a5-599">При наличии обеих частей отображается.</span><span class="sxs-lookup"><span data-stu-id="909a5-599">If present, both parts display.</span></span>|  
|`DateFormat.LongDate`|<span data-ttu-id="909a5-600">Отображение даты с использованием длинного формата даты, указанного в региональных параметрах компьютера.</span><span class="sxs-lookup"><span data-stu-id="909a5-600">Display a date using the long date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortDate`|<span data-ttu-id="909a5-601">Отображение даты с использованием краткого формата даты, указанного в региональных параметрах компьютера.</span><span class="sxs-lookup"><span data-stu-id="909a5-601">Display a date using the short date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.LongTime`|<span data-ttu-id="909a5-602">Отображение времени с использованием формата времени, указанного в региональных параметрах компьютера.</span><span class="sxs-lookup"><span data-stu-id="909a5-602">Display a time using the time format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortTime`|<span data-ttu-id="909a5-603">Отображать время в 24-часовом формате (чч: мм).</span><span class="sxs-lookup"><span data-stu-id="909a5-603">Display a time using the 24-hour format (hh:mm).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="909a5-604">В этом примере демонстрируется использование функции `FormatDateTime`.</span><span class="sxs-lookup"><span data-stu-id="909a5-604">This example demonstrates the use of the `FormatDateTime` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-605">Параметр <paramref name="NamedFormat" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="909a5-605"><paramref name="NamedFormat" /> setting is not valid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-606">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-606">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public static string FormatNumber (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatNumber(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatNumber (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatNumber : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatNumber (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatNumber(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-607">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-607">Required.</span></span> <span data-ttu-id="909a5-608">Форматируемое выражение.</span><span class="sxs-lookup"><span data-stu-id="909a5-608">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="909a5-609">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-609">Optional.</span></span> <span data-ttu-id="909a5-610">Числовое значение, указывающее количество цифр, которые должны быть отображены справа от десятичного разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-610">Numeric value indicating how many places are displayed to the right of the decimal.</span></span> <span data-ttu-id="909a5-611">По умолчанию используется значение –1, указывающее на использование региональных настроек компьютера.</span><span class="sxs-lookup"><span data-stu-id="909a5-611">The default value is -1, which indicates that the computer's regional settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="909a5-612">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-612">Optional.</span></span> <span data-ttu-id="909a5-613">Константа <see cref="T:Microsoft.VisualBasic.TriState" />, указывающая, следует ли отображать 0 в начале дробных значений.</span><span class="sxs-lookup"><span data-stu-id="909a5-613"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether a leading 0 is displayed for fractional values.</span></span> <span data-ttu-id="909a5-614">Сведения о значениях см. в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="909a5-614">See "Settings" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="909a5-615">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-615">Optional.</span></span> <span data-ttu-id="909a5-616">Константа <see cref="T:Microsoft.VisualBasic.TriState" />, указывающая, следует ли заключать отрицательные значения в скобки.</span><span class="sxs-lookup"><span data-stu-id="909a5-616"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether to place negative values within parentheses.</span></span> <span data-ttu-id="909a5-617">Сведения о значениях см. в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="909a5-617">See "Settings" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="909a5-618">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-618">Optional.</span></span> <span data-ttu-id="909a5-619">Константа <see cref="T:Microsoft.VisualBasic.TriState" />, указывающая, группируются ли значения с использованием разделителя, указанного в настройках языкового стандарта.</span><span class="sxs-lookup"><span data-stu-id="909a5-619"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span></span> <span data-ttu-id="909a5-620">Сведения о значениях см. в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="909a5-620">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="909a5-621">Возвращает выражение в формате числа.</span><span class="sxs-lookup"><span data-stu-id="909a5-621">Returns an expression formatted as a number.</span></span></summary>
        <returns><span data-ttu-id="909a5-622">Выражение в формате числа.</span><span class="sxs-lookup"><span data-stu-id="909a5-622">An expression formatted as a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-623">Если пропущен один или несколько необязательных аргументов, значения для пропущенных аргументов предоставляются параметрами языкового стандарта.</span><span class="sxs-lookup"><span data-stu-id="909a5-623">When one or more optional arguments are omitted the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-624">Все сведения о параметрах берутся из языкового стандарта приложения.</span><span class="sxs-lookup"><span data-stu-id="909a5-624">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="909a5-625">По умолчанию это будет языковой стандарт, заданный на панели управления.</span><span class="sxs-lookup"><span data-stu-id="909a5-625">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="909a5-626">Однако его можно изменить программно с помощью .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="909a5-626">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="909a5-627">Аргументы `IncludeLeadingDigit`, `UseParensForNegativeNumbers`и `GroupDigits` имеют следующие параметры.</span><span class="sxs-lookup"><span data-stu-id="909a5-627">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="909a5-628">Константа</span><span class="sxs-lookup"><span data-stu-id="909a5-628">Constant</span></span>|<span data-ttu-id="909a5-629">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-629">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="909a5-630">Да</span><span class="sxs-lookup"><span data-stu-id="909a5-630">True</span></span>|  
|`TriState.False`|<span data-ttu-id="909a5-631">False</span><span class="sxs-lookup"><span data-stu-id="909a5-631">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="909a5-632">Региональные параметры компьютера</span><span class="sxs-lookup"><span data-stu-id="909a5-632">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="909a5-633">В этом примере демонстрируется функция `FormatNumber`.</span><span class="sxs-lookup"><span data-stu-id="909a5-633">This example demonstrates the `FormatNumber` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="909a5-634">Тип не является числовым.</span><span class="sxs-lookup"><span data-stu-id="909a5-634">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-635">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-635">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatPercent">
      <MemberSignature Language="C#" Value="public static string FormatPercent (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatPercent(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatPercent (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatPercent : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatPercent (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatPercent(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-636">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-636">Required.</span></span> <span data-ttu-id="909a5-637">Форматируемое выражение.</span><span class="sxs-lookup"><span data-stu-id="909a5-637">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="909a5-638">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-638">Optional.</span></span> <span data-ttu-id="909a5-639">Числовое значение, указывающее количество отображаемых цифр справа от десятичной запятой.</span><span class="sxs-lookup"><span data-stu-id="909a5-639">Numeric value indicating how many places to the right of the decimal are displayed.</span></span> <span data-ttu-id="909a5-640">По умолчанию используется значение –1, указывающее на использование настроек языкового стандарта.</span><span class="sxs-lookup"><span data-stu-id="909a5-640">Default value is -1, which indicates that the locale settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="909a5-641">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-641">Optional.</span></span> <span data-ttu-id="909a5-642">Константа <see cref="T:Microsoft.VisualBasic.TriState" />, указывающая, отображается ли ноль в дробных значениях.</span><span class="sxs-lookup"><span data-stu-id="909a5-642"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not a leading zero displays for fractional values.</span></span> <span data-ttu-id="909a5-643">Сведения о значениях см. в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="909a5-643">See "Settings" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="909a5-644">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-644">Optional.</span></span> <span data-ttu-id="909a5-645">Константа <see cref="T:Microsoft.VisualBasic.TriState" />, указывающая, нужно ли заключать отрицательные значения в скобки.</span><span class="sxs-lookup"><span data-stu-id="909a5-645"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not to place negative values within parentheses.</span></span> <span data-ttu-id="909a5-646">Сведения о значениях см. в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="909a5-646">See "Settings" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="909a5-647">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-647">Optional.</span></span> <span data-ttu-id="909a5-648">Константа <see cref="T:Microsoft.VisualBasic.TriState" />, указывающая, группируются ли значения с использованием разделителя, указанного в настройках языкового стандарта.</span><span class="sxs-lookup"><span data-stu-id="909a5-648"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span></span> <span data-ttu-id="909a5-649">Сведения о значениях см. в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="909a5-649">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="909a5-650">Возвращает выражение в виде процента (умноженное на 100) с символом % в конце.</span><span class="sxs-lookup"><span data-stu-id="909a5-650">Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span></span></summary>
        <returns><span data-ttu-id="909a5-651">Выражение в виде процента (умноженное на 100) с символом % в конце.</span><span class="sxs-lookup"><span data-stu-id="909a5-651">An expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-652">При пропуске одного или нескольких необязательных аргументов значения пропущенных аргументов предоставляются параметрами языкового стандарта.</span><span class="sxs-lookup"><span data-stu-id="909a5-652">When one or more optional arguments are omitted, the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-653">Все сведения о параметрах берутся из языкового стандарта приложения.</span><span class="sxs-lookup"><span data-stu-id="909a5-653">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="909a5-654">По умолчанию это будет языковой стандарт, заданный на панели управления.</span><span class="sxs-lookup"><span data-stu-id="909a5-654">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="909a5-655">Однако его можно изменить программно с помощью .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="909a5-655">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="909a5-656">Аргументы `IncludeLeadingDigit`, `UseParensForNegativeNumbers`и `GroupDigits` имеют следующие параметры.</span><span class="sxs-lookup"><span data-stu-id="909a5-656">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="909a5-657">Константа</span><span class="sxs-lookup"><span data-stu-id="909a5-657">Constant</span></span>|<span data-ttu-id="909a5-658">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-658">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="909a5-659">Да</span><span class="sxs-lookup"><span data-stu-id="909a5-659">True</span></span>|  
|`TriState.False`|<span data-ttu-id="909a5-660">False</span><span class="sxs-lookup"><span data-stu-id="909a5-660">False</span></span>|  
|`TriState.Default`|<span data-ttu-id="909a5-661">Региональные параметры компьютера</span><span class="sxs-lookup"><span data-stu-id="909a5-661">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="909a5-662">В этом примере показано использование функции `FormatPercent`.</span><span class="sxs-lookup"><span data-stu-id="909a5-662">This example illustrates the use of the `FormatPercent` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="909a5-663">Тип не является числовым.</span><span class="sxs-lookup"><span data-stu-id="909a5-663">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-664">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-664">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public static char GetChar (string str, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char GetChar(string str, int32 Index) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChar (str As String, Index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char GetChar(System::String ^ str, int Index);" />
      <MemberSignature Language="F#" Value="static member GetChar : string * int -&gt; char" Usage="Microsoft.VisualBasic.Strings.GetChar (str, Index)" />
      <MemberSignature Language="ILAsm" Value=".method public static char GetChar(string str, int32 Index) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Index" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="909a5-665">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-665">Required.</span></span> <span data-ttu-id="909a5-666">Любое допустимое выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-666">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="Index"><span data-ttu-id="909a5-667">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-667">Required.</span></span> <span data-ttu-id="909a5-668">Выражение <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-668"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="909a5-669">Возвращаемый индекс знака (основанный на 1) в <paramref name="str" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-669">The (1-based) index of the character in <paramref name="str" /> to be returned.</span></span></param>
        <summary><span data-ttu-id="909a5-670">Возвращает значение типа <see langword="Char" />, представляющее знак из указанной позиции в предоставленной строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-670">Returns a <see langword="Char" /> value representing the character from the specified index in the supplied string.</span></span></summary>
        <returns><span data-ttu-id="909a5-671">Значение типа <see langword="Char" />, представляющее знак из указанного индекса в предоставленной строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-671"><see langword="Char" /> value representing the character from the specified index in the supplied string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-672">Если `Index` меньше 1 или больше индекса последнего символа в `str`, выдается `ArgumentException`.</span><span class="sxs-lookup"><span data-stu-id="909a5-672">If `Index` is less than 1 or greater than the index of the last character in `str`, an `ArgumentException` is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-673">В этом примере показано, как использовать функцию `GetChar` для возврата символа из указанного индекса в `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-673">This example shows how to use the `GetChar` function to return a character from a specified index in a `String`.</span></span>  
  
 [!code-vb[VbVbalrStrings#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-674">Параметр <paramref name="str" /> равен <see langword="Nothing" />, параметр <paramref name="Index" /> &lt; 1, или параметр <paramref name="Index" /> больше индекса последнего символа в <paramref name="str" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-674"><paramref name="str" /> is <see langword="Nothing" />, <paramref name="Index" /> &lt; 1, or <paramref name="Index" /> is greater than index of last character of <paramref name="str" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-675">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-675">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="InStr">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="909a5-676">Возвращает целое число, указывающее начальную позицию первого вхождения одной строки в другую.</span><span class="sxs-lookup"><span data-stu-id="909a5-676">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span>  <span data-ttu-id="909a5-677">Целое число представляет собой отсчитываемый от единицы индекс, если совпадение найдено.</span><span class="sxs-lookup"><span data-stu-id="909a5-677">The integer is a one-based index if a match is found.</span></span>  <span data-ttu-id="909a5-678">Если совпадение не найдено, функция возвращает нуль.</span><span class="sxs-lookup"><span data-stu-id="909a5-678">If no match is found, the function returns zero.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 InStr(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStr : string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (String1, String2, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="String2" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1"><span data-ttu-id="909a5-679">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-679">Required.</span></span> <span data-ttu-id="909a5-680">Искомое выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-680"><see langword="String" /> expression being searched.</span></span></param>
        <param name="String2"><span data-ttu-id="909a5-681">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-681">Required.</span></span> <span data-ttu-id="909a5-682">Искомое выражение <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-682"><see langword="String" /> expression sought.</span></span></param>
        <param name="Compare"><span data-ttu-id="909a5-683">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-683">Optional.</span></span> <span data-ttu-id="909a5-684">Указывает тип сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-684">Specifies the type of string comparison.</span></span> <span data-ttu-id="909a5-685">Если параметр <paramref name="Compare" /> не задан, параметр <see langword="Option Compare" /> определяет тип сравнения.</span><span class="sxs-lookup"><span data-stu-id="909a5-685">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="909a5-686">Возвращает целое число, указывающее начальную позицию первого вхождения одной строки в другую.</span><span class="sxs-lookup"><span data-stu-id="909a5-686">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="909a5-687">If</span><span class="sxs-lookup"><span data-stu-id="909a5-687">If</span></span> 
 </term>
              <description> <span data-ttu-id="909a5-688">InStr возвращает</span><span class="sxs-lookup"><span data-stu-id="909a5-688">InStr returns</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-689">Параметр 
                <paramref name="String1" /> является пустой строкой или значением <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="909a5-689">
                <paramref name="String1" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="909a5-690">0</span><span class="sxs-lookup"><span data-stu-id="909a5-690">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-691">Параметр 
                <paramref name="String2" /> является пустой строкой или значением <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="909a5-691">
                <paramref name="String2" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="909a5-692">Начальная позиция диапазона для поиска, которая по умолчанию в первом положении символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-692">The starting position for the search, which defaults to the first character position.</span></span>  
  
 </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-693">Параметр 
                <paramref name="String2" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="909a5-693">
                <paramref name="String2" /> is not found</span></span> 
 </term>
              <description> <span data-ttu-id="909a5-694">0</span><span class="sxs-lookup"><span data-stu-id="909a5-694">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-695">
                <paramref name="String2" /> находится в пределах <paramref name="String1" /></span><span class="sxs-lookup"><span data-stu-id="909a5-695">
                <paramref name="String2" /> is found within <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="909a5-696">Позиция, где начинается соответствие</span><span class="sxs-lookup"><span data-stu-id="909a5-696">Position where match begins</span></span> 
 </description>
            </item>
            <item>
              <term>
              </term>
              <description>
              </description>
            </item>
          </list>
<span data-ttu-id="909a5-697">.</span><span class="sxs-lookup"><span data-stu-id="909a5-697">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-698">Как правило, функция `InStr` используется при анализе строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-698">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-699">Функция `InStrB` в предыдущих версиях Visual Basic возвращает число байтов, а не позиции символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-699">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="909a5-700">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-700">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-701">Все строки Visual Basic 2005 в Юникоде, а `InStrB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-701">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="909a5-702">Параметры аргумента `Compare`:</span><span class="sxs-lookup"><span data-stu-id="909a5-702">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="909a5-703">Константа</span><span class="sxs-lookup"><span data-stu-id="909a5-703">Constant</span></span>|<span data-ttu-id="909a5-704">Значение</span><span class="sxs-lookup"><span data-stu-id="909a5-704">Value</span></span>|<span data-ttu-id="909a5-705">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-705">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="909a5-706">0</span><span class="sxs-lookup"><span data-stu-id="909a5-706">0</span></span>|<span data-ttu-id="909a5-707">Выполняет двоичное сравнение</span><span class="sxs-lookup"><span data-stu-id="909a5-707">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="909a5-708">1</span><span class="sxs-lookup"><span data-stu-id="909a5-708">1</span></span>|<span data-ttu-id="909a5-709">Выполняет сравнение текста</span><span class="sxs-lookup"><span data-stu-id="909a5-709">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="909a5-710">В данном примере функция `InStr` используется для возврата позиции первого вхождения одной строки в другую.</span><span class="sxs-lookup"><span data-stu-id="909a5-710">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="909a5-711">Строки в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-711">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="909a5-712">Знакомство со строками в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-712">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/option-compare-statement.md"><span data-ttu-id="909a5-713">Оператор Option Compare</span><span class="sxs-lookup"><span data-stu-id="909a5-713">Option Compare Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (int StartPos, string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 InStr(int32 StartPos, string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (StartPos As Integer, String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member InStr : int * string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (StartPos, String1, String2, Compare)" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static int InStr (int Start, string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 InStr(int32 Start, string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (Start As Integer, String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member InStr : int * string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (Start, String1, String2, Compare)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(int32 Start, string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-2.0" />
        <Parameter Name="StartPos" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
        <Parameter Name="String1" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-2.0;netcore-3.1" />
        <Parameter Name="String2" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-2.0;netcore-3.1" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-2.0;netcore-3.1">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Start"><span data-ttu-id="909a5-714">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-714">Optional.</span></span> <span data-ttu-id="909a5-715">Числовое выражение, задающее начальную позицию для каждого поиска.</span><span class="sxs-lookup"><span data-stu-id="909a5-715">Numeric expression that sets the starting position for each search.</span></span> <span data-ttu-id="909a5-716">Если это выражение опущено, поиск начинается с позиции первого знака.</span><span class="sxs-lookup"><span data-stu-id="909a5-716">If omitted, search begins at the first character position.</span></span> <span data-ttu-id="909a5-717">Начальный индекс равен 1.</span><span class="sxs-lookup"><span data-stu-id="909a5-717">The start index is 1-based.</span></span></param>
        <param name="StartPos">To be added.</param>
        <param name="String1"><span data-ttu-id="909a5-718">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-718">Required.</span></span> <span data-ttu-id="909a5-719">Искомое выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-719"><see langword="String" /> expression being searched.</span></span></param>
        <param name="String2"><span data-ttu-id="909a5-720">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-720">Required.</span></span> <span data-ttu-id="909a5-721">Искомое выражение <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-721"><see langword="String" /> expression sought.</span></span></param>
        <param name="Compare"><span data-ttu-id="909a5-722">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-722">Optional.</span></span> <span data-ttu-id="909a5-723">Указывает тип сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-723">Specifies the type of string comparison.</span></span> <span data-ttu-id="909a5-724">Если параметр <paramref name="Compare" /> не задан, параметр <see langword="Option Compare" /> определяет тип сравнения.</span><span class="sxs-lookup"><span data-stu-id="909a5-724">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="909a5-725">Возвращает целое число, указывающее начальную позицию первого вхождения одной строки в другую.</span><span class="sxs-lookup"><span data-stu-id="909a5-725">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="909a5-726">If</span><span class="sxs-lookup"><span data-stu-id="909a5-726">If</span></span> 
 </term>
              <description> <span data-ttu-id="909a5-727">InStr возвращает</span><span class="sxs-lookup"><span data-stu-id="909a5-727">InStr returns</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-728">Параметр 
                <paramref name="String1" /> является пустой строкой или значением <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="909a5-728">
                <paramref name="String1" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="909a5-729">0</span><span class="sxs-lookup"><span data-stu-id="909a5-729">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-730">Параметр 
                <paramref name="String2" /> является пустой строкой или значением <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="909a5-730">
                <paramref name="String2" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description>
                <paramref name="start" />
              </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-731">Параметр 
                <paramref name="String2" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="909a5-731">
                <paramref name="String2" /> is not found</span></span> 
 </term>
              <description> <span data-ttu-id="909a5-732">0</span><span class="sxs-lookup"><span data-stu-id="909a5-732">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-733">
                <paramref name="String2" /> находится в пределах <paramref name="String1" /></span><span class="sxs-lookup"><span data-stu-id="909a5-733">
                <paramref name="String2" /> is found within <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="909a5-734">Позиция, где начинается соответствие</span><span class="sxs-lookup"><span data-stu-id="909a5-734">Position where match begins</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-735">Длина 
                <paramref name="Start" /> &gt; параметра <paramref name="String1" /></span><span class="sxs-lookup"><span data-stu-id="909a5-735">
                <paramref name="Start" /> &gt; length of <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="909a5-736">0</span><span class="sxs-lookup"><span data-stu-id="909a5-736">0</span></span> 
 </description>
            </item>
          </list>
<span data-ttu-id="909a5-737">.</span><span class="sxs-lookup"><span data-stu-id="909a5-737">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-738">Как правило, функция `InStr` используется при анализе строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-738">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-739">Функция `InStrB` в предыдущих версиях Visual Basic возвращает число байтов, а не позиции символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-739">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="909a5-740">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-740">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-741">Все строки Visual Basic 2005 в Юникоде, а `InStrB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-741">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="909a5-742">Параметры аргумента `Compare`:</span><span class="sxs-lookup"><span data-stu-id="909a5-742">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="909a5-743">Константа</span><span class="sxs-lookup"><span data-stu-id="909a5-743">Constant</span></span>|<span data-ttu-id="909a5-744">Значение</span><span class="sxs-lookup"><span data-stu-id="909a5-744">Value</span></span>|<span data-ttu-id="909a5-745">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-745">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="909a5-746">0</span><span class="sxs-lookup"><span data-stu-id="909a5-746">0</span></span>|<span data-ttu-id="909a5-747">Выполняет двоичное сравнение</span><span class="sxs-lookup"><span data-stu-id="909a5-747">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="909a5-748">1</span><span class="sxs-lookup"><span data-stu-id="909a5-748">1</span></span>|<span data-ttu-id="909a5-749">Выполняет сравнение текста</span><span class="sxs-lookup"><span data-stu-id="909a5-749">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="909a5-750">В данном примере функция `InStr` используется для возврата позиции первого вхождения одной строки в другую.</span><span class="sxs-lookup"><span data-stu-id="909a5-750">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-751"><paramref name="Start" /> &lt; 1.</span><span class="sxs-lookup"><span data-stu-id="909a5-751"><paramref name="Start" /> &lt; 1.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="909a5-752">Строки в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-752">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="909a5-753">Знакомство со строками в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-753">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/option-compare-statement.md"><span data-ttu-id="909a5-754">Оператор Option Compare</span><span class="sxs-lookup"><span data-stu-id="909a5-754">Option Compare Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InStrRev">
      <MemberSignature Language="C#" Value="public static int InStrRev (string StringCheck, string StringMatch, int Start = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 InStrRev(string StringCheck, string StringMatch, int32 Start, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStrRev (StringCheck As String, StringMatch As String, Optional Start As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStrRev : string * string * int * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStrRev (StringCheck, StringMatch, Start, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStrRev(string StringCheck, string StringMatch, int32 Start, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringCheck" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="StringMatch" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Start" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="StringCheck"><span data-ttu-id="909a5-755">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-755">Required.</span></span> <span data-ttu-id="909a5-756">Строковое выражение, в котором ведется поиск.</span><span class="sxs-lookup"><span data-stu-id="909a5-756">String expression being searched.</span></span></param>
        <param name="StringMatch"><span data-ttu-id="909a5-757">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-757">Required.</span></span> <span data-ttu-id="909a5-758">Строковое выражение, которое требуется найти.</span><span class="sxs-lookup"><span data-stu-id="909a5-758">String expression being searched for.</span></span></param>
        <param name="Start"><span data-ttu-id="909a5-759">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-759">Optional.</span></span> <span data-ttu-id="909a5-760">Числовое выражение, устанавливающее начальную позицию, начиная с 1, для каждой операции поиска, начиная с левого края строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-760">Numeric expression setting the one-based starting position for each search, starting from the left side of the string.</span></span> <span data-ttu-id="909a5-761">Если параметр <paramref name="Start" /> не указан, то используется значение –1, означающее, что поиск начинается с позиции последнего символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-761">If <paramref name="Start" /> is omitted then -1 is used, meaning the search begins at the last character position.</span></span> <span data-ttu-id="909a5-762">После этого строка просматривается справа налево.</span><span class="sxs-lookup"><span data-stu-id="909a5-762">Search then proceeds from right to left.</span></span></param>
        <param name="Compare"><span data-ttu-id="909a5-763">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-763">Optional.</span></span> <span data-ttu-id="909a5-764">Числовое значение, показывающее вид сравнения, используемое при оценке подстрок.</span><span class="sxs-lookup"><span data-stu-id="909a5-764">Numeric value indicating the kind of comparison to use when evaluating substrings.</span></span> <span data-ttu-id="909a5-765">Если этот аргумент опущен, то выполняется двоичное сравнение.</span><span class="sxs-lookup"><span data-stu-id="909a5-765">If omitted, a binary comparison is performed.</span></span> <span data-ttu-id="909a5-766">См. значения в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="909a5-766">See Settings for values.</span></span></param>
        <summary><span data-ttu-id="909a5-767">Возвращает позицию первого вхождения одной строки в другую, начиная с правого конца строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-767">Returns the position of the first occurrence of one string within another, starting from the right side of the string.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="909a5-768">If</span><span class="sxs-lookup"><span data-stu-id="909a5-768">If</span></span> 
 </term>
              <description> <span data-ttu-id="909a5-769">InStrRev возвращает</span><span class="sxs-lookup"><span data-stu-id="909a5-769">InStrRev returns</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-770">Параметр 
                <paramref name="StringCheck" /> имеет нулевую длину</span><span class="sxs-lookup"><span data-stu-id="909a5-770">
                <paramref name="StringCheck" /> is zero-length</span></span> 
 </term>
              <description> <span data-ttu-id="909a5-771">0</span><span class="sxs-lookup"><span data-stu-id="909a5-771">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-772">Параметр 
                <paramref name="StringMatch" /> имеет нулевую длину</span><span class="sxs-lookup"><span data-stu-id="909a5-772">
                <paramref name="StringMatch" /> is zero-length</span></span> 
 </term>
              <description>
                <paramref name="Start" />
              </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-773">Параметр 
                <paramref name="StringMatch" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="909a5-773">
                <paramref name="StringMatch" /> is not found</span></span> 
 </term>
              <description> <span data-ttu-id="909a5-774">0</span><span class="sxs-lookup"><span data-stu-id="909a5-774">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-775">
                <paramref name="StringMatch" /> находится в пределах <paramref name="StringCheck" /></span><span class="sxs-lookup"><span data-stu-id="909a5-775">
                <paramref name="StringMatch" /> is found within <paramref name="StringCheck" /></span></span></term>
              <description> <span data-ttu-id="909a5-776">Позиция, в которой найдено первое сравнение, начиная с правого конца строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-776">Position at which the first match is found, starting with the right side of the string.</span></span>  
  
 </description>
            </item>
            <item>
              <term><span data-ttu-id="909a5-777">Значение параметра 
                <paramref name="Start" /> больше, чем длина параметра <paramref name="StringMatch" /></span><span class="sxs-lookup"><span data-stu-id="909a5-777">
                <paramref name="Start" /> is greater than length of <paramref name="StringMatch" /></span></span></term>
              <description> <span data-ttu-id="909a5-778">0</span><span class="sxs-lookup"><span data-stu-id="909a5-778">0</span></span> 
 </description>
            </item>
          </list>
<span data-ttu-id="909a5-779">.</span><span class="sxs-lookup"><span data-stu-id="909a5-779">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-780">Обратите внимание, что синтаксис функции `InStrRev` не совпадает с синтаксисом функции `InStr`.</span><span class="sxs-lookup"><span data-stu-id="909a5-780">Note that the syntax for the `InStrRev` function is not the same as the syntax for the `InStr` function.</span></span>  
  
 <span data-ttu-id="909a5-781">Аргумент `Compare` может иметь следующие значения.</span><span class="sxs-lookup"><span data-stu-id="909a5-781">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="909a5-782">Константа</span><span class="sxs-lookup"><span data-stu-id="909a5-782">Constant</span></span>|<span data-ttu-id="909a5-783">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-783">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="909a5-784">Выполняется двоичное сравнение.</span><span class="sxs-lookup"><span data-stu-id="909a5-784">Performs a binary comparison.</span></span>|  
|`Text`|<span data-ttu-id="909a5-785">Выполняется текстовое сравнение.</span><span class="sxs-lookup"><span data-stu-id="909a5-785">Performs a textual comparison.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="909a5-786">В этом примере демонстрируется использование функции `InStrRev`.</span><span class="sxs-lookup"><span data-stu-id="909a5-786">This example demonstrates the use of the `InStrRev` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-787"><paramref name="Start" /> = 0 или <paramref name="Start" /> &lt; –1.</span><span class="sxs-lookup"><span data-stu-id="909a5-787"><paramref name="Start" /> = 0 or <paramref name="Start" /> &lt; -1.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="909a5-788">Строки в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-788">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="909a5-789">Знакомство со строками в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-789">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="909a5-790">Возвращает строку, образуемую путем соединения нескольких подстрок, содержащихся в массиве.</span><span class="sxs-lookup"><span data-stu-id="909a5-790">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (object[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(object[] SourceArray, string Delimiter) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As Object(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberSignature Language="F#" Value="static member Join : obj[] * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Join (SourceArray, Delimiter)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(object[] SourceArray, string Delimiter) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Delimiter" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="SourceArray"><span data-ttu-id="909a5-791">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-791">Required.</span></span> <span data-ttu-id="909a5-792">Одномерный массив подстрок, подлежащих объединению.</span><span class="sxs-lookup"><span data-stu-id="909a5-792">One-dimensional array containing substrings to be joined.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="909a5-793">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-793">Optional.</span></span> <span data-ttu-id="909a5-794">Любая строка, используемая для разделения подстрок в составе возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-794">Any string, used to separate the substrings in the returned string.</span></span> <span data-ttu-id="909a5-795">Если этот аргумент опущен, используется знак пробела (" ").</span><span class="sxs-lookup"><span data-stu-id="909a5-795">If omitted, the space character (" ") is used.</span></span> <span data-ttu-id="909a5-796">Если в качестве <paramref name="Delimiter" /> задана строка нулевой длины ("") или ключевое слово <see langword="Nothing" />, все элементы списка объединяются без разделителей.</span><span class="sxs-lookup"><span data-stu-id="909a5-796">If <paramref name="Delimiter" /> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span></span></param>
        <summary><span data-ttu-id="909a5-797">Возвращает строку, образуемую путем соединения нескольких подстрок, содержащихся в массиве.</span><span class="sxs-lookup"><span data-stu-id="909a5-797">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
        <returns><span data-ttu-id="909a5-798">Строка, созданная путем соединения нескольких подстрок, содержащихся в массиве.</span><span class="sxs-lookup"><span data-stu-id="909a5-798">A string created by joining a number of substrings contained in an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-799">Существует четность между функциями `Join` и `Split`.</span><span class="sxs-lookup"><span data-stu-id="909a5-799">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="909a5-800">Функция `Join` принимает массив строк и соединяет их с помощью строки разделителя, чтобы получить одну строку.</span><span class="sxs-lookup"><span data-stu-id="909a5-800">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="909a5-801">Функция `Split` принимает строку и отделяет ее от разделителя, чтобы получить массив строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-801">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="909a5-802">Однако ключевое различие состоит в том, что `Join` может объединять строки с любой строкой-разделителем, `Split` может разделять строки только с помощью одиночного символа-разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-802">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-803">В следующем примере демонстрируется использование функции `Join` для создания списка из нескольких строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-803">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-804"><paramref name="SourceArray" /> не является одномерным.</span><span class="sxs-lookup"><span data-stu-id="909a5-804"><paramref name="SourceArray" /> is not one dimensional.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-805">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-805">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string[] SourceArray, string Delimiter) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As String(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberSignature Language="F#" Value="static member Join : string[] * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Join (SourceArray, Delimiter)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(string[] SourceArray, string Delimiter) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.String[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Delimiter" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="SourceArray"><span data-ttu-id="909a5-806">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-806">Required.</span></span> <span data-ttu-id="909a5-807">Одномерный массив подстрок, подлежащих объединению.</span><span class="sxs-lookup"><span data-stu-id="909a5-807">One-dimensional array containing substrings to be joined.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="909a5-808">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-808">Optional.</span></span> <span data-ttu-id="909a5-809">Любая строка, используемая для разделения подстрок в составе возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-809">Any string, used to separate the substrings in the returned string.</span></span> <span data-ttu-id="909a5-810">Если этот аргумент опущен, используется знак пробела (" ").</span><span class="sxs-lookup"><span data-stu-id="909a5-810">If omitted, the space character (" ") is used.</span></span> <span data-ttu-id="909a5-811">Если в качестве <paramref name="Delimiter" /> задана строка нулевой длины ("") или ключевое слово <see langword="Nothing" />, все элементы списка объединяются без разделителей.</span><span class="sxs-lookup"><span data-stu-id="909a5-811">If <paramref name="Delimiter" /> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span></span></param>
        <summary><span data-ttu-id="909a5-812">Возвращает строку, образуемую путем соединения нескольких подстрок, содержащихся в массиве.</span><span class="sxs-lookup"><span data-stu-id="909a5-812">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
        <returns><span data-ttu-id="909a5-813">Строка, созданная путем соединения нескольких подстрок, содержащихся в массиве.</span><span class="sxs-lookup"><span data-stu-id="909a5-813">A string created by joining a number of substrings contained in an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-814">Существует четность между функциями `Join` и `Split`.</span><span class="sxs-lookup"><span data-stu-id="909a5-814">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="909a5-815">Функция `Join` принимает массив строк и соединяет их с помощью строки разделителя, чтобы получить одну строку.</span><span class="sxs-lookup"><span data-stu-id="909a5-815">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="909a5-816">Функция `Split` принимает строку и отделяет ее от разделителя, чтобы получить массив строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-816">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="909a5-817">Однако ключевое различие состоит в том, что `Join` может объединять строки с любой строкой-разделителем, `Split` может разделять строки только с помощью одиночного символа-разделителя.</span><span class="sxs-lookup"><span data-stu-id="909a5-817">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-818">В следующем примере демонстрируется использование функции `Join` для создания списка из нескольких строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-818">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-819"><paramref name="SourceArray" /> не является одномерным.</span><span class="sxs-lookup"><span data-stu-id="909a5-819"><paramref name="SourceArray" /> is not one dimensional.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-820">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-820">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="909a5-821">Возвращает строку или символ, преобразованные в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-821">Returns a string or character converted to lowercase.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static char LCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char LCase(char Value) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char LCase(char Value);" />
      <MemberSignature Language="F#" Value="static member LCase : char -&gt; char" Usage="Microsoft.VisualBasic.Strings.LCase Value" />
      <MemberSignature Language="ILAsm" Value=".method public static char LCase(char Value) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="909a5-822">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-822">Required.</span></span> <span data-ttu-id="909a5-823">Любое допустимое значение <see langword="String" /> или выражение <see langword="Char" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-823">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="909a5-824">Возвращает строку или символ, преобразованные в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-824">Returns a string or character converted to lowercase.</span></span></summary>
        <returns><span data-ttu-id="909a5-825">Строка или символ, преобразованные в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-825">A string or character converted to lowercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-826">Только прописные буквы преобразуются в нижний регистр; Все строчные буквы и небуквенные символы остаются без изменений.</span><span class="sxs-lookup"><span data-stu-id="909a5-826">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="909a5-827">Эта функция использует сведения о языке и региональных параметрах приложения при обработке строки, чтобы изменения регистра соответствовали языковому стандарту, в котором используется приложение.</span><span class="sxs-lookup"><span data-stu-id="909a5-827">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="909a5-828">Если приложение принимает решения по обеспечению безопасности на основе результатов операции сравнения или изменения регистра, то операция должна использовать метод <xref:System.String.Compare%2A?displayProperty=nameWithType> и передавать <xref:System.StringComparison.Ordinal> или <xref:System.StringComparison.OrdinalIgnoreCase> аргументу `comparisonType`.</span><span class="sxs-lookup"><span data-stu-id="909a5-828">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="909a5-829">Дополнительные сведения см. [в разделе влияние языка и региональных параметров на строки в Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="909a5-829">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-830">В этом примере функция `LCase` используется для возвращения версии строки в нижнем регистре.</span><span class="sxs-lookup"><span data-stu-id="909a5-830">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="909a5-831">Строки в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-831">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="909a5-832">Знакомство со строками в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-832">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static string LCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LCase(string Value) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LCase(System::String ^ Value);" />
      <MemberSignature Language="F#" Value="static member LCase : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.LCase Value" />
      <MemberSignature Language="ILAsm" Value=".method public static string LCase(string Value) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="909a5-833">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-833">Required.</span></span> <span data-ttu-id="909a5-834">Любое допустимое значение <see langword="String" /> или выражение <see langword="Char" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-834">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="909a5-835">Возвращает строку или символ, преобразованные в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-835">Returns a string or character converted to lowercase.</span></span></summary>
        <returns><span data-ttu-id="909a5-836">Строка или символ, преобразованные в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-836">A string or character converted to lowercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-837">Только прописные буквы преобразуются в нижний регистр; Все строчные буквы и небуквенные символы остаются без изменений.</span><span class="sxs-lookup"><span data-stu-id="909a5-837">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="909a5-838">Эта функция использует сведения о языке и региональных параметрах приложения при обработке строки, чтобы изменения регистра соответствовали языковому стандарту, в котором используется приложение.</span><span class="sxs-lookup"><span data-stu-id="909a5-838">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="909a5-839">Если приложение принимает решения по обеспечению безопасности на основе результатов операции сравнения или изменения регистра, то операция должна использовать метод <xref:System.String.Compare%2A?displayProperty=nameWithType> и передавать <xref:System.StringComparison.Ordinal> или <xref:System.StringComparison.OrdinalIgnoreCase> аргументу `comparisonType`.</span><span class="sxs-lookup"><span data-stu-id="909a5-839">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="909a5-840">Дополнительные сведения см. [в разделе влияние языка и региональных параметров на строки в Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="909a5-840">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-841">В этом примере функция `LCase` используется для возвращения версии строки в нижнем регистре.</span><span class="sxs-lookup"><span data-stu-id="909a5-841">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="909a5-842">Строки в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-842">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="909a5-843">Знакомство со строками в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-843">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static string Left (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Left(string str, int32 Length) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Left (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Left(System::String ^ str, int Length);" />
      <MemberSignature Language="F#" Value="static member Left : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Left (str, Length)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Left(string str, int32 Length) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Length" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="909a5-844">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-844">Required.</span></span> <span data-ttu-id="909a5-845">Выражение типа <see langword="String" />, из которого возвращаются крайние левые знаки.</span><span class="sxs-lookup"><span data-stu-id="909a5-845"><see langword="String" /> expression from which the leftmost characters are returned.</span></span></param>
        <param name="Length"><span data-ttu-id="909a5-846">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-846">Required.</span></span> <span data-ttu-id="909a5-847">Выражение <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-847"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="909a5-848">Числовое выражение, показывающее необходимое число возвращаемых знаков.</span><span class="sxs-lookup"><span data-stu-id="909a5-848">Numeric expression indicating how many characters to return.</span></span> <span data-ttu-id="909a5-849">Если выражение равно 0, возвращается строка нулевой длины ("").</span><span class="sxs-lookup"><span data-stu-id="909a5-849">If 0, a zero-length string ("") is returned.</span></span> <span data-ttu-id="909a5-850">Если выражение больше или равно числу знаков в <paramref name="str" />, то возвращается вся строка.</span><span class="sxs-lookup"><span data-stu-id="909a5-850">If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</span></span></param>
        <summary><span data-ttu-id="909a5-851">Возвращает строку, содержащую указанное число знаков с левой стороны строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-851">Returns a string containing a specified number of characters from the left side of a string.</span></span></summary>
        <returns><span data-ttu-id="909a5-852">Строка, содержащая указанное число знаков с левой стороны строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-852">A string containing a specified number of characters from the left side of a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-853">Чтобы определить количество символов в `str`, используйте функцию `Len`.</span><span class="sxs-lookup"><span data-stu-id="909a5-853">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="909a5-854">Если используется в Windows Forms приложении или любом другом классе, имеющем свойство `Left`, необходимо полностью определить функцию с помощью `Microsoft.VisualBasic.Left`.</span><span class="sxs-lookup"><span data-stu-id="909a5-854">If used in a Windows Forms application, or any other class that has a `Left` property, you must fully qualify the function with `Microsoft.VisualBasic.Left`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-855">Функция `LeftB` в предыдущих версиях Visual Basic возвращает строку в байтах, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-855">The `LeftB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="909a5-856">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-856">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-857">Все текущие Visual Basic строки находятся в Юникоде, а `LeftB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-857">All current Visual Basic strings are in Unicode, and `LeftB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-858">В этом примере демонстрируется использование функции `Left` для возврата подстроки заданного `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-858">This example demonstrates the use of the `Left` function to return a substring of a given `String`.</span></span> <span data-ttu-id="909a5-859">В классе, имеющем свойство `Left`, может потребоваться полностью определить функцию `Left`.</span><span class="sxs-lookup"><span data-stu-id="909a5-859">In a class that has a `Left` property, it may be necessary to fully qualify the `Left` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-860"><paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="909a5-860"><paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-861">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-861">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Len">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="909a5-862">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-862">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (bool Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(bool Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(bool Expression);" />
      <MemberSignature Language="F#" Value="static member Len : bool -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(bool Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-863">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-863">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-864">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-864">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-865">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-865">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-866">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-866">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-867">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-867">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-868">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-868">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-869">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-869">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-870">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-870">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-871">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-871">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-872">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-872">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-873">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-873">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-874">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-874">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-875">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-875">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-876">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-876">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-877">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-877">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-878">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-878">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-879">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-879">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-880">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-880">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-881">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-881">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-882">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-882">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-883">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-883">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (byte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(unsigned int8 Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Byte Expression);" />
      <MemberSignature Language="F#" Value="static member Len : byte -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int8 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Byte" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-884">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-884">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-885">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-885">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-886">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-886">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-887">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-887">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-888">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-888">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-889">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-889">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-890">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-890">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-891">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-891">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-892">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-892">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-893">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-893">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-894">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-894">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-895">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-895">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-896">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-896">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-897">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-897">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-898">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-898">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-899">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-899">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-900">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-900">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-901">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-901">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-902">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-902">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-903">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-903">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-904">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-904">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (char Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(char Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(char Expression);" />
      <MemberSignature Language="F#" Value="static member Len : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(char Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Char" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-905">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-905">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-906">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-906">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-907">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-907">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-908">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-908">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-909">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-909">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-910">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-910">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-911">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-911">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-912">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-912">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-913">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-913">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-914">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-914">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-915">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-915">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-916">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-916">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-917">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-917">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-918">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-918">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-919">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-919">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-920">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-920">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-921">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-921">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-922">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-922">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-923">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-923">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-924">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-924">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-925">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-925">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (DateTime Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(valuetype System.DateTime Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(DateTime Expression);" />
      <MemberSignature Language="F#" Value="static member Len : DateTime -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.DateTime Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-926">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-926">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-927">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-927">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-928">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-928">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-929">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-929">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-930">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-930">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-931">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-931">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-932">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-932">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-933">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-933">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-934">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-934">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-935">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-935">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-936">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-936">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-937">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-937">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-938">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-938">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-939">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-939">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-940">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-940">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-941">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-941">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-942">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-942">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-943">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-943">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-944">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-944">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-945">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-945">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-946">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-946">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (decimal Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(valuetype System.Decimal Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Decimal Expression);" />
      <MemberSignature Language="F#" Value="static member Len : decimal -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.Decimal Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-947">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-947">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-948">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-948">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-949">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-949">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-950">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-950">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-951">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-951">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-952">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-952">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-953">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-953">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-954">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-954">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-955">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-955">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-956">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-956">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-957">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-957">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-958">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-958">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-959">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-959">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-960">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-960">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-961">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-961">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-962">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-962">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-963">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-963">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-964">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-964">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-965">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-965">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-966">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-966">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-967">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-967">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (double Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(float64 Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(double Expression);" />
      <MemberSignature Language="F#" Value="static member Len : double -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float64 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-968">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-968">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-969">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-969">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-970">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-970">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-971">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-971">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-972">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-972">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-973">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-973">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-974">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-974">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-975">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-975">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-976">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-976">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-977">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-977">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-978">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-978">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-979">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-979">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-980">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-980">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-981">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-981">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-982">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-982">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-983">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-983">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-984">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-984">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-985">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-985">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-986">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-986">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-987">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-987">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-988">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-988">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (short Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(int16 Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(short Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int16 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int16 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int16" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-989">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-989">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-990">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-990">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-991">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-991">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-992">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-992">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-993">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-993">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-994">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-994">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-995">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-995">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-996">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-996">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-997">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-997">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-998">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-998">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-999">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-999">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-1000">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1000">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1001">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1001">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-1002">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-1002">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-1003">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-1003">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-1004">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1004">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-1005">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-1005">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-1006">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1006">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1007">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1007">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1008">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1008">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-1009">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-1009">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (int Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(int32 Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(int Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int32 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-1010">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1010">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-1011">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1011">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-1012">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1012">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-1013">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1013">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1014">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1014">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-1015">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1015">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-1016">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1016">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-1017">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-1017">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-1018">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1018">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1019">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1019">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1020">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1020">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-1021">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1021">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1022">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1022">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-1023">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-1023">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-1024">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-1024">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-1025">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1025">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-1026">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-1026">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-1027">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1027">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1028">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1028">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1029">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1029">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-1030">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-1030">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (long Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(int64 Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(long Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int64 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int64 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int64" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-1031">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1031">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-1032">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1032">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-1033">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1033">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-1034">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1034">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1035">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1035">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-1036">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1036">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-1037">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1037">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-1038">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-1038">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-1039">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1039">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1040">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1040">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1041">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1041">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-1042">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1042">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1043">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1043">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-1044">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-1044">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-1045">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-1045">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-1046">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1046">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-1047">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-1047">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-1048">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1048">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1049">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1049">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1050">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1050">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-1051">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-1051">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(object Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Len : obj -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(object Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-1052">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1052">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-1053">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1053">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-1054">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1054">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-1055">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1055">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1056">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1056">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-1057">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1057">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-1058">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1058">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-1059">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-1059">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-1060">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1060">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1061">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1061">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1062">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1062">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-1063">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1063">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1064">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1064">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-1065">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-1065">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-1066">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-1066">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-1067">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1067">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-1068">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-1068">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-1069">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1069">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1070">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1070">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1071">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1071">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-1072">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-1072">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (sbyte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(int8 Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::SByte Expression);" />
      <MemberSignature Language="F#" Value="static member Len : sbyte -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int8 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.SByte" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-1073">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1073">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-1074">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1074">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-1075">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1075">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-1076">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1076">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1077">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1077">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-1078">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1078">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-1079">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1079">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-1080">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-1080">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-1081">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1081">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1082">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1082">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1083">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1083">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-1084">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1084">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1085">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1085">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-1086">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-1086">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-1087">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-1087">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-1088">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1088">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-1089">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-1089">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-1090">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1090">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1091">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1091">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1092">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1092">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-1093">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-1093">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (float Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(float32 Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(float Expression);" />
      <MemberSignature Language="F#" Value="static member Len : single -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float32 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-1094">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1094">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-1095">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1095">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-1096">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1096">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-1097">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1097">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1098">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1098">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-1099">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1099">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-1100">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1100">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-1101">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-1101">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-1102">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1102">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1103">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1103">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1104">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1104">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-1105">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1105">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1106">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1106">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-1107">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-1107">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-1108">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-1108">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-1109">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1109">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-1110">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-1110">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-1111">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1111">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1112">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1112">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1113">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1113">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-1114">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-1114">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(string Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Len : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(string Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-1115">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1115">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-1116">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1116">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-1117">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1117">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-1118">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1118">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1119">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1119">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-1120">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1120">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-1121">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1121">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-1122">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-1122">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-1123">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1123">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1124">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1124">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1125">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1125">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-1126">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1126">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1127">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1127">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-1128">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-1128">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-1129">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-1129">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-1130">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1130">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-1131">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-1131">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-1132">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1132">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1133">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1133">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1134">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1134">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-1135">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-1135">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ushort Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(unsigned int16 Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt16 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint16 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int16 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt16" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-1136">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1136">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-1137">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1137">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-1138">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1138">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-1139">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1139">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1140">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1140">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-1141">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1141">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-1142">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1142">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-1143">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-1143">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-1144">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1144">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1145">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1145">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1146">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1146">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-1147">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1147">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1148">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1148">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-1149">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-1149">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-1150">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-1150">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-1151">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1151">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-1152">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-1152">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-1153">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1153">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1154">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1154">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1155">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1155">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-1156">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-1156">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (uint Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(unsigned int32 Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt32 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint32 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int32 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-1157">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1157">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-1158">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1158">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-1159">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1159">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-1160">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1160">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1161">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1161">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-1162">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1162">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-1163">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1163">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-1164">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-1164">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-1165">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1165">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1166">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1166">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1167">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1167">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-1168">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1168">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1169">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1169">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-1170">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-1170">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-1171">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-1171">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-1172">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1172">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-1173">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-1173">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-1174">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1174">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1175">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1175">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1176">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1176">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-1177">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-1177">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ulong Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(unsigned int64 Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt64 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint64 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int64 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt64" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-1178">Любое допустимое выражение <see langword="String" /> или имя переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1178">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="909a5-1179">Если <paramref name="Expression" /> имеет тип <see langword="Object" />, то функция <see langword="Len" /> возвращает размер объекта, как при записи в файл функцией <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1179">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="909a5-1180">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1180">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="909a5-1181">Целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1181">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1182">При использовании определяемых пользователем типов и `Object` переменных функция `Len` возвращает размер, который будет записываться в файл с помощью функции `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1182">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="909a5-1183">Если `Object` содержит `String`, будет возвращена длина строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1183">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="909a5-1184">Если `Object` содержит любой другой тип, он возвратит размер объекта, который будет записан в файл функцией `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1184">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="909a5-1185">Атрибут `VBFixedString` может применяться к строковым полям в объектах для указания размера строки в байтах при запись на диск.</span><span class="sxs-lookup"><span data-stu-id="909a5-1185">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="909a5-1186">Функция `Len` использует атрибут `VBFixedString`, если он доступен, при определении размера `Object`ных переменных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1186">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1187">Функция `Len` может не иметь возможности определить фактическое число байтов хранилища, необходимое при использовании строк переменной длины в определяемых пользователем типах данных.</span><span class="sxs-lookup"><span data-stu-id="909a5-1187">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1188">Функция `LenB` в более ранних версиях Visual Basic возвращает число байтов в строке, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1188">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="909a5-1189">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1189">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1190">Все текущие Visual Basic строки находятся в Юникоде, а `LenB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1190">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="909a5-1191">Примечания для разработчиков смарт-устройств</span><span class="sxs-lookup"><span data-stu-id="909a5-1191">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="909a5-1192">Функция `Len` принимает в качестве параметров только `String` и `Object` переменные.</span><span class="sxs-lookup"><span data-stu-id="909a5-1192">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="909a5-1193">Если `Object` содержит `String`, будет возвращена длина `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1193">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="909a5-1194">Если параметр является ссылкой на `Object` NULL, функция возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="909a5-1194">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="909a5-1195">Если `Object` содержит любой другой тип, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1195">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1196">В данном примере `Len` используется для возврата числа знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1196">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1197">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1197">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-1198">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-1198">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LSet">
      <MemberSignature Language="C#" Value="public static string LSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LSet(string Source, int32 Length) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LSet(System::String ^ Source, int Length);" />
      <MemberSignature Language="F#" Value="static member LSet : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.LSet (Source, Length)" />
      <MemberSignature Language="ILAsm" Value=".method public static string LSet(string Source, int32 Length) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Length" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="909a5-1199">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1199">Required.</span></span> <span data-ttu-id="909a5-1200">Выражение <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1200"><see langword="String" /> expression.</span></span> <span data-ttu-id="909a5-1201">Имя строковой переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1201">Name of string variable.</span></span></param>
        <param name="Length"><span data-ttu-id="909a5-1202">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1202">Required.</span></span> <span data-ttu-id="909a5-1203">Выражение <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1203"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="909a5-1204">Длина возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1204">Length of returned string.</span></span></param>
        <summary><span data-ttu-id="909a5-1205">Возвращает выровненную по левому краю строку запрашиваемой длины, содержащую указанную строку.</span><span class="sxs-lookup"><span data-stu-id="909a5-1205">Returns a left-aligned string containing the specified string adjusted to the specified length.</span></span></summary>
        <returns><span data-ttu-id="909a5-1206">Выровненная по левому краю строка запрашиваемой длины, содержащая указанную строку.</span><span class="sxs-lookup"><span data-stu-id="909a5-1206">A left-aligned string containing the specified string adjusted to the specified length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1207">Если длина указанной строки превышает указанную длину, возвращаемая строка укорачивается до указанной длины.</span><span class="sxs-lookup"><span data-stu-id="909a5-1207">If the specified string is longer than the specified length, the returned string is shortened to the specified length.</span></span> <span data-ttu-id="909a5-1208">Если указанная строка короче заданной длины, то в правый конец возвращаемой строки добавляются пробелы для получения соответствующей длины.</span><span class="sxs-lookup"><span data-stu-id="909a5-1208">If the specified string is shorter than the specified length, spaces are added to the right end of the returned string to produce the appropriate length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1209">В этом примере демонстрируется использование функции `LSet`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1209">This example demonstrates the use of the `LSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1210">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1210">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-1211">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-1211">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md"><span data-ttu-id="909a5-1212">Эффективное использование типов данных</span><span class="sxs-lookup"><span data-stu-id="909a5-1212">Efficient Use of Data Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LTrim">
      <MemberSignature Language="C#" Value="public static string LTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LTrim(string str) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LTrim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member LTrim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.LTrim str" />
      <MemberSignature Language="ILAsm" Value=".method public static string LTrim(string str) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="909a5-1213">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1213">Required.</span></span> <span data-ttu-id="909a5-1214">Любое допустимое выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1214">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="909a5-1215">Возвращает строку, содержащую копию указанной строки без начальных пробелов (<see langword="LTrim" />), замыкающих пробелов (<see langword="RTrim" />) или без тех и других (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="909a5-1215">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="909a5-1216">Строка, содержащая копию указанной строки без начальных пробелов (<see langword="LTrim" />), замыкающих пробелов (<see langword="RTrim" />) или без тех и других (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="909a5-1216">A string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1217">Функции `LTrim`, `RTrim`и `Trim` удаляют пробелы из концов строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-1217">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1218">В данном примере функция `LTrim` используется, чтобы убрать пробелы в начале, а функция `RTrim` — чтобы убрать пробелы в конце строковой переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1218">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="909a5-1219">Функция `Trim` в примере используется для удаления обоих типов пробелов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1219">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1220">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1220">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Mid">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="909a5-1221">Возвращает строку, содержащую символы из указанной строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1221">Returns a string that contains characters from a specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Mid(string str, int32 Start) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start);" />
      <MemberSignature Language="F#" Value="static member Mid : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Mid (str, Start)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Start" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="909a5-1222">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1222">Required.</span></span> <span data-ttu-id="909a5-1223">Выражение <see langword="String" />, из которого возвращаются знаки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1223"><see langword="String" /> expression from which characters are returned.</span></span></param>
        <param name="Start"><span data-ttu-id="909a5-1224">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1224">Required.</span></span> <span data-ttu-id="909a5-1225">Выражение <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1225"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="909a5-1226">Начальная позиция возвращаемых знаков.</span><span class="sxs-lookup"><span data-stu-id="909a5-1226">Starting position of the characters to return.</span></span> <span data-ttu-id="909a5-1227">Если параметр <paramref name="Start" /> больше, чем количество символов в параметре <paramref name="str" />, функция <see langword="Mid" /> возвращает пустую строку ("").</span><span class="sxs-lookup"><span data-stu-id="909a5-1227">If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the <see langword="Mid" /> function returns a zero-length string ("").</span></span> <span data-ttu-id="909a5-1228">Значение параметра <paramref name="Start" /> отсчитывается с единицы.</span><span class="sxs-lookup"><span data-stu-id="909a5-1228"><paramref name="Start" /> is one-based.</span></span></param>
        <summary><span data-ttu-id="909a5-1229">Возвращает строку, содержащую все символы начиная с указанной позиции в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1229">Returns a string that contains all the characters starting from a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="909a5-1230">Строка, состоящая из всех символов начиная с указанной позиции в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1230">A string that consists of all the characters starting from the specified position in the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1231">Чтобы определить количество символов в `str`, используйте функцию `Len`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1231">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="909a5-1232">Visual Basic содержит функцию `Mid` и инструкцию `Mid`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1232">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="909a5-1233">Эти элементы работают с указанным числом символов в строке, но функция `Mid` возвращает символы, пока оператор `Mid` заменяет символы.</span><span class="sxs-lookup"><span data-stu-id="909a5-1233">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="909a5-1234">Дополнительные сведения см. в разделе [оператор Mid](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span><span class="sxs-lookup"><span data-stu-id="909a5-1234">For more information, see [Mid Statement](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1235">Функция `MidB` в предыдущих версиях Visual Basic возвращает строку в байтах, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1235">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="909a5-1236">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1236">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1237">Все строки Visual Basic в Юникоде, а `MidB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1237">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1238">Последняя строка в этом примере использует эту перегрузку функции `Mid` для возврата пятого и последующих символов из строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1238">The last line in this example uses this overload of the `Mid` function to return the fifth and subsequent characters from a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-1239"><paramref name="Start" /> &lt;= 0 или <paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="909a5-1239"><paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1240">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1240">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="909a5-1241">Строки в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-1241">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="909a5-1242">Знакомство со строками в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-1242">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/mid-statement.md"><span data-ttu-id="909a5-1243">Оператор Mid</span><span class="sxs-lookup"><span data-stu-id="909a5-1243">Mid Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Mid(string str, int32 Start, int32 Length) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start, int Length);" />
      <MemberSignature Language="F#" Value="static member Mid : string * int * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Mid (str, Start, Length)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start, int32 Length) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Start" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Length" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="909a5-1244">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1244">Required.</span></span> <span data-ttu-id="909a5-1245">Выражение <see langword="String" />, из которого возвращаются знаки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1245"><see langword="String" /> expression from which characters are returned.</span></span></param>
        <param name="Start"><span data-ttu-id="909a5-1246">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1246">Required.</span></span> <span data-ttu-id="909a5-1247">Выражение <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1247"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="909a5-1248">Начальная позиция возвращаемых знаков.</span><span class="sxs-lookup"><span data-stu-id="909a5-1248">Starting position of the characters to return.</span></span> <span data-ttu-id="909a5-1249">Если параметр <paramref name="Start" /> больше, чем количество символов в параметре <paramref name="str" />, функция <see langword="Mid" /> возвращает пустую строку ("").</span><span class="sxs-lookup"><span data-stu-id="909a5-1249">If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the <see langword="Mid" /> function returns a zero-length string ("").</span></span> <span data-ttu-id="909a5-1250">Значение параметра <paramref name="Start" /> отсчитывается с единицы.</span><span class="sxs-lookup"><span data-stu-id="909a5-1250"><paramref name="Start" /> is one based.</span></span></param>
        <param name="Length"><span data-ttu-id="909a5-1251">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-1251">Optional.</span></span> <span data-ttu-id="909a5-1252">Выражение <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1252"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="909a5-1253">Число возвращаемых знаков.</span><span class="sxs-lookup"><span data-stu-id="909a5-1253">Number of characters to return.</span></span> <span data-ttu-id="909a5-1254">Если этот параметр опущен или количество знаков в тексте меньше значения <paramref name="Length" /> (включая знак на позиции <paramref name="Start" />), возвращаются все знаки от начальной позиции до конца строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1254">If omitted or if there are fewer than <paramref name="Length" /> characters in the text (including the character at position <paramref name="Start" />), all characters from the start position to the end of the string are returned.</span></span></param>
        <summary><span data-ttu-id="909a5-1255">Возвращает строку, содержащую указанное число символов начиная с указанной позиции в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1255">Returns a string that contains a specified number of characters starting from a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="909a5-1256">Строка, состоящая из указанного числа символов начиная с указанной позиции в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1256">A string that consists of the specified number of characters starting from the specified position in the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1257">Чтобы определить количество символов в `str`, используйте функцию `Len`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1257">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="909a5-1258">Visual Basic содержит функцию `Mid` и инструкцию `Mid`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1258">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="909a5-1259">Эти элементы работают с указанным числом символов в строке, но функция `Mid` возвращает символы, пока оператор `Mid` заменяет символы.</span><span class="sxs-lookup"><span data-stu-id="909a5-1259">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="909a5-1260">Дополнительные сведения см. в разделе [оператор Mid](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span><span class="sxs-lookup"><span data-stu-id="909a5-1260">For more information, see [Mid Statement](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1261">Функция `MidB` в предыдущих версиях Visual Basic возвращает строку в байтах, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1261">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="909a5-1262">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1262">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1263">Все строки Visual Basic в Юникоде, а `MidB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1263">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1264">Первые две функции `Mid` в этом примере возвращают указанное количество символов из строки, начиная с заданных позиций.</span><span class="sxs-lookup"><span data-stu-id="909a5-1264">The first two `Mid` functions in this example return the specified number of characters from a string, starting from the given positions.</span></span> <span data-ttu-id="909a5-1265">(Последняя функция иллюстрирует перегрузку <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> и указывает только начальную точку для извлечения строки.)</span><span class="sxs-lookup"><span data-stu-id="909a5-1265">(The last function illustrates the <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> overload and only specifies the starting point for the string extraction.)</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-1266"><paramref name="Start" /> &lt;= 0 или <paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="909a5-1266"><paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1267">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1267">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="909a5-1268">Строки в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-1268">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="909a5-1269">Знакомство со строками в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-1269">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/mid-statement.md"><span data-ttu-id="909a5-1270">Оператор Mid</span><span class="sxs-lookup"><span data-stu-id="909a5-1270">Mid Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string Expression, string Find, string Replacement, int Start = 1, int Count = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string Expression, string Find, string Replacement, int32 Start, int32 Count, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (Expression As String, Find As String, Replacement As String, Optional Start As Integer = 1, Optional Count As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string * int * int * Microsoft.VisualBasic.CompareMethod -&gt; string" Usage="Microsoft.VisualBasic.Strings.Replace (Expression, Find, Replacement, Start, Count, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Replace(string Expression, string Find, string Replacement, int32 Start, int32 Count, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Find" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Replacement" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Start" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Count" Type="System.Int32" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-1271">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1271">Required.</span></span> <span data-ttu-id="909a5-1272">Строковое выражение, содержащее замещаемую подстроку.</span><span class="sxs-lookup"><span data-stu-id="909a5-1272">String expression containing substring to replace.</span></span></param>
        <param name="Find"><span data-ttu-id="909a5-1273">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1273">Required.</span></span> <span data-ttu-id="909a5-1274">Подстрока, которую требуется найти.</span><span class="sxs-lookup"><span data-stu-id="909a5-1274">Substring being searched for.</span></span></param>
        <param name="Replacement"><span data-ttu-id="909a5-1275">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1275">Required.</span></span> <span data-ttu-id="909a5-1276">Подстрока для замены.</span><span class="sxs-lookup"><span data-stu-id="909a5-1276">Replacement substring.</span></span></param>
        <param name="Start"><span data-ttu-id="909a5-1277">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-1277">Optional.</span></span> <span data-ttu-id="909a5-1278">Позиция в <paramref name="Expression" />, с которой начинается подстрока, используемая для замены.</span><span class="sxs-lookup"><span data-stu-id="909a5-1278">Position within <paramref name="Expression" /> that starts a substring used for replacement.</span></span> <span data-ttu-id="909a5-1279">Возвращаемое значение <see langword="Replace" /> представляет собой строку, начинающуюся с <paramref name="Start" /> с соответствующими заменами.</span><span class="sxs-lookup"><span data-stu-id="909a5-1279">The return value of <see langword="Replace" /> is a string that begins at <paramref name="Start" />, with appropriate substitutions.</span></span> <span data-ttu-id="909a5-1280">Если этот аргумент не указан, используется значение 1.</span><span class="sxs-lookup"><span data-stu-id="909a5-1280">If omitted, 1 is assumed.</span></span></param>
        <param name="Count"><span data-ttu-id="909a5-1281">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-1281">Optional.</span></span> <span data-ttu-id="909a5-1282">Число выполняемых замен подстроки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1282">Number of substring substitutions to perform.</span></span> <span data-ttu-id="909a5-1283">Если этот аргумент опущен, по умолчанию принимается значение –1, указывающее, что следует "выполнить все возможные замены".</span><span class="sxs-lookup"><span data-stu-id="909a5-1283">If omitted, the default value is -1, which means "make all possible substitutions."</span></span></param>
        <param name="Compare"><span data-ttu-id="909a5-1284">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-1284">Optional.</span></span> <span data-ttu-id="909a5-1285">Числовое значение, показывающее вид сравнения, используемое при оценке подстрок.</span><span class="sxs-lookup"><span data-stu-id="909a5-1285">Numeric value indicating the kind of comparison to use when evaluating substrings.</span></span> <span data-ttu-id="909a5-1286">См. значения в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="909a5-1286">See Settings for values.</span></span></param>
        <summary><span data-ttu-id="909a5-1287">Возвращает строку, в которой указанная подстрока заданное число раз заменена другой подстрокой.</span><span class="sxs-lookup"><span data-stu-id="909a5-1287">Returns a string in which a specified substring has been replaced with another substring a specified number of times.</span></span></summary>
        <returns><span data-ttu-id="909a5-1288">Метод <see langword="Replace" /> возвращает следующие значения.</span><span class="sxs-lookup"><span data-stu-id="909a5-1288"><see langword="Replace" /> returns the following values.</span></span>  
  
 <list type="table"><item><term> <span data-ttu-id="909a5-1289">If</span><span class="sxs-lookup"><span data-stu-id="909a5-1289">If</span></span> 
 </term><description> <span data-ttu-id="909a5-1290">Функция Replace возвращает</span><span class="sxs-lookup"><span data-stu-id="909a5-1290">Replace returns</span></span> 
 </description></item><item><term><span data-ttu-id="909a5-1291">Параметр <paramref name="Find" /> является пустой строкой или значением <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="909a5-1291"><paramref name="Find" /> is zero-length or <see langword="Nothing" /></span></span></term><description> <span data-ttu-id="909a5-1292">Копия выражения <paramref name="Expression" /></span><span class="sxs-lookup"><span data-stu-id="909a5-1292">Copy of <paramref name="Expression" /></span></span></description></item><item><term><span data-ttu-id="909a5-1293">Параметр <paramref name="Replace" /> имеет нулевую длину</span><span class="sxs-lookup"><span data-stu-id="909a5-1293"><paramref name="Replace" /> is zero-length</span></span> 
 </term><description> <span data-ttu-id="909a5-1294">Копия выражения <paramref name="Expression" /> без вхождений строки <paramref name="Find" /></span><span class="sxs-lookup"><span data-stu-id="909a5-1294">Copy of <paramref name="Expression" /> with no occurrences of <paramref name="Find" /></span></span></description></item><item><term><span data-ttu-id="909a5-1295">Строка <paramref name="Expression" /> является пустой строкой или значением <see langword="Nothing" />, или значение <paramref name="Start" /> больше длины выражения <paramref name="Expression" /></span><span class="sxs-lookup"><span data-stu-id="909a5-1295"><paramref name="Expression" /> is zero-length or <see langword="Nothing" />, or <paramref name="Start" /> is greater than length of <paramref name="Expression" /></span></span></term><description><see langword="Nothing" /></description></item><item><term><span data-ttu-id="909a5-1296"><paramref name="Count" /> равно 0</span><span class="sxs-lookup"><span data-stu-id="909a5-1296"><paramref name="Count" /> is 0</span></span> 
 </term><description> <span data-ttu-id="909a5-1297">Копия выражения <paramref name="Expression" /></span><span class="sxs-lookup"><span data-stu-id="909a5-1297">Copy of <paramref name="Expression" /></span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1298">Возвращаемое значение функции `Replace` является строкой, которая начинается с позиции, заданной `Start`, и завершается в конце `Expression` строки с подстановкой, заданной `Find` и `Replace` значений.</span><span class="sxs-lookup"><span data-stu-id="909a5-1298">The return value of the `Replace` function is a string that begins at the position specified by `Start` and concludes at the end of the `Expression` string, with the substitutions made as specified by the `Find` and `Replace` values.</span></span>  
  
 <span data-ttu-id="909a5-1299">Аргумент `Compare` может иметь следующие значения.</span><span class="sxs-lookup"><span data-stu-id="909a5-1299">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="909a5-1300">Константа</span><span class="sxs-lookup"><span data-stu-id="909a5-1300">Constant</span></span>|<span data-ttu-id="909a5-1301">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-1301">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="909a5-1302">Выполняет двоичное сравнение</span><span class="sxs-lookup"><span data-stu-id="909a5-1302">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="909a5-1303">Выполняет текстовое сравнение</span><span class="sxs-lookup"><span data-stu-id="909a5-1303">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1304">В этом примере демонстрируется функция `Replace`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1304">This example demonstrates the `Replace` function.</span></span>  
  
```vb  
Dim TestString As String = "Shopping List"  
' Returns "Shipping List".  
Dim aString As String = Replace(TestString, "o", "i")  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-1305"><paramref name="Count" /> &lt; –1 или <paramref name="Start" /> &lt;= 0.</span><span class="sxs-lookup"><span data-stu-id="909a5-1305"><paramref name="Count" /> &lt; -1 or <paramref name="Start" /> &lt;= 0.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Filter" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1306">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1306">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static string Right (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Right(string str, int32 Length) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Right (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Right(System::String ^ str, int Length);" />
      <MemberSignature Language="F#" Value="static member Right : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Right (str, Length)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Right(string str, int32 Length) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Length" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="909a5-1307">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1307">Required.</span></span> <span data-ttu-id="909a5-1308">Выражение типа <see langword="String" />, из которого возвращаются крайние правые знаки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1308"><see langword="String" /> expression from which the rightmost characters are returned.</span></span></param>
        <param name="Length"><span data-ttu-id="909a5-1309">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1309">Required.</span></span> <span data-ttu-id="909a5-1310"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1310"><see langword="Integer" />.</span></span> <span data-ttu-id="909a5-1311">Числовое выражение, показывающее необходимое число возвращаемых знаков.</span><span class="sxs-lookup"><span data-stu-id="909a5-1311">Numeric expression indicating how many characters to return.</span></span> <span data-ttu-id="909a5-1312">Если выражение равно 0, возвращается строка нулевой длины ("").</span><span class="sxs-lookup"><span data-stu-id="909a5-1312">If 0, a zero-length string ("") is returned.</span></span> <span data-ttu-id="909a5-1313">Если выражение больше или равно числу знаков в <paramref name="str" />, то возвращается вся строка.</span><span class="sxs-lookup"><span data-stu-id="909a5-1313">If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</span></span></param>
        <summary><span data-ttu-id="909a5-1314">Возвращает строку, содержащую указанное число знаков с правой стороны строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1314">Returns a string containing a specified number of characters from the right side of a string.</span></span></summary>
        <returns><span data-ttu-id="909a5-1315">Строка, содержащая указанное число знаков с правой стороны строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1315">A string containing a specified number of characters from the right side of a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1316">Чтобы определить количество символов в `str`, используйте функцию `Len`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1316">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="909a5-1317">Если используется в Windows Form или любом другом классе со свойством `Right`, необходимо полностью определить функцию с помощью `Microsoft.VisualBasic.Strings.Right`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1317">If used in a Windows Form, or any other class that has a `Right` property, you must fully qualify the function with `Microsoft.VisualBasic.Strings.Right`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1318">Функция `RightB` в более ранних версиях Visual Basic возвращает строку в байтах, а не в символах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1318">The `RightB` function in earlier versions of Visual Basic returns a string in bytes, rather than characters.</span></span> <span data-ttu-id="909a5-1319">Он используется в основном для преобразования строк в приложениях с двухбайтовой кодировкой (DBCS).</span><span class="sxs-lookup"><span data-stu-id="909a5-1319">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="909a5-1320">Все текущие Visual Basic строки находятся в Юникоде, а `RightB` больше не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="909a5-1320">All current Visual Basic strings are in Unicode, and `RightB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1321">В этом примере демонстрируется использование функции `Right` для возврата подстроки заданного `String`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1321">This example demonstrates the use of the `Right` function to return a substring of a given `String`.</span></span> <span data-ttu-id="909a5-1322">В классе, имеющем свойство `Right`, может потребоваться полностью определить функцию `Right`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1322">In a class that has a `Right` property, it may be necessary to fully qualify the `Right` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-1323"><paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="909a5-1323"><paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1324">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1324">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RSet">
      <MemberSignature Language="C#" Value="public static string RSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RSet(string Source, int32 Length) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RSet(System::String ^ Source, int Length);" />
      <MemberSignature Language="F#" Value="static member RSet : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.RSet (Source, Length)" />
      <MemberSignature Language="ILAsm" Value=".method public static string RSet(string Source, int32 Length) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Length" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="909a5-1325">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1325">Required.</span></span> <span data-ttu-id="909a5-1326">Выражение <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1326"><see langword="String" /> expression.</span></span> <span data-ttu-id="909a5-1327">Имя строковой переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1327">Name of string variable.</span></span></param>
        <param name="Length"><span data-ttu-id="909a5-1328">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1328">Required.</span></span> <span data-ttu-id="909a5-1329">Выражение <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1329"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="909a5-1330">Длина возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1330">Length of returned string.</span></span></param>
        <summary><span data-ttu-id="909a5-1331">Возвращает выровненную по правому краю строку, содержащую указанную строку, настроенную под указанную длину.</span><span class="sxs-lookup"><span data-stu-id="909a5-1331">Returns a right-aligned string containing the specified string adjusted to the specified length.</span></span></summary>
        <returns><span data-ttu-id="909a5-1332">Выровненная по правому краю строка, содержащая указанную строку, настроенную под указанную длину.</span><span class="sxs-lookup"><span data-stu-id="909a5-1332">A right-aligned string containing the specified string adjusted to the specified length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1333">Если `Source` длиннее, чем `Length`, `RSet` помещает только крайние левые символы до длины `Source`в возвращаемой строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1333">If `Source` is longer than `Length`, `RSet` places only the leftmost characters, up to the length of `Source`, in the returned string.</span></span> <span data-ttu-id="909a5-1334">Если указанная строка короче заданной длины, в левый конец строки добавляются пробелы для получения соответствующей длины.</span><span class="sxs-lookup"><span data-stu-id="909a5-1334">If the specified string is shorter than the specified length, spaces are added to the left end of the string to produce the appropriate length.</span></span> <span data-ttu-id="909a5-1335">Если длина указанной строки превышает указанную длину, она сокращается до указанной длины.</span><span class="sxs-lookup"><span data-stu-id="909a5-1335">If the specified string is longer than the specified length, it is shortened to the specified length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1336">В этом примере демонстрируется использование функции `RSet`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1336">This example demonstrates the use of the `RSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1337">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1337">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="909a5-1338">Сводка типов данных (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="909a5-1338">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md"><span data-ttu-id="909a5-1339">Эффективное использование типов данных</span><span class="sxs-lookup"><span data-stu-id="909a5-1339">Efficient Use of Data Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RTrim">
      <MemberSignature Language="C#" Value="public static string RTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RTrim(string str) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RTrim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member RTrim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.RTrim str" />
      <MemberSignature Language="ILAsm" Value=".method public static string RTrim(string str) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="909a5-1340">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1340">Required.</span></span> <span data-ttu-id="909a5-1341">Любое допустимое выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1341">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="909a5-1342">Возвращает строку, содержащую копию указанной строки без начальных пробелов (<see langword="LTrim" />), замыкающих пробелов (<see langword="RTrim" />) или без тех и других (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="909a5-1342">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="909a5-1343">Строка, содержащая копию указанной строки без начальных пробелов (<see langword="LTrim" />), замыкающих пробелов (<see langword="RTrim" />) или без тех и других (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="909a5-1343">A string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1344">Функции `LTrim`, `RTrim`и `Trim` удаляют пробелы из концов строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-1344">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1345">В данном примере функция `LTrim` используется, чтобы убрать пробелы в начале, а функция `RTrim` — чтобы убрать пробелы в конце строковой переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1345">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="909a5-1346">Функция `Trim` в примере используется для удаления обоих типов пробелов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1346">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1347">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1347">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Space">
      <MemberSignature Language="C#" Value="public static string Space (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Space(int32 Number) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Space (Number As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Space(int Number);" />
      <MemberSignature Language="F#" Value="static member Space : int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Space Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Space(int32 Number) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="909a5-1348">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1348">Required.</span></span> <span data-ttu-id="909a5-1349">Выражение <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1349"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="909a5-1350">Нужное количество пробелов в строке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1350">The number of spaces you want in the string.</span></span></param>
        <summary><span data-ttu-id="909a5-1351">Возвращает строку, состоящую из указанного числа пробелов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1351">Returns a string consisting of the specified number of spaces.</span></span></summary>
        <returns><span data-ttu-id="909a5-1352">Строка, состоящая из указанного числа пробелов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1352">A string consisting of the specified number of spaces.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1353">Функция `Space` полезна для форматирования вывода и очистки данных в строках фиксированной длины.</span><span class="sxs-lookup"><span data-stu-id="909a5-1353">The `Space` function is useful for formatting output and clearing data in fixed-length strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1354">В этом примере функция `Space` используется для возврата строки, состоящей из указанного числа пробелов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1354">This example uses the `Space` function to return a string consisting of a specified number of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-1355"><paramref name="Number" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="909a5-1355"><paramref name="Number" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1356">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1356">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string Expression, string Delimiter = &quot; &quot;, int Limit = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Split(string Expression, string Delimiter, int32 Limit, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (Expression As String, Optional Delimiter As String = &quot; &quot;, Optional Limit As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Split : string * string * int * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Split (Expression, Delimiter, Limit, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Split(string Expression, string Delimiter, int32 Limit, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Delimiter" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Limit" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-1357">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1357">Required.</span></span> <span data-ttu-id="909a5-1358">Выражение типа <see langword="String" />, содержащее подстроки и разделители.</span><span class="sxs-lookup"><span data-stu-id="909a5-1358"><see langword="String" /> expression containing substrings and delimiters.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="909a5-1359">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-1359">Optional.</span></span> <span data-ttu-id="909a5-1360">Одиночный знак, используемый для обозначения границ подстроки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1360">Any single character used to identify substring limits.</span></span> <span data-ttu-id="909a5-1361">Если аргумент <paramref name="Delimiter" /> опущен, в качестве разделителя используется знак пробела (" ").</span><span class="sxs-lookup"><span data-stu-id="909a5-1361">If <paramref name="Delimiter" /> is omitted, the space character (" ") is assumed to be the delimiter.</span></span></param>
        <param name="Limit"><span data-ttu-id="909a5-1362">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-1362">Optional.</span></span> <span data-ttu-id="909a5-1363">Максимальное число подстрок, на которые должна быть разделена входная строка.</span><span class="sxs-lookup"><span data-stu-id="909a5-1363">Maximum number of substrings into which the input string should be split.</span></span> <span data-ttu-id="909a5-1364">Значение по умолчанию –1 указывает, что входная строка должна быть разбита в местах каждого из вхождений строки <paramref name="Delimiter" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1364">The default, -1, indicates that the input string should be split at every occurrence of the <paramref name="Delimiter" /> string.</span></span></param>
        <param name="Compare"><span data-ttu-id="909a5-1365">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-1365">Optional.</span></span> <span data-ttu-id="909a5-1366">Числовое значение, которое указывает вид сравнения, выполняемого при оценке подстрок.</span><span class="sxs-lookup"><span data-stu-id="909a5-1366">Numeric value indicating the comparison to use when evaluating substrings.</span></span> <span data-ttu-id="909a5-1367">Сведения о значениях см. в разделе "Параметры".</span><span class="sxs-lookup"><span data-stu-id="909a5-1367">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="909a5-1368">Возвращает одномерный массив (с индексацией от нуля), содержащий указанное число подстрок.</span><span class="sxs-lookup"><span data-stu-id="909a5-1368">Returns a zero-based, one-dimensional array containing a specified number of substrings.</span></span></summary>
        <returns><span data-ttu-id="909a5-1369">Массив<see langword="String" /> .</span><span class="sxs-lookup"><span data-stu-id="909a5-1369"><see langword="String" /> array.</span></span> <span data-ttu-id="909a5-1370">Если <paramref name="Expression" /> является строкой нулевой длины (""), функция <see langword="Split" /> возвращает одноэлементный массив, содержащий строку нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="909a5-1370">If <paramref name="Expression" /> is a zero-length string (""), <see langword="Split" /> returns a single-element array containing a zero-length string.</span></span> <span data-ttu-id="909a5-1371">Если <paramref name="Delimiter" /> является строкой нулевой длины, или он нигде не найден в параметре <paramref name="Expression" />, функция <see langword="Split" /> возвращает одноэлементный массив, содержащий всю строку <paramref name="Expression" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1371">If <paramref name="Delimiter" /> is a zero-length string, or if it does not appear anywhere in <paramref name="Expression" />, <see langword="Split" /> returns a single-element array containing the entire <paramref name="Expression" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1372">По умолчанию или, если `Limit` равно-1, функция `Split` разбивает входную строку на каждое вхождение строки разделителя и возвращает подстроки в массиве.</span><span class="sxs-lookup"><span data-stu-id="909a5-1372">By default, or when `Limit` equals -1, the `Split` function splits the input string at every occurrence of the delimiter string, and returns the substrings in an array.</span></span> <span data-ttu-id="909a5-1373">Если параметр `Limit` больше нуля, функция `Split` разбивает строку на первый экземпляр `Limit`-1 разделителя и возвращает массив с результирующими подстроками.</span><span class="sxs-lookup"><span data-stu-id="909a5-1373">When the `Limit` parameter is greater than zero, the `Split` function splits the string at the first `Limit`-1 occurrences of the delimiter, and returns an array with the resulting substrings.</span></span> <span data-ttu-id="909a5-1374">Например, `Split("a:b:c", ":")` возвращает массив `{"a", "b", "c"}`, а `Split("a:b:c", ":", 2)` возвращает `{"a", "b:c"}`массива.</span><span class="sxs-lookup"><span data-stu-id="909a5-1374">For example, `Split("a:b:c", ":")` returns the array `{"a", "b", "c"}`, while `Split("a:b:c", ":", 2)` returns the array `{"a", "b:c"}`.</span></span>  
  
 <span data-ttu-id="909a5-1375">Когда функция `Split` встречает два разделителя в строке или разделитель в начале или конце строки, он интерпретирует их как окружающую пустую строку ("").</span><span class="sxs-lookup"><span data-stu-id="909a5-1375">When the `Split` function encounters two delimiters in a row, or a delimiter at the beginning or end of the string, it interprets them as surrounding an empty string ("").</span></span> <span data-ttu-id="909a5-1376">Например, `Split("xx", "x")` возвращает массив, содержащий три пустые строки: один из между началом строки и первый "x", один из двух строк "x", а второй — между последним "x" и концом строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1376">For example, `Split("xx", "x")` returns the array containing three empty strings: one from between the beginning of the string and the first "x", one from between the two "x" strings, and one from between the last "x" and the end of the string.</span></span>  
  
 <span data-ttu-id="909a5-1377">В этой таблице показано, как необязательные параметры `Delimiter`, `Limit`и `Compare` могут изменить поведение функции `Split`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1377">This table demonstrates how the optional `Delimiter`, `Limit`, and `Compare` parameters can change the behavior of the `Split` function.</span></span>  
  
|<span data-ttu-id="909a5-1378">Вызов Split</span><span class="sxs-lookup"><span data-stu-id="909a5-1378">Split Call</span></span>|<span data-ttu-id="909a5-1379">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="909a5-1379">Return Value</span></span>|  
|-|-|  
|`Split("42, 12, 19")`|<span data-ttu-id="909a5-1380">{"42," , "12," , "19"}</span><span class="sxs-lookup"><span data-stu-id="909a5-1380">{"42," , "12," , "19"}</span></span>|  
|`Split("42, 12, 19", ", ")`|<span data-ttu-id="909a5-1381">{"42", "12", "19"}</span><span class="sxs-lookup"><span data-stu-id="909a5-1381">{"42", "12", "19"}</span></span>|  
|`Split("42, 12, 19", ", ", 2)`|<span data-ttu-id="909a5-1382">{"42", "12, 19"}</span><span class="sxs-lookup"><span data-stu-id="909a5-1382">{"42", "12, 19"}</span></span>|  
|`Split("192.168.0.1", ".")`|<span data-ttu-id="909a5-1383">{"192", "168", "0", "1"}</span><span class="sxs-lookup"><span data-stu-id="909a5-1383">{"192", "168", "0", "1"}</span></span>|  
|`Split("Alice and Bob", " AND ")`|<span data-ttu-id="909a5-1384">{"Алиса и Боб"}</span><span class="sxs-lookup"><span data-stu-id="909a5-1384">{"Alice and Bob"}</span></span>|  
|`Split("Alice and Bob", " AND ", ,CompareMethod.Text)`|<span data-ttu-id="909a5-1385">{"Алиса", "Bob"}</span><span class="sxs-lookup"><span data-stu-id="909a5-1385">{"Alice", "Bob"}</span></span>|  
|`Split("someone@example.com", "@",1)`|<span data-ttu-id="909a5-1386">{"someone@example.com"}</span><span class="sxs-lookup"><span data-stu-id="909a5-1386">{"someone@example.com"}</span></span>|  
|`Split("someone@example.com", "@",2)`|<span data-ttu-id="909a5-1387">{"кто", "example.com"}</span><span class="sxs-lookup"><span data-stu-id="909a5-1387">{"someone", "example.com"}</span></span>|  
  
 <span data-ttu-id="909a5-1388">Аргумент `Compare` может иметь следующие значения.</span><span class="sxs-lookup"><span data-stu-id="909a5-1388">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="909a5-1389">Константа</span><span class="sxs-lookup"><span data-stu-id="909a5-1389">Constant</span></span>|<span data-ttu-id="909a5-1390">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-1390">Description</span></span>|<span data-ttu-id="909a5-1391">Значение</span><span class="sxs-lookup"><span data-stu-id="909a5-1391">Value</span></span>|  
|-|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="909a5-1392">Выполняет двоичное сравнение</span><span class="sxs-lookup"><span data-stu-id="909a5-1392">Performs a binary comparison</span></span>|<span data-ttu-id="909a5-1393">0</span><span class="sxs-lookup"><span data-stu-id="909a5-1393">0</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="909a5-1394">Выполняет текстовое сравнение</span><span class="sxs-lookup"><span data-stu-id="909a5-1394">Performs a textual comparison</span></span>|<span data-ttu-id="909a5-1395">1</span><span class="sxs-lookup"><span data-stu-id="909a5-1395">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1396">В следующем примере показано, как разделить строку в своих пробелах.</span><span class="sxs-lookup"><span data-stu-id="909a5-1396">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 <span data-ttu-id="909a5-1397">В следующем примере показано, как разделить строки с несколькими разделителями в строке и отфильтровать пустые строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1397">The following example demonstrates how to split strings with multiple delimiters in a row and filter out the empty strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Join" />
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1398">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1398">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrComp">
      <MemberSignature Language="C#" Value="public static int StrComp (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 StrComp(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrComp (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member StrComp : string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.StrComp (String1, String2, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 StrComp(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="String2" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1"><span data-ttu-id="909a5-1399">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1399">Required.</span></span> <span data-ttu-id="909a5-1400">Любое допустимое выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1400">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="String2"><span data-ttu-id="909a5-1401">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1401">Required.</span></span> <span data-ttu-id="909a5-1402">Любое допустимое выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1402">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="Compare"><span data-ttu-id="909a5-1403">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-1403">Optional.</span></span> <span data-ttu-id="909a5-1404">Указывает тип сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-1404">Specifies the type of string comparison.</span></span> <span data-ttu-id="909a5-1405">Если параметр <paramref name="Compare" /> не задан, параметр <see langword="Option Compare" /> определяет тип сравнения.</span><span class="sxs-lookup"><span data-stu-id="909a5-1405">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="909a5-1406">Возвращает -1, 0 или 1 в зависимости от результата сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-1406">Returns -1, 0, or 1, based on the result of a string comparison.</span></span></summary>
        <returns><span data-ttu-id="909a5-1407">Метод <see langword="StrComp" /> возвращает следующие значения.</span><span class="sxs-lookup"><span data-stu-id="909a5-1407">The <see langword="StrComp" /> function has the following return values.</span></span>  
  
 <list type="table"><item><term> <span data-ttu-id="909a5-1408">If</span><span class="sxs-lookup"><span data-stu-id="909a5-1408">If</span></span> 
 </term><description> <span data-ttu-id="909a5-1409">StrComp возвращает</span><span class="sxs-lookup"><span data-stu-id="909a5-1409">StrComp returns</span></span> 
 </description></item><item><term><span data-ttu-id="909a5-1410"><paramref name="String1" /> при сортировке помещается перед <paramref name="String2" /></span><span class="sxs-lookup"><span data-stu-id="909a5-1410"><paramref name="String1" /> sorts ahead of <paramref name="String2" /></span></span></term><description> <span data-ttu-id="909a5-1411">-1</span><span class="sxs-lookup"><span data-stu-id="909a5-1411">-1</span></span> 
 </description></item><item><term><span data-ttu-id="909a5-1412"><paramref name="String1" /> равно <paramref name="String2" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1412"><paramref name="String1" /> is equal to <paramref name="String2" /></span></span></term><description> <span data-ttu-id="909a5-1413">0</span><span class="sxs-lookup"><span data-stu-id="909a5-1413">0</span></span> 
 </description></item><item><term><span data-ttu-id="909a5-1414"><paramref name="String1" /> при сортировке помещается после <paramref name="String2" /></span><span class="sxs-lookup"><span data-stu-id="909a5-1414"><paramref name="String1" /> sorts after <paramref name="String2" /></span></span></term><description> <span data-ttu-id="909a5-1415">1</span><span class="sxs-lookup"><span data-stu-id="909a5-1415">1</span></span> 
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1416">Строки сравниваются по буквенно-цифровым значениям сортировки, начиная с первого символа.</span><span class="sxs-lookup"><span data-stu-id="909a5-1416">The strings are compared by alphanumeric sort values beginning with the first character.</span></span> <span data-ttu-id="909a5-1417">Дополнительные сведения о двоичных сравнениях, текстовых сравнениях и порядке сортировки см. в разделе [Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="909a5-1417">For further information on binary comparisons, textual comparisons, and sort order, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 <span data-ttu-id="909a5-1418">Параметры аргумента `Compare`:</span><span class="sxs-lookup"><span data-stu-id="909a5-1418">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="909a5-1419">Константа</span><span class="sxs-lookup"><span data-stu-id="909a5-1419">Constant</span></span>|<span data-ttu-id="909a5-1420">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-1420">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="909a5-1421">Выполняет двоичное сравнение на основе порядка сортировки, полученного из внутренних двоичных представлений символов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1421">Performs a binary comparison, based on a sort order derived from the internal binary representations of the characters.</span></span>|  
|`Text`|<span data-ttu-id="909a5-1422">Выполняет сравнение текста на основе порядка сортировки текста без учета регистра, определенного значением `LocaleID` системы.</span><span class="sxs-lookup"><span data-stu-id="909a5-1422">Performs a text comparison, based on a case-insensitive text sort order determined by your system's `LocaleID` value.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1423">В этом примере используется функция `StrComp` для возврата результатов сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-1423">This example uses the `StrComp` function to return the results of a string comparison.</span></span>  
  
 [!code-vb[VbVbalrStrings#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-1424">Недопустимое значение параметра <paramref name="Compare" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1424"><paramref name="Compare" /> value is not valid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1425">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1425">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="909a5-1426">Строки в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-1426">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="909a5-1427">Знакомство со строками в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-1427">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrConv">
      <MemberSignature Language="C#" Value="public static string StrConv (string str, Microsoft.VisualBasic.VbStrConv Conversion, int LocaleID = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StrConv(string str, valuetype Microsoft.VisualBasic.VbStrConv Conversion, int32 LocaleID) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrConv (str As String, Conversion As VbStrConv, Optional LocaleID As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="static member StrConv : string * Microsoft.VisualBasic.VbStrConv * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrConv (str, Conversion, LocaleID)" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrConv(string str, valuetype Microsoft.VisualBasic.VbStrConv Conversion, int32 LocaleID) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Conversion" Type="Microsoft.VisualBasic.VbStrConv" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="LocaleID" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="909a5-1428">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1428">Required.</span></span> <span data-ttu-id="909a5-1429">Преобразуемое выражение <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1429"><see langword="String" /> expression to be converted.</span></span></param>
        <param name="Conversion"><span data-ttu-id="909a5-1430">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1430">Required.</span></span> <span data-ttu-id="909a5-1431">Член <see cref="T:Microsoft.VisualBasic.VbStrConv" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1431"><see cref="T:Microsoft.VisualBasic.VbStrConv" /> member.</span></span> <span data-ttu-id="909a5-1432">Значение перечисления, задающее тип выполняемого преобразования.</span><span class="sxs-lookup"><span data-stu-id="909a5-1432">The enumeration value specifying the type of conversion to perform.</span></span></param>
        <param name="LocaleID"><span data-ttu-id="909a5-1433">Необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="909a5-1433">Optional.</span></span> <span data-ttu-id="909a5-1434">Значение <see langword="LocaleID" />, если оно отличается от системного значения <see langword="LocaleID" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1434">The <see langword="LocaleID" /> value, if different from the system <see langword="LocaleID" /> value.</span></span> <span data-ttu-id="909a5-1435">(Системное значение <see langword="LocaleID" /> является значением по умолчанию.)</span><span class="sxs-lookup"><span data-stu-id="909a5-1435">(The system <see langword="LocaleID" /> value is the default.)</span></span></param>
        <summary><span data-ttu-id="909a5-1436">Возвращает строку, преобразованную как указано.</span><span class="sxs-lookup"><span data-stu-id="909a5-1436">Returns a string converted as specified.</span></span></summary>
        <returns><span data-ttu-id="909a5-1437">Строка, преобразованная как указано.</span><span class="sxs-lookup"><span data-stu-id="909a5-1437">A string converted as specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1438">Константы `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`и `VbStrConv.Hiragana` могут вызвать ошибки времени выполнения при использовании в языковых стандартах, где они не применяются, но не всегда: константы `VbStrConv.Katakana` и `VbStrConv.Hiragana` можно использовать в неяпонской системе с установленным японским языковым пакетом.</span><span class="sxs-lookup"><span data-stu-id="909a5-1438">The constants `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, and `VbStrConv.Hiragana` can cause run-time errors when used in locales where they do not apply, but not always: the constants `VbStrConv.Katakana` and `VbStrConv.Hiragana` can be used in a non-Japanese system with the Japanese Language Pack installed.</span></span> <span data-ttu-id="909a5-1439">Кроме того, использование констант `VbStrConv.Wide` и `VbStrConv.Narrow` поддерживается в любой системе, где установлен Восточно-азиатский язык.</span><span class="sxs-lookup"><span data-stu-id="909a5-1439">In addition, use of the constants `VbStrConv.Wide` and `VbStrConv.Narrow` is supported on any system with an East Asian language installed.</span></span>  
  
 <span data-ttu-id="909a5-1440">Эта функция использует сведения о языке и региональных параметрах приложения при обработке строки, чтобы изменения регистра соответствовали языковому стандарту, в котором используется приложение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1440">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="909a5-1441">Если приложение принимает решения по обеспечению безопасности на основе результатов операции сравнения или изменения регистра, то операция должна использовать метод <xref:System.String.Compare%2A?displayProperty=nameWithType> и передавать <xref:System.StringComparison.Ordinal> или <xref:System.StringComparison.OrdinalIgnoreCase> аргументу `comparisonType`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1441">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="909a5-1442">Дополнительные сведения см. [в разделе влияние языка и региональных параметров на строки в Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="909a5-1442">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
 <span data-ttu-id="909a5-1443">Параметры аргумента `Conversion`:</span><span class="sxs-lookup"><span data-stu-id="909a5-1443">The `Conversion` argument settings are:</span></span>  
  
|<span data-ttu-id="909a5-1444">Элемент перечисления</span><span class="sxs-lookup"><span data-stu-id="909a5-1444">Enumeration member</span></span>|<span data-ttu-id="909a5-1445">Описание</span><span class="sxs-lookup"><span data-stu-id="909a5-1445">Description</span></span>|  
|-|-|  
|`VbStrConv.None`|<span data-ttu-id="909a5-1446">Преобразование не выполняется</span><span class="sxs-lookup"><span data-stu-id="909a5-1446">Performs no conversion</span></span>|  
|`VbStrConv.LinguisticCasing`|<span data-ttu-id="909a5-1447">Использует лингвистические правила для регистра, а не для файловой системы (по умолчанию).</span><span class="sxs-lookup"><span data-stu-id="909a5-1447">Uses linguistic rules for casing, rather than File System (default).</span></span> <span data-ttu-id="909a5-1448">Допустимо только для `VbStrConv.UpperCase` и `VbStrConv.LowerCase`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1448">Valid with `VbStrConv.UpperCase` and `VbStrConv.LowerCase` only.</span></span>|  
|`VbStrConv.UpperCase`|<span data-ttu-id="909a5-1449">Преобразует строку в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-1449">Converts the string to uppercase characters.</span></span>|  
|`VbStrConv.LowerCase`|<span data-ttu-id="909a5-1450">Преобразует строку в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-1450">Converts the string to lowercase characters.</span></span>|  
|`VbStrConv.ProperCase`|<span data-ttu-id="909a5-1451">Преобразует первую букву каждого слова в строке в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-1451">Converts the first letter of every word in string to uppercase.</span></span>|  
|<span data-ttu-id="909a5-1452">`VbStrConv.Wide` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="909a5-1452">`VbStrConv.Wide` <sup>\*</sup></span></span>|<span data-ttu-id="909a5-1453">Преобразует узкие (полуширинные) символы в строке в широкие (полноширинные) символы.</span><span class="sxs-lookup"><span data-stu-id="909a5-1453">Converts narrow (half-width) characters in the string to wide (full-width) characters.</span></span> [!INCLUDE[vbstrconv-wide](~/includes/vbstrconv-wide-md.md)]|  
|<span data-ttu-id="909a5-1454">`VbStrConv.Narrow` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="909a5-1454">`VbStrConv.Narrow` <sup>\*</sup></span></span>|<span data-ttu-id="909a5-1455">Преобразует широкие (полноширинные) символы в строке для узких символов (половинной ширины).</span><span class="sxs-lookup"><span data-stu-id="909a5-1455">Converts wide (full-width) characters in the string to narrow (half-width) characters.</span></span>|  
|<span data-ttu-id="909a5-1456">`VbStrConv.Katakana` <sup>\*\*</sup></span><span class="sxs-lookup"><span data-stu-id="909a5-1456">`VbStrConv.Katakana` <sup>\*\*</sup></span></span>|<span data-ttu-id="909a5-1457">Преобразует все символы хирагана в символы катакана.</span><span class="sxs-lookup"><span data-stu-id="909a5-1457">Converts Hiragana characters in the string to Katakana characters.</span></span>|  
|<span data-ttu-id="909a5-1458">`VbStrConv.Hiragana` <sup>\*\*</sup></span><span class="sxs-lookup"><span data-stu-id="909a5-1458">`VbStrConv.Hiragana` <sup>\*\*</sup></span></span>|<span data-ttu-id="909a5-1459">Преобразует все символы катакана в символы хирагана.</span><span class="sxs-lookup"><span data-stu-id="909a5-1459">Converts Katakana characters in the string to Hiragana characters.</span></span>|  
|<span data-ttu-id="909a5-1460">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="909a5-1460">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span></span>|<span data-ttu-id="909a5-1461">Преобразует традиционные китайские иероглифы в упрощенный китайский.</span><span class="sxs-lookup"><span data-stu-id="909a5-1461">Converts Traditional Chinese characters to Simplified Chinese.</span></span>|  
|<span data-ttu-id="909a5-1462">`VbStrConv.TraditionalChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="909a5-1462">`VbStrConv.TraditionalChinese` <sup>\*</sup></span></span>|<span data-ttu-id="909a5-1463">Преобразует символы упрощенного китайского языка в традиционный китайский.</span><span class="sxs-lookup"><span data-stu-id="909a5-1463">Converts Simplified Chinese characters to Traditional Chinese.</span></span>|  
  
 <span data-ttu-id="909a5-1464"><sup>\*</sup> Применяется к азиатским языкам.</span><span class="sxs-lookup"><span data-stu-id="909a5-1464"><sup>\*</sup> Applies to Asian locales.</span></span>  
  
 <span data-ttu-id="909a5-1465"><sup>\*\*</sup> Применяется только к Японии.</span><span class="sxs-lookup"><span data-stu-id="909a5-1465"><sup>\*\*</sup> Applies to Japan only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="909a5-1466">Эти константы указываются в .NET Framework среде CLR.</span><span class="sxs-lookup"><span data-stu-id="909a5-1466">These constants are specified in the .NET Framework common language runtime.</span></span> <span data-ttu-id="909a5-1467">В результате их можно использовать в любом месте кода вместо фактических значений.</span><span class="sxs-lookup"><span data-stu-id="909a5-1467">As a result, they can be used anywhere in your code in place of the actual values.</span></span> <span data-ttu-id="909a5-1468">Большинство можно объединить (например, `UpperCase + Wide`), за исключением случаев, когда они являются взаимоисключающими (например, `VbStrConv.Wide + VbStrConv.Narrow`).</span><span class="sxs-lookup"><span data-stu-id="909a5-1468">Most can be combined (for example, `UpperCase + Wide`), except when they are mutually exclusive (for example, `VbStrConv.Wide + VbStrConv.Narrow`).</span></span>  
  
 <span data-ttu-id="909a5-1469">Ниже приведены допустимые разделители слов для правильного регистра: NULL (`Chr$(0)`), горизонтальная табуляция (`Chr$(9)`), перевод строки (`Chr$(10)`), вертикальная табуляция (`Chr$(11)`), веб-канал формы (`Chr$(12)`), возврат каретки (`Chr$(13)`), пробел (однобайтовый набор символов) (`Chr$(32)`).</span><span class="sxs-lookup"><span data-stu-id="909a5-1469">The following are valid word separators for proper casing: Null (`Chr$(0)`), horizontal tab (`Chr$(9)`), line feed (`Chr$(10)`), vertical tab (`Chr$(11)`), form feed (`Chr$(12)`), carriage return (`Chr$(13)`), space (single-byte character set) (`Chr$(32)`).</span></span> <span data-ttu-id="909a5-1470">Фактическое значение пробела, которое может быть полной или половинной ширины, зависит от страны или региона для восточноазиатских языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="909a5-1470">The actual value for a space, which can be full or half width, varies by country/region for East Asian cultures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1471">В этом примере текст преобразуется во все строчные буквы.</span><span class="sxs-lookup"><span data-stu-id="909a5-1471">This example converts text into all lowercase letters.</span></span>  
  
 [!code-vb[VbVbalrStrings#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-1472">Значение <paramref name="LocaleID" /> не поддерживается, <paramref name="Conversion" /> &lt; 0 или &gt; 2048, либо конверсия не поддерживается для указанного языкового стандарта.</span><span class="sxs-lookup"><span data-stu-id="909a5-1472">Unsupported <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 or &gt; 2048, or unsupported conversion for specified locale.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1473">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1473">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="909a5-1474">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="909a5-1474">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="StrDup">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="909a5-1475">Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</span><span class="sxs-lookup"><span data-stu-id="909a5-1475">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, char Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StrDup(int32 Number, char Character) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, char Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * char -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, char Character) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Character" Type="System.Char" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="909a5-1476">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1476">Required.</span></span> <span data-ttu-id="909a5-1477">Выражение <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1477"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="909a5-1478">Длина возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1478">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="909a5-1479">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1479">Required.</span></span> <span data-ttu-id="909a5-1480">Любое допустимое выражение <see langword="Char" />, <see langword="String" /> или <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1480">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="909a5-1481">Используется только первый знак выражения.</span><span class="sxs-lookup"><span data-stu-id="909a5-1481">Only the first character of the expression will be used.</span></span> <span data-ttu-id="909a5-1482">Если параметр Character относится к типу <see langword="Object" />, он должен содержать значение <see langword="Char" /> или <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1482">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="909a5-1483">Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</span><span class="sxs-lookup"><span data-stu-id="909a5-1483">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="909a5-1484">Строка или объект, состоящие из указанного знака, повторенного определенное количество раз.</span><span class="sxs-lookup"><span data-stu-id="909a5-1484">A string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1485">Эта функция возвращает `String`, состоящие из повторяющихся символов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1485">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="909a5-1486">Символ, составляющий строку, является первым символом в `Character` аргументе и повторяется `Number` число раз.</span><span class="sxs-lookup"><span data-stu-id="909a5-1486">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1487">В этом примере функция `StrDup` используется для возврата строки повторяющихся символов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1487">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-1488">Недопустимо значение <paramref name="Number" /> меньшее 0 или типа <paramref name="Character" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1488"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="909a5-1489"><paramref name="Character" /> имеет значение <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1489"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1490">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1490">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static object StrDup (int Number, object Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object StrDup(int32 Number, object Character) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrDup(int Number, System::Object ^ Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * obj -&gt; obj" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrDup(int32 Number, object Character) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Character" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="909a5-1491">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1491">Required.</span></span> <span data-ttu-id="909a5-1492">Выражение <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1492"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="909a5-1493">Длина возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1493">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="909a5-1494">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1494">Required.</span></span> <span data-ttu-id="909a5-1495">Любое допустимое выражение <see langword="Char" />, <see langword="String" /> или <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1495">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="909a5-1496">Используется только первый знак выражения.</span><span class="sxs-lookup"><span data-stu-id="909a5-1496">Only the first character of the expression will be used.</span></span> <span data-ttu-id="909a5-1497">Если параметр Character относится к типу <see langword="Object" />, он должен содержать значение <see langword="Char" /> или <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1497">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="909a5-1498">Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</span><span class="sxs-lookup"><span data-stu-id="909a5-1498">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="909a5-1499">Строка или объект, состоящие из указанного знака, повторенного определенное количество раз.</span><span class="sxs-lookup"><span data-stu-id="909a5-1499">A string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1500">Эта функция возвращает `String`, состоящие из повторяющихся символов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1500">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="909a5-1501">Символ, составляющий строку, является первым символом в `Character` аргументе и повторяется `Number` число раз.</span><span class="sxs-lookup"><span data-stu-id="909a5-1501">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1502">В этом примере функция `StrDup` используется для возврата строки повторяющихся символов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1502">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-1503">Недопустимо значение <paramref name="Number" /> меньшее 0 или типа <paramref name="Character" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1503"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="909a5-1504"><paramref name="Character" /> имеет значение <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1504"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1505">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1505">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, string Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StrDup(int32 Number, string Character) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, System::String ^ Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, string Character) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
        <Parameter Name="Character" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="909a5-1506">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1506">Required.</span></span> <span data-ttu-id="909a5-1507">Выражение <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1507"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="909a5-1508">Длина возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="909a5-1508">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="909a5-1509">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1509">Required.</span></span> <span data-ttu-id="909a5-1510">Любое допустимое выражение <see langword="Char" />, <see langword="String" /> или <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1510">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="909a5-1511">Используется только первый знак выражения.</span><span class="sxs-lookup"><span data-stu-id="909a5-1511">Only the first character of the expression will be used.</span></span> <span data-ttu-id="909a5-1512">Если параметр Character относится к типу <see langword="Object" />, он должен содержать значение <see langword="Char" /> или <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1512">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="909a5-1513">Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</span><span class="sxs-lookup"><span data-stu-id="909a5-1513">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="909a5-1514">Строка или объект, состоящие из указанного знака, повторенного определенное количество раз.</span><span class="sxs-lookup"><span data-stu-id="909a5-1514">A string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1515">Эта функция возвращает `String`, состоящие из повторяющихся символов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1515">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="909a5-1516">Символ, составляющий строку, является первым символом в `Character` аргументе и повторяется `Number` число раз.</span><span class="sxs-lookup"><span data-stu-id="909a5-1516">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1517">В этом примере функция `StrDup` используется для возврата строки повторяющихся символов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1517">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="909a5-1518">Недопустимо значение <paramref name="Number" /> меньшее 0 или типа <paramref name="Character" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1518"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="909a5-1519"><paramref name="Character" /> имеет значение <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1519"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1520">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1520">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrReverse">
      <MemberSignature Language="C#" Value="public static string StrReverse (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StrReverse(string Expression) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrReverse (Expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrReverse(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member StrReverse : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrReverse Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrReverse(string Expression) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="909a5-1521">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1521">Required.</span></span> <span data-ttu-id="909a5-1522">Строковое выражение, знаки которого следует переставить в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1522">String expression whose characters are to be reversed.</span></span> <span data-ttu-id="909a5-1523">Если параметр <paramref name="Expression" /> является строкой нулевой длины (""), то возвращается строка нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="909a5-1523">If <paramref name="Expression" /> is a zero-length string (""), a zero-length string is returned.</span></span></param>
        <summary><span data-ttu-id="909a5-1524">Возвращает строку, содержащую те же знаки, что и в заданной строке, но в противоположном порядке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1524">Returns a string in which the character order of a specified string is reversed.</span></span></summary>
        <returns><span data-ttu-id="909a5-1525">Строка, содержащая те же знаки, что и в заданной строке, но в противоположном порядке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1525">A string in which the character order of a specified string is reversed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1526">Функция `StrReverse` возвращает строку, содержащую те же символы, что и `Expression`, но в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="909a5-1526">The `StrReverse` function returns a string that contains the same characters as `Expression`, but in the opposite order.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrStrings#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1527">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1527">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static string Trim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Trim(string str) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Trim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Trim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Trim str" />
      <MemberSignature Language="ILAsm" Value=".method public static string Trim(string str) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="909a5-1528">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1528">Required.</span></span> <span data-ttu-id="909a5-1529">Любое допустимое выражение типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1529">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="909a5-1530">Возвращает строку, содержащую копию указанной строки без начальных пробелов (<see langword="LTrim" />), замыкающих пробелов (<see langword="RTrim" />) или без тех и других (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="909a5-1530">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="909a5-1531">Строка, содержащая копию указанной строки без начальных пробелов (<see langword="LTrim" />), замыкающих пробелов (<see langword="RTrim" />) или без тех и других (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="909a5-1531">A string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1532">Функции `LTrim`, `RTrim`и `Trim` удаляют пробелы из концов строк.</span><span class="sxs-lookup"><span data-stu-id="909a5-1532">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1533">В данном примере функция `LTrim` используется, чтобы убрать пробелы в начале, а функция `RTrim` — чтобы убрать пробелы в конце строковой переменной.</span><span class="sxs-lookup"><span data-stu-id="909a5-1533">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="909a5-1534">Функция `Trim` в примере используется для удаления обоих типов пробелов.</span><span class="sxs-lookup"><span data-stu-id="909a5-1534">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1535">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1535">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="909a5-1536">Возвращает строку или знак, содержащий указанную строку, преобразованную в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-1536">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static char UCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char UCase(char Value) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char UCase(char Value);" />
      <MemberSignature Language="F#" Value="static member UCase : char -&gt; char" Usage="Microsoft.VisualBasic.Strings.UCase Value" />
      <MemberSignature Language="ILAsm" Value=".method public static char UCase(char Value) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="909a5-1537">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1537">Required.</span></span> <span data-ttu-id="909a5-1538">Любое допустимое значение <see langword="String" /> или выражение <see langword="Char" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1538">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="909a5-1539">Возвращает строку или знак, содержащий указанную строку, преобразованную в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-1539">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
        <returns><span data-ttu-id="909a5-1540">Строка или знак, содержащие указанную строку, преобразованную в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-1540">A string or character containing the specified string converted to uppercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1541">Только строчные буквы преобразуются в верхний регистр; Все прописные буквы и небуквенные символы остаются без изменений.</span><span class="sxs-lookup"><span data-stu-id="909a5-1541">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="909a5-1542">Эта функция использует сведения о языке и региональных параметрах приложения при обработке строки, чтобы изменения регистра соответствовали языковому стандарту, в котором используется приложение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1542">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="909a5-1543">Если приложение принимает решения по обеспечению безопасности на основе результатов операции сравнения или изменения регистра, то операция должна использовать метод <xref:System.String.Compare%2A?displayProperty=nameWithType> и передавать <xref:System.StringComparison.Ordinal> или <xref:System.StringComparison.OrdinalIgnoreCase> аргументу `comparisonType`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1543">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="909a5-1544">Дополнительные сведения см. [в разделе влияние языка и региональных параметров на строки в Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="909a5-1544">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1545">В данном примере функция `UCase` используется для возврата строки в верхнем регистре.</span><span class="sxs-lookup"><span data-stu-id="909a5-1545">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1546">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1546">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="909a5-1547">Строки в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-1547">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="909a5-1548">Знакомство со строками в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-1548">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static string UCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UCase(string Value) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UCase(System::String ^ Value);" />
      <MemberSignature Language="F#" Value="static member UCase : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.UCase Value" />
      <MemberSignature Language="ILAsm" Value=".method public static string UCase(string Value) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="909a5-1549">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="909a5-1549">Required.</span></span> <span data-ttu-id="909a5-1550">Любое допустимое значение <see langword="String" /> или выражение <see langword="Char" />.</span><span class="sxs-lookup"><span data-stu-id="909a5-1550">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="909a5-1551">Возвращает строку или знак, содержащий указанную строку, преобразованную в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-1551">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
        <returns><span data-ttu-id="909a5-1552">Строка или знак, содержащие указанную строку, преобразованную в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="909a5-1552">A string or character containing the specified string converted to uppercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="909a5-1553">Только строчные буквы преобразуются в верхний регистр; Все прописные буквы и небуквенные символы остаются без изменений.</span><span class="sxs-lookup"><span data-stu-id="909a5-1553">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="909a5-1554">Эта функция использует сведения о языке и региональных параметрах приложения при обработке строки, чтобы изменения регистра соответствовали языковому стандарту, в котором используется приложение.</span><span class="sxs-lookup"><span data-stu-id="909a5-1554">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="909a5-1555">Если приложение принимает решения по обеспечению безопасности на основе результатов операции сравнения или изменения регистра, то операция должна использовать метод <xref:System.String.Compare%2A?displayProperty=nameWithType> и передавать <xref:System.StringComparison.Ordinal> или <xref:System.StringComparison.OrdinalIgnoreCase> аргументу `comparisonType`.</span><span class="sxs-lookup"><span data-stu-id="909a5-1555">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="909a5-1556">Дополнительные сведения см. [в разделе влияние языка и региональных параметров на строки в Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="909a5-1556">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="909a5-1557">В данном примере функция `UCase` используется для возврата строки в верхнем регистре.</span><span class="sxs-lookup"><span data-stu-id="909a5-1557">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="909a5-1558">Сводка по работе со строками</span><span class="sxs-lookup"><span data-stu-id="909a5-1558">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="909a5-1559">Строки в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-1559">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="909a5-1560">Знакомство со строками в Visual Basic</span><span class="sxs-lookup"><span data-stu-id="909a5-1560">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
