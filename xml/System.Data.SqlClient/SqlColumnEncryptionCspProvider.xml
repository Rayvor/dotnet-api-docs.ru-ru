<Type Name="SqlColumnEncryptionCspProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionCspProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34a9d7b7e5c3339c9e2364591ef5141c34ecbffb" /><Meta Name="ms.sourcegitcommit" Value="00194cfb0d5c4f2d3f620c0b561d50d547ce2f7f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/06/2019" /><Meta Name="ms.locfileid" Value="70388397" /></Metadata><TypeSignature Language="C#" Value="public class SqlColumnEncryptionCspProvider : System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlColumnEncryptionCspProvider extends System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionCspProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlColumnEncryptionCspProvider&#xA;Inherits SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionCspProvider : System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionCspProvider = class&#xA;    inherit SqlColumnEncryptionKeyStoreProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6367b-101">Реализация поставщика хранилища CMK для использования поставщиков служб шифрования (CSP) на основе Microsoft CAPI в режиме <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.</span><span class="sxs-lookup"><span data-stu-id="6367b-101">The CMK Store provider implementation for using  Microsoft CAPI based Cryptographic Service Providers (CSP) with <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6367b-102">Позволяет хранить Always Encrypted ключей главных ключей столбцов в хранилище, например аппаратном модуле безопасности (HSM), поддерживающем поставщики криптографических служб (CSP) на основе Microsoft CAPI.</span><span class="sxs-lookup"><span data-stu-id="6367b-102">Enables storing Always Encrypted column master key keys in a store, such as a hardware security module (HSM), that supports the Microsoft CAPI based Cryptographic Service Providers (CSP).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://blogs.msdn.microsoft.com/sqlsecurity/tag/always-encrypted/"><span data-ttu-id="6367b-103">Always Encrypted (записи в блоге)</span><span class="sxs-lookup"><span data-stu-id="6367b-103">Always Encrypted (blog posts)</span></span></related>
    <related type="ExternalDocumentation" href="/sql/relational-databases/security/encryption/always-encrypted-client-development"><span data-ttu-id="6367b-104">Always Encrypted (Разработка клиентов)</span><span class="sxs-lookup"><span data-stu-id="6367b-104">Always Encrypted (client development)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlColumnEncryptionCspProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlColumnEncryptionCspProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6367b-105">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCspProvider" />.</span><span class="sxs-lookup"><span data-stu-id="6367b-105">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCspProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.DecryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCspProvider.DecryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, encryptedColumnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="6367b-106">Путь к главному ключу.</span><span class="sxs-lookup"><span data-stu-id="6367b-106">The master key path.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="6367b-107">Алгоритм шифрования.</span><span class="sxs-lookup"><span data-stu-id="6367b-107">The encryption algorithm.</span></span></param>
        <param name="encryptedColumnEncryptionKey"><span data-ttu-id="6367b-108">Ключ шифрования зашифрованного столбца.</span><span class="sxs-lookup"><span data-stu-id="6367b-108">The encrypted column encryption key.</span></span></param>
        <summary><span data-ttu-id="6367b-109">Расшифровывает данное зашифрованное значение, используя алгоритм и асимметричный ключ, который задан с помощью пути ключа.</span><span class="sxs-lookup"><span data-stu-id="6367b-109">Decrypts the given encrypted value using an asymmetric key specified by the key path and algorithm.</span></span> <span data-ttu-id="6367b-110">Путь ключа должен иметь формат [имя_поставщика]/KeyIdentifier. Ключ должен быть асимметричным и храниться в указанном поставщике CSP.</span><span class="sxs-lookup"><span data-stu-id="6367b-110">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CSP provider.</span></span> <span data-ttu-id="6367b-111">Допустимым алгоритмом, используемым для шифрования и расшифровки CEK, является RSA_OAEP.</span><span class="sxs-lookup"><span data-stu-id="6367b-111">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span></span></summary>
        <returns><span data-ttu-id="6367b-112">Расшифрованный ключ шифрования столбца.</span><span class="sxs-lookup"><span data-stu-id="6367b-112">The decrypted column encryption key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.EncryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCspProvider.EncryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, columnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="6367b-113">Путь к главному ключу.</span><span class="sxs-lookup"><span data-stu-id="6367b-113">The master key path.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="6367b-114">Алгоритм шифрования.</span><span class="sxs-lookup"><span data-stu-id="6367b-114">The encryption algorithm.</span></span></param>
        <param name="columnEncryptionKey"><span data-ttu-id="6367b-115">Ключ шифрования зашифрованного столбца.</span><span class="sxs-lookup"><span data-stu-id="6367b-115">The encrypted column encryption key.</span></span></param>
        <summary><span data-ttu-id="6367b-116">Шифрует конкретный ключ шифрования столбца в формате обычного текста с помощью указанного алгоритма и асимметричного ключа, указанного в пути ключа.</span><span class="sxs-lookup"><span data-stu-id="6367b-116">Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm.</span></span> <span data-ttu-id="6367b-117">Путь ключа должен иметь формат [имя_поставщика]/KeyIdentifier. Ключ должен быть асимметричным и храниться в указанном поставщике CSP.</span><span class="sxs-lookup"><span data-stu-id="6367b-117">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CSP provider.</span></span> <span data-ttu-id="6367b-118">Допустимым алгоритмом, используемым для шифрования и расшифровки CEK, является RSA_OAEP.</span><span class="sxs-lookup"><span data-stu-id="6367b-118">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span></span></summary>
        <returns><span data-ttu-id="6367b-119">Ключ шифрования зашифрованного столбца.</span><span class="sxs-lookup"><span data-stu-id="6367b-119">The encrypted column encryption key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public const string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlColumnEncryptionCspProvider.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Const ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Data.SqlClient.SqlColumnEncryptionCspProvider.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6367b-120">Постоянная строка для имени поставщика MSSQL_CSP_PROVIDER.</span><span class="sxs-lookup"><span data-stu-id="6367b-120">A constant string for the provider name 'MSSQL_CSP_PROVIDER'.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="F#" Value="override this.SignColumnMasterKeyMetadata : string * bool -&gt; byte[]" Usage="sqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" Index="0" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="6367b-121">Путь к главному ключу столбца.</span><span class="sxs-lookup"><span data-stu-id="6367b-121">The column master key path.</span></span> <span data-ttu-id="6367b-122">Формат пути зависит от поставщика хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="6367b-122">The path format is specific to a key store provider.</span></span></param>
        <param name="allowEnclaveComputations"><span data-ttu-id="6367b-123">Значение <see langword="true" />, если главный ключ столбца поддерживает анклавные вычисления, иначе значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6367b-123"><see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6367b-124">Во всех случаях создает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="6367b-124">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span></span></summary>
        <returns><span data-ttu-id="6367b-125">Подпись метаданных главного ключа столбца.</span><span class="sxs-lookup"><span data-stu-id="6367b-125">The signature of the column master key metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6367b-126"><xref:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata%2A> Метод должен быть реализован соответствующими поставщиками хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="6367b-126">The <xref:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata%2A> method must be implemented by the corresponding key store providers.</span></span> <span data-ttu-id="6367b-127"><xref:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata%2A>следует использовать асимметричный ключ, определяемый путем к ключу, и подписывать метаданные MasterKey, `masterKeyPath`состоящие из, `allowEnclaveComputations`и ProviderName.</span><span class="sxs-lookup"><span data-stu-id="6367b-127"><xref:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata%2A> should use an asymmetric key identified by a key path and sign the masterkey metadata consisting of `masterKeyPath`, `allowEnclaveComputations`, and providerName.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6367b-128">Во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="6367b-128">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool" Usage="sqlColumnEncryptionCspProvider.VerifyColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" Index="0" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
        <Parameter Name="signature" Type="System.Byte[]" Index="2" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="6367b-129">Полный путь к асимметричному ключу.</span><span class="sxs-lookup"><span data-stu-id="6367b-129">The complete path of an asymmetric key.</span></span> <span data-ttu-id="6367b-130">Формат пути зависит от поставщика хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="6367b-130">The path format is specific to a key store provider.</span></span></param>
        <param name="allowEnclaveComputations"><span data-ttu-id="6367b-131">Логическое значение, указывающее, можно ли отправлять этот ключ в безопасный анклав.</span><span class="sxs-lookup"><span data-stu-id="6367b-131">A boolean that indicates if this key can be sent to the trusted enclave.</span></span></param>
        <param name="signature"><span data-ttu-id="6367b-132">Подпись метаданных главного ключа.</span><span class="sxs-lookup"><span data-stu-id="6367b-132">Master key metadata signature.</span></span></param>
        <summary><span data-ttu-id="6367b-133">Эта функция должна реализовываться соответствующими поставщиками хранилищ ключей.</span><span class="sxs-lookup"><span data-stu-id="6367b-133">This function must be implemented by the corresponding Key Store providers.</span></span> <span data-ttu-id="6367b-134">Эта функция должна использовать асимметричный ключ, который задается как путь к ключу, и подписывать метаданные главного ключа (masterKeyPath, allowEnclaveComputations, providerName).</span><span class="sxs-lookup"><span data-stu-id="6367b-134">This function should use an asymmetric key identified by a key path and sign the masterkey metadata consisting of (masterKeyPath, allowEnclaveComputations, providerName).</span></span></summary>
        <returns><span data-ttu-id="6367b-135">Логическое значение, указывающее, могут ли быть подтверждены метаданные ключа на основе предоставленной подписи.</span><span class="sxs-lookup"><span data-stu-id="6367b-135">A Boolean that indicates if the master key metadata can be verified based on the provided signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
