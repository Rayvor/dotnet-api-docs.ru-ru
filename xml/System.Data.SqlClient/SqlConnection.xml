<Type Name="SqlConnection" FullName="System.Data.SqlClient.SqlConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e96fea078cabf5ca5fdf5fd76c48fb885e03a1c2" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65003873" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit DbConnection&#xA;    interface IDbConnection&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет подключение к базе данных SQL Server. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection> Объект представляет уникальный сеанс для SQL Server источника данных. В системе базы данных клиента или сервера она эквивалентна сетевому подключению к серверу. <xref:System.Data.SqlClient.SqlConnection>используется вместе с <xref:System.Data.SqlClient.SqlDataAdapter> и <xref:System.Data.SqlClient.SqlCommand> для повышения производительности при подключении к Microsoft SQL Server базе данных. Для всех SQL Server продуктов сторонних производителей и других поддерживаемых OLE DB источников данных используйте <xref:System.Data.OleDb.OleDbConnection>.  
  
 При создании экземпляра <xref:System.Data.SqlClient.SqlConnection>все свойства устанавливаются в исходные значения. Список этих значений см. в <xref:System.Data.SqlClient.SqlConnection> описании конструктора.  
  
 Список <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> ключевых слов в строке подключения см. в разделе.  
  
 <xref:System.Data.SqlClient.SqlConnection> Если выходит из области, оно не будет закрыто. Поэтому необходимо явно закрыть соединение, вызвав `Close` или. `Dispose` `Close`функции `Dispose` и функционально эквивалентны. Если для `Pooling` `true` параметра пулы соединений задано значение или `yes`, то базовое соединение возвращается в пул соединений. С другой стороны, если `Pooling` параметр имеет `false` значение или `no`, то базовое соединение с сервером фактически закрыто.  
  
> [!NOTE]
>  События входа в систему и выхода из системы не вызываются на сервере при выборке подключения из пула подключений и при возврате его в пул подключений, поскольку при возврате в пул подключений подключение фактически не закрывается. Дополнительные сведения см. в разделе [Пулы подключений SQL Server (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
 Чтобы гарантировать, что соединения всегда закрываются, откройте соединение внутри `using` блока, как показано в следующем фрагменте кода. Это гарантирует, что соединение будет автоматически закрыто при выходе кода из блока.  
  
```vb  
Using connection As New SqlConnection(connectionString)  
    connection.Open()  
    ' Do work here; connection closed on following line.  
End Using  
  
```  
  
```csharp  
using (SqlConnection connection = new SqlConnection(connectionString))  
    {  
        connection.Open();  
        // Do work here; connection closed on following line.  
    }  
```  
  
> [!NOTE]
>  Для развертывания высокопроизводительных приложений необходимо использовать пулы соединений. При использовании .NET Framework поставщика данных для SQL Server не нужно включать пулы соединений, так как поставщик управляет этим автоматически, хотя некоторые параметры можно изменить. Дополнительные сведения см. в разделе [Пулы подключений SQL Server (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
 Если объект <xref:System.Data.SqlClient.SqlException> создается методом <xref:System.Data.SqlClient.SqlCommand>, выполняющим, <xref:System.Data.SqlClient.SqlConnection> компонент остается открытым, если уровень серьезности равен 19 или меньше. Если уровень серьезности равен 20 или больше, сервер обычно закрывает <xref:System.Data.SqlClient.SqlConnection>. Тем не менее, пользователь может опять открыть подключение и продолжить работу.  
  
 Приложение, создающее экземпляр <xref:System.Data.SqlClient.SqlConnection> объекта, может потребовать, чтобы все прямые и косвенные вызывающие объекты имели достаточные разрешения на доступ к коду, установив декларативные или императивные требования безопасности. <xref:System.Data.SqlClient.SqlConnection>выполняет требования безопасности с помощью <xref:System.Data.SqlClient.SqlClientPermission> объекта. Пользователи могут убедиться, что их код имеет достаточные разрешения с <xref:System.Data.SqlClient.SqlClientPermissionAttribute> помощью объекта. Пользователи и администраторы также могут использовать [средство Caspol. exe (политика управления доступом для кода)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) для изменения политики безопасности на уровне компьютера, пользователя и предприятия. Дополнительные сведения см. в разделе [Безопасность в .NET](~/docs/standard/security/index.md). Пример, демонстрирующий использование требований безопасности, см. в разделе [Управление доступом для кода и ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  
  
 Дополнительные сведения об обработке предупреждений и информационных сообщений с сервера см. в разделе [события подключения](~/docs/framework/data/adonet/connection-events.md). Дополнительные сведения об ошибках SQL Server Engine и сообщениях об ошибках см. в разделе [ядро СУБД события и ошибки](/sql/relational-databases/errors-events/database-engine-events-and-errors).
  
> [!CAUTION]
>  Вместо общей памяти можно принудительно использовать TCP. Это можно сделать путем добавления префикса TCP: к имени сервера в строке подключения или же можно использовать localhost.  
  
   
  
## Examples  
 В следующем примере создаются <xref:System.Data.SqlClient.SqlCommand> <xref:System.Data.SqlClient.SqlConnection>и. Открывается и устанавливается в <xref:System.Data.SqlClient.SqlCommand.Connection%2A> качестве для <xref:System.Data.SqlClient.SqlCommand>. <xref:System.Data.SqlClient.SqlConnection> Затем в примере вызывается метод <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. Для этого <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> передается строка подключения и строка запроса, которая [!INCLUDE[tsql](~/includes/tsql-md.md)] является инструкцией INSERT. Соединение закрывается автоматически, когда код выходит из блока using.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании нового экземпляра <xref:System.Data.SqlClient.SqlConnection> свойства чтения и записи устанавливаются в следующие начальные значения, если они специально не заданы с помощью связанных с ними ключевых слов <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> в свойстве.  
  
|Свойства|Исходное значение|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|пустая строка ("")|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|пустая строка ("")|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|пустая строка ("")|  
  
 Значение этих свойств можно изменить только с помощью <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> свойства. <xref:System.Data.SqlClient.SqlConnectionStringBuilder> Класс предоставляет функциональные возможности для создания и управления содержимым строк подключения.  
  
   
  
## Examples  
 В следующем примере создается и открывается <xref:System.Data.SqlClient.SqlConnection>.  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Подключение, которое используется для открытия базы данных SQL Server.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" /> после получения строки, содержащей строку соединения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании нового экземпляра <xref:System.Data.SqlClient.SqlConnection> свойства чтения и записи устанавливаются в следующие начальные значения, если они специально не заданы с помощью связанных с ними ключевых слов <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> в свойстве.  
  
|Свойства|Исходное значение|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|пустая строка ("")|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|пустая строка ("")|  
  
 Значение этих свойств можно изменить только с помощью <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> свойства. <xref:System.Data.SqlClient.SqlConnection> Класс предоставляет функциональные возможности для создания и управления содержимым строк подключения.  
  
   
  
## Examples  
 В следующем примере создается и открывается <xref:System.Data.SqlClient.SqlConnection>.  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Использование .NET Framework поставщика данных для SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential credential) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, credential As SqlCredential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential cred) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, cred As SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, credential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, cred)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cred" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">Строка подключения, которая не использует какое-либо из следующих ключевых слов строки подключения: <see langword="Integrated Security = true" />, <see langword="UserId" /> или <see langword="Password" />, или не использует <see langword="ContextConnection = true" />.</param>
        <param name="credential">Объект <see cref="T:System.Data.SqlClient.SqlCredential" />. Если <paramref name="credential" /> имеет значение NULL, то <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" /> функционально эквивалентен <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />.</param>
        <param name="cred">To be added.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" />, используя строку подключения, в которой не используется <see langword="Integrated Security = true" />, и объект <see cref="T:System.Data.SqlClient.SqlCredential" />, содержащий идентификатор пользователя и пароль.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public string AccessToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessToken As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessToken { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessToken : string with get, set" Usage="System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает токен доступа для подключения.</summary>
        <value>Токен доступа для подключения.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="sqlConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Начинает транзакцию базы данных.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Начинает транзакцию базы данных.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта команда сопоставляется с SQL Server реализацией BEGIN TRANSACTION.  
  
 Необходимо явно зафиксировать или откатить транзакцию с помощью <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> метода <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> или. Чтобы убедиться, что поставщик данных .NET Framework для SQL Server модели управления транзакциями работает правильно, Избегайте использования других моделей управления транзакциями, например, предоставляемых SQL Server.  
  
> [!NOTE]
>  Если уровень изоляции не указан, используется уровень изоляции по умолчанию. Чтобы указать уровень изоляции с <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> помощью метода, используйте перегрузку, которая `iso` принимает параметр (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>). Уровень изоляции, заданный для транзакции, сохраняется после завершения транзакции и до закрытия или удаления соединения. Установка уровня изоляции моментального **снимка** в базе данных, где уровень изоляции SNAPSHOT не включен, не вызывает исключение. Транзакция будет завершена с использованием уровня изоляции по умолчанию.  
  
> [!CAUTION]
>  Если транзакция запущена и на сервере возникает ошибка уровня 16 или выше, то откат транзакции не будет выполнен до <xref:System.Data.SqlClient.SqlDataReader.Read%2A> вызова метода. Исключение в **ExecuteReader**не создается.  
  
> [!CAUTION]
>  Если запрос возвращает большой объем данных и вызывает метод `BeginTransaction` <xref:System.Data.SqlClient.SqlException> , создается исключение, так как SQL Server не разрешает параллельные транзакции при использовании режима MARS. Чтобы избежать этой проблемы, перед открытием модулей чтения всегда связывайте транзакцию с командой, соединением или обоими операциями.  
  
 Дополнительные сведения об SQL Server транзакциях см. в разделе [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
   
  
## Examples  
 В следующем примере создаются <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlTransaction>и. В нем также показано <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, как использовать методы, и <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> .  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Параллельные транзакции не разрешены при использовании режима MARS.</exception>
        <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Транзакции и параллельность</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction iso" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="iso">Уровень изоляции, с которым должна выполняться транзакция.</param>
        <summary>Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта команда сопоставляется с SQL Server реализацией BEGIN TRANSACTION.  
  
 Необходимо явно зафиксировать или откатить транзакцию с помощью <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> метода <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> или. Чтобы убедиться, что поставщик данных .NET Framework для SQL Server модели управления транзакциями работает правильно, Избегайте использования других моделей управления транзакциями, например, предоставляемых SQL Server.  
  
> [!NOTE]
> После фиксации или отката транзакции уровень изоляции транзакции сохраняется для всех последующих команд, наследующихся в режиме автоматической фиксации (SQL Server умолчанию). Это может привести к непредвиденным результатам, таким как уровень изоляции ПОВТОРЯЕМого чтения, сохраняющий и блокирующий других пользователей из строки. Чтобы сбросить уровень изоляции до значения по умолчанию (фиксируемое чтение), [!INCLUDE[tsql](~/includes/tsql-md.md)] выполните инструкцию SET TRANSACTION Изоляция READ COMMITTED или вызов <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> , за которым <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>следует сразу же. Дополнительные сведения об SQL Server уровнях изоляции см. в разделе [уровни изоляции транзакций](/sql/t-sql/language-elements/transaction-isolation-levels).
  
 Дополнительные сведения об SQL Server транзакциях см. в разделе [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Если запрос возвращает большой объем данных и вызывает метод `BeginTransaction` <xref:System.Data.SqlClient.SqlException> , создается исключение, так как SQL Server не разрешает параллельные транзакции при использовании режима MARS. Чтобы избежать этой проблемы, перед открытием модулей чтения всегда связывайте транзакцию с командой, соединением или обоими операциями.  
  
   
  
## Examples  
 В следующем примере создаются <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlTransaction>и. В нем также показано <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, как использовать методы, и <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> .  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Параллельные транзакции не разрешены при использовании режима MARS.</exception>
        <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Транзакции (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Использование .NET Framework поставщика данных для SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction transactionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">Имя транзакции.</param>
        <summary>Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта команда сопоставляется с SQL Server реализацией BEGIN TRANSACTION.  
  
 Длина `transactionName` параметра не должна превышать 32 символов; в противном случае будет вызвано исключение.  
  
 Значение в `transactionName` параметре можно использовать в последующих <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> вызовах функций и <xref:System.Data.SqlClient.SqlTransaction.Save%2A> в `savePoint` параметре метода.  
  
 Необходимо явно зафиксировать или откатить транзакцию с помощью <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> метода <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> или. Чтобы убедиться, что [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] поставщик данных для модели управления транзакциями SQL Server работает правильно, Избегайте использования других моделей управления транзакциями, например, предоставляемых SQL Server.  
  
 Дополнительные сведения об SQL Server транзакциях см. в разделе [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Если запрос возвращает большой объем данных и вызывает метод `BeginTransaction` <xref:System.Data.SqlClient.SqlException> , создается исключение, так как SQL Server не разрешает параллельные транзакции при использовании режима MARS. Чтобы избежать этой проблемы, перед открытием модулей чтения всегда связывайте транзакцию с командой, соединением или обоими операциями.  
  
   
  
## Examples  
 В следующем примере создаются <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlTransaction>и. В нем также показано <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, как использовать методы, и <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> .  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Параллельные транзакции не разрешены при использовании режима MARS.</exception>
        <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Транзакции (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Использование .NET Framework поставщика данных для SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso, string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel, transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso, System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel * string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction (iso, transactionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="iso">Уровень изоляции, с которым должна выполняться транзакция.</param>
        <param name="transactionName">Имя транзакции.</param>
        <summary>Начинает транзакцию базы данных с указанным уровнем изоляции и именем транзакции.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта команда сопоставляется с SQL Server реализацией BEGIN TRANSACTION.  
  
 Значение в `transactionName` параметре можно использовать в последующих <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> вызовах функций и <xref:System.Data.SqlClient.SqlTransaction.Save%2A> в `savePoint` параметре метода.  
  
 Необходимо явно зафиксировать или откатить транзакцию с помощью <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> метода <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> или. Чтобы обеспечить правильную работу модели управления транзакциями SQL Server, Избегайте использования других моделей управления транзакциями, например, предоставляемых SQL Server.  
  
> [!NOTE]
>  После фиксации или отката транзакции уровень изоляции транзакции сохраняется для всех последующих команд, наследующихся в режиме автоматической фиксации (SQL Server умолчанию). Это может привести к непредвиденным результатам, таким как уровень изоляции ПОВТОРЯЕМого чтения, сохраняющий и блокирующий других пользователей из строки. Чтобы сбросить уровень изоляции до значения по умолчанию (фиксируемое чтение), [!INCLUDE[tsql](~/includes/tsql-md.md)] выполните инструкцию SET TRANSACTION Изоляция READ COMMITTED или вызов <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> , за которым <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>следует сразу же. Дополнительные сведения об SQL Server уровнях изоляции см. в разделе [уровни изоляции транзакций](/sql/t-sql/language-elements/transaction-isolation-levels).
  
 Дополнительные сведения об SQL Server транзакциях см. в разделе [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Если запрос возвращает большой объем данных и вызывает метод `BeginTransaction` <xref:System.Data.SqlClient.SqlException> , создается исключение, так как SQL Server не разрешает параллельные транзакции при использовании режима MARS. Чтобы избежать этой проблемы, перед открытием модулей чтения всегда связывайте транзакцию с командой, соединением или обоими операциями.  
  
   
  
## Examples  
 В следующем примере создаются <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlTransaction>и. В нем также показано <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, как использовать методы, и <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> .  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Параллельные транзакции не разрешены при использовании режима MARS.</exception>
        <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Транзакции (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Использование .NET Framework поставщика данных для SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string database);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string database) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (database As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ database);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="sqlConnection.ChangeDatabase database" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">Имя базы данных, предназначенной для использования вместо текущей базы данных.</param>
        <summary>Осуществляет смену текущей базы данных для открытого соединения <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение, указываемое в `database` параметре, должно быть допустимым именем базы данных. `database` Параметр не может содержать значение null, пустую строку или строку только с пустыми символами.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и отображаются некоторые из его свойств только для чтения.  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Недопустимое имя базы данных.</exception>
        <exception cref="T:System.InvalidOperationException">Соединение не открыто.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Невозможно изменить базу данных.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangePassword">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Изменяет пароль SQL Server.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, newPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * string -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="newPassword" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">Строка подключения, содержащая достаточно информации для подключения к требуемому серверу. В строке подключения должны быть заданы идентификатор пользователя и его текущий пароль.</param>
        <param name="newPassword">Новый пароль. Новый пароль должен соответствовать установленной на сервере политике безопасности паролей, включая минимальную длину, требования к использованию определенных знаков и т. д.</param>
        <summary>Заменяет пароль SQL Server для пользователя, указанного в строке подключения, заданным новым паролем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании SQL Server в Windows Server разработчики могут воспользоваться преимуществами функций, позволяющих клиентскому приложению указать текущий и новый пароль для изменения существующего пароля. Приложения могут реализовывать такие функции, как запрос нового пароля при первом входе в систему, если срок действия старого имени входа истек, и эта операция может завершиться без вмешательства администратора.  
  
 Метод изменяет SQL Server пароль пользователя, указанного в указанном `connectionString` параметре, на значение, указанное в `newPassword` параметре. <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A> Если строка подключения включает параметр для встроенной безопасности (то есть "Integrated Security = true" или эквивалентный), создается исключение.  
  
 Чтобы определить, что срок действия пароля истек, вызов <xref:System.Data.SqlClient.SqlConnection.Open%2A> метода <xref:System.Data.SqlClient.SqlException>вызывает метод. Чтобы указать, что пароль, содержащийся в строке подключения, должен быть сброшен, <xref:System.Data.SqlClient.SqlException.Number%2A> свойство для исключения содержит значение состояния 18487 или 18488. Первое значение (18487) указывает, что срок действия пароля истек, а второй (18488) указывает, что пароль необходимо сбросить перед входом в систему.  
  
 Этот метод открывает собственное подключение к серверу, запрашивает изменение пароля и закрывает соединение сразу после его завершения. Это соединение не извлекается из пула подключений SQL Server и не возвращается в него.  
  
   
  
## Examples  
 Ниже приведен простой пример изменения пароля.  
  
```csharp
class Program {  
   static void Main(string[] args) {  
      System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password");  
   }  
}  
  
```  
  
```vb
Module Module1  
    Sub Main()  
System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password")  
    End Sub  
End Module  
  
```  
  
 В следующем консольном приложении показаны проблемы, связанные с изменением пароля пользователя, так как истек срок действия текущего пароля.  
  
 [!code-csharp[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/CS/source.cs#1)]
 [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Строка подключения содержит параметр, позволяющий использовать встроенную систему безопасности.  
  
Или 
Длина параметра <paramref name="newPassword" /> превышает 128 символов.</exception>
        <exception cref="T:System.ArgumentNullException">Либо параметр <paramref name="connectionString" />, либо <paramref name="newPassword" /> имеет значение NULL.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Строки подключения (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Использование .NET Framework поставщика данных для SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newPassword) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newPassword As SecureString)" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newPassword)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-3.0" />
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newSecurePassword) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newSecurePassword As SecureString)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newSecurePassword);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newSecurePassword)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" FrameworkAlternate="netcore-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="newPassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="newSecurePassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="connectionString">Строка подключения, содержащая достаточно информации для подключения к серверу. Строка подключения не должна использовать любое из следующих ключевых слов строки подключения: <see langword="Integrated Security = true" />, <see langword="UserId" />, <see langword="Password" /> или <see langword="ContextConnection = true" />.</param>
        <param name="credential">Объект <see cref="T:System.Data.SqlClient.SqlCredential" />.</param>
        <param name="newPassword">Новый пароль.<paramref name="newPassword" /> должен быть доступен только для чтения. Пароль должен также соответствовать установленной на сервере политике безопасности паролей, (например, минимальной длине и требованиям к использованию определенных символов).</param>
        <param name="newSecurePassword">To be added.</param>
        <summary>Изменяет пароль SQL Server для пользователя, указанного в объекте <see cref="T:System.Data.SqlClient.SqlCredential" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Строка подключения содержит любое сочетание <see langword="UserId" />, <see langword="Password" /> и <see langword="Integrated Security=true" />.

-или- 
Строка подключения содержит <see langword="Context Connection=true" />.  

- или -

Длина <paramref name="newSecurePassword" /> (или <paramref name="newPassword" />) больше 128 символов.

- или -

<paramref name="newSecurePassword" /> (или <paramref name="newPassword" />) доступен не только для чтения.

- или -

<paramref name="newSecurePassword" /> (или <paramref name="newPassword" />) является пустой строкой.</exception>
        <exception cref="T:System.ArgumentNullException">Один из параметров (<paramref name="connectionString" />, <paramref name="credential" /> или <paramref name="newSecurePassword" />) имеет значение NULL.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberSignature Language="F#" Value="static member ClearAllPools : unit -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearAllPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Очищает пул подключений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A>Сбрасывает или очищает пул соединений. Если во время вызова используются соединения, они помечаются соответствующим образом и будут удалены (вместо возврата в пул) при <xref:System.Data.SqlClient.SqlConnection.Close%2A> вызове для них.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member ClearPool : System.Data.SqlClient.SqlConnection -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearPool connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connection">Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, которое требуется удалить из пула.</param>
        <summary>Очищает пул подключений, связанный с заданным подключением.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClearPool%2A>Очищает пул соединений, связанный с `connection`. Если в момент вызова используются `connection` дополнительные соединения, связанные с, они помечаются соответствующим образом и отбрасываются (вместо возврата в пул) при <xref:System.Data.SqlClient.SqlConnection.Close%2A> вызове для них.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientConnectionId : Guid" Usage="System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентификатор соединения последней попытки подключения, независимо от того, успешно ли выполнена попытка или завершилась ошибкой.</summary>
        <value>Идентификатор соединения последней попытки соединения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A>работает независимо от версии сервера, к которому вы подключаетесь, но журналы расширенных событий и записи об ошибках кольцевого буфера подключения не будут присутствовать в [!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)] и более ранних версиях.  
  
 Идентификатор подключения можно найти в журнале расширенных событий, чтобы определить, не была ли ошибка выполнена на сервере, если включено расширенное событие для регистрации идентификатора подключения. Идентификатор подключения можно также указать в кольцевом буфере подключения ([Устранение неполадок подключения в SQL Server 2008 с помощью кольцевого буфера подключения](https://go.microsoft.com/fwlink/?LinkId=207752)) для некоторых ошибок подключения. Если идентификатор соединения отсутствует в кольцевом буфере соединения, можно предположить сетевую ошибку.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="sqlConnection.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает соединение с базой данных. Рекомендуется использовать этот метод для закрытия любого открытого подключения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.Close%2A> Метод выполняет откат всех ожидающих транзакций. Затем он освобождает подключение к пулу подключений или закрывает подключение, если пул соединений отключен.  
  
> [!NOTE]
>  Отложенные транзакции, [!INCLUDE[tsql](~/includes/tsql-md.md)] запущенные с помощью или <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> , автоматически откатываются при сбросе соединения, если включено использование пулов соединений. Если пул соединений отключен, то после `SqlConnection.Close` вызова транзакции выполняется ее откат. Транзакции, запущенные через <xref:System.Transactions> , контролируются `System.Transactions` инфраструктурой `SqlConnection.Close`и не затрагиваются.  
  
 Приложение может вызывать <xref:System.Data.SqlClient.SqlConnection.Close%2A> более одного раза. Исключение не создается.  
  
 <xref:System.Data.SqlClient.SqlConnection> Если выходит из области, оно не будет закрыто. Поэтому необходимо явно закрыть соединение, вызвав `Close` или. `Dispose` `Close`функции `Dispose` и функционально эквивалентны. Если для `Pooling` `true` параметра пулы соединений задано значение или `yes`, то базовое соединение возвращается в пул соединений. С другой стороны, если `Pooling` параметр имеет `false` значение или `no`, то базовое соединение с сервером закрыто.  
  
> [!NOTE]
>  События входа в систему и выхода из системы не вызываются на сервере при выборке подключения из пула подключений и при возврате его в пул подключений, поскольку при возврате в пул подключений подключение фактически не закрывается. Дополнительные сведения см. в разделе [Пулы подключений SQL Server (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
> [!CAUTION]
>  Не вызывайте `Close` или `Dispose` для соединения, DataReader или любого `Finalize` другого управляемого объекта в методе класса. В методе завершения следует освобождать только неуправляемые ресурсы, непосредственно принадлежащие классу. Если класс не владеет какими-либо неуправляемыми ресурсами, не включайте в его определение метод `Finalize`. Дополнительные сведения см. в разделе [Сборка мусора](~/docs/standard/garbage-collection/index.md).  
  
   
  
## Examples  
 Следующий пример создает <xref:System.Data.SqlClient.SqlConnection>, открывает его, отображает некоторые из его свойств. Соединение автоматически закрывается в конце `using` блока.  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">При открытии подключения произошла ошибка на уровне подключения.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionKeyCacheTtl">
      <MemberSignature Language="C#" Value="public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionKeyCacheTtl As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan ColumnEncryptionKeyCacheTtl { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionKeyCacheTtl : TimeSpan with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает срок жизни для записей ключей шифрования столбцов в кэше ключей шифрования столбцов для функции <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>. Значение по умолчанию — 2 часа. 0 означает отсутствие кэширования.</summary>
        <value>Интервал времени.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionQueryMetadataCacheEnabled">
      <MemberSignature Language="C#" Value="public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionQueryMetadataCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ColumnEncryptionQueryMetadataCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionQueryMetadataCacheEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, которое указывает, включено ли кэширование метаданных запроса (True) или нет (False) для параметризованных запросов к базам данных с поддержкой функции <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>. Значение по умолчанию — true.</summary>
        <value>Возвращает значение True, если кэширование метаданных запроса включено; в противном случае — значение False. Значение True — это значение по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для параметризованных запросов SqlClient осуществляет обмен данными с SQL Server для метаданных параметров, чтобы определить, какой параметр необходимо зашифровать и как (какие ключи и алгоритмы следует использовать). Если приложение вызывает один и тот же запрос несколько раз, при каждом обращении к серверу выполняется каждый раз, что снижает производительность приложения.  
  
 Если **ColumnEncryptionQueryMetadataCacheEnabled** имеет значение true, то если один и тот же запрос вызывается несколько раз, то обмен данными с сервером будет выполняться только один раз. Кэш имеет ненастраиваемый параметр максимального размера, который имеет значение 2000 запросов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionTrustedMasterKeyPaths">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.IList&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.IList`1&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ColumnEncryptionTrustedMasterKeyPaths As IDictionary(Of String, IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ ColumnEncryptionTrustedMasterKeyPaths { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionTrustedMasterKeyPaths : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.IList&lt;string&gt;&gt;" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.IList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Позволяет задать список доверенных путей к разделам для сервера базы данных. Если при обработке запроса приложения драйвер получает путь к разделу, которого нет в списке, запрос завершится ошибкой. Это свойство обеспечивает дополнительную защиту от атак на систему безопасности, которые подразумевают предоставление скомпрометированным сервером SQL Server неверных путей к разделам, что может привести к утечке учетных данных хранилища ключей.</summary>
        <value>Список доверенных путей к главным ключам для шифрования столбца.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionString")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку, используемую для открытия базы данных SQL Server.</summary>
        <value>Строка подключения, включающая имя источника базы данных и другие параметры, необходимые для установки исходного подключения. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> Аналогичен строке подключения OLE DB, но не идентична. В отличие от OLE DB или ADO, возвращаемая строка подключения совпадает с пользовательской <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>, а не со сведениями о безопасности, если для `false` параметра сохранить сведения о безопасности задано значение (по умолчанию). Поставщик данных .NET Framework для SQL Server не сохраняет или не возвращает пароль в строке подключения, если только не задан параметр Persist Security Info to `true`.  

 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> Свойство можно использовать для подключения к базе данных. В следующем примере показана типичная строка подключения.  
  
```  
"Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)"  
```  
  
 Используйте New <xref:System.Data.SqlClient.SqlConnectionStringBuilder> для создания допустимых строк подключения во время выполнения. Дополнительные сведения см. в статье [Connection String Builders](~/docs/framework/data/adonet/connection-string-builders.md) (Построители строк подключения).  
  
 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> Свойство может быть задано только при закрытии соединения. Многие значения строки подключения имеют соответствующие свойства только для чтения. Если задана строка подключения, эти свойства обновляются, за исключением случаев обнаружения ошибки. В этом случае ни одно из свойств не обновляется. <xref:System.Data.SqlClient.SqlConnection>свойства возвращают только те параметры, которые содержатся в <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.  
  
 Для подключения к локальному компьютеру укажите "(local)" для сервера. Если имя сервера не указано, будет предпринята попытка подключения к экземпляру по умолчанию на локальном компьютере.  
  
 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> При сбросе для закрытого соединения сбрасываются все значения строк подключения (и связанные свойства), включая пароль. Например, если задать строку подключения, включающую "Database = AdventureWorks", а затем сбросить строку подключения к "Data Source = MyServer; Integrated Security = true", <xref:System.Data.SqlClient.SqlConnection.Database%2A> свойство больше не будет иметь значение "AdventureWorks".  
  
 Строка подключения анализируется сразу после установки. Если при синтаксическом анализе обнаружены ошибки в синтаксисе, создается исключение среды выполнения <xref:System.ArgumentException>, такое как. Другие ошибки можно найти только при попытке открыть подключение.  
  
 Базовый формат строки подключения включает ряд пар "ключевое слово-значение", разделенных точкой с запятой. Знак равенства (=) соединяет каждое ключевое слово и его значение. Чтобы включить значения, содержащие символы точки с запятой, одиночной кавычки или двойные кавычки, значение должно быть заключено в двойные кавычки. Если значение содержит и точку с запятой, и символ двойной кавычки, это значение можно заключить в одинарные кавычки. Одинарная кавычка также полезна, если значение начинается с символа двойной кавычки. И наоборот, если значение начинается с одиночной кавычки, можно использовать двойные кавычки. Если значение содержит как одинарные, так и двойные кавычки, то символ кавычки, используемый для заключения значения, должен быть удвоен каждый раз, когда он встречается в значении.  
  
 Чтобы включить в строковое значение предшествующие или конечные пробелы, значение должно быть заключено в одинарные кавычки или двойные кавычки. Все начальные и конечные пробелы вокруг целых, логических или перечисляемых значений игнорируются, даже если они заключены в кавычки. Однако пробелы в ключевом слове или значении строкового литерала сохраняются. Одинарные или двойные кавычки могут использоваться в строке соединения без использования разделителей (например, Data Source = Ми'сервер или Data Source = My "Server), если только символ-кавычка не является первым или последним символом в значении.  
  
 В ключевых словах регистр не учитывается.  
  
 В следующей таблице перечислены допустимые имена для значений ключевых слов в <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.  
  
|Ключевое слово|Значение по умолчанию|Описание|  
|-------------|-------------|-----------------|  
|Addr|Н/Д|Синоним **источника данных**.|  
|Адрес|Н/Д|Синоним **источника данных**.|  
|Приложение|Н/Д|Синоним **имени приложения**.|  
|Application Name|Н/Д|Имя приложения или "поставщик данных .NET SQLClient", если не указано имя приложения.<br /><br /> Имя приложения может содержать не более 128 символов.|  
|`ApplicationIntent`|`ReadWrite`|Объявляет тип рабочей нагрузки приложения при соединении с сервером. Возможными значениями являются `ReadOnly` и `ReadWrite`. Например:<br /><br /> `ApplicationIntent=ReadOnly`<br /><br /> Дополнительные сведения о поддержке SqlClient для групп доступности Always On см. в разделе [Поддержка SqlClient для высокого уровня доступности и аварийного восстановления](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).|  
|Asynchronous Processing<br /><br /> -или-<br /><br /> Async|IsFalse|Когда `true`, включает поддержку асинхронных операций. Допустимые значения: `true`, `false`, `yes` и `no`.<br /><br /> Это свойство не обрабатывается, начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)]. Дополнительные сведения о поддержке SqlClient для асинхронного программирования см. в разделе [Асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).|  
|AttachDBFilename<br /><br /> -или-<br /><br /> Расширенные свойства<br /><br /> - или -<br /><br /> Исходное имя файла|Н/Д|Имя файла базы данных источника, включая полный путь к подключаемой базе данных. AttachDBFilename поддерживается только для первичных файлов данных с расширением MDF.<br /><br /> Если значение ключа AttachDBFileName указано в строке подключения, база данных присоединяется и становится базой данных по умолчанию для соединения.<br /><br /> Если этот ключ не указан и база данных была ранее присоединена, база данных не будет присоединена. Ранее присоединенная база данных будет использоваться в качестве базы данных по умолчанию для соединения.<br /><br /> Если этот ключ указан вместе с ключом AttachDBFileName, то в качестве псевдонима будет использоваться значение этого ключа. Однако если имя уже используется в другой присоединенной базе данных, произойдет сбой соединения.<br /><br /> Путь может быть абсолютным или относительным с помощью строки подстановки DataDirectory. Если используется DataDirectory, файл базы данных должен находиться в подкаталоге каталога, на который указывает строка подстановки. **Примечание.**  Имена путей к удаленному серверу, HTTP и UNC не поддерживаются. <br /><br /> Имя базы данных должно быть указано с помощью ключевого слова "Database" (или одного из его псевдонимов), как показано ниже:<br /><br /> <code>"AttachDbFileName=&#124;DataDirectory&#124;\data\YourDB.mdf;integrated security=true;database=YourDatabase"</code><br /><br /> Если файл журнала находится в том же каталоге, что и файл данных, а при прикреплении первичного файла данных было использовано ключевое слово «database», будет выдана ошибка. В этом случае следует удалить файл журнала. После прикрепления базы данных будет автоматически создан новый файл журнала на основе физического пути.|  
|Проверка подлинности|Н/Д|Метод проверки подлинности [, используемый для подключения к базе данных SQL с помощью Azure Active Directory проверки](https://azure.microsoft.com/documentation/articles/sql-database-aad-authentication/#7-connect-to-your-database-by-using-azure-active-directory-identities)подлинности.<br /><br /> Допустимые значения:<br /><br /> Active Directory интегрированный Active Directory пароль, пароль SQL.|  
|Параметр шифрования столбца|Н/Д|Включает или отключает функцию [Always encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine?view=sql-server-2017) для подключения.|  
|Время ожидания соединения<br /><br /> - или -<br /><br /> Connection Timeout<br /><br /> -или-<br /><br /> Время ожидания|15|Продолжительность времени (в секундах) ожидания соединения с сервером перед прекращением попытки и генерацией ошибки.<br /><br /> Допустимые значения: больше или равно 0 и меньше или равно 2147483647.<br /><br /> При открытии подключения к базе данных SQL Azure установите время ожидания подключения равным 30 секундам.|  
|Время существования подключения<br /><br /> - или -<br /><br /> Load Balance Timeout|0|Если соединение возвращается в пул, время его создания сравнивается с текущим временем и соединение уничтожается, если этот промежуток времени (в секундах) превышает значение, заданное параметром `Connection Lifetime`. Эта возможность полезна в кластеризованных конфигурациях для принудительной балансировки нагрузки между выполняющимся сервером и сервером, только что переведенным в оперативный режим.<br /><br /> Нулевое значение (0) приводит к превышению максимального времени ожидания подключения в пуле.|  
|ConnectRetryCount|1|Управляет количеством попыток повторного подключения после того, как клиент выявляет ошибку неактивного подключения. Допустимые значения: от 0 до 255. Значение по умолчанию — 1. 0 — не пытаться повторно подключиться (отключить устойчивость подключения).<br /><br /> Дополнительные сведения о устойчивости бездействующих подключений см. в [статье Техническая статья — устойчивость бездействующего подключения](https://go.microsoft.com/fwlink/?LinkId=393996).|  
|ConnectRetryInterval|10|Указывает время между попытками повторного подключения (ConnectRetryCount). Допустимые значения: от 1 до 60 секунд (по умолчанию — 10), применяются после первой попытки повторного подключения. При обнаружении неработающего соединения клиент немедленно пытается подключиться повторно. Это первая повторная попытки подключения, которая возникает, только если ConnectRetryCount больше 0. Если первая попытка повторного подключения завершается неудачно, а ConnectRetryCount больше 1, клиент ожидает от ConnectRetryInterval попытку выполнить вторую и последующие попытки повторного подключения.<br /><br /> Дополнительные сведения о устойчивости бездействующих подключений см. в [статье Техническая статья — устойчивость бездействующего подключения](https://go.microsoft.com/fwlink/?LinkId=393996).|  
|Context Connection|IsFalse|`true`значение, если необходимо выполнить внутрипроцессный процесс подключения к SQL Server.|  
|Current Language<br /><br /> - или -<br /><br /> Язык|Н/Д|Задает язык, используемый для предупреждений или сообщений об ошибках сервера базы данных.<br /><br /> Имя языка может содержать не более 128 символов.|  
|источника данных<br /><br /> - или -<br /><br /> Сервер<br /><br /> -или-<br /><br /> Адрес<br /><br /> -или-<br /><br /> Addr<br /><br /> -или-<br /><br /> Сетевой адрес|Н/Д|Имя или сетевой адрес экземпляра SQL Server, к которому производится подключение. Номер порта можно указать после имени сервера:<br /><br /> `server=tcp:servername, portnumber`<br /><br /> При указании локального экземпляра всегда используйте (local). Чтобы принудительно применить протокол, добавьте один из следующих префиксов:<br /><br /> `np:(local),  tcp:(local), lpc:(local)`<br /><br /> Начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)], можно также подключиться к базе данных LocalDB следующим образом:<br /><br /> `server=(localdb)\\myInstance`<br /><br /> Дополнительные сведения о LocalDB см. в разделе [Поддержка SqlClient для LocalDB](~/docs/framework/data/adonet/sql/sqlclient-support-for-localdb.md).<br /><br /> **Источник данных** должен использовать формат TCP или именованные каналы.<br /><br /> Формат TCP выглядит следующим образом:<br /><br /> -TCP:\<имя узла >\\< имя экземпляра\><br />-TCP:\<имя узла >,\<номер порта TCP/IP ><br /><br /> Формат TCP должен начинаться с префикса "TCP:", за которым следует экземпляр базы данных, как указано в имени узла и имени экземпляра. Этот формат неприменим при подключении к базе данных SQL Azure. TCP выбирается автоматически для подключений к базе данных SQL Azure, если не указан протокол.<br /><br /> Имя узла должно быть указано одним из следующих способов:<br /><br /> -NetBIOSName<br />- IPv4Address<br />- IPv6Address<br /><br /> Имя экземпляра используется для разрешения на определенный номер порта TCP/IP, на котором размещен экземпляр базы данных. Кроме того, также разрешено указывать номер порта TCP/IP напрямую. Если имя экземпляра и номер порта отсутствуют, используется экземпляр базы данных по умолчанию.<br /><br /> Формат именованных каналов выглядит следующим образом:<br /><br /> -NP:\\\\< имя\>узла \пипе\\< имя канала\><br /><br /> Формат именованных каналов должен начинаться с префикса "NP:", за которым следует имя именованного канала.<br /><br /> Имя узла должно быть указано одним из следующих способов:<br /><br /> -NetBIOSName<br />- IPv4Address<br />- IPv6Address<br /><br /> Имя канала используется для указания экземпляра базы данных, к которому будет подключено приложение .NET Framework.<br /><br /> Если указано значение **сетевого** ключа, префиксы "TCP:" и "NP:" указывать не следует. **Примечание.**  Можно принудительно использовать TCP вместо общей памяти, представив префикс **TCP:** к имени сервера в строке подключения или с помощью **localhost**.|  
|Encrypt|IsFalse|Если значение равно, SQL Server использует SSL-шифрование для всех данных, передаваемых между клиентом и сервером, если на сервере установлен сертификат. `true` Допустимые значения: `true`, `false`, `yes` и `no`. Дополнительные сведения см. в разделе [синтаксис строки подключения](~/docs/framework/data/adonet/connection-string-syntax.md).<br /><br /> Начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)], если `TrustServerCertificate` параметр имеет значение `Encrypt` false и имеет значение true, имя сервера (или IP-адрес) в SQL Server сертификате SSL должно точно совпадать с именем сервера (или IP-адресом), указанным в строке подключения. В противном случае соединение не будет установлено. Сведения о поддержке сертификатов, тема которых начинается с подстановочного знака (*), см. в разделе [принятые подстановочные знаки, используемые сертификатами сервера для проверки подлинности сервера](https://support.microsoft.com/kb/258858).|  
|Enlist|'true'|`true`Указывает, что диспетчер подключений SQL Server автоматически закрепляет соединение в текущем контексте транзакции создания потока.|  
|Failover Partner|Н/Д|Имя сервера-партнера по обеспечению отработки отказа, на котором настроено зеркальное отображение базы данных.<br /><br /> Если значение этого параметра — "", должен присутствовать **Исходный каталог** , а его значение не должно быть "".<br /><br /> Имя сервера может содержать не более 128 символов.<br /><br /> Если указать партнера по обеспечению отработки отказа, но сервер-партнер отработки отказа не настроен для зеркального отображения базы данных, а сервер-источник (указанный с помощью ключевого слова Server) недоступен, произойдет сбой подключения.<br /><br /> Если указан партнер по обеспечению отработки отказа, а сервер-источник не настроен для зеркального отображения базы данных, то подключение к серверу-источнику (заданному с помощью ключевого слова Server) будет выполнено, если сервер-источник доступен.|  
|Initial Catalog<br /><br /> - или -<br /><br /> База данных|Н/Д|Имя базы данных.<br /><br /> Имя базы данных может содержать не более 128 символов.|  
|Integrated Security<br /><br /> - или -<br /><br /> Trusted_Connection|IsFalse|Если `false`значение равно, то в соединении указываются идентификатор пользователя и пароль. Если `true`задано значение, то для проверки подлинности используются учетные данные текущей учетной записи Windows.<br /><br /> Распознаваемые значения `true`: `false` `no`,, `true`, и `sspi` (настоятельно рекомендуется), что эквивалентно значению. `yes`<br /><br /> Если указаны идентификатор пользователя и пароль, а для параметра встроенная безопасность задано значение true, идентификатор пользователя и пароль будут пропущены, а также будет использоваться встроенная безопасность.<br /><br /> <xref:System.Data.SqlClient.SqlCredential>— более безопасный способ указания учетных данных для соединения, использующего проверку подлинности SQL Server (`Integrated Security=false`).|  
|Max Pool Size|100|Максимальное число подключений, разрешенных в пуле.<br /><br /> Допустимые значения: больше или равно 1. Значения, размер которых меньше **минимального размера пула** , вызывают ошибку.|  
|Min Pool Size|0|Минимальное число подключений, разрешенных в пуле.<br /><br /> Допустимые значения больше или равны 0. Ноль (0) в этом поле означает, что минимальное число подключений изначально не открыто.<br /><br /> Значения, превышающие **максимальный размер пула** , вызывают ошибку.|  
|MultipleActiveResultSets|IsFalse|Когда `true`приложение может поддерживать несколько активных результирующих наборов (MARS). Когда `false`приложение должно обрабатывать или отменять все результирующие наборы из одного пакета, прежде чем он сможет выполнить любой другой пакет в этом соединении.<br /><br /> Распознаваемые значения `true` : `false`и.<br /><br /> Дополнительные сведения см. в разделе [Несколько активных результирующих наборов (MARS)](~/docs/framework/data/adonet/sql/multiple-active-result-sets-mars.md).|  
|`MultiSubnetFailover`|false|Всегда указывайте `multiSubnetFailover=True` при подключении к прослушивателю группы доступности для SQL Server 2012 (или более поздней версии) группы доступности или экземпляра отказоустойчивого кластера SQL Server 2012 (или более поздней версии). `multiSubnetFailover=True`настраивает SqlClient для ускоренного обнаружения активного сервера (в настоящее время) и подключения к нему. Возможные значения: `Yes` and `No`, `True` and `False` или и`1` . `0` Например:<br /><br /> `MultiSubnetFailover=True`<br /><br /> Значение по умолчанию — `False`. Дополнительные сведения о поддержке SqlClient для Always On групп доступности см. в статье [Поддержка SqlClient для обеспечения высокого уровня доступности и аварийного восстановления](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).|  
|Network Library<br /><br /> -или-<br /><br /> Сеть<br /><br /> - или -<br /><br /> Учитываем|Н/Д|Сетевая библиотека, используемая для установления соединения с экземпляром SQL Server. Допустимые значения:<br /><br /> dbnmpntw (именованные каналы)<br /><br /> dbmsrpcn (многопротоколный, Windows RPC)<br /><br /> dbmsadsn (Apple говорите)<br /><br /> dbmsgnet (VIA)<br /><br /> dbmslpcn (общая память)<br /><br /> dbmsspxn (IPX/SPX)<br /><br /> dbmssocn (TCP/IP)<br /><br /> Дбмсвинн (Banyan Vines)<br /><br /> Соответствующая сетевая библиотека DLL должна быть установлена на системе, с которой устанавливается соединение. Если сеть не указана и используется локальный сервер (например, "." или "(local)"), используется общая память. В этом примере сетевой библиотекой является Win32 Winsock TCP/IP (dbmssocn), а портом соединения — 1433.<br /><br /> `Network Library=dbmssocn;Data Source=000.000.000.000,1433;`|  
|Packet Size|8000|Размер (в байтах) сетевых пакетов, используемых для связи с экземпляром SQL Server.<br /><br /> Размер пакета может быть больше или равен 512 и меньше или равен 32768.|  
|Пароль<br /><br /> - или -<br /><br /> PWD|Н/Д|Пароль для входа в учетную запись SQL Server. Не рекомендуется. Чтобы обеспечить высокий уровень безопасности, настоятельно рекомендуется использовать `Integrated Security` вместо него ключевое слово или. `Trusted_Connection` <xref:System.Data.SqlClient.SqlCredential>— более безопасный способ указания учетных данных для соединения, использующего проверку подлинности SQL Server.<br /><br /> Пароль должен содержать не более 128 символов.|  
|Persist Security Info<br /><br /> - или -<br /><br /> персистсекуритинфо|IsFalse|Если задано `false` значение `no` или (настоятельно рекомендуется), конфиденциальная информация, например пароль, не возвращается как часть соединения, если соединение открыто или когда-либо находилось в открытом состоянии. При сбросе строки подключения сбрасываются все значения строк подключения, включая пароль. Допустимые значения: `true`, `false`, `yes` и `no`.|  
|PoolBlockingPeriod|Авто|Задает поведение периода блокировки для пула соединений. Дополнительные <xref:System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod> сведения см. в свойстве.|  
|Pooling|'true'|Если для этого параметра задано значение true, все вновь созданные соединения будут добавлены в пул при закрытии приложением. При следующей попытке открыть то же подключение это соединение будет выведено из пула.<br /><br /> Соединения считаются одинаковыми, если они имеют одинаковую строку подключения. Разные соединения имеют разные строки подключения.<br /><br /> Значение этого параметра может быть "true", "false", "Yes" или "No".|  
|Replication|IsFalse|`true`значение, если репликация поддерживается с помощью соединения.|  
|Transaction Binding|Implicit Unbind|Управляет связью соединения с прикрепленной `System.Transactions` транзакцией.<br /><br /> Доступны следующие значения:<br /><br /> `Transaction Binding=Implicit Unbind;`<br /><br /> `Transaction Binding=Explicit Unbind;`<br /><br /> Неявная Отмена привязки приводит к отключению соединения от транзакции по ее окончании. После отсоединения дополнительные запросы к соединению выполняются в режиме автофиксации. Свойство `System.Transactions.Transaction.Current` не проверяется при выполнении запросов в то время, когда транзакция активна. После завершения транзакции дополнительные запросы выполняются в режиме автофиксации.<br /><br /> Если система завершает транзакцию (в области блока using) до завершения последней команды, она выдает исключение <xref:System.InvalidOperationException>.<br /><br /> Явная Отмена привязки приводит к тому, что соединение остается прикрепленным к транзакции, пока соединение не будет закрыто или не будет вызван явный `SqlConnection.TransactionEnlist(null)` вызов. Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], изменение неявной отмены привязки делает явную отмену привязки устаревшим. Исключение `InvalidOperationException` выдается, если свойство `Transaction.Current` не является прикрепленной транзакцией или если прикрепленная транзакция не активна.|  
|TransparentNetworkIPResolution|См. описание.|Если этому ключу присвоено значение `true`, приложение должно получить все IP-адреса для определенной записи DNS, а затем попытаться подключиться по первому адресу в списке. Если подключение не устанавливается в течение 0,5 секунды, приложение попытается параллельно подключиться по другим адресам. При получении первого ответа приложение устанавливает подключение по соответствующему IP-адресу.<br /><br /> Если ключ имеет `true`значение, `TransparentNetworkIPResolution` то параметр игнорируется. `MultiSubnetFailover`<br /><br /> Если ключ задан, `TransparentNetworkIPResolution` игнорируется. `Failover Partner`<br /><br /> Значение этого ключа должно `true`быть, `false`, `yes`или `no`.<br /><br /> Значение `yes` обрабатывается так же, как и `true`значение.<br /><br /> Значение `no` обрабатывается так же, как и `false`значение.<br /><br /> Ниже приведены значения по умолчанию.<br /><br /> <ul><li>`false`When<br /><br /> <ul><li>Подключение к базе данных SQL Azure, в которой заканчивается источник данных:<br /><br /> <ul><li>.database.chinacloudapi.cn</li><li>.database.usgovcloudapi.net</li><li>.database.cloudapi.de</li><li>.database.windows.net</li></ul></li><li>`Authentication`— "Active Directory Password" или "Active Directory Integrated"</li></ul></li><li>В остальных случаях — `true`.</li></ul>|  
|TrustServerCertificate|IsFalse|Если задано `true`значение, SSL используется для шифрования канала при обходе прохода по цепочке сертификатов для проверки доверия. Если TrustServerCertificate имеет значение `true` и для параметра Encrypt задано `false`значение, канал не шифруется. Допустимые значения: `true`, `false`, `yes` и `no`. Дополнительные сведения см. в разделе [синтаксис строки подключения](~/docs/framework/data/adonet/connection-string-syntax.md).|  
|Версия системы типов|Н/Д|Строковое значение, указывающее систему типов, которую должен иметь приложение. Функции, доступные клиентскому приложению, зависят от версии SQL Server и уровня совместимости базы данных. Явное указание системы типов версии СУБД, для которой было написано клиентское приложение, позволяет избежать потенциальных проблем, которые могут привести к сбою приложения при использовании другой версии SQL Server. **Примечание.**  Версию системы типов нельзя задать для внутрипроцессного выполнения кода среды CLR на сервере SQL Server. Дополнительные сведения см. в разделе [SQL Server интеграция](~/docs/framework/data/adonet/sql/sql-server-common-language-runtime-integration.md)со средой CLR. <br /><br /> Доступны следующие значения:<br /><br /> `Type System Version=SQL Server 2012;`<br /><br /> `Type System Version=SQL Server 2008;`<br /><br /> `Type System Version=SQL Server 2005;`<br /><br /> `Type System Version=Latest;`<br /><br /> `Type System Version=SQL Server 2012;`Указывает, что приложению потребуется версия 11.0.0.0 Microsoft. SqlServer. types. dll. Для других `Type System Version` параметров потребуется версия 10.0.0.0 Microsoft. SqlServer. types. dll.<br /><br /> `Latest`является устаревшим и не должен использоваться. `Latest` равно `Type System Version=SQL Server 2008;`.|  
|User ID<br /><br /> -или-<br /><br /> ТАКОЙ<br /><br /> - или -|Н/Д|Учетная запись входа SQL Server. Не рекомендуется. Для обеспечения высокого уровня безопасности настоятельно рекомендуется использовать `Integrated Security` вместо них ключевые слова или. `Trusted_Connection` <xref:System.Data.SqlClient.SqlCredential>— более безопасный способ указания учетных данных для соединения, использующего проверку подлинности SQL Server.<br /><br /> Идентификатор пользователя не должен превышать 128 символов.|  
|User Instance|IsFalse|Значение, указывающее, следует ли перенаправлять соединение из экземпляра SQL Server Express по умолчанию в экземпляр, инициированный средой выполнения под учетной записью вызывающего.|  
|Workstation ID<br /><br /> - или -<br /><br /> WSID|Имя локального компьютера|Имя рабочей станции, соединяющейся с SQL Server.<br /><br /> Идентификатор должен содержать не более 128 символов.|  
  
 Следующий список содержит допустимые имена для значений пула соединений в <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>. Дополнительные сведения см. в разделе [Пулы подключений SQL Server (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
-   Время существования подключения (или время ожидания балансировки нагрузки)  
  
-   Enlist  
  
-   Max Pool Size  
  
-   Min Pool Size  
  
-   Pooling  
  
 При задании ключевых слов или значений пулов соединений, требующих логического значения, можно использовать "Yes" вместо "true" и "No" вместо "false". Целочисленные значения представлены в виде строк.  

> [!NOTE]
>  Поставщик данных .NET Framework для SQL Server использует собственный протокол для взаимодействия с SQL Server. Поэтому он не поддерживает использование имени источника данных ODBC (DSN) при подключении к SQL Server, так как не добавляет уровень ODBC.  
  
> [!NOTE]
>  Файлы универсальной связи данных (UDL) не поддерживаются поставщиком данных .NET Framework для SQL Server.  
  
> [!CAUTION]
>  В этом выпуске приложение должно соблюдать осторожность при создании строки подключения на основе вводимых пользователем данных (например, при получении сведений об ИДЕНТИФИКАТОРе пользователя и пароле из диалогового окна и добавлении их в строку подключения). Приложение должно убедиться, что пользователь не может внедрять в эти значения дополнительные параметры строки подключения (например, вводить пароль в виде "валидпассворд; Database = сомедб" при попытке присоединения к другой базе данных). Если необходимо создать строки подключения на основе вводимых пользователем данных, используйте новый <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, который проверяет строку подключения и помогает устранить эту проблему. Дополнительные сведения см. в разделе [построители строк подключения](~/docs/framework/data/adonet/connection-string-builders.md) .  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> задается свойство перед открытием соединения.  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Передан недопустимый аргумент строки подключения, или не задан обязательный аргумент строки подключения.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/connection-strings.md">Строки подключения в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql-server-connection-pooling.md">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Управляемые поставщики ADO.NET и центр разработчиков DataSet</related>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Строки подключения в ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает время ожидания при попытке установки подключения, по истечении которого попытка подключения завершается и создается ошибка.</summary>
        <value>Время (в секундах), в течение которого должно производиться ожидание открытия соединения. Значение по умолчанию - 15 секунды.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно задать период времени, в течение которого соединение будет ожидать истечения времени ожидания, `Connect Timeout` используя `Connection Timeout` ключевые слова или в строке подключения. Значение 0 означает отсутствие ограничения, и его следует избегать в, <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> так как попытка подключения ожидает бесконечное время ожидания.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и задается значение `Connection Timeout` 30 секунд в строке подключения. Код открывает подключение и отображает <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> свойство в окне консоли.  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Заданное значение меньше 0.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Строки подключения в ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает и возвращает объект <see cref="T:System.Data.SqlClient.SqlCommand" />, связанный с <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <returns>Объект <see cref="T:System.Data.SqlClient.SqlCommand" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[SqlConnection_CreateCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqlconnection_createcommand/cs/source.cs#1)]
 [!code-vb[SqlConnection_CreateCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqlconnection_createcommand/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="sqlConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Property Credential As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credential { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credential : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Data.SqlClient.SqlCredential" /> для этого подключения.</summary>
        <value>Объект <see cref="T:System.Data.SqlClient.SqlCredential" /> для этого подключения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Persist Security Info = true`требуется для получения значения <xref:System.Data.SqlClient.SqlCredential> объекта с. <xref:System.Data.SqlClient.SqlConnection.Credential%2A>  
  
 Значение по умолчанию <xref:System.Data.SqlClient.SqlConnection.Credential%2A> равно null.  
  
 Будет <xref:System.InvalidOperationException> вызвано исключение:  
  
-   Если <xref:System.Data.SqlClient.SqlConnection.Credential%2A> для открытого соединения задано значение.  
  
-   Если <xref:System.Data.SqlClient.SqlConnection.Credential%2A> параметр имеет `Context Connection=true`значение.  
  
-   Если <xref:System.Data.SqlClient.SqlConnection.Credential%2A> параметр имеет `Integrated Security = true`значение.  
  
-   Если <xref:System.Data.SqlClient.SqlConnection.Credential%2A> задается, когда в строке `Password`соединения используется.  
  
-   Если <xref:System.Data.SqlClient.SqlConnection.Credential%2A> задается, когда в строке `UserID`соединения используется.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credentials { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.SqlClient.SqlConnection.Database" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_Database")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения.</summary>
        <value>Имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.Database%2A> Свойство обновляется динамически. При изменении текущей базы данных с помощью [!INCLUDE[tsql](~/includes/tsql-md.md)] инструкции <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> или метода отправляется информационное сообщение, а свойство обновляется автоматически.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и отображаются некоторые из его свойств только для чтения.  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Команды и параметры</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_DataSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя экземпляра SQL Server, к которому осуществляется подключение.</summary>
        <value>Имя экземпляра SQL Server, к которому производится подключение. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Свойство возвращает `null` значение, если строка подключения для <xref:System.Data.SqlClient.SqlConnection> имеет значение "context connection = true". <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и отображаются некоторые из его свойств только для чтения.  
  
 [!code-csharp[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="sqlConnection.EnlistDistributedTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="transaction">Ссылка на существующий объект <see cref="T:System.EnterpriseServices.ITransaction" />, к которому выполняется присоединение.</param>
        <summary>Выполняет присоединение указанной транзакции как распределенной транзакции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для прикрепления к <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> распределенной транзакции можно использовать метод. Так как он прикрепляет соединение в <xref:System.Transactions.Transaction> экземпляре, **енлисттрансактион** использует <xref:System.Transactions> возможности, доступные в пространстве имен для управления распределенными транзакциями, что делает ее предпочтительной  **Енлистдистрибутедтрансактион** для этой цели. Дополнительные сведения см. в разделе [распределенные транзакции](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 Можно продолжить прикрепить к существующей распределенной транзакции с помощью метода **енлистдистрибутедтрансактион** , если автоматическое прикрепление отключено. Прикрепление в существующей распределенной транзакции гарантирует, что при фиксации или откате транзакции изменения, внесенные кодом в источнике данных, также фиксируются или откатываются.  
  
 `EnlistDistributedTransaction`Возвращает исключение, <xref:System.Data.SqlClient.SqlConnection> если уже запустил транзакцию с помощью <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>. Однако если транзакция является локальной транзакцией, запущенной в источнике данных (например, путем явного исполнения инструкции BEGIN TRANSACTION с помощью <xref:System.Data.SqlClient.SqlCommand> объекта), **енлистдистрибутедтрансактион** откатывает локальную транзакцию и прикрепляет существующую распределенную транзакцию в соответствии с запросом. Вы не получаете уведомление о том, что выполнен откат локальной транзакции и отвечаете за управление локальными транзакциями, не запущенными <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>с помощью.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Транзакции (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="sqlConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="transaction">Ссылка на существующий объект <see cref="T:System.Transactions.Transaction" />, к которому выполняется присоединение.</param>
        <summary>Выполняет присоединение указанной транзакции как распределенной транзакции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для прикрепления к <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> распределенной транзакции можно использовать метод. Так как он прикрепляет соединение в <xref:System.Transactions.Transaction> экземпляре, **енлисттрансактион** использует <xref:System.Transactions> возможности, доступные в пространстве имен для управления распределенными транзакциями, что делает ее предпочтительной  **Енлистдистрибутедтрансактион**, использующий объект **System. EnterpriseServices. ITransaction** . Он также имеет немного другую семантику: после явного прикрепления соединения к транзакции ее нельзя открепить или прикрепить к другой транзакции, пока не завершится первая транзакция. Дополнительные сведения о распределенных транзакциях см. в разделе [распределенные транзакции](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Транзакции (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FireInfoMessageEventOnUserErrors">
      <MemberSignature Language="C#" Value="public bool FireInfoMessageEventOnUserErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property FireInfoMessageEventOnUserErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FireInfoMessageEventOnUserErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FireInfoMessageEventOnUserErrors : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает свойство <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />.</summary>
        <value>Значение <see langword="true" />, если свойство <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> задано. В противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если задано <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> значение `true`, ошибки, которые ранее обрабатывались как исключения, теперь <xref:System.Data.SqlClient.SqlConnection.InfoMessage> обрабатываются как события. Все события срабатывают немедленно и обрабатываются обработчиком событий. Если параметр <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> имеет `false`значение, то <xref:System.Data.SqlClient.SqlConnection.InfoMessage> события обрабатываются в конце процедуры.  
  
> [!NOTE]
>  Ошибка с уровнем серьезности 17 или выше, которая заставляет сервер прерывать обработку команды, должна обрабатываться как исключение. В этом случае исключение формируется независимо от того, как обрабатывается ошибка в событии <xref:System.Data.SqlClient.SqlConnection.InfoMessage>.  
  
 Дополнительные сведения о работе с событиями см. в разделе [события подключения](~/docs/framework/data/adonet/connection-events.md). Дополнительные сведения об ошибках, создаваемых ядром SQL Server, см. в разделе [ядро СУБД Errors](/sql/relational-databases/errors-events/database-engine-events-and-errors).
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5a29de74-acfc-4134-8616-829dd7ce0710">События подключения</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает сведения схемы для источника данных этого объекта <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При попытке получить сведения о схеме для нескольких версий хранимых процедур возвращается схема только для последней версии.
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Получение сведений о схеме из базы данных</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает сведения схемы для источника данных этого объекта <see cref="T:System.Data.SqlClient.SqlConnection" />. Дополнительные сведения о схеме см. в разделе [Коллекции схемы SQL Server](~/docs/framework/data/adonet/sql-server-schema-collections.md).</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Получение сведений о схеме из базы данных</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
        <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.SqlClient.SqlConnection" />, используя указанную строку в качестве имени схемы.</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Может потребоваться информация о схеме базы данных, таблиц или столбцов. Этот пример:  
  
-   Использует GetSchema для получения сведений о схеме.  
  
-   Используйте ограничения схемы для получения указанных сведений.  
  
-   Возвращает сведения о схеме базы данных, таблиц и некоторых столбцов.  
  
 Перед запуском образца необходимо создать образец базы данных, используя следующую команду [!INCLUDE[tsql](~/includes/tsql-md.md)]:  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 [Получение сведений о схеме из базы данных](https://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2) содержит C# и Visual Basic версии этого примера кода в проекте Visual Studio.  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
      using (SqlConnection conn = new SqlConnection("Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;")) {  
         conn.Open();  
  
         // Get the Meta Data for Supported Schema Collections  
         DataTable metaDataTable = conn.GetSchema("MetaDataCollections");  
  
         Console.WriteLine("Meta Data for Supported Schema Collections:");  
         ShowDataTable(metaDataTable, 25);  
         Console.WriteLine();  
  
         // Get the schema information of Databases in your instance  
         DataTable databasesSchemaTable = conn.GetSchema("Databases");  
  
         Console.WriteLine("Schema Information of Databases:");  
         ShowDataTable(databasesSchemaTable, 25);  
         Console.WriteLine();  
  
         // First, get schema information of all the tables in current database;  
         DataTable allTablesSchemaTable = conn.GetSchema("Tables");  
  
         Console.WriteLine("Schema Information of All Tables:");  
         ShowDataTable(allTablesSchemaTable, 20);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Table Type to get   
         // the specified table(s).  
         // You can use four restrictions for Table, so you should create a 4 members array.  
         String[] tableRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Table Type.   
         // Now we specify the Table Name of the table what we want to get schema information.  
         tableRestrictions[2] = "Course";  
  
         DataTable courseTableSchemaTable = conn.GetSchema("Tables", tableRestrictions);  
  
         Console.WriteLine("Schema Information of Course Tables:");  
         ShowDataTable(courseTableSchemaTable, 20);  
         Console.WriteLine();  
  
         // First, get schema information of all the columns in current database.  
         DataTable allColumnsSchemaTable = conn.GetSchema("Columns");  
  
         Console.WriteLine("Schema Information of All Columns:");  
         ShowColumns(allColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).  
         // You can use four restrictions for Column, so you should create a 4 members array.  
         String[] columnRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         columnRestrictions[2] = "Course";  
         columnRestrictions[3] = "DepartmentID";  
  
         DataTable departmentIDSchemaTable = conn.GetSchema("Columns", columnRestrictions);  
  
         Console.WriteLine("Schema Information of DepartmentID Column in Course Table:");  
         ShowColumns(departmentIDSchemaTable);  
         Console.WriteLine();  
  
         // First, get schema information of all the IndexColumns in current database  
         DataTable allIndexColumnsSchemaTable = conn.GetSchema("IndexColumns");  
  
         Console.WriteLine("Schema Information of All IndexColumns:");  
         ShowIndexColumns(allIndexColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to   
         // get the specified column(s).  
         // You can use five restrictions for Column, so you should create a 5 members array.  
         String[] indexColumnsRestrictions = new String[5];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         indexColumnsRestrictions[2] = "Course";  
         indexColumnsRestrictions[4] = "CourseID";  
  
         DataTable courseIdIndexSchemaTable = conn.GetSchema("IndexColumns", indexColumnsRestrictions);  
  
         Console.WriteLine("Index Schema Information of CourseID Column in Course Table:");  
         ShowIndexColumns(courseIdIndexSchemaTable);  
         Console.WriteLine();  
      }  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   private static void ShowDataTable(DataTable table, Int32 length) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-" + length + "}", col.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         foreach (DataColumn col in table.Columns) {  
            if (col.DataType.Equals(typeof(DateTime)))  
               Console.Write("{0,-" + length + ":d}", row[col]);  
            else if (col.DataType.Equals(typeof(Decimal)))  
               Console.Write("{0,-" + length + ":C}", row[col]);  
            else  
               Console.Write("{0,-" + length + "}", row[col]);  
         }  
         Console.WriteLine();  
      }  
   }  
  
   private static void ShowDataTable(DataTable table) {  
      ShowDataTable(table, 14);  
   }  
  
   private static void ShowColumns(DataTable columnsTable) {  
      var selectedRows = from info in columnsTable.AsEnumerable()  
                         select new {  
                            TableCatalog = info["TABLE_CATALOG"],  
                            TableSchema = info["TABLE_SCHEMA"],  
                            TableName = info["TABLE_NAME"],  
                            ColumnName = info["COLUMN_NAME"],  
                            DataType = info["DATA_TYPE"]  
                         };  
  
      Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "TableCatalog", "TABLE_SCHEMA",  
          "TABLE_NAME", "COLUMN_NAME", "DATA_TYPE");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", row.TableCatalog,  
             row.TableSchema, row.TableName, row.ColumnName, row.DataType);  
      }  
   }  
  
   private static void ShowIndexColumns(DataTable indexColumnsTable) {  
      var selectedRows = from info in indexColumnsTable.AsEnumerable()  
                         select new {  
                            TableSchema = info["table_schema"],  
                            TableName = info["table_name"],  
                            ColumnName = info["column_name"],  
                            ConstraintSchema = info["constraint_schema"],  
                            ConstraintName = info["constraint_name"],  
                            KeyType = info["KeyType"]  
                         };  
  
      Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", "table_schema", "table_name", "column_name", "constraint_schema", "constraint_name", "KeyType");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", row.TableSchema,  
             row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" /> задается как значение NULL.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Получение сведений о схеме из базы данных</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="restrictionValues" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
        <param name="restrictionValues">Набор значений ограничений для запрошенной схемы.</param>
        <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.SqlClient.SqlConnection" />, используя указанную строку в качестве имени схемы и указанный массив строк для значений ограничений.</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр может предоставить n глубину значений, заданных в коллекции ограничений для определенной коллекции. ** `restrictionValues` Чтобы задать значения для заданного ограничения и не задавать значения других ограничений, необходимо установить предыдущие ограничения на `null` , а затем указать соответствующее значение в для ограничения, для которого необходимо задать значение.  
  
 Примером этого является коллекция Tables. Если коллекция "Tables" имеет три ограничения — "база данных", "владелец" и "имя таблицы", и вы хотите вернуть только таблицы, связанные с владельцем "Виктор", необходимо передать следующие значения: NULL, "Виктор". Если значение ограничения не передается, для этого ограничения используются значения по умолчанию. Это то же сопоставление `null`, что и передача, что отличается от передачи пустой строки для значения параметра. В этом случае пустая строка ("") считается значением указанного параметра.  
  
 Пример кода <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>, демонстрирующий, см. <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>в разделе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" /> задается как значение NULL.</exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.GetSchema" />
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Получение сведений о схеме из базы данных</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As SqlInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_InfoMessage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает, когда SQL Server возвращает предупреждение или информационное сообщение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Клиенты, которые хотят обрабатывать предупреждения или информационные сообщения, отправляемые сервером, должны создать <xref:System.Data.SqlClient.SqlInfoMessageEventHandler> делегат для прослушивания этого события.  
  
 Это <xref:System.Data.SqlClient.SqlConnection.InfoMessage> событие возникает, когда SQL Server возвращается сообщение с уровнем серьезности 10 или меньше. Сообщения с уровнем серьезности от 11 до 20 вызывают ошибку, и сообщения с уровнем серьезности более 20 приводят к закрытию соединения. Дополнительные сведения об SQL Server уровнях ошибок см. в разделе [ядро СУБД серьезность ошибок](/sql/relational-databases/errors-events/database-engine-error-severities).
  
 Дополнительные сведения и пример см. в разделе [события подключения](~/docs/framework/data/adonet/connection-events.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5a29de74-acfc-4134-8616-829dd7ce0710">Работа с событиями подключения</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnStateChange">
      <MemberSignature Language="C#" Value="protected override void OnStateChange (System.Data.StateChangeEventArgs stateChange);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStateChange(class System.Data.StateChangeEventArgs stateChange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OnStateChange(System.Data.StateChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStateChange (stateChange As StateChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStateChange(System::Data::StateChangeEventArgs ^ stateChange);" />
      <MemberSignature Language="F#" Value="override this.OnStateChange : System.Data.StateChangeEventArgs -&gt; unit" Usage="sqlConnection.OnStateChange stateChange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateChange" Type="System.Data.StateChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="stateChange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="sqlConnection.Open " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Открывает подключение к базе данных со значениями свойств, определяемыми объектом <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection> Отображает открытое соединение из пула подключений, если оно доступно. В противном случае он устанавливает новое соединение с экземпляром SQL Server.  
  
> [!NOTE]
>  Если объект <xref:System.Data.SqlClient.SqlConnection> выходит из области действия, он не закрывается. Поэтому необходимо явно закрыть соединение путем вызова <xref:System.Data.SqlClient.SqlConnection.Close%2A>.  
  
> [!NOTE]
>  Если указать номер порта, отличный от 1433, при попытке подключиться к экземпляру SQL Server и использовать протокол, отличный от TCP/IP, <xref:System.Data.SqlClient.SqlConnection.Open%2A> метод завершается ошибкой. Чтобы указать номер порта, отличный от 1433, включите в строку подключения значение "Server = MachineName, номер порта" и используйте протокол TCP/IP.  
  
> [!NOTE]
>  Поставщику данных .NET Framework для SQL Server требуется разрешение безопасности с параметром "допускает вызовы<xref:System.Security.Permissions.SecurityPermission> неуправляемых сборок" (с <xref:System.Security.Permissions.SecurityPermissionFlag> установленным значением `UnmanagedCode`) для открытия <xref:System.Data.SqlClient.SqlConnection> с включенной отладкой SQL.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection>, открывается и отображаются некоторые его свойства. Соединение автоматически закрывается в конце `using` блока.  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Невозможно открыть подключение без указания источника данных или сервера.  
  
или 
Подключение уже открыто.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">При открытии подключения произошла ошибка на уровне подключения. Если свойство <see cref="P:System.Data.SqlClient.SqlException.Number" /> содержит значение 18 487 или 18 488, это означает, что действие указанного пароля истекло или что пароль должен быть сброшен. Дополнительные сведения см. в описании метода <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /> .  
  
Тег <see langword="&lt;system.data.localdb&gt;" /> в файле app.config имеет недопустимые или неизвестные элементы.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">В разделе <see langword="&lt;localdbinstances&gt;" /> присутствуют две записи с одинаковым именем.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Строки подключения в ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OpenAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlConnection.OpenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Инструкция отмены.</param>
        <summary>Асинхронная версия <see cref="M:System.Data.SqlClient.SqlConnection.Open" />, которая открывает соединение с базой данных с параметрами свойства, указанными в строке <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />. Чтобы запросить отмену операции до истечения времени ожидания соединения, можно использовать токен отмены.  Исключения будут распространяться с помощью возвращаемой задачи. Если время ожидания соединения истекло без успешного подключения, возвращаемая задача будет помечена как сбойная с исключением. Реализация возвращает задачу без блокировки вызывающего потока как для соединений, помещенных в пул, так и соединений вне пула.</summary>
        <returns>Задача, представляющая асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После вызова <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>метод <xref:System.Data.SqlClient.SqlConnection.State%2A> должен возвращать <xref:System.Data.ConnectionState.Connecting> значение, <xref:System.Threading.Tasks.Task> пока не завершится возврат. Затем, если соединение прошло успешно, <xref:System.Data.SqlClient.SqlConnection.State%2A> должно возвращаться. <xref:System.Data.ConnectionState.Open> Если соединение не выполняется, <xref:System.Data.SqlClient.SqlConnection.State%2A> должно возвращаться <xref:System.Data.ConnectionState.Closed>значение.  
  
 Вызов метода <xref:System.Data.SqlClient.SqlConnection.Close%2A> предпримет попытку отменить или закрыть соответствующий <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> вызов.  
  
 Дополнительные сведения об асинхронном программировании в поставщике .NET Framework данных для SQL Server см. в разделе [Асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
  
 <see langword="Context Connection=true" /> задается в строке подключения.  
  
Подключение не было доступно из пула подключений до истечения времени ожидания подключения.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="PacketSize">
      <MemberSignature Language="C#" Value="public int PacketSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PacketSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PacketSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PacketSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PacketSize : int" Usage="System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_PacketSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает размер сетевых пакетов (в байтах), используемых при взаимодействии с экземпляром SQL Server.</summary>
        <value>Размер сетевых пакетов (в байтах). Значение по умолчанию — 8000.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если приложение выполняет операции массового копирования или отправляет или получает большое количество текстовых или графических данных, размер пакета, превышающий значение по умолчанию, может повысить эффективность, так как это приводит к меньшему числу операций чтения и записи в сети. Если приложение отправляет и получает небольшие объемы информации, можно задать размер пакета 512 байт (с использованием значения размера пакета в <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>), который достаточно для большинства операций по передаче данных. Для большинства приложений оптимальным является размер пакета по умолчанию.  
  
 <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A>может иметь значение в диапазоне от 512 до 32767 байт. Если значение выходит за пределы этого диапазона, создается исключение.  
  
 Установка значения по умолчанию, превышающего 8000, приведет к тому, что пакеты будут использовать многостраничный распределитель в экземпляре SQL Server вместо гораздо более эффективного распределителя SinglePage, что снижает общую масштабируемость SQL Server. Дополнительные сведения о том, как SQL Server использует память, см. в разделе [руководство по архитектуре управления памятью](/sql/relational-databases/memory-management-architecture-guide).
  
   
  
## Examples  
 В следующем примере создается объект <xref:System.Data.SqlClient.SqlConnection>, включающий в `Packet Size` себя присвоение значения 512 в строке подключения. Он отображает <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> свойства и <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> в окне консоли.  
  
 [!code-csharp[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterColumnEncryptionKeyStoreProviders">
      <MemberSignature Language="C#" Value="public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary&lt;string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterColumnEncryptionKeyStoreProviders(class System.Collections.Generic.IDictionary`2&lt;string, class System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterColumnEncryptionKeyStoreProviders (customProviders As IDictionary(Of String, SqlColumnEncryptionKeyStoreProvider))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterColumnEncryptionKeyStoreProviders(System::Collections::Generic::IDictionary&lt;System::String ^, System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider ^&gt; ^ customProviders);" />
      <MemberSignature Language="F#" Value="static member RegisterColumnEncryptionKeyStoreProviders : System.Collections.Generic.IDictionary&lt;string, System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders customProviders" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customProviders" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt;" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="customProviders">Настраиваемые поставщики</param>
        <summary>Регистрирует поставщиков хранилища ключей шифрования столбцов.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetStatistics">
      <MemberSignature Language="C#" Value="public void ResetStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ResetStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetStatistics ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetStatistics();" />
      <MemberSignature Language="F#" Value="member this.ResetStatistics : unit -&gt; unit" Usage="sqlConnection.ResetStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Если сбор статистики разрешен, все значения сбрасываются в нуль.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сбор статистики не включен и вызывается этот метод, ошибка не возникает.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Статистика поставщика для SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RetrieveStatistics">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary RetrieveStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary RetrieveStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Function RetrieveStatistics () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ RetrieveStatistics();" />
      <MemberSignature Language="F#" Value="member this.RetrieveStatistics : unit -&gt; System.Collections.IDictionary" Usage="sqlConnection.RetrieveStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию пар имя-значение статистических данных на момент вызова метода.</summary>
        <returns>Возвращает ссылку типа <see cref="T:System.Collections.IDictionary" /> элементов <see cref="T:System.Collections.DictionaryEntry" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове этого метода извлекаются значения в текущем момент времени. Если вы продолжите использовать подключение, значения будут неверными. Чтобы получить актуальные значения, необходимо повторно выполнить метод.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Статистика поставщика для SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ServerVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку, содержащую версию экземпляра SQL Server, к которому подключается клиент.</summary>
        <value>Версия экземпляра SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Версия имеет вид *# #. # #. # # # #*, где первые две цифры являются основной версией, следующие две цифры — дополнительный номер версии, а последние четыре цифры — версия выпуска. Строка имеет вид *основной. дополнительный. Build*, где major и minor — ровно две цифры, а сборка состоит ровно из четырех цифр.  
  
 <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> был вызван, когда возвращаемая задача не была завершена, и не было открыто соединение после вызова <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> отображается свойство.  
  
 [!code-csharp[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Соединение закрыто.  
  
 <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /> был вызван, когда возвращаемая задача не была завершена, и не было открыто соединение после вызова <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.SqlClient.SqlConnection.State" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_State")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Отображает состояние <see cref="T:System.Data.SqlClient.SqlConnection" /> во время последней сетевой операции, выполненной по подключению.</summary>
        <value>Перечисление <see cref="T:System.Data.ConnectionState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает перечисление, указывающее состояние <xref:System.Data.SqlClient.SqlConnection>. <xref:System.Data.ConnectionState> Закрытие и повторное открытие соединения приведет к обновлению значения <xref:System.Data.SqlClient.SqlConnection.State%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_StateChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает при изменении состояния подключения.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatisticsEnabled">
      <MemberSignature Language="C#" Value="public bool StatisticsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StatisticsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property StatisticsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StatisticsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StatisticsEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Когда задано значение <see langword="true" />, разрешает сбор статистических сведений для текущего подключения.</summary>
        <value>Возвращает значение <see langword="true" />, если сбор статистики разрешен. В противном случае возвращает значение <see langword="false" />. Тип <see langword="false" /> используется по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Включение сбора статистики имеет небольшое, но значительное воздействие на производительность и, следовательно, должно быть включено только при необходимости.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Статистика поставщика для SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Начинает транзакцию базы данных.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
После завершения транзакции необходимо явно зафиксировать или откатить транзакцию с помощью <xref:System.Data.IDbTransaction.Commit> метода или. <xref:System.Data.IDbTransaction.Rollback>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction (iso As IsolationLevel) As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel iso) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="iso">Одно из значений перечисления <see cref="T:System.Data.IsolationLevel" />.</param>
        <summary>Начинает транзакцию базы данных с указанным значением <see cref="T:System.Data.IsolationLevel" />.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
После завершения транзакции необходимо явно зафиксировать или откатить транзакцию с помощью <xref:System.Data.IDbTransaction.Commit> метода или. <xref:System.Data.IDbTransaction.Rollback>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает и возвращает объект Command, связанный с подключением.</summary>
        <returns>Объект Command, связанный с подключением.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый объект, являющийся копией текущего экземпляра.</summary>
        <returns>Новый объект, являющийся копией этого экземпляра.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.SqlClient.SqlConnection> приведен к типу интерфейса <xref:System.ICloneable>.  
  
 Этот элемент поддерживается только .NET Compact Framework.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WorkstationId">
      <MemberSignature Language="C#" Value="public string WorkstationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkstationId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkstationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkstationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkstationId : string" Usage="System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_WorkstationId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку, определяющую клиента базы данных.</summary>
        <value>Строка, определяющая клиента базы данных. Если не задана, то имя клиентского компьютера. Если ни одно из значений не определено, значением является пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка обычно содержит сетевое имя клиента. Свойство соответствует свойству строки `Workstation ID`соединения. <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A>  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> отображается свойство.  
  
 [!code-csharp[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>