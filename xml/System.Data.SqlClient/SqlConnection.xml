<Type Name="SqlConnection" FullName="System.Data.SqlClient.SqlConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e96fea078cabf5ca5fdf5fd76c48fb885e03a1c2" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65003873" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit DbConnection&#xA;    interface IDbConnection&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет подключение к базе данных SQL Server. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Data.SqlClient.SqlConnection> представляет уникальный сеанс с источником данных SQL Server. С системой базы данных клиент/сервер это эквивалентно сетевое подключение к серверу. <xref:System.Data.SqlClient.SqlConnection> используется совместно с <xref:System.Data.SqlClient.SqlDataAdapter> и <xref:System.Data.SqlClient.SqlCommand> для повышения производительности при подключении к базе данных Microsoft SQL Server. Для всех сторонних продуктов SQL Server и других источников данных, поддерживаемых в OLE DB, используйте <xref:System.Data.OleDb.OleDbConnection>.  
  
 При создании экземпляра <xref:System.Data.SqlClient.SqlConnection>, все свойства задаются их начальные значения. Список этих значений, см. в разделе <xref:System.Data.SqlClient.SqlConnection> конструктор.  
  
 См. в разделе <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> список ключевых слов в строке подключения.  
  
 Если <xref:System.Data.SqlClient.SqlConnection> выходит за границы области, он не будет закрыт. Таким образом, необходимо явно закрыть соединение, вызвав `Close` или `Dispose`. `Close` и `Dispose` функционально эквивалентны. Если пул соединений значение `Pooling` присваивается `true` или `yes`, Базовое соединение возвращается в пул соединения. С другой стороны Если `Pooling` присваивается `false` или `no`, базовый соединение с сервером будет фактически закрыт.  
  
> [!NOTE]
>  События входа в систему и выхода из системы не вызываются на сервере при выборке подключения из пула подключений и при возврате его в пул подключений, поскольку при возврате в пул подключений подключение фактически не закрывается. Дополнительные сведения см. в разделе [Пулы подключений SQL Server (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
 Чтобы убедиться, что закрытие подключения, откройте соединение внутри `using` заблокировать, как показано в следующем фрагменте кода. Это гарантирует, что соединение закрывается автоматически, когда код выходит из блока.  
  
```vb  
Using connection As New SqlConnection(connectionString)  
    connection.Open()  
    ' Do work here; connection closed on following line.  
End Using  
  
```  
  
```csharp  
using (SqlConnection connection = new SqlConnection(connectionString))  
    {  
        connection.Open();  
        // Do work here; connection closed on following line.  
    }  
```  
  
> [!NOTE]
>  Для развертывания высокопроизводительных приложений, необходимо использовать пул соединений. При использовании поставщика данных .NET Framework для SQL Server, у вас нет для включения пула подключений, так как поставщик управляет им автоматически, несмотря на то, что некоторые параметры можно изменить. Дополнительные сведения см. в разделе [Пулы подключений SQL Server (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
 Если <xref:System.Data.SqlClient.SqlException> создается путем вызова метода, выполняющего <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlConnection> остается открытым, если уровень серьезности 19 или меньшими. Когда уровень важности превышает 20, сервер обычно закрывает <xref:System.Data.SqlClient.SqlConnection>. Тем не менее, пользователь может опять открыть подключение и продолжить работу.  
  
 Приложение, которое создает экземпляр <xref:System.Data.SqlClient.SqlConnection> объект может потребовать все вызывающие стороны прямых и косвенных должны иметь разрешение на код, задав декларативную или принудительную безопасность требования. <xref:System.Data.SqlClient.SqlConnection> делает требования безопасности с помощью <xref:System.Data.SqlClient.SqlClientPermission> объекта. Пользователи могут проверить наличие достаточных разрешений для кода с помощью <xref:System.Data.SqlClient.SqlClientPermissionAttribute> объекта. Кроме того, пользователи и Администраторы могут использовать [Caspol.exe (средство политики безопасности доступа кода)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) для изменения политики безопасности на уровне компьютера, пользователя и предприятия. Дополнительные сведения см. в разделе [Безопасность в .NET](~/docs/standard/security/index.md). Пример, демонстрирующий, как использовать требования безопасности, см. в разделе [управления доступом для кода и ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  
  
 Дополнительные сведения об обработке предупреждений и информационных сообщений с сервера, см. в разделе [события подключения](~/docs/framework/data/adonet/connection-events.md). Дополнительные сведения об ошибках и сообщения об ошибках см. в разделе [события ядра базы данных и ошибки](/sql/relational-databases/errors-events/database-engine-events-and-errors).
  
> [!CAUTION]
>  Вы можете принудительно TCP вместо общей памяти. Это можно сделать с помощью префикса tcp: к имени сервера в соединении строки, или же можно использовать localhost.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlCommand> и <xref:System.Data.SqlClient.SqlConnection>. <xref:System.Data.SqlClient.SqlConnection> Открыто и задано как <xref:System.Data.SqlClient.SqlCommand.Connection%2A> для <xref:System.Data.SqlClient.SqlCommand>. Затем в примере вызывается <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. Чтобы выполнить это, <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> передается строка подключения и строку запроса, который является [!INCLUDE[tsql](~/includes/tsql-md.md)] инструкции INSERT. Соединение закрывается автоматически при выходе из этого блока.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании нового экземпляра объекта <xref:System.Data.SqlClient.SqlConnection> создания, чтения и записи свойствам присваиваются следующие начальные значения, если они заданы особым с помощью соответствующих ключевых слов в <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> свойство.  
  
|Свойства|Исходное значение|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|пустая строка (»»)|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|пустая строка (»»)|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|пустая строка (»»)|  
  
 Значение этих свойств можно изменить только с помощью <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> свойство. <xref:System.Data.SqlClient.SqlConnectionStringBuilder> Класс предоставляет функциональные возможности для создания и управления содержимым строки соединения.  
  
   
  
## Examples  
 Следующий пример создает и открывает <xref:System.Data.SqlClient.SqlConnection>.  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Подключение, которое используется для открытия базы данных SQL Server.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" /> после получения строки, содержащей строку соединения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании нового экземпляра объекта <xref:System.Data.SqlClient.SqlConnection> создания, чтения и записи свойствам присваиваются следующие начальные значения, если они заданы особым с помощью соответствующих ключевых слов в <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> свойство.  
  
|Свойства|Исходное значение|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|пустая строка (»»)|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|пустая строка (»»)|  
  
 Значение этих свойств можно изменить только с помощью <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> свойство. <xref:System.Data.SqlClient.SqlConnection> Класс предоставляет функциональные возможности для создания и управления содержимым строки соединения.  
  
   
  
## Examples  
 Следующий пример создает и открывает <xref:System.Data.SqlClient.SqlConnection>.  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Использование поставщика данных .NET Framework для SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential credential) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, credential As SqlCredential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential cred) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, cred As SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, credential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, cred)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cred" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">Строка подключения, которая не использует какое-либо из следующих ключевых слов строки подключения: <see langword="Integrated Security = true" />, <see langword="UserId" /> или <see langword="Password" />, или не использует <see langword="ContextConnection = true" />.</param>
        <param name="credential">Объект <see cref="T:System.Data.SqlClient.SqlCredential" />. Если <paramref name="credential" /> имеет значение NULL, то <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" /> функционально эквивалентен <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />.</param>
        <param name="cred">To be added.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" />, используя строку подключения, в которой не используется <see langword="Integrated Security = true" />, и объект <see cref="T:System.Data.SqlClient.SqlCredential" />, содержащий идентификатор пользователя и пароль.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public string AccessToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessToken As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessToken { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessToken : string with get, set" Usage="System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает токен доступа для подключения.</summary>
        <value>Токен доступа для подключения.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="sqlConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Начинает транзакцию базы данных.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Начинает транзакцию базы данных.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта команда сопоставляется в SQL Server метода BEGIN TRANSACTION.  
  
 Необходимо зафиксировать или откатить транзакцию с помощью <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> или <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> метод. Чтобы убедиться, что поставщику данных .NET Framework для модели управления транзакциями SQL Server работает правильно, избегайте использования других моделей управления транзакциями, таких как включенный в SQL Server.  
  
> [!NOTE]
>  Если уровень изоляции не указан, используется уровень изоляции по умолчанию. Для указания уровня изоляции с <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> метода, используйте перегрузку, принимающую `iso` параметра (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>). Уровня изоляции, установленного для транзакции сохраняется после завершения транзакции, и до подключения закрыт или удален. Установка уровня изоляции **моментального снимка** в базе данных, не поддерживающих уровень изоляции моментального снимка не выдает исключение. Транзакция будет выполнена с использованием уровня изоляции по умолчанию.  
  
> [!CAUTION]
>  Если транзакция начата, уровень 16 или выше ошибка возникает на сервере будет не выполнен откат транзакции до <xref:System.Data.SqlClient.SqlDataReader.Read%2A> вызывается метод. Исключение не создается **ExecuteReader**.  
  
> [!CAUTION]
>  Если запрос возвращает большой объем данных и вызывает метод `BeginTransaction`, <xref:System.Data.SqlClient.SqlException> возникает исключение, так как SQL Server не поддерживает параллельные транзакции, при использовании режима MARS. Чтобы избежать этой проблемы, всегда связывайте транзакцию с команды и подключение прежде, чем у потоков чтения должны быть открыты.  
  
 Дополнительные сведения о транзакциях SQL Server см. в разделе [транзакции (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и <xref:System.Data.SqlClient.SqlTransaction>. Также демонстрируется использование <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, и <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> методы.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Параллельные транзакции не разрешены при использовании режима MARS.</exception>
        <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Транзакции и параллельность</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction iso" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="iso">Уровень изоляции, с которым должна выполняться транзакция.</param>
        <summary>Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта команда сопоставляется в SQL Server метода BEGIN TRANSACTION.  
  
 Необходимо зафиксировать или откатить транзакцию с помощью <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> или <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> метод. Чтобы убедиться, что поставщику данных .NET Framework для модели управления транзакциями SQL Server работает правильно, избегайте использования других моделей управления транзакциями, таких как включенный в SQL Server.  
  
> [!NOTE]
> После фиксации или отката транзакции уровень изоляции транзакции сохраняется для всех последующих команд, которые находятся в режиме автоматической фиксации (по умолчанию SQL Server). Это может привести к непредвиденным результатам, например уровня изоляции REPEATABLE READ, сохранение и блокировки других пользователей за пределы строки. Чтобы сбросить уровень изоляции по умолчанию (READ COMMITTED), выполнение [!INCLUDE[tsql](~/includes/tsql-md.md)] НАБОР ТРАНЗАКЦИЙ ИЗОЛЯЦИИ УРОВНЯ READ COMMITTED инструкции или вызов <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> за следует сразу же <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>. Дополнительные сведения об уровнях изоляции SQL Server, см. в разделе [уровни изоляции транзакций](/sql/t-sql/language-elements/transaction-isolation-levels).
  
 Дополнительные сведения о транзакциях SQL Server см. в разделе [транзакции (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Если запрос возвращает большой объем данных и вызывает метод `BeginTransaction`, <xref:System.Data.SqlClient.SqlException> возникает исключение, так как SQL Server не поддерживает параллельные транзакции, при использовании режима MARS. Чтобы избежать этой проблемы, всегда связывайте транзакцию с команды и подключение прежде, чем у потоков чтения должны быть открыты.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и <xref:System.Data.SqlClient.SqlTransaction>. Также демонстрируется использование <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, и <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> методы.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Параллельные транзакции не разрешены при использовании режима MARS.</exception>
        <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Транзакции (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Использование поставщика данных .NET Framework для SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction transactionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">Имя транзакции.</param>
        <summary>Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта команда сопоставляется в SQL Server метода BEGIN TRANSACTION.  
  
 Длина `transactionName` параметра не должно превышать 32 символов; в противном случае будет создано исключение.  
  
 Значение в `transactionName` параметр может использоваться в последующих вызовах <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> и в `savePoint` параметр <xref:System.Data.SqlClient.SqlTransaction.Save%2A> метод.  
  
 Необходимо зафиксировать или откатить транзакцию с помощью <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> или <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> метод. Чтобы убедиться в том, что [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] поставщик данных для модели управления транзакциями SQL Server выполняет правильно, избегайте использования других моделей управления транзакциями, таких как один, предоставляемым SQL Server.  
  
 Дополнительные сведения о транзакциях SQL Server см. в разделе [транзакции (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Если запрос возвращает большой объем данных и вызывает метод `BeginTransaction`, <xref:System.Data.SqlClient.SqlException> возникает исключение, так как SQL Server не поддерживает параллельные транзакции, при использовании режима MARS. Чтобы избежать этой проблемы, всегда связывайте транзакцию с команды и подключение прежде, чем у потоков чтения должны быть открыты.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и <xref:System.Data.SqlClient.SqlTransaction>. Также демонстрируется использование <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, и <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> методы.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Параллельные транзакции не разрешены при использовании режима MARS.</exception>
        <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Транзакции (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Использование поставщика данных .NET Framework для SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso, string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel, transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso, System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel * string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction (iso, transactionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="iso">Уровень изоляции, с которым должна выполняться транзакция.</param>
        <param name="transactionName">Имя транзакции.</param>
        <summary>Начинает транзакцию базы данных с указанным уровнем изоляции и именем транзакции.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта команда сопоставляется в SQL Server метода BEGIN TRANSACTION.  
  
 Значение в `transactionName` параметр может использоваться в последующих вызовах <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> и в `savePoint` параметр <xref:System.Data.SqlClient.SqlTransaction.Save%2A> метод.  
  
 Необходимо зафиксировать или откатить транзакцию с помощью <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> или <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> метод. Чтобы убедиться, что модели управления транзакциями SQL Server работает правильно, избегайте использования других моделей управления транзакциями, таких как включенный в SQL Server.  
  
> [!NOTE]
>  После фиксации или отката транзакции уровень изоляции транзакции сохраняется для всех последующих команд, которые находятся в режиме автоматической фиксации (по умолчанию SQL Server). Это может привести к непредвиденным результатам, например уровня изоляции REPEATABLE READ, сохранение и блокировки других пользователей за пределы строки. Чтобы сбросить уровень изоляции по умолчанию (READ COMMITTED), выполнение [!INCLUDE[tsql](~/includes/tsql-md.md)] НАБОР ТРАНЗАКЦИЙ ИЗОЛЯЦИИ УРОВНЯ READ COMMITTED инструкции или вызов <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> за следует сразу же <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>. Дополнительные сведения об уровнях изоляции SQL Server, см. в разделе [уровни изоляции транзакций](/sql/t-sql/language-elements/transaction-isolation-levels).
  
 Дополнительные сведения о транзакциях SQL Server см. в разделе [транзакции (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Если запрос возвращает большой объем данных и вызывает метод `BeginTransaction`, <xref:System.Data.SqlClient.SqlException> возникает исключение, так как SQL Server не поддерживает параллельные транзакции, при использовании режима MARS. Чтобы избежать этой проблемы, всегда связывайте транзакцию с команды и подключение прежде, чем у потоков чтения должны быть открыты.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и <xref:System.Data.SqlClient.SqlTransaction>. Также демонстрируется использование <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, и <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> методы.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Параллельные транзакции не разрешены при использовании режима MARS.</exception>
        <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Транзакции (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Использование поставщика данных .NET Framework для SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string database);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string database) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (database As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ database);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="sqlConnection.ChangeDatabase database" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">Имя базы данных, предназначенной для использования вместо текущей базы данных.</param>
        <summary>Осуществляет смену текущей базы данных для открытого соединения <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение, передаваемое в `database` параметр должен быть действительным именем базы данных. `database` Параметр не должен содержать значение null, пустую строку или строку, состоящую только из пустых символов.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и отображает его свойства только для чтения.  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Недопустимое имя базы данных.</exception>
        <exception cref="T:System.InvalidOperationException">Соединение не открыто.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Невозможно изменить базу данных.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangePassword">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Изменяет пароль SQL Server.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, newPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * string -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="newPassword" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">Строка подключения, содержащая достаточно информации для подключения к требуемому серверу. В строке подключения должны быть заданы идентификатор пользователя и его текущий пароль.</param>
        <param name="newPassword">Новый пароль. Новый пароль должен соответствовать установленной на сервере политике безопасности паролей, включая минимальную длину, требования к использованию определенных знаков и т. д.</param>
        <summary>Заменяет пароль SQL Server для пользователя, указанного в строке подключения, заданным новым паролем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании SQL Server на Windows Server, разработчики могут использовать преимущества функциональности, позволяющей клиентскому приложению укажите текущий и новый пароль, чтобы изменить существующий пароль. Приложения могут реализовывать функциональные возможности, например, предложив пользователю ввести новый пароль во время первого входа, если старый истек, и эта операция может выполняться без вмешательства администратора.  
  
 <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A> Метод изменяет пароль SQL Server для пользователя, указанного в предоставленном `connectionString` параметр значению, переданному в `newPassword` параметра. Если строка подключения содержит параметр для встроенной безопасности (то есть «Integrated Security = True» или его эквивалент), создается исключение.  
  
 Чтобы определить, что действия пароля истек, вызвав <xref:System.Data.SqlClient.SqlConnection.Open%2A> вызывает метод <xref:System.Data.SqlClient.SqlException>. Чтобы указать, что необходимо сбросить пароль, который содержится в строке подключения, <xref:System.Data.SqlClient.SqlException.Number%2A> свойство для исключения содержит значение состояния 18487 или 18488. Первое значение (18487) указывает, что срок действия пароля, и второе (18488) указывает, что перед входом необходимо сбросить пароль.  
  
 Этот метод открывает собственное подключение к серверу, запрашивает изменение пароля и закрывает соединение, сразу же после его завершения. Это подключение не полученную, и не возвращается в пул подключений SQL Server.  
  
   
  
## Examples  
 Ниже приведен простой пример изменения пароля:  
  
```csharp
class Program {  
   static void Main(string[] args) {  
      System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password");  
   }  
}  
  
```  
  
```vb
Module Module1  
    Sub Main()  
System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password")  
    End Sub  
End Module  
  
```  
  
 Следующее консольное приложение демонстрирует процесс изменения пароля пользователя, так как истек срок действия текущего пароля.  
  
 [!code-csharp[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/CS/source.cs#1)]
 [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Строка подключения содержит параметр, позволяющий использовать встроенную систему безопасности.  
  
Или 
Длина параметра <paramref name="newPassword" /> превышает 128 символов.</exception>
        <exception cref="T:System.ArgumentNullException">Либо параметр <paramref name="connectionString" />, либо <paramref name="newPassword" /> имеет значение NULL.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Строки подключения (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Использование поставщика данных .NET Framework для SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newPassword) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newPassword As SecureString)" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newPassword)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-3.0" />
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newSecurePassword) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newSecurePassword As SecureString)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newSecurePassword);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newSecurePassword)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" FrameworkAlternate="netcore-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="newPassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="newSecurePassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="connectionString">Строка подключения, содержащая достаточно информации для подключения к серверу. Строка подключения не должна использовать любое из следующих ключевых слов строки подключения: <see langword="Integrated Security = true" />, <see langword="UserId" />, <see langword="Password" /> или <see langword="ContextConnection = true" />.</param>
        <param name="credential">Объект <see cref="T:System.Data.SqlClient.SqlCredential" />.</param>
        <param name="newPassword">Новый пароль.<paramref name="newPassword" /> должен быть доступен только для чтения. Пароль должен также соответствовать установленной на сервере политике безопасности паролей, (например, минимальной длине и требованиям к использованию определенных символов).</param>
        <param name="newSecurePassword">To be added.</param>
        <summary>Изменяет пароль SQL Server для пользователя, указанного в объекте <see cref="T:System.Data.SqlClient.SqlCredential" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Строка подключения содержит любое сочетание <see langword="UserId" />, <see langword="Password" />, или <see langword="Integrated Security=true" />.

-или- 
Строка подключения содержит <see langword="Context Connection=true" />.  

-или-

Длина <paramref name="newSecurePassword" /> (или <paramref name="newPassword" />) больше 128 символов.

-или-

<paramref name="newSecurePassword" /> (или <paramref name="newPassword" />) доступен не только для чтения.

-или-

<paramref name="newSecurePassword" /> (или <paramref name="newPassword" />) является пустой строкой.</exception>
        <exception cref="T:System.ArgumentNullException">Один из параметров (<paramref name="connectionString" />, <paramref name="credential" /> или <paramref name="newSecurePassword" />) имеет значение NULL.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberSignature Language="F#" Value="static member ClearAllPools : unit -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearAllPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Очищает пул подключений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A> Сбрасывает или очищает пул подключений. Если подключения, используемые во время вызова, они соответствующим образом помечаются и будут удалены (а возвращены в пул) при <xref:System.Data.SqlClient.SqlConnection.Close%2A> вызывается на них.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member ClearPool : System.Data.SqlClient.SqlConnection -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearPool connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connection">Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, которое требуется удалить из пула.</param>
        <summary>Очищает пул подключений, связанный с заданным подключением.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClearPool%2A> Очищает пул подключений, с которым связан `connection`. Если дополнительные подключения, связанные с `connection` , используется во время вызова они соответствующим образом помечаются и удаляются (а возвращены в пул), когда <xref:System.Data.SqlClient.SqlConnection.Close%2A> вызывается на них.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientConnectionId : Guid" Usage="System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентификатор соединения последней попытки подключения, независимо от того, успешно ли выполнена попытка или завершилась ошибкой.</summary>
        <value>Идентификатор соединения последней попытки соединения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A> работает независимо от того, какие версии сервера устанавливается соединение, но журналы расширенных событий и записи по ошибкам кольцевого буфера будет отсутствовать в [!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)] и более ранних версий.  
  
 Идентификатор соединения можно найти в журнале расширенных событий, чтобы увидеть, если произошел сбой на сервере при включении расширенных событий в журнале для идентификатора соединения. Идентификатор соединения можно также найти в кольцевом буфере соединений ([Устранение неполадок подключения в SQL Server 2008 с помощью кольцевого буфера](https://go.microsoft.com/fwlink/?LinkId=207752)) для некоторых ошибок подключения. Если идентификатор подключения не находится в кольцевом буфере соединений, можно предположить, сетевая ошибка.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="sqlConnection.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает соединение с базой данных. Рекомендуется использовать этот метод для закрытия любого открытого подключения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.Close%2A> Метод откатывает все отложенные транзакции. Освобождает соединение в пул подключений или закрывает подключение, если пул подключений отключен.  
  
> [!NOTE]
>  Отложенные транзакции, запущенные с помощью [!INCLUDE[tsql](~/includes/tsql-md.md)] или <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> распространяются автоматически обратно в том случае, если подключение сбрасывается, если включено использование пулов соединений. Если пул подключений отключен, транзакция откатывается после `SqlConnection.Close` вызывается. Транзакции, начатого через <xref:System.Transactions> осуществляется с помощью `System.Transactions` инфраструктуры того они не подвержены `SqlConnection.Close`.  
  
 Приложение может вызвать <xref:System.Data.SqlClient.SqlConnection.Close%2A> более одного раза. Исключение не создается.  
  
 Если <xref:System.Data.SqlClient.SqlConnection> выходит за границы области, он не будет закрыт. Таким образом, необходимо явно закрыть соединение, вызвав `Close` или `Dispose`. `Close` и `Dispose` функционально эквивалентны. Если пул соединений значение `Pooling` присваивается `true` или `yes`, Базовое соединение возвращается в пул соединения. С другой стороны Если `Pooling` присваивается `false` или `no`, закрытия базового соединения с сервером.  
  
> [!NOTE]
>  События входа в систему и выхода из системы не вызываются на сервере при выборке подключения из пула подключений и при возврате его в пул подключений, поскольку при возврате в пул подключений подключение фактически не закрывается. Дополнительные сведения см. в разделе [Пулы подключений SQL Server (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
> [!CAUTION]
>  Не вызывайте `Close` или `Dispose` на подключение, DataReader или любого другого управляемого объекта в `Finalize` метод класса. Метод завершения освобождать только неуправляемые ресурсы, которые ваш класс непосредственно владеет. Если класс не владеет какими-либо неуправляемыми ресурсами, не включайте в его определение метод `Finalize`. Дополнительные сведения см. в разделе [Сборка мусора](~/docs/standard/garbage-collection/index.md).  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection>, открывает его, отображаются некоторые из его свойств. Соединение закрывается автоматически в конце `using` блока.  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">При открытии подключения произошла ошибка на уровне подключения.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionKeyCacheTtl">
      <MemberSignature Language="C#" Value="public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionKeyCacheTtl As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan ColumnEncryptionKeyCacheTtl { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionKeyCacheTtl : TimeSpan with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает срок жизни для записей ключей шифрования столбцов в кэше ключей шифрования столбцов для функции <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>. Значение по умолчанию — 2 часа. 0 означает отсутствие кэширования.</summary>
        <value>Интервал времени.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionQueryMetadataCacheEnabled">
      <MemberSignature Language="C#" Value="public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionQueryMetadataCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ColumnEncryptionQueryMetadataCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionQueryMetadataCacheEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, которое указывает, включено ли кэширование метаданных запроса (True) или нет (False) для параметризованных запросов к базам данных с поддержкой функции <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>. Значение по умолчанию — true.</summary>
        <value>Возвращает значение True, если кэширование метаданных запроса включено; в противном случае — значение False. Значение True — это значение по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для параметризованных запросов, SqlClient совершается обмен данными для SQL Server для параметра метаданных, чтобы увидеть, какой параметр, его необходимо зашифровать и как (какие ключи и алгоритмы следует использовать). Если приложение вызывает тот же запрос несколько раз, дополнительное обращение выполняется к серверу каждый раз, которое снижает производительность приложения.  
  
 С помощью **ColumnEncryptionQueryMetadataCacheEnabled** присвоено значение true, если тот же запрос вызывается несколько раз, обращение к серверу будет выполняться только один раз. Кэш с параметром ненастраиваемые максимальный размер, равное 2000 запросы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionTrustedMasterKeyPaths">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.IList&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.IList`1&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ColumnEncryptionTrustedMasterKeyPaths As IDictionary(Of String, IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ ColumnEncryptionTrustedMasterKeyPaths { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionTrustedMasterKeyPaths : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.IList&lt;string&gt;&gt;" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.IList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Позволяет задать список доверенных путей к разделам для сервера базы данных. Если при обработке запроса приложения драйвер получает путь к разделу, которого нет в списке, запрос завершится ошибкой. Это свойство обеспечивает дополнительную защиту от атак на систему безопасности, которые подразумевают предоставление скомпрометированным сервером SQL Server неверных путей к разделам, что может привести к утечке учетных данных хранилища ключей.</summary>
        <value>Список доверенных путей к главным ключам для шифрования столбца.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionString")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку, используемую для открытия базы данных SQL Server.</summary>
        <value>Строка подключения, включающая имя источника базы данных и другие параметры, необходимые для установки исходного подключения. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> Аналогичен строки подключения к OLE DB, но не идентичны. В отличие от OLE DB или ADO, возвращаемая строка подключения совпадает с задаваемой пользователем <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>, за вычетом сведения о безопасности, если присваивается значение Persist Security Info `false` (по умолчанию). Поставщик данных .NET Framework для SQL Server не сохраняет и не возвращает пароль в строке подключения, если не задано значение Persist Security Info `true`.  

 Можно использовать <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> свойство для подключения к базе данных. В следующем примере строка соединения.  
  
```  
"Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)"  
```  
  
 Используйте новую <xref:System.Data.SqlClient.SqlConnectionStringBuilder> для создания достоверных строк соединения во время выполнения. Дополнительные сведения см. в статье [Connection String Builders](~/docs/framework/data/adonet/connection-string-builders.md) (Построители строк подключения).  
  
 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> Свойство может устанавливаться только в том случае, если соединение закрывается. Многие из значения строки подключения имеют соответствующие свойства только для чтения. Если строка подключения имеет значение, эти свойства обновляются, если ошибка обнаружена. В этом случае свойства обновляются. <xref:System.Data.SqlClient.SqlConnection> свойства возвращают только те параметры, которые содержатся в <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.  
  
 Чтобы подключиться к локальному компьютеру, укажите для параметра «(local)» для сервера. Если имя сервера не указан, будут выполняться подключения к экземпляру по умолчанию на локальном компьютере.  
  
 Сброс <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> для закрытого соединения сбрасывает все значения строки подключения (и связанные свойства), включая пароль. Например, если задать строку подключения, которая включает «базы данных = AdventureWorks» и затем сбросить строку соединения для «источник данных = myserver; Integrated Security = true», <xref:System.Data.SqlClient.SqlConnection.Database%2A> больше не задано значение «AdventureWorks».  
  
 Строка соединения анализируется сразу после установки. Если обнаружены ошибки синтаксиса при синтаксическом анализе, исключение времени выполнения, такие как <xref:System.ArgumentException>, создается. Другие ошибки можно найти только в том случае, если попытки для открытия соединения.  
  
 Базовый формат строки подключения содержит ряд пар "ключевое слово/значение", разделенных точкой с запятой. Знак равенства (=) соединяет каждое ключевое слово и его значение. Чтобы включить значения, содержащие точку с запятой, знак одинарной или двойной кавычки, значение должно быть заключено в двойные кавычки. Если значение содержит точку с запятой и знак двойных кавычек, значение может быть заключено в одинарные кавычки. Одинарная кавычка также полезен, если значение начинается с символа двойной кавычки. И наоборот двойных кавычек может использоваться, если значение начинается с одинарной кавычки. Если значение содержит символы одинарных и двойных кавычек, знак кавычек для выделения значения необходимо удвоить фрагменты внутри него.  
  
 Чтобы включить начальные или конечные пробелы в строковое значение, значение должно быть заключено в одинарные кавычки или двойные кавычки. Любые начальные или конечные пробелы вокруг целочисленному, логическому или перечисляемые значения игнорируются, даже если они заключены в кавычки. Тем не менее пробелы внутри literal-ключевое слово строки или значения сохраняются. Одинарные или двойные кавычки могут использоваться в строке подключения без разделителей (например, источник данных = my'Server или Data Source = Server»), если символ кавычки не является первым или последним символом в значении.  
  
 Ключевые слова не учитывают регистр.  
  
 В следующей таблице перечислены допустимые имена для значений зарезервированных слов в <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.  
  
|Ключевое слово|Значение по умолчанию|Описание|  
|-------------|-------------|-----------------|  
|Addr|Н/Д|Синоним **источника данных**.|  
|Адрес|Н/Д|Синоним **источника данных**.|  
|Приложение|Н/Д|Синоним **имя_приложения**.|  
|Application Name|Н/Д|Имя приложения, или «Поставщик данных .NET SQLClient» Если имя приложения не указано.<br /><br /> Имя приложения может быть 128 символов или меньше.|  
|`ApplicationIntent`|`ReadWrite`|Объявляет тип рабочей нагрузки приложения при подключении к серверу. Возможными значениями являются `ReadOnly` и `ReadWrite`. Пример:<br /><br /> `ApplicationIntent=ReadOnly`<br /><br /> Дополнительные сведения о поддержке SqlClient для групп доступности Always On см. в разделе [Поддержка SqlClient для высокого уровня доступности и аварийного восстановления](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).|  
|Asynchronous Processing<br /><br /> -или-<br /><br /> Async|«ЛОЖЬ»|Когда `true`, поддерживаются асинхронные операции. Допустимые значения: `true`, `false`, `yes` и `no`.<br /><br /> Это свойство учитывается, начиная с версии [!INCLUDE[net_v45](~/includes/net-v45-md.md)]. Дополнительные сведения о поддержке SqlClient для асинхронного программирования см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).|  
|AttachDBFilename<br /><br /> -или-<br /><br /> Расширенные свойства<br /><br /> -или-<br /><br /> Исходное имя файла|Н/Д|Имя файла базы данных-источника, включая полный путь к подключаемой базе данных. AttachDBFilename поддерживается только для первичных файлов данных, имеющих расширение mdf.<br /><br /> Если указано значение ключа AttachDBFileName в строке подключения, база данных присоединяется и становится базой данных по умолчанию для подключения.<br /><br /> Если этот ключ не указан и базе данных уже присоединена, базы данных повторно прикрепляться не будет. Ранее подключенная база данных будет использоваться как базы данных по умолчанию для подключения.<br /><br /> Если указан этот ключ вместе с ключом AttachDBFileName, значение этого ключа будет использоваться в качестве псевдонима. Тем не менее если имя уже используется в другой присоединенной базе данных, соединение будет разорвано.<br /><br /> Путь может быть абсолютным или относительным, с помощью строки замены DataDirectory. Если используется DataDirectory, файл базы данных должен существовать в подкаталоге каталога, на который указывает строка подстановки. **Примечание.**  Удаленный сервер, HTTP и UNC не поддерживаются имена путей. <br /><br /> С помощью ключевого слова «database» (или одного из своих псевдонимов) необходимо указать имя базы данных, как показано ниже:<br /><br /> <code>"AttachDbFileName=&#124;DataDirectory&#124;\data\YourDB.mdf;integrated security=true;database=YourDatabase"</code><br /><br /> Если файл журнала находится в том же каталоге, что и файл данных, а при прикреплении первичного файла данных было использовано ключевое слово «database», будет выдана ошибка. В этом случае следует удалить файл журнала. После прикрепления базы данных будет автоматически создан новый файл журнала на основе физического пути.|  
|Проверка подлинности|Н/Д|Метод проверки подлинности, используемый для [подключение к SQL базы данных с помощью аутентификации Azure Active Directory](https://azure.microsoft.com/documentation/articles/sql-database-aad-authentication/#7-connect-to-your-database-by-using-azure-active-directory-identities).<br /><br /> Допустимые значения:<br /><br /> Пароль Active Directory интегрированное, Active Directory, пароль Sql.|  
|Параметр шифрования столбца|Н/Д|Включает или отключает [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine?view=sql-server-2017) функцию для подключения.|  
|Время ожидания соединения<br /><br /> -или-<br /><br /> Connection Timeout<br /><br /> -или-<br /><br /> Время ожидания|15|Продолжительность времени (в секундах) ожидания для подключения к серверу перед завершается и генерируется ошибка.<br /><br /> Допустимые значения: больше или равно 0 и меньше или равно 2 147 483 647.<br /><br /> При открытии соединения с базой данных SQL Azure, задайте время ожидания соединения равным 30 секундам.|  
|Срок действия подключения<br /><br /> -или-<br /><br /> Load Balance Timeout|0|Если соединение возвращается в пул, время его создания сравнивается с текущим временем и соединение уничтожается, если этот промежуток времени (в секундах) превышает значение, заданное параметром `Connection Lifetime`. Эта возможность полезна в кластеризованных конфигурациях для принудительной балансировки нагрузки между выполняющимся сервером и сервером, только что переведенным в оперативный режим.<br /><br /> Ноль (0) значении для максимальное время ожидания подключения в составе пула соединений.|  
|ConnectRetryCount|1|Элементы управления попыток после того как клиент находит сбоя неактивного подключения. Допустимые значения: от 0 до 255. Значение по умолчанию — 1. 0 означает, что не пытайтесь повторно подключиться (устойчивость подключения disable).<br /><br /> Дополнительные сведения об устойчивости неактивных подключений см. в разделе [Техническая статья — устойчивость неактивных подключений](https://go.microsoft.com/fwlink/?LinkId=393996).|  
|ConnectRetryInterval|10|Определяет временной интервал между повторными попытками подключения (ConnectRetryCount). Допустимые значения: 1 – 60 секунд (по умолчанию = 10), примененных после первой попытки повторного подключения. При обнаружении разорванное соединение, клиент немедленно пытается подключиться; Это первая попытка повторного подключения и возникает, только если ConnectRetryCount больше 0. Если неудачной первой попытки повторного подключения и ConnectRetryCount больше 1, клиент ожидает ConnectRetryInterval попробовать попытки повторного подключения вторая и последующие.<br /><br /> Дополнительные сведения об устойчивости неактивных подключений см. в разделе [Техническая статья — устойчивость неактивных подключений](https://go.microsoft.com/fwlink/?LinkId=393996).|  
|Context Connection|«ЛОЖЬ»|`true` Если в процессе SQL Server следует подключиться.|  
|Current Language<br /><br /> -или-<br /><br /> Язык|Н/Д|Задает язык, используемый для базы данных сервера предупреждения или сообщения об ошибках.<br /><br /> Имя языка может быть 128 символов или меньше.|  
|источника данных<br /><br /> -или-<br /><br /> Сервер<br /><br /> -или-<br /><br /> Адрес<br /><br /> -или-<br /><br /> Addr<br /><br /> -или-<br /><br /> Сетевой адрес|Н/Д|Имя или сетевой адрес экземпляра SQL Server, к которому осуществляется подключение. После имени сервера можно указать номер порта:<br /><br /> `server=tcp:servername, portnumber`<br /><br /> При указании локального экземпляра, всегда используйте (local). Чтобы указать протокол, добавьте один из следующих префиксов:<br /><br /> `np:(local),  tcp:(local), lpc:(local)`<br /><br /> Начиная с версии [!INCLUDE[net_v45](~/includes/net-v45-md.md)], можно также подключиться к базе данных LocalDB следующим образом:<br /><br /> `server=(localdb)\\myInstance`<br /><br /> Дополнительные сведения о LocalDB, см. в разделе [поддержка SqlClient для LocalDB](~/docs/framework/data/adonet/sql/sqlclient-support-for-localdb.md).<br /><br /> **Источник данных** необходимо использовать TCP или именованных каналов формате.<br /><br /> TCP имеет следующий формат:<br /><br /> -tcp:\<имя узла >\\< имя экземпляра\><br />-tcp:\<имя узла >,\<номер порта TCP/IP ><br /><br /> Формат TCP должен начинаться с префикса «tcp:», после которой идет экземпляр базы данных, в соответствии с именем узла и имя экземпляра. Этот формат не применимо, при подключении к базе данных SQL Azure. TCP, автоматически выбирается для подключения к базе данных SQL Azure, когда не указан протокол.<br /><br /> Имя узла необходимо указать в одном из следующих способов:<br /><br /> -   NetBIOSName<br />-IPv4-адрес<br />-IPv6-адрес<br /><br /> Имя экземпляра используется для разрешения на определенный номер порта TCP/IP, на котором размещается экземпляр базы данных. Кроме того непосредственно указав номер порта TCP/IP также допустимы. Если оба имя экземпляра и номер порта не существуют, используется экземпляр базы данных по умолчанию.<br /><br /> Именованные каналы формат выглядит следующим образом:<br /><br /> -np:\\\\< имя узла\>\pipe\\< имя канала\><br /><br /> Формат именованные каналы должны начинаться с префикса «np:», после которой идет имя именованного канала.<br /><br /> Имя узла необходимо указать в одном из следующих способов:<br /><br /> -   NetBIOSName<br />-IPv4-адрес<br />-IPv6-адрес<br /><br /> Имя канала используется для идентификации экземпляра базы данных, к которой будет подключаться приложение .NET Framework.<br /><br /> Если значение **сети** указан ключ префиксы «tcp:» и «np:» указывать не нужно. **Примечание.**  Вы можете принудительно использовать TCP вместо общей памяти, либо путем добавления префикса **tcp:** к имени сервера в строке подключения или с помощью **localhost**.|  
|Encrypt|«ЛОЖЬ»|Когда `true`, SQL Server использует шифрование SSL для всех данных, передаваемых между клиентом и сервером, если сервер установлен сертификат. Допустимые значения: `true`, `false`, `yes` и `no`. Дополнительные сведения см. в разделе [синтаксис строки соединения](~/docs/framework/data/adonet/connection-string-syntax.md).<br /><br /> Начиная с версии [!INCLUDE[net_v45](~/includes/net-v45-md.md)], когда `TrustServerCertificate` имеет значение false и `Encrypt` имеет значение true, имя сервера (или IP-адрес) в SQL Server SSL-сертификата должно совпадать сервера имя (или IP-адрес) указан в строке подключения. В противном случае соединение не будет установлено. Сведения о поддержке сертификатов, субъект которого начинается с символом-шаблоном (*), см. в разделе [принят подстановочные знаки, используемые сертификаты сервера для проверки подлинности сервера](https://support.microsoft.com/kb/258858).|  
|Enlist|'true'|`true` Указывает, что организатор пулов соединений SQL Server автоматически добавляет подключение в контекст текущей транзакции создающего ее потока.|  
|Failover Partner|Н/Д|Имя резервного сервера, на котором настроено зеркальное отображение базы данных.<br /><br /> Если значение этого ключа — «», затем **Initial Catalog** должен присутствовать, и его значение не должно быть «».<br /><br /> Имя сервера может содержать 128 символов или меньше.<br /><br /> Если указать партнер по отработке отказа, но резервного сервера-участника не настроена для зеркального отображения базы данных и сервере-источнике (указывается с помощью ключевого слова Server) недоступна, а затем произойдет сбой подключения.<br /><br /> Если указан партнер по отработке отказа и сервере-источнике не настроена для зеркального отображения базы данных, подключение к серверу-источнику (указывается с помощью ключевого слова Server) будет успешной, если основной сервер доступен.|  
|Initial Catalog<br /><br /> -или-<br /><br /> База данных|Н/Д|Имя базы данных.<br /><br /> Имя базы данных может содержать 128 символов или меньше.|  
|Integrated Security<br /><br /> -или-<br /><br /> Trusted_Connection|«ЛОЖЬ»|Когда `false`, идентификатор пользователя и пароль указываются в соединении. Когда `true`, для проверки подлинности используются текущие учетные данные учетной записи Windows.<br /><br /> Допустимые значения: `true`, `false`, `yes`, `no`, и `sspi` (настоятельно рекомендуется), что эквивалентно `true`.<br /><br /> Если идентификатор пользователя и пароль заданы и встроенные безопасности имеет значение true, идентификатор пользователя и пароль игнорируется и используется интегрированная безопасность.<br /><br /> <xref:System.Data.SqlClient.SqlCredential> представляет собой более надежный способ, чтобы указать учетные данные для подключения, которое использует проверку подлинности SQL Server (`Integrated Security=false`).|  
|Max Pool Size|100|Максимальное количество соединений, допустимых в пуле.<br /><br /> Допустимые значения: больше или равно 1. Значения, меньше, чем **Min Pool Size** выдает ошибку.|  
|Min Pool Size|0|Минимальное количество соединений, допустимых в пуле.<br /><br /> Допустимые значения: больше или равно 0. Ноль (0) в этом поле означает, что изначально открываются не минимальное подключения.<br /><br /> Значения, превышающие **Max Pool Size** выдает ошибку.|  
|MultipleActiveResultSets|«ЛОЖЬ»|Когда `true`, приложение может поддерживать несколько активных результирующих наборов (MARS). Когда `false`, приложение должно обработать или отменить все результирующие наборы из одного пакета, прежде чем выполнять любого другого пакета для данного соединения.<br /><br /> Допустимые значения: `true` и `false`.<br /><br /> Дополнительные сведения см. в разделе [Несколько активных результирующих наборов (MARS)](~/docs/framework/data/adonet/sql/multiple-active-result-sets-mars.md).|  
|`MultiSubnetFailover`|false|Всегда указывайте `multiSubnetFailover=True` при подключении к группе доступности прослушиватель SQL Server 2012 (или более поздней версии) группы доступности или экземпляра SQL Server 2012 (или более поздней версии) отказоустойчивого кластера. `multiSubnetFailover=True` Настраивает SqlClient для ускоренного обнаружения и подключения для текущего активного сервера. Возможные значения: `Yes` и `No`, `True` и `False` или `1` и `0`. Пример:<br /><br /> `MultiSubnetFailover=True`<br /><br /> Значение по умолчанию — `False`. Дополнительные сведения о поддержке SqlClient всегда на групп доступности см. в разделе [поддержка SqlClient для высокого уровня доступности и аварийного восстановления](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).|  
|Network Library<br /><br /> -или-<br /><br /> Сеть<br /><br /> -или-<br /><br /> NET|Н/Д|Сетевая библиотека, используемая для установления соединения с экземпляром SQL Server. Допустимые значения:<br /><br /> dbnmpntw (Named Pipes)<br /><br /> dbmsrpcn (Multiprotocol, Windows RPC)<br /><br /> dbmsadsn (Apple Talk)<br /><br /> dbmsgnet (VIA)<br /><br /> dbmslpcn (Shared Memory)<br /><br /> dbmsspxn (IPX/SPX)<br /><br /> также dbmssocn (TCP/IP)<br /><br /> Dbmsvinn (Banyan Vines)<br /><br /> Соответствующая сетевая библиотека DLL должна быть установлена на системе, с которой устанавливается соединение. Если вы не укажете сети и используется локальный сервер (например, «.» или «(local)»), общей памяти используется. В этом примере сетевой библиотекой является Win32 Winsock TCP/IP (dbmssocn), а портом соединения — 1433.<br /><br /> `Network Library=dbmssocn;Data Source=000.000.000.000,1433;`|  
|Packet Size|8000|Размер в байтах сетевых пакетов, используемого для взаимодействия с экземпляром SQL Server.<br /><br /> Размер пакета может быть больше или равно 512 и меньше или равно 32768.|  
|Пароль<br /><br /> -или-<br /><br /> PWD|Н/Д|Пароль для входа в учетную запись SQL Server. Не рекомендуется. Чтобы обеспечить высокий уровень безопасности, мы настоятельно рекомендуем использовать `Integrated Security` или `Trusted_Connection` ключевое слово вместо этого. <xref:System.Data.SqlClient.SqlCredential> представляет собой более надежный способ, чтобы указать учетные данные для подключения, которое использует проверку подлинности SQL Server.<br /><br /> Пароль должен быть 128 символов или меньше.|  
|Persist Security Info<br /><br /> -или-<br /><br /> PersistSecurityInfo|«ЛОЖЬ»|Если задано значение `false` или `no` (предпочтительно), конфиденциальные сведения, такие как пароль, не возвращаются как часть подключения, если оно открыто или когда-либо находилось в открытом состоянии. При сбросе строки подключения сбрасывает все значения строки подключения, включая пароль. Допустимые значения: `true`, `false`, `yes` и `no`.|  
|PoolBlockingPeriod|Авто|Задает поведение периода блокировки для пула подключений. См. в разделе <xref:System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod> свойство.|  
|Pooling|'true'|Если этот ключ имеет значение true, все вновь созданные подключения будут добавляться в пул при закрытии приложения. В следующей попытке открыть и то же подключение привязки будет рисоваться это подключение из пула.<br /><br /> Подключения считаются одинаковыми, если они имеют ту же строку подключения. Различные подключения имеют различные строки подключения.<br /><br /> Значение этого ключа может быть «true», «false», «Да» или «no».|  
|Replication|«ЛОЖЬ»|`true` Если репликация поддерживается на соединению.|  
|Transaction Binding|Implicit Unbind|Управляет подключения связь с прикрепленной `System.Transactions` транзакции.<br /><br /> Доступны следующие значения:<br /><br /> `Transaction Binding=Implicit Unbind;`<br /><br /> `Transaction Binding=Explicit Unbind;`<br /><br /> Неявные Unbind вызывает отсоединение подключения от транзакции по ее завершении. После отсоединения дополнительные запросы к соединению выполняются в режиме автофиксации. Свойство `System.Transactions.Transaction.Current` не проверяется при выполнении запросов в то время, когда транзакция активна. После завершения транзакции дополнительные запросы выполняются в режиме автофиксации.<br /><br /> Если система завершает транзакцию (в области с помощью блока) до завершения последней команды, возникнет исключение <xref:System.InvalidOperationException>.<br /><br /> Явные причины Unbind, соединение остается прикрепить к транзакции до закрытия соединения или явно `SqlConnection.TransactionEnlist(null)` вызывается. Начиная с версии [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], разобрать неявный производить изменения явные отменить привязку устаревшим. Исключение `InvalidOperationException` выдается, если свойство `Transaction.Current` не является прикрепленной транзакцией или если прикрепленная транзакция не активна.|  
|TransparentNetworkIPResolution|См. описание.|Если этому ключу присвоено значение `true`, приложение должно получить все IP-адреса для определенной записи DNS, а затем попытаться подключиться по первому адресу в списке. Если подключение не устанавливается в течение 0,5 секунды, приложение попытается параллельно подключиться по другим адресам. При получении первого ответа приложение устанавливает подключение по соответствующему IP-адресу.<br /><br /> Если `MultiSubnetFailover` ключ имеет значение `true`, `TransparentNetworkIPResolution` учитывается.<br /><br /> Если `Failover Partner` ключ имеет значение, `TransparentNetworkIPResolution` учитывается.<br /><br /> Значение этого ключа должно быть `true`, `false`, `yes`, или `no`.<br /><br /> Значение `yes` — обрабатывается так же, как значение `true`.<br /><br /> Значение `no` — обрабатывается так же, как значение `false`.<br /><br /> По умолчанию используются следующим образом:<br /><br /> <ul><li>`false` Когда:<br /><br /> <ul><li>Подключение к базе данных SQL Azure, где заканчивается источника данных:<br /><br /> <ul><li>.database.chinacloudapi.cn</li><li>.database.usgovcloudapi.net</li><li>.database.cloudapi.de</li><li>.database.windows.net</li></ul></li><li>`Authentication` «Пароль Active Directory» или «Интегрированные службы Active Directory»</li></ul></li><li>В остальных случаях — `true`.</li></ul>|  
|TrustServerCertificate|«ЛОЖЬ»|Если задано значение `true`, используется протокол SSL для шифрования канала при проходе по цепочке сертификатов для проверки доверия. Если задано значение TrustServerCertificate `true` и имеет значение Encrypt `false`, канал не зашифрован. Допустимые значения: `true`, `false`, `yes` и `no`. Дополнительные сведения см. в разделе [синтаксис строки соединения](~/docs/framework/data/adonet/connection-string-syntax.md).|  
|Версия системы типов|Н/Д|Строковое значение, определяющее систему типов, ожидаемую приложением. Функции, доступные клиентскому приложению, зависят от версии SQL Server и уровня совместимости базы данных. Явное указание системы типов версии СУБД, для которой было написано клиентское приложение, позволяет избежать потенциальных проблем, которые могут привести к сбою приложения при использовании другой версии SQL Server. **Примечание.**  Версию системы типов нельзя задать для внутрипроцессного выполнения кода среды CLR на сервере SQL Server. Дополнительные сведения см. в разделе [SQL Server интеграция среды CLR и](~/docs/framework/data/adonet/sql/sql-server-common-language-runtime-integration.md). <br /><br /> Доступны следующие значения:<br /><br /> `Type System Version=SQL Server 2012;`<br /><br /> `Type System Version=SQL Server 2008;`<br /><br /> `Type System Version=SQL Server 2005;`<br /><br /> `Type System Version=Latest;`<br /><br /> `Type System Version=SQL Server 2012;` Указывает, что приложению будет требоваться версии 11.0.0.0 Microsoft.SqlServer.Types.dll. Другой `Type System Version` параметры потребует версии 10.0.0.0 Microsoft.SqlServer.Types.dll.<br /><br /> `Latest` является устаревшим и не должны использоваться. `Latest` равно `Type System Version=SQL Server 2008;`.|  
|User ID<br /><br /> -или-<br /><br /> UID<br /><br /> -или-|Н/Д|Учетная запись входа SQL Server. Не рекомендуется. Чтобы обеспечить высокий уровень безопасности, мы настоятельно рекомендуем использовать `Integrated Security` или `Trusted_Connection` ключевые слова вместо этого. <xref:System.Data.SqlClient.SqlCredential> представляет собой более надежный способ, чтобы указать учетные данные для подключения, которое использует проверку подлинности SQL Server.<br /><br /> Идентификатор пользователя должен быть 128 символов или меньше.|  
|User Instance|«ЛОЖЬ»|Значение, указывающее, следует ли перенаправлять подключение от экземпляра SQL Server Express по умолчанию запущенному исполняющей средой экземпляру, работающему под учетной записью вызывающего объекта.|  
|Workstation ID<br /><br /> -или-<br /><br /> WSID|Имя локального компьютера|Имя рабочей станции, подключающейся к SQL Server.<br /><br /> Идентификатор должен быть 128 символов или меньше.|  
  
 Следующий список содержит допустимые имена для значений пула подключений в <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>. Дополнительные сведения см. в разделе [Пулы подключений SQL Server (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
-   Срок действия подключения (или Load Balance Timeout)  
  
-   Enlist  
  
-   Max Pool Size  
  
-   Min Pool Size  
  
-   Pooling  
  
 При указании ключевого слова или значений пула подключений, требующих логических значений, можно использовать «Да» вместо «true» и «нет» вместо «false». Целочисленные значения представлены как строки.  

> [!NOTE]
>  Поставщик данных .NET Framework для SQL Server использует свой собственный протокол для взаимодействия с SQL Server. Таким образом он не поддерживает использование имени источника данных ODBC (DSN) при подключении к SQL Server, так как оно не добавляет уровень ODBC.  
  
> [!NOTE]
>  Файлы данных link (UDL) не поддерживаются для поставщика данных .NET Framework для SQL Server.  
  
> [!CAUTION]
>  В этом выпуске приложение должно использовать осторожность при построении строки подключения на основе ввода пользователя (например, при получении сведений о идентификатора и пароля пользователя из диалоговое окно и добавить его в строку подключения). Приложения следует убедиться, что пользователь не может внедрить Дополнительные параметры строки подключения в эти значения (например, если ввести пароль в виде «validpassword; базы данных = somedb» при попытке подключить к другой базе данных). Если требуется для создания строки подключения на основе ввода пользователя, используйте новый <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, который проверяет строку подключения и позволяет избежать этой проблемы. См. в разделе [построители строк подключения](~/docs/framework/data/adonet/connection-string-builders.md) Дополнительные сведения.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и задает <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> свойства до открытия соединения.  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Передан недопустимый аргумент строки подключения, или не задан обязательный аргумент строки подключения.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/connection-strings.md">Строки подключения в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql-server-connection-pooling.md">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Управляемые поставщики ADO.NET и центр разработчиков DataSet</related>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Строки подключения в ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает время ожидания при попытке установки подключения, по истечении которого попытка подключения завершается и создается ошибка.</summary>
        <value>Время (в секундах), в течение которого должно производиться ожидание открытия соединения. Значение по умолчанию - 15 секунды.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно задать количество времени, подключение ожидает истечения времени ожидания с помощью `Connect Timeout` или `Connection Timeout` ключевые слова в строке подключения. Значение 0 означает отсутствие ограничений и следует избегать в <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> так, как при попытке подключения ждет неопределенно долгое время.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и задает `Connection Timeout` до 30 секунд, в строке подключения. Код открывает соединение и отображает <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> свойства в окне консоли.  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Заданное значение меньше 0.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Строки подключения в ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает и возвращает объект <see cref="T:System.Data.SqlClient.SqlCommand" />, связанный с <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <returns>Объект <see cref="T:System.Data.SqlClient.SqlCommand" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[SqlConnection_CreateCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqlconnection_createcommand/cs/source.cs#1)]
 [!code-vb[SqlConnection_CreateCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqlconnection_createcommand/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="sqlConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Property Credential As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credential { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credential : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Data.SqlClient.SqlCredential" /> для этого подключения.</summary>
        <value>Объект <see cref="T:System.Data.SqlClient.SqlCredential" /> для этого подключения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Persist Security Info = true` необходим для получения значения <xref:System.Data.SqlClient.SqlCredential> со <xref:System.Data.SqlClient.SqlConnection.Credential%2A>.  
  
 Значение по умолчанию <xref:System.Data.SqlClient.SqlConnection.Credential%2A> имеет значение null.  
  
 <xref:System.InvalidOperationException> Будет вызвано исключение:  
  
-   Если <xref:System.Data.SqlClient.SqlConnection.Credential%2A> устанавливается на открытое соединение.  
  
-   Если <xref:System.Data.SqlClient.SqlConnection.Credential%2A> задается, если `Context Connection=true`.  
  
-   Если <xref:System.Data.SqlClient.SqlConnection.Credential%2A> задается, если `Integrated Security = true`.  
  
-   Если <xref:System.Data.SqlClient.SqlConnection.Credential%2A> устанавливается, когда в строке подключения используется `Password`.  
  
-   Если <xref:System.Data.SqlClient.SqlConnection.Credential%2A> устанавливается, когда в строке подключения используется `UserID`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credentials { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.SqlClient.SqlConnection.Database" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_Database")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения.</summary>
        <value>Имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.Database%2A> Свойство обновляется динамически. При изменении текущей базы данных с помощью [!INCLUDE[tsql](~/includes/tsql-md.md)] инструкции или <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> метод, отправляется информационное сообщение, и это свойство обновляется автоматически.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и отображает его свойства только для чтения.  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Команды и параметры</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_DataSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя экземпляра SQL Server, к которому осуществляется подключение.</summary>
        <value>Имя экземпляра SQL Server, к которому осуществляется подключение. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlConnection.DataSource%2A> Возвращает `null` Если строка соединения для <xref:System.Data.SqlClient.SqlConnection> является «контекстное соединение = true».  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и отображает его свойства только для чтения.  
  
 [!code-csharp[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="sqlConnection.EnlistDistributedTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="transaction">Ссылка на существующий объект <see cref="T:System.EnterpriseServices.ITransaction" />, к которому выполняется присоединение.</param>
        <summary>Выполняет присоединение указанной транзакции как распределенной транзакции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> метод прикрепить в распределенной транзакции. Так как он прикрепляет соединение <xref:System.Transactions.Transaction> экземпляра, **EnlistTransaction** использует преимущества функций, доступных в <xref:System.Transactions> пространство имен для управления распределенные транзакции, делая более предпочтительным, чем  **EnlistDistributedTransaction** для этой цели. Дополнительные сведения см. в разделе [распределенные транзакции](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 Вы можете выполнить прикрепление в существующей распределенной транзакции с помощью **EnlistDistributedTransaction** метод, если автоматическое прикрепление отключено. Прикрепление к существующей распределенной транзакции гарантирует, что, если транзакция фиксируется или откатывается назад, изменения, внесенные в код в источнике данных также фиксируется или откатывается назад.  
  
 `EnlistDistributedTransaction` Возвращает исключение, если <xref:System.Data.SqlClient.SqlConnection> начался транзакцию с помощью <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>. Тем не менее если транзакция является локальной транзакции, запущенной на источнике данных (например, путем явного выполнения инструкции BEGIN TRANSACTION с <xref:System.Data.SqlClient.SqlCommand> объекта), **EnlistDistributedTransaction** откат локальную транзакцию и прикрепляется к существующей распределенной транзакции, согласно запросу. Вы не получаете уведомления об откате локальной транзакции, ответственность за управление любыми локальными транзакциями не запущены с использованием <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Транзакции (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="sqlConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="transaction">Ссылка на существующий объект <see cref="T:System.Transactions.Transaction" />, к которому выполняется присоединение.</param>
        <summary>Выполняет присоединение указанной транзакции как распределенной транзакции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> метод прикрепить в распределенной транзакции. Так как он прикрепляет соединение <xref:System.Transactions.Transaction> экземпляра, **EnlistTransaction** использует преимущества функций, доступных в <xref:System.Transactions> пространство имен для управления распределенные транзакции, делая более предпочтительным, чем  **EnlistDistributedTransaction**, которая использует **System.EnterpriseServices.ITransaction** объекта. Он также имеет несколько иную семантику: после явного прикрепления соединения на транзакции, он не может быть откреплено или прикреплено в другой транзакции до завершения первой транзакции. Дополнительные сведения о распределенных транзакциях см. в разделе [распределенные транзакции](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Транзакции (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FireInfoMessageEventOnUserErrors">
      <MemberSignature Language="C#" Value="public bool FireInfoMessageEventOnUserErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property FireInfoMessageEventOnUserErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FireInfoMessageEventOnUserErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FireInfoMessageEventOnUserErrors : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает свойство <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />.</summary>
        <value>Значение <see langword="true" />, если свойство <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> задано. В противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При задании <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> для `true`, ошибки, которые были ранее считаться исключений теперь организованы в виде <xref:System.Data.SqlClient.SqlConnection.InfoMessage> события. Все события генерируются немедленно и обрабатываются обработчиком событий. Если является <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> присваивается `false`, затем <xref:System.Data.SqlClient.SqlConnection.InfoMessage> события обрабатываются в конце процедуры.  
  
> [!NOTE]
>  Ошибка с уровнем серьезности 17 и выше, сервер прекращает обработку команды должна обрабатываться как исключение. В этом случае исключение формируется независимо от того, как обрабатывается ошибка в событии <xref:System.Data.SqlClient.SqlConnection.InfoMessage>.  
  
 Дополнительные сведения о работе с событиями, см. в разделе [события подключения](~/docs/framework/data/adonet/connection-events.md). Дополнительные сведения об ошибках ядра SQL Server см. в разделе [ошибках компонента Database Engine](/sql/relational-databases/errors-events/database-engine-events-and-errors).
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5a29de74-acfc-4134-8616-829dd7ce0710">События подключения</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает сведения схемы для источника данных этого объекта <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При попытке получить сведения о схеме для более чем одной версии хранимой процедуры, схема для последнего возвращается только.
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Получение сведений о схеме из базы данных</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает сведения схемы для источника данных этого объекта <see cref="T:System.Data.SqlClient.SqlConnection" />. Дополнительные сведения о схеме см. в разделе [Коллекции схемы SQL Server](~/docs/framework/data/adonet/sql-server-schema-collections.md).</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Получение сведений о схеме из базы данных</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
        <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.SqlClient.SqlConnection" />, используя указанную строку в качестве имени схемы.</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Может потребоваться сведения о схеме базы данных, таблиц или столбцов. В этом примере:  
  
-   Использует GetSchema для получения сведений о схеме.  
  
-   Используйте ограничения схемы для получения указанных сведений об.  
  
-   Получает сведения о схеме базы данных, таблиц и некоторых столбцов.  
  
 Перед запуском примера необходимо создать образец базы данных с помощью следующих [!INCLUDE[tsql](~/includes/tsql-md.md)]:  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 [Как получить сведения о схеме из базы данных](https://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2) имеет версий C# и Visual Basic этот пример кода в проект Visual Studio.  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
      using (SqlConnection conn = new SqlConnection("Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;")) {  
         conn.Open();  
  
         // Get the Meta Data for Supported Schema Collections  
         DataTable metaDataTable = conn.GetSchema("MetaDataCollections");  
  
         Console.WriteLine("Meta Data for Supported Schema Collections:");  
         ShowDataTable(metaDataTable, 25);  
         Console.WriteLine();  
  
         // Get the schema information of Databases in your instance  
         DataTable databasesSchemaTable = conn.GetSchema("Databases");  
  
         Console.WriteLine("Schema Information of Databases:");  
         ShowDataTable(databasesSchemaTable, 25);  
         Console.WriteLine();  
  
         // First, get schema information of all the tables in current database;  
         DataTable allTablesSchemaTable = conn.GetSchema("Tables");  
  
         Console.WriteLine("Schema Information of All Tables:");  
         ShowDataTable(allTablesSchemaTable, 20);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Table Type to get   
         // the specified table(s).  
         // You can use four restrictions for Table, so you should create a 4 members array.  
         String[] tableRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Table Type.   
         // Now we specify the Table Name of the table what we want to get schema information.  
         tableRestrictions[2] = "Course";  
  
         DataTable courseTableSchemaTable = conn.GetSchema("Tables", tableRestrictions);  
  
         Console.WriteLine("Schema Information of Course Tables:");  
         ShowDataTable(courseTableSchemaTable, 20);  
         Console.WriteLine();  
  
         // First, get schema information of all the columns in current database.  
         DataTable allColumnsSchemaTable = conn.GetSchema("Columns");  
  
         Console.WriteLine("Schema Information of All Columns:");  
         ShowColumns(allColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).  
         // You can use four restrictions for Column, so you should create a 4 members array.  
         String[] columnRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         columnRestrictions[2] = "Course";  
         columnRestrictions[3] = "DepartmentID";  
  
         DataTable departmentIDSchemaTable = conn.GetSchema("Columns", columnRestrictions);  
  
         Console.WriteLine("Schema Information of DepartmentID Column in Course Table:");  
         ShowColumns(departmentIDSchemaTable);  
         Console.WriteLine();  
  
         // First, get schema information of all the IndexColumns in current database  
         DataTable allIndexColumnsSchemaTable = conn.GetSchema("IndexColumns");  
  
         Console.WriteLine("Schema Information of All IndexColumns:");  
         ShowIndexColumns(allIndexColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to   
         // get the specified column(s).  
         // You can use five restrictions for Column, so you should create a 5 members array.  
         String[] indexColumnsRestrictions = new String[5];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         indexColumnsRestrictions[2] = "Course";  
         indexColumnsRestrictions[4] = "CourseID";  
  
         DataTable courseIdIndexSchemaTable = conn.GetSchema("IndexColumns", indexColumnsRestrictions);  
  
         Console.WriteLine("Index Schema Information of CourseID Column in Course Table:");  
         ShowIndexColumns(courseIdIndexSchemaTable);  
         Console.WriteLine();  
      }  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   private static void ShowDataTable(DataTable table, Int32 length) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-" + length + "}", col.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         foreach (DataColumn col in table.Columns) {  
            if (col.DataType.Equals(typeof(DateTime)))  
               Console.Write("{0,-" + length + ":d}", row[col]);  
            else if (col.DataType.Equals(typeof(Decimal)))  
               Console.Write("{0,-" + length + ":C}", row[col]);  
            else  
               Console.Write("{0,-" + length + "}", row[col]);  
         }  
         Console.WriteLine();  
      }  
   }  
  
   private static void ShowDataTable(DataTable table) {  
      ShowDataTable(table, 14);  
   }  
  
   private static void ShowColumns(DataTable columnsTable) {  
      var selectedRows = from info in columnsTable.AsEnumerable()  
                         select new {  
                            TableCatalog = info["TABLE_CATALOG"],  
                            TableSchema = info["TABLE_SCHEMA"],  
                            TableName = info["TABLE_NAME"],  
                            ColumnName = info["COLUMN_NAME"],  
                            DataType = info["DATA_TYPE"]  
                         };  
  
      Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "TableCatalog", "TABLE_SCHEMA",  
          "TABLE_NAME", "COLUMN_NAME", "DATA_TYPE");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", row.TableCatalog,  
             row.TableSchema, row.TableName, row.ColumnName, row.DataType);  
      }  
   }  
  
   private static void ShowIndexColumns(DataTable indexColumnsTable) {  
      var selectedRows = from info in indexColumnsTable.AsEnumerable()  
                         select new {  
                            TableSchema = info["table_schema"],  
                            TableName = info["table_name"],  
                            ColumnName = info["column_name"],  
                            ConstraintSchema = info["constraint_schema"],  
                            ConstraintName = info["constraint_name"],  
                            KeyType = info["KeyType"]  
                         };  
  
      Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", "table_schema", "table_name", "column_name", "constraint_schema", "constraint_name", "KeyType");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", row.TableSchema,  
             row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" /> задается как значение NULL.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Получение сведений о схеме из базы данных</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="restrictionValues" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
        <param name="restrictionValues">Набор значений ограничений для запрошенной схемы.</param>
        <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.SqlClient.SqlConnection" />, используя указанную строку в качестве имени схемы и указанный массив строк для значений ограничений.</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `restrictionValues` Можно указать параметр *n* глубину значения, которые указаны в коллекции ограничений для конкретной коллекции. Чтобы задать значения в данном ограничении и не задавать значения в других ограничениях, необходимо задать описанным ранее ограничениям `null` , а затем указать соответствующее значение в ограничении, чтобы указать значение для.  
  
 Примером этого является коллекцией «Таблицы». Если коллекция «Таблицы» имеет три ограничения--базы данных, владелец и имя таблицы — и хотите, чтобы вернуть только таблицы, связанные с владельцем «Carl», необходимо передать следующие значения: null, «Carl». Если значение ограничения не передается, используются значения по умолчанию для этого ограничения. Такое же сопоставление соответствует передаче `null`, который отличается от передачи пустой строки для значения параметра. В этом случае пустая строка ("») рассматривается как значение для указанного параметра.  
  
 Для примера кода, демонстрирующие выполнение <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>, см. в разделе <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" /> задается как значение NULL.</exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.GetSchema" />
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Получение сведений о схеме из базы данных</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As SqlInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_InfoMessage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает, когда SQL Server возвращает предупреждение или информационное сообщение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Следует создать клиентов, которым требуется обрабатывать предупреждения или информационные сообщения, отправленные сервером <xref:System.Data.SqlClient.SqlInfoMessageEventHandler> делегат для прослушивания этого события.  
  
 <xref:System.Data.SqlClient.SqlConnection.InfoMessage> Событие происходит, когда сообщение со степенью серьезности 10 или меньше, возвращенные SQL Server. Сообщения с уровнем серьезности от 11 до 20 вызывают ошибку и сообщения с уровнем серьезности через 20 вызывает закрытие соединения. Дополнительные сведения об уровнях ошибка SQL Server, см. в разделе [степени серьезности ошибок ядра СУБД](/sql/relational-databases/errors-events/database-engine-error-severities).
  
 Дополнительные сведения и пример см. в разделе [события подключения](~/docs/framework/data/adonet/connection-events.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5a29de74-acfc-4134-8616-829dd7ce0710">Работа с событиями подключения</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnStateChange">
      <MemberSignature Language="C#" Value="protected override void OnStateChange (System.Data.StateChangeEventArgs stateChange);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStateChange(class System.Data.StateChangeEventArgs stateChange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OnStateChange(System.Data.StateChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStateChange (stateChange As StateChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStateChange(System::Data::StateChangeEventArgs ^ stateChange);" />
      <MemberSignature Language="F#" Value="override this.OnStateChange : System.Data.StateChangeEventArgs -&gt; unit" Usage="sqlConnection.OnStateChange stateChange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateChange" Type="System.Data.StateChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="stateChange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="sqlConnection.Open " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Открывает подключение к базе данных со значениями свойств, определяемыми объектом <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection> Удаляет подключение из пула соединений, если таковой доступен. В противном случае он устанавливает новое подключение к экземпляру SQL Server.  
  
> [!NOTE]
>  Если <xref:System.Data.SqlClient.SqlConnection> выходит за границы области, он не закрыт. Таким образом, необходимо явно закрыть соединение, вызвав <xref:System.Data.SqlClient.SqlConnection.Close%2A>.  
  
> [!NOTE]
>  Если указать номер порта, отличные от 1433, когда вы пытаетесь подключиться к экземпляру SQL Server с помощью протокол, отличный от протокола TCP/IP, <xref:System.Data.SqlClient.SqlConnection.Open%2A> метод завершается ошибкой. Чтобы указать номер порта, отличные от 1433, включите «server = machinename, номер порта» в строке подключения и используйте протокол TCP/IP.  
  
> [!NOTE]
>  Поставщик данных .NET Framework для SQL Server требуется полномочие безопасности с «разрешает вызовы в неуправляемые сборки» включено (<xref:System.Security.Permissions.SecurityPermission> с <xref:System.Security.Permissions.SecurityPermissionFlag> присвоено `UnmanagedCode`) чтобы открыть <xref:System.Data.SqlClient.SqlConnection> с включенной отладкой SQL.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection>, открывает и отображает его свойства. Соединение закрывается автоматически в конце `using` блока.  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Невозможно открыть подключение без указания источника данных или сервера.  
  
или 
Подключение уже открыто.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">При открытии подключения произошла ошибка на уровне подключения. Если свойство <see cref="P:System.Data.SqlClient.SqlException.Number" /> содержит значение 18 487 или 18 488, это означает, что действие указанного пароля истекло или что пароль должен быть сброшен. Дополнительные сведения см. в описании метода <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />.  
  
Тег <see langword="&lt;system.data.localdb&gt;" /> в файле app.config имеет недопустимые или неизвестные элементы.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">В разделе <see langword="&lt;localdbinstances&gt;" /> присутствуют две записи с одинаковым именем.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Строки подключения в ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Объединение подключений в пул в SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OpenAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlConnection.OpenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Инструкция отмены.</param>
        <summary>Асинхронная версия <see cref="M:System.Data.SqlClient.SqlConnection.Open" />, которая открывает соединение с базой данных с параметрами свойства, указанными в строке <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />. Чтобы запросить отмену операции до истечения времени ожидания соединения, можно использовать токен отмены.  Исключения будут распространяться с помощью возвращаемой задачи. Если время ожидания соединения истекло без успешного подключения, возвращаемая задача будет помечена как сбойная с исключением. Реализация возвращает задачу без блокировки вызывающего потока как для соединений, помещенных в пул, так и соединений вне пула.</summary>
        <returns>Задача, представляющая асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После вызова метода <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>, <xref:System.Data.SqlClient.SqlConnection.State%2A> должен возвращать <xref:System.Data.ConnectionState.Connecting> до возвращенного <xref:System.Threading.Tasks.Task> завершения. Затем, если соединение установлено успешно, <xref:System.Data.SqlClient.SqlConnection.State%2A> должен возвращать <xref:System.Data.ConnectionState.Open>. Если подключение отсутствует, <xref:System.Data.SqlClient.SqlConnection.State%2A> должен возвращать <xref:System.Data.ConnectionState.Closed>.  
  
 Вызов <xref:System.Data.SqlClient.SqlConnection.Close%2A> попытается отменить или закрыть соответствующий <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> вызова.  
  
 Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
  
 <see langword="Context Connection=true" /> задается в строке подключения.  
  
Подключение не было доступно из пула подключений до истечения времени ожидания подключения.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="PacketSize">
      <MemberSignature Language="C#" Value="public int PacketSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PacketSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PacketSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PacketSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PacketSize : int" Usage="System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_PacketSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает размер сетевых пакетов (в байтах), используемых при взаимодействии с экземпляром SQL Server.</summary>
        <value>Размер сетевых пакетов (в байтах). Значение по умолчанию — 8000.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если приложение выполняет массовое копирование или отправляет или получает большие объемы данных text или image, увеличение размера пакета может повысить эффективность работы системы за счет сокращения числа сетевых операций чтения и записи. Если приложение отправляет и получает небольшие объемы информации, можно установить размер пакета в 512 байт (с использованием значения размер пакета в <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>), что вполне достаточно для большинства операций передачи данных. Для большинства приложений оптимальным является размер пакета по умолчанию.  
  
 <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> может иметь значение в диапазоне от 512 до 32767 байт. Если значение находится за пределами этого диапазона, создается исключение.  
  
 Значение по умолчанию число длиной более 8000 вызовет пакетов для использования распределителя на экземпляре SQL Server вместо гораздо эффективнее SinglePage, уменьшают общую масштабируемость SQL Server. Дополнительные сведения об использовании памяти с помощью SQL Server см. в разделе [руководство по архитектуре управления памятью](/sql/relational-databases/memory-management-architecture-guide).
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection>, включая настройку `Packet Size` до 512 в строке подключения. Он отображает <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> и <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> свойства в окне консоли.  
  
 [!code-csharp[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных в ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterColumnEncryptionKeyStoreProviders">
      <MemberSignature Language="C#" Value="public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary&lt;string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterColumnEncryptionKeyStoreProviders(class System.Collections.Generic.IDictionary`2&lt;string, class System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterColumnEncryptionKeyStoreProviders (customProviders As IDictionary(Of String, SqlColumnEncryptionKeyStoreProvider))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterColumnEncryptionKeyStoreProviders(System::Collections::Generic::IDictionary&lt;System::String ^, System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider ^&gt; ^ customProviders);" />
      <MemberSignature Language="F#" Value="static member RegisterColumnEncryptionKeyStoreProviders : System.Collections.Generic.IDictionary&lt;string, System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders customProviders" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customProviders" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt;" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="customProviders">Настраиваемые поставщики</param>
        <summary>Регистрирует поставщиков хранилища ключей шифрования столбцов.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetStatistics">
      <MemberSignature Language="C#" Value="public void ResetStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ResetStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetStatistics ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetStatistics();" />
      <MemberSignature Language="F#" Value="member this.ResetStatistics : unit -&gt; unit" Usage="sqlConnection.ResetStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Если сбор статистики разрешен, все значения сбрасываются в нуль.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сбор статистики не включена, этот метод вызывается ошибка не выдается.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Статистика поставщика для SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RetrieveStatistics">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary RetrieveStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary RetrieveStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Function RetrieveStatistics () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ RetrieveStatistics();" />
      <MemberSignature Language="F#" Value="member this.RetrieveStatistics : unit -&gt; System.Collections.IDictionary" Usage="sqlConnection.RetrieveStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию пар имя-значение статистических данных на момент вызова метода.</summary>
        <returns>Возвращает ссылку типа <see cref="T:System.Collections.IDictionary" /> элементов <see cref="T:System.Collections.DictionaryEntry" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове этого метода, полученные значения являются те, в текущей точке во времени. Если вы продолжите использовать соединение, неправильные значения. Необходимо повторно выполнить метод, чтобы получить самые последние значения.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Статистика поставщика для SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ServerVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку, содержащую версию экземпляра SQL Server, к которому подключается клиент.</summary>
        <value>Версия экземпляра SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Версия имеет форму *##. ##. ###*, где первые две цифры являются основной номер версии, следующие две цифры — дополнительный номер версии, а последние четыре цифры — номер редакции. Строка имеет вид *виде "основная.дополнительная.сборка"*, в котором основной и дополнительный номер ровно две цифры и построении строго четыре цифры.  
  
 <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> был вызван, когда возвращаемая задача не была завершена, и не было открыто соединение после вызова <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и отображает <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> свойство.  
  
 [!code-csharp[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Соединение закрыто.  
  
 <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /> был вызван, когда возвращаемая задача не была завершена, и не было открыто соединение после вызова <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.SqlClient.SqlConnection.State" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_State")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Отображает состояние <see cref="T:System.Data.SqlClient.SqlConnection" /> во время последней сетевой операции, выполненной по подключению.</summary>
        <value>Перечисление <see cref="T:System.Data.ConnectionState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает <xref:System.Data.ConnectionState> перечисления, указывающее состояние <xref:System.Data.SqlClient.SqlConnection>. Закрытие и повторное открытие подключения будут обновлять значения свойства <xref:System.Data.SqlClient.SqlConnection.State%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Подключение к источнику данных (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_StateChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении состояния подключения.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatisticsEnabled">
      <MemberSignature Language="C#" Value="public bool StatisticsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StatisticsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property StatisticsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StatisticsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StatisticsEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Когда задано значение <see langword="true" />, разрешает сбор статистических сведений для текущего подключения.</summary>
        <value>Возвращает значение <see langword="true" />, если сбор статистики разрешен. В противном случае возвращает значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Включение сбора статистики небольшие, но измеряемое влияет на производительность и поэтому должен быть включен только в том случае, если она необходима.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Статистика поставщика для SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Начинает транзакцию базы данных.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
После завершения транзакции, необходимо зафиксировать или откатить транзакцию с помощью <xref:System.Data.IDbTransaction.Commit> или <xref:System.Data.IDbTransaction.Rollback> метод.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction (iso As IsolationLevel) As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel iso) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="iso">Одно из значений перечисления <see cref="T:System.Data.IsolationLevel" />.</param>
        <summary>Начинает транзакцию базы данных с указанным значением <see cref="T:System.Data.IsolationLevel" />.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
После завершения транзакции, необходимо зафиксировать или откатить транзакцию с помощью <xref:System.Data.IDbTransaction.Commit> или <xref:System.Data.IDbTransaction.Rollback> метод.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает и возвращает объект Command, связанный с подключением.</summary>
        <returns>Объект Command, связанный с подключением.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый объект, являющийся копией текущего экземпляра.</summary>
        <returns>Новый объект, являющийся копией этого экземпляра.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.SqlClient.SqlConnection> приведен к типу интерфейса <xref:System.ICloneable>.  
  
 Этот элемент поддерживается только платформой .NET Compact Framework.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WorkstationId">
      <MemberSignature Language="C#" Value="public string WorkstationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkstationId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkstationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkstationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkstationId : string" Usage="System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_WorkstationId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку, определяющую клиента базы данных.</summary>
        <value>Строка, определяющая клиента базы данных. Если не задана, то имя клиентского компьютера. Если ни одно из значений не определено, значением является пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка обычно содержит имя клиента. <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> Свойство соответствует `Workstation ID` свойство строки подключения.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection> и отображает <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> свойство.  
  
 [!code-csharp[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server и ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Общие сведения о ADO.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>