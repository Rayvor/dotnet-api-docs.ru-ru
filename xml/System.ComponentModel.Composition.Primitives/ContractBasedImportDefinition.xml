<Type Name="ContractBasedImportDefinition" FullName="System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="189953f3f84def93907ba46f3551d359ec8e2e7e" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75150175" /></Metadata><TypeSignature Language="C#" Value="public class ContractBasedImportDefinition : System.ComponentModel.Composition.Primitives.ImportDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractBasedImportDefinition extends System.ComponentModel.Composition.Primitives.ImportDefinition" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractBasedImportDefinition&#xA;Inherits ImportDefinition" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractBasedImportDefinition : System::ComponentModel::Composition::Primitives::ImportDefinition" />
  <TypeSignature Language="F#" Value="type ContractBasedImportDefinition = class&#xA;    inherit ImportDefinition" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ImportDefinition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4d723-101">Представляет необходимый для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> импорт, который может указать и имя контракта, и метаданные.</span><span class="sxs-lookup"><span data-stu-id="4d723-101">Represents an import that is required by a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> object and that can specify both a contract name and metadata.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d723-102">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContractBasedImportDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ContractBasedImportDefinition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d723-103">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## <a name="note-to-inheritors"></a><span data-ttu-id="4d723-104">Примечание к наследникам</span><span class="sxs-lookup"><span data-stu-id="4d723-104">Note to inheritors</span></span>

<span data-ttu-id="4d723-105">Производные типы, вызывающие этот конструктор, при необходимости могут переопределять свойства <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName>, <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity>, <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata>, <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality>, <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite>, <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable> и <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy>.</span><span class="sxs-lookup"><span data-stu-id="4d723-105">Derived types calling this constructor can optionally override the <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName>, <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity>, <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata>, <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality>, <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite>, <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable> and <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy> properties.</span></span>
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, isPrerequisite As Boolean, requiredCreationPolicy As CreationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractBasedImportDefinition(System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, Type&gt;&gt; * System.ComponentModel.Composition.Primitives.ImportCardinality * bool * bool * System.ComponentModel.Composition.CreationPolicy -&gt; System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" Usage="new System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition (contractName, requiredTypeIdentity, requiredMetadata, cardinality, isRecomposable, isPrerequisite, requiredCreationPolicy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="4d723-106">Имя контракта объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, необходимое для определения импорта.</span><span class="sxs-lookup"><span data-stu-id="4d723-106">The contract name of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object required by the import definition.</span></span></param>
        <param name="requiredTypeIdentity"><span data-ttu-id="4d723-107">Удостоверение ожидаемого типа экспорта.</span><span class="sxs-lookup"><span data-stu-id="4d723-107">The type identity of the export type expected.</span></span> <span data-ttu-id="4d723-108">Для создания удостоверения заданного типа используется метод <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-108">Use the <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> method to generate a type identity for a given type.</span></span> <span data-ttu-id="4d723-109">Если конкретный тип не требуется, используйте значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-109">If no specific type is required, use <see langword="null" />.</span></span></param>
        <param name="requiredMetadata"><span data-ttu-id="4d723-110">Коллекция пар "ключ-значение", содержащих имена метаданных и типы, необходимые для определения импорта; или значение <see langword="null" />, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /> пустую коллекцию <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-110">A collection of key/value pairs that contain the metadata names and types required by the import definition; or <see langword="null" /> to set the <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /> property to an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection.</span></span></param>
        <param name="cardinality"><span data-ttu-id="4d723-111">Одно из значений перечисления, указывающее количество элементов объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, необходимых для определения импорта.</span><span class="sxs-lookup"><span data-stu-id="4d723-111">One of the enumeration values that indicates the cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects required by the import definition.</span></span></param>
        <param name="isRecomposable"><span data-ttu-id="4d723-112">Значение <see langword="true" />, указывающее, что определение импорта может удовлетворяться несколько раз на протяжении времени жизни объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-112"><see langword="true" /> to specify that the import definition can be satisfied multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="isPrerequisite"><span data-ttu-id="4d723-113">Значение <see langword="true" />, указывающее, что определение импорта должно удовлетворяться, прежде чем объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> сможет начать создание экспортированных объектов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-113"><see langword="true" /> to specify that the import definition is required to be satisfied before a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> can start producing exported objects; otherwise, <see langword="false" />.</span></span></param>
        <param name="requiredCreationPolicy"><span data-ttu-id="4d723-114">Значение, указывающее, что импортеру требуется определенная политика создания для экспортов, используемых для удовлетворения данного импорта.</span><span class="sxs-lookup"><span data-stu-id="4d723-114">A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import.</span></span> <span data-ttu-id="4d723-115">Если конкретное значение политики создания не требуется, используется значение по умолчанию <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-115">If no specific creation policy is needed, the default is <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />.</span></span></param>
        <summary><span data-ttu-id="4d723-116">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />, используя указанные имя контракта, требуемое удостоверение типа, обязательные метаданные, количество элементов и политику создания, а также указывает, является ли определение импорта предварительным условием или разрешает рекомпозицию.</span><span class="sxs-lookup"><span data-stu-id="4d723-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> class with the specified contract name, required type identity, required metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d723-117"><paramref name="contractName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-117"><paramref name="contractName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4d723-118">Параметр <paramref name="contractName" /> является пустой строкой ("").</span><span class="sxs-lookup"><span data-stu-id="4d723-118"><paramref name="contractName" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="4d723-119">-или-</span><span class="sxs-lookup"><span data-stu-id="4d723-119">-or-</span></span> 
 <span data-ttu-id="4d723-120">Параметр <paramref name="requiredMetadata" /> содержит элемент, равный <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-120"><paramref name="requiredMetadata" /> contains an element that is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4d723-121">-или-</span><span class="sxs-lookup"><span data-stu-id="4d723-121">-or-</span></span> 
 <span data-ttu-id="4d723-122"><paramref name="cardinality" /> не является одним из значений <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-122"><paramref name="cardinality" /> is not one of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, isPrerequisite As Boolean, requiredCreationPolicy As CreationPolicy, metadata As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractBasedImportDefinition(System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, Type&gt;&gt; * System.ComponentModel.Composition.Primitives.ImportCardinality * bool * bool * System.ComponentModel.Composition.CreationPolicy * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" Usage="new System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition (contractName, requiredTypeIdentity, requiredMetadata, cardinality, isRecomposable, isPrerequisite, requiredCreationPolicy, metadata)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="isRecomposable" Type="System.Boolean" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" Index="5" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" Index="6" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" Index="7" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="4d723-123">Имя контракта объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, необходимое для определения импорта.</span><span class="sxs-lookup"><span data-stu-id="4d723-123">The contract name of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object required by the import definition.</span></span></param>
        <param name="requiredTypeIdentity"><span data-ttu-id="4d723-124">Удостоверение ожидаемого типа экспорта.</span><span class="sxs-lookup"><span data-stu-id="4d723-124">The type identity of the export type expected.</span></span> <span data-ttu-id="4d723-125">Для создания удостоверения заданного типа используется метод <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-125">Use the <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> method to generate a type identity for a given type.</span></span> <span data-ttu-id="4d723-126">Если конкретный тип не требуется, используйте значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-126">If no specific type is required, use <see langword="null" />.</span></span></param>
        <param name="requiredMetadata"><span data-ttu-id="4d723-127">Коллекция пар "ключ-значение", содержащих имена метаданных и типы, необходимые для определения импорта; или значение <see langword="null" />, чтобы задать для свойства <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /> пустую коллекцию <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-127">A collection of key/value pairs that contain the metadata names and types required by the import definition; or <see langword="null" /> to set the <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /> property to an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection.</span></span></param>
        <param name="cardinality"><span data-ttu-id="4d723-128">Одно из значений перечисления, указывающее количество элементов объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, необходимых для определения импорта.</span><span class="sxs-lookup"><span data-stu-id="4d723-128">One of the enumeration values that indicates the cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects required by the import definition.</span></span></param>
        <param name="isRecomposable"><span data-ttu-id="4d723-129">Значение <see langword="true" />, указывающее, что определение импорта может удовлетворяться несколько раз на протяжении времени жизни объекта <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-129"><see langword="true" /> to specify that the import definition can be satisfied multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="isPrerequisite"><span data-ttu-id="4d723-130">Значение <see langword="true" />, указывающее, что определение импорта должно удовлетворяться, прежде чем объект <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> сможет начать создание экспортированных объектов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-130"><see langword="true" /> to specify that the import definition is required to be satisfied before a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> can start producing exported objects; otherwise, <see langword="false" />.</span></span></param>
        <param name="requiredCreationPolicy"><span data-ttu-id="4d723-131">Значение, указывающее, что импортеру требуется определенная политика создания для экспортов, используемых для удовлетворения данного импорта.</span><span class="sxs-lookup"><span data-stu-id="4d723-131">A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import.</span></span> <span data-ttu-id="4d723-132">Если конкретное значение политики создания не требуется, используется значение по умолчанию <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-132">If no specific creation policy is needed, the default is <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />.</span></span></param>
        <param name="metadata"><span data-ttu-id="4d723-133">Метаданные, связанные с данным импортом.</span><span class="sxs-lookup"><span data-stu-id="4d723-133">The metadata associated with this import.</span></span></param>
        <summary><span data-ttu-id="4d723-134">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />, используя указанные имя контракта, требуемое удостоверение типа, обязательные и необязательные метаданные, количество элементов и политику создания, а также указывает, является ли определение импорта предварительным условием или разрешает рекомпозицию.</span><span class="sxs-lookup"><span data-stu-id="4d723-134">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> class with the specified contract name, required type identity, required and optional metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d723-135"><paramref name="contractName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-135"><paramref name="contractName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4d723-136">Параметр <paramref name="contractName" /> является пустой строкой ("").</span><span class="sxs-lookup"><span data-stu-id="4d723-136"><paramref name="contractName" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="4d723-137">-или-</span><span class="sxs-lookup"><span data-stu-id="4d723-137">-or-</span></span> 
 <span data-ttu-id="4d723-138">Параметр <paramref name="requiredMetadata" /> содержит элемент, равный <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-138"><paramref name="requiredMetadata" /> contains an element that is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4d723-139">-или-</span><span class="sxs-lookup"><span data-stu-id="4d723-139">-or-</span></span> 
 <span data-ttu-id="4d723-140"><paramref name="cardinality" /> не является одним из значений <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-140"><paramref name="cardinality" /> is not one of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Constraint">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression&lt;Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,bool&gt;&gt; Constraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition, bool&gt;&gt; Constraint" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Constraint As Expression(Of Func(Of ExportDefinition, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::Expressions::Expression&lt;Func&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^, bool&gt; ^&gt; ^ Constraint { System::Linq::Expressions::Expression&lt;Func&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^, bool&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constraint : System.Linq.Expressions.Expression&lt;Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition, bool&gt;&gt;" Usage="System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d723-141">Получает выражение, которое определяет условия, которые должны удовлетворяться импортом, описанным данным определением импорта.</span><span class="sxs-lookup"><span data-stu-id="4d723-141">Gets an expression that defines conditions that must be matched to satisfy the import described by this import definition.</span></span></summary>
        <value><span data-ttu-id="4d723-142">Выражение, содержащее объект <see cref="T:System.Func`2" />, определяющий условия, которые должны соответствовать определению <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> для их удовлетворения объектом <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-142">An expression that contains a <see cref="T:System.Func`2" /> object that defines the conditions that must be matched for the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> to be satisfied by an <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="4d723-143">Это свойство возвращает выражение, определяющее условия на основе свойств <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName>, <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity>, <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata>и <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy>.</span><span class="sxs-lookup"><span data-stu-id="4d723-143">This property returns an expression that defines conditions based on the <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName>, <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity>, <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata>, and <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy> properties.</span></span> 
                ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstraintSatisfiedBy">
      <MemberSignature Language="C#" Value="public override bool IsConstraintSatisfiedBy (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsConstraintSatisfiedBy(class System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsConstraintSatisfiedBy(System::ComponentModel::Composition::Primitives::ExportDefinition ^ exportDefinition);" />
      <MemberSignature Language="F#" Value="override this.IsConstraintSatisfiedBy : System.ComponentModel.Composition.Primitives.ExportDefinition -&gt; bool" Usage="contractBasedImportDefinition.IsConstraintSatisfiedBy exportDefinition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportDefinition" Type="System.ComponentModel.Composition.Primitives.ExportDefinition" />
      </Parameters>
      <Docs>
        <param name="exportDefinition"><span data-ttu-id="4d723-144">Проверяемое определение экспорта.</span><span class="sxs-lookup"><span data-stu-id="4d723-144">The export definition to test.</span></span></param>
        <summary><span data-ttu-id="4d723-145">Возвращает значение, указывающее, удовлетворяет ли экспорт, представленный заданным определением экспорта, ограничению, представленному данным объектом.</span><span class="sxs-lookup"><span data-stu-id="4d723-145">Returns a value indicating whether the constraint represented by this object is satisfied by the export represented by the given export definition.</span></span></summary>
        <returns><span data-ttu-id="4d723-146">Значение <see langword="true" />, если ограничение удовлетворяется; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-146"><see langword="true" /> if the constraint is satisfied; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## <a name="note-to-inheritors"></a><span data-ttu-id="4d723-147">Примечание к наследникам</span><span class="sxs-lookup"><span data-stu-id="4d723-147">Note to inheritors</span></span>

<span data-ttu-id="4d723-148">Переопределения этого метода могут обеспечить более оптимизированное выполнение свойства <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint>, но результат должен оставаться единообразным.</span><span class="sxs-lookup"><span data-stu-id="4d723-148">Overrides of this method can provide a more optimized execution of the <xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint> property, but the result should remain consistent.</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d723-149"><paramref name="exportDefinition" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-149"><paramref name="exportDefinition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredCreationPolicy As CreationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Composition::CreationPolicy RequiredCreationPolicy { System::ComponentModel::Composition::CreationPolicy get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredCreationPolicy : System.ComponentModel.Composition.CreationPolicy" Usage="System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d723-150">Получает или задает значение, указывающее, что импортеру требуется определенная политика <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> для экспортов, используемых для удовлетворения данного импорта.</span><span class="sxs-lookup"><span data-stu-id="4d723-150">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span></span></summary>
        <value><span data-ttu-id="4d723-151">Одно из следующих значений:</span><span class="sxs-lookup"><span data-stu-id="4d723-151">One of the following values:</span></span> 
 <span data-ttu-id="4d723-152">Значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, если импортеру не требуется определенная политика <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-152"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, if the importer does not require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span></span>  
  
 <span data-ttu-id="4d723-153">Значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" />, если необходимо, чтобы все используемые экспорты совместно использовались всеми импортерами в контейнере.</span><span class="sxs-lookup"><span data-stu-id="4d723-153"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> to require that all exports used should be shared by all importers in the container.</span></span>  
  
 <span data-ttu-id="4d723-154">Значение <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" />, если необходимо не предоставлять общий доступ ко всем используемым экспортам в контейнере.</span><span class="sxs-lookup"><span data-stu-id="4d723-154"><see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> to require that all exports used should be non-shared in the container.</span></span> <span data-ttu-id="4d723-155">В этом случае каждый импортер получает отдельный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="4d723-155">In this case, each importer receives a separate instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredMetadata">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; RequiredMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; RequiredMetadata" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ RequiredMetadata { System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredMetadata : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, Type&gt;&gt;" Usage="System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d723-156">Получает имена метаданных экспорта, необходимого для определения импорта.</span><span class="sxs-lookup"><span data-stu-id="4d723-156">Gets the metadata names of the export required by the import definition.</span></span></summary>
        <value><span data-ttu-id="4d723-157">Коллекция объектов <see cref="T:System.String" />, содержащих имена метаданных объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, необходимых для объекта <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-157">A collection of <see cref="T:System.String" /> objects that contain the metadata names of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects required by the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</span></span> <span data-ttu-id="4d723-158">По умолчанию используется пустая коллекция <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-158">The default is an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d723-159">Переопределения этого свойства никогда не должны возвращать `null` или возвращать коллекцию <xref:System.Collections.Generic.IEnumerable%601>, содержащую элемент, который `null`.</span><span class="sxs-lookup"><span data-stu-id="4d723-159">Overrides of this property should never return `null` or return an <xref:System.Collections.Generic.IEnumerable%601> collection that contains an element that is `null`.</span></span> <span data-ttu-id="4d723-160">Если определение не содержит обязательных метаданных, вместо этого возвращается пустая коллекция <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="4d723-160">If the definition does not contain required metadata, return an empty <xref:System.Collections.Generic.IEnumerable%601> collection instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredTypeIdentity">
      <MemberSignature Language="C#" Value="public virtual string RequiredTypeIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredTypeIdentity" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredTypeIdentity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequiredTypeIdentity { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredTypeIdentity : string" Usage="System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d723-161">Получает ожидаемый тип экспорта, соответствующего данному объекту <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-161">Gets the expected type of the export that matches this <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</span></span></summary>
        <value><span data-ttu-id="4d723-162">Строка, создаваемая путем вызова метода <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> для типа, ожидаемого данным импортом.</span><span class="sxs-lookup"><span data-stu-id="4d723-162">A string that is generated by calling the <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> method on the type that this import expects.</span></span> <span data-ttu-id="4d723-163">Если значение равно <see langword="null" />, импорт не ожидает определенный тип.</span><span class="sxs-lookup"><span data-stu-id="4d723-163">If the value is <see langword="null" />, this import does not expect a particular type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="contractBasedImportDefinition.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d723-164">Возвращает строковое представление конкретного объекта <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-164">Returns the string representation of this <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> object.</span></span></summary>
        <returns><span data-ttu-id="4d723-165">Строковое представление конкретного объекта <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="4d723-165">The string representation of this <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
