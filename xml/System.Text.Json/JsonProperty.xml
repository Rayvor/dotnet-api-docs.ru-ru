<Type Name="JsonProperty" FullName="System.Text.Json.JsonProperty">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97a33a9870919794556a604b066a2d650f6717de" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70528905" /></Metadata><TypeSignature Language="C#" Value="public struct JsonProperty" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonProperty extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonProperty" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonProperty" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonProperty" />
  <TypeSignature Language="F#" Value="type JsonProperty = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет одно свойство объекта JSON.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Text.Json.JsonProperty.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя данного свойства.</summary>
        <value>Имя данного свойства.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameEquals">
      <MemberSignature Language="C#" Value="public bool NameEquals (ReadOnlySpan&lt;byte&gt; utf8Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool NameEquals(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonProperty.NameEquals(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function NameEquals (utf8Text As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool NameEquals(ReadOnlySpan&lt;System::Byte&gt; utf8Text);" />
      <MemberSignature Language="F#" Value="member this.NameEquals : ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="jsonProperty.NameEquals utf8Text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Text" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8Text">Текст в кодировке UTF-8, с которым производится сравнение.</param>
        <summary>Сравнивает указанный текст в кодировке UTF-8 с именем этого свойства.</summary>
        <returns>Значение <see langword="true" />, если имя этого свойства имеет ту же кодировку UTF-8, что и <paramref name="utf8Text" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Этот метод функционально равен выполнению порядкового сравнения `utf8Text` и <xref:System.Text.Json.JsonProperty.Name>, но может не создавать экземпляр строки.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Type" /> этого значения не является <see cref="F:System.Text.Json.JsonTokenType.PropertyName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NameEquals">
      <MemberSignature Language="C#" Value="public bool NameEquals (ReadOnlySpan&lt;char&gt; text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool NameEquals(valuetype System.ReadOnlySpan`1&lt;char&gt; text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonProperty.NameEquals(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function NameEquals (text As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool NameEquals(ReadOnlySpan&lt;char&gt; text);" />
      <MemberSignature Language="F#" Value="member this.NameEquals : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="jsonProperty.NameEquals text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="text">Текст, с которым выполняется сравнение.</param>
        <summary>Сравнивает указанный текст как диапазон символов с именем этого свойства.</summary>
        <returns>Значение <see langword="true" />, если имя этого свойства совпадает с <paramref name="text" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Этот метод функционально равен выполнению порядкового сравнения `text` и <xref:System.Text.Json.JsonProperty.Name>, но может не создавать экземпляр строки.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Type" /> этого значения не является <see cref="F:System.Text.Json.JsonTokenType.PropertyName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NameEquals">
      <MemberSignature Language="C#" Value="public bool NameEquals (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool NameEquals(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonProperty.NameEquals(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function NameEquals (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool NameEquals(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.NameEquals : string -&gt; bool" Usage="jsonProperty.NameEquals text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст, с которым выполняется сравнение.</param>
        <summary>Сравнивает указанную строку с именем этого свойства.</summary>
        <returns>Значение <see langword="true" />, если имя этого свойства совпадает с <paramref name="text" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Этот метод функционально равен выполнению порядкового сравнения `text` и. <xref:System.Text.Json.JsonProperty.Name>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Type" /> этого значения не является <see cref="F:System.Text.Json.JsonTokenType.PropertyName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonProperty.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="jsonProperty.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Предоставляет строковое представление свойства для целей отладки.</summary>
        <returns>Строка, содержащая неинтерпретированное значение свойства, начинающаяся с объявляющей открывающей кавычки и заканчивающаяся последним символом, который является частью значения.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonElement Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonProperty.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonElement Value { System::Text::Json::JsonElement get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : System.Text.Json.JsonElement" Usage="System.Text.Json.JsonProperty.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение свойства.</summary>
        <value>Значение этого свойства.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonProperty.WriteTo(System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteTo (writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteTo : System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonProperty.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Модуль записи, в который необходимо записать свойство.</param>
        <summary>Записывает свойство в предоставленный модуль записи как свойство именованного объекта JSON.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="writer" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Text.Json.JsonProperty.Name" /> слишком велико, чтобы быть свойством объекта JSON.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого свойства JSON <see cref="P:System.Text.Json.JsonProperty.Value" /> приведет к недопустимому JSON.</exception>
        <exception cref="T:System.ObjectDisposedException">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
