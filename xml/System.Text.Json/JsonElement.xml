<Type Name="JsonElement" FullName="System.Text.Json.JsonElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8837dd42e7c7082f5bce957a2dbf4d39422e713c" /><Meta Name="ms.sourcegitcommit" Value="406d23aba879fbb482c6da0f64c8ef9494f6a944" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/31/2019" /><Meta Name="ms.locfileid" Value="68686156" /></Metadata><TypeSignature Language="C#" Value="public struct JsonElement" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonElement extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonElement" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonElement" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonElement" />
  <TypeSignature Language="F#" Value="type JsonElement = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="481a7-101">Представляет определенное значение JSON в <see cref="T:System.Text.Json.JsonDocument" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-101">Represents a specific JSON value within a <see cref="T:System.Text.Json.JsonDocument" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Text.Json.JsonElement" Usage="jsonElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-102">Возвращает JsonElement, который можно безопасно хранить по истечении времени существования исходного <see cref="T:System.Text.Json.JsonDocument" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-102">Gets a JsonElement that can be safely stored beyond the lifetime of the original <see cref="T:System.Text.Json.JsonDocument" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-103">JsonElement, который можно безопасно хранить по истечении времени существования исходного <see cref="T:System.Text.Json.JsonDocument" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-103">A JsonElement that can be safely stored beyond the lifetime of the original <see cref="T:System.Text.Json.JsonDocument" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-104">Если это жсонелемент, выходные данные предыдущего вызова `Clone` или значения, содержащиеся в другом жсонелемент, который был выходным результатом предыдущего вызова, этот метод не приводит к `Clone`дополнительной выделению памяти.</span><span class="sxs-lookup"><span data-stu-id="481a7-104">If this JsonElement is itself the output of a previous call to `Clone` or a value contained within another JsonElement which was the output of a previous call to `Clone`, this method results in no additional memory allocation.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateArray">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement.ArrayEnumerator EnumerateArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement/ArrayEnumerator EnumerateArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.EnumerateArray" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateArray () As JsonElement.ArrayEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement::ArrayEnumerator EnumerateArray();" />
      <MemberSignature Language="F#" Value="member this.EnumerateArray : unit -&gt; System.Text.Json.JsonElement.ArrayEnumerator" Usage="jsonElement.EnumerateArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement+ArrayEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-105">Возвращает перечислитель для перечисления значений в массиве JSON, представленном этим JsonElement.</span><span class="sxs-lookup"><span data-stu-id="481a7-105">Gets an enumerator to enumerate the values in the JSON array represented by this JsonElement.</span></span></summary>
        <returns><span data-ttu-id="481a7-106">Перечислитель для перечисления значений в массиве JSON, представленном этим JsonElement.</span><span class="sxs-lookup"><span data-stu-id="481a7-106">An enumerator to enumerate the values in the JSON array represented by this JsonElement.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-107"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Array" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-107">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Array" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-108">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-108">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateObject">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement.ObjectEnumerator EnumerateObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement/ObjectEnumerator EnumerateObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.EnumerateObject" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateObject () As JsonElement.ObjectEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement::ObjectEnumerator EnumerateObject();" />
      <MemberSignature Language="F#" Value="member this.EnumerateObject : unit -&gt; System.Text.Json.JsonElement.ObjectEnumerator" Usage="jsonElement.EnumerateObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement+ObjectEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-109">Возвращает перечислитель для перечисления свойств в объекте JSON, представленном этим JsonElement.</span><span class="sxs-lookup"><span data-stu-id="481a7-109">Gets an enumerator to enumerate the properties in the JSON object represented by this JsonElement.</span></span></summary>
        <returns><span data-ttu-id="481a7-110">Перечислитель для перечисления свойств в объекте JSON, представленном этим JsonElement.</span><span class="sxs-lookup"><span data-stu-id="481a7-110">An enumerator to enumerate the properties in the JSON object represented by this JsonElement.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-111"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-111">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-112">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-112">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetArrayLength">
      <MemberSignature Language="C#" Value="public int GetArrayLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetArrayLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetArrayLength" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayLength () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetArrayLength();" />
      <MemberSignature Language="F#" Value="member this.GetArrayLength : unit -&gt; int" Usage="jsonElement.GetArrayLength " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-113">Возвращает количество значений, содержащихся в текущем значении массива.</span><span class="sxs-lookup"><span data-stu-id="481a7-113">Gets the number of values contained within the current array value.</span></span></summary>
        <returns><span data-ttu-id="481a7-114">Количество значений, содержащихся в текущем значении массива.</span><span class="sxs-lookup"><span data-stu-id="481a7-114">The number of values contained within the current array value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-115"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Array" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-115">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Array" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-116">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-116">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public bool GetBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetBoolean();" />
      <MemberSignature Language="F#" Value="member this.GetBoolean : unit -&gt; bool" Usage="jsonElement.GetBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-117">Возвращает значение элемента в виде <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-117">Gets the value of the element as a <see cref="T:System.Boolean" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-118">Значение элемента в виде <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-118">The value of the element as a <see cref="T:System.Boolean" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-119">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-119">This method does not parse the contents of a JSON string value.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-120"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является ни <see cref="F:System.Text.Json.JsonValueKind.True" />, ни <see cref="F:System.Text.Json.JsonValueKind.False" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-120">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is neither <see cref="F:System.Text.Json.JsonValueKind.True" /> nor <see cref="F:System.Text.Json.JsonValueKind.False" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-121">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-121">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public byte GetByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8 GetByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetByte" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByte () As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Byte GetByte();" />
      <MemberSignature Language="F#" Value="member this.GetByte : unit -&gt; byte" Usage="jsonElement.GetByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytesFromBase64">
      <MemberSignature Language="C#" Value="public byte[] GetBytesFromBase64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBytesFromBase64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetBytesFromBase64" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBytesFromBase64 () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetBytesFromBase64();" />
      <MemberSignature Language="F#" Value="member this.GetBytesFromBase64 : unit -&gt; byte[]" Usage="jsonElement.GetBytesFromBase64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-122">Возвращает значение элемента в виде массива байтов.</span><span class="sxs-lookup"><span data-stu-id="481a7-122">Gets the value of the element as a byte array.</span></span></summary>
        <returns><span data-ttu-id="481a7-123">Значение, декодированное как массив байтов.</span><span class="sxs-lookup"><span data-stu-id="481a7-123">The value decoded as a byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="481a7-124">Этот метод не создает байтовое представление значений, отличных от базовых строк JSON в кодировке 64.</span><span class="sxs-lookup"><span data-stu-id="481a7-124">This method does not create a byte representation of values other than base 64-encoded JSON strings.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-125"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.String" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-125">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="481a7-126">Значение не закодировано в тексте Base64 и поэтому не может быть декодировано в байты.</span><span class="sxs-lookup"><span data-stu-id="481a7-126">The value is not encoded as base 64 text and hence cannot be decoded to bytes.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-127">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-127">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public DateTime GetDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetDateTime();" />
      <MemberSignature Language="F#" Value="member this.GetDateTime : unit -&gt; DateTime" Usage="jsonElement.GetDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-128">Возвращает значение элемента в виде <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-128">Gets the value of the element as a <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-129">Значение элемента в виде <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-129">The value of the element as a <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-130">Этот метод не создает представление DateTime значений, отличных от строк JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-130">This method does not create a DateTime representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-131"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.String" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-131">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="481a7-132">Значение невозможно представить в виде <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-132">The value cannot be represented as a <see cref="T:System.DateTime" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-133">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-133">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeOffset">
      <MemberSignature Language="C#" Value="public DateTimeOffset GetDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset GetDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeOffset () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset GetDateTimeOffset();" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeOffset : unit -&gt; DateTimeOffset" Usage="jsonElement.GetDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-134">Возвращает значение элемента в виде <see cref="T:System.DateTimeOffset" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-134">Gets the value of the element as a <see cref="T:System.DateTimeOffset" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-135">Значение элемента в виде <see cref="T:System.DateTimeOffset" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-135">The value of the element as a <see cref="T:System.DateTimeOffset" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-136">Этот метод не создает представление DateTimeOffset значений, отличных от строк JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-136">This method does not create a DateTimeOffset representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-137"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.String" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-137">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="481a7-138">Значение невозможно представить в виде <see cref="T:System.DateTimeOffset" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-138">The value cannot be represented as a <see cref="T:System.DateTimeOffset" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-139">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-139">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public decimal GetDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Decimal GetDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Decimal GetDecimal();" />
      <MemberSignature Language="F#" Value="member this.GetDecimal : unit -&gt; decimal" Usage="jsonElement.GetDecimal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-140">Возвращает текущий номер JSON в виде <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-140">Gets the current JSON number as a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-141">Текущий номер JSON в виде <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-141">The current JSON number as a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
          This method does not parse the contents of a JSON string value.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-142"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-142">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="481a7-143">Значение невозможно представить в виде <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-143">The value cannot be represented as a <see cref="T:System.Decimal" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-144">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-144">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public double GetDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetDouble" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetDouble();" />
      <MemberSignature Language="F#" Value="member this.GetDouble : unit -&gt; double" Usage="jsonElement.GetDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-145">Возвращает текущий номер JSON в виде <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-145">Gets the current JSON number as a <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-146">Текущий номер JSON в виде <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-146">The current JSON number as a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-147">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-147">This method does not parse the contents of a JSON string value.</span></span>
               
<span data-ttu-id="481a7-148">В .NET Core этот метод <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> возвращает значения <xref:System.Double.MaxValue?displayProperty=nameWithType>, превышающие, и <xref:System.Double.MinValue?displayProperty=nameWithType>возвращает <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> для значений меньше.</span><span class="sxs-lookup"><span data-stu-id="481a7-148">On .NET Core, this method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>  for values larger than <xref:System.Double.MaxValue?displayProperty=nameWithType>, and it returns <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> for values smaller than <xref:System.Double.MinValue?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-149"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-149">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="481a7-150">Значение невозможно представить в виде <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-150">The value cannot be represented as a <see cref="T:System.Double" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-151">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-151">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public Guid GetGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid GetGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGuid () As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Guid GetGuid();" />
      <MemberSignature Language="F#" Value="member this.GetGuid : unit -&gt; Guid" Usage="jsonElement.GetGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-152">Возвращает значение элемента в виде <see cref="T:System.Guid" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-152">Gets the value of the element as a <see cref="T:System.Guid" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-153">Значение элемента в виде <see cref="T:System.Guid" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-153">The value of the element as a <see cref="T:System.Guid" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-154">Этот метод не создает представление GUID для значений, отличных от строк JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-154">This method does not create a Guid representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-155"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.String" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-155">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="481a7-156">Значение невозможно представить в виде <see cref="T:System.Guid" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-156">The value cannot be represented as a <see cref="T:System.Guid" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-157">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-157">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public short GetInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int16 GetInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetInt16" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt16 () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short GetInt16();" />
      <MemberSignature Language="F#" Value="member this.GetInt16 : unit -&gt; int16" Usage="jsonElement.GetInt16 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public int GetInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetInt32" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt32 () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetInt32();" />
      <MemberSignature Language="F#" Value="member this.GetInt32 : unit -&gt; int" Usage="jsonElement.GetInt32 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-158">Возвращает текущий номер JSON в виде <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-158">Gets the current JSON number as an <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-159">Текущий номер JSON в виде <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-159">The current JSON number as an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-160"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-160">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="481a7-161">Значение невозможно представить в виде <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-161">The value cannot be represented as an <see cref="T:System.Int32" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-162">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-162">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public long GetInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetInt64" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt64 () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetInt64();" />
      <MemberSignature Language="F#" Value="member this.GetInt64 : unit -&gt; int64" Usage="jsonElement.GetInt64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-163">Возвращает текущий номер JSON в виде <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-163">Gets the current JSON number as an <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-164">Текущий номер JSON в виде <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-164">The current JSON number as an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-165">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-165">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-166"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-166">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="481a7-167">Значение невозможно представить в виде <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-167">The value cannot be represented as a <see cref="T:System.Int64" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-168">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-168">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement GetProperty (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement GetProperty(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetProperty(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (utf8PropertyName As ReadOnlySpan(Of Byte)) As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement GetProperty(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : ReadOnlySpan&lt;byte&gt; -&gt; System.Text.Json.JsonElement" Usage="jsonElement.GetProperty utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="481a7-169">Представление в кодировке UTF-8 (без метки порядка байтов) для имени возвращаемого свойства.</span><span class="sxs-lookup"><span data-stu-id="481a7-169">The UTF-8 representation (with no Byte-Order-Mark (BOM)) of the name of the property to return.</span></span></param>
        <summary><span data-ttu-id="481a7-170">Возвращает <see cref="T:System.Text.Json.JsonElement" />, представляющий значение требуемого свойства, определяемого по <paramref name="utf8PropertyName" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-170">Gets a <see cref="T:System.Text.Json.JsonElement" /> representing the value of a required property identified by <paramref name="utf8PropertyName" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-171"><see cref="T:System.Text.Json.JsonElement" />, представляющий значение запрошенного свойства.</span><span class="sxs-lookup"><span data-stu-id="481a7-171">A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the requested property.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-172">Сопоставление имен свойств выполняется как порядковый номер, сравнение с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="481a7-172">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>
               
<span data-ttu-id="481a7-173">Если свойство определено несколько раз для одного и того же объекта, метод соответствует последнему такому определению.</span><span class="sxs-lookup"><span data-stu-id="481a7-173">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-174"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-174">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="481a7-175">Свойство с запрошенным именем не найдено.</span><span class="sxs-lookup"><span data-stu-id="481a7-175">No property was found with the requested name.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-176">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-176">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement GetProperty (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement GetProperty(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetProperty(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (propertyName As ReadOnlySpan(Of Char)) As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement GetProperty(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : ReadOnlySpan&lt;char&gt; -&gt; System.Text.Json.JsonElement" Usage="jsonElement.GetProperty propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="481a7-177">Имя свойства, значение которого требуется возвратить.</span><span class="sxs-lookup"><span data-stu-id="481a7-177">The name of the property whose value is to be returned.</span></span></param>
        <summary><span data-ttu-id="481a7-178">Возвращает <see cref="T:System.Text.Json.JsonElement" />, представляющий значение требуемого свойства, определяемого по <paramref name="propertyName" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-178">Gets a <see cref="T:System.Text.Json.JsonElement" /> representing the value of a required property identified by <paramref name="propertyName" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-179"><see cref="T:System.Text.Json.JsonElement" />, представляющий значение запрошенного свойства.</span><span class="sxs-lookup"><span data-stu-id="481a7-179">A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the requested property.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-180">Сопоставление имен свойств выполняется как порядковый номер, сравнение с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="481a7-180">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>
               
<span data-ttu-id="481a7-181">Если свойство определено несколько раз для одного и того же объекта, метод соответствует последнему такому определению.</span><span class="sxs-lookup"><span data-stu-id="481a7-181">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-182"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-182">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="481a7-183">Свойство с запрошенным именем не найдено.</span><span class="sxs-lookup"><span data-stu-id="481a7-183">No property was found with the requested name.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-184">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-184">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement GetProperty (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement GetProperty(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (propertyName As String) As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement GetProperty(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : string -&gt; System.Text.Json.JsonElement" Usage="jsonElement.GetProperty propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="481a7-185">Имя свойства, значение которого требуется возвратить.</span><span class="sxs-lookup"><span data-stu-id="481a7-185">The name of the property whose value is to be returned.</span></span></param>
        <summary><span data-ttu-id="481a7-186">Возвращает <see cref="T:System.Text.Json.JsonElement" />, представляющий значение требуемого свойства, определяемого по <paramref name="propertyName" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-186">Gets a <see cref="T:System.Text.Json.JsonElement" /> representing the value of a required property identified by <paramref name="propertyName" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-187"><see cref="T:System.Text.Json.JsonElement" />, представляющий значение запрошенного свойства.</span><span class="sxs-lookup"><span data-stu-id="481a7-187">A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the requested property.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-188">Сопоставление имен свойств выполняется как порядковый номер, сравнение с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="481a7-188">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>
            
<span data-ttu-id="481a7-189">Если свойство определено несколько раз для одного и того же объекта, метод соответствует последнему такому определению.</span><span class="sxs-lookup"><span data-stu-id="481a7-189">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-190"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-190">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="481a7-191">Свойство с запрошенным именем не найдено.</span><span class="sxs-lookup"><span data-stu-id="481a7-191">No property was found with the requested name.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="481a7-192"><paramref name="propertyName" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-192"><paramref name="propertyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-193">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-193">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRawText">
      <MemberSignature Language="C#" Value="public string GetRawText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRawText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetRawText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRawText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRawText();" />
      <MemberSignature Language="F#" Value="member this.GetRawText : unit -&gt; string" Usage="jsonElement.GetRawText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-194">Возвращает строку, представляющую исходные входные данные, на которых основано это значение.</span><span class="sxs-lookup"><span data-stu-id="481a7-194">Gets a string that represents the original input data backing this value.</span></span></summary>
        <returns><span data-ttu-id="481a7-195">Исходные входные данные, на которых основано это значение.</span><span class="sxs-lookup"><span data-stu-id="481a7-195">The original input data backing this value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-196">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-196">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSByte">
      <MemberSignature Language="C#" Value="public sbyte GetSByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int8 GetSByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetSByte" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSByte () As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::SByte GetSByte();" />
      <MemberSignature Language="F#" Value="member this.GetSByte : unit -&gt; sbyte" Usage="jsonElement.GetSByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSingle">
      <MemberSignature Language="C#" Value="public float GetSingle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetSingle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetSingle" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSingle () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetSingle();" />
      <MemberSignature Language="F#" Value="member this.GetSingle : unit -&gt; single" Usage="jsonElement.GetSingle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-197">Возвращает текущий номер JSON в виде <see cref="T:System.Single" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-197">Gets the current JSON number as a <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-198">Текущий номер JSON в виде <see cref="T:System.Single" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-198">The current JSON number as a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-199">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-199">This method does not parse the contents of a JSON string value.</span></span>
               
<span data-ttu-id="481a7-200">В .NET <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> Core этот метод возвращает для значений, <xref:System.Single.MaxValue?displayProperty=nameWithType> превышающих, <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> <xref:System.Single.MinValue?displayProperty=nameWithType>и для значений меньше.</span><span class="sxs-lookup"><span data-stu-id="481a7-200">On .NET Core, this method returns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> for values larger than <xref:System.Single.MaxValue?displayProperty=nameWithType> and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> for values smaller than <xref:System.Single.MinValue?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-201"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-201">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="481a7-202">Значение невозможно представить в виде <see cref="T:System.Single" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-202">The value cannot be represented as a <see cref="T:System.Single" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-203">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-203">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString();" />
      <MemberSignature Language="F#" Value="member this.GetString : unit -&gt; string" Usage="jsonElement.GetString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-204">Возвращает значение элемента в виде <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-204">Gets the value of the element as a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-205">Значение элемента в виде <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-205">The value of the element as a <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-206">Этот метод не создает строковое представление значений, отличных от строк JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-206">This method does not create a string representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-207"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является ни <see cref="F:System.Text.Json.JsonValueKind.String" />, ни <see cref="F:System.Text.Json.JsonValueKind.Null" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-207">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is neither <see cref="F:System.Text.Json.JsonValueKind.String" /> nor <see cref="F:System.Text.Json.JsonValueKind.Null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-208">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-208">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUInt16">
      <MemberSignature Language="C#" Value="public ushort GetUInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16 GetUInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetUInt16" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUInt16 () As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt16 GetUInt16();" />
      <MemberSignature Language="F#" Value="member this.GetUInt16 : unit -&gt; uint16" Usage="jsonElement.GetUInt16 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUInt32">
      <MemberSignature Language="C#" Value="public uint GetUInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 GetUInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetUInt32" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUInt32 () As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt32 GetUInt32();" />
      <MemberSignature Language="F#" Value="member this.GetUInt32 : unit -&gt; uint32" Usage="jsonElement.GetUInt32 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-209">Возвращает текущий номер JSON в виде <see cref="T:System.UInt32" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-209">Gets the current JSON number as a <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-210">Текущий номер JSON в виде <see cref="T:System.UInt32" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-210">The current JSON number as a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-211">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-211">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-212"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-212">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="481a7-213">Значение невозможно представить в виде <see cref="T:System.UInt32" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-213">The value cannot be represented as a <see cref="T:System.UInt32" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-214">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-214">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUInt64">
      <MemberSignature Language="C#" Value="public ulong GetUInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int64 GetUInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetUInt64" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUInt64 () As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt64 GetUInt64();" />
      <MemberSignature Language="F#" Value="member this.GetUInt64 : unit -&gt; uint64" Usage="jsonElement.GetUInt64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-215">Возвращает текущий номер JSON в виде <see cref="T:System.UInt64" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-215">Gets the current JSON number as a <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-216">Текущий номер JSON в виде <see cref="T:System.UInt64" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-216">The current JSON number as a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-217">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-217">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-218"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-218">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="481a7-219">Значение невозможно представить в виде <see cref="T:System.UInt64" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-219">The value cannot be represented as a <see cref="T:System.UInt64" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-220">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-220">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonElement Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonElement.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonElement default[int] { System::Text::Json::JsonElement get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Text.Json.JsonElement" Usage="System.Text.Json.JsonElement.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary><span data-ttu-id="481a7-221">Возвращает значение по указанному индексом, когда текущее значение равно <see cref="F:System.Text.Json.JsonValueKind.Array" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-221">Gets the value at a specified index when the current value is an <see cref="F:System.Text.Json.JsonValueKind.Array" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-222"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Array" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-222">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Array" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="481a7-223"><paramref name="index" /> не входит в диапазон [0, <see cref="M:System.Text.Json.JsonElement.GetArrayLength" />()).</span><span class="sxs-lookup"><span data-stu-id="481a7-223"><paramref name="index" /> is not in the range [0, <see cref="M:System.Text.Json.JsonElement.GetArrayLength" />()).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-224">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-224">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="jsonElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481a7-225">Возвращает строковое представление для текущего значения в соответствии с типом значения.</span><span class="sxs-lookup"><span data-stu-id="481a7-225">Gets a string representation for the current value appropriate to the value type.</span></span></summary>
        <returns><span data-ttu-id="481a7-226">Строковое представление для текущего значения в соответствии с типом значения.</span><span class="sxs-lookup"><span data-stu-id="481a7-226">A string representation for the current value appropriate to the value type.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-227">Для <xref:System.Text.Json.JsonValueKind.Null?displayProperty=nameWithType>возвращается. <xref:System.String.Empty?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="481a7-227">For <xref:System.Text.Json.JsonValueKind.Null?displayProperty=nameWithType>, <xref:System.String.Empty?displayProperty=nameWithType> is returned.</span></span>
               
<span data-ttu-id="481a7-228">Для <xref:System.Text.Json.JsonValueKind.True?displayProperty=nameWithType>возвращается. <xref:System.Boolean.TrueString?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="481a7-228">For <xref:System.Text.Json.JsonValueKind.True?displayProperty=nameWithType>, <xref:System.Boolean.TrueString?displayProperty=nameWithType> is returned.</span></span>
               
<span data-ttu-id="481a7-229">Для <xref:System.Text.Json.JsonValueKind.False?displayProperty=nameWithType>возвращается. <xref:System.Boolean.FalseString?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="481a7-229">For <xref:System.Text.Json.JsonValueKind.False?displayProperty=nameWithType>, <xref:System.Boolean.FalseString?displayProperty=nameWithType> is returned.</span></span>
               
<span data-ttu-id="481a7-230">Для <xref:System.Text.Json.JsonValueKind.String?displayProperty=nameWithType> возвращается<xref:System.Text.Json.JsonElement.GetString> значение.</span><span class="sxs-lookup"><span data-stu-id="481a7-230">For <xref:System.Text.Json.JsonValueKind.String?displayProperty=nameWithType>, the value of <xref:System.Text.Json.JsonElement.GetString> is returned.</span></span>
               
<span data-ttu-id="481a7-231">Для других типов возвращается значение <xref:System.Text.Json.JsonElement.GetRawText> .</span><span class="sxs-lookup"><span data-stu-id="481a7-231">For other types, the value of <xref:System.Text.Json.JsonElement.GetRawText> is returned.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-232">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-232">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetByte">
      <MemberSignature Language="C#" Value="public bool TryGetByte (out byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetByte([out] unsigned int8&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetByte(System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetByte (ByRef value As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetByte([Runtime::InteropServices::Out] System::Byte % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetByte :  -&gt; bool" Usage="jsonElement.TryGetByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetBytesFromBase64">
      <MemberSignature Language="C#" Value="public bool TryGetBytesFromBase64 (out byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetBytesFromBase64([out] unsigned int8[]&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetBytesFromBase64(System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetBytesFromBase64 (ByRef value As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetBytesFromBase64([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetBytesFromBase64 :  -&gt; bool" Usage="jsonElement.TryGetBytesFromBase64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="481a7-233">Если метод выполнен, содержит декодированное двоичное представление текста в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="481a7-233">If the method succeeds, contains the decoded binary representation of the base 64 text.</span></span></param>
        <summary><span data-ttu-id="481a7-234">Пытается представить текущую строку JSON в виде массива байтов, предполагая, что она в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="481a7-234">Attempts to represent the current JSON string as a byte array, assuming that it is base 64-encoded.</span></span></summary>
        <returns><span data-ttu-id="481a7-235"><see langword="true" />, если все значение токена закодировано как допустимый текст в Base64 и может быть успешно декодировано в байты.</span><span class="sxs-lookup"><span data-stu-id="481a7-235"><see langword="true" /> if the entire token value is encoded as valid base 64 text and can be successfully decoded to bytes.</span></span>
              <span data-ttu-id="481a7-236">В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-236"><see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="481a7-237">Этот метод не создает представление байтового массива значений, отличных от базовых строк JSON в кодировке 64.</span><span class="sxs-lookup"><span data-stu-id="481a7-237">This method does not create a byte array representation of values other than base 64-encoded JSON strings.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-238"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.String" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-238">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-239">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-239">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetDateTime">
      <MemberSignature Language="C#" Value="public bool TryGetDateTime (out DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDateTime([out] valuetype System.DateTime&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetDateTime(System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDateTime (ByRef value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDateTime([Runtime::InteropServices::Out] DateTime % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetDateTime :  -&gt; bool" Usage="jsonElement.TryGetDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="481a7-240">Когда этот метод возвращает данные, содержит значение даты и времени, эквивалентное текущей строке JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-240">When this method returns, contains the date and time value equivalent to the current JSON string.</span></span></param>
        <summary><span data-ttu-id="481a7-241">Пытается представить текущую строку JSON в виде <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-241">Attempts to represent the current JSON string as a <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-242">Значение <see langword="true" />, если строку можно представить в виде <see cref="T:System.DateTime" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-242"><see langword="true" /> if the string can be represented as a <see cref="T:System.DateTime" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="481a7-243">Этот метод не создает представление DateTime значений, отличных от строк JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-243">This method does not create a DateTime representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-244"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.String" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-244">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-245">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-245">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetDateTimeOffset">
      <MemberSignature Language="C#" Value="public bool TryGetDateTimeOffset (out DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDateTimeOffset([out] valuetype System.DateTimeOffset&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetDateTimeOffset(System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDateTimeOffset (ByRef value As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDateTimeOffset([Runtime::InteropServices::Out] DateTimeOffset % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetDateTimeOffset :  -&gt; bool" Usage="jsonElement.TryGetDateTimeOffset value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="481a7-246">Когда этот метод возвращает данные, содержит дату и время, эквивалентные текущей строке JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-246">When this method returns, contains the date and time equivalent to the current JSON string.</span></span></param>
        <summary><span data-ttu-id="481a7-247">Пытается представить текущую строку JSON в виде <see cref="T:System.DateTimeOffset" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-247">Attempts to represent the current JSON string as a <see cref="T:System.DateTimeOffset" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-248">Значение <see langword="true" />, если строку можно представить в виде <see cref="T:System.DateTimeOffset" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-248"><see langword="true" /> if the string can be represented as a <see cref="T:System.DateTimeOffset" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-249">Этот метод не создает представление DateTimeOffset значений, отличных от строк JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-249">This method does not create a DateTimeOffset representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-250"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.String" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-250">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-251">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-251">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetDecimal">
      <MemberSignature Language="C#" Value="public bool TryGetDecimal (out decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDecimal([out] valuetype System.Decimal&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetDecimal(System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDecimal (ByRef value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDecimal([Runtime::InteropServices::Out] System::Decimal % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetDecimal :  -&gt; bool" Usage="jsonElement.TryGetDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="481a7-252">Когда этот метод возвращает данные, содержит десятичный эквивалент текущего номера JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-252">When this method returns, contains the decimal equivalent of the current JSON number.</span></span></param>
        <summary><span data-ttu-id="481a7-253">Пытается представить текущий номер JSON в виде <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-253">Attempts to represent the current JSON number as a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-254">Значение <see langword="true" />, если номер можно представить в виде <see cref="T:System.Decimal" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-254"><see langword="true" /> if the number can be represented as a <see cref="T:System.Decimal" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-255">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-255">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-256"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-256">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-257">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-257">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetDouble">
      <MemberSignature Language="C#" Value="public bool TryGetDouble (out double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDouble([out] float64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetDouble(System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDouble (ByRef value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDouble([Runtime::InteropServices::Out] double % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetDouble :  -&gt; bool" Usage="jsonElement.TryGetDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="481a7-258">Когда этот метод возвращает данные, содержит значение с плавающей запятой двойной точности, эквивалентное текущему номеру JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-258">When this method returns, contains a double-precision floating point value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="481a7-259">Пытается представить текущий номер JSON в виде <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-259">Attempts to represent the current JSON number as a <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-260">Значение <see langword="true" />, если номер можно представить в виде <see cref="T:System.Double" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-260"><see langword="true" /> if the number can be represented as a <see cref="T:System.Double" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-261">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-261">This method does not parse the contents of a JSON string value.</span></span>
               
<span data-ttu-id="481a7-262">В .NET Core этот метод не возвращает `false` значения <xref:System.Double.MaxValue?displayProperty=nameWithType> , превышающие или меньше <xref:System.Double.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="481a7-262">On .NET Core, this method does not return `false` for values larger than <xref:System.Double.MaxValue?displayProperty=nameWithType> or smaller than <xref:System.Double.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="481a7-263">Вместо этого он возвращает < см <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> `value`. langword = "true > и присваивает значение <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> или.</span><span class="sxs-lookup"><span data-stu-id="481a7-263">Instead, it returns <see langword="true> and assigns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> to `value`.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-264"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-264">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-265">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-265">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetGuid">
      <MemberSignature Language="C#" Value="public bool TryGetGuid (out Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGuid([out] valuetype System.Guid&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetGuid(System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetGuid (ByRef value As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetGuid([Runtime::InteropServices::Out] Guid % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetGuid :  -&gt; bool" Usage="jsonElement.TryGetGuid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="481a7-266">Когда этот метод возвращает данные, содержит GUID, эквивалентный текущей строке JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-266">When this method returns, contains the GUID equivalent to the current JSON string.</span></span></param>
        <summary><span data-ttu-id="481a7-267">Пытается представить текущую строку JSON в виде <see cref="T:System.Guid" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-267">Attempts to represent the current JSON string as a <see cref="T:System.Guid" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-268">Значение <see langword="true" />, если строку можно представить в виде <see cref="T:System.Guid" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-268"><see langword="true" /> if the string can be represented as a <see cref="T:System.Guid" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-269">Этот метод не создает представление GUID для значений, отличных от строк JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-269">This method does not create a Guid representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-270"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.String" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-270">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-271">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-271">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetInt16">
      <MemberSignature Language="C#" Value="public bool TryGetInt16 (out short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetInt16([out] int16&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetInt16(System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetInt16 (ByRef value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetInt16([Runtime::InteropServices::Out] short % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetInt16 :  -&gt; bool" Usage="jsonElement.TryGetInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetInt32">
      <MemberSignature Language="C#" Value="public bool TryGetInt32 (out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetInt32([out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetInt32(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetInt32 (ByRef value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetInt32([Runtime::InteropServices::Out] int % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetInt32 :  -&gt; bool" Usage="jsonElement.TryGetInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="481a7-272">Когда этот метод возвращает данные, содержит 32-разрядное целочисленное значение, эквивалентное текущему номеру JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-272">When this method returns, contains the 32-biut integer value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="481a7-273">Пытается представить текущий номер JSON в виде <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-273">Attempts to represent the current JSON number as an <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-274">Значение <see langword="true" />, если номер можно представить в виде <see cref="T:System.Int32" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-274"><see langword="true" /> if the number can be represented as an <see cref="T:System.Int32" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-275">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-275">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-276"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-276">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-277">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-277">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetInt64">
      <MemberSignature Language="C#" Value="public bool TryGetInt64 (out long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetInt64([out] int64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetInt64(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetInt64 (ByRef value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetInt64([Runtime::InteropServices::Out] long % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetInt64 :  -&gt; bool" Usage="jsonElement.TryGetInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="481a7-278">Когда этот метод возвращает данные, содержит 64-разрядное целочисленное значение, эквивалентное текущему номеру JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-278">When this method returns, contains the 64-bit integer value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="481a7-279">Пытается представить текущий номер JSON в виде <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-279">Attempts to represent the current JSON number as a <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-280">Значение <see langword="true" />, если номер можно представить в виде <see cref="T:System.Int64" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-280"><see langword="true" /> if the number can be represented as a <see cref="T:System.Int64" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-281">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-281">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-282"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-282">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-283">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-283">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (ReadOnlySpan&lt;byte&gt; utf8PropertyName, out System.Text.Json.JsonElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetProperty(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, [out] valuetype System.Text.Json.JsonElement&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetProperty(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonElement@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetProperty (utf8PropertyName As ReadOnlySpan(Of Byte), ByRef value As JsonElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, [Runtime::InteropServices::Out] System::Text::Json::JsonElement % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetProperty : ReadOnlySpan&lt;byte&gt; *  -&gt; bool" Usage="jsonElement.TryGetProperty (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Text.Json.JsonElement" RefType="out" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="481a7-284">Представление в кодировке UTF-8 (без метки порядка байтов) для имени возвращаемого свойства.</span><span class="sxs-lookup"><span data-stu-id="481a7-284">The UTF-8 (with no Byte-Order-Mark (BOM)) representation of the name of the property to return.</span></span></param>
        <param name="value"><span data-ttu-id="481a7-285">Получает значение найденного свойства.</span><span class="sxs-lookup"><span data-stu-id="481a7-285">Receives the value of the located property.</span></span></param>
        <summary><span data-ttu-id="481a7-286">Ищет свойство с именем <paramref name="utf8PropertyName" /> в текущем объекте, возвращая значение, которое указывает, существует ли такое свойство.</span><span class="sxs-lookup"><span data-stu-id="481a7-286">Looks for a property named <paramref name="utf8PropertyName" /> in the current object, returning a value that indicates whether or not such a property exists.</span></span> <span data-ttu-id="481a7-287">Если свойство существует, метод назначает его значение аргументу <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-287">When the property exists, the method assigns its value to the <paramref name="value" /> argument.</span></span></summary>
        <returns><span data-ttu-id="481a7-288">Значение <see langword="true" />, если свойство найдено; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-288"><see langword="true" /> if the property was found, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-289">Сопоставление имен свойств выполняется как порядковый номер, сравнение с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="481a7-289">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>
               
<span data-ttu-id="481a7-290">Если свойство определено несколько раз для одного и того же объекта, метод соответствует последнему такому определению.</span><span class="sxs-lookup"><span data-stu-id="481a7-290">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-291"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-291">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-292">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-292">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (ReadOnlySpan&lt;char&gt; propertyName, out System.Text.Json.JsonElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetProperty(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, [out] valuetype System.Text.Json.JsonElement&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetProperty(System.ReadOnlySpan{System.Char},System.Text.Json.JsonElement@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetProperty (propertyName As ReadOnlySpan(Of Char), ByRef value As JsonElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(ReadOnlySpan&lt;char&gt; propertyName, [Runtime::InteropServices::Out] System::Text::Json::JsonElement % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetProperty : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="jsonElement.TryGetProperty (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Text.Json.JsonElement" RefType="out" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="481a7-293">Имя искомого свойства.</span><span class="sxs-lookup"><span data-stu-id="481a7-293">The name of the property to find.</span></span></param>
        <param name="value"><span data-ttu-id="481a7-294">Когда этот метод возвращает данные, содержит значение указанного свойства.</span><span class="sxs-lookup"><span data-stu-id="481a7-294">When this method returns, contains the value of the specified property.</span></span></param>
        <summary><span data-ttu-id="481a7-295">Ищет свойство с именем <paramref name="propertyName" /> в текущем объекте, возвращая значение, которое указывает, существует ли такое свойство.</span><span class="sxs-lookup"><span data-stu-id="481a7-295">Looks for a property named <paramref name="propertyName" /> in the current object, returning a value that indicates whether or not such a property exists.</span></span> <span data-ttu-id="481a7-296">Если свойство существует, метод назначает его значение аргументу <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-296">When the property exists, the method assigns its value to the <paramref name="value" /> argument.</span></span></summary>
        <returns><span data-ttu-id="481a7-297">Значение <see langword="true" />, если свойство найдено; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-297"><see langword="true" /> if the property was found, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-298">Сопоставление имен свойств выполняется как порядковый номер, сравнение с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="481a7-298">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>
               
<span data-ttu-id="481a7-299">Если свойство определено несколько раз для одного и того же объекта, метод соответствует последнему такому определению.</span><span class="sxs-lookup"><span data-stu-id="481a7-299">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-300"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-300">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-301">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-301">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (string propertyName, out System.Text.Json.JsonElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetProperty(string propertyName, [out] valuetype System.Text.Json.JsonElement&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetProperty(System.String,System.Text.Json.JsonElement@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetProperty (propertyName As String, ByRef value As JsonElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(System::String ^ propertyName, [Runtime::InteropServices::Out] System::Text::Json::JsonElement % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetProperty : string *  -&gt; bool" Usage="jsonElement.TryGetProperty (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Text.Json.JsonElement" RefType="out" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="481a7-302">Имя искомого свойства.</span><span class="sxs-lookup"><span data-stu-id="481a7-302">The name of the property to find.</span></span></param>
        <param name="value"><span data-ttu-id="481a7-303">Когда этот метод возвращает данные, содержит значение указанного свойства.</span><span class="sxs-lookup"><span data-stu-id="481a7-303">When this method returns, contains the value of the specified property.</span></span></param>
        <summary><span data-ttu-id="481a7-304">Ищет свойство с именем <paramref name="propertyName" /> в текущем объекте, возвращая значение, которое указывает, существует ли такое свойство.</span><span class="sxs-lookup"><span data-stu-id="481a7-304">Looks for a property named <paramref name="propertyName" /> in the current object, returning a value that indicates whether or not such a property exists.</span></span> <span data-ttu-id="481a7-305">Если свойство существует, его значение назначается аргументу <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-305">When the property exists, its value is assigned to the <paramref name="value" /> argument.</span></span></summary>
        <returns><span data-ttu-id="481a7-306">Значение <see langword="true" />, если свойство найдено; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-306"><see langword="true" /> if the property was found, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-307">Сопоставление имен свойств выполняется как порядковый номер, сравнение с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="481a7-307">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>
               
<span data-ttu-id="481a7-308">Если свойство определено несколько раз для одного и того же объекта, метод соответствует последнему такому определению.</span><span class="sxs-lookup"><span data-stu-id="481a7-308">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-309"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-309">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="481a7-310"><paramref name="propertyName" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-310"><paramref name="propertyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-311">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-311">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetSByte">
      <MemberSignature Language="C#" Value="public bool TryGetSByte (out sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetSByte([out] int8&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetSByte(System.SByte@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetSByte (ByRef value As SByte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetSByte([Runtime::InteropServices::Out] System::SByte % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetSByte :  -&gt; bool" Usage="jsonElement.TryGetSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetSingle">
      <MemberSignature Language="C#" Value="public bool TryGetSingle (out float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetSingle([out] float32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetSingle(System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetSingle (ByRef value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetSingle([Runtime::InteropServices::Out] float % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetSingle :  -&gt; bool" Usage="jsonElement.TryGetSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="481a7-312">Когда этот метод возвращает данные, содержит значение с плавающей запятой одиночной точности, эквивалентное текущему номеру JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-312">When this method returns, contains the single-precision floating point value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="481a7-313">Пытается представить текущий номер JSON в виде <see cref="T:System.Single" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-313">Attempts to represent the current JSON number as a <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-314">Значение <see langword="true" />, если номер можно представить в виде <see cref="T:System.Single" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-314"><see langword="true" /> if the number can be represented as a <see cref="T:System.Single" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-315">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-315">This method does not parse the contents of a JSON string value.</span></span>
               
<span data-ttu-id="481a7-316">В .NET Core этот метод не возвращает `false` значения <xref:System.Single.MaxValue?displayProperty=nameWithType> , превышающие или меньшее <xref:System.Single.MinValue?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="481a7-316">On .NET Core, this method does not return `false` for values larger than <xref:System.Single.MaxValue?displayProperty=nameWithType> or smaller than <xref:System.Single.MinValue?displayProperty=nameWithType>).</span></span> <span data-ttu-id="481a7-317">Вместо этого он возвращает `false` и <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> присваивает `value` аргументу <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> значение или.</span><span class="sxs-lookup"><span data-stu-id="481a7-317">Instead, it returns `false` and assigns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> to the `value` argument.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-318"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-318">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-319">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-319">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUInt16">
      <MemberSignature Language="C#" Value="public bool TryGetUInt16 (out ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUInt16([out] unsigned int16&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetUInt16(System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUInt16 (ByRef value As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUInt16([Runtime::InteropServices::Out] System::UInt16 % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetUInt16 :  -&gt; bool" Usage="jsonElement.TryGetUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetUInt32">
      <MemberSignature Language="C#" Value="public bool TryGetUInt32 (out uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUInt32([out] unsigned int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetUInt32(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUInt32 (ByRef value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUInt32([Runtime::InteropServices::Out] System::UInt32 % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetUInt32 :  -&gt; bool" Usage="jsonElement.TryGetUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="481a7-320">Когда этот метод возвращает данные, содержит 32-разрядное целочисленное значение без знака, эквивалентное текущему номеру JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-320">When this method returns, contains unsigned 32-bit integer value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="481a7-321">Пытается представить текущий номер JSON в виде <see cref="T:System.UInt32" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-321">Attempts to represent the current JSON number as a <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-322">Значение <see langword="true" />, если номер можно представить в виде <see cref="T:System.UInt32" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-322"><see langword="true" /> if the number can be represented as a <see cref="T:System.UInt32" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-323">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-323">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-324"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-324">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-325">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-325">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUInt64">
      <MemberSignature Language="C#" Value="public bool TryGetUInt64 (out ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUInt64([out] unsigned int64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetUInt64(System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUInt64 (ByRef value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUInt64([Runtime::InteropServices::Out] System::UInt64 % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetUInt64 :  -&gt; bool" Usage="jsonElement.TryGetUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="481a7-326">Когда этот метод возвращает данные, содержит 64-разрядное целочисленное значение без знака, эквивалентное текущему номеру JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-326">When this method returns, contains unsigned 64-bit integer value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="481a7-327">Пытается представить текущий номер JSON в виде <see cref="T:System.UInt64" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-327">Attempts to represent the current JSON number as a <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="481a7-328">Значение <see langword="true" />, если номер можно представить в виде <see cref="T:System.UInt64" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-328"><see langword="true" /> if the number can be represented as a <see cref="T:System.UInt64" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="481a7-329">Этот метод не выполняет синтаксический анализ содержимого строкового значения JSON.</span><span class="sxs-lookup"><span data-stu-id="481a7-329">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="481a7-330"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого значения не является <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span><span class="sxs-lookup"><span data-stu-id="481a7-330">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="481a7-331">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="481a7-331">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValueEquals">
      <MemberSignature Language="C#" Value="public bool ValueEquals (ReadOnlySpan&lt;byte&gt; utf8Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValueEquals(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ValueEquals(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function ValueEquals (utf8Text As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValueEquals(ReadOnlySpan&lt;System::Byte&gt; utf8Text);" />
      <MemberSignature Language="F#" Value="member this.ValueEquals : ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="jsonElement.ValueEquals utf8Text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Text" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8Text">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueEquals">
      <MemberSignature Language="C#" Value="public bool ValueEquals (ReadOnlySpan&lt;char&gt; text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValueEquals(valuetype System.ReadOnlySpan`1&lt;char&gt; text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ValueEquals(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function ValueEquals (text As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValueEquals(ReadOnlySpan&lt;char&gt; text);" />
      <MemberSignature Language="F#" Value="member this.ValueEquals : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="jsonElement.ValueEquals text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueEquals">
      <MemberSignature Language="C#" Value="public bool ValueEquals (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValueEquals(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ValueEquals(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValueEquals (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValueEquals(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ValueEquals : string -&gt; bool" Usage="jsonElement.ValueEquals text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueKind">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonValueKind ValueKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonValueKind ValueKind" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonElement.ValueKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueKind As JsonValueKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonValueKind ValueKind { System::Text::Json::JsonValueKind get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueKind : System.Text.Json.JsonValueKind" Usage="System.Text.Json.JsonElement.ValueKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonValueKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteProperty">
      <MemberSignature Language="C#" Value="public void WriteProperty (ReadOnlySpan&lt;byte&gt; utf8PropertyName, System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteProperty(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.WriteProperty(System.ReadOnlySpan{System.Byte},System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteProperty (utf8PropertyName As ReadOnlySpan(Of Byte), writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteProperty(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteProperty : ReadOnlySpan&lt;byte&gt; * System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonElement.WriteProperty (utf8PropertyName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">To be added.</param>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteProperty">
      <MemberSignature Language="C#" Value="public void WriteProperty (ReadOnlySpan&lt;char&gt; propertyName, System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteProperty(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.WriteProperty(System.ReadOnlySpan{System.Char},System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteProperty (propertyName As ReadOnlySpan(Of Char), writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteProperty(ReadOnlySpan&lt;char&gt; propertyName, System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteProperty : ReadOnlySpan&lt;char&gt; * System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonElement.WriteProperty (propertyName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteProperty">
      <MemberSignature Language="C#" Value="public void WriteProperty (string propertyName, System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteProperty(string propertyName, class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.WriteProperty(System.String,System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteProperty (propertyName As String, writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteProperty(System::String ^ propertyName, System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteProperty : string * System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonElement.WriteProperty (propertyName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteProperty">
      <MemberSignature Language="C#" Value="public void WriteProperty (System.Text.Json.JsonEncodedText propertyName, System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteProperty(valuetype System.Text.Json.JsonEncodedText propertyName, class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.WriteProperty(System.Text.Json.JsonEncodedText,System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteProperty (propertyName As JsonEncodedText, writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteProperty(System::Text::Json::JsonEncodedText propertyName, System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteProperty : System.Text.Json.JsonEncodedText * System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonElement.WriteProperty (propertyName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public void WriteValue (System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteValue(class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.WriteValue(System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteValue (writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteValue(System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteValue : System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonElement.WriteValue writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
