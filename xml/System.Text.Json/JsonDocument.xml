<Type Name="JsonDocument" FullName="System.Text.Json.JsonDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="320de0c1a16e88d5be11cfb204f4c5a22374e378" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73381199" /></Metadata><TypeSignature Language="C#" Value="public sealed class JsonDocument : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JsonDocument extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonDocument" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JsonDocument&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonDocument sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type JsonDocument = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a2fd1-101">Предоставляет механизм для проверки структурного содержимого значения JSON без автоматического создания экземпляров для значений данных.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-101">Provides a mechanism for examining the structural content of a JSON value without automatically instantiating data values.</span></span></summary>
    <remarks>
      <format><![CDATA[
      
<span data-ttu-id="a2fd1-102">Этот класс использует ресурсы из памяти в пуле, чтобы снизить влияние сборщика мусора (GC) в сценариях с высоким уровнем использования.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-102">This class utilizes resources from pooled memory to minimize the impact of the garbage collector (GC) in high-usage scenarios.</span></span> <span data-ttu-id="a2fd1-103">Неправильное удаление этого объекта приведет к тому, что память не будет возвращена в пул, что увеличит влияние сборки мусора на различные части платформы.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-103">Failure to properly dispose this object will result in the memory not being returned to the pool, which will increase GC impact across various parts of the framework.</span></span>
              
      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="jsonDocument.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2fd1-104">Освобождает ресурсы, используемые этим экземпляром <see cref="T:System.Text.Json.JsonDocument" />.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-104">Releases the resources used by this <see cref="T:System.Text.Json.JsonDocument" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (System.Buffers.ReadOnlySequence&lt;byte&gt; utf8Json, System.Text.Json.JsonDocumentOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(valuetype System.Buffers.ReadOnlySequence`1&lt;unsigned int8&gt; utf8Json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.Buffers.ReadOnlySequence{System.Byte},System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (utf8Json As ReadOnlySequence(Of Byte), Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : System.Buffers.ReadOnlySequence&lt;byte&gt; * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (utf8Json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.Buffers.ReadOnlySequence&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="a2fd1-105">Анализируемый текст JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-105">The JSON text to parse.</span></span></param>
        <param name="options"><span data-ttu-id="a2fd1-106">Параметры для управления поведением модуля чтения во время анализа.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-106">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a2fd1-107">Анализирует последовательность в виде текста в кодировке UTF-8, представляющего отдельное байтовое значение JSON в JsonDocument.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-107">Parses a sequence as UTF-8-encoded text representing a single JSON byte value into a JsonDocument.</span></span></summary>
        <returns><span data-ttu-id="a2fd1-108">Представление JsonDocument данного значения JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-108">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="a2fd1-109"><xref:System.Buffers.ReadOnlySequence%601> может использоваться для всего времени существования объекта Жсондокумент, и вызывающая сторона должна гарантировать, что данные не изменяются во время существования объекта.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-109">The <xref:System.Buffers.ReadOnlySequence%601> may be used for the entire lifetime of the JsonDocument object, and the caller must ensure that the data therein does not change during the object lifetime.</span></span>
<span data-ttu-id="a2fd1-110">Так как входные данные считаются текстовыми, не должно присутствовать UTF-8-пометка порядка следования (BOM).</span><span class="sxs-lookup"><span data-stu-id="a2fd1-110">Because the input is considered to be text, a UTF-8 Byte-Order-Mark (BOM) must not be present.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a2fd1-111"><paramref name="utf8Json" /> не представляет допустимое отдельное значение JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-111"><paramref name="utf8Json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2fd1-112"><paramref name="readerOptions" /> содержит неподдерживаемые параметры.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-112"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (System.IO.Stream utf8Json, System.Text.Json.JsonDocumentOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(class System.IO.Stream utf8Json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.IO.Stream,System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (utf8Json As Stream, Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : System.IO.Stream * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (utf8Json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="a2fd1-113">Анализируемые данные JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-113">The JSON data to parse.</span></span></param>
        <param name="options"><span data-ttu-id="a2fd1-114">Параметры для управления поведением модуля чтения во время анализа.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-114">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a2fd1-115">Анализирует <see cref="T:System.IO.Stream" /> в виде данных в кодировке UTF-8, представляющих отдельное значение JSON в JsonDocument.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-115">Parses a <see cref="T:System.IO.Stream" /> as UTF-8-encoded data representing a single JSON value into a JsonDocument.</span></span> <span data-ttu-id="a2fd1-116">Поток считывается до завершения.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-116">The stream is read to completion.</span></span></summary>
        <returns><span data-ttu-id="a2fd1-117">Представление JsonDocument данного значения JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-117">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a2fd1-118"><paramref name="utf8Json" /> не представляет допустимое отдельное значение JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-118"><paramref name="utf8Json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2fd1-119"><paramref name="readerOptions" /> содержит неподдерживаемые параметры.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-119"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (ReadOnlyMemory&lt;byte&gt; utf8Json, System.Text.Json.JsonDocumentOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; utf8Json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.ReadOnlyMemory{System.Byte},System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (utf8Json As ReadOnlyMemory(Of Byte), Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlyMemory&lt;byte&gt; * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (utf8Json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="a2fd1-120">Анализируемый текст JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-120">The JSON text to parse.</span></span></param>
        <param name="options"><span data-ttu-id="a2fd1-121">Параметры для управления поведением модуля чтения во время анализа.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-121">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a2fd1-122">Анализирует память в виде текста в кодировке UTF-8, представляющего отдельное байтовое значение JSON в JsonDocument.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-122">Parses memory as UTF-8-encoded text representing a single JSON byte value into a JsonDocument.</span></span></summary>
        <returns><span data-ttu-id="a2fd1-123">Представление JsonDocument данного значения JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-123">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="a2fd1-124">Значение <xref:System.ReadOnlyMemory%601> будет использоваться для всего времени существования объекта Жсондокумент, и вызывающий должен гарантировать, что данные не изменяются во время существования объекта.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-124">The <xref:System.ReadOnlyMemory%601> value will be used for the entire lifetime of the JsonDocument object, and the caller must ensure that the data therein does not change during the object lifetime.</span></span>

<span data-ttu-id="a2fd1-125">Так как входные данные считаются текстовыми, не должно присутствовать UTF-8-пометка порядка следования (BOM).</span><span class="sxs-lookup"><span data-stu-id="a2fd1-125">Because the input is considered to be text, a UTF-8 Byte-Order-Mark (BOM) must not be present.</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a2fd1-126"><paramref name="utf8Json" /> не представляет допустимое отдельное значение JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-126"><paramref name="utf8Json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2fd1-127"><paramref name="readerOptions" /> содержит неподдерживаемые параметры.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-127"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (ReadOnlyMemory&lt;char&gt; json, System.Text.Json.JsonDocumentOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(valuetype System.ReadOnlyMemory`1&lt;char&gt; json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.ReadOnlyMemory{System.Char},System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (json As ReadOnlyMemory(Of Char), Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlyMemory&lt;char&gt; * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="json"><span data-ttu-id="a2fd1-128">Анализируемый текст JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-128">The JSON text to parse.</span></span></param>
        <param name="options"><span data-ttu-id="a2fd1-129">Параметры для управления поведением модуля чтения во время анализа.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-129">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a2fd1-130">Анализирует текст, представляющий отдельное символьное значение JSON в JsonDocument.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-130">Parses text representing a single JSON character value into a JsonDocument.</span></span></summary>
        <returns><span data-ttu-id="a2fd1-131">Представление JsonDocument данного значения JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-131">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>
          <format><![CDATA[
<span data-ttu-id="a2fd1-132">Значение <xref:System.ReadOnlyMemory%601> может использоваться для всего времени существования объекта Жсондокумент, и вызывающая сторона должна гарантировать, что данные не изменяются во время существования объекта.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-132">The <xref:System.ReadOnlyMemory%601> value may be used for the entire lifetime of the JsonDocument object, and the caller must ensure that the data therein does not change during the object lifetime.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a2fd1-133"><paramref name="json" /> не представляет допустимое отдельное значение JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-133"><paramref name="json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2fd1-134"><paramref name="readerOptions" /> содержит неподдерживаемые параметры.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-134"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (string json, System.Text.Json.JsonDocumentOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(string json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.String,System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (json As String, Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.String" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="json"><span data-ttu-id="a2fd1-135">Анализируемый текст JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-135">The JSON text to parse.</span></span></param>
        <param name="options"><span data-ttu-id="a2fd1-136">Параметры для управления поведением модуля чтения во время анализа.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-136">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a2fd1-137">Анализирует текст, представляющий отдельное строковое значение JSON в JsonDocument.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-137">Parses text representing a single JSON string value into a JsonDocument.</span></span></summary>
        <returns><span data-ttu-id="a2fd1-138">Представление JsonDocument данного значения JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-138">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a2fd1-139"><paramref name="json" /> не представляет допустимое отдельное значение JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-139"><paramref name="json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2fd1-140"><paramref name="readerOptions" /> содержит неподдерживаемые параметры.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-140"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Text.Json.JsonDocument&gt; ParseAsync (System.IO.Stream utf8Json, System.Text.Json.JsonDocumentOptions options = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Text.Json.JsonDocument&gt; ParseAsync(class System.IO.Stream utf8Json, valuetype System.Text.Json.JsonDocumentOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.ParseAsync(System.IO.Stream,System.Text.Json.JsonDocumentOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ParseAsync : System.IO.Stream * System.Text.Json.JsonDocumentOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Text.Json.JsonDocument&gt;" Usage="System.Text.Json.JsonDocument.ParseAsync (utf8Json, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Text.Json.JsonDocument&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="a2fd1-141">Анализируемые данные JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-141">The JSON data to parse.</span></span></param>
        <param name="options"><span data-ttu-id="a2fd1-142">Параметры для управления поведением модуля чтения во время анализа.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-142">Options to control the reader behavior during parsing.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a2fd1-143">Токен для отслеживания запросов отмены.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-143">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="a2fd1-144">Анализирует <see cref="T:System.IO.Stream" /> в виде данных в кодировке UTF-8, представляющих отдельное значение JSON в JsonDocument.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-144">Parses a <see cref="T:System.IO.Stream" /> as UTF-8-encoded data representing a single JSON value into a JsonDocument.</span></span> <span data-ttu-id="a2fd1-145">Поток считывается до завершения.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-145">The stream is read to completion.</span></span></summary>
        <returns><span data-ttu-id="a2fd1-146">Задача по созданию представления JsonDocument данного значения JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-146">A task to produce a JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a2fd1-147"><paramref name="utf8Json" /> не представляет допустимое отдельное значение JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-147"><paramref name="utf8Json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2fd1-148"><paramref name="readerOptions" /> содержит неподдерживаемые параметры.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-148"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument ParseValue (ref System.Text.Json.Utf8JsonReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument ParseValue(valuetype System.Text.Json.Utf8JsonReader&amp; reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.ParseValue(System.Text.Json.Utf8JsonReader@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseValue (ByRef reader As Utf8JsonReader) As JsonDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Json::JsonDocument ^ ParseValue(System::Text::Json::Utf8JsonReader % reader);" />
      <MemberSignature Language="F#" Value="static member ParseValue : Utf8JsonReader -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.ParseValue reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a2fd1-149">Модуль чтения, используемый для чтения.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-149">The reader to read.</span></span></param>
        <summary><span data-ttu-id="a2fd1-150">Анализирует одно значение JSON (включая объекты или массивы) из указанного модуля чтения.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-150">Parses one JSON value (including objects or arrays) from the provided reader.</span></span></summary>
        <returns><span data-ttu-id="a2fd1-151">JsonDocument, представляющий значение (и вложенные значения), считанное из модуля чтения.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-151">A JsonDocument representing the value (and nested values) read from the reader.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="a2fd1-152">Если свойство <xref:System.Text.Json.Utf8JsonReader.TokenType> `reader` имеет значение <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> или <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>, то модуль чтения переходит по одному вызову к <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType>, чтобы определить начало значения.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-152">If the <xref:System.Text.Json.Utf8JsonReader.TokenType> property of `reader` is <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> or <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>, the reader will advance by one call to <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> to determine the start of the value.</span></span>
               
<span data-ttu-id="a2fd1-153">После завершения этого метода `reader` размещается на конечном маркере в значении JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-153">Upon completion of this method, `reader` is positioned at the final token in the JSON value.</span></span> <span data-ttu-id="a2fd1-154">При возникновении исключения модуль чтения сбрасывается в состояние, в котором он находился при вызове метода.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-154">If an exception is thrown, the reader is reset to the state it was in when the method was called.</span></span>
               
<span data-ttu-id="a2fd1-155">Этот метод создает копию данных, в которой действует устройство чтения, поэтому нет необходимости поддерживать целостность данных после возврата этого метода.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-155">This method makes a copy of the data the reader acted on, so there is no caller requirement to maintain data integrity beyond the return of this method.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2fd1-156"><paramref name="reader" /> содержит неподдерживаемые параметры.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-156"><paramref name="reader" /> contains unsupported options.</span></span>

<span data-ttu-id="a2fd1-157">-или-</span><span class="sxs-lookup"><span data-stu-id="a2fd1-157">-or-</span></span>

<span data-ttu-id="a2fd1-158">Текущий маркер <paramref name="reader" /> не запускается или не представляет значение.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-158">The current <paramref name="reader" /> token does not start or represent a value.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a2fd1-159">Не удалось считать значение из модуля чтения.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-159">A value could not be read from the reader.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RootElement">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement RootElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonElement RootElement" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonDocument.RootElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElement As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonElement RootElement { System::Text::Json::JsonElement get(); };" />
      <MemberSignature Language="F#" Value="member this.RootElement : System.Text.Json.JsonElement" Usage="System.Text.Json.JsonDocument.RootElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2fd1-160">Возвращает корневой элемент этого документа JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-160">Gets the root element of this JSON document.</span></span></summary>
        <value><span data-ttu-id="a2fd1-161"><see cref="T:System.Text.Json.JsonElement" />, представляющая значение документа.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-161">A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the document.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseValue">
      <MemberSignature Language="C#" Value="public static bool TryParseValue (ref System.Text.Json.Utf8JsonReader reader, out System.Text.Json.JsonDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseValue(valuetype System.Text.Json.Utf8JsonReader&amp; reader, [out] class System.Text.Json.JsonDocument&amp; document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.TryParseValue(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonDocument@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseValue (ByRef reader As Utf8JsonReader, ByRef document As JsonDocument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseValue(System::Text::Json::Utf8JsonReader % reader, [Runtime::InteropServices::Out] System::Text::Json::JsonDocument ^ % document);" />
      <MemberSignature Language="F#" Value="static member TryParseValue : Utf8JsonReader * JsonDocument -&gt; bool" Usage="System.Text.Json.JsonDocument.TryParseValue (reader, document)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="document" Type="System.Text.Json.JsonDocument" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a2fd1-162">Модуль чтения, используемый для чтения.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-162">The reader to read.</span></span></param>
        <param name="document"><span data-ttu-id="a2fd1-163">Когда этот метод возвращает данные, содержит анализируемый документ.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-163">When the method returns, contains the parsed document.</span></span></param>
        <summary><span data-ttu-id="a2fd1-164">Пытается проанализировать одно значение JSON (включая объекты или массивы) из указанного модуля чтения.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-164">Attempts to parse one JSON value (including objects or arrays) from the provided reader.</span></span></summary>
        <returns><span data-ttu-id="a2fd1-165">Значение <see langword="true" />, если значение было считано и проанализировано в JsonDocument; значение <see langword="false" />, если модулю чтения не хватило данных во время анализа.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-165"><see langword="true" /> if a value was read and parsed into a JsonDocument; <see langword="false" /> if the reader ran out of data while parsing.</span></span> <span data-ttu-id="a2fd1-166">Во всех других ситуациях возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-166">All other situations result in an exception being thrown.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="a2fd1-167">Если свойство <xref:System.Text.Json.Utf8JsonReader.TokenType> `reader` имеет значение <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> или <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>, то модуль чтения переходит по одному вызову к <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType>, чтобы определить начало значения.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-167">If the <xref:System.Text.Json.Utf8JsonReader.TokenType> property of `reader` is <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> or <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>, the reader will advance by one call to <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> to determine the start of the value.</span></span>
               
<span data-ttu-id="a2fd1-168">После завершения этого метода `reader` размещается на конечном маркере в значении JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-168">Upon completion of this method, `reader` is positioned at the final token in the JSON value.</span></span> <span data-ttu-id="a2fd1-169">Если возникает исключение или возвращается `false`, модуль чтения сбрасывается в состояние, в котором он находился при вызове метода.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-169">If an exception is thrown or `false` is returned, the reader is reset to the state it was in when the method was called.</span></span>
               
<span data-ttu-id="a2fd1-170">Этот метод создает копию данных, в которой действует устройство чтения, поэтому нет необходимости поддерживать целостность данных после возврата этого метода.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-170">This method makes a copy of the data the reader acted on, so there is no caller requirement to maintain data integrity beyond the return of this method.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2fd1-171"><paramref name="reader" /> содержит неподдерживаемые параметры.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-171"><paramref name="reader" /> contains unsupported options.</span></span>

<span data-ttu-id="a2fd1-172">-или-</span><span class="sxs-lookup"><span data-stu-id="a2fd1-172">-or-</span></span>

<span data-ttu-id="a2fd1-173">Текущий маркер <paramref name="reader" /> не запускается или не представляет значение.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-173">The current <paramref name="reader" /> token does not start or represent a value.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a2fd1-174">Не удалось считать значение из модуля чтения.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-174">A value could not be read from the reader.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.WriteTo(System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteTo (writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteTo : System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonDocument.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a2fd1-175">Модуль записи, в который необходимо записать документ.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-175">The writer to which to write the document.</span></span></param>
        <summary><span data-ttu-id="a2fd1-176">Записывает документ в предоставленный модуль записи в виде значения JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-176">Writes the document to the provided writer as a JSON value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a2fd1-177">Параметр <paramref name="writer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-177">The <paramref name="writer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a2fd1-178"><see cref="P:System.Text.Json.JsonElement.ValueKind" /> этого <see cref="P:System.Text.Json.JsonDocument.RootElement" /> приведет к недопустимому JSON.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-178">The <see cref="P:System.Text.Json.JsonElement.ValueKind" /> of this <see cref="P:System.Text.Json.JsonDocument.RootElement" /> would result in invalid JSON.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a2fd1-179">Родительский объект <see cref="T:System.Text.Json.JsonDocument" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="a2fd1-179">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
