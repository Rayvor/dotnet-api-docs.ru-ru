<Type Name="JsonReaderState" FullName="System.Text.Json.JsonReaderState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d386b281807892b675f776fc4588d6c1b2e7df63" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69145149" /></Metadata><TypeSignature Language="C#" Value="public struct JsonReaderState" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonReaderState extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonReaderState" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonReaderState" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonReaderState" />
  <TypeSignature Language="F#" Value="type JsonReaderState = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c092b-101">Определяет непрозрачный тип, содержащий и сохраняющий все соответствующие сведения о состоянии, которые необходимо предоставить <see cref="T:System.Text.Json.Utf8JsonReader" /> для продолжения чтения после обработки неполных данных.</span><span class="sxs-lookup"><span data-stu-id="c092b-101">Defines an opaque type that holds and saves all the relevant state information, which must be provided to the <see cref="T:System.Text.Json.Utf8JsonReader" /> to continue reading after processing incomplete data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c092b-102">`JsonReaderState`требуется для поддержки повторного входа при чтении незавершенных данных и для продолжения чтения после того, как будут доступны дополнительные данные.</span><span class="sxs-lookup"><span data-stu-id="c092b-102">`JsonReaderState` is required to support reentrancy when reading incomplete data, and to continue reading once more data is available.</span></span> <span data-ttu-id="c092b-103">В отличие <xref:System.Text.Json.Utf8JsonReader> от структуры, которая является структурой ссылок, этот тип может сосуществовать в пределах границ async/await, поэтому перед продолжением работы с новым экземпляром <xref:System.Text.Json.Utf8JsonReader>необходимо обеспечить поддержку асинхронного считывания дополнительных данных.</span><span class="sxs-lookup"><span data-stu-id="c092b-103">Unlike the <xref:System.Text.Json.Utf8JsonReader> struct, which is a ref struct, this type can survive across async/await boundaries, and hence it's required to provide support for reading more data asynchronously before continuing with a new instance of the <xref:System.Text.Json.Utf8JsonReader>.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonReaderState (System.Text.Json.JsonReaderOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Text.Json.JsonReaderOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonReaderState.#ctor(System.Text.Json.JsonReaderOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional options As JsonReaderOptions = null)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonReaderState : System.Text.Json.JsonReaderOptions -&gt; System.Text.Json.JsonReaderState" Usage="new System.Text.Json.JsonReaderState options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Text.Json.JsonReaderOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="c092b-104">Определяет пользовательское поведение <see cref="T:System.Text.Json.Utf8JsonReader" />, которое отличается от RFC по JSON (например, способом обработки комментариев или максимально допустимой глубиной при чтении).</span><span class="sxs-lookup"><span data-stu-id="c092b-104">Defines the customized behavior of the <see cref="T:System.Text.Json.Utf8JsonReader" /> that is different from the JSON RFC (for example how to handle comments, or the maximum depth allowed when reading).</span></span> <span data-ttu-id="c092b-105">По умолчанию <see cref="T:System.Text.Json.Utf8JsonReader" /> строго следует RFC по JSON (то есть комментарии в JSON являются недопустимыми) и осуществляет чтение до максимальной глубины 64.</span><span class="sxs-lookup"><span data-stu-id="c092b-105">By default, the <see cref="T:System.Text.Json.Utf8JsonReader" /> follows the JSON RFC strictly (comments within the JSON are invalid) and reads up to a maximum depth of 64.</span></span></param>
        <summary><span data-ttu-id="c092b-106">Формирует новый экземпляр <see cref="T:System.Text.Json.JsonReaderState" />.</span><span class="sxs-lookup"><span data-stu-id="c092b-106">Constructs a new <see cref="T:System.Text.Json.JsonReaderState" /> instance.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="c092b-107">Экземпляр этого состояния должен передаваться <xref:System.Text.Json.Utf8JsonReader> в конструктор с данными JSON.</span><span class="sxs-lookup"><span data-stu-id="c092b-107">An instance of this state must be passed to the <xref:System.Text.Json.Utf8JsonReader> constructor with the JSON data.</span></span> <span data-ttu-id="c092b-108">В отличие <xref:System.Text.Json.Utf8JsonReader>от класса, который является структурой ссылок, состояние может содержаться в границах async/await и, следовательно, этот тип необходим для асинхронного чтения данных перед продолжением нового экземпляра <xref:System.Text.Json.Utf8JsonReader>.</span><span class="sxs-lookup"><span data-stu-id="c092b-108">Unlike the <xref:System.Text.Json.Utf8JsonReader>, which is a ref struct, the state can survive across async/await boundaries and hence this type is required to provide support for reading in more data asynchronously before continuing with a new instance of the <xref:System.Text.Json.Utf8JsonReader>.</span></span>
            
            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c092b-109">Для максимальной глубины задано значение, не являющееся положительным (&lt; 0).</span><span class="sxs-lookup"><span data-stu-id="c092b-109">The maximum depth is set to a non-positive value (&lt; 0).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonReaderOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonReaderOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderState.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As JsonReaderOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonReaderOptions Options { System::Text::Json::JsonReaderOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.Json.JsonReaderOptions" Usage="System.Text.Json.JsonReaderState.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonReaderOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c092b-110">Возвращает пользовательское поведение, применяемое при чтении данных JSON с помощью структуры <see cref="T:System.Text.Json.Utf8JsonReader" />, которое может отклоняться от спецификации JSON, отражающей поведение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c092b-110">Gets the custom behavior to use when reading JSON data using the <see cref="T:System.Text.Json.Utf8JsonReader" /> struct that may deviate from strict adherence to the JSON specification, which is the default behavior.</span></span></summary>
        <value><span data-ttu-id="c092b-111">Пользовательское поведение, используемое при чтении данных JSON.</span><span class="sxs-lookup"><span data-stu-id="c092b-111">The custom behavior to use when reading JSON data.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
