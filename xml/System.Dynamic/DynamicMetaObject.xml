<Type Name="DynamicMetaObject" FullName="System.Dynamic.DynamicMetaObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46ba9c7ce8598306c1fef41673c4132d1cc5c16c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70526065" /></Metadata><TypeSignature Language="C#" Value="public class DynamicMetaObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicMetaObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Dynamic.DynamicMetaObject" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicMetaObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicMetaObject" />
  <TypeSignature Language="F#" Value="type DynamicMetaObject = class" />
  <AssemblyInfo>
    <AssemblyName>System.Dynamic.Runtime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет динамическую привязку и логику привязки объекта, участвующего в динамической привязке.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для получения дополнительных сведений Скачайте статью [Реализация динамических интерфейсов](https://download.microsoft.com/download/5/4/B/54B83DFE-D7AA-4155-9687-B0CF58FF65D7/implementing-dynamic-interfaces.pdf) , доступную в формате PDF.
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Dynamic.DynamicMetaObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicMetaObject (System.Linq.Expressions.Expression expression, System.Dynamic.BindingRestrictions restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression expression, class System.Dynamic.BindingRestrictions restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.#ctor(System.Linq.Expressions.Expression,System.Dynamic.BindingRestrictions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicMetaObject(System::Linq::Expressions::Expression ^ expression, System::Dynamic::BindingRestrictions ^ restrictions);" />
      <MemberSignature Language="F#" Value="new System.Dynamic.DynamicMetaObject : System.Linq.Expressions.Expression * System.Dynamic.BindingRestrictions -&gt; System.Dynamic.DynamicMetaObject" Usage="new System.Dynamic.DynamicMetaObject (expression, restrictions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="restrictions" Type="System.Dynamic.BindingRestrictions" />
      </Parameters>
      <Docs>
        <param name="expression">Выражение, представляющее данный объект <see cref="T:System.Dynamic.DynamicMetaObject" /> в процессе динамической привязки.</param>
        <param name="restrictions">Набор ограничений привязки, при соблюдении которых привязка является допустимой.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Dynamic.DynamicMetaObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicMetaObject (System.Linq.Expressions.Expression expression, System.Dynamic.BindingRestrictions restrictions, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression expression, class System.Dynamic.BindingRestrictions restrictions, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.#ctor(System.Linq.Expressions.Expression,System.Dynamic.BindingRestrictions,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicMetaObject(System::Linq::Expressions::Expression ^ expression, System::Dynamic::BindingRestrictions ^ restrictions, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Dynamic.DynamicMetaObject : System.Linq.Expressions.Expression * System.Dynamic.BindingRestrictions * obj -&gt; System.Dynamic.DynamicMetaObject" Usage="new System.Dynamic.DynamicMetaObject (expression, restrictions, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="restrictions" Type="System.Dynamic.BindingRestrictions" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">Выражение, представляющее данный объект <see cref="T:System.Dynamic.DynamicMetaObject" /> в процессе динамической привязки.</param>
        <param name="restrictions">Набор ограничений привязки, при соблюдении которых привязка является допустимой.</param>
        <param name="value">Значение среды выполнения, представленное объектом <see cref="T:System.Dynamic.DynamicMetaObject" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Dynamic.DynamicMetaObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindBinaryOperation">
      <MemberSignature Language="C#" Value="public virtual System.Dynamic.DynamicMetaObject BindBinaryOperation (System.Dynamic.BinaryOperationBinder binder, System.Dynamic.DynamicMetaObject arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject BindBinaryOperation(class System.Dynamic.BinaryOperationBinder binder, class System.Dynamic.DynamicMetaObject arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.BindBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Dynamic.DynamicMetaObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindBinaryOperation (binder As BinaryOperationBinder, arg As DynamicMetaObject) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Dynamic::DynamicMetaObject ^ BindBinaryOperation(System::Dynamic::BinaryOperationBinder ^ binder, System::Dynamic::DynamicMetaObject ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member BindBinaryOperation : System.Dynamic.BinaryOperationBinder * System.Dynamic.DynamicMetaObject -&gt; System.Dynamic.DynamicMetaObject&#xA;override this.BindBinaryOperation : System.Dynamic.BinaryOperationBinder * System.Dynamic.DynamicMetaObject -&gt; System.Dynamic.DynamicMetaObject" Usage="dynamicMetaObject.BindBinaryOperation (binder, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.BinaryOperationBinder" />
        <Parameter Name="arg" Type="System.Dynamic.DynamicMetaObject" />
      </Parameters>
      <Docs>
        <param name="binder">Экземпляр класса <see cref="T:System.Dynamic.BinaryOperationBinder" />, который представляет сведения о динамической операции.</param>
        <param name="arg">Экземпляр класса <see cref="T:System.Dynamic.DynamicMetaObject" />, который представляет правый операнд бинарной операции.</param>
        <summary>Выполняет привязку динамической бинарной операции.</summary>
        <returns>Новый объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindConvert">
      <MemberSignature Language="C#" Value="public virtual System.Dynamic.DynamicMetaObject BindConvert (System.Dynamic.ConvertBinder binder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject BindConvert(class System.Dynamic.ConvertBinder binder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.BindConvert(System.Dynamic.ConvertBinder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindConvert (binder As ConvertBinder) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Dynamic::DynamicMetaObject ^ BindConvert(System::Dynamic::ConvertBinder ^ binder);" />
      <MemberSignature Language="F#" Value="abstract member BindConvert : System.Dynamic.ConvertBinder -&gt; System.Dynamic.DynamicMetaObject&#xA;override this.BindConvert : System.Dynamic.ConvertBinder -&gt; System.Dynamic.DynamicMetaObject" Usage="dynamicMetaObject.BindConvert binder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.ConvertBinder" />
      </Parameters>
      <Docs>
        <param name="binder">Экземпляр класса <see cref="T:System.Dynamic.ConvertBinder" />, который представляет сведения о динамической операции.</param>
        <summary>Выполняет привязку динамической операции преобразования.</summary>
        <returns>Новый объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В Visual Basic поддерживается только явное преобразование. При переопределении этого метода он вызывается с помощью <xref:Microsoft.VisualBasic.Conversion.CTypeDynamic%2A> функций или. <xref:Microsoft.VisualBasic.Conversion.CTypeDynamic%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindCreateInstance">
      <MemberSignature Language="C#" Value="public virtual System.Dynamic.DynamicMetaObject BindCreateInstance (System.Dynamic.CreateInstanceBinder binder, System.Dynamic.DynamicMetaObject[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject BindCreateInstance(class System.Dynamic.CreateInstanceBinder binder, class System.Dynamic.DynamicMetaObject[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.BindCreateInstance(System.Dynamic.CreateInstanceBinder,System.Dynamic.DynamicMetaObject[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindCreateInstance (binder As CreateInstanceBinder, args As DynamicMetaObject()) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Dynamic::DynamicMetaObject ^ BindCreateInstance(System::Dynamic::CreateInstanceBinder ^ binder, cli::array &lt;System::Dynamic::DynamicMetaObject ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BindCreateInstance : System.Dynamic.CreateInstanceBinder * System.Dynamic.DynamicMetaObject[] -&gt; System.Dynamic.DynamicMetaObject&#xA;override this.BindCreateInstance : System.Dynamic.CreateInstanceBinder * System.Dynamic.DynamicMetaObject[] -&gt; System.Dynamic.DynamicMetaObject" Usage="dynamicMetaObject.BindCreateInstance (binder, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.CreateInstanceBinder" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" />
      </Parameters>
      <Docs>
        <param name="binder">Экземпляр класса <see cref="T:System.Dynamic.CreateInstanceBinder" />, который представляет сведения о динамической операции.</param>
        <param name="args">Массив экземпляров <see cref="T:System.Dynamic.DynamicMetaObject" />, которые являются аргументами операции создания экземпляра.</param>
        <summary>Выполняет привязку динамической операции создания экземпляра.</summary>
        <returns>Новый объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindDeleteIndex">
      <MemberSignature Language="C#" Value="public virtual System.Dynamic.DynamicMetaObject BindDeleteIndex (System.Dynamic.DeleteIndexBinder binder, System.Dynamic.DynamicMetaObject[] indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject BindDeleteIndex(class System.Dynamic.DeleteIndexBinder binder, class System.Dynamic.DynamicMetaObject[] indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.BindDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Dynamic.DynamicMetaObject[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindDeleteIndex (binder As DeleteIndexBinder, indexes As DynamicMetaObject()) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Dynamic::DynamicMetaObject ^ BindDeleteIndex(System::Dynamic::DeleteIndexBinder ^ binder, cli::array &lt;System::Dynamic::DynamicMetaObject ^&gt; ^ indexes);" />
      <MemberSignature Language="F#" Value="abstract member BindDeleteIndex : System.Dynamic.DeleteIndexBinder * System.Dynamic.DynamicMetaObject[] -&gt; System.Dynamic.DynamicMetaObject&#xA;override this.BindDeleteIndex : System.Dynamic.DeleteIndexBinder * System.Dynamic.DynamicMetaObject[] -&gt; System.Dynamic.DynamicMetaObject" Usage="dynamicMetaObject.BindDeleteIndex (binder, indexes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.DeleteIndexBinder" />
        <Parameter Name="indexes" Type="System.Dynamic.DynamicMetaObject[]" />
      </Parameters>
      <Docs>
        <param name="binder">Экземпляр класса <see cref="T:System.Dynamic.DeleteIndexBinder" />, который представляет сведения о динамической операции.</param>
        <param name="indexes">Массив экземпляров <see cref="T:System.Dynamic.DynamicMetaObject" />, которые являются индексами для операции удаления индекса.</param>
        <summary>Выполняет привязку динамической операции удаления индекса.</summary>
        <returns>Новый объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindDeleteMember">
      <MemberSignature Language="C#" Value="public virtual System.Dynamic.DynamicMetaObject BindDeleteMember (System.Dynamic.DeleteMemberBinder binder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject BindDeleteMember(class System.Dynamic.DeleteMemberBinder binder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.BindDeleteMember(System.Dynamic.DeleteMemberBinder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindDeleteMember (binder As DeleteMemberBinder) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Dynamic::DynamicMetaObject ^ BindDeleteMember(System::Dynamic::DeleteMemberBinder ^ binder);" />
      <MemberSignature Language="F#" Value="abstract member BindDeleteMember : System.Dynamic.DeleteMemberBinder -&gt; System.Dynamic.DynamicMetaObject&#xA;override this.BindDeleteMember : System.Dynamic.DeleteMemberBinder -&gt; System.Dynamic.DynamicMetaObject" Usage="dynamicMetaObject.BindDeleteMember binder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.DeleteMemberBinder" />
      </Parameters>
      <Docs>
        <param name="binder">Экземпляр класса <see cref="T:System.Dynamic.DeleteMemberBinder" />, который представляет сведения о динамической операции.</param>
        <summary>Выполняет привязку динамической операции удаления члена.</summary>
        <returns>Новый объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindGetIndex">
      <MemberSignature Language="C#" Value="public virtual System.Dynamic.DynamicMetaObject BindGetIndex (System.Dynamic.GetIndexBinder binder, System.Dynamic.DynamicMetaObject[] indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject BindGetIndex(class System.Dynamic.GetIndexBinder binder, class System.Dynamic.DynamicMetaObject[] indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.BindGetIndex(System.Dynamic.GetIndexBinder,System.Dynamic.DynamicMetaObject[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindGetIndex (binder As GetIndexBinder, indexes As DynamicMetaObject()) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Dynamic::DynamicMetaObject ^ BindGetIndex(System::Dynamic::GetIndexBinder ^ binder, cli::array &lt;System::Dynamic::DynamicMetaObject ^&gt; ^ indexes);" />
      <MemberSignature Language="F#" Value="abstract member BindGetIndex : System.Dynamic.GetIndexBinder * System.Dynamic.DynamicMetaObject[] -&gt; System.Dynamic.DynamicMetaObject&#xA;override this.BindGetIndex : System.Dynamic.GetIndexBinder * System.Dynamic.DynamicMetaObject[] -&gt; System.Dynamic.DynamicMetaObject" Usage="dynamicMetaObject.BindGetIndex (binder, indexes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.GetIndexBinder" />
        <Parameter Name="indexes" Type="System.Dynamic.DynamicMetaObject[]" />
      </Parameters>
      <Docs>
        <param name="binder">Экземпляр класса <see cref="T:System.Dynamic.GetIndexBinder" />, который представляет сведения о динамической операции.</param>
        <param name="indexes">Массив экземпляров <see cref="T:System.Dynamic.DynamicMetaObject" />, которые являются индексами для операции получения индекса.</param>
        <summary>Выполняет привязку динамической операции получения индекса.</summary>
        <returns>Новый объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindGetMember">
      <MemberSignature Language="C#" Value="public virtual System.Dynamic.DynamicMetaObject BindGetMember (System.Dynamic.GetMemberBinder binder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject BindGetMember(class System.Dynamic.GetMemberBinder binder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.BindGetMember(System.Dynamic.GetMemberBinder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindGetMember (binder As GetMemberBinder) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Dynamic::DynamicMetaObject ^ BindGetMember(System::Dynamic::GetMemberBinder ^ binder);" />
      <MemberSignature Language="F#" Value="abstract member BindGetMember : System.Dynamic.GetMemberBinder -&gt; System.Dynamic.DynamicMetaObject&#xA;override this.BindGetMember : System.Dynamic.GetMemberBinder -&gt; System.Dynamic.DynamicMetaObject" Usage="dynamicMetaObject.BindGetMember binder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.GetMemberBinder" />
      </Parameters>
      <Docs>
        <param name="binder">Экземпляр класса <see cref="T:System.Dynamic.GetMemberBinder" />, который представляет сведения о динамической операции.</param>
        <summary>Выполняет привязку динамической операции получения члена.</summary>
        <returns>Новый объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInvoke">
      <MemberSignature Language="C#" Value="public virtual System.Dynamic.DynamicMetaObject BindInvoke (System.Dynamic.InvokeBinder binder, System.Dynamic.DynamicMetaObject[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject BindInvoke(class System.Dynamic.InvokeBinder binder, class System.Dynamic.DynamicMetaObject[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.BindInvoke(System.Dynamic.InvokeBinder,System.Dynamic.DynamicMetaObject[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindInvoke (binder As InvokeBinder, args As DynamicMetaObject()) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Dynamic::DynamicMetaObject ^ BindInvoke(System::Dynamic::InvokeBinder ^ binder, cli::array &lt;System::Dynamic::DynamicMetaObject ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BindInvoke : System.Dynamic.InvokeBinder * System.Dynamic.DynamicMetaObject[] -&gt; System.Dynamic.DynamicMetaObject&#xA;override this.BindInvoke : System.Dynamic.InvokeBinder * System.Dynamic.DynamicMetaObject[] -&gt; System.Dynamic.DynamicMetaObject" Usage="dynamicMetaObject.BindInvoke (binder, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.InvokeBinder" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" />
      </Parameters>
      <Docs>
        <param name="binder">Экземпляр класса <see cref="T:System.Dynamic.InvokeBinder" />, который представляет сведения о динамической операции.</param>
        <param name="args">Массив экземпляров <see cref="T:System.Dynamic.DynamicMetaObject" />, которые являются аргументами для операции вызова.</param>
        <summary>Выполняет привязку динамической операции вызова.</summary>
        <returns>Новый объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInvokeMember">
      <MemberSignature Language="C#" Value="public virtual System.Dynamic.DynamicMetaObject BindInvokeMember (System.Dynamic.InvokeMemberBinder binder, System.Dynamic.DynamicMetaObject[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject BindInvokeMember(class System.Dynamic.InvokeMemberBinder binder, class System.Dynamic.DynamicMetaObject[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.BindInvokeMember(System.Dynamic.InvokeMemberBinder,System.Dynamic.DynamicMetaObject[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindInvokeMember (binder As InvokeMemberBinder, args As DynamicMetaObject()) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Dynamic::DynamicMetaObject ^ BindInvokeMember(System::Dynamic::InvokeMemberBinder ^ binder, cli::array &lt;System::Dynamic::DynamicMetaObject ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BindInvokeMember : System.Dynamic.InvokeMemberBinder * System.Dynamic.DynamicMetaObject[] -&gt; System.Dynamic.DynamicMetaObject&#xA;override this.BindInvokeMember : System.Dynamic.InvokeMemberBinder * System.Dynamic.DynamicMetaObject[] -&gt; System.Dynamic.DynamicMetaObject" Usage="dynamicMetaObject.BindInvokeMember (binder, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.InvokeMemberBinder" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" />
      </Parameters>
      <Docs>
        <param name="binder">Экземпляр класса <see cref="T:System.Dynamic.InvokeMemberBinder" />, который представляет сведения о динамической операции.</param>
        <param name="args">Массив экземпляров <see cref="T:System.Dynamic.DynamicMetaObject" />, которые являются аргументами для операции вызова члена.</param>
        <summary>Выполняет привязку динамической операции вызова члена.</summary>
        <returns>Новый объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindSetIndex">
      <MemberSignature Language="C#" Value="public virtual System.Dynamic.DynamicMetaObject BindSetIndex (System.Dynamic.SetIndexBinder binder, System.Dynamic.DynamicMetaObject[] indexes, System.Dynamic.DynamicMetaObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject BindSetIndex(class System.Dynamic.SetIndexBinder binder, class System.Dynamic.DynamicMetaObject[] indexes, class System.Dynamic.DynamicMetaObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.BindSetIndex(System.Dynamic.SetIndexBinder,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindSetIndex (binder As SetIndexBinder, indexes As DynamicMetaObject(), value As DynamicMetaObject) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Dynamic::DynamicMetaObject ^ BindSetIndex(System::Dynamic::SetIndexBinder ^ binder, cli::array &lt;System::Dynamic::DynamicMetaObject ^&gt; ^ indexes, System::Dynamic::DynamicMetaObject ^ value);" />
      <MemberSignature Language="F#" Value="abstract member BindSetIndex : System.Dynamic.SetIndexBinder * System.Dynamic.DynamicMetaObject[] * System.Dynamic.DynamicMetaObject -&gt; System.Dynamic.DynamicMetaObject&#xA;override this.BindSetIndex : System.Dynamic.SetIndexBinder * System.Dynamic.DynamicMetaObject[] * System.Dynamic.DynamicMetaObject -&gt; System.Dynamic.DynamicMetaObject" Usage="dynamicMetaObject.BindSetIndex (binder, indexes, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.SetIndexBinder" />
        <Parameter Name="indexes" Type="System.Dynamic.DynamicMetaObject[]" />
        <Parameter Name="value" Type="System.Dynamic.DynamicMetaObject" />
      </Parameters>
      <Docs>
        <param name="binder">Экземпляр класса <see cref="T:System.Dynamic.SetIndexBinder" />, который представляет сведения о динамической операции.</param>
        <param name="indexes">Массив экземпляров <see cref="T:System.Dynamic.DynamicMetaObject" />, которые являются индексами для операции задания индекса.</param>
        <param name="value">Объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий значение операции задания индекса.</param>
        <summary>Выполняет привязку динамической операции задания индекса.</summary>
        <returns>Новый объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindSetMember">
      <MemberSignature Language="C#" Value="public virtual System.Dynamic.DynamicMetaObject BindSetMember (System.Dynamic.SetMemberBinder binder, System.Dynamic.DynamicMetaObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject BindSetMember(class System.Dynamic.SetMemberBinder binder, class System.Dynamic.DynamicMetaObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.BindSetMember(System.Dynamic.SetMemberBinder,System.Dynamic.DynamicMetaObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindSetMember (binder As SetMemberBinder, value As DynamicMetaObject) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Dynamic::DynamicMetaObject ^ BindSetMember(System::Dynamic::SetMemberBinder ^ binder, System::Dynamic::DynamicMetaObject ^ value);" />
      <MemberSignature Language="F#" Value="abstract member BindSetMember : System.Dynamic.SetMemberBinder * System.Dynamic.DynamicMetaObject -&gt; System.Dynamic.DynamicMetaObject&#xA;override this.BindSetMember : System.Dynamic.SetMemberBinder * System.Dynamic.DynamicMetaObject -&gt; System.Dynamic.DynamicMetaObject" Usage="dynamicMetaObject.BindSetMember (binder, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.SetMemberBinder" />
        <Parameter Name="value" Type="System.Dynamic.DynamicMetaObject" />
      </Parameters>
      <Docs>
        <param name="binder">Экземпляр класса <see cref="T:System.Dynamic.SetMemberBinder" />, который представляет сведения о динамической операции.</param>
        <param name="value">Объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий значение операции задания члена.</param>
        <summary>Выполняет привязку динамической операции задания члена.</summary>
        <returns>Новый объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindUnaryOperation">
      <MemberSignature Language="C#" Value="public virtual System.Dynamic.DynamicMetaObject BindUnaryOperation (System.Dynamic.UnaryOperationBinder binder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject BindUnaryOperation(class System.Dynamic.UnaryOperationBinder binder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.BindUnaryOperation(System.Dynamic.UnaryOperationBinder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindUnaryOperation (binder As UnaryOperationBinder) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Dynamic::DynamicMetaObject ^ BindUnaryOperation(System::Dynamic::UnaryOperationBinder ^ binder);" />
      <MemberSignature Language="F#" Value="abstract member BindUnaryOperation : System.Dynamic.UnaryOperationBinder -&gt; System.Dynamic.DynamicMetaObject&#xA;override this.BindUnaryOperation : System.Dynamic.UnaryOperationBinder -&gt; System.Dynamic.DynamicMetaObject" Usage="dynamicMetaObject.BindUnaryOperation binder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.UnaryOperationBinder" />
      </Parameters>
      <Docs>
        <param name="binder">Экземпляр класса <see cref="T:System.Dynamic.UnaryOperationBinder" />, который представляет сведения о динамической операции.</param>
        <summary>Выполняет привязку динамической унарной операции.</summary>
        <returns>Новый объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Dynamic.DynamicMetaObject Create (object value, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Dynamic.DynamicMetaObject Create(object value, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.Create(System.Object,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Dynamic::DynamicMetaObject ^ Create(System::Object ^ value, System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member Create : obj * System.Linq.Expressions.Expression -&gt; System.Dynamic.DynamicMetaObject" Usage="System.Dynamic.DynamicMetaObject.Create (value, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="value">Объект, для которого создается метаобъект.</param>
        <param name="expression">Выражение, представляющее данный объект <see cref="T:System.Dynamic.DynamicMetaObject" /> в процессе динамической привязки.</param>
        <summary>Создает метаобъект для указанного объекта.</summary>
        <returns>Если заданный объект реализует интерфейс <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" /> и не является удаленным объектом из другого домена приложения, метод <see cref="M:System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)" /> возвращает метаобъект, относящийся к конкретному объекту. В противном случае создается и возвращается новый обычный метаобъект без ограничений.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyMetaObjects">
      <MemberSignature Language="C#" Value="public static readonly System.Dynamic.DynamicMetaObject[] EmptyMetaObjects;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Dynamic.DynamicMetaObject[] EmptyMetaObjects" />
      <MemberSignature Language="DocId" Value="F:System.Dynamic.DynamicMetaObject.EmptyMetaObjects" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EmptyMetaObjects As DynamicMetaObject() " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly cli::array &lt;System::Dynamic::DynamicMetaObject ^&gt; ^ EmptyMetaObjects;" />
      <MemberSignature Language="F#" Value=" staticval mutable EmptyMetaObjects : System.Dynamic.DynamicMetaObject[]" Usage="System.Dynamic.DynamicMetaObject.EmptyMetaObjects" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет пустой массив типа <see cref="T:System.Dynamic.DynamicMetaObject" />. Это поле доступно только для чтения.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Expression" />
      <MemberSignature Language="DocId" Value="P:System.Dynamic.DynamicMetaObject.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Linq.Expressions.Expression" Usage="System.Dynamic.DynamicMetaObject.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Выражение, представляющее объект <see cref="T:System.Dynamic.DynamicMetaObject" /> в процессе динамической привязки.</summary>
        <value>Выражение, представляющее объект <see cref="T:System.Dynamic.DynamicMetaObject" /> в процессе динамической привязки.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicMemberNames">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;string&gt; GetDynamicMemberNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetDynamicMemberNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.DynamicMetaObject.GetDynamicMemberNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDynamicMemberNames () As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetDynamicMemberNames();" />
      <MemberSignature Language="F#" Value="abstract member GetDynamicMemberNames : unit -&gt; seq&lt;string&gt;&#xA;override this.GetDynamicMemberNames : unit -&gt; seq&lt;string&gt;" Usage="dynamicMetaObject.GetDynamicMemberNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечисление имен всех динамических членов.</summary>
        <returns>Список имен динамических членов.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Dynamic.DynamicMetaObject.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Dynamic.DynamicMetaObject.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, показывающее, имеет ли объект <see cref="T:System.Dynamic.DynamicMetaObject" /> значение среды выполнения.</summary>
        <value><see langword="true" />, если <see langword="false" />имеет значение времени выполнения; в противном случае —. <see cref="T:System.Dynamic.DynamicMetaObject" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LimitType">
      <MemberSignature Language="C#" Value="public Type LimitType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type LimitType" />
      <MemberSignature Language="DocId" Value="P:System.Dynamic.DynamicMetaObject.LimitType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LimitType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ LimitType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LimitType : Type" Usage="System.Dynamic.DynamicMetaObject.LimitType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает тип ограничения <see cref="T:System.Dynamic.DynamicMetaObject" />.</summary>
        <value>Значение <see cref="P:System.Dynamic.DynamicMetaObject.RuntimeType" />, если значение среды выполнения доступно; в противном случае — тип свойства <see cref="P:System.Dynamic.DynamicMetaObject.Expression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Представляет наиболее конкретный тип, известный для объекта, представленного <xref:System.Dynamic.DynamicMetaObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Restrictions">
      <MemberSignature Language="C#" Value="public System.Dynamic.BindingRestrictions Restrictions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Dynamic.BindingRestrictions Restrictions" />
      <MemberSignature Language="DocId" Value="P:System.Dynamic.DynamicMetaObject.Restrictions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Restrictions As BindingRestrictions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Dynamic::BindingRestrictions ^ Restrictions { System::Dynamic::BindingRestrictions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Restrictions : System.Dynamic.BindingRestrictions" Usage="System.Dynamic.DynamicMetaObject.Restrictions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Dynamic.BindingRestrictions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Набор ограничений привязки, при соблюдении которых привязка является допустимой.</summary>
        <value>Набор ограничений привязки.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeType">
      <MemberSignature Language="C#" Value="public Type RuntimeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type RuntimeType" />
      <MemberSignature Language="DocId" Value="P:System.Dynamic.DynamicMetaObject.RuntimeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RuntimeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ RuntimeType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RuntimeType : Type" Usage="System.Dynamic.DynamicMetaObject.RuntimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Type" /> значения среды выполнения или NULL, если с объектом <see cref="T:System.Dynamic.DynamicMetaObject" /> не связано никакое значение.</summary>
        <value>Объект <see cref="T:System.Type" /> значения среды выполнения или NULL.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Dynamic.DynamicMetaObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Dynamic.DynamicMetaObject.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Значение среды выполнения, представленное объектом <see cref="T:System.Dynamic.DynamicMetaObject" />.</summary>
        <value>Значение среды выполнения, представленное объектом <see cref="T:System.Dynamic.DynamicMetaObject" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
