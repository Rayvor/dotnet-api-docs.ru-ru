<Type Name="MailAddress" FullName="System.Net.Mail.MailAddress">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ba3a21860a15ff830725ee07613ca53143905ce" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73386708" /></Metadata><TypeSignature Language="C#" Value="public class MailAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class MailAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailAddress" />
  <TypeSignature Language="F#" Value="type MailAddress = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="93e2f-101">Представляет адрес отправителя или получателя электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-101">Represents the address of an electronic mail sender or recipient.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="93e2f-102">Класс <xref:System.Net.Mail.MailAddress> используется классами <xref:System.Net.Mail.SmtpClient> и <xref:System.Net.Mail.MailMessage> для хранения сведений об адресах для сообщений электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-102">The <xref:System.Net.Mail.MailAddress> class is used by the <xref:System.Net.Mail.SmtpClient> and <xref:System.Net.Mail.MailMessage> classes to store address information for email messages.</span></span>  
  
<span data-ttu-id="93e2f-103">Адрес электронной почты состоит из имени <xref:System.Net.Mail.MailAddress.User%2A>, <xref:System.Net.Mail.MailAddress.Host%2A> имени и, при необходимости, <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span><span class="sxs-lookup"><span data-stu-id="93e2f-103">A mail address is composed of a <xref:System.Net.Mail.MailAddress.User%2A> name, <xref:System.Net.Mail.MailAddress.Host%2A> name and optionally, a <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span></span> <span data-ttu-id="93e2f-104">При кодировании <xref:System.Net.Mail.MailAddress.DisplayName%2A> может содержать символы, не входящие в набор ASCII.</span><span class="sxs-lookup"><span data-stu-id="93e2f-104">The <xref:System.Net.Mail.MailAddress.DisplayName%2A> can contain non-ASCII characters if you encode them.</span></span>  
  
<span data-ttu-id="93e2f-105">Класс <xref:System.Net.Mail.MailAddress> поддерживает следующие форматы адресов электронной почты:</span><span class="sxs-lookup"><span data-stu-id="93e2f-105">The <xref:System.Net.Mail.MailAddress> class supports the following mail address formats:</span></span>  
  
-   <span data-ttu-id="93e2f-106">Простой формат адреса `user@host`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-106">A simple address format of `user@host`.</span></span> <span data-ttu-id="93e2f-107">Если <xref:System.Net.Mail.MailAddress.DisplayName%2A> не задано, это формат почтового адреса.</span><span class="sxs-lookup"><span data-stu-id="93e2f-107">If a <xref:System.Net.Mail.MailAddress.DisplayName%2A> is not set, this is the mail address format generated.</span></span>  
  
-   <span data-ttu-id="93e2f-108">Стандартный формат отображаемого имени в кавычках для `"display name" <user@host>`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-108">A standard quoted display name format of `"display name" <user@host>`.</span></span> <span data-ttu-id="93e2f-109">Если задан <xref:System.Net.Mail.MailAddress.DisplayName%2A>, то это созданный формат.</span><span class="sxs-lookup"><span data-stu-id="93e2f-109">If a <xref:System.Net.Mail.MailAddress.DisplayName%2A> is set, this is the format generated.</span></span>  
  
-   <span data-ttu-id="93e2f-110">Угловые скобки добавляются вокруг имени <xref:System.Net.Mail.MailAddress.User%2A> и имени <xref:System.Net.Mail.MailAddress.Host%2A>, если они не включены.</span><span class="sxs-lookup"><span data-stu-id="93e2f-110">Angle brackets are added around the <xref:System.Net.Mail.MailAddress.User%2A> name and <xref:System.Net.Mail.MailAddress.Host%2A> name, if these are not included.</span></span> <span data-ttu-id="93e2f-111">Например, `"display name" user@host` изменяется на `"display name" <user@host>`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-111">For example, `"display name" user@host` is changed to `"display name" <user@host>`.</span></span>
  
-   <span data-ttu-id="93e2f-112">Кавычки добавляются вокруг <xref:System.Net.Mail.MailAddress.DisplayName%2A>, если они не включены.</span><span class="sxs-lookup"><span data-stu-id="93e2f-112">Quotes are added around the <xref:System.Net.Mail.MailAddress.DisplayName%2A>, if these are not included.</span></span> <span data-ttu-id="93e2f-113">Например, `display name <user@host>` изменяется на `"display name" <user@host>`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-113">For example, `display name <user@host>` is changed to `"display name" <user@host>`.</span></span>
  
-   <span data-ttu-id="93e2f-114">В свойстве <xref:System.Net.Mail.MailAddress.DisplayName%2A> поддерживаются символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="93e2f-114">Unicode characters are supported in the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property.</span></span>  
  
-   <span data-ttu-id="93e2f-115">Имя <xref:System.Net.Mail.MailAddress.User%2A> с кавычками.</span><span class="sxs-lookup"><span data-stu-id="93e2f-115">A <xref:System.Net.Mail.MailAddress.User%2A> name with quotes.</span></span> <span data-ttu-id="93e2f-116">Например, `"user name"@host`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-116">For example, `"user name"@host`.</span></span>  
  
-   <span data-ttu-id="93e2f-117">Последовательные и конечные точки в именах пользователей.</span><span class="sxs-lookup"><span data-stu-id="93e2f-117">Consecutive and trailing dots in user names.</span></span> <span data-ttu-id="93e2f-118">Например, `user...name..@host`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-118">For example, `user...name..@host`.</span></span>  
  
-   <span data-ttu-id="93e2f-119">Литералы домена в квадратных скобках.</span><span class="sxs-lookup"><span data-stu-id="93e2f-119">Bracketed domain literals.</span></span> <span data-ttu-id="93e2f-120">Например, `<user@[my domain]>`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-120">For example, `<user@[my domain]>`.</span></span>  
  
-   <span data-ttu-id="93e2f-121">Обсуждения.</span><span class="sxs-lookup"><span data-stu-id="93e2f-121">Comments.</span></span> <span data-ttu-id="93e2f-122">Например, `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-122">For example, `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`.</span></span> <span data-ttu-id="93e2f-123">Комментарии удаляются перед передачей.</span><span class="sxs-lookup"><span data-stu-id="93e2f-123">Comments are removed before transmission.</span></span>  
  
<span data-ttu-id="93e2f-124">Запятая используется для разделения элементов в списке адресов электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-124">A comma is used to separate elements in a list of mail addresses.</span></span> <span data-ttu-id="93e2f-125">В результате запятая не должна использоваться в отображаемых именах, не заключенных в кавычки, в списке.</span><span class="sxs-lookup"><span data-stu-id="93e2f-125">As a result, a comma should not be used in unquoted display names in a list.</span></span> <span data-ttu-id="93e2f-126">Можно использовать следующие адреса электронной почты:</span><span class="sxs-lookup"><span data-stu-id="93e2f-126">The following mail addresses would be allowed:</span></span>
  
`"John, Doe" <user@host>, "Bob, Smith" <user2@host>`  
  
<span data-ttu-id="93e2f-127">Следующий почтовый адрес не будет разрешен:</span><span class="sxs-lookup"><span data-stu-id="93e2f-127">The following mail address would not be allowed:</span></span>  
  
`John, Doe <user@host>, Bob, Smith <user2@host>`  
  
<span data-ttu-id="93e2f-128">Кавычки можно внедрять в строку в кавычках, но они должны быть экранированы.</span><span class="sxs-lookup"><span data-stu-id="93e2f-128">Quotes can be embedded in a quoted string, but they must be escaped.</span></span> <span data-ttu-id="93e2f-129">Можно использовать следующие адреса электронной почты:</span><span class="sxs-lookup"><span data-stu-id="93e2f-129">The following mail addresses would be allowed:</span></span>
  
`"John \"Jr\" Doe" <user@host>`  
  
`"\"John \\\"Jr\\\" Doe\" <user@host>"`  
  
<span data-ttu-id="93e2f-130">Следующий почтовый адрес не будет разрешен:</span><span class="sxs-lookup"><span data-stu-id="93e2f-130">The following mail address would not be allowed:</span></span>  
  
`"John "Jr" Doe" <user@host>`  
  
<span data-ttu-id="93e2f-131">Если имя пользователя не заключено в кавычки, весь текст между началом строки (или запятой) и адресом считается частью <xref:System.Net.Mail.MailAddress.DisplayName%2A>, включая комментарии.</span><span class="sxs-lookup"><span data-stu-id="93e2f-131">When the username is not quoted, all text between the start of the string (or comma) and the address are considered part of the <xref:System.Net.Mail.MailAddress.DisplayName%2A>, including comments.</span></span> <span data-ttu-id="93e2f-132">Например:</span><span class="sxs-lookup"><span data-stu-id="93e2f-132">For example:</span></span>
  
`(non comment) unquoted display (non comment) name (non comment) <user@host>`
  
<span data-ttu-id="93e2f-133">Несмотря на то, что класс <xref:System.Net.Mail.MailAddress> принимает допустимый почтовый адрес, другие почтовые серверы могут не принимать адрес электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-133">Although the <xref:System.Net.Mail.MailAddress> class accepts a mail address as valid, other mail servers may not accept the mail address.</span></span>  
  
<span data-ttu-id="93e2f-134">Класс <xref:System.Net.Mail.MailAddress> не поддерживает следующие форматы адресов электронной почты:</span><span class="sxs-lookup"><span data-stu-id="93e2f-134">The <xref:System.Net.Mail.MailAddress> class does not support the following mail address formats:</span></span>  
  
- <span data-ttu-id="93e2f-135">Имена отображаемых имен в кавычках и без кавычек.</span><span class="sxs-lookup"><span data-stu-id="93e2f-135">Mixed quoted and unquoted display names.</span></span> <span data-ttu-id="93e2f-136">Например, `display "name" <user@host>`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-136">For example, `display "name" <user@host>`.</span></span>
  
- <span data-ttu-id="93e2f-137">Группы, как определено в 3,4 разделе RFC 2822, опубликованном IETF.</span><span class="sxs-lookup"><span data-stu-id="93e2f-137">Groups, as defined in RFC 2822 Section 3.4 published by the IETF.</span></span>  
  
- <span data-ttu-id="93e2f-138">Устаревшие форматы имен пользователей `"user"."name"@host`, `user."name"@host` или `"user".name@host`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-138">The obsolete user name formats of `"user"."name"@host`, `user."name"@host` or `"user".name@host`.</span></span>
  
   
  
## Examples  
<span data-ttu-id="93e2f-139">В следующем примере кода демонстрируется отправка сообщения электронной почты с помощью классов <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Mail.MailAddress>и <xref:System.Net.Mail.MailMessage>.</span><span class="sxs-lookup"><span data-stu-id="93e2f-139">The following code example demonstrates sending an email message by using the <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Mail.MailAddress>, and <xref:System.Net.Mail.MailMessage> classes.</span></span>  
  
[!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
[!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93e2f-140">Инициализирует новый экземпляр класса <see cref="T:System.Net.Mail.MailAddress" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-140">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="93e2f-141">Объект <see cref="T:System.String" />, содержащий адрес электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-141">A <see cref="T:System.String" /> that contains an email address.</span></span></param>
        <summary><span data-ttu-id="93e2f-142">Инициализирует новый экземпляр класса <see cref="T:System.Net.Mail.MailAddress" />, используя указанный адрес.</span><span class="sxs-lookup"><span data-stu-id="93e2f-142">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93e2f-143">Параметр `address` может содержать отображаемое имя и связанный адрес электронной почты, если вы заключаете адрес в угловые скобки.</span><span class="sxs-lookup"><span data-stu-id="93e2f-143">The `address` parameter can contain a display name and the associated email address if you enclose the address in angle brackets.</span></span> <span data-ttu-id="93e2f-144">Например:</span><span class="sxs-lookup"><span data-stu-id="93e2f-144">For example:</span></span>  
  
 `"Tom Smith <tsmith@contoso.com>"`  
  
 <span data-ttu-id="93e2f-145">Между отображаемым именем и угловыми скобками разрешены пробелы.</span><span class="sxs-lookup"><span data-stu-id="93e2f-145">White space is permitted between the display name and the angle brackets.</span></span>  
  
 <span data-ttu-id="93e2f-146">В следующей таблице показаны значения свойств для объекта <xref:System.Net.Mail.MailAddress>, созданного с помощью адреса из предыдущего примера.</span><span class="sxs-lookup"><span data-stu-id="93e2f-146">The following table shows the property values for a <xref:System.Net.Mail.MailAddress> object constructed using the preceding example address.</span></span>  
  
|<span data-ttu-id="93e2f-147">Свойство.</span><span class="sxs-lookup"><span data-stu-id="93e2f-147">Property</span></span>|<span data-ttu-id="93e2f-148">Значение</span><span class="sxs-lookup"><span data-stu-id="93e2f-148">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`"Tom Smith"`|  
|<xref:System.Net.Mail.MailAddress.Host%2A>|`"contoso.com"`|  
|<xref:System.Net.Mail.MailAddress.User%2A>|`"tsmith"`|  
|<xref:System.Net.Mail.MailAddress.Address%2A>|`"tsmith@contoso.com"`|  
  
   
  
## Examples  
 <span data-ttu-id="93e2f-149">В следующем примере кода этот конструктор используется для создания объекта <xref:System.Net.Mail.MailAddress> для <xref:System.Net.Mail.MailMessage.Bcc%2A> получателя сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-149">The following code example uses this constructor to create a <xref:System.Net.Mail.MailAddress> object for the <xref:System.Net.Mail.MailMessage.Bcc%2A> recipient of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93e2f-150"><paramref name="address" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-150"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93e2f-151"><paramref name="address" /> имеет значение <see cref="F:System.String.Empty" /> ("").</span><span class="sxs-lookup"><span data-stu-id="93e2f-151"><paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="93e2f-152"><paramref name="address" /> указан в нераспознаваемом формате.</span><span class="sxs-lookup"><span data-stu-id="93e2f-152"><paramref name="address" /> is not in a recognized format.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="93e2f-153">Объект <see cref="T:System.String" />, содержащий адрес электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-153">A <see cref="T:System.String" /> that contains an email address.</span></span></param>
        <param name="displayName"><span data-ttu-id="93e2f-154"><see cref="T:System.String" />, содержащий отображаемое имя, связанное с <paramref name="address" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-154">A <see cref="T:System.String" /> that contains the display name associated with <paramref name="address" />.</span></span> <span data-ttu-id="93e2f-155">Этот параметр может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-155">This parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="93e2f-156">Инициализирует новый экземпляр класса <see cref="T:System.Net.Mail.MailAddress" />, используя указанный адрес и отображаемое имя.</span><span class="sxs-lookup"><span data-stu-id="93e2f-156">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address and display name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93e2f-157">Начальные и конечные пробелы в отображаемом имени сохраняются.</span><span class="sxs-lookup"><span data-stu-id="93e2f-157">Leading and trailing white space in the display name is preserved.</span></span>  
  
 <span data-ttu-id="93e2f-158">Если `displayName` содержит символы, отличные от ASCII, то кодировка ISO-8859-1 используется для `displayName` кодирования.</span><span class="sxs-lookup"><span data-stu-id="93e2f-158">If `displayName` contains non-ASCII characters, the iso-8859-1 character set is used for the `displayName` encoding.</span></span> <span data-ttu-id="93e2f-159">Кодировка символов, отличных от ASCII, обсуждается в документе RFC 1522, который можно найти по адресу [https://www.ietf.org/](https://www.ietf.org/).</span><span class="sxs-lookup"><span data-stu-id="93e2f-159">Encoding non-ASCII characters is discussed in RFC 1522, which is available at [https://www.ietf.org/](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="93e2f-160">Если `address` содержит отображаемое имя, а `displayName` не `null` и не равно <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` переопределяет значение, указанное в `address`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-160">If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` overrides the value specified in `address`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93e2f-161">В следующем примере кода этот конструктор используется для создания экземпляров <xref:System.Net.Mail.MailAddress> для отправителя и получателя сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-161">The following code example uses this constructor to create <xref:System.Net.Mail.MailAddress> instances for the sender and recipient of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93e2f-162"><paramref name="address" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-162"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93e2f-163"><paramref name="address" /> имеет значение <see cref="F:System.String.Empty" /> ("").</span><span class="sxs-lookup"><span data-stu-id="93e2f-163"><paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="93e2f-164"><paramref name="address" /> указан в нераспознаваемом формате.</span><span class="sxs-lookup"><span data-stu-id="93e2f-164"><paramref name="address" /> is not in a recognized format.</span></span>  
  
<span data-ttu-id="93e2f-165">- или -</span><span class="sxs-lookup"><span data-stu-id="93e2f-165">-or-</span></span> 
 <span data-ttu-id="93e2f-166"><paramref name="address" /> содержит символы, отличные от ASCII.</span><span class="sxs-lookup"><span data-stu-id="93e2f-166"><paramref name="address" /> contains non-ASCII characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName, class System.Text.Encoding displayNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String, displayNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName, System::Text::Encoding ^ displayNameEncoding);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string * System.Text.Encoding -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName, displayNameEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("We don't do anything with displayNameEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="93e2f-167">Объект <see cref="T:System.String" />, содержащий адрес электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-167">A <see cref="T:System.String" /> that contains an email address.</span></span></param>
        <param name="displayName"><span data-ttu-id="93e2f-168">Значение <see cref="T:System.String" />, которое содержит отображаемое имя, связанное с <paramref name="address" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-168">A <see cref="T:System.String" /> that contains the display name associated with <paramref name="address" />.</span></span></param>
        <param name="displayNameEncoding"><span data-ttu-id="93e2f-169"><see cref="T:System.Text.Encoding" />, который определяет набор символов, используемый для параметра <paramref name="displayName" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-169">The <see cref="T:System.Text.Encoding" /> that defines the character set used for <paramref name="displayName" />.</span></span></param>
        <summary><span data-ttu-id="93e2f-170">Инициализирует новый экземпляр класса <see cref="T:System.Net.Mail.MailAddress" />, используя заданные адрес, отображаемое имя и кодировку.</span><span class="sxs-lookup"><span data-stu-id="93e2f-170">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address, display name, and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93e2f-171">Начальные и конечные пробелы в отображаемом имени сохраняются.</span><span class="sxs-lookup"><span data-stu-id="93e2f-171">Leading and trailing white space in the display name is preserved.</span></span>  
  
 <span data-ttu-id="93e2f-172">Если `address` содержит отображаемое имя, а `displayName` не `null` и не равно <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` переопределяет значение, указанное в `address`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-172">If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` overrides the value specified in `address`.</span></span>  
  
 <span data-ttu-id="93e2f-173">Метод <xref:System.Net.Mail.MailAddress.%23ctor%2A> не проверяет допустимость параметра `displayName`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-173">The <xref:System.Net.Mail.MailAddress.%23ctor%2A> method does not check if the `displayName` parameter is valid.</span></span> <span data-ttu-id="93e2f-174">Этот метод удаляет окружающие кавычки, не отображаемые свойством <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span><span class="sxs-lookup"><span data-stu-id="93e2f-174">This method removes surrounding quotes not displayed by the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property.</span></span> <span data-ttu-id="93e2f-175">Кавычки будут добавлены перед передачей, за исключением случаев, когда в параметре `displayNameEncoding` указано <xref:System.Text.Encoding.ASCII%2A> или <xref:System.Text.Encoding.Unicode%2A>.</span><span class="sxs-lookup"><span data-stu-id="93e2f-175">Quotes will be added before transmission, except where <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter.</span></span> <span data-ttu-id="93e2f-176">Кодировка, указанная в параметре `displayNameEncoding`, будет применена к свойству <xref:System.Net.Mail.MailAddress.DisplayName%2A> перед передачей <xref:System.Text.Encoding.ASCII%2A> или <xref:System.Text.Encoding.Unicode%2A> указана в параметре `displayNameEncoding`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-176">The encoding specified in the `displayNameEncoding` parameter will be applied to the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property before transmission <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter.</span></span> <span data-ttu-id="93e2f-177">Если значение не указано, <xref:System.Text.Encoding.UTF8%2A> используется кодировка по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="93e2f-177"><xref:System.Text.Encoding.UTF8%2A> is the default encoding if none is specified.</span></span>  
  
 <span data-ttu-id="93e2f-178">Дополнительные сведения о поддерживаемых форматах адресов электронной почты см. в разделе <xref:System.Net.Mail.MailAddress>.</span><span class="sxs-lookup"><span data-stu-id="93e2f-178">For more information on supported mail address formats, see <xref:System.Net.Mail.MailAddress>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93e2f-179">В следующем примере кода этот конструктор используется для создания экземпляров <xref:System.Net.Mail.MailAddress> для отправителя сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-179">The following code example uses this constructor to create <xref:System.Net.Mail.MailAddress> instances for the sender of an email message.</span></span>  
  
 [!code-cpp[NclMailASync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#2)]
 [!code-csharp[NclMailASync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#2)]
 [!code-vb[NclMailASync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93e2f-180"><paramref name="address" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-180"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="93e2f-181">- или -</span><span class="sxs-lookup"><span data-stu-id="93e2f-181">-or-</span></span> 
 <span data-ttu-id="93e2f-182"><paramref name="displayName" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-182"><paramref name="displayName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93e2f-183"><paramref name="address" /> имеет значение <see cref="F:System.String.Empty" /> ("").</span><span class="sxs-lookup"><span data-stu-id="93e2f-183"><paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</span></span>  
  
<span data-ttu-id="93e2f-184">- или -</span><span class="sxs-lookup"><span data-stu-id="93e2f-184">-or-</span></span> 
 <span data-ttu-id="93e2f-185"><paramref name="displayName" /> имеет значение <see cref="F:System.String.Empty" /> ("").</span><span class="sxs-lookup"><span data-stu-id="93e2f-185"><paramref name="displayName" /> is <see cref="F:System.String.Empty" /> ("").</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="93e2f-186"><paramref name="address" /> указан в нераспознаваемом формате.</span><span class="sxs-lookup"><span data-stu-id="93e2f-186"><paramref name="address" /> is not in a recognized format.</span></span>  
  
<span data-ttu-id="93e2f-187">- или -</span><span class="sxs-lookup"><span data-stu-id="93e2f-187">-or-</span></span> 
 <span data-ttu-id="93e2f-188"><paramref name="address" /> содержит символы, отличные от ASCII.</span><span class="sxs-lookup"><span data-stu-id="93e2f-188"><paramref name="address" /> contains non-ASCII characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : string" Usage="System.Net.Mail.MailAddress.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93e2f-189">Возвращает адрес электронной почты, указанный при создании этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="93e2f-189">Gets the email address specified when this instance was created.</span></span></summary>
        <value><span data-ttu-id="93e2f-190">Значение <see cref="T:System.String" />, содержащее адрес электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-190">A <see cref="T:System.String" /> that contains the email address.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93e2f-191">Значение, возвращаемое этим свойством, не включает сведения о <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span><span class="sxs-lookup"><span data-stu-id="93e2f-191">The value returned by this property does not include the <xref:System.Net.Mail.MailAddress.DisplayName%2A> information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93e2f-192">В следующем примере кода отображается адрес получателя сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-192">The following code example displays the address for an email message recipient.</span></span>  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Net.Mail.MailAddress.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93e2f-193">Возвращает отображаемое имя, составленное из отображаемого имени и информации об адресе, заданных при создании этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="93e2f-193">Gets the display name composed from the display name and address information specified when this instance was created.</span></span></summary>
        <value><span data-ttu-id="93e2f-194">Значение <see cref="T:System.String" />, которое содержит отображаемое имя; в противном случае — <see cref="F:System.String.Empty" /> (""), если при создании этого экземпляра не была задана информация об отображаемом имени.</span><span class="sxs-lookup"><span data-stu-id="93e2f-194">A <see cref="T:System.String" /> that contains the display name; otherwise, <see cref="F:System.String.Empty" /> ("") if no display name information was specified when this instance was created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93e2f-195">В удобочитаемой форме возвращаются отображаемые имена, содержащие символы, не входящие в набор ASCII.</span><span class="sxs-lookup"><span data-stu-id="93e2f-195">Display names that contain non-ASCII characters are returned in human-readable form.</span></span> <span data-ttu-id="93e2f-196">Используйте метод <xref:System.Net.Mail.MailAddress.ToString%2A>, чтобы получить закодированную форму <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span><span class="sxs-lookup"><span data-stu-id="93e2f-196">Use the <xref:System.Net.Mail.MailAddress.ToString%2A> method to get the encoded form of the <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span></span>  
  
 <span data-ttu-id="93e2f-197">Некоторые программные программы, используемые для чтения электронной почты, отображают значение <xref:System.Net.Mail.MailAddress.DisplayName%2A> свойства, а не или в дополнение к адресу электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-197">Some software programs that are used to read email display the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property value instead of, or in addition to, the email address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93e2f-198">В следующем примере кода выводится <xref:System.Net.Mail.MailAddress.DisplayName%2A> для получателя сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-198">The following code example displays the <xref:System.Net.Mail.MailAddress.DisplayName%2A> for the recipient of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mailAddress.Equals value" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mailAddress.Equals obj" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="93e2f-199">Экземпляр <see cref="T:System.Net.Mail.MailAddress" /> для сравнения с текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="93e2f-199">A <see cref="T:System.Net.Mail.MailAddress" /> instance to compare to the current instance.</span></span></param>
        <param name="obj"><span data-ttu-id="93e2f-200">Экземпляр <see cref="T:System.Net.Mail.MailAddress" /> для сравнения с текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="93e2f-200">A <see cref="T:System.Net.Mail.MailAddress" /> instance to compare to the current instance.</span></span></param>
        <summary><span data-ttu-id="93e2f-201">Сравнивает два адреса электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-201">Compares two mail addresses.</span></span></summary>
        <returns><span data-ttu-id="93e2f-202">Значение <see langword="true" />, если два почтовых адреса совпадают; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-202"><see langword="true" /> if the two mail addresses are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="mailAddress.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93e2f-203">Возвращает значение хэш-функции для почтового адреса.</span><span class="sxs-lookup"><span data-stu-id="93e2f-203">Returns a hash value for a mail address.</span></span></summary>
        <returns><span data-ttu-id="93e2f-204">Целочисленное хэш-значение.</span><span class="sxs-lookup"><span data-stu-id="93e2f-204">An integer hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93e2f-205">Метод <xref:System.Net.Mail.MailAddress.GetHashCode%2A> Возвращает хэш-код почтового адреса.</span><span class="sxs-lookup"><span data-stu-id="93e2f-205">The <xref:System.Net.Mail.MailAddress.GetHashCode%2A> method returns a hash code of the mail address.</span></span> <span data-ttu-id="93e2f-206">Это значение можно использовать в качестве ключа в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="93e2f-206">This value can be used as a key in hash tables.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : string" Usage="System.Net.Mail.MailAddress.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93e2f-207">Возвращает строку узла из адреса электронной почты, заданного при создании экземпляра.</span><span class="sxs-lookup"><span data-stu-id="93e2f-207">Gets the host portion of the address specified when this instance was created.</span></span></summary>
        <value><span data-ttu-id="93e2f-208"><see cref="T:System.String" />, содержащий имя главного компьютера, принимающего электронную почту для свойства <see cref="P:System.Net.Mail.MailAddress.User" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-208">A <see cref="T:System.String" /> that contains the name of the host computer that accepts email for the <see cref="P:System.Net.Mail.MailAddress.User" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93e2f-209">В типичном адресе электронной почты строка узла содержит все сведения, следующие за знаком "`@`".</span><span class="sxs-lookup"><span data-stu-id="93e2f-209">In a typical email address, the host string includes all information following the "`@`" sign.</span></span> <span data-ttu-id="93e2f-210">Например, в `"tsmith@contoso.com"`узел `"contoso.com"`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-210">For example, in `"tsmith@contoso.com"`, the host is `"contoso.com"`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93e2f-211">В следующем примере кода показано назначение сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-211">The following code example displays the destination of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="mailAddress.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93e2f-212">Возвращает строковое представление данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="93e2f-212">Returns a string representation of this instance.</span></span></summary>
        <returns><span data-ttu-id="93e2f-213">Значение <see cref="T:System.String" />, которое содержит содержимое данного <see cref="T:System.Net.Mail.MailAddress" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-213">A <see cref="T:System.String" /> that contains the contents of this <see cref="T:System.Net.Mail.MailAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93e2f-214">Строка, возвращаемая этим методом, не обязательно совпадает со строкой, указанной при создании экземпляра.</span><span class="sxs-lookup"><span data-stu-id="93e2f-214">The string returned by this method is not necessarily identical to the string specified when the instance was created.</span></span> <span data-ttu-id="93e2f-215">Если свойство <xref:System.Net.Mail.MailAddress.DisplayName%2A> не `null` и не равно <xref:System.String.Empty?displayProperty=nameWithType> (""), <xref:System.Net.Mail.MailAddress.ToString%2A> возвращает строку, состоящую из следующего синтаксиса:</span><span class="sxs-lookup"><span data-stu-id="93e2f-215">If the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property is not `null` and not equal to <xref:System.String.Empty?displayProperty=nameWithType> (""), <xref:System.Net.Mail.MailAddress.ToString%2A> returns a string composed using the following syntax:</span></span>  
  
 <span data-ttu-id="93e2f-216"><xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>></span><span class="sxs-lookup"><span data-stu-id="93e2f-216"><xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>></span></span>  
  
 <span data-ttu-id="93e2f-217">Если <xref:System.Net.Mail.MailAddress.DisplayName%2A> имеет `null` или равно <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.MailAddress.ToString%2A> возвращает значение свойства <xref:System.Net.Mail.MailAddress.Address%2A>.</span><span class="sxs-lookup"><span data-stu-id="93e2f-217">If <xref:System.Net.Mail.MailAddress.DisplayName%2A> is `null` or is equal to <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.MailAddress.ToString%2A> returns the value of the <xref:System.Net.Mail.MailAddress.Address%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93e2f-218">В следующем примере кода показано назначение сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-218">The following code example displays the destination of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public string User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string User" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ User { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : string" Usage="System.Net.Mail.MailAddress.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93e2f-219">Возвращает информацию о пользователе из адреса электронной почты, указанного при создании экземпляра.</span><span class="sxs-lookup"><span data-stu-id="93e2f-219">Gets the user information from the address specified when this instance was created.</span></span></summary>
        <value><span data-ttu-id="93e2f-220">Значение <see cref="T:System.String" />, содержащее строку имени пользователя из <see cref="P:System.Net.Mail.MailAddress.Address" />.</span><span class="sxs-lookup"><span data-stu-id="93e2f-220">A <see cref="T:System.String" /> that contains the user name portion of the <see cref="P:System.Net.Mail.MailAddress.Address" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93e2f-221">В обычном адресе электронной почты строка пользователя содержит все сведения, предшествующие знаку "`@`".</span><span class="sxs-lookup"><span data-stu-id="93e2f-221">In a typical email address, the user string includes all information preceding the "`@`" sign.</span></span> <span data-ttu-id="93e2f-222">Например, в `"tsmith@contoso.com"`пользователь `"tsmith"`.</span><span class="sxs-lookup"><span data-stu-id="93e2f-222">For example, in `"tsmith@contoso.com"`, the user is `"tsmith"`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93e2f-223">В следующем примере кода показано назначение сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="93e2f-223">The following code example displays the destination of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
