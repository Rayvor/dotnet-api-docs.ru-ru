<Type Name="IRequestChannel" FullName="System.ServiceModel.Channels.IRequestChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81999e156cfb8fe49472609b6af5bd7611dc9f63" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73384979" /></Metadata><TypeSignature Language="C#" Value="public interface IRequestChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRequestChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IRequestChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRequestChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRequestChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IRequestChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1ef95-101">Определяет контракт, который необходимо реализовать каналу, чтобы быть на запрашивающей стороне взаимодействия типа «запрос-ответ» между конечными точками, обменивающимися сообщениями.</span><span class="sxs-lookup"><span data-stu-id="1ef95-101">Defines the contract that a channel must implement to be on the requesting side of a request-reply communication between messaging endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 <span data-ttu-id="1ef95-102"><xref:System.ServiceModel.Channels.IRequestChannel> определяет синхронные и асинхронные варианты метода <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A>, возвращающего ответное сообщение.</span><span class="sxs-lookup"><span data-stu-id="1ef95-102">The <xref:System.ServiceModel.Channels.IRequestChannel> defines synchronous and asynchronous variants of a <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A> method that returns a response message.</span></span> <span data-ttu-id="1ef95-103">Кроме того, этот объект предоставляет свойства <xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A> и <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> для извлечения адреса конечной точки и универсального кода ресурса (URI), на которые отправляется сообщение запроса.</span><span class="sxs-lookup"><span data-stu-id="1ef95-103">It also provides a <xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> properties to retrieve the endpoint address and URI to which the request message is sent.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1ef95-104">Начинает асинхронную операцию для передачи сообщения запроса на сторону ответа в ходе обмена сообщениями типа "запрос-ответ".</span><span class="sxs-lookup"><span data-stu-id="1ef95-104">Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRequest : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestChannel.BeginRequest (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1ef95-105">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</span><span class="sxs-lookup"><span data-stu-id="1ef95-105">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span></span></param>
        <param name="callback"><span data-ttu-id="1ef95-106">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции передачи сообщения запроса.</span><span class="sxs-lookup"><span data-stu-id="1ef95-106">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</span></span></param>
        <param name="state"><span data-ttu-id="1ef95-107">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией передачи сообщения запроса.</span><span class="sxs-lookup"><span data-stu-id="1ef95-107">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</span></span></param>
        <summary><span data-ttu-id="1ef95-108">Начинает асинхронную операцию для передачи сообщения запроса на сторону ответа в ходе обмена сообщениями типа "запрос-ответ".</span><span class="sxs-lookup"><span data-stu-id="1ef95-108">Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange.</span></span></summary>
        <returns><span data-ttu-id="1ef95-109">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу сообщения.</span><span class="sxs-lookup"><span data-stu-id="1ef95-109">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef95-110">Если размер сообщения запроса превышает максимальный размер сообщения, допускаемый используемой привязкой, создается исключение <xref:System.ServiceModel.QuotaExceededException>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-110">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="1ef95-111">Максимальный размер сообщения задается свойством <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-111">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="1ef95-112">Значение по умолчанию — 65536 байт.</span><span class="sxs-lookup"><span data-stu-id="1ef95-112">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef95-113">В следующем примере кода показано, как реализовать этот метод.</span><span class="sxs-lookup"><span data-stu-id="1ef95-113">The following code shows how to implement this method.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRequest : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestChannel.BeginRequest (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1ef95-114">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</span><span class="sxs-lookup"><span data-stu-id="1ef95-114">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span></span></param>
        <param name="timeout"><span data-ttu-id="1ef95-115">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого должен быть получен ответ.</span><span class="sxs-lookup"><span data-stu-id="1ef95-115">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which a response must be received.</span></span></param>
        <param name="callback"><span data-ttu-id="1ef95-116">Делегат <see cref="T:System.AsyncCallback" />, принимающий уведомление о завершении асинхронной операции передачи сообщения запроса.</span><span class="sxs-lookup"><span data-stu-id="1ef95-116">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</span></span></param>
        <param name="state"><span data-ttu-id="1ef95-117">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией передачи сообщения запроса.</span><span class="sxs-lookup"><span data-stu-id="1ef95-117">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</span></span></param>
        <summary><span data-ttu-id="1ef95-118">Начинает асинхронную операцию для передачи сообщения запроса на сторону ответа в ходе обмена сообщениями типа «запрос-ответ» в течение заданного промежутка времени.</span><span class="sxs-lookup"><span data-stu-id="1ef95-118">Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="1ef95-119">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу сообщения.</span><span class="sxs-lookup"><span data-stu-id="1ef95-119">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef95-120">Если размер сообщения запроса превышает максимальный размер сообщения, допускаемый используемой привязкой, должно создаваться исключение <xref:System.ServiceModel.QuotaExceededException>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-120">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> should be thrown.</span></span> <span data-ttu-id="1ef95-121">Максимальный размер сообщения задается свойством <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-121">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="1ef95-122">Значение по умолчанию — 65536 байт.</span><span class="sxs-lookup"><span data-stu-id="1ef95-122">The default value is 65536 bytes.</span></span>  
  
 <span data-ttu-id="1ef95-123">Это значение используется, если параметр `timeout` передается во время вызова функции.</span><span class="sxs-lookup"><span data-stu-id="1ef95-123">If a `timeout` is passed while calling the function then that value is used.</span></span> <span data-ttu-id="1ef95-124">Если свойство <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> задано в привязке, значение в привязке используется, если при вызове функции не задан параметр `timeout`.</span><span class="sxs-lookup"><span data-stu-id="1ef95-124">If the <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> is set on the binding, then the value on the binding is used if no `timeout` is specified while calling the function.</span></span>  
  
 <span data-ttu-id="1ef95-125"><xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> используется, если период ожидания не задан ни в привязке, ни при вызове функции.</span><span class="sxs-lookup"><span data-stu-id="1ef95-125">The <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> is used if no timeout is specified on either the binding or while calling the function.</span></span> <span data-ttu-id="1ef95-126">Значение по умолчанию — 1 минута.</span><span class="sxs-lookup"><span data-stu-id="1ef95-126">This default value is 1 minute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef95-127">В следующем примере кода показано, как реализовать этот метод.</span><span class="sxs-lookup"><span data-stu-id="1ef95-127">The following code shows how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1ef95-128">Операция должна создать исключение <see cref="T:System.TimeoutException" />, если до завершения операции превышено заданное значение параметра <paramref name="timeout" />.</span><span class="sxs-lookup"><span data-stu-id="1ef95-128">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndRequest (result As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ EndRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.EndRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1ef95-129">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</span><span class="sxs-lookup"><span data-stu-id="1ef95-129">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> method.</span></span></param>
        <summary><span data-ttu-id="1ef95-130">Завершает асинхронную операцию, чтобы вернуть ответ на основе сообщений переданному запросу.</span><span class="sxs-lookup"><span data-stu-id="1ef95-130">Completes an asynchronous operation to return a message-based response to a transmitted request.</span></span></summary>
        <returns><span data-ttu-id="1ef95-131">Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, полученное в ответ на запрос.</span><span class="sxs-lookup"><span data-stu-id="1ef95-131">The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef95-132">Если размер сообщения запроса превышает максимальный размер сообщения, допускаемый используемой привязкой, создается исключение <xref:System.ServiceModel.QuotaExceededException>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-132">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="1ef95-133">Максимальный размер сообщения задается свойством <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-133">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="1ef95-134">Значение по умолчанию — 65536 байт.</span><span class="sxs-lookup"><span data-stu-id="1ef95-134">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef95-135">В следующем примере кода показано, как реализовать этот метод.</span><span class="sxs-lookup"><span data-stu-id="1ef95-135">The following code shows how to implement this method.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ RemoteAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ef95-136">Возвращает удаленный адрес, на который канал запроса отправляет сообщения.</span><span class="sxs-lookup"><span data-stu-id="1ef95-136">Gets the remote address to which the request channel sends messages.</span></span></summary>
        <value><span data-ttu-id="1ef95-137">Адрес конечной точки <see cref="T:System.ServiceModel.EndpointAddress" />, на который канал запроса отправляет сообщения.</span><span class="sxs-lookup"><span data-stu-id="1ef95-137">The <see cref="T:System.ServiceModel.EndpointAddress" /> to which the request channel sends messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef95-138">Адрес <xref:System.ServiceModel.EndpointAddress> является одновременно конечным назначением и физическим адресом, если не задано свойство <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-138">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="1ef95-139">Если свойство <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> задано, это значение является фактическим физическим адресом, по которому отправляется сообщение и через который должно пройти сообщение, чтобы попасть по назначению.</span><span class="sxs-lookup"><span data-stu-id="1ef95-139">If the <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef95-140">В следующем примере кода показано, как реализовать это свойство.</span><span class="sxs-lookup"><span data-stu-id="1ef95-140">The following code shows how to implement this property.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Request">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1ef95-141">Отправляет запрос на основе сообщений и возвращает связанный ответ на основе сообщений.</span><span class="sxs-lookup"><span data-stu-id="1ef95-141">Sends a message-based request and returns the correlated message-based response.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Request : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.Request message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1ef95-142">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</span><span class="sxs-lookup"><span data-stu-id="1ef95-142">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span></span></param>
        <summary><span data-ttu-id="1ef95-143">Отправляет запрос на основе сообщений и возвращает связанный ответ на основе сообщений.</span><span class="sxs-lookup"><span data-stu-id="1ef95-143">Sends a message-based request and returns the correlated message-based response.</span></span></summary>
        <returns><span data-ttu-id="1ef95-144">Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, полученное в ответ на запрос.</span><span class="sxs-lookup"><span data-stu-id="1ef95-144">The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef95-145">Реализации <xref:System.ServiceModel.Channels.IRequestChannel> обеспечивают корреляцию сообщения ответа с сообщением запроса.</span><span class="sxs-lookup"><span data-stu-id="1ef95-145">Implementations of <xref:System.ServiceModel.Channels.IRequestChannel> ensure that the response message is correlated with the request message.</span></span>  
  
 <span data-ttu-id="1ef95-146">Как правило, если реализация <xref:System.ServiceModel.Channels.IRequestChannel> получает сообщение, которое не соответствует необработанному запросу, оно сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="1ef95-146">Generally, if an implementation of <xref:System.ServiceModel.Channels.IRequestChannel> receives a message that is not correlated to an outstanding request, it is dropped.</span></span>  
  
 <span data-ttu-id="1ef95-147">Метод <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> можно одновременно вызывать в нескольких потоках.</span><span class="sxs-lookup"><span data-stu-id="1ef95-147">The <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> method can be called concurrently across multiple threads.</span></span>  
  
 <span data-ttu-id="1ef95-148">Передача сообщения в канал запроса открывает доступ к нему.</span><span class="sxs-lookup"><span data-stu-id="1ef95-148">Passing the message into the request channel causes the message to be accessed.</span></span> <span data-ttu-id="1ef95-149">После вызова метода <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> невозможно проверить сообщение или вызвать для него метод <xref:System.ServiceModel.Channels.Message.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-149">After you call <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
 <span data-ttu-id="1ef95-150">Если размер сообщения запроса превышает максимальный размер сообщения, допускаемый используемой привязкой, создается исключение <xref:System.ServiceModel.QuotaExceededException>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-150">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="1ef95-151">Максимальный размер сообщения задается свойством <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-151">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="1ef95-152">Значение по умолчанию — 65536 байт.</span><span class="sxs-lookup"><span data-stu-id="1ef95-152">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef95-153">В следующем примере кода показано, как реализовать этот метод.</span><span class="sxs-lookup"><span data-stu-id="1ef95-153">The following code shows how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Request : System.ServiceModel.Channels.Message * TimeSpan -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.Request (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1ef95-154">Передаваемый запрос <see cref="T:System.ServiceModel.Channels.Message" />.</span><span class="sxs-lookup"><span data-stu-id="1ef95-154">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span></span></param>
        <param name="timeout"><span data-ttu-id="1ef95-155">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого должен быть получен ответ.</span><span class="sxs-lookup"><span data-stu-id="1ef95-155">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which a response must be received.</span></span></param>
        <summary><span data-ttu-id="1ef95-156">Отправляет запрос на основе сообщений и возвращает связанный ответ на основе сообщений в течение заданного промежутка времени.</span><span class="sxs-lookup"><span data-stu-id="1ef95-156">Sends a message-based request and returns the correlated message-based response within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="1ef95-157">Сообщение <see cref="T:System.ServiceModel.Channels.Message" />, полученное в ответ на запрос.</span><span class="sxs-lookup"><span data-stu-id="1ef95-157">The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef95-158">Реализации <xref:System.ServiceModel.Channels.IRequestChannel> обеспечивают корреляцию сообщения ответа с сообщением запроса.</span><span class="sxs-lookup"><span data-stu-id="1ef95-158">Implementations of <xref:System.ServiceModel.Channels.IRequestChannel> ensure that the response message is correlated with the request message.</span></span>  
  
 <span data-ttu-id="1ef95-159">Как правило, если реализация <xref:System.ServiceModel.Channels.IRequestChannel> получает сообщение, которое не соответствует необработанному запросу, оно сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="1ef95-159">Generally, if an implementation of <xref:System.ServiceModel.Channels.IRequestChannel> receives a message that is not correlated to an outstanding request, it is dropped.</span></span>  
  
 <span data-ttu-id="1ef95-160">Метод <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> можно одновременно вызывать в нескольких потоках.</span><span class="sxs-lookup"><span data-stu-id="1ef95-160">The <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> method can be called concurrently across multiple threads.</span></span>  
  
 <span data-ttu-id="1ef95-161">Передача сообщения в канал запроса открывает доступ к нему.</span><span class="sxs-lookup"><span data-stu-id="1ef95-161">Passing the message into the request channel causes the message to be accessed.</span></span> <span data-ttu-id="1ef95-162">После вызова метода <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> невозможно проверить сообщение или вызвать для него метод <xref:System.ServiceModel.Channels.Message.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-162">After you call <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
 <span data-ttu-id="1ef95-163">Если размер сообщения запроса превышает максимальный размер сообщения, допускаемый используемой привязкой, создается исключение <xref:System.ServiceModel.QuotaExceededException>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-163">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="1ef95-164">Максимальный размер сообщения задается свойством <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-164">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="1ef95-165">Значение по умолчанию — 65536 байт.</span><span class="sxs-lookup"><span data-stu-id="1ef95-165">The default value is 65536 bytes.</span></span>  
  
 <span data-ttu-id="1ef95-166">Это значение используется, если параметр `timeout` передается во время вызова функции.</span><span class="sxs-lookup"><span data-stu-id="1ef95-166">If a `timeout` is passed while calling the function then that value is used.</span></span> <span data-ttu-id="1ef95-167">Если свойство <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> задано в привязке, значение в привязке используется, если при вызове функции не задан параметр `timeout`.</span><span class="sxs-lookup"><span data-stu-id="1ef95-167">If the <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> is set on the binding, then the value on the binding is used if no `timeout` is specified while calling the function.</span></span>  
  
 <span data-ttu-id="1ef95-168"><xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> используется, если период ожидания не задан ни в привязке, ни при вызове функции.</span><span class="sxs-lookup"><span data-stu-id="1ef95-168">The <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> is used if no timeout is specified on either the binding or while calling the function.</span></span> <span data-ttu-id="1ef95-169">Значение по умолчанию — 1 минута.</span><span class="sxs-lookup"><span data-stu-id="1ef95-169">This default value is 1 minute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef95-170">В следующем примере кода показано, как реализовать этот метод.</span><span class="sxs-lookup"><span data-stu-id="1ef95-170">The following code shows how to implement this method.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1ef95-171">Операция должна создать исключение <see cref="T:System.TimeoutException" />, если до завершения операции превышено заданное значение параметра <paramref name="timeout" />.</span><span class="sxs-lookup"><span data-stu-id="1ef95-171">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Via : Uri" Usage="System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ef95-172">Возвращает адрес транспорта, на который отправляется запрос.</span><span class="sxs-lookup"><span data-stu-id="1ef95-172">Gets the transport address to which the request is send.</span></span></summary>
        <value><span data-ttu-id="1ef95-173">Объект <see cref="T:System.Uri" />, содержащий адрес транспорта, по которому отправляется сообщение.</span><span class="sxs-lookup"><span data-stu-id="1ef95-173">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef95-174">Адрес <xref:System.ServiceModel.EndpointAddress> является одновременно конечным назначением и физическим адресом, если не задано свойство <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ef95-174">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="1ef95-175">Если свойство <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> задано, это значение является фактическим физическим адресом, по которому отправляется сообщение и через который должно пройти сообщение, чтобы попасть по назначению.</span><span class="sxs-lookup"><span data-stu-id="1ef95-175">If the <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef95-176">В следующем примере кода показано, как реализовать это свойство.</span><span class="sxs-lookup"><span data-stu-id="1ef95-176">The following code shows how to implement this property.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
