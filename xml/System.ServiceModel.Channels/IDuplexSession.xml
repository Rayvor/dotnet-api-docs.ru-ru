<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4893578ce73fa37c40f4ed3571ed2e659faba7dc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69155865" /></Metadata><TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDuplexSession&#xA;Implements IInputSession, IOutputSession" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDuplexSession : System::ServiceModel::Channels::IInputSession, System::ServiceModel::Channels::IOutputSession" />
  <TypeSignature Language="F#" Value="type IDuplexSession = interface&#xA;    interface IInputSession&#xA;    interface IOutputSession&#xA;    interface ISession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.ISession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="cbb61-101">Определяет интерфейс для сеанса, реализованного на каждой стороне двусторонней связи между обменивающимися сообщениями конечными точками.</span><span class="sxs-lookup"><span data-stu-id="cbb61-101">Defines the interface for the session implemented on each side of a bi-directional communication between messaging endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbb61-102">Интерфейс <xref:System.ServiceModel.Channels.IDuplexSession> — это объединение входящего сеанса, определяемого интерфейсом <xref:System.ServiceModel.Channels.IInputSession>, и исходящего сеанса, определяемого интерфейсом <xref:System.ServiceModel.Channels.IOutputSession>.</span><span class="sxs-lookup"><span data-stu-id="cbb61-102">The <xref:System.ServiceModel.Channels.IDuplexSession> interface is the union of the inbound session, defined by the <xref:System.ServiceModel.Channels.IInputSession> interface, and the outbound session, defined by the <xref:System.ServiceModel.Channels.IOutputSession> interface.</span></span> <span data-ttu-id="cbb61-103">Входящий и исходящий сеансы можно завершать независимо друг от друга.</span><span class="sxs-lookup"><span data-stu-id="cbb61-103">Either the inbound session or outbound session can be terminated independently of the other.</span></span> <span data-ttu-id="cbb61-104">Для синхронного завершения исходящего сеанса необходимо вызвать метод <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A>, для асинхронного — метод <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.</span><span class="sxs-lookup"><span data-stu-id="cbb61-104">The outbound session can be terminated synchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> or asynchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.</span></span>  
  
 <span data-ttu-id="cbb61-105">Входящий сеанс можно завершить удаленно.</span><span class="sxs-lookup"><span data-stu-id="cbb61-105">The inbound session can be remotely terminated.</span></span> <span data-ttu-id="cbb61-106">При завершении работы сеанса метод <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>, связанный с входящим сеансом, начинает возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cbb61-106">The <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> associated with the inbound session starts returning `null` when that session is shutdown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cbb61-107">Начинает асинхронную операцию завершения исходящего сеанса.</span><span class="sxs-lookup"><span data-stu-id="cbb61-107">Begins an asynchronous operation to terminate the outbound session.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="cbb61-108">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="cbb61-108">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="cbb61-109">Объект <see langword="object" />, содержащий данные о состоянии этого запроса.</span><span class="sxs-lookup"><span data-stu-id="cbb61-109">An <see langword="object" /> that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="cbb61-110">Начинает асинхронную операцию завершения исходящего сеанса.</span><span class="sxs-lookup"><span data-stu-id="cbb61-110">Begins an asynchronous operation to terminate the outbound session.</span></span></summary>
        <returns><span data-ttu-id="cbb61-111">Объект <see cref="T:System.IAsyncResult" />, ссылающийся на асинхронное завершение исходящего сеанса.</span><span class="sxs-lookup"><span data-stu-id="cbb61-111">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbb61-112">Завершение исходящего сеанса не влияет на входящий сеанс, и поэтому при этом не возникает никаких заявлений о способности получать сообщения в сеансе, связанном с входящим каналом.</span><span class="sxs-lookup"><span data-stu-id="cbb61-112">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span> <span data-ttu-id="cbb61-113">Эта операция должна завершиться в течение промежутка времени по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="cbb61-113">This operation must complete within a default interval of time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="cbb61-114">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого операция должна завершиться.</span><span class="sxs-lookup"><span data-stu-id="cbb61-114">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span></span></param>
        <param name="callback"><span data-ttu-id="cbb61-115">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="cbb61-115">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="cbb61-116">Объект <see langword="object" />, содержащий данные о состоянии этого запроса.</span><span class="sxs-lookup"><span data-stu-id="cbb61-116">An <see langword="object" /> that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="cbb61-117">Начинает асинхронную операцию завершения исходящего сеанса с заданным временем ожидания завершения операции.</span><span class="sxs-lookup"><span data-stu-id="cbb61-117">Begins an asynchronous operation to terminate the outbound session with a specified timeout within which the operation must complete.</span></span></summary>
        <returns><span data-ttu-id="cbb61-118">Объект <see cref="T:System.IAsyncResult" />, ссылающийся на асинхронное завершение исходящего сеанса.</span><span class="sxs-lookup"><span data-stu-id="cbb61-118">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbb61-119">Завершение исходящего сеанса не влияет на входящий сеанс, и поэтому при этом не возникает никаких заявлений о способности получать сообщения в сеансе, связанном с входящим каналом.</span><span class="sxs-lookup"><span data-stu-id="cbb61-119">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cbb61-120">Завершает исходящий сеанс, что означает, что этой конечной точкой больше не будет отправлено ни одного сообщения по каналу, связанному с сеансом.</span><span class="sxs-lookup"><span data-stu-id="cbb61-120">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession();" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : unit -&gt; unit" Usage="iDuplexSession.CloseOutputSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cbb61-121">Завершает исходящий сеанс, что означает, что этой конечной точкой больше не будет отправлено ни одного сообщения по каналу, связанному с сеансом.</span><span class="sxs-lookup"><span data-stu-id="cbb61-121">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbb61-122">Вызов <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> передает сигнал другой стороне сеанса, который должен возвратить `null` из всех невыполненных или последующих вызовов, выполненных в <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="cbb61-122">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="cbb61-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> идемпотентен, поэтому повторный вызов этого метода не принесет никаких результатов.</span><span class="sxs-lookup"><span data-stu-id="cbb61-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="cbb61-124">Завершение исходящего сеанса не влияет на входящий сеанс, и поэтому при этом не возникает никаких заявлений о способности получать сообщения в сеансе, связанном с входящим каналом.</span><span class="sxs-lookup"><span data-stu-id="cbb61-124">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="cbb61-125">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> — метод сеанса, который может взаимодействовать с объектом <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" />, владеющим сеансом.</span><span class="sxs-lookup"><span data-stu-id="cbb61-125">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session.</span></span> <span data-ttu-id="cbb61-126">В частности, если время существования сеанса скомпоновано со временем существования канала (как в случае с протоколом TCP и надежным сеансом и безопасностью), справедливо следующее.</span><span class="sxs-lookup"><span data-stu-id="cbb61-126">In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</span></span> 
<span data-ttu-id="cbb61-127">— Если <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> вызывается до <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> вызова метода в <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> канале, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> должен дожидаться завершения.</span><span class="sxs-lookup"><span data-stu-id="cbb61-127">-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.</span></span>  
  
<span data-ttu-id="cbb61-128">— <see cref="F:System.ServiceModel.CommunicationState.Created" /> Если канал находится в <see cref="F:System.ServiceModel.CommunicationState.Opening" /> состоянииили<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> , то должен вызывать исключение. <see cref="T:System.InvalidOperationException" /></span><span class="sxs-lookup"><span data-stu-id="cbb61-128">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.</span></span>  
  
<span data-ttu-id="cbb61-129">— Если канал находится в <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> состоянии, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> должен вызывать исключение <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span><span class="sxs-lookup"><span data-stu-id="cbb61-129">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span></span>  
  
<span data-ttu-id="cbb61-130">— Канал должен быть неисправным <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> при возникновении исключения.</span><span class="sxs-lookup"><span data-stu-id="cbb61-130">-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.</span></span>  
  
<span data-ttu-id="cbb61-131">— <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> Реализация в канале должна вызывать <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> , а затем проверять, что <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> метод <see langword="null" />возвращает значение, которое <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> указывает, что был вызван с другой стороны сеанса.</span><span class="sxs-lookup"><span data-stu-id="cbb61-131">-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, which indicates that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : TimeSpan -&gt; unit" Usage="iDuplexSession.CloseOutputSession timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="cbb61-132">Объект <see cref="T:System.TimeSpan" />, который задает промежуток времени, в течение которого операция должна завершиться.</span><span class="sxs-lookup"><span data-stu-id="cbb61-132">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span></span></param>
        <summary><span data-ttu-id="cbb61-133">Завершает исходящий сеанс, что означает, что этой конечной точкой больше не будет отправлено ни одного сообщения по каналу, связанному с сеансом, в течение заданного промежутка времени.</span><span class="sxs-lookup"><span data-stu-id="cbb61-133">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session within a specified interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbb61-134">Вызов <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> передает сигнал другой стороне сеанса, который должен возвратить `null` из всех невыполненных или последующих вызовов, выполненных в <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="cbb61-134">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="cbb61-135"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> идемпотентен, поэтому повторный вызов этого метода не принесет никаких результатов.</span><span class="sxs-lookup"><span data-stu-id="cbb61-135"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="cbb61-136">Завершение исходящего сеанса не влияет на входящий сеанс, и поэтому при этом не возникает никаких заявлений о способности получать сообщения в сеансе, связанном с входящим каналом.</span><span class="sxs-lookup"><span data-stu-id="cbb61-136">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="cbb61-137">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> — метод сеанса, который может взаимодействовать с объектом <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" />, владеющим сеансом.</span><span class="sxs-lookup"><span data-stu-id="cbb61-137">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session.</span></span> <span data-ttu-id="cbb61-138">В частности, если время существования сеанса скомпоновано со временем существования канала (как в случае с протоколом TCP и надежным сеансом и безопасностью), справедливо следующее.</span><span class="sxs-lookup"><span data-stu-id="cbb61-138">In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</span></span> 
<span data-ttu-id="cbb61-139">— Если <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> вызывается до <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> вызова метода в <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> канале, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> должен дожидаться завершения.</span><span class="sxs-lookup"><span data-stu-id="cbb61-139">-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.</span></span>  
  
<span data-ttu-id="cbb61-140">— <see cref="F:System.ServiceModel.CommunicationState.Created" /> Если канал находится в <see cref="F:System.ServiceModel.CommunicationState.Opening" /> состоянииили<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> , то должен вызывать исключение. <see cref="T:System.InvalidOperationException" /></span><span class="sxs-lookup"><span data-stu-id="cbb61-140">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.</span></span>  
  
<span data-ttu-id="cbb61-141">— Если канал находится в <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> состоянии, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> должен вызывать исключение <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span><span class="sxs-lookup"><span data-stu-id="cbb61-141">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span></span>  
  
<span data-ttu-id="cbb61-142">— Канал должен быть неисправным <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> при возникновении исключения.</span><span class="sxs-lookup"><span data-stu-id="cbb61-142">-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.</span></span>  
  
<span data-ttu-id="cbb61-143">— <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> Реализация в канале должна вызывать <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> , а затем проверять, что <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> метод <see langword="null" />возвращает значение, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> указывающее, что был вызван с другой стороны сеанса.</span><span class="sxs-lookup"><span data-stu-id="cbb61-143">-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, indicating that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCloseOutputSession (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCloseOutputSession(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCloseOutputSession : IAsyncResult -&gt; unit" Usage="iDuplexSession.EndCloseOutputSession result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="cbb61-144">Объект <see cref="T:System.IAsyncResult" />, возвращенный вызовом одного из методов <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</span><span class="sxs-lookup"><span data-stu-id="cbb61-144">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> methods.</span></span></param>
        <summary><span data-ttu-id="cbb61-145">Завершает асинхронную операцию завершения исходящего сеанса, что означает, что этой конечной точкой больше не будет отправлено ни одного сообщения по каналу, связанному с сеансом.</span><span class="sxs-lookup"><span data-stu-id="cbb61-145">Completes an asynchronous operation to terminate the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbb61-146">Завершение исходящего сеанса не влияет на входящий сеанс, и поэтому при этом не возникает никаких заявлений о способности получать сообщения в сеансе, связанном с входящим каналом.</span><span class="sxs-lookup"><span data-stu-id="cbb61-146">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
