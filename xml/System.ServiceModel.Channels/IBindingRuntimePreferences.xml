<Type Name="IBindingRuntimePreferences" FullName="System.ServiceModel.Channels.IBindingRuntimePreferences">
  <Metadata><Meta Name="ms.openlocfilehash" Value="004ee08b76539d44008beaa6d923b8b3470eb3d6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69156143" /></Metadata><TypeSignature Language="C#" Value="public interface IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type IBindingRuntimePreferences = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="495fd-101">Определяет необязательный контракт, который можно реализовать в привязке, чтобы указать способ обработки входящих запросов службой (синхронный или асинхронный).</span><span class="sxs-lookup"><span data-stu-id="495fd-101">Defines the optional contract that a binding can implement to specify whether incoming requests are handled synchronously or asynchronously by the service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="495fd-102">В некоторых случаях привязка эффективнее обрабатывает сообщения с помощью синхронного метода <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> или <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>.</span><span class="sxs-lookup"><span data-stu-id="495fd-102">In some cases it may be more efficient for a binding to process messages with the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods.</span></span> <span data-ttu-id="495fd-103">В классе <xref:System.ServiceModel.Channels.Binding> также можно реализовать класс <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, указывающий вызывающим объектам, что этот метод является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="495fd-103">A <xref:System.ServiceModel.Channels.Binding> class can optionally implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> to indicate to callers that this is preferred.</span></span>  
  
 <span data-ttu-id="495fd-104">Если привязка не реализует <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, по умолчанию для уровня среды выполнения модели службы Windows Communication Foundation (WCF) используются асинхронные версии `Receive` методов и `Request` .</span><span class="sxs-lookup"><span data-stu-id="495fd-104">If a binding does not implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, the Windows Communication Foundation (WCF) Service Model Runtime layer defaults to using the asynchronous versions of the `Receive` and `Request` methods.</span></span> <span data-ttu-id="495fd-105">Если привязка реализует <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, уровень среды выполнения модели службы WCF проверяет <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> значение и использует его для определения необходимости вызова синхронных версий этих методов (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> или <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) или асинхронного метода версии (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> и <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> или <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> и<xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>).</span><span class="sxs-lookup"><span data-stu-id="495fd-105">If a binding does implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, the WCF Service Model Runtime layer checks the value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> and uses that to determine whether to call the synchronous versions of the these methods (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) or the asynchronous versions (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</span></span> <span data-ttu-id="495fd-106">Если в привязке реализован класс <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> и его свойство `true` возвращает значение <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, рекомендуется использовать синхронные методы <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> и <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> для получения сообщений из этого канала.</span><span class="sxs-lookup"><span data-stu-id="495fd-106">If <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> is implemented by the binding and returns `true` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods to receive messages from the channel.</span></span> <span data-ttu-id="495fd-107">Если класс <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> не реализован в привязке или его свойство `false` возвращает значение <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, рекомендуется использовать методы <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> и <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> или <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> и <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</span><span class="sxs-lookup"><span data-stu-id="495fd-107">If the binding does not implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> or returns `false` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> methods.</span></span>  
  
 <span data-ttu-id="495fd-108">Вне зависимости от значения, возвращаемого свойством <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, во всех привязках должны быть надлежащим образом реализованы как синхронные, так и асинхронные версии методов `Receive` для реализуемых конкретных типов каналов.</span><span class="sxs-lookup"><span data-stu-id="495fd-108">Regardless of the value returned by the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, all bindings must still provide valid implementations of both the synchronous and asynchronous versions of the `Receive` methods for the specific channel types implemented.</span></span> <span data-ttu-id="495fd-109">Дополнительные сведения о реализации пользовательских каналов см. в разделе [Разработка каналов](~/docs/framework/wcf/extending/developing-channels.md).</span><span class="sxs-lookup"><span data-stu-id="495fd-109">For more information about implementing custom channels, see [Developing Channels](~/docs/framework/wcf/extending/developing-channels.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="495fd-110">В следующем примере показана реализация привязки с реализацией интерфейса <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>.</span><span class="sxs-lookup"><span data-stu-id="495fd-110">The following example shows the implementation of a binding that implements the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> interface.</span></span> <span data-ttu-id="495fd-111">Этот код взят из примера " [канал фрагментирования](~/docs/framework/wcf/samples/chunking-channel.md) ":</span><span class="sxs-lookup"><span data-stu-id="495fd-111">This code is taken from the [Chunking Channel](~/docs/framework/wcf/samples/chunking-channel.md) sample:</span></span>  
  
 [!code-csharp[S_UE_ChunkingChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveSynchronously : bool" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="495fd-112">Возвращает значение, указывающее наиболее эффективный способ обработки входящих запросов: синхронный или асинхронный.</span><span class="sxs-lookup"><span data-stu-id="495fd-112">Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</span></span></summary>
        <value><span data-ttu-id="495fd-113"><see langword="true" />значение, если запросы могут обрабатываться более эффективно синхронно; в <see langword="false" />противном случае — значение.</span><span class="sxs-lookup"><span data-stu-id="495fd-113"><see langword="true" /> if requests can be handled more efficiently synchronously; otherwise <see langword="false" />.</span></span> <span data-ttu-id="495fd-114">Значение по умолчанию — <see langword="false" /> (асинхронная обработка запросов).</span><span class="sxs-lookup"><span data-stu-id="495fd-114">The default is <see langword="false" />, to handle requests asynchronously.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="495fd-115">Стандартные (предоставляемые системой) привязки, предоставляемые Windows Communication Foundation (WCF), реализовали этот интерфейс, а в некоторых случаях переопределяют значение по умолчанию для синхронной обработки входящих сообщений.</span><span class="sxs-lookup"><span data-stu-id="495fd-115">The standard (system-provided) bindings provided by Windows Communication Foundation (WCF) have implemented this interface and in some cases override the default value to process incoming messages synchronously.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChunkingChannel#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
