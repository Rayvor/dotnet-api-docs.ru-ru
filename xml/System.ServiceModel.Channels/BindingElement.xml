<Type Name="BindingElement" FullName="System.ServiceModel.Channels.BindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="54c0a8db8cbd8861d2b237438ee976eafd30743c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69157435" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingElement abstract" />
  <TypeSignature Language="F#" Value="type BindingElement = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eaaa3-101">Элементы привязок, создающие фабрики каналов и прослушиватели каналов для различных типов каналов, используемых для обработки исходящих и входящих сообщений.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-101">The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaaa3-102">Привязка состоит из упорядоченного набора элементов привязки, наследуемых от этого абстрактного базового класса.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-102">A binding consists of an ordered set of binding elements that inherit from this abstract base class.</span></span>  <span data-ttu-id="eaaa3-103">Класс <xref:System.ServiceModel.Channels.TransportBindingElement> наследуется от класса <xref:System.ServiceModel.Channels.BindingElement>.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-103">The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class.</span></span>  
  
 <span data-ttu-id="eaaa3-104">Если используется только модель каналов, не обязательно создавать для транспорта привязку и элемент привязки.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-104">Creating a binding and binding element for your transport is optional if you are just using the channel model.</span></span> <span data-ttu-id="eaaa3-105">Все, что необходимо, можно осуществить через фабрику каналов и прослушиватели при условии, что они открыты для общего пользования.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-105">It is possible to do everything you need through the channel factory and listener as long as they are made public.</span></span>  
  
 <span data-ttu-id="eaaa3-106">Модель службы Windows Communication Foundation (WCF) использует шаблон фабрики, в котором привязка используется для создания стека каналов.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-106">The Windows Communication Foundation (WCF) service model uses a factory pattern where the binding is used to create the channel stack.</span></span> <span data-ttu-id="eaaa3-107">Если вы хотите использовать модель службы WCF, требуется использовать элемент привязки транспорта.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-107">If you want to use the WCF service model, then using a transport binding element is required.</span></span> <span data-ttu-id="eaaa3-108">Рекомендуется помещать этот элемент привязки в привязку, так как благодаря этому пользователям не обязательно создавать собственные пользовательские привязки для используемого транспорта.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-108">Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport.</span></span> <span data-ttu-id="eaaa3-109">Целесообразно создать и привязку, и элемент привязки, и скрыть фабрику каналов и прослушиватель внутри сборки.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-109">It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.</span></span>  
  
 <span data-ttu-id="eaaa3-110">На отправляющей стороне привязка используется для создания фабрики <xref:System.ServiceModel.Channels.IChannelFactory>, которая, в свою очередь, создает стек каналов и возвращает ссылку на верхний канал в стеке.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-110">On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack.</span></span> <span data-ttu-id="eaaa3-111">Затем приложение может использовать этот канал для передачи сообщений.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-111">The application can then use this channel to send messages.</span></span>  
  
 <span data-ttu-id="eaaa3-112">Аналогично, на получающей стороне привязка используется для создания прослушивателя <xref:System.ServiceModel.Channels.IChannelListener>, который прослушивает входящие сообщения.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-112">Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages.</span></span> <span data-ttu-id="eaaa3-113"><xref:System.ServiceModel.Channels.IChannelListener> предоставляет сообщения прослушивающему приложению, создавая стеки каналов и обрабатывая ссылку приложения на верхний канал.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-113">The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.</span></span> <span data-ttu-id="eaaa3-114">Затем приложение использует этот канал для приема входящих сообщений.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-114">The application then uses this channel to receive incoming messages.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eaaa3-115">При добавлении заголовков сообщений, которые должны быть зашифрованы, необходимо <xref:System.ServiceModel.Security.ChannelProtectionRequirements> возвратить экземпляр с вашими требованиями <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> из метода при запросе <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-115">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from the <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaaa3-116">В следующем примере показано, как добавить в пользовательскую привязку элемент привязки транспорта, а затем создать прослушиватель каналов, который может принимать входящие сообщения.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-116">The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.</span></span>  
  
 [!code-csharp[S_UEChannels#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#1)]
 [!code-vb[S_UEChannels#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uechannels/vb/servicesnippets.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eaaa3-117">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElement" />.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eaaa3-118">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElement" />.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement (System.ServiceModel.Channels.BindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.BindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (elementToBeCloned As BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement(System::ServiceModel::Channels::BindingElement ^ elementToBeCloned);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.BindingElement : System.ServiceModel.Channels.BindingElement -&gt; System.ServiceModel.Channels.BindingElement" Usage="new System.ServiceModel.Channels.BindingElement elementToBeCloned" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned"><span data-ttu-id="eaaa3-119">Элемент привязки <see cref="T:System.ServiceModel.Channels.BindingElement" />, точную копию которого необходимо создать.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-119">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be cloned.</span></span></param>
        <summary><span data-ttu-id="eaaa3-120">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.BindingElement" /> из заданного элемента привязки.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-120">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class from a specified binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;&#xA;override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="bindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="eaaa3-121">Тип канала, создаваемого фабрикой.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-121">The type of channel the factory builds.</span></span></typeparam>
        <param name="context"><span data-ttu-id="eaaa3-122">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-122">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="eaaa3-123">Инициализирует фабрику каналов для создания каналов заданного типа из контекста привязок.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-123">Initializes a channel factory for producing channels of a specified type from the binding context.</span></span></summary>
        <returns><span data-ttu-id="eaaa3-124">Объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" />, инициализированный из параметра <paramref name="context" />.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-124">The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eaaa3-125">Свойство <paramref name="context" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-125"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="bindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="eaaa3-126">Тип канала, принимаемый прослушивателем.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-126">The type of channel the listener is built to accept.</span></span></typeparam>
        <param name="context"><span data-ttu-id="eaaa3-127">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-127">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="eaaa3-128">Инициализирует прослушиватель каналов для приема каналов заданного типа из контекста привязок.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-128">Initializes a channel listener to accept channels of a specified type from the binding context.</span></span></summary>
        <returns><span data-ttu-id="eaaa3-129">Объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" />, инициализированный из параметра <paramref name="context" />.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-129">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eaaa3-130">Свойство <paramref name="context" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-130"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool&#xA;override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="bindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="eaaa3-131">Тип канала, создаваемого фабрикой каналов.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-131">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="context"><span data-ttu-id="eaaa3-132">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-132">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="eaaa3-133">Возвращает значение, показывающее, может ли элемент привязки создавать фабрику каналов для заданного типа канала.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-133">Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</span></span></summary>
        <returns><span data-ttu-id="eaaa3-134">Значение <see langword="true" />, если объект <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> типа <paramref name="TChannel" /> можно создать с помощью элемента привязки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-134"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaaa3-135">Используйте этот метод, чтобы убедиться, что прежде чем пытаться создавать фабрику, можно создать фабрику каналов для каналов типа `TChannel` для предоставленного параметра `context`.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-135">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to build the factory.</span></span> <span data-ttu-id="eaaa3-136">Если фабрику каналов нельзя создать вышеописанным образом, можно вызвать метод <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> и перехватить созданное исключение.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-136">Alternatively, build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eaaa3-137"><paramref name="context" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-137"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="bindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="eaaa3-138">Принимаемый прослушивателем тип канала.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-138">The type of channel the listener accepts.</span></span></typeparam>
        <param name="context"><span data-ttu-id="eaaa3-139">Объект <see cref="T:System.ServiceModel.Channels.BindingContext" />, предоставляющий контекст для элемента привязки.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-139">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="eaaa3-140">Возвращает значение, показывающее, может ли элемент привязки создать прослушиватель для заданного типа канала.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-140">Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</span></span></summary>
        <returns><span data-ttu-id="eaaa3-141">Значение <see langword="true" />, если объект <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> типа <see cref="T:System.ServiceModel.Channels.IChannel" /> можно создать с помощью элемента привязки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-141"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaaa3-142">Используйте этот метод, чтобы убедиться, что прежде чем пытаться создавать прослушиватель, можно создать прослушиватель каналов для каналов типа `TChannel` для предоставленного параметра `context`.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-142">Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the `context` provided before attempting to build the listener.</span></span> <span data-ttu-id="eaaa3-143">Если прослушиватель каналов нельзя создать вышеописанным образом, можно вызвать метод <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> и перехватить созданное исключение.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-143">Alternatively, build the channel listener by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eaaa3-144">Свойство <paramref name="context" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-144"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="bindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eaaa3-145">При переопределении в производном классе возвращает копию объекта элемента привязки.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-145">When overridden in a derived class, returns a copy of the binding element object.</span></span></summary>
        <returns><span data-ttu-id="eaaa3-146">Объект <see cref="T:System.ServiceModel.Channels.BindingElement" />, который является глубокой копией оригинала.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-146">A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object that is a deep clone of the original.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaaa3-147">Чтобы вернуть глубокую копию элемента привязки, необходимо реализовать метод <xref:System.ServiceModel.Channels.BindingElement.Clone%2A>.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-147">Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element.</span></span> <span data-ttu-id="eaaa3-148">Благодаря возвращению копии среда выполнения поддерживает ситуацию, при которой несколько пользовательских привязок имеют общий элемент пользовательской привязки.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-148">Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="eaaa3-149">Если копия не возвращается, поведение среды выполнения является неопределенным.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-149">If a clone is not returned, the run-time behavior is undefined.</span></span>  
  
 <span data-ttu-id="eaaa3-150">Глубокий клон объекта создает копию объекта и копию всего, на что прямо или косвенно ссылается этот объект.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-150">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="eaaa3-151">(Это также называется копированием всего графа объекта.) Неполный клон объекта, напротив, является копией только данного объекта.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-151">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="eaaa3-152">Если в объекте содержатся ссылки на другие объекты, их копии не создаются в неполной копии. Вместо этого создаются копии ссылок на исходные объекты.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-152">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class abstract T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="bindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="eaaa3-153">Типизированный объект, запрашиваемый методом.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-153">The typed object for which the method is querying.</span></span></typeparam>
        <param name="context"><span data-ttu-id="eaaa3-154">Контекст <see cref="T:System.ServiceModel.Channels.BindingContext" /> для элемента привязки.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-154">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</span></span></param>
        <summary><span data-ttu-id="eaaa3-155">При переопределении в производном классе возвращает запрашиваемый типизированный объект, если таковой имеется, из соответствующего уровня стека привязок.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-155">When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</span></span></summary>
        <returns><span data-ttu-id="eaaa3-156">Запрашиваемый типизированный объект <paramref name="T" />, если имеется, или значение <see langword="null" />, если объект отсутствует.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-156">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not present.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaaa3-157">Этот подход используется для извлечения возможностей, требований и параметров из стека элементов привязки.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-157">Use this to retrieve capabilities, requirements and parameters from the binding element stack.</span></span> <span data-ttu-id="eaaa3-158">Если элемент привязки поддерживает возвращение запрашиваемого объекта, он возвращает его.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-158">If a binding element supports returning the requested object, it returns it.</span></span> <span data-ttu-id="eaaa3-159">В противном случае вызов делегируется следующему нижнему элементу привязки в стеке.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-159">If not, it delegates the call down to the next binding element in the stack.</span></span> <span data-ttu-id="eaaa3-160">Если достигнуто дно стека и не найден ни один элемент привязки, поддерживающий запрашиваемый объект, метод возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-160">If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eaaa3-161">При добавлении заголовков сообщения, которые должны быть зашифрованы, на запрос о требованиях <xref:System.ServiceModel.Security.ChannelProtectionRequirements> необходимо вернуть из этого метода экземпляр <xref:System.ServiceModel.Security.ChannelProtectionRequirements> с соответствующими требованиями.</span><span class="sxs-lookup"><span data-stu-id="eaaa3-161">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from this method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
