<Type Name="IChannel" FullName="System.ServiceModel.Channels.IChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a5a8496b569915fa9198a714ab1eafb242d80e7" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75161147" /></Metadata><TypeSignature Language="C#" Value="public interface IChannel : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannel implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannel&#xA;Implements ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannel : System::ServiceModel::ICommunicationObject" />
  <TypeSignature Language="F#" Value="type IChannel = interface&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Определяет базовый интерфейс, который должен быть реализован во всех объектах каналов. Требуется, чтобы в них был реализован интерфейс конечного автомата, совместно используемый всеми коммуникационными объектами, а также метод для извлечения объектов из стека каналов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 Каналы должны соответствовать контракту конечного автомата, определенному в интерфейсе <xref:System.ServiceModel.ICommunicationObject>.  
  
 Интерфейс <xref:System.ServiceModel.Channels.IChannel> добавляет метод  
  
 <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> метод в интерфейс <xref:System.ServiceModel.ICommunicationObject>. Этот метод предоставляет механизм извлечения свойств из стека каналов вне зависимости от их местоположения в этом стеке. Слово "property" (свойство) в имени метода относится к информации, принадлежащей одному из каналов в стеке. Тип CLR для этого свойства определяется как `T`. Этот метод извлечения данных также используется с фабриками каналов и прослушивателями каналов.  
  
 `IChannel` наследуется каждым интерфейсом канала, связанным с основными шаблонами обмена сообщениями:  
  
-   <xref:System.ServiceModel.Channels.IInputChannel> для получения сообщений.  
  
-   <xref:System.ServiceModel.Channels.IOutputChannel> для отправки сообщений.  
  
-   <xref:System.ServiceModel.Channels.IRequestChannel> для отправки запроса.  
  
-   <xref:System.ServiceModel.Channels.IReplyChannel> для отправки ответа.  
  
-   <xref:System.ServiceModel.Channels.IDuplexChannel> для двунаправленного обмена сообщениями.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : unit -&gt; 'T (requires 'T : null)" Usage="iChannel.GetProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Типизированный объект, запрашиваемый методом.</typeparam>
        <summary>Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</summary>
        <returns>Запрашиваемый типизированный объект <paramref name="T" />, если он имеется, или значение <see langword="null" />, если он отсутствует.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод следует использовать для запроса типизированного объекта, например интерфейса для задания свойств или получения состояния из соответствующего уровня стека каналов. Если уровень поддерживает возврат запрошенного объекта, он возвращает его. В противном случае вызов делегируется на следующий более низкий уровень стека. Если достигнуто дно стека и уровень канала, поддерживающий запрошенный объект, не найден, метод возвращает значение `null`.  
  
   
  
## Examples  
 В следующем примере показано, как это свойство может быть реализовано каналом, который делегирует вызов вниз по стеку с помощью свойства`InnerChannel`, которое получает внутренний канал для этого канала.  
  
 [!code-csharp[S_UEIChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueichannel/cs/generatedclient.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
