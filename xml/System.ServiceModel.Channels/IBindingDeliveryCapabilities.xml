<Type Name="IBindingDeliveryCapabilities" FullName="System.ServiceModel.Channels.IBindingDeliveryCapabilities">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a55b95746075602bdce12021830e3331cf6b869" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69156189" /></Metadata><TypeSignature Language="C#" Value="public interface IBindingDeliveryCapabilities" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingDeliveryCapabilities" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingDeliveryCapabilities" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindingDeliveryCapabilities" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindingDeliveryCapabilities" />
  <TypeSignature Language="F#" Value="type IBindingDeliveryCapabilities = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет интерфейс, который должен быть реализован в привязках, предназначенный для описания возможностей, которые могут быть затребованы клиентами и службами, и для объявления о них.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В привязке необходимо реализовать интерфейс <xref:System.ServiceModel.Channels.IBindingDeliveryCapabilities>, если требуется, чтобы в контрактах клиентов и служб можно было задать обязательное требование о том, чтобы привязка предоставляла необходимые им функции.  
  
   
  
## Examples  
 В следующем образце кода обеспечивается требование, чтобы класс `CalculatorService` использовал привязку <xref:System.ServiceModel.WSHttpBinding> с упорядоченной доставкой сообщений. По умолчанию с этой привязкой не используются надежные сеансы и доставка с формированием очереди, но эти функции можно включить.  
  
```csharp  
<!-- Here is the configuration for a CalculatorService using a WSHttpBinding with ordered message delivery required. -->  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
   <system.serviceModel>  
      <services>  
         <service   
             type="Microsoft.ServiceModel.Samples.CalculatorService">  
            <!-- Use base address provided by host and a WSHttpBinding named "Binding1" -->  
            <endpoint address=""  
                      binding="wsHttpBinding"  
                      bindingConfiguration="Binding1"   
                      contract="Microsoft.ServiceModel.Samples.ICalculator" />  
         </service>  
      </services>  
  
      <bindings>  
         <wsHttpBinding>   
            <binding name="Binding1">           
               <!-- The next element enables a ReliableSession and required ordered delivery-->  
      <reliableSession enabled="true" ordered="true"/>  
      </binding>  
         </wsHttpBinding>  
      </bindings>  
  
   </system.serviceModel>  
</configuration>  
  
// The CalculatorService configuration has enabled a reliable session  
// with ordered delivery set to true. This means that the binding  
// requirement for ordered delivery specified by the  
// BindingRequirementsAttribute on the CalculatorService class  
// implemented below will be satisfied by this WSHttpBinding.  
  
using System;  
using System.ServiceModel;  
  
[ServiceContract]  
interface ICalculatorService  
{  
  [OperationBehavior()]  
  int Add(int a, int b);    
  
  [OperationContract]  
  int Subtract(int a, int b);  
}  
  
[BindingRequirements(  
  QueuedDeliveryRequirements=RequirementsMode.Disallow,  
  RequireOrderedDelivery=true  
)]  
class CalculatorService: ICalculatorService  
{  
  public int Add(int a, int b)  
  {  
    Console.WriteLine("Add called.");  
    return a + b;   
  }  
  
  public int Subtract(int a, int b)  
  {  
    Console.WriteLine("Subtract called.");  
    return a - b;  
  }  
  
  public int Multiply(int a, int b)  
  {  
    return a * b;  
  }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssuresOrderedDelivery">
      <MemberSignature Language="C#" Value="public bool AssuresOrderedDelivery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AssuresOrderedDelivery" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingDeliveryCapabilities.AssuresOrderedDelivery" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssuresOrderedDelivery As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AssuresOrderedDelivery { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AssuresOrderedDelivery : bool" Usage="System.ServiceModel.Channels.IBindingDeliveryCapabilities.AssuresOrderedDelivery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, поддерживает ли привязка гарантии на доставку сообщений в том же порядке, в котором они отправлены.</summary>
        <value>Значение <see langword="true" />, если сообщения должны доставляться в том же порядке, в котором они отправлены. Значение <see langword="false" />, если сообщения могут доставляться в другом порядке.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства <xref:System.ServiceModel.Channels.IBindingDeliveryCapabilities.AssuresOrderedDelivery%2A> используется свойством <xref:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery%2A>, когда описание службы загружается в среде выполнения. Эта проверка позволяет определить, выполняет ли привязка, выбранная или созданная для службы, требования по упорядоченной доставке сообщений.  
  
   
  
## Examples  
 В следующем образце кода обеспечивается требование, чтобы класс `CalculatorService` использовал привязку <xref:System.ServiceModel.WSHttpBinding> с упорядоченной доставкой сообщений. По умолчанию с этой привязкой не используются надежные сеансы и доставка с формированием очереди, но эти функции можно включить.  
  
```csharp  
<!-- Here is the configuration for a CalculatorService using a WSHttpBinding with ordered message delivery required. -->  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
   <system.serviceModel>  
      <services>  
         <service   
             type="Microsoft.ServiceModel.Samples.CalculatorService">  
            <!-- Use base address provided by host and a WSHttpBinding named "Binding1" -->  
            <endpoint address=""  
                      binding="wsHttpBinding"  
                      bindingConfiguration="Binding1"   
                      contract="Microsoft.ServiceModel.Samples.ICalculator" />  
         </service>  
      </services>  
  
      <bindings>  
         <wsHttpBinding>   
            <binding name="Binding1">           
               <!-- The next element enables a ReliableSession and required ordered delivery-->  
      <reliableSession enabled="true" ordered="true"/>  
      </binding>  
         </wsHttpBinding>  
      </bindings>  
  
   </system.serviceModel>  
</configuration>  
  
// The CalculatorService configuration has enabled a reliable session  
// with ordered delivery set to true. This means that the binding  
// requirement for ordered delivery specified by the  
// BindingRequirementsAttribute on the CalculatorService class  
// implemented below will be satisfied by this WSHttpBinding.  
  
using System;  
using System.ServiceModel;  
  
[ServiceContract]  
interface ICalculatorService  
{  
  [OperationBehavior()]  
  int Add(int a, int b);    
  
  [OperationContract]  
  int Subtract(int a, int b);  
}  
  
[BindingRequirements(  
  QueuedDeliveryRequirements=RequirementsMode.Disallow,  
  RequireOrderedDelivery=true  
)]  
class CalculatorService: ICalculatorService  
{  
  public int Add(int a, int b)  
  {  
    Console.WriteLine("Add called.");  
    return a + b;   
  }  
  
  public int Subtract(int a, int b)  
  {  
    Console.WriteLine("Subtract called.");  
    return a - b;  
  }  
  
  public int Multiply(int a, int b)  
  {  
    return a * b;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuedDelivery">
      <MemberSignature Language="C#" Value="public bool QueuedDelivery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueuedDelivery" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingDeliveryCapabilities.QueuedDelivery" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueuedDelivery As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool QueuedDelivery { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.QueuedDelivery : bool" Usage="System.ServiceModel.Channels.IBindingDeliveryCapabilities.QueuedDelivery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, поддерживает ли привязка доставку сообщений с формированием очереди.</summary>
        <value>Значение <see langword="true" />, если формирование очереди сообщений поддерживается; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства <xref:System.ServiceModel.Channels.IBindingDeliveryCapabilities.QueuedDelivery%2A> используется, когда описание службы загружается в среде выполнения. Эта проверка позволяет определить, выполняет ли привязка, выбранная или созданная для службы, требования по доставке сообщений с формированием очередей.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
