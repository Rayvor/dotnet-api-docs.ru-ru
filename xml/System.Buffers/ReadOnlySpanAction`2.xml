<Type Name="ReadOnlySpanAction&lt;T,TArg&gt;" FullName="System.Buffers.ReadOnlySpanAction&lt;T,TArg&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88b40e3fe6155a2aabd003988027935094b7ab0b" /><Meta Name="ms.sourcegitcommit" Value="6c0b6310824199ff476e4a9eec6e9ed0bd1a51c9" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/05/2019" /><Meta Name="ms.locfileid" Value="74874352" /></Metadata><TypeSignature Language="C#" Value="public delegate void ReadOnlySpanAction&lt;T,in TArg&gt;(ReadOnlySpan&lt;T&gt; span, TArg arg);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ReadOnlySpanAction`2&lt;T, - TArg&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ReadOnlySpanAction`2" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ReadOnlySpanAction(Of T, In TArg)(span As ReadOnlySpan(Of T), arg As TArg)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T, typename TArg&gt;&#xA;public delegate void ReadOnlySpanAction(ReadOnlySpan&lt;T&gt; span, TArg arg);" />
  <TypeSignature Language="F#" Value="type ReadOnlySpanAction&lt;'T, 'Arg&gt; = delegate of ReadOnlySpan&lt;'T&gt; * 'Arg -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
    <TypeParameter Name="TArg">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="span" Type="System.ReadOnlySpan&lt;T&gt;" />
    <Parameter Name="arg" Type="TArg" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">Тип объектов в диапазоне, доступном только для чтения.</typeparam>
    <typeparam name="TArg">Тип объекта, представляющего состояние.</typeparam>
    <param name="span">Диапазон объектов типа <typeparamref name="T" /> с доступом только для чтения.</param>
    <param name="arg">Объект состояния типа <typeparamref name="TArg" />.</param>
    <summary>Инкапсулирует метод, который получает диапазон объектов типа <typeparamref name="T" /> с доступом только для чтения и объект состояния типа <typeparamref name="TArg" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
