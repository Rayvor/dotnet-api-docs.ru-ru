<Type Name="SequenceReader&lt;T&gt;" FullName="System.Buffers.SequenceReader&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="52286dcb0528dde165978b86874283690a627d6c" /><Meta Name="ms.sourcegitcommit" Value="2b0967e04b047f6709322418d97215dfcef6a938" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/20/2019" /><Meta Name="ms.locfileid" Value="74235631" /></Metadata><TypeSignature Language="C#" Value="public struct SequenceReader&lt;T&gt; where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SequenceReader`1&lt;struct .ctor (class System.ValueType, class System.IEquatable`1&lt;!T&gt;) T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.SequenceReader`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure SequenceReader(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class SequenceReader" />
  <TypeSignature Language="F#" Value="type SequenceReader&lt;'T (requires 'T : struct)&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
        <InterfaceName>System.IEquatable&lt;T&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="79604-101">Тип последовательности, доступной только для чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-101">The type of the read-only sequence.</span></span></typeparam>
    <summary><span data-ttu-id="79604-102">Предоставляет методы для чтения двоичных и текстовых данных за пределами <see cref="T:System.Buffers.ReadOnlySequence`1" />, уделяя особое внимание производительности и тому, чтобы количество выделений кучи было минимальным или нулевым.</span><span class="sxs-lookup"><span data-stu-id="79604-102">Provides methods for reading binary and text data out of a <see cref="T:System.Buffers.ReadOnlySequence`1" /> with a focus on performance and minimal or zero heap allocations.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SequenceReader (System.Buffers.ReadOnlySequence&lt;T&gt; sequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt; sequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.#ctor(System.Buffers.ReadOnlySequence{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sequence As ReadOnlySequence(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SequenceReader(System::Buffers::ReadOnlySequence&lt;T&gt; sequence);" />
      <MemberSignature Language="F#" Value="new System.Buffers.SequenceReader&lt;'T (requires 'T : struct)&gt; : System.Buffers.ReadOnlySequence&lt;'T (requires 'T : struct)&gt; -&gt; System.Buffers.SequenceReader&lt;'T (requires 'T : struct)&gt;" Usage="new System.Buffers.SequenceReader&lt;'T (requires 'T : struct)&gt; sequence" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sequence" Type="System.Buffers.ReadOnlySequence&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="sequence"><span data-ttu-id="79604-103">Последовательность только для чтения, для которой требуется создать <see cref="T:System.Buffers.SequenceReader`1" />.</span><span class="sxs-lookup"><span data-stu-id="79604-103">The read-only sequence over which to create the <see cref="T:System.Buffers.SequenceReader`1" />.</span></span></param>
        <summary><span data-ttu-id="79604-104">Создает объект <see cref="T:System.Buffers.SequenceReader`1" /> для данной последовательности <see cref="T:System.Buffers.ReadOnlySequence`1" />.</span><span class="sxs-lookup"><span data-stu-id="79604-104">Creates a <see cref="T:System.Buffers.SequenceReader`1" /> over a given <see cref="T:System.Buffers.ReadOnlySequence`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Advance">
      <MemberSignature Language="C#" Value="public void Advance (long count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Advance(int64 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.Advance(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Advance (count As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Advance(long count);" />
      <MemberSignature Language="F#" Value="member this.Advance : int64 -&gt; unit" Usage="sequenceReader.Advance count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="79604-105">Количество элементов, на которое необходимо переместиться.</span><span class="sxs-lookup"><span data-stu-id="79604-105">The number of items to advance.</span></span></param>
        <summary><span data-ttu-id="79604-106">Перемещает средство чтения вперед на заданное число элементов.</span><span class="sxs-lookup"><span data-stu-id="79604-106">Moves the reader ahead a specified number of items.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancePast">
      <MemberSignature Language="C#" Value="public long AdvancePast (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AdvancePast(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.AdvancePast(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancePast (value As T) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AdvancePast(T value);" />
      <MemberSignature Language="F#" Value="member this.AdvancePast : 'T -&gt; int64" Usage="sequenceReader.AdvancePast value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="79604-107">Значение, за которое необходимо переместить средство чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-107">The value past which the reader is to advance.</span></span></param>
        <summary><span data-ttu-id="79604-108">Выполняет перемещение за идущие подряд экземпляры <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="79604-108">Advances past consecutive instances of the given <paramref name="value" />.</span></span></summary>
        <returns><span data-ttu-id="79604-109">Количество позиций, на которое переместилось средство чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-109">The number of positions the reader has advanced.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancePastAny">
      <MemberSignature Language="C#" Value="public long AdvancePastAny (ReadOnlySpan&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AdvancePastAny(valuetype System.ReadOnlySpan`1&lt;!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.AdvancePastAny(System.ReadOnlySpan{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancePastAny (values As ReadOnlySpan(Of T)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AdvancePastAny(ReadOnlySpan&lt;T&gt; values);" />
      <MemberSignature Language="F#" Value="member this.AdvancePastAny : ReadOnlySpan&lt;'T (requires 'T : struct)&gt; -&gt; int64" Usage="sequenceReader.AdvancePastAny values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.ReadOnlySpan&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="79604-110">Пропускаемые значения.</span><span class="sxs-lookup"><span data-stu-id="79604-110">The values to be skipped.</span></span></param>
        <summary><span data-ttu-id="79604-111">Пропускает идущие подряд экземпляры любых указанных значений <paramref name="values" />.</span><span class="sxs-lookup"><span data-stu-id="79604-111">Skips consecutive instances of any of the specified <paramref name="values" />.</span></span></summary>
        <returns><span data-ttu-id="79604-112">Количество позиций, на которое переместилось средство чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-112">The number of positions the reader has advanced.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancePastAny">
      <MemberSignature Language="C#" Value="public long AdvancePastAny (T value0, T value1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AdvancePastAny(!T value0, !T value1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.AdvancePastAny(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancePastAny (value0 As T, value1 As T) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AdvancePastAny(T value0, T value1);" />
      <MemberSignature Language="F#" Value="member this.AdvancePastAny : 'T * 'T -&gt; int64" Usage="sequenceReader.AdvancePastAny (value0, value1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value0" Type="T" />
        <Parameter Name="value1" Type="T" />
      </Parameters>
      <Docs>
        <param name="value0"><span data-ttu-id="79604-113">Первое пропускаемое значение.</span><span class="sxs-lookup"><span data-stu-id="79604-113">The first value to skip.</span></span></param>
        <param name="value1"><span data-ttu-id="79604-114">Второе пропускаемое значение.</span><span class="sxs-lookup"><span data-stu-id="79604-114">The second value to skip.</span></span></param>
        <summary><span data-ttu-id="79604-115">Выполняет перемещение за идущие подряд экземпляры одного из двух указанных значений.</span><span class="sxs-lookup"><span data-stu-id="79604-115">Advances past consecutive instances of either of two specified values.</span></span></summary>
        <returns><span data-ttu-id="79604-116">Количество позиций, на которое переместилось средство чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-116">The number of positions the reader has advanced.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancePastAny">
      <MemberSignature Language="C#" Value="public long AdvancePastAny (T value0, T value1, T value2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AdvancePastAny(!T value0, !T value1, !T value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.AdvancePastAny(`0,`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancePastAny (value0 As T, value1 As T, value2 As T) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AdvancePastAny(T value0, T value1, T value2);" />
      <MemberSignature Language="F#" Value="member this.AdvancePastAny : 'T * 'T * 'T -&gt; int64" Usage="sequenceReader.AdvancePastAny (value0, value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value0" Type="T" />
        <Parameter Name="value1" Type="T" />
        <Parameter Name="value2" Type="T" />
      </Parameters>
      <Docs>
        <param name="value0"><span data-ttu-id="79604-117">Первое пропускаемое значение.</span><span class="sxs-lookup"><span data-stu-id="79604-117">The first value to skip.</span></span></param>
        <param name="value1"><span data-ttu-id="79604-118">Второе пропускаемое значение.</span><span class="sxs-lookup"><span data-stu-id="79604-118">The second value to skip.</span></span></param>
        <param name="value2"><span data-ttu-id="79604-119">Третье пропускаемое значение.</span><span class="sxs-lookup"><span data-stu-id="79604-119">The third value to skip.</span></span></param>
        <summary><span data-ttu-id="79604-120">Выполняет перемещение за идущие подряд экземпляры одного из трех указанных значений.</span><span class="sxs-lookup"><span data-stu-id="79604-120">Advances past consecutive instances of any of three specified values.</span></span></summary>
        <returns><span data-ttu-id="79604-121">Количество позиций, на которое переместилось средство чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-121">The number of positions the reader has advanced.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancePastAny">
      <MemberSignature Language="C#" Value="public long AdvancePastAny (T value0, T value1, T value2, T value3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AdvancePastAny(!T value0, !T value1, !T value2, !T value3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.AdvancePastAny(`0,`0,`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancePastAny (value0 As T, value1 As T, value2 As T, value3 As T) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AdvancePastAny(T value0, T value1, T value2, T value3);" />
      <MemberSignature Language="F#" Value="member this.AdvancePastAny : 'T * 'T * 'T * 'T -&gt; int64" Usage="sequenceReader.AdvancePastAny (value0, value1, value2, value3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value0" Type="T" />
        <Parameter Name="value1" Type="T" />
        <Parameter Name="value2" Type="T" />
        <Parameter Name="value3" Type="T" />
      </Parameters>
      <Docs>
        <param name="value0"><span data-ttu-id="79604-122">Первое пропускаемое значение.</span><span class="sxs-lookup"><span data-stu-id="79604-122">The first value to skip.</span></span></param>
        <param name="value1"><span data-ttu-id="79604-123">Второе пропускаемое значение.</span><span class="sxs-lookup"><span data-stu-id="79604-123">The second value to skip.</span></span></param>
        <param name="value2"><span data-ttu-id="79604-124">Третье пропускаемое значение.</span><span class="sxs-lookup"><span data-stu-id="79604-124">The third value to skip.</span></span></param>
        <param name="value3"><span data-ttu-id="79604-125">Четвертое пропускаемое значение.</span><span class="sxs-lookup"><span data-stu-id="79604-125">The fourth value to skip.</span></span></param>
        <summary><span data-ttu-id="79604-126">Выполняет перемещение за идущие подряд экземпляры одного из четырех указанных значений.</span><span class="sxs-lookup"><span data-stu-id="79604-126">Advances past consecutive instances of any of four specified values.</span></span></summary>
        <returns><span data-ttu-id="79604-127">Количество позиций, на которое переместилось средство чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-127">The number of positions the reader has advanced.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Consumed">
      <MemberSignature Language="C#" Value="public long Consumed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Consumed" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.SequenceReader`1.Consumed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Consumed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Consumed { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Consumed : int64" Usage="System.Buffers.SequenceReader&lt;'T (requires 'T : struct)&gt;.Consumed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79604-128">Возвращает общее количество значений <typeparamref name="T" />, обработанных средством чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-128">Gets the total number of <typeparamref name="T" /> values processed by the reader.</span></span></summary>
        <value><span data-ttu-id="79604-129">Общее число значений, обработанных модулем чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-129">The total number of values processed by the reader.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSpan">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;T&gt; CurrentSpan { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;!T&gt; CurrentSpan" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.SequenceReader`1.CurrentSpan" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSpan As ReadOnlySpan(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;T&gt; CurrentSpan { ReadOnlySpan&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSpan : ReadOnlySpan&lt;'T (requires 'T : struct)&gt;" Usage="System.Buffers.SequenceReader&lt;'T (requires 'T : struct)&gt;.CurrentSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79604-130">Возвращает объект <see cref="T:System.Span`1" />, который содержит текущий сегмент в <see cref="P:System.Buffers.SequenceReader`1.Sequence" />.</span><span class="sxs-lookup"><span data-stu-id="79604-130">Gets a <see cref="T:System.Span`1" /> that contains the current segment in the <see cref="P:System.Buffers.SequenceReader`1.Sequence" />.</span></span></summary>
        <value><span data-ttu-id="79604-131">Диапазон, содержащий текущий сегмент в последовательности.</span><span class="sxs-lookup"><span data-stu-id="79604-131">A span that contains the current segment in the sequence.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSpanIndex">
      <MemberSignature Language="C#" Value="public int CurrentSpanIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentSpanIndex" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.SequenceReader`1.CurrentSpanIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSpanIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentSpanIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSpanIndex : int" Usage="System.Buffers.SequenceReader&lt;'T (requires 'T : struct)&gt;.CurrentSpanIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79604-132">Возвращает индекс в <see cref="P:System.Buffers.SequenceReader`1.CurrentSpan" />.</span><span class="sxs-lookup"><span data-stu-id="79604-132">Gets the index in the <see cref="P:System.Buffers.SequenceReader`1.CurrentSpan" />.</span></span></summary>
        <value><span data-ttu-id="79604-133">Индекс в <see cref="P:System.Buffers.SequenceReader`1.CurrentSpan" />.</span><span class="sxs-lookup"><span data-stu-id="79604-133">The index in the <see cref="P:System.Buffers.SequenceReader`1.CurrentSpan" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public bool End { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool End" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.SequenceReader`1.End" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool End { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.End : bool" Usage="System.Buffers.SequenceReader&lt;'T (requires 'T : struct)&gt;.End" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79604-134">Возвращает значение, которое указывает, есть ли еще данные в <see cref="P:System.Buffers.SequenceReader`1.Sequence" />.</span><span class="sxs-lookup"><span data-stu-id="79604-134">Gets a value that indicates whether there is no more data in the <see cref="P:System.Buffers.SequenceReader`1.Sequence" />.</span></span></summary>
        <value><span data-ttu-id="79604-135"><see langword="true" />, когда в <see cref="P:System.Buffers.SequenceReader`1.Sequence" />больше нет данных; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-135"><see langword="true" /> when there is no more data in the <see cref="P:System.Buffers.SequenceReader`1.Sequence" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNext">
      <MemberSignature Language="C#" Value="public bool IsNext (ReadOnlySpan&lt;T&gt; next, bool advancePast = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNext(valuetype System.ReadOnlySpan`1&lt;!T&gt; next, bool advancePast) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.IsNext(System.ReadOnlySpan{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNext (next As ReadOnlySpan(Of T), Optional advancePast As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsNext : ReadOnlySpan&lt;'T (requires 'T : struct)&gt; * bool -&gt; bool" Usage="sequenceReader.IsNext (next, advancePast)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="next" Type="System.ReadOnlySpan&lt;T&gt;" />
        <Parameter Name="advancePast" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="next"><span data-ttu-id="79604-136">Диапазон, с которым необходимо сравнить следующие элементы.</span><span class="sxs-lookup"><span data-stu-id="79604-136">The span to compare the next items to.</span></span></param>
        <param name="advancePast"><span data-ttu-id="79604-137"><see langword="true" /> для перемещения за найденные значения <paramref name="next" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-137"><see langword="true" /> to move past the <paramref name="next" /> values if they are found; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79604-138">Проверяет, являются ли значения, указанные в диапазоне только для чтения, следующими в последовательности.</span><span class="sxs-lookup"><span data-stu-id="79604-138">Checks whether the values specified in a read-only span are next in the sequence.</span></span></summary>
        <returns><span data-ttu-id="79604-139">Значение <see langword="true" />, если значения расположены далее в последовательности; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-139"><see langword="true" /> if the values are next in sequence; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNext">
      <MemberSignature Language="C#" Value="public bool IsNext (T next, bool advancePast = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNext(!T next, bool advancePast) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.IsNext(`0,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNext (next As T, Optional advancePast As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsNext : 'T * bool -&gt; bool" Usage="sequenceReader.IsNext (next, advancePast)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="next" Type="T" />
        <Parameter Name="advancePast" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="next"><span data-ttu-id="79604-140">Значение, с которым необходимо сравнить следующие элементы.</span><span class="sxs-lookup"><span data-stu-id="79604-140">The value to compare the next items to.</span></span></param>
        <param name="advancePast"><span data-ttu-id="79604-141"><see langword="true" /> для перемещения за найденные значения <paramref name="next" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-141"><see langword="true" /> to move past the <paramref name="next" /> values if they are found; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79604-142">Проверяет, является ли указанное значение следующим в последовательности.</span><span class="sxs-lookup"><span data-stu-id="79604-142">Checks whether a specified value is next in the sequence.</span></span></summary>
        <returns><span data-ttu-id="79604-143">Значение <see langword="true" />, если значения расположены далее в последовательности; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-143"><see langword="true" /> if the values are next in sequence; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.SequenceReader`1.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Buffers.SequenceReader&lt;'T (requires 'T : struct)&gt;.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79604-144">Возвращает число элементов в последовательности <see cref="P:System.Buffers.SequenceReader`1.Sequence" /> средства чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-144">Gets the count of items in the reader's <see cref="P:System.Buffers.SequenceReader`1.Sequence" />.</span></span></summary>
        <value><span data-ttu-id="79604-145">Число элементов в <see cref="P:System.Buffers.SequenceReader`1.Sequence" />е читателя.</span><span class="sxs-lookup"><span data-stu-id="79604-145">The count of items in the reader's <see cref="P:System.Buffers.SequenceReader`1.Sequence" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public SequencePosition Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.SequencePosition Position" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.SequenceReader`1.Position" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Position As SequencePosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property SequencePosition Position { SequencePosition get(); };" />
      <MemberSignature Language="F#" Value="member this.Position : SequencePosition" Usage="System.Buffers.SequenceReader&lt;'T (requires 'T : struct)&gt;.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SequencePosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79604-146">Возвращает текущую позицию в <see cref="P:System.Buffers.SequenceReader`1.Sequence" />.</span><span class="sxs-lookup"><span data-stu-id="79604-146">Gets the current position in the <see cref="P:System.Buffers.SequenceReader`1.Sequence" />.</span></span></summary>
        <value><span data-ttu-id="79604-147">Текущее расположение в <see cref="P:System.Buffers.SequenceReader`1.Sequence" />.</span><span class="sxs-lookup"><span data-stu-id="79604-147">The current position in the <see cref="P:System.Buffers.SequenceReader`1.Sequence" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public long Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.SequenceReader`1.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Remaining As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Remaining { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int64" Usage="System.Buffers.SequenceReader&lt;'T (requires 'T : struct)&gt;.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79604-148">Возвращает оставшиеся элементы в последовательности <see cref="P:System.Buffers.SequenceReader`1.Sequence" /> средства чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-148">Gets  the remaining items in the reader's <see cref="P:System.Buffers.SequenceReader`1.Sequence" />.</span></span></summary>
        <value><span data-ttu-id="79604-149">Остальные элементы в <see cref="P:System.Buffers.SequenceReader`1.Sequence" />е читателя</span><span class="sxs-lookup"><span data-stu-id="79604-149">The remaining items in the reader's <see cref="P:System.Buffers.SequenceReader`1.Sequence" /></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewind">
      <MemberSignature Language="C#" Value="public void Rewind (long count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rewind(int64 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.Rewind(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rewind (count As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rewind(long count);" />
      <MemberSignature Language="F#" Value="member this.Rewind : int64 -&gt; unit" Usage="sequenceReader.Rewind count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="79604-150">Число элементов.</span><span class="sxs-lookup"><span data-stu-id="79604-150">The number of items.</span></span></param>
        <summary><span data-ttu-id="79604-151">Перемещает средство чтения назад на заданное число элементов.</span><span class="sxs-lookup"><span data-stu-id="79604-151">Moves the reader back the specified number of items.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="79604-152"><paramref name="count" /> является отрицательным или больше <see cref="P:System.Buffers.SequenceReader`1.Consumed" />.</span><span class="sxs-lookup"><span data-stu-id="79604-152"><paramref name="count" /> is negative or greater than <see cref="P:System.Buffers.SequenceReader`1.Consumed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sequence">
      <MemberSignature Language="C#" Value="public System.Buffers.ReadOnlySequence&lt;T&gt; Sequence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt; Sequence" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.SequenceReader`1.Sequence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sequence As ReadOnlySequence(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Buffers::ReadOnlySequence&lt;T&gt; Sequence { System::Buffers::ReadOnlySequence&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Sequence : System.Buffers.ReadOnlySequence&lt;'T (requires 'T : struct)&gt;" Usage="System.Buffers.SequenceReader&lt;'T (requires 'T : struct)&gt;.Sequence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Buffers.ReadOnlySequence&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79604-153">Возвращает базовый объект <see cref="T:System.Buffers.ReadOnlySequence`1" /> для средства чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-153">Gets the underlying <see cref="T:System.Buffers.ReadOnlySequence`1" /> for the reader.</span></span></summary>
        <value><span data-ttu-id="79604-154">Базовая последовательность только для чтения для модуля чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-154">The underlying read-only sequence for the reader.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdvanceTo">
      <MemberSignature Language="C#" Value="public bool TryAdvanceTo (T delimiter, bool advancePastDelimiter = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdvanceTo(!T delimiter, bool advancePastDelimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.TryAdvanceTo(`0,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdvanceTo (delimiter As T, Optional advancePastDelimiter As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryAdvanceTo : 'T * bool -&gt; bool" Usage="sequenceReader.TryAdvanceTo (delimiter, advancePastDelimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delimiter" Type="T" />
        <Parameter Name="advancePastDelimiter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="delimiter"><span data-ttu-id="79604-155">Искомый разделитель.</span><span class="sxs-lookup"><span data-stu-id="79604-155">The delimiter to search for.</span></span></param>
        <param name="advancePastDelimiter"><span data-ttu-id="79604-156">Значение <see langword="true" /> для перемещения за найденный разделитель <paramref name="delimiter" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-156"><see langword="true" /> to move past the <paramref name="delimiter" /> if it is found; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79604-157">Ищет указанный разделитель и при необходимости выполняет перемещение за него.</span><span class="sxs-lookup"><span data-stu-id="79604-157">Searches for a specified delimiter and optionally advances past it if it is found.</span></span></summary>
        <returns><span data-ttu-id="79604-158">Значение <see langword="true" />, если данный разделитель <paramref name="delimiter" /> найден; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-158"><see langword="true" /> if the given <paramref name="delimiter" /> was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdvanceToAny">
      <MemberSignature Language="C#" Value="public bool TryAdvanceToAny (ReadOnlySpan&lt;T&gt; delimiters, bool advancePastDelimiter = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdvanceToAny(valuetype System.ReadOnlySpan`1&lt;!T&gt; delimiters, bool advancePastDelimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.TryAdvanceToAny(System.ReadOnlySpan{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdvanceToAny (delimiters As ReadOnlySpan(Of T), Optional advancePastDelimiter As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryAdvanceToAny : ReadOnlySpan&lt;'T (requires 'T : struct)&gt; * bool -&gt; bool" Usage="sequenceReader.TryAdvanceToAny (delimiters, advancePastDelimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delimiters" Type="System.ReadOnlySpan&lt;T&gt;" />
        <Parameter Name="advancePastDelimiter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="delimiters"><span data-ttu-id="79604-159">Искомые разделители.</span><span class="sxs-lookup"><span data-stu-id="79604-159">The delimiters to search for.</span></span></param>
        <param name="advancePastDelimiter"><span data-ttu-id="79604-160"><see langword="true" /> для перемещения за первый экземпляр любого из данных разделителей <paramref name="delimiters" />; <see langword="false" />, если выполнять перемещение за разделитель не требуется.</span><span class="sxs-lookup"><span data-stu-id="79604-160"><see langword="true" /> to move past the first instance of any of the given <paramref name="delimiters" />; <see langword="false" /> to not move past the delimiter.</span></span></param>
        <summary><span data-ttu-id="79604-161">Ищет любой из указанных разделителей и при необходимости выполняет перемещение за первый найденный разделитель.</span><span class="sxs-lookup"><span data-stu-id="79604-161">Searches for any of a number of specified delimiters and optionally advances past the first one to be found.</span></span></summary>
        <returns><span data-ttu-id="79604-162">Значение <see langword="true" />, если любой из данных разделителей <paramref name="delimiters" /> найден; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-162"><see langword="true" /> if any of the given <paramref name="delimiters" /> was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCopyTo">
      <MemberSignature Language="C#" Value="public bool TryCopyTo (Span&lt;T&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryCopyTo(valuetype System.Span`1&lt;!T&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.TryCopyTo(System.Span{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCopyTo (destination As Span(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCopyTo(Span&lt;T&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.TryCopyTo : Span&lt;'T (requires 'T : struct)&gt; -&gt; bool" Usage="sequenceReader.TryCopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="79604-163">Конечный диапазон, в который выполняется копирование.</span><span class="sxs-lookup"><span data-stu-id="79604-163">Destination span to copy to.</span></span></param>
        <summary><span data-ttu-id="79604-164">Копирует данные из текущей позиции в указанный конечный диапазон, если их достаточно для заполнения этого диапазона.</span><span class="sxs-lookup"><span data-stu-id="79604-164">Copies data from the current position to the given destination span if there is enough data to fill it.</span></span></summary>
        <returns><span data-ttu-id="79604-165">Значение <see langword="true" />, если данных достаточно для полного заполнения диапазона <paramref name="destination" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-165"><see langword="true" /> if there is enough data to completely fill the <paramref name="destination" /> span; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="79604-166">По возможности этот метод копирует фиксированный объем данных из последовательности.</span><span class="sxs-lookup"><span data-stu-id="79604-166">This method copies a fixed amount of data out of the sequence if possible.</span></span> <span data-ttu-id="79604-167">Он не переместит средство чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-167">It does not advance the reader.</span></span> <span data-ttu-id="79604-168">Чтобы найти конкретный поток данных, используйте <xref:System.Buffers.SequenceReader`1.IsNext(System.ReadOnlySpan{`0},System.Boolean)>.</span><span class="sxs-lookup"><span data-stu-id="79604-168">To look ahead for a specific stream of data, use  <xref:System.Buffers.SequenceReader`1.IsNext(System.ReadOnlySpan{`0},System.Boolean)>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="member this.TryPeek : 'T -&gt; bool" Usage="sequenceReader.TryPeek value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="79604-169">Следующее значение или значение по умолчанию, если достигнут конец средства чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-169">The next value, or the default value if at the end of the reader.</span></span></param>
        <summary><span data-ttu-id="79604-170">Считывает следующее значение, не перемещая средство чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-170">Peeks at the next value without advancing the reader.</span></span></summary>
        <returns><span data-ttu-id="79604-171">Значение <see langword="true" />, если не достигнут конец средства чтения и операция считывания была выполнена успешно; значение <see langword="false" />, если достигнут конец средства чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-171"><see langword="true" /> if the reader is not at its end and the peek operation succeeded; <see langword="false" /> if at the end of the reader.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRead">
      <MemberSignature Language="C#" Value="public bool TryRead (out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryRead([out] !T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.TryRead(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryRead (ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryRead([Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="member this.TryRead : 'T -&gt; bool" Usage="sequenceReader.TryRead value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="79604-172">Следующее значение или значение по умолчанию, если достигнут конец средства чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-172">The next value, or the default value if at the end of the reader.</span></span></param>
        <summary><span data-ttu-id="79604-173">Считывает следующее значение и перемещает средство чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-173">Reads the next value and advance the reader.</span></span></summary>
        <returns><span data-ttu-id="79604-174">Значение <see langword="true" />, если не достигнут конец средства чтения и операция считывания была выполнена успешно; значение <see langword="false" />, если достигнут конец средства чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-174"><see langword="true" /> if the reader is not at its end and the read operation succeeded; <see langword="false" /> if at the end of the reader.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadTo">
      <MemberSignature Language="C#" Value="public bool TryReadTo (out System.Buffers.ReadOnlySequence&lt;T&gt; sequence, ReadOnlySpan&lt;T&gt; delimiter, bool advancePastDelimiter = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadTo([out] valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt;&amp; sequence, valuetype System.ReadOnlySpan`1&lt;!T&gt; delimiter, bool advancePastDelimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.TryReadTo(System.Buffers.ReadOnlySequence{`0}@,System.ReadOnlySpan{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadTo (ByRef sequence As ReadOnlySequence(Of T), delimiter As ReadOnlySpan(Of T), Optional advancePastDelimiter As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryReadTo : ReadOnlySequence * ReadOnlySpan&lt;'T (requires 'T : struct)&gt; * bool -&gt; bool" Usage="sequenceReader.TryReadTo (sequence, delimiter, advancePastDelimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Buffers.ReadOnlySequence&lt;T&gt;" RefType="out" />
        <Parameter Name="delimiter" Type="System.ReadOnlySpan&lt;T&gt;" />
        <Parameter Name="advancePastDelimiter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sequence"><span data-ttu-id="79604-175">При возвращении метода содержит считанные данные, если они имеются.</span><span class="sxs-lookup"><span data-stu-id="79604-175">When the method returns, contains the data read, if any.</span></span></param>
        <param name="delimiter"><span data-ttu-id="79604-176">Диапазон только для чтения, который содержит один или несколько разделителей.</span><span class="sxs-lookup"><span data-stu-id="79604-176">A read-only span that contains one or more delimiters.</span></span></param>
        <param name="advancePastDelimiter"><span data-ttu-id="79604-177">Значение <see langword="true" /> для перемещения за найденный разделитель <paramref name="delimiter" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-177"><see langword="true" /> to move past the <paramref name="delimiter" /> if found; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79604-178">Пытается считать данные до нахождения полного разделителя, указанного как диапазон только для чтения.</span><span class="sxs-lookup"><span data-stu-id="79604-178">Tries to read data until the entire delimiter specified as a read-only span matches.</span></span></summary>
        <returns><span data-ttu-id="79604-179">Значение <see langword="true" />, если разделитель <paramref name="delimiter" /> был найден; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-179"><see langword="true" /> if the <paramref name="delimiter" /> was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadTo">
      <MemberSignature Language="C#" Value="public bool TryReadTo (out System.Buffers.ReadOnlySequence&lt;T&gt; sequence, T delimiter, bool advancePastDelimiter = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadTo([out] valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt;&amp; sequence, !T delimiter, bool advancePastDelimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.TryReadTo(System.Buffers.ReadOnlySequence{`0}@,`0,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadTo (ByRef sequence As ReadOnlySequence(Of T), delimiter As T, Optional advancePastDelimiter As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryReadTo : ReadOnlySequence * 'T * bool -&gt; bool" Usage="sequenceReader.TryReadTo (sequence, delimiter, advancePastDelimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Buffers.ReadOnlySequence&lt;T&gt;" RefType="out" />
        <Parameter Name="delimiter" Type="T" />
        <Parameter Name="advancePastDelimiter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sequence"><span data-ttu-id="79604-180">При возвращении метода содержит считанные данные, если они имеются.</span><span class="sxs-lookup"><span data-stu-id="79604-180">When the method returns, contains the data read, if any.</span></span></param>
        <param name="delimiter"><span data-ttu-id="79604-181">Искомый разделитель.</span><span class="sxs-lookup"><span data-stu-id="79604-181">The delimiter to look for.</span></span></param>
        <param name="advancePastDelimiter"><span data-ttu-id="79604-182">Значение <see langword="true" /> для перемещения за найденный разделитель <paramref name="delimiter" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-182"><see langword="true" /> to move past the <paramref name="delimiter" /> if found; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79604-183">Пытается считать все данные до указанного разделителя <paramref name="delimiter" />.</span><span class="sxs-lookup"><span data-stu-id="79604-183">Tries to read everything up to the given <paramref name="delimiter" />.</span></span></summary>
        <returns><span data-ttu-id="79604-184">Значение <see langword="true" />, если разделитель <paramref name="delimiter" /> был найден; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-184"><see langword="true" /> if the <paramref name="delimiter" /> was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadTo">
      <MemberSignature Language="C#" Value="public bool TryReadTo (out ReadOnlySpan&lt;T&gt; span, T delimiter, bool advancePastDelimiter = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadTo([out] valuetype System.ReadOnlySpan`1&lt;!T&gt;&amp; span, !T delimiter, bool advancePastDelimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.TryReadTo(System.ReadOnlySpan{`0}@,`0,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadTo (ByRef span As ReadOnlySpan(Of T), delimiter As T, Optional advancePastDelimiter As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryReadTo : ReadOnlySpan * 'T * bool -&gt; bool" Usage="sequenceReader.TryReadTo (span, delimiter, advancePastDelimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;T&gt;" RefType="out" />
        <Parameter Name="delimiter" Type="T" />
        <Parameter Name="advancePastDelimiter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="span"><span data-ttu-id="79604-185">При возвращении метода содержит считанные данные, если они имеются.</span><span class="sxs-lookup"><span data-stu-id="79604-185">When the method returns, contains the data read, if any.</span></span></param>
        <param name="delimiter"><span data-ttu-id="79604-186">Искомый разделитель.</span><span class="sxs-lookup"><span data-stu-id="79604-186">The delimiter to look for.</span></span></param>
        <param name="advancePastDelimiter"><span data-ttu-id="79604-187">Значение <see langword="true" /> для перемещения за найденный разделитель <paramref name="delimiter" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-187"><see langword="true" /> to move past the <paramref name="delimiter" /> if found; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79604-188">Пытается считать все данные до указанного разделителя <paramref name="delimiter" />.</span><span class="sxs-lookup"><span data-stu-id="79604-188">Tries to read everything up to the given <paramref name="delimiter" />.</span></span></summary>
        <returns><span data-ttu-id="79604-189">Значение <see langword="true" />, если разделитель <paramref name="delimiter" /> был найден; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-189"><see langword="true" /> if the <paramref name="delimiter" /> was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadTo">
      <MemberSignature Language="C#" Value="public bool TryReadTo (out System.Buffers.ReadOnlySequence&lt;T&gt; sequence, T delimiter, T delimiterEscape, bool advancePastDelimiter = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadTo([out] valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt;&amp; sequence, !T delimiter, !T delimiterEscape, bool advancePastDelimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.TryReadTo(System.Buffers.ReadOnlySequence{`0}@,`0,`0,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadTo (ByRef sequence As ReadOnlySequence(Of T), delimiter As T, delimiterEscape As T, Optional advancePastDelimiter As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryReadTo : ReadOnlySequence * 'T * 'T * bool -&gt; bool" Usage="sequenceReader.TryReadTo (sequence, delimiter, delimiterEscape, advancePastDelimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Buffers.ReadOnlySequence&lt;T&gt;" RefType="out" />
        <Parameter Name="delimiter" Type="T" />
        <Parameter Name="delimiterEscape" Type="T" />
        <Parameter Name="advancePastDelimiter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sequence"><span data-ttu-id="79604-190">При возвращении метода содержит считанные данные, если они имеются.</span><span class="sxs-lookup"><span data-stu-id="79604-190">When the method returns, contains the data read, if any.</span></span></param>
        <param name="delimiter"><span data-ttu-id="79604-191">Искомый разделитель.</span><span class="sxs-lookup"><span data-stu-id="79604-191">The delimiter to look for.</span></span></param>
        <param name="delimiterEscape"><span data-ttu-id="79604-192">Значение, которое указывает, что следующий разделитель <paramref name="delimiter" /> необходимо пропустить.</span><span class="sxs-lookup"><span data-stu-id="79604-192">A value that indicates that an immediately following <paramref name="delimiter" /> is to be skipped.</span></span></param>
        <param name="advancePastDelimiter"><span data-ttu-id="79604-193">Значение <see langword="true" /> для перемещения за найденный разделитель <paramref name="delimiter" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-193"><see langword="true" /> to move past the <paramref name="delimiter" /> if found; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79604-194">Пытается считать все данные до данного разделителя <paramref name="delimiter" />, пропуская разделители, перед которыми указан <paramref name="delimiterEscape" />.</span><span class="sxs-lookup"><span data-stu-id="79604-194">Tries to read everything up to the given <paramref name="delimiter" />, ignoring delimiters that are preceded by <paramref name="delimiterEscape" />.</span></span></summary>
        <returns><span data-ttu-id="79604-195">Значение <see langword="true" />, если разделитель <paramref name="delimiter" /> был найден; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-195"><see langword="true" /> if the <paramref name="delimiter" /> was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadTo">
      <MemberSignature Language="C#" Value="public bool TryReadTo (out ReadOnlySpan&lt;T&gt; span, T delimiter, T delimiterEscape, bool advancePastDelimiter = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadTo([out] valuetype System.ReadOnlySpan`1&lt;!T&gt;&amp; span, !T delimiter, !T delimiterEscape, bool advancePastDelimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.TryReadTo(System.ReadOnlySpan{`0}@,`0,`0,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadTo (ByRef span As ReadOnlySpan(Of T), delimiter As T, delimiterEscape As T, Optional advancePastDelimiter As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryReadTo : ReadOnlySpan * 'T * 'T * bool -&gt; bool" Usage="sequenceReader.TryReadTo (span, delimiter, delimiterEscape, advancePastDelimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;T&gt;" RefType="out" />
        <Parameter Name="delimiter" Type="T" />
        <Parameter Name="delimiterEscape" Type="T" />
        <Parameter Name="advancePastDelimiter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="span"><span data-ttu-id="79604-196">При возвращении метода содержит считанные данные, если они имеются.</span><span class="sxs-lookup"><span data-stu-id="79604-196">When the method returns, contains the data read, if any.</span></span></param>
        <param name="delimiter"><span data-ttu-id="79604-197">Искомый разделитель.</span><span class="sxs-lookup"><span data-stu-id="79604-197">The delimiter to look for.</span></span></param>
        <param name="delimiterEscape"><span data-ttu-id="79604-198">Значение, которое указывает, что следующий разделитель <paramref name="delimiter" /> необходимо пропустить.</span><span class="sxs-lookup"><span data-stu-id="79604-198">A value that indicates that an immediately following <paramref name="delimiter" /> is to be skipped.</span></span></param>
        <param name="advancePastDelimiter"><span data-ttu-id="79604-199">Значение <see langword="true" /> для перемещения за найденный разделитель <paramref name="delimiter" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-199"><see langword="true" /> to move past the <paramref name="delimiter" /> if found; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79604-200">Пытается считать все данные до данного разделителя <paramref name="delimiter" />, пропуская разделители, перед которыми указан <paramref name="delimiterEscape" />.</span><span class="sxs-lookup"><span data-stu-id="79604-200">Tries to read everything up to the given <paramref name="delimiter" />, ignoring delimiters that are preceded by <paramref name="delimiterEscape" />.</span></span></summary>
        <returns><span data-ttu-id="79604-201">Значение <see langword="true" />, если разделитель <paramref name="delimiter" /> был найден; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-201"><see langword="true" /> if the <paramref name="delimiter" /> was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadToAny">
      <MemberSignature Language="C#" Value="public bool TryReadToAny (out System.Buffers.ReadOnlySequence&lt;T&gt; sequence, ReadOnlySpan&lt;T&gt; delimiters, bool advancePastDelimiter = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadToAny([out] valuetype System.Buffers.ReadOnlySequence`1&lt;!T&gt;&amp; sequence, valuetype System.ReadOnlySpan`1&lt;!T&gt; delimiters, bool advancePastDelimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.TryReadToAny(System.Buffers.ReadOnlySequence{`0}@,System.ReadOnlySpan{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadToAny (ByRef sequence As ReadOnlySequence(Of T), delimiters As ReadOnlySpan(Of T), Optional advancePastDelimiter As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryReadToAny : ReadOnlySequence * ReadOnlySpan&lt;'T (requires 'T : struct)&gt; * bool -&gt; bool" Usage="sequenceReader.TryReadToAny (sequence, delimiters, advancePastDelimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.Buffers.ReadOnlySequence&lt;T&gt;" RefType="out" />
        <Parameter Name="delimiters" Type="System.ReadOnlySpan&lt;T&gt;" />
        <Parameter Name="advancePastDelimiter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sequence"><span data-ttu-id="79604-202">При возвращении метода содержит считанные данные, если они имеются.</span><span class="sxs-lookup"><span data-stu-id="79604-202">When the method returns, contains the data read, if any.</span></span></param>
        <param name="delimiters"><span data-ttu-id="79604-203">Искомые разделители.</span><span class="sxs-lookup"><span data-stu-id="79604-203">The delimiters to look for.</span></span></param>
        <param name="advancePastDelimiter"><span data-ttu-id="79604-204"><see langword="true" /> для перемещения за первый найденный экземпляр любого из данных разделителей <paramref name="delimiters" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-204"><see langword="true" /> to move past the first found instance of any of the given <paramref name="delimiters" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79604-205">Пытается считать все данные до любого из указанных разделителей <paramref name="delimiters" />.</span><span class="sxs-lookup"><span data-stu-id="79604-205">Tries to read everything up to any of the specified <paramref name="delimiters" />.</span></span></summary>
        <returns><span data-ttu-id="79604-206">Значение <see langword="true" />, если был найден любой из разделителей <paramref name="delimiters" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-206"><see langword="true" /> if any of the <paramref name="delimiters" /> were found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadToAny">
      <MemberSignature Language="C#" Value="public bool TryReadToAny (out ReadOnlySpan&lt;T&gt; span, ReadOnlySpan&lt;T&gt; delimiters, bool advancePastDelimiter = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadToAny([out] valuetype System.ReadOnlySpan`1&lt;!T&gt;&amp; span, valuetype System.ReadOnlySpan`1&lt;!T&gt; delimiters, bool advancePastDelimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReader`1.TryReadToAny(System.ReadOnlySpan{`0}@,System.ReadOnlySpan{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadToAny (ByRef span As ReadOnlySpan(Of T), delimiters As ReadOnlySpan(Of T), Optional advancePastDelimiter As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryReadToAny : ReadOnlySpan * ReadOnlySpan&lt;'T (requires 'T : struct)&gt; * bool -&gt; bool" Usage="sequenceReader.TryReadToAny (span, delimiters, advancePastDelimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;T&gt;" RefType="out" />
        <Parameter Name="delimiters" Type="System.ReadOnlySpan&lt;T&gt;" />
        <Parameter Name="advancePastDelimiter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="span"><span data-ttu-id="79604-207">При возвращении метода содержит считанные данные, если они имеются.</span><span class="sxs-lookup"><span data-stu-id="79604-207">When the method returns, contains the data read, if any.</span></span></param>
        <param name="delimiters"><span data-ttu-id="79604-208">Искомые разделители.</span><span class="sxs-lookup"><span data-stu-id="79604-208">The delimiters to look for.</span></span></param>
        <param name="advancePastDelimiter"><span data-ttu-id="79604-209"><see langword="true" /> для перемещения за первый найденный экземпляр любого из данных разделителей <paramref name="delimiters" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-209"><see langword="true" /> to move past the first found instance of any of the given <paramref name="delimiters" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="79604-210">Пытается считать все данные до любого из указанных разделителей <paramref name="delimiters" />.</span><span class="sxs-lookup"><span data-stu-id="79604-210">Tries to read everything up to any of the specified <paramref name="delimiters" />.</span></span></summary>
        <returns><span data-ttu-id="79604-211">Значение <see langword="true" />, если был найден любой из разделителей <paramref name="delimiters" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79604-211"><see langword="true" /> if any of the <paramref name="delimiters" /> were found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnreadSpan">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;T&gt; UnreadSpan { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;!T&gt; UnreadSpan" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.SequenceReader`1.UnreadSpan" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnreadSpan As ReadOnlySpan(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;T&gt; UnreadSpan { ReadOnlySpan&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.UnreadSpan : ReadOnlySpan&lt;'T (requires 'T : struct)&gt;" Usage="System.Buffers.SequenceReader&lt;'T (requires 'T : struct)&gt;.UnreadSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79604-212">Возвращает часть диапазона <see cref="P:System.Buffers.SequenceReader`1.CurrentSpan" />, которая не была считана.</span><span class="sxs-lookup"><span data-stu-id="79604-212">Gets the unread portion of the <see cref="P:System.Buffers.SequenceReader`1.CurrentSpan" />.</span></span></summary>
        <value><span data-ttu-id="79604-213">Непрочтенная часть <see cref="P:System.Buffers.SequenceReader`1.CurrentSpan" />.</span><span class="sxs-lookup"><span data-stu-id="79604-213">The unread portion of the <see cref="P:System.Buffers.SequenceReader`1.CurrentSpan" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
