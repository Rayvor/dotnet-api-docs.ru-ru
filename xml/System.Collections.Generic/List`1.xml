<Type Name="List&lt;T&gt;" FullName="System.Collections.Generic.List&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="121f9bd369e34c3878ed38488cef7292a5e2c0f0" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75151657" /></Metadata><TypeSignature Language="C#" Value="public class List&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit List`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.List`1" />
  <TypeSignature Language="VB.NET" Value="Public Class List(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class List : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type List&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface IList&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="c96b4-101">Тип элементов в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-101">The type of elements in the list.</span></span></typeparam>
    <summary><span data-ttu-id="c96b4-102">Представляет строго типизированный список объектов, доступных по индексу.</span><span class="sxs-lookup"><span data-stu-id="c96b4-102">Represents a strongly typed list of objects that can be accessed by index.</span></span> <span data-ttu-id="c96b4-103">Поддерживает методы для поиска по списку, выполнения сортировки и других операций со списками.</span><span class="sxs-lookup"><span data-stu-id="c96b4-103">Provides methods to search, sort, and manipulate lists.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-104">Класс <xref:System.Collections.Generic.List%601> является универсальным эквивалентом класса <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-104">The <xref:System.Collections.Generic.List%601> class is the generic equivalent of the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="c96b4-105">Он реализует <xref:System.Collections.Generic.IList%601> универсальный интерфейс с помощью массива, размер которого динамически увеличивается по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="c96b4-105">It implements the <xref:System.Collections.Generic.IList%601> generic interface by using an array whose size is dynamically increased as required.</span></span>  
  
 <span data-ttu-id="c96b4-106">Элементы можно добавлять в <xref:System.Collections.Generic.List%601> с помощью методов <xref:System.Collections.Generic.List%601.Add%2A> или <xref:System.Collections.Generic.List%601.AddRange%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-106">You can add items to a <xref:System.Collections.Generic.List%601> by using the <xref:System.Collections.Generic.List%601.Add%2A> or <xref:System.Collections.Generic.List%601.AddRange%2A> methods.</span></span>  
  
 <span data-ttu-id="c96b4-107">Класс <xref:System.Collections.Generic.List%601> использует как компаратор проверки на равенство, так и компаратор упорядочения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-107">The <xref:System.Collections.Generic.List%601> class uses both an equality comparer and an ordering comparer.</span></span>  
  
-   <span data-ttu-id="c96b4-108">Методы, такие как <xref:System.Collections.Generic.List%601.Contains%2A>, <xref:System.Collections.Generic.List%601.IndexOf%2A>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A>и <xref:System.Collections.Generic.Dictionary%602.Remove%2A>, используют компаратор проверки на равенство для элементов списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-108">Methods such as <xref:System.Collections.Generic.List%601.Contains%2A>, <xref:System.Collections.Generic.List%601.IndexOf%2A>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A>, and <xref:System.Collections.Generic.Dictionary%602.Remove%2A> use an equality comparer for the list elements.</span></span> <span data-ttu-id="c96b4-109">Компаратор проверки на равенство по умолчанию для типа `T` определяется следующим образом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-109">The default equality comparer for type `T` is determined as follows.</span></span> <span data-ttu-id="c96b4-110">Если тип `T` реализует <xref:System.IEquatable%601> универсальный интерфейс, то функция сравнения на равенство является методом <xref:System.IEquatable%601.Equals%28%600%29> этого интерфейса. в противном случае компаратор проверки на равенство по умолчанию <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-110">If type `T` implements the <xref:System.IEquatable%601> generic interface, then the equality comparer is the <xref:System.IEquatable%601.Equals%28%600%29> method of that interface; otherwise, the default equality comparer is <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="c96b4-111">Методы, такие как <xref:System.Collections.Generic.List%601.BinarySearch%2A> и <xref:System.Collections.Generic.List%601.Sort%2A>, используют компаратор упорядочения для элементов списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-111">Methods such as <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> use an ordering comparer for the list elements.</span></span> <span data-ttu-id="c96b4-112">Компаратор по умолчанию для типа `T` определяется следующим образом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-112">The default comparer for type `T` is determined as follows.</span></span>  <span data-ttu-id="c96b4-113">Если тип `T` реализует <xref:System.IComparable%601> универсальный интерфейс, то компаратором по умолчанию является метод <xref:System.IComparable%601.CompareTo%28%600%29> этого интерфейса. в противном случае, если тип `T` реализует неуниверсальный <xref:System.IComparable> интерфейс, то компаратором по умолчанию является метод <xref:System.IComparable.CompareTo%28System.Object%29> этого интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c96b4-113">If type `T` implements the <xref:System.IComparable%601> generic interface, then the default comparer is the <xref:System.IComparable%601.CompareTo%28%600%29> method of that interface; otherwise, if type `T` implements the nongeneric <xref:System.IComparable> interface, then the default comparer is the <xref:System.IComparable.CompareTo%28System.Object%29> method of that interface.</span></span> <span data-ttu-id="c96b4-114">Если тип `T` реализует ни интерфейс, ни компаратор по умолчанию, ни компаратор, ни делегат сравнения должны быть предоставлены явно.</span><span class="sxs-lookup"><span data-stu-id="c96b4-114">If type `T` implements neither interface, then there is no default comparer, and a comparer or comparison delegate must be provided explicitly.</span></span>  
  
 <span data-ttu-id="c96b4-115">Сортировка <xref:System.Collections.Generic.List%601> не гарантируется.</span><span class="sxs-lookup"><span data-stu-id="c96b4-115">The <xref:System.Collections.Generic.List%601> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="c96b4-116">Необходимо отсортировать <xref:System.Collections.Generic.List%601> перед выполнением операций (например, <xref:System.Collections.Generic.List%601.BinarySearch%2A>), для которых требуется сортировка <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-116">You must sort the <xref:System.Collections.Generic.List%601> before performing operations (such as <xref:System.Collections.Generic.List%601.BinarySearch%2A>) that require the <xref:System.Collections.Generic.List%601> to be sorted.</span></span>  
  
 <span data-ttu-id="c96b4-117">Доступ к элементам в этой коллекции можно получить с помощью целочисленного индекса.</span><span class="sxs-lookup"><span data-stu-id="c96b4-117">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="c96b4-118">Индексы в этой коллекции отсчитываются от нуля.</span><span class="sxs-lookup"><span data-stu-id="c96b4-118">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="c96b4-119">**Только .NET Framework:** Для очень больших <xref:System.Collections.Generic.List%601> объектов можно увеличить максимальную емкость до 2 000 000 000 элементов в 64-разрядной системе, установив атрибут `enabled` элемента конфигурации [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) для `true` в среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-119">**.NET Framework only:** For very large <xref:System.Collections.Generic.List%601> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="c96b4-120"><xref:System.Collections.Generic.List%601> принимает `null` как допустимое значение для ссылочных типов и допускает дублирование элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-120"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="c96b4-121">Сведения о неизменяемой версии класса <xref:System.Collections.Generic.List%601> см. в разделе <xref:System.Collections.Immutable.ImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-121">For an immutable version of the <xref:System.Collections.Generic.List%601> class, see <xref:System.Collections.Immutable.ImmutableList%601>.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="c96b4-122">Особенности производительности</span><span class="sxs-lookup"><span data-stu-id="c96b4-122">Performance Considerations</span></span>  
 <span data-ttu-id="c96b4-123">При принятии решения о том, следует ли использовать класс <xref:System.Collections.Generic.List%601> или <xref:System.Collections.ArrayList>, оба из которых имеют похожие функции, помните, что класс <xref:System.Collections.Generic.List%601> работает лучше в большинстве случаев и является типобезопасным.</span><span class="sxs-lookup"><span data-stu-id="c96b4-123">In deciding whether to use the <xref:System.Collections.Generic.List%601> or <xref:System.Collections.ArrayList> class, both of which have similar functionality, remember that the <xref:System.Collections.Generic.List%601> class performs better in most cases and is type safe.</span></span> <span data-ttu-id="c96b4-124">Если тип ссылки используется для типа `T` класса <xref:System.Collections.Generic.List%601>, поведение этих двух классов идентично.</span><span class="sxs-lookup"><span data-stu-id="c96b4-124">If a reference type is used for type `T` of the <xref:System.Collections.Generic.List%601> class, the behavior of the two classes is identical.</span></span> <span data-ttu-id="c96b4-125">Однако если для типа `T`используется тип значения, необходимо рассмотреть проблемы с реализацией и упаковкой.</span><span class="sxs-lookup"><span data-stu-id="c96b4-125">However, if a value type is used for type `T`, you need to consider implementation and boxing issues.</span></span>  
  
 <span data-ttu-id="c96b4-126">Если для типа `T`используется тип значения, компилятор создает реализацию класса <xref:System.Collections.Generic.List%601>, специально для этого типа значения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-126">If a value type is used for type `T`, the compiler generates an implementation of the <xref:System.Collections.Generic.List%601> class specifically for that value type.</span></span> <span data-ttu-id="c96b4-127">Это означает, что элемент списка <xref:System.Collections.Generic.List%601>ного объекта не обязательно должен быть упакован перед использованием элемента, и 500 после создания элементов списка, хранящихся в памяти, не превышающих размер памяти, используемой для создания реализации класса.</span><span class="sxs-lookup"><span data-stu-id="c96b4-127">That means a list element of a <xref:System.Collections.Generic.List%601> object does not have to be boxed before the element can be used, and after about 500 list elements are created the memory saved not boxing list elements is greater than the memory used to generate the class implementation.</span></span>  
  
 <span data-ttu-id="c96b4-128">Убедитесь, что тип значения, используемый для типа `T`, реализует <xref:System.IEquatable%601> универсальный интерфейс.</span><span class="sxs-lookup"><span data-stu-id="c96b4-128">Make certain the value type used for type `T` implements the <xref:System.IEquatable%601> generic interface.</span></span> <span data-ttu-id="c96b4-129">В противном случае методы, такие как <xref:System.Collections.Generic.List%601.Contains%2A>, должны вызывать метод <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>, который является элементом затронутого элемента списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-129">If not, methods such as <xref:System.Collections.Generic.List%601.Contains%2A> must call the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, which boxes the affected list element.</span></span> <span data-ttu-id="c96b4-130">Если тип значения реализует интерфейс <xref:System.IComparable> и вы владеете исходным кодом, также реализуйте <xref:System.IComparable%601> универсальный интерфейс, чтобы избежать <xref:System.Collections.Generic.List%601.BinarySearch%2A> и <xref:System.Collections.Generic.List%601.Sort%2A> методов из элементов списка упаковки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-130">If the value type implements the <xref:System.IComparable> interface and you own the source code, also implement the <xref:System.IComparable%601> generic interface to prevent the <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> methods from boxing list elements.</span></span> <span data-ttu-id="c96b4-131">Если вы не владеете исходным кодом, передайте объект <xref:System.Collections.Generic.IComparer%601> в методы <xref:System.Collections.Generic.List%601.BinarySearch%2A> и <xref:System.Collections.Generic.List%601.Sort%2A></span><span class="sxs-lookup"><span data-stu-id="c96b4-131">If you do not own the source code, pass an <xref:System.Collections.Generic.IComparer%601> object to the <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> methods</span></span>  
  
 <span data-ttu-id="c96b4-132">Мы рекомендуем использовать реализацию класса <xref:System.Collections.Generic.List%601>, зависящую от типа, вместо использования класса <xref:System.Collections.ArrayList> или самостоятельной записи строго типизированной коллекции оберток.</span><span class="sxs-lookup"><span data-stu-id="c96b4-132">It is to your advantage to use the type-specific implementation of the <xref:System.Collections.Generic.List%601> class instead of using the <xref:System.Collections.ArrayList> class or writing a strongly typed wrapper collection yourself.</span></span> <span data-ttu-id="c96b4-133">Причина в том, что ваша реализация должна сделать то, что .NET Framework делает, а общеязыковая среда выполнения может совместно использовать код промежуточного языка Майкрософт и метаданные, которые ваша реализация не может.</span><span class="sxs-lookup"><span data-stu-id="c96b4-133">The reason is your implementation must do what the .NET Framework does for you already, and the common language runtime can share Microsoft intermediate language code and metadata, which your implementation cannot.</span></span>  
  
## <a name="f-considerations"></a><span data-ttu-id="c96b4-134">F#Следует</span><span class="sxs-lookup"><span data-stu-id="c96b4-134">F# Considerations</span></span>  
 <span data-ttu-id="c96b4-135">Класс <xref:System.Collections.Generic.List%601> часто используется в F# коде.</span><span class="sxs-lookup"><span data-stu-id="c96b4-135">The <xref:System.Collections.Generic.List%601> class is used infrequently in F# code.</span></span> <span data-ttu-id="c96b4-136">Вместо этого, как правило, предпочтительно использовать [списки](https://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d), которые являются неизменяемыми однонаправленными списками.</span><span class="sxs-lookup"><span data-stu-id="c96b4-136">Instead, [Lists](https://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d), which are immutable, singly-linked lists, are typically preferred.</span></span> <span data-ttu-id="c96b4-137">F# Список содержит упорядоченную, неизменяемую последовательность значений и поддерживается для использования в функциональной разработке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-137">An F# List provides an ordered, immutable series of values, and is supported for use in functional-style development.</span></span> <span data-ttu-id="c96b4-138">При использовании из F#класс <xref:System.Collections.Generic.List%601>, как правило, ссылается на сокращенную форму типа [ресизеаррай\<а >](https://msdn.microsoft.com/library/ee353447.aspx) , чтобы избежать конфликтов имен F# с списками</span><span class="sxs-lookup"><span data-stu-id="c96b4-138">When used from F#, the <xref:System.Collections.Generic.List%601> class is typically referred to by the [ResizeArray\<'T>](https://msdn.microsoft.com/library/ee353447.aspx) type abbreviation to avoid naming conflicts with F# Lists</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="c96b4-139">В следующем примере показано, как добавить, удалить и вставить простой бизнес-объект в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-139">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="c96b4-140">В следующем примере демонстрируется несколько свойств и методов <xref:System.Collections.Generic.List%601> универсального класса типа String.</span><span class="sxs-lookup"><span data-stu-id="c96b4-140">The following example demonstrates several properties and methods of the <xref:System.Collections.Generic.List%601> generic class of type string.</span></span> <span data-ttu-id="c96b4-141">(Пример <xref:System.Collections.Generic.List%601> сложных типов см. в описании метода <xref:System.Collections.Generic.List%601.Contains%2A>.)</span><span class="sxs-lookup"><span data-stu-id="c96b4-141">(For an example of a <xref:System.Collections.Generic.List%601> of complex types, see the <xref:System.Collections.Generic.List%601.Contains%2A> method.)</span></span>  
  
 <span data-ttu-id="c96b4-142">Конструктор без параметров используется для создания списка строк с емкостью по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-142">The parameterless constructor is used to create a list of strings with the default capacity.</span></span> <span data-ttu-id="c96b4-143">Отображается свойство <xref:System.Collections.Generic.List%601.Capacity%2A>, а затем метод <xref:System.Collections.Generic.List%601.Add%2A> используется для добавления нескольких элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-143">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed and then the <xref:System.Collections.Generic.List%601.Add%2A> method is used to add several items.</span></span> <span data-ttu-id="c96b4-144">Элементы перечислены, а свойство <xref:System.Collections.Generic.List%601.Capacity%2A> отображается снова вместе со свойством <xref:System.Collections.Generic.List%601.Count%2A>, чтобы показать, что емкость увеличилась по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="c96b4-144">The items are listed, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="c96b4-145">Метод <xref:System.Collections.Generic.List%601.Contains%2A> используется для проверки наличия элемента в списке, метод <xref:System.Collections.Generic.List%601.Insert%2A> используется для вставки нового элемента в середину списка, после чего содержимое списка снова отображается.</span><span class="sxs-lookup"><span data-stu-id="c96b4-145">The <xref:System.Collections.Generic.List%601.Contains%2A> method is used to test for the presence of an item in the list, the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert a new item in the middle of the list, and the contents of the list are displayed again.</span></span>  
  
 <span data-ttu-id="c96b4-146">Свойство <xref:System.Collections.Generic.List%601.Item%2A> по умолчанию (индексатор в C#) используется для получения элемента, метод <xref:System.Collections.Generic.List%601.Remove%2A> используется для удаления первого экземпляра повторяющегося элемента, добавленного ранее, а содержимое снова отображается.</span><span class="sxs-lookup"><span data-stu-id="c96b4-146">The default <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#) is used to retrieve an item, the <xref:System.Collections.Generic.List%601.Remove%2A> method is used to remove the first instance of the duplicate item added earlier, and the contents are displayed again.</span></span> <span data-ttu-id="c96b4-147">Метод <xref:System.Collections.Generic.List%601.Remove%2A> всегда удаляет первый обнаруженный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="c96b4-147">The <xref:System.Collections.Generic.List%601.Remove%2A> method always removes the first instance it encounters.</span></span>  
  
 <span data-ttu-id="c96b4-148">Метод <xref:System.Collections.Generic.List%601.TrimExcess%2A> используется для уменьшения емкости в соответствии с количеством, и отображаются свойства <xref:System.Collections.Generic.List%601.Capacity%2A> и <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-148">The <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="c96b4-149">Если неиспользуемая емкость была меньше 10% от общей емкости, размер списка не изменится.</span><span class="sxs-lookup"><span data-stu-id="c96b4-149">If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</span></span>  
  
 <span data-ttu-id="c96b4-150">Наконец, метод <xref:System.Collections.Generic.List%601.Clear%2A> используется для удаления всех элементов из списка, а свойства <xref:System.Collections.Generic.List%601.Capacity%2A> и <xref:System.Collections.Generic.List%601.Count%2A> отображаются.</span><span class="sxs-lookup"><span data-stu-id="c96b4-150">Finally, the <xref:System.Collections.Generic.List%601.Clear%2A> method is used to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="c96b4-151">Открытые статические (<see langword="Shared" /> в Visual Basic) члены этого типа являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="c96b4-151">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="c96b4-152">Потокобезопасность членов экземпляров не гарантируется.</span><span class="sxs-lookup"><span data-stu-id="c96b4-152">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="c96b4-153">В <see cref="T:System.Collections.Generic.List`1" />можно выполнять несколько операций чтения, но при изменении коллекции во время ее чтения могут возникать проблемы.</span><span class="sxs-lookup"><span data-stu-id="c96b4-153">It is safe to perform multiple read operations on a <see cref="T:System.Collections.Generic.List`1" />, but issues can occur if the collection is modified while it's being read.</span></span> <span data-ttu-id="c96b4-154">Чтобы обеспечить безопасность потоков, заблокируйте коллекцию во время операции чтения или записи.</span><span class="sxs-lookup"><span data-stu-id="c96b4-154">To ensure thread safety, lock the collection during a read or write operation.</span></span> <span data-ttu-id="c96b4-155">Чтобы обеспечить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-155">To enable a collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span> <span data-ttu-id="c96b4-156">Сведения о коллекциях со встроенной синхронизацией см. в разделе классы в пространстве имен <see cref="N:System.Collections.Concurrent" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-156">For collections with built-in synchronization, see the classes in the <see cref="N:System.Collections.Concurrent" /> namespace.</span></span> <span data-ttu-id="c96b4-157">Дополнительные сведения о поточно-ориентированной альтернативе см. в разделе класс <see cref="T:System.Collections.Immutable.ImmutableList`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-157">For an inherently thread-safe alternative, see the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Immutable.ImmutableList`1" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-158">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-158">Performing Culture-Insensitive String Operations in Collections</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="c96b4-159">Итераторы (C# и Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c96b4-159">Iterators (C# and Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c96b4-160">Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-160">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c96b4-161">Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.List`1" />, который является пустым и имеет начальную емкость по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-161">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-162">Емкость <xref:System.Collections.Generic.List%601> — это количество элементов, которые может содержать <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-162">The capacity of a <xref:System.Collections.Generic.List%601> is the number of elements that the <xref:System.Collections.Generic.List%601> can hold.</span></span> <span data-ttu-id="c96b4-163">При добавлении элементов в <xref:System.Collections.Generic.List%601>емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-163">As elements are added to a <xref:System.Collections.Generic.List%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="c96b4-164">Если размер коллекции можно оценить, использование конструктора <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> и указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-164">If the size of the collection can be estimated, using the <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor and specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-165">Емкость можно уменьшить, вызвав метод <xref:System.Collections.Generic.List%601.TrimExcess%2A> или явно задав свойство <xref:System.Collections.Generic.List%601.Capacity%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-165">The capacity can be decreased by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="c96b4-166">Уменьшение емкости приводит к повторному выделению памяти и копированию всех элементов в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-166">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-167">Этот конструктор является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-167">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="c96b4-168">В следующем примере показан конструктор без параметров для универсального класса <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-168">The following example demonstrates the parameterless constructor of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="c96b4-169">Конструктор без параметров создает список с емкостью по умолчанию, как показано при отображении свойства <xref:System.Collections.Generic.List%601.Capacity%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-169">The parameterless constructor creates a list with the default capacity, as demonstrated by displaying the <xref:System.Collections.Generic.List%601.Capacity%2A> property.</span></span>  
  
 <span data-ttu-id="c96b4-170">В этом примере добавляются, вставляются и удаляются элементы, показывающие, как изменяется емкость при использовании этих методов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-170">The example adds, inserts, and removes items, showing how the capacity changes as these methods are used.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.List&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="new System.Collections.Generic.List&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="c96b4-171">Коллекция, элементы которой копируются в новый список.</span><span class="sxs-lookup"><span data-stu-id="c96b4-171">The collection whose elements are copied to the new list.</span></span></param>
        <summary><span data-ttu-id="c96b4-172">Инициализирует новый экземпляр <see cref="T:System.Collections.Generic.List`1" />, который содержит элементы, скопированные из указанной коллекции, и имеет емкость, достаточную для размещения всех скопированных элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-172">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-173">Элементы копируются на <xref:System.Collections.Generic.List%601> в том же порядке, в котором они считываются перечислителем коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-173">The elements are copied onto the <xref:System.Collections.Generic.List%601> in the same order they are read by the enumerator of the collection.</span></span>  
  
 <span data-ttu-id="c96b4-174">Этот конструктор является операцией O (*n*), где *n* — число элементов в `collection`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-174">This constructor is an O(*n*) operation, where *n* is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-175">В следующем примере демонстрируется конструктор <xref:System.Collections.Generic.List%601.%23ctor%2A> и различные методы класса <xref:System.Collections.Generic.List%601>, действующие для диапазонов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-175">The following example demonstrates the <xref:System.Collections.Generic.List%601.%23ctor%2A> constructor and various methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="c96b4-176">Массив строк создается и передается в конструктор, заполняя список элементами массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-176">An array of strings is created and passed to the constructor, populating the list with the elements of the array.</span></span> <span data-ttu-id="c96b4-177">Затем отображается свойство <xref:System.Collections.Generic.List%601.Capacity%2A>, чтобы показать, что начальная емкость — это именно то, что требуется для хранения входных элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-177">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is then displayed, to show that the initial capacity is exactly what is required to hold the input elements.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-178"><paramref name="collection" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-178"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.List&lt;'T&gt; : int -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="new System.Collections.Generic.List&lt;'T&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="c96b4-179">Число элементов, которые может изначально вместить новый список.</span><span class="sxs-lookup"><span data-stu-id="c96b4-179">The number of elements that the new list can initially store.</span></span></param>
        <summary><span data-ttu-id="c96b4-180">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Generic.List`1" /> с указанной начальной емкостью.</span><span class="sxs-lookup"><span data-stu-id="c96b4-180">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that is empty and has the specified initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-181">Емкость <xref:System.Collections.Generic.List%601> — это количество элементов, которые может содержать <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-181">The capacity of a <xref:System.Collections.Generic.List%601> is the number of elements that the <xref:System.Collections.Generic.List%601> can hold.</span></span> <span data-ttu-id="c96b4-182">При добавлении элементов в <xref:System.Collections.Generic.List%601>емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-182">As elements are added to a <xref:System.Collections.Generic.List%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="c96b4-183">Если размер коллекции можно оценить, указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-183">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-184">Емкость можно уменьшить, вызвав метод <xref:System.Collections.Generic.List%601.TrimExcess%2A> или явно задав свойство <xref:System.Collections.Generic.List%601.Capacity%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-184">The capacity can be decreased by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="c96b4-185">Уменьшение емкости приводит к повторному выделению памяти и копированию всех элементов в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-185">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-186">Этот конструктор является операцией O (*n*), где *n* — `capacity`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-186">This constructor is an O(*n*) operation, where *n* is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-187">В следующем примере демонстрируется конструктор <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-187">The following example demonstrates the <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="c96b4-188">Создается <xref:System.Collections.Generic.List%601> строк с емкостью 4, так как максимальный размер списка должен быть ровно 4.</span><span class="sxs-lookup"><span data-stu-id="c96b4-188">A <xref:System.Collections.Generic.List%601> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</span></span> <span data-ttu-id="c96b4-189">Список заполняется четырьмя строками, а копия, доступная только для чтения, создается с помощью метода <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-189">The list is populated with four strings, and a read-only copy is created by using the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method.</span></span>  
  
 [!code-cpp[List\`1_AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_AsReadOnly/cpp/source.cpp#1)]
 [!code-csharp[List\`1_AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_AsReadOnly/cs/source.cs#1)]
 [!code-vb[List\`1_AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_AsReadOnly/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-190">Значение параметра <paramref name="capacity" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-190"><paramref name="capacity" /> is less than 0.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="list.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-191">Объект, добавляемый в конец коллекции <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-191">The object to be added to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-192">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-192">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="c96b4-193">Добавляет объект в конец очереди <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-193">Adds an object to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-194"><xref:System.Collections.Generic.List%601> принимает `null` как допустимое значение для ссылочных типов и допускает дублирование элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-194"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="c96b4-195">Если <xref:System.Collections.Generic.List%601.Count%2A> уже равно <xref:System.Collections.Generic.List%601.Capacity%2A>, емкость <xref:System.Collections.Generic.List%601> увеличивается путем автоматического перераспределения внутреннего массива, а существующие элементы копируются в новый массив перед добавлением нового элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-195">If <xref:System.Collections.Generic.List%601.Count%2A> already equals <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="c96b4-196">Если <xref:System.Collections.Generic.List%601.Count%2A> меньше <xref:System.Collections.Generic.List%601.Capacity%2A>, этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-196">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="c96b4-197">Если емкость необходимо увеличить для размещения нового элемента, этот метод становится операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-197">If the capacity needs to be increased to accommodate the new element, this method becomes an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="c96b4-198">В следующем примере показано, как добавить, удалить и вставить простой бизнес-объект в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-198">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="c96b4-199">В следующем примере показано несколько свойств и методов универсального класса <xref:System.Collections.Generic.List%601>, включая метод <xref:System.Collections.Generic.List%601.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-199">The following example demonstrates several properties and methods of the <xref:System.Collections.Generic.List%601> generic class, including the <xref:System.Collections.Generic.List%601.Add%2A> method.</span></span> <span data-ttu-id="c96b4-200">Конструктор без параметров используется для создания списка строк с емкостью 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-200">The parameterless constructor is used to create a list of strings with a capacity of 0.</span></span> <span data-ttu-id="c96b4-201">Отображается свойство <xref:System.Collections.Generic.List%601.Capacity%2A>, а затем метод <xref:System.Collections.Generic.List%601.Add%2A> используется для добавления нескольких элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-201">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed, and then the <xref:System.Collections.Generic.List%601.Add%2A> method is used to add several items.</span></span> <span data-ttu-id="c96b4-202">Элементы перечислены, а свойство <xref:System.Collections.Generic.List%601.Capacity%2A> отображается снова вместе со свойством <xref:System.Collections.Generic.List%601.Count%2A>, чтобы показать, что емкость увеличилась по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="c96b4-202">The items are listed, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="c96b4-203">Другие свойства и методы используются для поиска, вставки и удаления элементов из списка и, наконец, для очистки списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-203">Other properties and methods are used to search for, insert, and remove elements from the list, and finally to clear the list.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="member this.AddRange : seq&lt;'T&gt; -&gt; unit" Usage="list.AddRange collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="c96b4-204">Коллекция, элементы которой добавляются в конец списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-204">The collection whose elements should be added to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-205">Коллекция не может быть задана значением <see langword="null" />, но может содержать элементы <see langword="null" />, если тип <paramref name="T" /> является ссылочным типом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-205">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />, if type <paramref name="T" /> is a reference type.</span></span></param>
        <summary><span data-ttu-id="c96b4-206">Добавляет элементы указанной коллекции в конец списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-206">Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-207">Порядок элементов в коллекции сохраняется в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-207">The order of the elements in the collection is preserved in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-208">Если новый <xref:System.Collections.Generic.List%601.Count%2A> (текущий <xref:System.Collections.Generic.List%601.Count%2A> плюс размер коллекции) будет больше <xref:System.Collections.Generic.List%601.Capacity%2A>, емкость <xref:System.Collections.Generic.List%601> увеличивается путем автоматического перераспределения внутреннего массива для размещения новых элементов, а существующие элементы копируются в новый массив перед добавлением новых элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-208">If the new <xref:System.Collections.Generic.List%601.Count%2A> (the current <xref:System.Collections.Generic.List%601.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="c96b4-209">Если <xref:System.Collections.Generic.List%601> может разместить новые элементы без увеличения <xref:System.Collections.Generic.List%601.Capacity%2A>, этот метод является операцией O (*n*), где *n* — число добавляемых элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-209">If the <xref:System.Collections.Generic.List%601> can accommodate the new elements without increasing the <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(*n*) operation, where *n* is the number of elements to be added.</span></span> <span data-ttu-id="c96b4-210">Если емкость необходимо увеличить для размещения новых элементов, этот метод становится операцией O (*n* + *m*), где *n* — число добавляемых элементов, а *m* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-210">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(*n* + *m*) operation, where *n* is the number of elements to be added and *m* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-211">В следующем примере демонстрируется метод <xref:System.Collections.Generic.List%601.AddRange%2A> и различные другие методы класса <xref:System.Collections.Generic.List%601>, действующие для диапазонов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-211">The following example demonstrates the <xref:System.Collections.Generic.List%601.AddRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="c96b4-212">Массив строк создается и передается в конструктор, заполняя список элементами массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-212">An array of strings is created and passed to the constructor, populating the list with the elements of the array.</span></span> <span data-ttu-id="c96b4-213">Метод <xref:System.Collections.Generic.List%601.AddRange%2A> вызывается со списком в качестве аргумента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-213">The <xref:System.Collections.Generic.List%601.AddRange%2A> method is called, with the list as its argument.</span></span> <span data-ttu-id="c96b4-214">В результате текущие элементы списка добавляются в конец списка, что приводит к дублированию всех элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-214">The result is that the current elements of the list are added to the end of the list, duplicating all the elements.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-215"><paramref name="collection" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-215"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AsReadOnly">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; AsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!T&gt; AsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.AsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function AsReadOnly () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ AsReadOnly();" />
      <MemberSignature Language="F#" Value="member this.AsReadOnly : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="list.AsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c96b4-216">Возвращает для текущей коллекции оболочку <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, доступную только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-216">Returns a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the current collection.</span></span></summary>
        <returns><span data-ttu-id="c96b4-217">Объект, который служит оболочкой, обеспечивающей доступность текущего списка <see cref="T:System.Collections.Generic.List`1" /> только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-217">An object that acts as a read-only wrapper around the current <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-218">Чтобы предотвратить внесение изменений в объект <xref:System.Collections.Generic.List%601>, предоставьте его только через эту оболочку.</span><span class="sxs-lookup"><span data-stu-id="c96b4-218">To prevent any modifications to the <xref:System.Collections.Generic.List%601> object, expose it only through this wrapper.</span></span> <span data-ttu-id="c96b4-219">Объект <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> не предоставляет методы, изменяющие коллекцию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-219">A  <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object does not expose methods that modify the collection.</span></span> <span data-ttu-id="c96b4-220">Однако если в базовый объект <xref:System.Collections.Generic.List%601> вносятся изменения, то коллекция, доступная только для чтения, отражает эти изменения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-220">However, if changes are made to the underlying <xref:System.Collections.Generic.List%601> object, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="c96b4-221">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-221">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-222">В следующем примере демонстрируется метод <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-222">The following example demonstrates the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method.</span></span> <span data-ttu-id="c96b4-223">Создается <xref:System.Collections.Generic.List%601> строк с емкостью 4, так как максимальный размер списка должен быть ровно 4.</span><span class="sxs-lookup"><span data-stu-id="c96b4-223">A <xref:System.Collections.Generic.List%601> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</span></span> <span data-ttu-id="c96b4-224">Список заполняется четырьмя строками, а метод <xref:System.Collections.Generic.List%601.AsReadOnly%2A> используется, чтобы получить доступную только для чтения <xref:System.Collections.Generic.IList%601> реализацию универсального интерфейса, которая создает оболочку для исходного списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-224">The list is populated with four strings, and the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method is used to get a read-only <xref:System.Collections.Generic.IList%601> generic interface implementation that wraps the original list.</span></span>  
  
 <span data-ttu-id="c96b4-225">Элементу исходного списка присваивается значение "Коелофисис" с помощью свойства <xref:System.Collections.Generic.List%601.Item%2A> (индексатор в C#), и содержимое списка только для чтения отображается снова, чтобы продемонстрировать, что это просто оболочка для исходного списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-225">An element of the original list is set to "Coelophysis" using the <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#), and the contents of the read-only list are displayed again to demonstrate that it is just a wrapper for the original list.</span></span>  
  
 [!code-cpp[List\`1_AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_AsReadOnly/cpp/source.cpp#1)]
 [!code-csharp[List\`1_AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_AsReadOnly/cs/source.cs#1)]
 [!code-vb[List\`1_AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_AsReadOnly/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c96b4-226">Использует алгоритм двоичного поиска для нахождения определенного элемента в отсортированном списке <see cref="T:System.Collections.Generic.List`1" /> или в его части.</span><span class="sxs-lookup"><span data-stu-id="c96b4-226">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : 'T -&gt; int" Usage="list.BinarySearch item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-227">Искомый объект.</span><span class="sxs-lookup"><span data-stu-id="c96b4-227">The object to locate.</span></span> <span data-ttu-id="c96b4-228">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-228">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="c96b4-229">Выполняет поиск элемента по всему отсортированному списку <see cref="T:System.Collections.Generic.List`1" />, используя компаратор по умолчанию, и возвращает индекс элемента, отсчитываемый от нуля.</span><span class="sxs-lookup"><span data-stu-id="c96b4-229">Searches the entire sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the default comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="c96b4-230">Отсчитываемый от нуля индекс элемента <paramref name="item" /> в отсортированном списке <see cref="T:System.Collections.Generic.List`1" />, если элемент <paramref name="item" /> найден; в противном случае — отрицательное число, которое является поразрядным дополнением индекса следующего элемента, большего, чем <paramref name="item" />, или, если большего элемента не существует, поразрядным дополнением значения <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-230">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-231">Этот метод использует <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> компаратора по умолчанию для типа `T`, чтобы определить порядок элементов списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-231">This method uses the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for type `T` to determine the order of list elements.</span></span> <span data-ttu-id="c96b4-232">Свойство <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализует ли тип `T` <xref:System.IComparable%601> универсальный интерфейс, и использует эту реализацию, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="c96b4-232">The <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="c96b4-233">В противном случае <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализует ли тип `T` интерфейс <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-233">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="c96b4-234">Если тип `T` не реализует ни один из интерфейсов, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> создает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-234">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c96b4-235"><xref:System.Collections.Generic.List%601> уже должен быть отсортирован в соответствии с реализацией компаратора; в противном случае результат будет неверным.</span><span class="sxs-lookup"><span data-stu-id="c96b4-235">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="c96b4-236">Допускается сравнение `null` с любым ссылочным типом и не создает исключение при использовании универсального интерфейса <xref:System.IComparable%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-236">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="c96b4-237">При сортировке `null` считается меньше, чем любой другой объект.</span><span class="sxs-lookup"><span data-stu-id="c96b4-237">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="c96b4-238">Если <xref:System.Collections.Generic.List%601> содержит более одного элемента с одним и тем же значением, метод возвращает только одно из вхождений и может вернуть одно из вхождений, а не обязательно первое.</span><span class="sxs-lookup"><span data-stu-id="c96b4-238">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="c96b4-239">Если <xref:System.Collections.Generic.List%601> не содержит указанное значение, метод возвращает отрицательное целое число.</span><span class="sxs-lookup"><span data-stu-id="c96b4-239">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="c96b4-240">Операцию побитового дополнения (~) можно применить к этому отрицательному целому числу, чтобы получить индекс первого элемента, превышающего искомое значение.</span><span class="sxs-lookup"><span data-stu-id="c96b4-240">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="c96b4-241">При вставке значения в <xref:System.Collections.Generic.List%601>этот индекс следует использовать в качестве точки вставки для сохранения порядка сортировки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-241">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="c96b4-242">Этот метод является операцией O (log *n*), где *n* — число элементов в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="c96b4-242">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-243">В следующем примере демонстрируется перегрузка метода <xref:System.Collections.Generic.List%601.Sort> и перегрузка метода <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-243">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload.</span></span> <span data-ttu-id="c96b4-244"><xref:System.Collections.Generic.List%601> строк создается и заполняется четырьмя строками без определенного порядка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-244">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="c96b4-245">Список отображается, сортируется и отображается снова.</span><span class="sxs-lookup"><span data-stu-id="c96b4-245">The list is displayed, sorted, and displayed again.</span></span>  
  
 <span data-ttu-id="c96b4-246">Затем перегрузка метода <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> используется для поиска двух строк, которых нет в списке, а метод <xref:System.Collections.Generic.List%601.Insert%2A> используется для их вставки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-246">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload is then used to search for two strings that are not in the list, and the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert them.</span></span> <span data-ttu-id="c96b4-247">Возвращаемое значение метода <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> в каждом случае отрицательно, поскольку строки отсутствуют в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-247">The return value of the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method is negative in each case, because the strings are not in the list.</span></span> <span data-ttu-id="c96b4-248">Побитовое дополнение (оператор ~ в C# и Visual C++, `Xor`-1 в Visual Basic) этого отрицательного числа приводит к индексу первого элемента в списке, который больше, чем строка поиска, и вставка в этом расположении сохраняет порядок сортировки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-248">Taking the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</span></span> <span data-ttu-id="c96b4-249">Вторая строка поиска больше, чем любой элемент в списке, поэтому позиция вставки находится в конце списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-249">The second search string is larger than any element in the list, so the insertion position is at the end of the list.</span></span>  
  
 [!code-cpp[List\`1_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearch/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c96b4-250">Функция сравнения по умолчанию <see cref="P:System.Collections.Generic.Comparer`1.Default" /> не может найти реализацию универсального интерфейса <see cref="T:System.IComparable`1" /> или интерфейса <see cref="T:System.IComparable" /> для типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-250">The default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-251">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-251">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="list.BinarySearch (item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-252">Искомый объект.</span><span class="sxs-lookup"><span data-stu-id="c96b4-252">The object to locate.</span></span> <span data-ttu-id="c96b4-253">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-253">The value can be <see langword="null" /> for reference types.</span></span></param>
        <param name="comparer"><span data-ttu-id="c96b4-254">Реализация интерфейса <see cref="T:System.Collections.Generic.IComparer`1" />, которая используется при сравнении элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-254">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="c96b4-255">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-255">-or-</span></span> 
 <span data-ttu-id="c96b4-256"><see langword="null" />, если необходимо использовать функцию сравнения по умолчанию <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-256"><see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span></span></param>
        <summary><span data-ttu-id="c96b4-257">Выполняет поиск элемента по всему отсортированному списку <see cref="T:System.Collections.Generic.List`1" />, используя указанный компаратор, и возвращает индекс элемента, отсчитываемый от нуля.</span><span class="sxs-lookup"><span data-stu-id="c96b4-257">Searches the entire sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the specified comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="c96b4-258">Отсчитываемый от нуля индекс элемента <paramref name="item" /> в отсортированном списке <see cref="T:System.Collections.Generic.List`1" />, если элемент <paramref name="item" /> найден; в противном случае — отрицательное число, которое является поразрядным дополнением индекса следующего элемента, большего, чем <paramref name="item" />, или, если большего элемента не существует, поразрядным дополнением значения <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-258">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-259">Функция сравнения позволяет настроить сравнение элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-259">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="c96b4-260">Например, можно использовать экземпляр <xref:System.Collections.CaseInsensitiveComparer> в качестве компаратора для выполнения поиска строки без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="c96b4-260">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="c96b4-261">Если указано `comparer`, элементы <xref:System.Collections.Generic.List%601> сравниваются с указанным значением с использованием указанной реализации <xref:System.Collections.Generic.IComparer%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-261">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="c96b4-262">Если `comparer` имеет `null`, компаратор по умолчанию <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализует ли `T` типа <xref:System.IComparable%601> универсальный интерфейс, и использует эту реализацию, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="c96b4-262">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="c96b4-263">В противном случае <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализует ли тип `T` интерфейс <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-263">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="c96b4-264">Если тип `T` не реализует ни один интерфейс, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-264">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c96b4-265"><xref:System.Collections.Generic.List%601> уже должен быть отсортирован в соответствии с реализацией компаратора; в противном случае результат будет неверным.</span><span class="sxs-lookup"><span data-stu-id="c96b4-265">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="c96b4-266">Допускается сравнение `null` с любым ссылочным типом и не создает исключение при использовании универсального интерфейса <xref:System.IComparable%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-266">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="c96b4-267">При сортировке `null` считается меньше, чем любой другой объект.</span><span class="sxs-lookup"><span data-stu-id="c96b4-267">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="c96b4-268">Если <xref:System.Collections.Generic.List%601> содержит более одного элемента с одним и тем же значением, метод возвращает только одно из вхождений и может вернуть одно из вхождений, а не обязательно первое.</span><span class="sxs-lookup"><span data-stu-id="c96b4-268">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="c96b4-269">Если <xref:System.Collections.Generic.List%601> не содержит указанное значение, метод возвращает отрицательное целое число.</span><span class="sxs-lookup"><span data-stu-id="c96b4-269">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="c96b4-270">Операцию побитового дополнения (~) можно применить к этому отрицательному целому числу, чтобы получить индекс первого элемента, превышающего искомое значение.</span><span class="sxs-lookup"><span data-stu-id="c96b4-270">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="c96b4-271">При вставке значения в <xref:System.Collections.Generic.List%601>этот индекс следует использовать в качестве точки вставки для сохранения порядка сортировки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-271">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="c96b4-272">Этот метод является операцией O (log *n*), где *n* — число элементов в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="c96b4-272">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-273">В следующем примере демонстрируется перегрузка метода <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> и перегрузка метода <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-273">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="c96b4-274">В примере определяется альтернативный компаратор для строк с именем Динокомпаре, который реализует `IComparer<string>` (`IComparer(Of String)` в Visual Basic, `IComparer<String^>` в визуальном C++) универсальном интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="c96b4-274">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="c96b4-275">Средство сравнения работает следующим образом: First, сравниваемые проверяются на `null`, а пустая ссылка считается меньше, чем значение, отличное от NULL.</span><span class="sxs-lookup"><span data-stu-id="c96b4-275">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="c96b4-276">Во-вторых, длины строк сравниваются, а более длинная строка считается большей.</span><span class="sxs-lookup"><span data-stu-id="c96b4-276">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="c96b4-277">В-третьих, если длины равны, используется обычное сравнение строк.</span><span class="sxs-lookup"><span data-stu-id="c96b4-277">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="c96b4-278"><xref:System.Collections.Generic.List%601> строк создается и заполняется четырьмя строками без определенного порядка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-278">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="c96b4-279">Список отображается, сортируется с помощью альтернативного компаратора и снова отображается.</span><span class="sxs-lookup"><span data-stu-id="c96b4-279">The list is displayed, sorted using the alternate comparer, and displayed again.</span></span>  
  
 <span data-ttu-id="c96b4-280">Затем перегрузка метода <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> используется для поиска нескольких строк, которые отсутствуют в списке, с применением альтернативного компаратора.</span><span class="sxs-lookup"><span data-stu-id="c96b4-280">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</span></span> <span data-ttu-id="c96b4-281">Для вставки строк используется метод <xref:System.Collections.Generic.List%601.Insert%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-281">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert the strings.</span></span> <span data-ttu-id="c96b4-282">Эти два метода находятся в функции с именем `SearchAndInsert`, а также с кодом для получения побитового дополнения (оператор ~ в C# и визуальном C++элементе, `Xor`-1 в Visual Basic) отрицательного числа, возвращаемого <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29>, и использовать его в качестве индекса для вставки новой строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-282">These two methods are located in the function named `SearchAndInsert`, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> and use it as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c96b4-283"><paramref name="comparer" /> имеет значение <see langword="null" />, а функция сравнения по умолчанию <see cref="P:System.Collections.Generic.Comparer`1.Default" /> не может найти реализацию универсального интерфейса <see cref="T:System.IComparable`1" /> или интерфейса <see cref="T:System.IComparable" /> для типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-283"><paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-284">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-284">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (int index, int count, T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(int32 index, int32 count, !T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (index As Integer, count As Integer, item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(int index, int count, T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="list.BinarySearch (index, count, item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c96b4-285">Отсчитываемый от нуля индекс начала диапазона поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-285">The zero-based starting index of the range to search.</span></span></param>
        <param name="count"><span data-ttu-id="c96b4-286">Длина диапазона поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-286">The length of the range to search.</span></span></param>
        <param name="item"><span data-ttu-id="c96b4-287">Искомый объект.</span><span class="sxs-lookup"><span data-stu-id="c96b4-287">The object to locate.</span></span> <span data-ttu-id="c96b4-288">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-288">The value can be <see langword="null" /> for reference types.</span></span></param>
        <param name="comparer"><span data-ttu-id="c96b4-289">Реализация <see cref="T:System.Collections.Generic.IComparer`1" />, которую следует использовать при сравнении элементов, или <see langword="null" />, если должна использоваться функция сравнения по умолчанию <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-289">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span></span></param>
        <summary><span data-ttu-id="c96b4-290">Выполняет поиск элемента в диапазоне элементов отсортированного списка <see cref="T:System.Collections.Generic.List`1" />, используя указанную функцию сравнения, и возвращает индекс элемента, отсчитываемый от нуля.</span><span class="sxs-lookup"><span data-stu-id="c96b4-290">Searches a range of elements in the sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the specified comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="c96b4-291">Отсчитываемый от нуля индекс элемента <paramref name="item" /> в отсортированном списке <see cref="T:System.Collections.Generic.List`1" />, если элемент <paramref name="item" /> найден; в противном случае — отрицательное число, которое является поразрядным дополнением индекса следующего элемента, большего, чем <paramref name="item" />, или, если большего элемента не существует, поразрядным дополнением значения <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-291">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-292">Функция сравнения позволяет настроить сравнение элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-292">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="c96b4-293">Например, можно использовать экземпляр <xref:System.Collections.CaseInsensitiveComparer> в качестве компаратора для выполнения поиска строки без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="c96b4-293">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="c96b4-294">Если указано `comparer`, элементы <xref:System.Collections.Generic.List%601> сравниваются с указанным значением с использованием указанной реализации <xref:System.Collections.Generic.IComparer%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-294">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="c96b4-295">Если `comparer` имеет `null`, компаратор по умолчанию <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализует ли `T` типа <xref:System.IComparable%601> универсальный интерфейс, и использует эту реализацию, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="c96b4-295">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="c96b4-296">В противном случае <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализует ли тип `T` интерфейс <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-296">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="c96b4-297">Если тип `T` не реализует ни один интерфейс, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-297">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c96b4-298"><xref:System.Collections.Generic.List%601> уже должен быть отсортирован в соответствии с реализацией компаратора; в противном случае результат будет неверным.</span><span class="sxs-lookup"><span data-stu-id="c96b4-298">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="c96b4-299">Допускается сравнение `null` с любым ссылочным типом и не создает исключение при использовании универсального интерфейса <xref:System.IComparable%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-299">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="c96b4-300">При сортировке `null` считается меньше, чем любой другой объект.</span><span class="sxs-lookup"><span data-stu-id="c96b4-300">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="c96b4-301">Если <xref:System.Collections.Generic.List%601> содержит более одного элемента с одним и тем же значением, метод возвращает только одно из вхождений и может вернуть одно из вхождений, а не обязательно первое.</span><span class="sxs-lookup"><span data-stu-id="c96b4-301">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="c96b4-302">Если <xref:System.Collections.Generic.List%601> не содержит указанное значение, метод возвращает отрицательное целое число.</span><span class="sxs-lookup"><span data-stu-id="c96b4-302">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="c96b4-303">Операцию побитового дополнения (~) можно применить к этому отрицательному целому числу, чтобы получить индекс первого элемента, превышающего искомое значение.</span><span class="sxs-lookup"><span data-stu-id="c96b4-303">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="c96b4-304">При вставке значения в <xref:System.Collections.Generic.List%601>этот индекс следует использовать в качестве точки вставки для сохранения порядка сортировки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-304">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="c96b4-305">Этот метод является операцией O (log *n*), где *n* — число элементов в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="c96b4-305">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-306">В следующем примере демонстрируется перегрузка метода <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> и перегрузка метода <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-306">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="c96b4-307">В примере определяется альтернативный компаратор для строк с именем Динокомпаре, который реализует `IComparer<string>` (`IComparer(Of String)` в Visual Basic, `IComparer<String^>` в визуальном C++) универсальном интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="c96b4-307">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="c96b4-308">Средство сравнения работает следующим образом: First, сравниваемые проверяются на `null`, а пустая ссылка считается меньше, чем значение, отличное от NULL.</span><span class="sxs-lookup"><span data-stu-id="c96b4-308">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="c96b4-309">Во-вторых, длины строк сравниваются, а более длинная строка считается большей.</span><span class="sxs-lookup"><span data-stu-id="c96b4-309">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="c96b4-310">В-третьих, если длины равны, используется обычное сравнение строк.</span><span class="sxs-lookup"><span data-stu-id="c96b4-310">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="c96b4-311"><xref:System.Collections.Generic.List%601> строк создается и заполняется именами из пяти динозавров хербивораус и тремя карнивораус динозаврами.</span><span class="sxs-lookup"><span data-stu-id="c96b4-311">A <xref:System.Collections.Generic.List%601> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</span></span> <span data-ttu-id="c96b4-312">В каждой из этих двух групп имена не имеют определенного порядка сортировки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-312">Within each of the two groups, the names are not in any particular sort order.</span></span> <span data-ttu-id="c96b4-313">Отобразится список, диапазон хербиворес будет отсортирован с помощью альтернативного компаратора, а список снова отобразится.</span><span class="sxs-lookup"><span data-stu-id="c96b4-313">The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</span></span>  
  
 <span data-ttu-id="c96b4-314">Затем перегрузка метода <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> используется для поиска только диапазона хербиворес для "Брачиосаурус".</span><span class="sxs-lookup"><span data-stu-id="c96b4-314">The <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search only the range of herbivores for "Brachiosaurus".</span></span> <span data-ttu-id="c96b4-315">Строка не найдена и побитовое дополнение (оператор ~ в C# и Visual C++, `Xor`-1 в Visual Basic) отрицательного числа, возвращенного методом <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29>, используется в качестве индекса для вставки новой строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-315">The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method is used as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparerRange#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparerRange#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparerRange#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparerRange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-316">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-316"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-317">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-317">-or-</span></span> 
 <span data-ttu-id="c96b4-318">Значение параметра <paramref name="count" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-318"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-319">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-319"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c96b4-320"><paramref name="comparer" /> имеет значение <see langword="null" />, а функция сравнения по умолчанию <see cref="P:System.Collections.Generic.Comparer`1.Default" /> не может найти реализацию универсального интерфейса <see cref="T:System.IComparable`1" /> или интерфейса <see cref="T:System.IComparable" /> для типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-320"><paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-321">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-321">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.Generic.List&lt;'T&gt;.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c96b4-322">Возвращает или задает общее число элементов, которые может вместить внутренняя структура данных без изменения размера.</span><span class="sxs-lookup"><span data-stu-id="c96b4-322">Gets or sets the total number of elements the internal data structure can hold without resizing.</span></span></summary>
        <value><span data-ttu-id="c96b4-323">Число элементов, которые может вместить коллекция <see cref="T:System.Collections.Generic.List`1" />, прежде чем потребуется изменить ее размер.</span><span class="sxs-lookup"><span data-stu-id="c96b4-323">The number of elements that the <see cref="T:System.Collections.Generic.List`1" /> can contain before resizing is required.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-324"><xref:System.Collections.Generic.List%601.Capacity%2A> — число элементов, которые могут храниться в <xref:System.Collections.Generic.List%601>, прежде чем потребуется изменить размер, в то время как <xref:System.Collections.Generic.List%601.Count%2A> — количество элементов, которые фактически находятся в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-324"><xref:System.Collections.Generic.List%601.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.List%601> can store before resizing is required, whereas <xref:System.Collections.Generic.List%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-325"><xref:System.Collections.Generic.List%601.Capacity%2A> всегда больше или равно <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-325"><xref:System.Collections.Generic.List%601.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.List%601.Count%2A>.</span></span> <span data-ttu-id="c96b4-326">Если <xref:System.Collections.Generic.List%601.Count%2A> превышает <xref:System.Collections.Generic.List%601.Capacity%2A> при добавлении элементов, емкость увеличивается путем автоматического перераспределения внутреннего массива перед копированием старых элементов и добавлением новых элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-326">If <xref:System.Collections.Generic.List%601.Count%2A> exceeds <xref:System.Collections.Generic.List%601.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="c96b4-327">Если емкость значительно больше, чем число, и требуется уменьшить объем памяти, используемой <xref:System.Collections.Generic.List%601>, можно уменьшить емкость, вызвав метод <xref:System.Collections.Generic.List%601.TrimExcess%2A> или явно задав для свойства <xref:System.Collections.Generic.List%601.Capacity%2A> более низкое значение.</span><span class="sxs-lookup"><span data-stu-id="c96b4-327">If the capacity is significantly larger than the count and you want to reduce the memory used by the <xref:System.Collections.Generic.List%601>,  you can  decrease capacity by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly to a lower value.</span></span> <span data-ttu-id="c96b4-328">Если значение <xref:System.Collections.Generic.List%601.Capacity%2A> задано явно, внутренний массив также перераспределяется в соответствии с заданной емкостью, и все элементы копируются.</span><span class="sxs-lookup"><span data-stu-id="c96b4-328">When the value of <xref:System.Collections.Generic.List%601.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity, and all the elements are copied.</span></span>  
  
 <span data-ttu-id="c96b4-329">Получение значения этого свойства является операцией O (1); Задание свойства является операцией O (*n*), где *n* — это новая емкость.</span><span class="sxs-lookup"><span data-stu-id="c96b4-329">Retrieving the value of this property is an O(1) operation; setting the property is an O(*n*) operation, where *n* is the new capacity.</span></span>  
  
   
   
## Examples  
 
 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="c96b4-330">В следующем примере показано, как проверить емкость и количество <xref:System.Collections.Generic.List%601>, которые содержат простой бизнес-объект, и демонстрирует использование метода <xref:System.Collections.Generic.List%601.TrimExcess%2A> для удаления дополнительной емкости.</span><span class="sxs-lookup"><span data-stu-id="c96b4-330">The following example demonstrates how to check the capacity and count of a <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="c96b4-331">В следующем примере показано свойство <xref:System.Collections.Generic.List%601.Capacity%2A> в нескольких точках жизненного цикла списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-331">The following example shows the <xref:System.Collections.Generic.List%601.Capacity%2A> property at several points in the life of a list.</span></span> <span data-ttu-id="c96b4-332">Конструктор без параметров используется для создания списка строк с емкостью 0, а свойство <xref:System.Collections.Generic.List%601.Capacity%2A> показывает это.</span><span class="sxs-lookup"><span data-stu-id="c96b4-332">The parameterless constructor is used to create a list of strings with a capacity of 0, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed to demonstrate this.</span></span> <span data-ttu-id="c96b4-333">После того как метод <xref:System.Collections.Generic.List%601.Add%2A> был использован для добавления нескольких элементов, элементы отображаются в списке, а затем свойство <xref:System.Collections.Generic.List%601.Capacity%2A> отображается снова вместе со свойством <xref:System.Collections.Generic.List%601.Count%2A>, чтобы показать, что емкость увеличилась по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="c96b4-333">After the <xref:System.Collections.Generic.List%601.Add%2A> method has been used to add several items, the items are listed, and then the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="c96b4-334">Свойство <xref:System.Collections.Generic.List%601.Capacity%2A> отображается снова после того, как будет использован метод <xref:System.Collections.Generic.List%601.TrimExcess%2A>, чтобы уменьшить емкость в соответствии с числом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-334">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again after the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count.</span></span> <span data-ttu-id="c96b4-335">Наконец, метод <xref:System.Collections.Generic.List%601.Clear%2A> используется для удаления всех элементов из списка, а свойства <xref:System.Collections.Generic.List%601.Capacity%2A> и <xref:System.Collections.Generic.List%601.Count%2A> снова отображаются.</span><span class="sxs-lookup"><span data-stu-id="c96b4-335">Finally, the <xref:System.Collections.Generic.List%601.Clear%2A> method is used to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed again.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-336">Для <see cref="P:System.Collections.Generic.List`1.Capacity" /> установлено значение, которое меньше <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-336"><see cref="P:System.Collections.Generic.List`1.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="c96b4-337">Не хватает памяти в системе.</span><span class="sxs-lookup"><span data-stu-id="c96b4-337">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="list.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c96b4-338">Удаляет из коллекции <see cref="T:System.Collections.Generic.List`1" /> все элементы.</span><span class="sxs-lookup"><span data-stu-id="c96b4-338">Removes all elements from the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-339"><xref:System.Collections.Generic.List%601.Count%2A> имеет значение 0, а ссылки на другие объекты из элементов коллекции также освобождаются.</span><span class="sxs-lookup"><span data-stu-id="c96b4-339"><xref:System.Collections.Generic.List%601.Count%2A> is set to 0, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="c96b4-340"><xref:System.Collections.Generic.List%601.Capacity%2A> не изменяется.</span><span class="sxs-lookup"><span data-stu-id="c96b4-340"><xref:System.Collections.Generic.List%601.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="c96b4-341">Чтобы сбросить емкость <xref:System.Collections.Generic.List%601>, вызовите метод <xref:System.Collections.Generic.List%601.TrimExcess%2A> или задайте свойство <xref:System.Collections.Generic.List%601.Capacity%2A> напрямую.</span><span class="sxs-lookup"><span data-stu-id="c96b4-341">To reset the capacity of the <xref:System.Collections.Generic.List%601>, call the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or set the <xref:System.Collections.Generic.List%601.Capacity%2A> property directly.</span></span> <span data-ttu-id="c96b4-342">Уменьшение емкости приводит к повторному выделению памяти и копированию всех элементов в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-342">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span> <span data-ttu-id="c96b4-343">Удаление пустой <xref:System.Collections.Generic.List%601> задает емкость объекта <xref:System.Collections.Generic.List%601> емкость по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-343">Trimming an empty <xref:System.Collections.Generic.List%601> sets the capacity of the <xref:System.Collections.Generic.List%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="c96b4-344">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-344">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note.md)]

 <span data-ttu-id="c96b4-345">В следующем примере демонстрируется метод <xref:System.Collections.Generic.List%601.Clear%2A> и различные другие свойства и методы <xref:System.Collections.Generic.List%601> универсального класса.</span><span class="sxs-lookup"><span data-stu-id="c96b4-345">The following example demonstrates the <xref:System.Collections.Generic.List%601.Clear%2A> method and various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="c96b4-346">Метод <xref:System.Collections.Generic.List%601.Clear%2A> используется в конце программы для удаления всех элементов из списка, после чего отображаются свойства <xref:System.Collections.Generic.List%601.Capacity%2A> и <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-346">The <xref:System.Collections.Generic.List%601.Clear%2A> method is used at the end of the program, to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are then displayed.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.TrimExcess" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="list.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-347">Объект для поиска в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-347">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-348">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-348">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="c96b4-349">Определяет, входит ли элемент в коллекцию <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-349">Determines whether an element is in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="c96b4-350">Значение <see langword="true" />, если параметр <paramref name="item" /> найден в коллекции <see cref="T:System.Collections.Generic.List`1" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-350"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.List`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-351">Этот метод определяет равенство с помощью компаратора проверки на равенство по умолчанию, как определено реализацией объекта метода <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> для `T` (тип значений в списке).</span><span class="sxs-lookup"><span data-stu-id="c96b4-351">This method determines equality by using the default equality comparer, as defined by the object's implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method for `T` (the type of values in the list).</span></span>  
  
 <span data-ttu-id="c96b4-352">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-352">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-353">В следующем примере демонстрируются методы <xref:System.Collections.Generic.List%601.Contains%2A> и <xref:System.Collections.Generic.List%601.Exists%2A> в <xref:System.Collections.Generic.List%601>, который содержит простой бизнес-объект, реализующий <xref:System.IEquatable%601.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-353">The following example demonstrates the <xref:System.Collections.Generic.List%601.Contains%2A> and <xref:System.Collections.Generic.List%601.Exists%2A> methods on a <xref:System.Collections.Generic.List%601> that contains a simple business object that implements <xref:System.IEquatable%601.Equals%2A>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="c96b4-354">В следующем примере содержится список сложных объектов типа `Cube`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-354">The following example contains a list of complex objects of type `Cube`.</span></span> <span data-ttu-id="c96b4-355">Класс `Cube` реализует метод <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType>, чтобы два куба считались равными, если их измерения одинаковы.</span><span class="sxs-lookup"><span data-stu-id="c96b4-355">The `Cube` class implements the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method so that two cubes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="c96b4-356">В этом примере метод <xref:System.Collections.Generic.List%601.Contains%2A> возвращает `true`, поскольку куб с указанными измерениями уже находится в коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-356">In this example, the <xref:System.Collections.Generic.List%601.Contains%2A> method returns `true`, because a cube that has the specified dimensions is already in the collection.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.contains/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.contains/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-357">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-357">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertAll&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;TOutput&gt; ConvertAll&lt;TOutput&gt; (Converter&lt;T,TOutput&gt; converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!!TOutput&gt; ConvertAll&lt;TOutput&gt;(class System.Converter`2&lt;!T, !!TOutput&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertAll(Of TOutput) (converter As Converter(Of T, TOutput)) As List(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA; System::Collections::Generic::List&lt;TOutput&gt; ^ ConvertAll(Converter&lt;T, TOutput&gt; ^ converter);" />
      <MemberSignature Language="F#" Value="member this.ConvertAll : Converter&lt;'T, 'Output&gt; -&gt; System.Collections.Generic.List&lt;'Output&gt;" Usage="list.ConvertAll converter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="converter" Type="System.Converter&lt;T,TOutput&gt;" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="c96b4-358">Тип элементов массива назначения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-358">The type of the elements of the target array.</span></span></typeparam>
        <param name="converter"><span data-ttu-id="c96b4-359">Делегат <see cref="T:System.Converter`2" />, преобразующий каждый элемент из одного типа в другой.</span><span class="sxs-lookup"><span data-stu-id="c96b4-359">A <see cref="T:System.Converter`2" /> delegate that converts each element from one type to another type.</span></span></param>
        <summary><span data-ttu-id="c96b4-360">Преобразует элементы текущего списка <see cref="T:System.Collections.Generic.List`1" /> в другой тип и возвращает список преобразованных элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-360">Converts the elements in the current <see cref="T:System.Collections.Generic.List`1" /> to another type, and returns a list containing the converted elements.</span></span></summary>
        <returns><span data-ttu-id="c96b4-361">Список <see cref="T:System.Collections.Generic.List`1" /> с элементами конечного типа, преобразованными из текущего списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-361">A <see cref="T:System.Collections.Generic.List`1" /> of the target type containing the converted elements from the current <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-362"><xref:System.Converter%602> является делегатом для метода, который преобразует объект в целевой тип.</span><span class="sxs-lookup"><span data-stu-id="c96b4-362">The <xref:System.Converter%602> is a delegate to a method that converts an object to the target type.</span></span>  <span data-ttu-id="c96b4-363">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются <xref:System.Converter%602> делегату, а преобразованные элементы сохраняются в новом <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-363">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Converter%602> delegate, and the converted elements are saved in the new <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-364">Текущий <xref:System.Collections.Generic.List%601> остается неизменным.</span><span class="sxs-lookup"><span data-stu-id="c96b4-364">The current <xref:System.Collections.Generic.List%601> remains unchanged.</span></span>  
  
 <span data-ttu-id="c96b4-365">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-365">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-366">В следующем примере определяется метод с именем `PointFToPoint`, который преобразует структуру <xref:System.Drawing.PointF> в структуру <xref:System.Drawing.Point>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-366">The following example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="c96b4-367">Затем в примере создается <xref:System.Collections.Generic.List%601> структур <xref:System.Drawing.PointF>, создается `Converter\<PointF, Point>` делегат (`Converter(Of PointF, Point)` в Visual Basic) для представления метода `PointFToPoint` и передает делегат в метод <xref:System.Collections.Generic.List%601.ConvertAll%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-367">The example then creates a <xref:System.Collections.Generic.List%601> of <xref:System.Drawing.PointF> structures, creates a `Converter\<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Collections.Generic.List%601.ConvertAll%2A> method.</span></span> <span data-ttu-id="c96b4-368">Метод <xref:System.Collections.Generic.List%601.ConvertAll%2A> передает каждый элемент входного списка методу `PointFToPoint` и помещает преобразованные элементы в новый список структур <xref:System.Drawing.Point>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-368">The <xref:System.Collections.Generic.List%601.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="c96b4-369">Отобразятся оба списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-369">Both lists are displayed.</span></span>  
  
 [!code-cpp[List\`1_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[List\`1_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_ConvertAll/cs/source.cs#1)]
 [!code-vb[List\`1_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-370"><paramref name="converter" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-370"><paramref name="converter" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Converter`2" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c96b4-371">Копирует список <see cref="T:System.Collections.Generic.List`1" /> или его часть в массив.</span><span class="sxs-lookup"><span data-stu-id="c96b4-371">Copies the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it to an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] -&gt; unit" Usage="list.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c96b4-372">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-372">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-373">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span><span class="sxs-lookup"><span data-stu-id="c96b4-373">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <summary><span data-ttu-id="c96b4-374">Копирует весь список <see cref="T:System.Collections.Generic.List`1" /> в совместимый одномерный массив, начиная с первого элемента целевого массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-374">Copies the entire <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the beginning of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-375">Этот метод использует <xref:System.Array.Copy%2A?displayProperty=nameWithType> для копирования элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-375">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="c96b4-376">Элементы копируются в <xref:System.Array> в том же порядке, в котором перечислитель проходит по <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-376">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-377">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-377">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-378">В следующем примере показаны все три перегрузки метода <xref:System.Collections.Generic.List%601.CopyTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-378">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="c96b4-379">Создается <xref:System.Collections.Generic.List%601> строк и заполняется 5 строками.</span><span class="sxs-lookup"><span data-stu-id="c96b4-379">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="c96b4-380">Создается пустой массив строк из 15 элементов, а перегрузка метода <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> используется для копирования всех элементов списка в массив, начиная с первого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-380">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="c96b4-381">Перегрузка метода <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> используется для копирования всех элементов списка в массив, начиная с индекса массива 6 (при этом индекс 5 пуст).</span><span class="sxs-lookup"><span data-stu-id="c96b4-381">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="c96b4-382">Наконец, перегрузка метода <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> используется для копирования 3 элементов из списка, начиная с индекса 2, к массиву, начиная с индекса Array 12 (при этом индекс 11 пуст).</span><span class="sxs-lookup"><span data-stu-id="c96b4-382">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="c96b4-383">Затем отображается содержимое массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-383">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-384"><paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-384"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-385">Число элементов в исходном массиве <see cref="T:System.Collections.Generic.List`1" /> больше числа элементов, которые может содержать массив назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-385">The number of elements in the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="list.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c96b4-386">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-386">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-387">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span><span class="sxs-lookup"><span data-stu-id="c96b4-387">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="c96b4-388">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="c96b4-388">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="c96b4-389">Копирует <see cref="T:System.Collections.Generic.List`1" /> целиком в совместимый одномерный массив, начиная с указанного индекса конечного массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-389">Copies the entire <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-390">Этот метод использует <xref:System.Array.Copy%2A?displayProperty=nameWithType> для копирования элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-390">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="c96b4-391">Элементы копируются в <xref:System.Array> в том же порядке, в котором перечислитель проходит по <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-391">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-392">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-392">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-393">В следующем примере показаны все три перегрузки метода <xref:System.Collections.Generic.List%601.CopyTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-393">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="c96b4-394">Создается <xref:System.Collections.Generic.List%601> строк и заполняется 5 строками.</span><span class="sxs-lookup"><span data-stu-id="c96b4-394">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="c96b4-395">Создается пустой массив строк из 15 элементов, а перегрузка метода <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> используется для копирования всех элементов списка в массив, начиная с первого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-395">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="c96b4-396">Перегрузка метода <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> используется для копирования всех элементов списка в массив, начиная с индекса массива 6 (при этом индекс 5 пуст).</span><span class="sxs-lookup"><span data-stu-id="c96b4-396">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="c96b4-397">Наконец, перегрузка метода <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> используется для копирования 3 элементов из списка, начиная с индекса 2, к массиву, начиная с индекса Array 12 (при этом индекс 11 пуст).</span><span class="sxs-lookup"><span data-stu-id="c96b4-397">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="c96b4-398">Затем отображается содержимое массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-398">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-399"><paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-399"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-400">Значение параметра <paramref name="arrayIndex" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-400"><paramref name="arrayIndex" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-401">Число элементов в исходной коллекции <see cref="T:System.Collections.Generic.List`1" /> больше доступного места от положения, заданного значением параметра <paramref name="arrayIndex" />, до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-401">The number of elements in the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int index, T[] array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 index, !T[] array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (index As Integer, array As T(), arrayIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int index, cli::array &lt;T&gt; ^ array, int arrayIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * 'T[] * int * int -&gt; unit" Usage="list.CopyTo (index, array, arrayIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c96b4-402">Отсчитываемый от нуля индекс исходного списка <see cref="T:System.Collections.Generic.List`1" />, с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="c96b4-402">The zero-based index in the source <see cref="T:System.Collections.Generic.List`1" /> at which copying begins.</span></span></param>
        <param name="array"><span data-ttu-id="c96b4-403">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-403">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-404">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span><span class="sxs-lookup"><span data-stu-id="c96b4-404">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="c96b4-405">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="c96b4-405">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <param name="count"><span data-ttu-id="c96b4-406">Число элементов для копирования.</span><span class="sxs-lookup"><span data-stu-id="c96b4-406">The number of elements to copy.</span></span></param>
        <summary><span data-ttu-id="c96b4-407">Копирует диапазон элементов из списка <see cref="T:System.Collections.Generic.List`1" /> в совместимый одномерный массив, начиная с указанного индекса конечного массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-407">Copies a range of elements from the <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-408">Этот метод использует <xref:System.Array.Copy%2A?displayProperty=nameWithType> для копирования элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-408">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="c96b4-409">Элементы копируются в <xref:System.Array> в том же порядке, в котором перечислитель проходит по <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-409">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-410">Этот метод является операцией O (*n*), где *n* — `count`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-410">This method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-411">В следующем примере показаны все три перегрузки метода <xref:System.Collections.Generic.List%601.CopyTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-411">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="c96b4-412">Создается <xref:System.Collections.Generic.List%601> строк и заполняется 5 строками.</span><span class="sxs-lookup"><span data-stu-id="c96b4-412">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="c96b4-413">Создается пустой массив строк из 15 элементов, а перегрузка метода <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> используется для копирования всех элементов списка в массив, начиная с первого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-413">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="c96b4-414">Перегрузка метода <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> используется для копирования всех элементов списка в массив, начиная с индекса массива 6 (при этом индекс 5 пуст).</span><span class="sxs-lookup"><span data-stu-id="c96b4-414">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="c96b4-415">Наконец, перегрузка метода <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> используется для копирования 3 элементов из списка, начиная с индекса 2, к массиву, начиная с индекса Array 12 (при этом индекс 11 пуст).</span><span class="sxs-lookup"><span data-stu-id="c96b4-415">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="c96b4-416">Затем отображается содержимое массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-416">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-417"><paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-417"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-418">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-418"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-419">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-419">-or-</span></span> 
 <span data-ttu-id="c96b4-420">Значение параметра <paramref name="arrayIndex" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-420"><paramref name="arrayIndex" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-421">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-421">-or-</span></span> 
 <span data-ttu-id="c96b4-422">Значение параметра <paramref name="count" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-422"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-423">Значение параметра <paramref name="index" /> больше или равно значению <see cref="P:System.Collections.Generic.List`1.Count" /> исходного списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-423"><paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.Generic.List`1.Count" /> of the source <see cref="T:System.Collections.Generic.List`1" />.</span></span>  
  
<span data-ttu-id="c96b4-424">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-424">-or-</span></span> 
<span data-ttu-id="c96b4-425">Число элементов от <paramref name="index" /> до конца исходного списка <see cref="T:System.Collections.Generic.List`1" /> больше доступного места от положения, заданного значением параметра <paramref name="arrayIndex" />, до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-425">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.List&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c96b4-426">Получает число элементов, содержащихся в интерфейсе <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-426">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <value><span data-ttu-id="c96b4-427">Число элементов, содержащихся в интерфейсе <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-427">The number of elements contained in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-428"><xref:System.Collections.Generic.List%601.Capacity%2A> — число элементов, которые могут храниться в <xref:System.Collections.Generic.List%601>, прежде чем потребуется изменить размер.</span><span class="sxs-lookup"><span data-stu-id="c96b4-428"><xref:System.Collections.Generic.List%601.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.List%601> can store before resizing is required.</span></span> <span data-ttu-id="c96b4-429"><xref:System.Collections.Generic.List%601.Count%2A> — количество элементов, которые фактически находятся в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-429"><xref:System.Collections.Generic.List%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-430"><xref:System.Collections.Generic.List%601.Capacity%2A> всегда больше или равно <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-430"><xref:System.Collections.Generic.List%601.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.List%601.Count%2A>.</span></span> <span data-ttu-id="c96b4-431">Если <xref:System.Collections.Generic.List%601.Count%2A> превышает <xref:System.Collections.Generic.List%601.Capacity%2A> при добавлении элементов, емкость увеличивается путем автоматического перераспределения внутреннего массива перед копированием старых элементов и добавлением новых элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-431">If <xref:System.Collections.Generic.List%601.Count%2A> exceeds <xref:System.Collections.Generic.List%601.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="c96b4-432">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-432">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="c96b4-433">В следующем примере показано, как проверить емкость и количество <xref:System.Collections.Generic.List%601>, которые содержат простой бизнес-объект, и демонстрирует использование метода <xref:System.Collections.Generic.List%601.TrimExcess%2A> для удаления дополнительной емкости.</span><span class="sxs-lookup"><span data-stu-id="c96b4-433">The following example demonstrates how to check the capacity and count of a  <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="c96b4-434">В следующем примере показано значение свойства <xref:System.Collections.Generic.List%601.Count%2A> в различных точках жизненного цикла списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-434">The following example shows the value of the <xref:System.Collections.Generic.List%601.Count%2A> property at various points in the life of a list.</span></span> <span data-ttu-id="c96b4-435">После создания и заполнения списка и отображения его элементов отображаются свойства <xref:System.Collections.Generic.List%601.Capacity%2A> и <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-435">After the list has been created and populated and its elements displayed, the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="c96b4-436">Эти свойства отображаются снова после вызова метода <xref:System.Collections.Generic.List%601.TrimExcess%2A> и снова после очистки содержимого списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-436">These properties are displayed again after the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method has been called, and again after the contents of the list are cleared.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.Exists : Predicate&lt;'T&gt; -&gt; bool" Usage="list.Exists match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="c96b4-437">Делегат <see cref="T:System.Predicate`1" />, определяющий условия поиска элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-437">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to search for.</span></span></param>
        <summary><span data-ttu-id="c96b4-438">Определяет, содержит ли <see cref="T:System.Collections.Generic.List`1" /> элементы, удовлетворяющие условиям указанного предиката.</span><span class="sxs-lookup"><span data-stu-id="c96b4-438">Determines whether the <see cref="T:System.Collections.Generic.List`1" /> contains elements that match the conditions defined by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="c96b4-439"><see langword="true" />, если <see cref="T:System.Collections.Generic.List`1" /> содержит один или несколько элементов, удовлетворяющих условиям указанного предиката, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-439"><see langword="true" /> if the <see cref="T:System.Collections.Generic.List`1" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-440"><xref:System.Predicate%601> является делегатом для метода, который возвращает `true`, если переданный ему объект соответствует условиям, определенным в делегате.</span><span class="sxs-lookup"><span data-stu-id="c96b4-440">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="c96b4-441">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются делегату <xref:System.Predicate%601>, а обработка останавливается при обнаружении совпадения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-441">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="c96b4-442">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-442">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-443">В следующем примере демонстрируются методы <xref:System.Collections.Generic.List%601.Contains%2A> и <xref:System.Collections.Generic.List%601.Exists%2A> в <xref:System.Collections.Generic.List%601>, который содержит простой бизнес-объект, реализующий <xref:System.IEquatable%601.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-443">The following example demonstrates the <xref:System.Collections.Generic.List%601.Contains%2A> and <xref:System.Collections.Generic.List%601.Exists%2A> methods on a <xref:System.Collections.Generic.List%601> that contains a simple business object that implements <xref:System.IEquatable%601.Equals%2A>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="c96b4-444">В следующем примере демонстрируется метод <xref:System.Collections.Generic.List%601.Exists%2A> и несколько других методов, использующих универсальный делегат <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-444">The following example demonstrates the <xref:System.Collections.Generic.List%601.Exists%2A> method and several other methods that use the <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="c96b4-445">Создается <xref:System.Collections.Generic.List%601> строк, содержащая 8 названий динозавров, два из которых (в позициях 1 и 5) заканчиваются на "саурус".</span><span class="sxs-lookup"><span data-stu-id="c96b4-445">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="c96b4-446">В примере также определяется метод предиката поиска с именем `EndsWithSaurus`, который принимает строковый параметр и возвращает логическое значение, указывающее, заканчивается ли входная строка в "саурус".</span><span class="sxs-lookup"><span data-stu-id="c96b4-446">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="c96b4-447">Методы <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>и <xref:System.Collections.Generic.List%601.FindAll%2A> используются для поиска в списке с помощью метода предиката Search, а затем метод <xref:System.Collections.Generic.List%601.RemoveAll%2A> используется для удаления всех записей, оканчивающихся на "саурус".</span><span class="sxs-lookup"><span data-stu-id="c96b4-447">The <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, and <xref:System.Collections.Generic.List%601.FindAll%2A> methods are used to search the list with the search predicate method, and then the <xref:System.Collections.Generic.List%601.RemoveAll%2A> method is used to remove all entries ending with "saurus".</span></span>  
  
 <span data-ttu-id="c96b4-448">Наконец, вызывается метод <xref:System.Collections.Generic.List%601.Exists%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-448">Finally, the <xref:System.Collections.Generic.List%601.Exists%2A> method is called.</span></span> <span data-ttu-id="c96b4-449">Он проходит по списку с самого начала, передавая каждый элемент в свою очередь на `EndsWithSaurus` метод.</span><span class="sxs-lookup"><span data-stu-id="c96b4-449">It traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="c96b4-450">Поиск останавливается, а метод возвращает `true`, если метод `EndsWithSaurus` возвращает `true` для любого элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-450">The search stops and the method returns `true` if the `EndsWithSaurus` method returns `true` for any element.</span></span> <span data-ttu-id="c96b4-451">Метод <xref:System.Collections.Generic.List%601.Exists%2A> возвращает `false`, так как все такие элементы были удалены.</span><span class="sxs-lookup"><span data-stu-id="c96b4-451">The <xref:System.Collections.Generic.List%601.Exists%2A> method returns `false` because all such elements have been removed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c96b4-452">В C# и Visual Basic нет необходимости явно создавать делегат `Predicate<string>` (`Predicate(Of String)` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c96b4-452">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="c96b4-453">Эти языки выводят правильный делегат из контекста и создают его автоматически.</span><span class="sxs-lookup"><span data-stu-id="c96b4-453">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-454"><paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-454"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public T Find (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Find(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Find(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.Find : Predicate&lt;'T&gt; -&gt; 'T" Usage="list.Find match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="c96b4-455">Делегат <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-455">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="c96b4-456">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает первое найденное вхождение в пределах всего списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-456">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="c96b4-457">Первый элемент, удовлетворяющий условиям указанного предиката, если такой элемент найден; в противном случае — значение по умолчанию для типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-457">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-458"><xref:System.Predicate%601> является делегатом для метода, который возвращает `true`, если переданный ему объект соответствует условиям, определенным в делегате.</span><span class="sxs-lookup"><span data-stu-id="c96b4-458">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="c96b4-459">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются <xref:System.Predicate%601> делегату, перемещаясь вперед в <xref:System.Collections.Generic.List%601>, начиная с первого элемента и заканчивая последним элементом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-459">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, moving forward in the <xref:System.Collections.Generic.List%601>, starting with the first element and ending with the last element.</span></span>  <span data-ttu-id="c96b4-460">Обработка останавливается при обнаружении соответствия.</span><span class="sxs-lookup"><span data-stu-id="c96b4-460">Processing is stopped when a match is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c96b4-461">При поиске в списке типов значений убедитесь, что значение по умолчанию для типа не соответствует предикату поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-461">When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</span></span> <span data-ttu-id="c96b4-462">В противном случае невозможно отличить значение по умолчанию, указывающее, что совпадений не найдено, и элемент списка, который имеет значение по умолчанию для типа.</span><span class="sxs-lookup"><span data-stu-id="c96b4-462">Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</span></span> <span data-ttu-id="c96b4-463">Если значение по умолчанию удовлетворяет предикату поиска, используйте вместо него метод <xref:System.Collections.Generic.List%601.FindIndex%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-463">If the default value satisfies the search predicate, use the <xref:System.Collections.Generic.List%601.FindIndex%2A> method instead.</span></span>  
  
 <span data-ttu-id="c96b4-464">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-464">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-465">В следующем примере демонстрируется метод <xref:System.Collections.Generic.List%601.Find%2A> для <xref:System.Collections.Generic.List%601>, содержащего простой сложный объект.</span><span class="sxs-lookup"><span data-stu-id="c96b4-465">The following example demonstrates the <xref:System.Collections.Generic.List%601.Find%2A> method on a <xref:System.Collections.Generic.List%601> that contains a simple complex object.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="c96b4-466">В следующем примере показаны методы Find для класса <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-466">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="c96b4-467">В примере для класса <xref:System.Collections.Generic.List%601> содержатся объекты `book` класса `Book`с использованием данных из [примера XML-файла: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="c96b4-467">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="c96b4-468">Метод `FillList` в примере использует [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) для анализа значений из XML в значения свойств объектов `book`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-468">The `FillList` method in the example uses [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="c96b4-469">В следующей таблице описаны примеры, приведенные для методов Find.</span><span class="sxs-lookup"><span data-stu-id="c96b4-469">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="c96b4-470">Метод</span><span class="sxs-lookup"><span data-stu-id="c96b4-470">Method</span></span>|<span data-ttu-id="c96b4-471">Пример</span><span class="sxs-lookup"><span data-stu-id="c96b4-471">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-472">Находит книгу по ИДЕНТИФИКАТОРу, используя делегат предиката `IDToFind`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-472">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="c96b4-473">C#в примере используется анонимный делегат.</span><span class="sxs-lookup"><span data-stu-id="c96b4-473">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-474">Найти все книги, для которых свойство `Genre` имеет значение "Computer" с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-474">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-475">Находит последнюю книгу в коллекции с датой публикации до 2001, используя делегат предиката `PubBefore2001`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-475">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="c96b4-476">C#в примере используется анонимный делегат.</span><span class="sxs-lookup"><span data-stu-id="c96b4-476">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-477">Находит индекс первой компьютерной книги с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-477">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-478">Находит индекс последней компьютерной книги с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-478">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-479">Находит индекс первой компьютерной книги во второй половине коллекции, используя делегат предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-479">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-480">Находит индекс последней компьютерной книги во второй половине коллекции, используя делегат предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-480">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-481"><paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-481"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; FindAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!T&gt; FindAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll (match As Predicate(Of T)) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt; ^ FindAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindAll : Predicate&lt;'T&gt; -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="list.FindAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="c96b4-482">Делегат <see cref="T:System.Predicate`1" />, определяющий условия поиска элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-482">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to search for.</span></span></param>
        <summary><span data-ttu-id="c96b4-483">Извлекает все элементы, удовлетворяющие условиям указанного предиката.</span><span class="sxs-lookup"><span data-stu-id="c96b4-483">Retrieves all the elements that match the conditions defined by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="c96b4-484">Список <see cref="T:System.Collections.Generic.List`1" />, содержащий все элементы, удовлетворяющие условиям указанного предиката, если такие элементы найдены; в противном случае — пустой список <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-484">A <see cref="T:System.Collections.Generic.List`1" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-485"><xref:System.Predicate%601> является делегатом для метода, который возвращает `true`, если переданный ему объект соответствует условиям, определенным в делегате.</span><span class="sxs-lookup"><span data-stu-id="c96b4-485">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="c96b4-486">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются <xref:System.Predicate%601> делегату, а элементы, соответствующие условиям, сохраняются в возвращаемом <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-486">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and the elements that match the conditions are saved in the returned <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-487">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-487">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-488">В следующем примере показаны методы Find для класса <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-488">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="c96b4-489">В примере для класса <xref:System.Collections.Generic.List%601> содержатся объекты `book` класса `Book`с использованием данных из [примера XML-файла: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="c96b4-489">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="c96b4-490">Метод `FillList` в примере использует [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) для анализа значений из XML в значения свойств объектов `book`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-490">The `FillList` method in the example uses [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="c96b4-491">В следующей таблице описаны примеры, приведенные для методов Find.</span><span class="sxs-lookup"><span data-stu-id="c96b4-491">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="c96b4-492">Метод</span><span class="sxs-lookup"><span data-stu-id="c96b4-492">Method</span></span>|<span data-ttu-id="c96b4-493">Пример</span><span class="sxs-lookup"><span data-stu-id="c96b4-493">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-494">Находит книгу по ИДЕНТИФИКАТОРу, используя делегат предиката `IDToFind`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-494">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="c96b4-495">C#в примере используется анонимный делегат.</span><span class="sxs-lookup"><span data-stu-id="c96b4-495">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-496">Найти все книги, для которых свойство `Genre` имеет значение "Computer" с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-496">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-497">Находит последнюю книгу в коллекции с датой публикации до 2001, используя делегат предиката `PubBefore2001`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-497">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="c96b4-498">C#в примере используется анонимный делегат.</span><span class="sxs-lookup"><span data-stu-id="c96b4-498">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-499">Находит индекс первой компьютерной книги с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-499">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-500">Находит индекс последней компьютерной книги с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-500">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-501">Находит индекс первой компьютерной книги во второй половине коллекции, используя делегат предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-501">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-502">Находит индекс последней компьютерной книги во второй половине коллекции, используя делегат предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-502">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-503"><paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-503"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindIndex">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c96b4-504">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс первого найденного вхождения в пределах всего списка <see cref="T:System.Collections.Generic.List`1" /> или его части.</span><span class="sxs-lookup"><span data-stu-id="c96b4-504">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span></span> <span data-ttu-id="c96b4-505">Этот метод возвращает значение -1, если соответствующий условию элемент не найден.</span><span class="sxs-lookup"><span data-stu-id="c96b4-505">This method returns -1 if an item that matches the conditions is not found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="c96b4-506">Делегат <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-506">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="c96b4-507">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс первого найденного вхождения в пределах всего списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-507">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="c96b4-508">Отсчитываемый от нуля индекс первого вхождения элемента, отвечающего условиям предиката <paramref name="match" />, если такой элемент найден. В противном случае значение –1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-508">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-509">Поиск <xref:System.Collections.Generic.List%601> выполняется в прямом направлении, начиная с первого элемента и заканчивая последним элементом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-509">The <xref:System.Collections.Generic.List%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="c96b4-510"><xref:System.Predicate%601> является делегатом для метода, который возвращает `true`, если переданный ему объект соответствует условиям, определенным в делегате.</span><span class="sxs-lookup"><span data-stu-id="c96b4-510">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="c96b4-511">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются в делегат <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-511">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="c96b4-512">Делегат имеет сигнатуру:</span><span class="sxs-lookup"><span data-stu-id="c96b4-512">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="c96b4-513">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-513">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-514">В следующем примере определяется класс `Employee` с двумя полями: `Name` и `Id`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-514">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="c96b4-515">Он также определяет класс `EmployeeSearch` с помощью одного метода `StartsWith`, который указывает, начинается ли поле `Employee.Name` с указанной подстроки, которая предоставляется конструктору класса `EmployeeSearch`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-515">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="c96b4-516">Обратите внимание на сигнатуру этого метода</span><span class="sxs-lookup"><span data-stu-id="c96b4-516">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="c96b4-517">соответствует сигнатуре делегата, который может быть передан методу <xref:System.Collections.Generic.List%601.FindIndex%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-517">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="c96b4-518">В примере создается объект `List<Employee>`, к нему добавляется несколько `Employee` объектов, а затем метод <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> вызывается дважды для поиска по всей коллекции, первый раз для первого объекта `Employee`, поле `Name` которого начинается с "J", и второе время для первого объекта `Employee`, поле `Name` которого начинается с "жу".</span><span class="sxs-lookup"><span data-stu-id="c96b4-518">The example instantiates a `List<Employee>` object, adds a number of `Employee` objects to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice to search the entire collection, the first time for the first `Employee` object whose `Name` field begins with "J", and the second time for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex2.cs#2)]
 [!code-vb[System.Collections.Generic.List.FindIndex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-519"><paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-519"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex (startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="c96b4-520">Индекс (с нуля) начальной позиции поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-520">The zero-based starting index of the search.</span></span></param>
        <param name="match"><span data-ttu-id="c96b4-521">Делегат <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-521">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="c96b4-522">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс первого вхождения в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" />, начиная с заданного индекса и заканчивая последним элементом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-522">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="c96b4-523">Отсчитываемый от нуля индекс первого вхождения элемента, отвечающего условиям предиката <paramref name="match" />, если такой элемент найден. В противном случае значение –1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-523">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-524"><xref:System.Collections.Generic.List%601> ищется в прямом направлении, начиная с `startIndex` и заканчивая последним элементом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-524">The <xref:System.Collections.Generic.List%601> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="c96b4-525"><xref:System.Predicate%601> является делегатом для метода, который возвращает `true`, если переданный ему объект соответствует условиям, определенным в делегате.</span><span class="sxs-lookup"><span data-stu-id="c96b4-525">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="c96b4-526">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются в делегат <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-526">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="c96b4-527">Делегат имеет сигнатуру:</span><span class="sxs-lookup"><span data-stu-id="c96b4-527">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="c96b4-528">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — число элементов от `startIndex` до конца <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-528">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from `startIndex` to the end of the <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-529">В следующем примере определяется класс `Employee` с двумя полями: `Name` и `Id`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-529">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="c96b4-530">Он также определяет класс `EmployeeSearch` с помощью одного метода `StartsWith`, который указывает, начинается ли поле `Employee.Name` с указанной подстроки, которая предоставляется конструктору класса `EmployeeSearch`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-530">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="c96b4-531">Обратите внимание на сигнатуру этого метода</span><span class="sxs-lookup"><span data-stu-id="c96b4-531">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="c96b4-532">соответствует сигнатуре делегата, который может быть передан методу <xref:System.Collections.Generic.List%601.FindIndex%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-532">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="c96b4-533">В примере создается объект `List<Employee>`, добавляется к нему несколько `Employee` объектов, а затем метод <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> дважды вызывается для поиска в коллекции, начиная с пятого элемента (то есть элемента в индексе 4).</span><span class="sxs-lookup"><span data-stu-id="c96b4-533">The example instantiates a `List<Employee>` object, adds a number of `Employee` objects to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice to search the collection starting with its fifth member (that is, the member at index 4).</span></span> <span data-ttu-id="c96b4-534">В первый раз он ищет первый объект `Employee`, поле `Name` которого начинается с "J"; второй раз выполняется поиск первого объекта `Employee`, `Name` поле которого начинается с "жу".</span><span class="sxs-lookup"><span data-stu-id="c96b4-534">The first time, it searches for the first `Employee` object whose `Name` field begins with "J"; the second time, it searches for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex3.cs#3)]
 [!code-vb[System.Collections.Generic.List.FindIndex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-535"><paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-535"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-536"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-536"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : int * int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex (startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="c96b4-537">Индекс (с нуля) начальной позиции поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-537">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="c96b4-538">Число элементов в диапазоне, в котором выполняется поиск.</span><span class="sxs-lookup"><span data-stu-id="c96b4-538">The number of elements in the section to search.</span></span></param>
        <param name="match"><span data-ttu-id="c96b4-539">Делегат <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-539">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="c96b4-540">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс первого вхождения в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" />, начинающемся с заданного индекса и содержащем указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-540">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="c96b4-541">Отсчитываемый от нуля индекс первого вхождения элемента, отвечающего условиям предиката <paramref name="match" />, если такой элемент найден. В противном случае значение –1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-541">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-542"><xref:System.Collections.Generic.List%601> ищется в прямом направлении, начиная с `startIndex` и заканчивая на `startIndex` Plus `count` минус 1, если `count` больше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-542">The <xref:System.Collections.Generic.List%601> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="c96b4-543"><xref:System.Predicate%601> является делегатом для метода, который возвращает `true`, если переданный ему объект соответствует условиям, определенным в делегате.</span><span class="sxs-lookup"><span data-stu-id="c96b4-543">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="c96b4-544">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются в делегат <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-544">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="c96b4-545">Делегат имеет сигнатуру:</span><span class="sxs-lookup"><span data-stu-id="c96b4-545">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="c96b4-546">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — `count`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-546">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-547">В следующем примере определяется класс `Employee` с двумя полями: `Name` и `Id`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-547">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="c96b4-548">Он также определяет класс `EmployeeSearch` с помощью одного метода `StartsWith`, который указывает, начинается ли поле `Employee.Name` с указанной подстроки, которая предоставляется конструктору класса `EmployeeSearch`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-548">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="c96b4-549">Обратите внимание на сигнатуру этого метода</span><span class="sxs-lookup"><span data-stu-id="c96b4-549">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="c96b4-550">соответствует сигнатуре делегата, который может быть передан методу <xref:System.Collections.Generic.List%601.FindIndex%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-550">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="c96b4-551">В примере создается экземпляр объекта `List<Employee>`, в него добавляется несколько `Employee`ных объектов, а затем вызывается метод <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> дважды для поиска в целой коллекции (то есть элементы от индекса 0 до индекса <xref:System.Collections.Generic.List%601.Count%2A>-1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-551">The example instantiates a `List<Employee>` object, adds a number of `Employee` objects to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice to search the entire collection (that is, the members from index 0 to index <xref:System.Collections.Generic.List%601.Count%2A> - 1).</span></span> <span data-ttu-id="c96b4-552">В первый раз он ищет первый объект `Employee`, поле `Name` которого начинается с "J"; второй раз выполняется поиск первого объекта `Employee`, `Name` поле которого начинается с "жу".</span><span class="sxs-lookup"><span data-stu-id="c96b4-552">The first time, it searches for the first `Employee` object whose `Name` field begins with "J"; the second time, it searches for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex1.cs#1)]
 [!code-vb[System.Collections.Generic.List.FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-553"><paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-553"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-554"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-554"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span>  
  
<span data-ttu-id="c96b4-555">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-555">-or-</span></span> 
 <span data-ttu-id="c96b4-556">Значение параметра <paramref name="count" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-556"><paramref name="count" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-557">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-557">-or-</span></span> 
 <span data-ttu-id="c96b4-558"><paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-558"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLast">
      <MemberSignature Language="C#" Value="public T FindLast (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T FindLast(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLast (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T FindLast(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLast : Predicate&lt;'T&gt; -&gt; 'T" Usage="list.FindLast match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="c96b4-559">Делегат <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-559">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="c96b4-560">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает последнее найденное вхождение в пределах всего списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-560">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="c96b4-561">Последний элемент, удовлетворяющий условиям указанного предиката, если такой элемент найден; в противном случае — значение по умолчанию для типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-561">The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-562"><xref:System.Predicate%601> является делегатом для метода, который возвращает `true`, если переданный ему объект соответствует условиям, определенным в делегате.</span><span class="sxs-lookup"><span data-stu-id="c96b4-562">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="c96b4-563">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются <xref:System.Predicate%601> делегату, перемещаясь назад в <xref:System.Collections.Generic.List%601>, начиная с последнего элемента и заканчивая первым.</span><span class="sxs-lookup"><span data-stu-id="c96b4-563">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, moving backward in the <xref:System.Collections.Generic.List%601>, starting with the last element and ending with the first element.</span></span>  <span data-ttu-id="c96b4-564">Обработка останавливается при обнаружении соответствия.</span><span class="sxs-lookup"><span data-stu-id="c96b4-564">Processing is stopped when a match is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c96b4-565">При поиске в списке типов значений убедитесь, что значение по умолчанию для типа не соответствует предикату поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-565">When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</span></span> <span data-ttu-id="c96b4-566">В противном случае невозможно отличить значение по умолчанию, указывающее, что совпадений не найдено, и элемент списка, который имеет значение по умолчанию для типа.</span><span class="sxs-lookup"><span data-stu-id="c96b4-566">Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</span></span> <span data-ttu-id="c96b4-567">Если значение по умолчанию удовлетворяет предикату поиска, используйте вместо него метод <xref:System.Collections.Generic.List%601.FindLastIndex%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-567">If the default value satisfies the search predicate, use the <xref:System.Collections.Generic.List%601.FindLastIndex%2A> method instead.</span></span>  
  
 <span data-ttu-id="c96b4-568">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-568">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-569">В следующем примере показаны методы Find для класса <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-569">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="c96b4-570">В примере для класса <xref:System.Collections.Generic.List%601> содержатся объекты `book` класса `Book`с использованием данных из [примера XML-файла: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="c96b4-570">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="c96b4-571">Метод `FillList` в примере использует [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) для анализа значений из XML в значения свойств объектов `book`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-571">The `FillList` method in the example uses [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="c96b4-572">В следующей таблице описаны примеры, приведенные для методов Find.</span><span class="sxs-lookup"><span data-stu-id="c96b4-572">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="c96b4-573">Метод</span><span class="sxs-lookup"><span data-stu-id="c96b4-573">Method</span></span>|<span data-ttu-id="c96b4-574">Пример</span><span class="sxs-lookup"><span data-stu-id="c96b4-574">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-575">Находит книгу по ИДЕНТИФИКАТОРу, используя делегат предиката `IDToFind`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-575">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="c96b4-576">C#в примере используется анонимный делегат.</span><span class="sxs-lookup"><span data-stu-id="c96b4-576">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-577">Найти все книги, для которых свойство `Genre` имеет значение "Computer" с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-577">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-578">Находит последнюю книгу в коллекции с датой публикации до 2001, используя делегат предиката `PubBefore2001`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-578">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="c96b4-579">C#в примере используется анонимный делегат.</span><span class="sxs-lookup"><span data-stu-id="c96b4-579">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-580">Находит индекс первой компьютерной книги с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-580">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-581">Находит индекс последней компьютерной книги с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-581">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-582">Находит индекс первой компьютерной книги во второй половине коллекции, используя делегат предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-582">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-583">Находит индекс последней компьютерной книги во второй половине коллекции, используя делегат предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-583">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-584"><paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-584"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindLastIndex">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c96b4-585">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс последнего найденного вхождения в пределах всего списка <see cref="T:System.Collections.Generic.List`1" /> или его части.</span><span class="sxs-lookup"><span data-stu-id="c96b4-585">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="c96b4-586">Делегат <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-586">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="c96b4-587">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс последнего найденного вхождения в пределах всего списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-587">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="c96b4-588">Отсчитываемый от нуля индекс последнего вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-588">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-589">Поиск в <xref:System.Collections.Generic.List%601> осуществляется в обратном направлении, начиная с последнего элемента и заканчивая первым элементом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-589">The <xref:System.Collections.Generic.List%601> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="c96b4-590"><xref:System.Predicate%601> является делегатом для метода, который возвращает `true`, если переданный ему объект соответствует условиям, определенным в делегате.</span><span class="sxs-lookup"><span data-stu-id="c96b4-590">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="c96b4-591">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются в делегат <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-591">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="c96b4-592">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-592">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-593">В следующем примере показаны методы Find для класса <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-593">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="c96b4-594">В примере для класса <xref:System.Collections.Generic.List%601> содержатся объекты `book` класса `Book`с использованием данных из [примера XML-файла: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="c96b4-594">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="c96b4-595">Метод `FillList` в примере использует [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) для анализа значений из XML в значения свойств объектов `book`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-595">The `FillList` method in the example uses [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="c96b4-596">В следующей таблице описаны примеры, приведенные для методов Find.</span><span class="sxs-lookup"><span data-stu-id="c96b4-596">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="c96b4-597">Метод</span><span class="sxs-lookup"><span data-stu-id="c96b4-597">Method</span></span>|<span data-ttu-id="c96b4-598">Пример</span><span class="sxs-lookup"><span data-stu-id="c96b4-598">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-599">Находит книгу по ИДЕНТИФИКАТОРу, используя делегат предиката `IDToFind`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-599">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="c96b4-600">C#в примере используется анонимный делегат.</span><span class="sxs-lookup"><span data-stu-id="c96b4-600">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-601">Найти все книги, для которых свойство `Genre` имеет значение "Computer" с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-601">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-602">Находит последнюю книгу в коллекции с датой публикации до 2001, используя делегат предиката `PubBefore2001`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-602">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="c96b4-603">C#в примере используется анонимный делегат.</span><span class="sxs-lookup"><span data-stu-id="c96b4-603">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-604">Находит индекс первой компьютерной книги с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-604">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-605">Находит индекс последней компьютерной книги с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-605">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-606">Находит индекс первой компьютерной книги во второй половине коллекции, используя делегат предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-606">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-607">Находит индекс последней компьютерной книги во второй половине коллекции, используя делегат предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-607">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-608"><paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-608"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex (startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="c96b4-609">Индекс (с нуля) начала диапазона поиска в обратном направлении.</span><span class="sxs-lookup"><span data-stu-id="c96b4-609">The zero-based starting index of the backward search.</span></span></param>
        <param name="match"><span data-ttu-id="c96b4-610">Делегат <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-610">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="c96b4-611">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" />, начиная с первого элемента и заканчивая элементом с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-611">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="c96b4-612">Отсчитываемый от нуля индекс последнего вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-612">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-613">Поиск в <xref:System.Collections.Generic.List%601> осуществляется в обратном направлении, начиная с `startIndex` и заканчивая первым элементом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-613">The <xref:System.Collections.Generic.List%601> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="c96b4-614"><xref:System.Predicate%601> является делегатом для метода, который возвращает `true`, если переданный ему объект соответствует условиям, определенным в делегате.</span><span class="sxs-lookup"><span data-stu-id="c96b4-614">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="c96b4-615">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются в делегат <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-615">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="c96b4-616">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — число элементов от начала <xref:System.Collections.Generic.List%601> до `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-616">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from the beginning of the <xref:System.Collections.Generic.List%601> to `startIndex`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-617"><paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-617"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-618"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-618"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : int * int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex (startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="c96b4-619">Индекс (с нуля) начала диапазона поиска в обратном направлении.</span><span class="sxs-lookup"><span data-stu-id="c96b4-619">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="c96b4-620">Число элементов в диапазоне, в котором выполняется поиск.</span><span class="sxs-lookup"><span data-stu-id="c96b4-620">The number of elements in the section to search.</span></span></param>
        <param name="match"><span data-ttu-id="c96b4-621">Делегат <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-621">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="c96b4-622">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" />, содержащем указанное число элементов и заканчивающемся элементом с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-622">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="c96b4-623">Отсчитываемый от нуля индекс последнего вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-623">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-624">Поиск в <xref:System.Collections.Generic.List%601> осуществляется в обратном направлении, начиная с `startIndex` и заканчивая на `startIndex` минус `count` плюс 1, если `count` больше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-624">The <xref:System.Collections.Generic.List%601> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="c96b4-625"><xref:System.Predicate%601> является делегатом для метода, который возвращает `true`, если переданный ему объект соответствует условиям, определенным в делегате.</span><span class="sxs-lookup"><span data-stu-id="c96b4-625">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="c96b4-626">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются в делегат <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-626">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="c96b4-627">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — `count`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-627">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-628">В следующем примере показаны методы Find для класса <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-628">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="c96b4-629">В примере для класса <xref:System.Collections.Generic.List%601> содержатся объекты `book` класса `Book`с использованием данных из [примера XML-файла: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="c96b4-629">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="c96b4-630">Метод `FillList` в примере использует [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) для анализа значений из XML в значения свойств объектов `book`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-630">The `FillList` method in the example uses [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="c96b4-631">В следующей таблице описаны примеры, приведенные для методов Find.</span><span class="sxs-lookup"><span data-stu-id="c96b4-631">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="c96b4-632">Метод</span><span class="sxs-lookup"><span data-stu-id="c96b4-632">Method</span></span>|<span data-ttu-id="c96b4-633">Пример</span><span class="sxs-lookup"><span data-stu-id="c96b4-633">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-634">Находит книгу по ИДЕНТИФИКАТОРу, используя делегат предиката `IDToFind`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-634">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="c96b4-635">C#в примере используется анонимный делегат.</span><span class="sxs-lookup"><span data-stu-id="c96b4-635">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-636">Найти все книги, для которых свойство `Genre` имеет значение "Computer" с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-636">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-637">Находит последнюю книгу в коллекции с датой публикации до 2001, используя делегат предиката `PubBefore2001`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-637">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="c96b4-638">C#в примере используется анонимный делегат.</span><span class="sxs-lookup"><span data-stu-id="c96b4-638">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-639">Находит индекс первой компьютерной книги с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-639">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-640">Находит индекс последней компьютерной книги с помощью делегата предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-640">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-641">Находит индекс первой компьютерной книги во второй половине коллекции, используя делегат предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-641">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="c96b4-642">Находит индекс последней компьютерной книги во второй половине коллекции, используя делегат предиката `FindComputer`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-642">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-643"><paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-643"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-644"><paramref name="startIndex" /> находится вне диапазона допустимых индексов для <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-644"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span>  
  
<span data-ttu-id="c96b4-645">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-645">-or-</span></span> 
 <span data-ttu-id="c96b4-646">Значение параметра <paramref name="count" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-646"><paramref name="count" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-647">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-647">-or-</span></span> 
 <span data-ttu-id="c96b4-648"><paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-648"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public void ForEach (Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForEach(class System.Action`1&lt;!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForEach (action As Action(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForEach(Action&lt;T&gt; ^ action);" />
      <MemberSignature Language="F#" Value="member this.ForEach : Action&lt;'T&gt; -&gt; unit" Usage="list.ForEach action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="c96b4-649">Делегат <see cref="T:System.Action`1" />, выполняемый для каждого элемента списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-649">The <see cref="T:System.Action`1" /> delegate to perform on each element of the <see cref="T:System.Collections.Generic.List`1" />.</span></span></param>
        <summary><span data-ttu-id="c96b4-650">Выполняет указанное действие с каждым элементом списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-650">Performs the specified action on each element of the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-651"><xref:System.Action%601> является делегатом метода, который выполняет действие с объектом, переданным ему.</span><span class="sxs-lookup"><span data-stu-id="c96b4-651">The <xref:System.Action%601> is a delegate to a method that performs an action on the object passed to it.</span></span>  <span data-ttu-id="c96b4-652">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются в делегат <xref:System.Action%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-652">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Action%601> delegate.</span></span>  
  
 <span data-ttu-id="c96b4-653">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-653">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="c96b4-654">Изменение базовой коллекции в теле делегата <xref:System.Action%601> не поддерживается и приводит к неопределенному поведению.</span><span class="sxs-lookup"><span data-stu-id="c96b4-654">Modifying the underlying collection in the body of the <xref:System.Action%601> delegate is not supported and causes undefined behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-655">В следующем примере показано использование делегата <xref:System.Action%601> для вывода содержимого объекта <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-655">The following example demonstrates the use of the <xref:System.Action%601> delegate to print the contents of a <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="c96b4-656">В этом примере метод `Print` используется для вывода содержимого списка на консоль.</span><span class="sxs-lookup"><span data-stu-id="c96b4-656">In this example the `Print` method is used to display the contents of the list to the console.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c96b4-657">Кроме отображения содержимого с помощью метода `Print`, в C# примере демонстрируется использование [анонимных методов](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md) для отображения результатов на консоли.</span><span class="sxs-lookup"><span data-stu-id="c96b4-657">In addition to displaying the contents using the `Print` method, the C# example demonstrates the use of [anonymous methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md) to display the results to the console.</span></span>  
  
 [!code-csharp[System.Action_PrintExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action_PrintExample/cs/action.cs#01)]
 [!code-vb[System.Action_PrintExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action_PrintExample/vb/action.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-658"><paramref name="action" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-658"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c96b4-659">Элемент в коллекции изменен.</span><span class="sxs-lookup"><span data-stu-id="c96b4-659">An element in the collection has been modified.</span></span></exception>
        <altmember cref="T:System.Action`1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.List`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As List(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.List&lt;'T&gt;.Enumerator" Usage="list.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c96b4-660">Возвращает перечислитель, осуществляющий перебор элементов списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-660">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="c96b4-661">Новый объект <see cref="T:System.Collections.Generic.List`1.Enumerator" /> для <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-661">A <see cref="T:System.Collections.Generic.List`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-662">Оператор `foreach` C# языка (`for each` в C++`For Each` в Visual Basic) скрывает сложность перечислителей.</span><span class="sxs-lookup"><span data-stu-id="c96b4-662">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="c96b4-663">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-663">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c96b4-664">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-664">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c96b4-665">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-665">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c96b4-666">В этой позиции свойство <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="c96b4-666">At this position, the <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="c96b4-667">Поэтому необходимо вызвать метод <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции перед чтением значения <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-667">Therefore, you must call the <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="c96b4-668">Свойство <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-668">The <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property returns the same object until <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="c96b4-669"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> задает <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-669"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c96b4-670">Если <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> передает конец коллекции, перечислитель размещается после последнего элемента в коллекции и <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-670">If <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c96b4-671">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-671">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c96b4-672">Если последний вызов <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> вернул `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="c96b4-672">If the last call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c96b4-673">Значение свойства <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> не может быть повторно задано первому элементу коллекции; вместо этого следует создать новый экземпляр перечислителя.</span><span class="sxs-lookup"><span data-stu-id="c96b4-673">You cannot set <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="c96b4-674">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="c96b4-674">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c96b4-675">Если в коллекцию вносятся изменения, например добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> или <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> вызывает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-675">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c96b4-676">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="c96b4-676">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c96b4-677">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="c96b4-677">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c96b4-678">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-678">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c96b4-679">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="c96b4-679">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="c96b4-680">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-680">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.List`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!T&gt; GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRange (index As Integer, count As Integer) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt; ^ GetRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetRange : int * int -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="list.GetRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c96b4-681">Отсчитываемый от нуля индекс списка <see cref="T:System.Collections.Generic.List`1" />, с которого начинается диапазон.</span><span class="sxs-lookup"><span data-stu-id="c96b4-681">The zero-based <see cref="T:System.Collections.Generic.List`1" /> index at which the range starts.</span></span></param>
        <param name="count"><span data-ttu-id="c96b4-682">Число элементов в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="c96b4-682">The number of elements in the range.</span></span></param>
        <summary><span data-ttu-id="c96b4-683">Создает неполную копию диапазона элементов исходного списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-683">Creates a shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="c96b4-684">Неполная копия диапазона элементов исходного списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-684">A shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-685">Неполная копия коллекции ссылочных типов или подмножества этой коллекции содержит только ссылки на элементы коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-685">A shallow copy of a collection of reference types, or a subset of that collection, contains only the references to the elements of the collection.</span></span> <span data-ttu-id="c96b4-686">Сами объекты не копируются.</span><span class="sxs-lookup"><span data-stu-id="c96b4-686">The objects themselves are not copied.</span></span> <span data-ttu-id="c96b4-687">Ссылки в новом списке указывают на те же объекты, что и ссылки в исходном списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-687">The references in the new list point to the same objects as the references in the original list.</span></span>  
  
 <span data-ttu-id="c96b4-688">Неполная копия коллекции типов значений или подмножества этой коллекции содержит элементы коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-688">A shallow copy of a collection of value types, or a subset of that collection, contains the elements of the collection.</span></span> <span data-ttu-id="c96b4-689">Однако если элементы коллекции содержат ссылки на другие объекты, эти объекты не копируются.</span><span class="sxs-lookup"><span data-stu-id="c96b4-689">However, if the elements of the collection contain references to other objects, those objects are not copied.</span></span> <span data-ttu-id="c96b4-690">Ссылки в элементах новой коллекции указывают на те же объекты, что и ссылки в элементах исходной коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-690">The references in the elements of the new collection point to the same objects as the references in the elements of the original collection.</span></span>  
  
 <span data-ttu-id="c96b4-691">В отличие от этого, глубокая копия коллекции копирует элементы и все, на которые прямо или косвенно ссылаются элементы.</span><span class="sxs-lookup"><span data-stu-id="c96b4-691">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="c96b4-692">Этот метод является операцией O (*n*), где *n* — `count`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-692">This method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-693">В следующем примере демонстрируется метод <xref:System.Collections.Generic.List%601.GetRange%2A> и другие методы класса <xref:System.Collections.Generic.List%601>, действующие для диапазонов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-693">The following example demonstrates the <xref:System.Collections.Generic.List%601.GetRange%2A> method and other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="c96b4-694">В конце примера метод <xref:System.Collections.Generic.List%601.GetRange%2A> используется для получения трех элементов из списка, начиная с позиции индекса 2.</span><span class="sxs-lookup"><span data-stu-id="c96b4-694">At the end of the example, the <xref:System.Collections.Generic.List%601.GetRange%2A> method is used to get three items from the list, beginning with index location 2.</span></span> <span data-ttu-id="c96b4-695">Метод <xref:System.Collections.Generic.List%601.ToArray%2A> вызывается для результирующего <xref:System.Collections.Generic.List%601>, создавая массив из трех элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-695">The <xref:System.Collections.Generic.List%601.ToArray%2A> method is called on the resulting <xref:System.Collections.Generic.List%601>, creating an array of three elements.</span></span> <span data-ttu-id="c96b4-696">Отображаются элементы массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-696">The elements of the array are displayed.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-697">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-697"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-698">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-698">-or-</span></span> 
 <span data-ttu-id="c96b4-699">Значение параметра <paramref name="count" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-699"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-700">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон элементов в списке <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-700"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c96b4-701">Возвращает отсчитываемый от нуля индекс первого вхождения значения в списке <see cref="T:System.Collections.Generic.List`1" /> или в его части.</span><span class="sxs-lookup"><span data-stu-id="c96b4-701">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.Generic.List`1" /> or in a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="list.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-702">Объект для поиска в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-702">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-703">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-703">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="c96b4-704">Осуществляет поиск указанного объекта и возвращает отсчитываемый от нуля индекс первого вхождения, найденного в пределах всего списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-704">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="c96b4-705">Индекс (с нуля) первого вхождения параметра <paramref name="item" />, если оно найдено в коллекции <see cref="T:System.Collections.Generic.List`1" />; в противном случае -1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-705">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Collections.Generic.List`1" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-706">Поиск <xref:System.Collections.Generic.List%601> выполняется в прямом направлении, начиная с первого элемента и заканчивая последним элементом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-706">The <xref:System.Collections.Generic.List%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="c96b4-707">Этот метод определяет равенство, используя <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> компаратора проверки на равенство по умолчанию для `T`, тип значений в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-707">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="c96b4-708">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-708">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-709">В следующем примере показаны все три перегрузки метода <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-709">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="c96b4-710">Создается <xref:System.Collections.Generic.List%601> строк с одной записью, которая появляется дважды, в позиции индекса 0 и позиции индекса 5.</span><span class="sxs-lookup"><span data-stu-id="c96b4-710">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="c96b4-711">Перегрузка метода <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> выполняет поиск в списке с начала и находит первое вхождение строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-711">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="c96b4-712">Перегрузка метода <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> используется для поиска в списке, начиная с позиции индекса 3, и продолжается до конца списка и находит второе вхождение строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-712">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="c96b4-713">Наконец, перегрузка метода <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> используется для поиска в диапазоне двух записей, начиная с позиции индекса два; Он возвращает значение-1, поскольку в этом диапазоне отсутствуют экземпляры строки поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-713">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns -1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-714">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-714">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int -&gt; int" Usage="list.IndexOf (item, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-715">Объект для поиска в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-715">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-716">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-716">The value can be <see langword="null" /> for reference types.</span></span></param>
        <param name="index"><span data-ttu-id="c96b4-717">Индекс (с нуля) начальной позиции поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-717">The zero-based starting index of the search.</span></span> <span data-ttu-id="c96b4-718">Значение 0 (ноль) действительно в пустом списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-718">0 (zero) is valid in an empty list.</span></span></param>
        <summary><span data-ttu-id="c96b4-719">Осуществляет поиск указанного объекта и возвращает отсчитываемый от нуля индекс первого вхождения в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" />, начиная с заданного индекса и до последнего элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-719">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="c96b4-720">Отсчитываемый от нуля индекс первого вхождения элемента <paramref name="item" /> в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" />, начиная с позиции <paramref name="index" /> и до конца списка, если элемент найден; в противном случае значение –1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-720">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from <paramref name="index" /> to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-721"><xref:System.Collections.Generic.List%601> ищется в прямом направлении, начиная с `index` и заканчивая последним элементом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-721">The <xref:System.Collections.Generic.List%601> is searched forward starting at `index` and ending at the last element.</span></span>  
  
 <span data-ttu-id="c96b4-722">Этот метод определяет равенство, используя <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> компаратора проверки на равенство по умолчанию для `T`, тип значений в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-722">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="c96b4-723">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — число элементов от `index` до конца <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-723">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from `index` to the end of the <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-724">В следующем примере показаны все три перегрузки метода <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-724">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="c96b4-725">Создается <xref:System.Collections.Generic.List%601> строк с одной записью, которая появляется дважды, в позиции индекса 0 и позиции индекса 5.</span><span class="sxs-lookup"><span data-stu-id="c96b4-725">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="c96b4-726">Перегрузка метода <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> выполняет поиск в списке с начала и находит первое вхождение строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-726">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="c96b4-727">Перегрузка метода <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> используется для поиска в списке, начиная с позиции индекса 3, и продолжается до конца списка и находит второе вхождение строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-727">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="c96b4-728">Наконец, перегрузка метода <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> используется для поиска в диапазоне двух записей, начиная с позиции индекса два; Он возвращает значение-1, поскольку в этом диапазоне отсутствуют экземпляры строки поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-728">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns -1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-729"><paramref name="index" /> находится вне диапазона допустимых индексов для <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-729"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-730">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-730">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int * int -&gt; int" Usage="list.IndexOf (item, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-731">Объект для поиска в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-731">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-732">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-732">The value can be <see langword="null" /> for reference types.</span></span></param>
        <param name="index"><span data-ttu-id="c96b4-733">Индекс (с нуля) начальной позиции поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-733">The zero-based starting index of the search.</span></span> <span data-ttu-id="c96b4-734">Значение 0 (ноль) действительно в пустом списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-734">0 (zero) is valid in an empty list.</span></span></param>
        <param name="count"><span data-ttu-id="c96b4-735">Число элементов в диапазоне, в котором выполняется поиск.</span><span class="sxs-lookup"><span data-stu-id="c96b4-735">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="c96b4-736">Выполняет поиск указанного объекта и возвращает отсчитываемый от нуля индекс его первого вхождения в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" />, начинающемся с заданного индекса и содержащем указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-736">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="c96b4-737">Отсчитываемый от нуля индекс первого вхождения <paramref name="item" /> в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" />, который начинается с позиции <paramref name="index" /> и содержит <paramref name="count" /> элементов, если искомый объект найден; в противном случае значение –1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-737">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at <paramref name="index" /> and contains <paramref name="count" /> number of elements, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-738"><xref:System.Collections.Generic.List%601> ищется в прямом направлении, начиная с `index` и заканчивая на `index` Plus `count` минус 1, если `count` больше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-738">The <xref:System.Collections.Generic.List%601> is searched forward starting at `index` and ending at `index` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="c96b4-739">Этот метод определяет равенство, используя <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> компаратора проверки на равенство по умолчанию для `T`, тип значений в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-739">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="c96b4-740">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — `count`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-740">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-741">В следующем примере показаны все три перегрузки метода <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-741">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="c96b4-742">Создается <xref:System.Collections.Generic.List%601> строк с одной записью, которая появляется дважды, в позиции индекса 0 и позиции индекса 5.</span><span class="sxs-lookup"><span data-stu-id="c96b4-742">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="c96b4-743">Перегрузка метода <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> выполняет поиск в списке с начала и находит первое вхождение строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-743">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="c96b4-744">Перегрузка метода <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> используется для поиска в списке, начиная с позиции индекса 3, и продолжается до конца списка и находит второе вхождение строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-744">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="c96b4-745">Наконец, перегрузка метода <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> используется для поиска в диапазоне двух записей, начиная с позиции индекса два; Он возвращает значение-1, поскольку в этом диапазоне отсутствуют экземпляры строки поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-745">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns -1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-746"><paramref name="index" /> находится вне диапазона допустимых индексов для <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-746"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span>  
  
<span data-ttu-id="c96b4-747">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-747">-or-</span></span> 
 <span data-ttu-id="c96b4-748">Значение параметра <paramref name="count" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-748"><paramref name="count" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-749">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-749">-or-</span></span> 
 <span data-ttu-id="c96b4-750"><paramref name="index" /> и <paramref name="count" /> не указывают допустимый раздел в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-750"><paramref name="index" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-751">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-751">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="list.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c96b4-752">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-752">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="c96b4-753">Вставляемый объект.</span><span class="sxs-lookup"><span data-stu-id="c96b4-753">The object to insert.</span></span> <span data-ttu-id="c96b4-754">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-754">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="c96b4-755">Вставляет элемент в коллекцию <see cref="T:System.Collections.Generic.List`1" /> по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="c96b4-755">Inserts an element into the <see cref="T:System.Collections.Generic.List`1" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-756"><xref:System.Collections.Generic.List%601> принимает `null` как допустимое значение для ссылочных типов и допускает дублирование элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-756"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="c96b4-757">Если <xref:System.Collections.Generic.List%601.Count%2A> уже равно <xref:System.Collections.Generic.List%601.Capacity%2A>, емкость <xref:System.Collections.Generic.List%601> увеличивается путем автоматического перераспределения внутреннего массива, а существующие элементы копируются в новый массив перед добавлением нового элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-757">If <xref:System.Collections.Generic.List%601.Count%2A> already equals <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="c96b4-758">Если `index` равно <xref:System.Collections.Generic.List%601.Count%2A>, `item` добавляется в конец <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-758">If `index` is equal to <xref:System.Collections.Generic.List%601.Count%2A>, `item` is added to the end of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-759">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-759">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="c96b4-760">В следующем примере показано, как добавить, удалить и вставить простой бизнес-объект в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-760">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="c96b4-761">В следующем примере демонстрируется метод <xref:System.Collections.Generic.List%601.Insert%2A>, а также другие свойства и методы <xref:System.Collections.Generic.List%601> универсального класса.</span><span class="sxs-lookup"><span data-stu-id="c96b4-761">The following example demonstrates the <xref:System.Collections.Generic.List%601.Insert%2A> method, along with various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="c96b4-762">После создания списка добавляются элементы.</span><span class="sxs-lookup"><span data-stu-id="c96b4-762">After the list is created, elements are added.</span></span> <span data-ttu-id="c96b4-763">Метод <xref:System.Collections.Generic.List%601.Insert%2A> используется для вставки элемента в середину списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-763">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert an item into the middle of the list.</span></span> <span data-ttu-id="c96b4-764">Вставленный элемент является дубликатом, который позже удаляется с помощью метода <xref:System.Collections.Generic.List%601.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-764">The item inserted is a duplicate, which is later removed using the <xref:System.Collections.Generic.List%601.Remove%2A> method.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-765">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-765"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-766">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-766">-or-</span></span> 
 <span data-ttu-id="c96b4-767">Значение <paramref name="index" /> больше значения <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-767"><paramref name="index" /> is greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public void InsertRange (int index, System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertRange(int32 index, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertRange (index As Integer, collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertRange(int index, System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="member this.InsertRange : int * seq&lt;'T&gt; -&gt; unit" Usage="list.InsertRange (index, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c96b4-768">Отсчитываемый от нуля индекс места вставки новых элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-768">The zero-based index at which the new elements should be inserted.</span></span></param>
        <param name="collection"><span data-ttu-id="c96b4-769">Коллекция, элементы которой следует вставить в список <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-769">The collection whose elements should be inserted into the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-770">Коллекция не может быть задана значением <see langword="null" />, но может содержать элементы <see langword="null" />, если тип <paramref name="T" /> является ссылочным типом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-770">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />, if type <paramref name="T" /> is a reference type.</span></span></param>
        <summary><span data-ttu-id="c96b4-771">Вставляет элементы коллекции в список <see cref="T:System.Collections.Generic.List`1" /> в позиции с указанным индексом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-771">Inserts the elements of a collection into the <see cref="T:System.Collections.Generic.List`1" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-772"><xref:System.Collections.Generic.List%601> принимает `null` как допустимое значение для ссылочных типов и допускает дублирование элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-772"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="c96b4-773">Если новый <xref:System.Collections.Generic.List%601.Count%2A> (текущий <xref:System.Collections.Generic.List%601.Count%2A> плюс размер коллекции) будет больше <xref:System.Collections.Generic.List%601.Capacity%2A>, емкость <xref:System.Collections.Generic.List%601> увеличивается путем автоматического перераспределения внутреннего массива для размещения новых элементов, а существующие элементы копируются в новый массив перед добавлением новых элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-773">If the new <xref:System.Collections.Generic.List%601.Count%2A> (the current <xref:System.Collections.Generic.List%601.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="c96b4-774">Если `index` равно <xref:System.Collections.Generic.List%601.Count%2A>, элементы добавляются в конец <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-774">If `index` is equal to <xref:System.Collections.Generic.List%601.Count%2A>, the elements are added to the end of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-775">Порядок элементов в коллекции сохраняется в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-775">The order of the elements in the collection is preserved in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-776">Этот метод является операцией O (*n* \* *m*), где *n* — число добавляемых элементов, а *m* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-776">This method is an O(*n* \* *m*) operation, where *n* is the number of elements to be added and *m* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-777">В следующем примере демонстрируется <xref:System.Collections.Generic.List%601.InsertRange%2A> метод и различные другие методы класса <xref:System.Collections.Generic.List%601>, действующие для диапазонов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-777">The following example demonstrates <xref:System.Collections.Generic.List%601.InsertRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="c96b4-778">После создания списка и заполнения его именами из нескольких <xref:System.Collections.Generic.List%601.InsertRange%2A> динозавров мирным растения-съесть метод используется для вставки в список массива из трех фероЦиаусов мясо-съесть, начиная с индекса Location 3.</span><span class="sxs-lookup"><span data-stu-id="c96b4-778">After the list has been created and populated with the names of several peaceful plant-eating dinosaurs, the <xref:System.Collections.Generic.List%601.InsertRange%2A> method is used to insert an array of three ferocious meat-eating dinosaurs into the list, beginning at index location 3.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-779"><paramref name="collection" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-779"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-780">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-780"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-781">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-781">-or-</span></span> 
 <span data-ttu-id="c96b4-782">Значение <paramref name="index" /> больше значения <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-782"><paramref name="index" /> is greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Collections.Generic.List&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c96b4-783">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</span><span class="sxs-lookup"><span data-stu-id="c96b4-783">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="c96b4-784">Возвращает или задает элемент по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="c96b4-784">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="c96b4-785">Элемент, расположенный по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="c96b4-785">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-786"><xref:System.Collections.Generic.List%601> принимает `null` как допустимое значение для ссылочных типов и допускает дублирование элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-786"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="c96b4-787">Это свойство предоставляет доступ к указанному элементу коллекции при использовании следующего синтаксиса: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-787">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="c96b4-788">Получение значения этого свойства является операцией O (1); Задание свойства также является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-788">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-789">В примере в этом разделе демонстрируется свойство <xref:System.Collections.Generic.List%601.Item%2A> (индексатор в C#) и другие свойства и методы <xref:System.Collections.Generic.List%601> универсального класса.</span><span class="sxs-lookup"><span data-stu-id="c96b4-789">The example in this section demonstrates the <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#) and various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="c96b4-790">После создания и заполнения списка с помощью метода <xref:System.Collections.Generic.List%601.Add%2A> элемент извлекается и отображается с помощью свойства <xref:System.Collections.Generic.List%601.Item%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-790">After the list has been created and populated using the <xref:System.Collections.Generic.List%601.Add%2A> method, an element is retrieved and displayed using the <xref:System.Collections.Generic.List%601.Item%2A> property.</span></span> <span data-ttu-id="c96b4-791">(Пример, использующий свойство <xref:System.Collections.Generic.List%601.Item%2A> для задания значения элемента списка, см. в разделе <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.)</span><span class="sxs-lookup"><span data-stu-id="c96b4-791">(For an example that uses the <xref:System.Collections.Generic.List%601.Item%2A> property to set the value of a list element, see <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c96b4-792">Visual Basic, C#и C++ имеют синтаксис для доступа к свойству <xref:System.Collections.Generic.List%601.Item%2A> без использования его имени.</span><span class="sxs-lookup"><span data-stu-id="c96b4-792">Visual Basic, C#, and C++ all have syntax for accessing the <xref:System.Collections.Generic.List%601.Item%2A> property without using its name.</span></span> <span data-ttu-id="c96b4-793">Вместо этого используется переменная, содержащая <xref:System.Collections.Generic.List%601>, как если бы она была массивом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-793">Instead, the variable containing the <xref:System.Collections.Generic.List%601> is used as if it were an array.</span></span>  
  
 <span data-ttu-id="c96b4-794">Язык использует ключевое слово`this`для определения индексаторов вместо реализации свойства <xref:System.Collections.Generic.List%601.Item%2A>. [](~/docs/csharp/language-reference/keywords/this.md) C#</span><span class="sxs-lookup"><span data-stu-id="c96b4-794">The C# language uses the [`this`](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.List%601.Item%2A> property.</span></span> <span data-ttu-id="c96b4-795">В языке Visual Basic в качестве свойства по умолчанию реализовано свойство <xref:System.Collections.Generic.List%601.Item%2A>, предоставляющее те же возможности индексирования.</span><span class="sxs-lookup"><span data-stu-id="c96b4-795">Visual Basic implements <xref:System.Collections.Generic.List%601.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 [!code-csharp[List`1_Class#2](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#2)]
 [!code-vb[List`1_Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#2)]  
[!code-csharp[List`1_Class#3](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#3)]
[!code-vb[List`1_Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-796">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-796"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-797">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-797">-or-</span></span> 
 <span data-ttu-id="c96b4-798">Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-798"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c96b4-799">Возвращает отсчитываемый от нуля индекс последнего вхождения значения в списке <see cref="T:System.Collections.Generic.List`1" /> или в его части.</span><span class="sxs-lookup"><span data-stu-id="c96b4-799">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.Generic.List`1" /> or in a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T -&gt; int" Usage="list.LastIndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-800">Объект для поиска в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-800">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-801">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-801">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="c96b4-802">Осуществляет поиск указанного объекта и возвращает отсчитываемый от нуля индекс последнего вхождения, найденного в пределах всего списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-802">Searches for the specified object and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="c96b4-803">Отсчитываемый от нуля индекс последнего вхождения <paramref name="item" /> в пределах всего списка <see cref="T:System.Collections.Generic.List`1" />, если элемент найден; в противном случае значение –1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-803">The zero-based index of the last occurrence of <paramref name="item" /> within the entire the <see cref="T:System.Collections.Generic.List`1" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-804">Поиск в <xref:System.Collections.Generic.List%601> осуществляется в обратном направлении, начиная с последнего элемента и заканчивая первым элементом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-804">The <xref:System.Collections.Generic.List%601> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="c96b4-805">Этот метод определяет равенство, используя <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> компаратора проверки на равенство по умолчанию для `T`, тип значений в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-805">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="c96b4-806">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-806">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-807">В следующем примере показаны все три перегрузки метода <xref:System.Collections.Generic.List%601.LastIndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-807">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="c96b4-808">Создается <xref:System.Collections.Generic.List%601> строк с одной записью, которая появляется дважды, в позиции индекса 0 и позиции индекса 5.</span><span class="sxs-lookup"><span data-stu-id="c96b4-808">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="c96b4-809">Перегрузка метода <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> выполняет поиск по всему списку в конце и находит второе вхождение строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-809">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="c96b4-810">Перегрузка метода <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> используется для поиска в списке в обратном направлении с расположением индекса 3 и продолжения до начала списка, чтобы найти первое вхождение строки в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-810">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="c96b4-811">Наконец, перегрузка метода <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> используется для поиска диапазона из четырех записей, начиная с позиции индекса 4 и расширяя обратно (т. е. он ищет элементы в расположениях 4, 3, 2 и 1); Этот поиск возвращает значение-1, так как в этом диапазоне отсутствуют экземпляры строки поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-811">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns -1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-812">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-812">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int index);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T * int -&gt; int" Usage="list.LastIndexOf (item, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-813">Объект для поиска в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-813">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-814">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-814">The value can be <see langword="null" /> for reference types.</span></span></param>
        <param name="index"><span data-ttu-id="c96b4-815">Индекс (с нуля) начала диапазона поиска в обратном направлении.</span><span class="sxs-lookup"><span data-stu-id="c96b4-815">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="c96b4-816">Осуществляет поиск указанного объекта и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" />, начиная с первого элемента и до позиции с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-816">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="c96b4-817">Отсчитываемый от нуля индекс последнего вхождения элемента <paramref name="item" /> в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" />, начиная с первого элемента и до позиции <paramref name="index" />, если элемент найден; в противном случае значение -1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-817">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to <paramref name="index" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-818">Поиск в <xref:System.Collections.Generic.List%601> осуществляется в обратном направлении, начиная с `index` и заканчивая первым элементом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-818">The <xref:System.Collections.Generic.List%601> is searched backward starting at `index` and ending at the first element.</span></span>  
  
 <span data-ttu-id="c96b4-819">Этот метод определяет равенство, используя <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> компаратора проверки на равенство по умолчанию для `T`, тип значений в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-819">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="c96b4-820">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — число элементов от начала <xref:System.Collections.Generic.List%601> до `index`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-820">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from the beginning of the <xref:System.Collections.Generic.List%601> to `index`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-821">В следующем примере показаны все три перегрузки метода <xref:System.Collections.Generic.List%601.LastIndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-821">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="c96b4-822">Создается <xref:System.Collections.Generic.List%601> строк с одной записью, которая появляется дважды, в позиции индекса 0 и позиции индекса 5.</span><span class="sxs-lookup"><span data-stu-id="c96b4-822">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="c96b4-823">Перегрузка метода <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> выполняет поиск по всему списку в конце и находит второе вхождение строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-823">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="c96b4-824">Перегрузка метода <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> используется для поиска в списке в обратном направлении с расположением индекса 3 и продолжения до начала списка, чтобы найти первое вхождение строки в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-824">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="c96b4-825">Наконец, перегрузка метода <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> используется для поиска диапазона из четырех записей, начиная с позиции индекса 4 и расширяя обратно (т. е. он ищет элементы в расположениях 4, 3, 2 и 1); Этот поиск возвращает значение-1, так как в этом диапазоне отсутствуют экземпляры строки поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-825">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns -1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-826"><paramref name="index" /> находится вне диапазона допустимых индексов для <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-826"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-827">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-827">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T * int * int -&gt; int" Usage="list.LastIndexOf (item, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-828">Объект для поиска в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-828">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-829">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-829">The value can be <see langword="null" /> for reference types.</span></span></param>
        <param name="index"><span data-ttu-id="c96b4-830">Индекс (с нуля) начала диапазона поиска в обратном направлении.</span><span class="sxs-lookup"><span data-stu-id="c96b4-830">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="c96b4-831">Число элементов в диапазоне, в котором выполняется поиск.</span><span class="sxs-lookup"><span data-stu-id="c96b4-831">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="c96b4-832">Выполняет поиск указанного объекта и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" />, содержащем указанное число элементов и заканчивающемся в позиции с указанным индексом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-832">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="c96b4-833">Отсчитываемый от нуля индекс последнего вхождения <paramref name="item" /> в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" />, состоящем из <paramref name="count" /> элементов и заканчивающемся в позиции <paramref name="index" />, если элемент найден. В противном случае значение –1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-833">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="index" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-834">Поиск в <xref:System.Collections.Generic.List%601> осуществляется в обратном направлении, начиная с `index` и заканчивая на `index` минус `count` плюс 1, если `count` больше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-834">The <xref:System.Collections.Generic.List%601> is searched backward starting at `index` and ending at `index` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="c96b4-835">Этот метод определяет равенство, используя <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> компаратора проверки на равенство по умолчанию для `T`, тип значений в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-835">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="c96b4-836">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — `count`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-836">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-837">В следующем примере показаны все три перегрузки метода <xref:System.Collections.Generic.List%601.LastIndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-837">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="c96b4-838">Создается <xref:System.Collections.Generic.List%601> строк с одной записью, которая появляется дважды, в позиции индекса 0 и позиции индекса 5.</span><span class="sxs-lookup"><span data-stu-id="c96b4-838">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="c96b4-839">Перегрузка метода <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> выполняет поиск по всему списку в конце и находит второе вхождение строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-839">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="c96b4-840">Перегрузка метода <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> используется для поиска в списке в обратном направлении с расположением индекса 3 и продолжения до начала списка, чтобы найти первое вхождение строки в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-840">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="c96b4-841">Наконец, перегрузка метода <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> используется для поиска диапазона из 4 записей, начиная с позиции индекса 4 и расширяя обратно (т. е. он ищет элементы в расположениях 4, 3, 2 и 1); Этот поиск возвращает значение-1, так как в этом диапазоне отсутствуют экземпляры строки поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-841">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of 4 entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns -1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-842"><paramref name="index" /> находится вне диапазона допустимых индексов для <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-842"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span>  
  
<span data-ttu-id="c96b4-843">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-843">-or-</span></span> 
 <span data-ttu-id="c96b4-844">Значение параметра <paramref name="count" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-844"><paramref name="count" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-845">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-845">-or-</span></span> 
 <span data-ttu-id="c96b4-846"><paramref name="index" /> и <paramref name="count" /> не указывают допустимый раздел в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-846"><paramref name="index" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-847">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-847">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="list.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-848">Объект, который необходимо удалить из коллекции <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-848">The object to remove from the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="c96b4-849">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-849">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="c96b4-850">Удаляет первое вхождение указанного объекта из коллекции <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-850">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="c96b4-851">Значение <see langword="true" />, если элемент <paramref name="item" /> успешно удален, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-851"><see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="c96b4-852">Этот метод также возвращает <see langword="false" />, если элемент <paramref name="item" /> не найден в коллекции <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-852">This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-853">Если тип `T` реализует <xref:System.IEquatable%601> универсальный интерфейс, то функция сравнения на равенство является методом <xref:System.IEquatable%601.Equals%2A> этого интерфейса. в противном случае компаратор проверки на равенство по умолчанию <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-853">If type `T` implements the <xref:System.IEquatable%601> generic interface, the equality comparer is the <xref:System.IEquatable%601.Equals%2A> method of that interface; otherwise, the default equality comparer is <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c96b4-854">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-854">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="c96b4-855">В следующем примере показано, как добавить, удалить и вставить простой бизнес-объект в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-855">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="c96b4-856">В следующем примере демонстрируется <xref:System.Collections.Generic.List%601.Remove%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c96b4-856">The following example demonstrates <xref:System.Collections.Generic.List%601.Remove%2A> method.</span></span> <span data-ttu-id="c96b4-857">Для добавления, вставки и поиска в списке используются несколько свойств и методов универсального класса <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-857">Several properties and methods of the <xref:System.Collections.Generic.List%601> generic class are used to add, insert, and search the list.</span></span> <span data-ttu-id="c96b4-858">После выполнения этих операций список будет содержать дубликат.</span><span class="sxs-lookup"><span data-stu-id="c96b4-858">After these operations, the list contains a duplicate.</span></span> <span data-ttu-id="c96b4-859">Метод <xref:System.Collections.Generic.List%601.Remove%2A> используется для удаления первого экземпляра повторяющегося элемента и отображения содержимого.</span><span class="sxs-lookup"><span data-stu-id="c96b4-859">The <xref:System.Collections.Generic.List%601.Remove%2A> method is used to remove the first instance of the duplicate item, and the contents are displayed.</span></span> <span data-ttu-id="c96b4-860">Метод <xref:System.Collections.Generic.List%601.Remove%2A> всегда удаляет первый обнаруженный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="c96b4-860">The <xref:System.Collections.Generic.List%601.Remove%2A> method always removes the first instance it encounters.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-861">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-861">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public int RemoveAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RemoveAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAll (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RemoveAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : Predicate&lt;'T&gt; -&gt; int" Usage="list.RemoveAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="c96b4-862">Делегат <see cref="T:System.Predicate`1" />, определяющий условия удаления элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-862">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to remove.</span></span></param>
        <summary><span data-ttu-id="c96b4-863">Удаляет все элементы, удовлетворяющие условиям указанного предиката.</span><span class="sxs-lookup"><span data-stu-id="c96b4-863">Removes all the elements that match the conditions defined by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="c96b4-864">Число элементов, удаляемых из списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-864">The number of elements removed from the <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-865"><xref:System.Predicate%601> является делегатом для метода, который возвращает `true`, если переданный ему объект соответствует условиям, определенным в делегате.</span><span class="sxs-lookup"><span data-stu-id="c96b4-865">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="c96b4-866">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются <xref:System.Predicate%601> делегату, а элементы, соответствующие условиям, удаляются из <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-866">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and the elements that match the conditions are removed from the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="c96b4-867">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-867">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-868">В следующем примере демонстрируется метод <xref:System.Collections.Generic.List%601.RemoveAll%2A> и несколько других методов, использующих универсальный делегат <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-868">The following example demonstrates the <xref:System.Collections.Generic.List%601.RemoveAll%2A> method and several other methods that use the <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="c96b4-869">Создается <xref:System.Collections.Generic.List%601> строк, содержащая 8 названий динозавров, два из которых (в позициях 1 и 5) заканчиваются на "саурус".</span><span class="sxs-lookup"><span data-stu-id="c96b4-869">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="c96b4-870">В примере также определяется метод предиката поиска с именем `EndsWithSaurus`, который принимает строковый параметр и возвращает логическое значение, указывающее, заканчивается ли входная строка в "саурус".</span><span class="sxs-lookup"><span data-stu-id="c96b4-870">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="c96b4-871">Методы <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>и <xref:System.Collections.Generic.List%601.FindAll%2A> используются для поиска в списке с помощью метода предиката поиска.</span><span class="sxs-lookup"><span data-stu-id="c96b4-871">The <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, and <xref:System.Collections.Generic.List%601.FindAll%2A> methods are used to search the list with the search predicate method.</span></span>  
  
 <span data-ttu-id="c96b4-872">Метод <xref:System.Collections.Generic.List%601.RemoveAll%2A> используется для удаления всех записей, оканчивающихся на "саурус".</span><span class="sxs-lookup"><span data-stu-id="c96b4-872">The <xref:System.Collections.Generic.List%601.RemoveAll%2A> method is used to remove all entries ending with "saurus".</span></span> <span data-ttu-id="c96b4-873">Он проходит по списку с самого начала, передавая каждый элемент в свою очередь на `EndsWithSaurus` метод.</span><span class="sxs-lookup"><span data-stu-id="c96b4-873">It traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="c96b4-874">Элемент удаляется, если метод `EndsWithSaurus` возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-874">The element is removed if the `EndsWithSaurus` method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c96b4-875">В C# и Visual Basic нет необходимости явно создавать делегат `Predicate<string>` (`Predicate(Of String)` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c96b4-875">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="c96b4-876">Эти языки выводят нужный делегат из контекста и создают его автоматически.</span><span class="sxs-lookup"><span data-stu-id="c96b4-876">These languages infer the correct delegate from context, and create it automatically.</span></span>  
  
 <span data-ttu-id="c96b4-877">Наконец, метод <xref:System.Collections.Generic.List%601.Exists%2A> проверяет, что в списке нет строк, заканчивающихся на "саурус".</span><span class="sxs-lookup"><span data-stu-id="c96b4-877">Finally, the <xref:System.Collections.Generic.List%601.Exists%2A> method verifies that there are no strings in the list that end with "saurus".</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-878"><paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-878"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="list.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c96b4-879">Индекс (с нуля) элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="c96b4-879">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="c96b4-880">Удаляет элемент по указанному индексу из коллекции <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-880">Removes the element at the specified index of the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-881">При вызове <xref:System.Collections.Generic.List%601.RemoveAt%2A> для удаления элемента оставшиеся элементы в списке нумеруются повторно, чтобы заменить удаленный элемент.</span><span class="sxs-lookup"><span data-stu-id="c96b4-881">When you call <xref:System.Collections.Generic.List%601.RemoveAt%2A> to remove an item, the remaining items in the list are renumbered to replace the removed item.</span></span> <span data-ttu-id="c96b4-882">Например, если удалить элемент с индексом 3, элемент с индексом 4 будет перемещен в 3 позицию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-882">For example, if you remove the item at index 3, the item at index 4 is moved to the 3 position.</span></span> <span data-ttu-id="c96b4-883">Кроме того, число элементов в списке (представленное свойством <xref:System.Collections.Generic.List%601.Count%2A>) уменьшается на 1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-883">In addition, the number of items in the list (as represented by the <xref:System.Collections.Generic.List%601.Count%2A> property) is reduced by 1.</span></span>  
  
 <span data-ttu-id="c96b4-884">Этот метод является операцией O (*n*), где *n* — (<xref:System.Collections.Generic.List%601.Count%2A> - `index`).</span><span class="sxs-lookup"><span data-stu-id="c96b4-884">This method is an O(*n*) operation, where *n* is (<xref:System.Collections.Generic.List%601.Count%2A> - `index`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-885">В следующем примере показано, как добавить, удалить и вставить простой бизнес-объект в <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-885">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-886">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-886"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-887">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-887">-or-</span></span> 
 <span data-ttu-id="c96b4-888">Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-888"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : int * int -&gt; unit" Usage="list.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c96b4-889">Отсчитываемый от нуля индекс начала диапазона элементов, которые требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="c96b4-889">The zero-based starting index of the range of elements to remove.</span></span></param>
        <param name="count"><span data-ttu-id="c96b4-890">Число удаляемых элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-890">The number of elements to remove.</span></span></param>
        <summary><span data-ttu-id="c96b4-891">Удаляет диапазон элементов из списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-891">Removes a range of elements from the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-892">Элементы удаляются, а все элементы, следующие за ними в <xref:System.Collections.Generic.List%601>, уменьшают их индексы `count`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-892">The items are removed and all the elements following them in the <xref:System.Collections.Generic.List%601> have their indexes reduced by `count`.</span></span>  
  
 <span data-ttu-id="c96b4-893">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-893">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-894">В следующем примере демонстрируется метод <xref:System.Collections.Generic.List%601.RemoveRange%2A> и различные другие методы класса <xref:System.Collections.Generic.List%601>, действующие для диапазонов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-894">The following example demonstrates the <xref:System.Collections.Generic.List%601.RemoveRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="c96b4-895">После создания и изменения списка метод <xref:System.Collections.Generic.List%601.RemoveRange%2A> используется для удаления двух элементов из списка, начиная с позиции индекса 2.</span><span class="sxs-lookup"><span data-stu-id="c96b4-895">After the list has been created and modified, the <xref:System.Collections.Generic.List%601.RemoveRange%2A> method is used to remove two elements from the list, beginning at index location 2.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-896">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-896"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-897">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-897">-or-</span></span> 
 <span data-ttu-id="c96b4-898">Значение параметра <paramref name="count" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-898"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-899">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон элементов в списке <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-899"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c96b4-900">Изменяет порядок элементов в списке <see cref="T:System.Collections.Generic.List`1" /> или в его части на обратный.</span><span class="sxs-lookup"><span data-stu-id="c96b4-900">Reverses the order of the elements in the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="list.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c96b4-901">Изменяет порядок элементов во всем списке <see cref="T:System.Collections.Generic.List`1" /> на обратный.</span><span class="sxs-lookup"><span data-stu-id="c96b4-901">Reverses the order of the elements in the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-902">Этот метод использует <xref:System.Array.Reverse%2A?displayProperty=nameWithType>, чтобы изменить порядок элементов на обратный.</span><span class="sxs-lookup"><span data-stu-id="c96b4-902">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements.</span></span>  
  
 <span data-ttu-id="c96b4-903">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-903">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-904">В следующем примере показаны обе перегрузки метода <xref:System.Collections.Generic.List%601.Reverse%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-904">The following example demonstrates both overloads of the <xref:System.Collections.Generic.List%601.Reverse%2A> method.</span></span> <span data-ttu-id="c96b4-905">В примере создается <xref:System.Collections.Generic.List%601> строк и добавляются шесть строк.</span><span class="sxs-lookup"><span data-stu-id="c96b4-905">The example creates a <xref:System.Collections.Generic.List%601> of strings and adds six strings.</span></span> <span data-ttu-id="c96b4-906">Перегрузка метода <xref:System.Collections.Generic.List%601.Reverse> используется для обращения к списку, а затем перегрузка метода <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> используется для обращения к середине списка, начиная с элемента 1 и охватывающего четыре элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-906">The <xref:System.Collections.Generic.List%601.Reverse> method overload is used to reverse the list, and then the <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</span></span>  
  
 [!code-cpp[List\`1_Reverse#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Reverse/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Reverse/cs/source.cs#1)]
 [!code-vb[List\`1_Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Reverse/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.Reverse : int * int -&gt; unit" Usage="list.Reverse (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c96b4-907">Отсчитываемый от нуля индекс начала диапазона, порядок элементов которого требуется изменить.</span><span class="sxs-lookup"><span data-stu-id="c96b4-907">The zero-based starting index of the range to reverse.</span></span></param>
        <param name="count"><span data-ttu-id="c96b4-908">Число элементов в диапазоне, порядок сортировки в котором требуется изменить.</span><span class="sxs-lookup"><span data-stu-id="c96b4-908">The number of elements in the range to reverse.</span></span></param>
        <summary><span data-ttu-id="c96b4-909">Изменяет порядок элементов в указанном диапазоне.</span><span class="sxs-lookup"><span data-stu-id="c96b4-909">Reverses the order of the elements in the specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-910">Этот метод использует <xref:System.Array.Reverse%2A?displayProperty=nameWithType>, чтобы изменить порядок элементов на обратный.</span><span class="sxs-lookup"><span data-stu-id="c96b4-910">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements.</span></span>  
  
 <span data-ttu-id="c96b4-911">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-911">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-912">В следующем примере показаны обе перегрузки метода <xref:System.Collections.Generic.List%601.Reverse%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-912">The following example demonstrates both overloads of the <xref:System.Collections.Generic.List%601.Reverse%2A> method.</span></span> <span data-ttu-id="c96b4-913">В примере создается <xref:System.Collections.Generic.List%601> строк и добавляются шесть строк.</span><span class="sxs-lookup"><span data-stu-id="c96b4-913">The example creates a <xref:System.Collections.Generic.List%601> of strings and adds six strings.</span></span> <span data-ttu-id="c96b4-914">Перегрузка метода <xref:System.Collections.Generic.List%601.Reverse> используется для обращения к списку, а затем перегрузка метода <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> используется для обращения к середине списка, начиная с элемента 1 и охватывающего четыре элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-914">The <xref:System.Collections.Generic.List%601.Reverse> method overload is used to reverse the list, and then the <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</span></span>  
  
 [!code-cpp[List\`1_Reverse#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Reverse/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Reverse/cs/source.cs#1)]
 [!code-vb[List\`1_Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Reverse/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-915">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-915"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-916">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-916">-or-</span></span> 
 <span data-ttu-id="c96b4-917">Значение параметра <paramref name="count" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-917"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-918">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон элементов в списке <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-918"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c96b4-919">Сортирует элементы или части элементов в списке <see cref="T:System.Collections.Generic.List`1" /> с использованием заданного значения или значения по умолчанию <see cref="T:System.Collections.Generic.IComparer`1" /> реализации или предоставленного делегата <see cref="T:System.Comparison`1" /> для сравнения элементов списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-919">Sorts the elements or a portion of the elements in the <see cref="T:System.Collections.Generic.List`1" /> using either the specified or default <see cref="T:System.Collections.Generic.IComparer`1" /> implementation or a provided <see cref="T:System.Comparison`1" /> delegate to compare list elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="list.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c96b4-920">Сортирует элементы во всем списке <see cref="T:System.Collections.Generic.List`1" /> с помощью функции сравнения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-920">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the default comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-921">Этот метод использует <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> компаратора по умолчанию для типа `T`, чтобы определить порядок элементов списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-921">This method uses the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for type `T` to determine the order of list elements.</span></span> <span data-ttu-id="c96b4-922">Свойство <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализует ли тип `T` <xref:System.IComparable%601> универсальный интерфейс, и использует эту реализацию, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="c96b4-922">The <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="c96b4-923">В противном случае <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализует ли тип `T` интерфейс <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-923">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="c96b4-924">Если тип `T` не реализует ни один из интерфейсов, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> создает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-924">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c96b4-925">Этот метод использует метод <xref:System.Array.Sort%2A?displayProperty=nameWithType>, который применяет сортировку гибридности следующим образом:</span><span class="sxs-lookup"><span data-stu-id="c96b4-925">This method uses the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="c96b4-926">Если размер секции меньше 16 элементов или равен ему, он использует алгоритм сортировки вставки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-926">If the partition size is less than or equal to 16 elements, it uses an insertion sort algorithm.</span></span>  
  
-   <span data-ttu-id="c96b4-927">Если количество секций превышает 2 log *n*, где *n* — диапазон входного массива, используется алгоритм хеапсорт.</span><span class="sxs-lookup"><span data-stu-id="c96b4-927">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a Heapsort algorithm.</span></span>  
  
-   <span data-ttu-id="c96b4-928">В противном случае используется алгоритм QuickSort.</span><span class="sxs-lookup"><span data-stu-id="c96b4-928">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="c96b4-929">Эта реализация выполняет нестабильную сортировку; то есть, если два элемента равны, их порядок может не сохраняться.</span><span class="sxs-lookup"><span data-stu-id="c96b4-929">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="c96b4-930">В отличие от этого, стабильная сортировка сохраняет порядок элементов, равных.</span><span class="sxs-lookup"><span data-stu-id="c96b4-930">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="c96b4-931">В среднем этот метод является операцией O (*n* log *n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>; в худшем случае это операция O (*n*<sup>2</sup>).</span><span class="sxs-lookup"><span data-stu-id="c96b4-931">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]
 
 <span data-ttu-id="c96b4-932">Следующий пример добавляет некоторые имена в объект `List<String>`, отображает список в несортированном порядке, вызывает метод <xref:System.Collections.Generic.List%601.Sort%2A>, а затем отображает отсортированный список.</span><span class="sxs-lookup"><span data-stu-id="c96b4-932">The following example adds some names to a `List<String>` object, displays the list in unsorted order, calls the <xref:System.Collections.Generic.List%601.Sort%2A> method, and then displays the sorted list.</span></span>  
  
 [!code-csharp-interactive[System.Collections.Generic.List.Sort#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/Sort1.cs#2)]
 [!code-vb[System.Collections.Generic.List.Sort#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/Sort1.vb#2)]  
  
 <span data-ttu-id="c96b4-933">В следующем коде показано, <xref:System.Collections.Generic.List%601.Sort> и <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> перегрузки методов для простого бизнес-объекта.</span><span class="sxs-lookup"><span data-stu-id="c96b4-933">The following code demonstrates the <xref:System.Collections.Generic.List%601.Sort> and <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overloads on a simple business object.</span></span> <span data-ttu-id="c96b4-934">Вызов метода <xref:System.Collections.Generic.List%601.Sort> приводит к использованию компаратора по умолчанию для типа Part, а метод <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> реализуется с помощью анонимного метода.</span><span class="sxs-lookup"><span data-stu-id="c96b4-934">Calling the <xref:System.Collections.Generic.List%601.Sort> method results in the use of the default comparer for the Part type, and the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method is implemented by using an anonymous method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/module1.vb#1)]  
  
 <span data-ttu-id="c96b4-935">В следующем примере демонстрируется перегрузка метода <xref:System.Collections.Generic.List%601.Sort> и перегрузка метода <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-935">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload.</span></span> <span data-ttu-id="c96b4-936"><xref:System.Collections.Generic.List%601> строк создается и заполняется четырьмя строками без определенного порядка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-936">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="c96b4-937">Список отображается, сортируется и отображается снова.</span><span class="sxs-lookup"><span data-stu-id="c96b4-937">The list is displayed, sorted, and displayed again.</span></span>  
  
 <span data-ttu-id="c96b4-938">Затем перегрузка метода <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> используется для поиска двух строк, которых нет в списке, а метод <xref:System.Collections.Generic.List%601.Insert%2A> используется для их вставки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-938">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload is then used to search for two strings that are not in the list, and the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert them.</span></span> <span data-ttu-id="c96b4-939">Возвращаемое значение метода <xref:System.Collections.Generic.List%601.BinarySearch%2A> в каждом случае отрицательно, поскольку строки отсутствуют в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-939">The return value of the <xref:System.Collections.Generic.List%601.BinarySearch%2A> method is negative in each case, because the strings are not in the list.</span></span> <span data-ttu-id="c96b4-940">Побитовое дополнение (оператор ~ в C# и Visual C++, `Xor`-1 в Visual Basic) этого отрицательного числа приводит к индексу первого элемента в списке, который больше, чем строка поиска, и вставка в этом расположении сохраняет порядок сортировки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-940">Taking the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</span></span> <span data-ttu-id="c96b4-941">Вторая строка поиска больше, чем любой элемент в списке, поэтому позиция вставки находится в конце списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-941">The second search string is larger than any element in the list, so the insertion position is at the end of the list.</span></span>  
  
 [!code-cpp[List\`1_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearch/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearch/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c96b4-942">Функция сравнения по умолчанию <see cref="P:System.Collections.Generic.Comparer`1.Default" /> не может найти реализацию универсального интерфейса <see cref="T:System.IComparable`1" /> или интерфейса <see cref="T:System.IComparable" /> для типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-942">The default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-943">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-943">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="list.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="c96b4-944">Реализация <see cref="T:System.Collections.Generic.IComparer`1" />, которую следует использовать при сравнении элементов, или <see langword="null" />, если должна использоваться функция сравнения по умолчанию <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-944">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span></span></param>
        <summary><span data-ttu-id="c96b4-945">Сортирует элементы во всем списке <see cref="T:System.Collections.Generic.List`1" /> с помощью указанной функции сравнения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-945">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-946">Если указано `comparer`, элементы <xref:System.Collections.Generic.List%601> сортируются с использованием указанной <xref:System.Collections.Generic.IComparer%601> реализации.</span><span class="sxs-lookup"><span data-stu-id="c96b4-946">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="c96b4-947">Если `comparer` имеет `null`, компаратор по умолчанию <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализует ли `T` типа <xref:System.IComparable%601> универсальный интерфейс, и использует эту реализацию, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="c96b4-947">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="c96b4-948">В противном случае <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализует ли тип `T` интерфейс <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-948">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="c96b4-949">Если тип `T` не реализует ни один из интерфейсов, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> создает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-949">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c96b4-950">Этот метод использует метод <xref:System.Array.Sort%2A?displayProperty=nameWithType>, который применяет сортировку гибридности следующим образом:</span><span class="sxs-lookup"><span data-stu-id="c96b4-950">This method uses the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="c96b4-951">Если размер секции меньше 16 элементов или равен ему, он использует алгоритм сортировки вставки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-951">If the partition size is less than or equal to 16 elements, it uses an insertion sort algorithm.</span></span>  
  
-   <span data-ttu-id="c96b4-952">Если количество секций превышает 2 log *n*, где *n* — диапазон входного массива, используется алгоритм хеапсорт.</span><span class="sxs-lookup"><span data-stu-id="c96b4-952">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a Heapsort algorithm.</span></span>  
  
-   <span data-ttu-id="c96b4-953">В противном случае используется алгоритм QuickSort.</span><span class="sxs-lookup"><span data-stu-id="c96b4-953">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="c96b4-954">Эта реализация выполняет нестабильную сортировку; то есть, если два элемента равны, их порядок может не сохраняться.</span><span class="sxs-lookup"><span data-stu-id="c96b4-954">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="c96b4-955">В отличие от этого, стабильная сортировка сохраняет порядок элементов, равных.</span><span class="sxs-lookup"><span data-stu-id="c96b4-955">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="c96b4-956">В среднем этот метод является операцией O (*n* log *n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>; в худшем случае это операция O (*n*<sup>2</sup>).</span><span class="sxs-lookup"><span data-stu-id="c96b4-956">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-957">В следующем примере демонстрируется перегрузка метода <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> и перегрузка метода <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-957">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="c96b4-958">В примере определяется альтернативный компаратор для строк с именем Динокомпаре, который реализует `IComparer<string>` (`IComparer(Of String)` в Visual Basic, `IComparer<String^>` в визуальном C++) универсальном интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="c96b4-958">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="c96b4-959">Средство сравнения работает следующим образом: First, сравниваемые проверяются на `null`, а пустая ссылка считается меньше, чем значение, отличное от NULL.</span><span class="sxs-lookup"><span data-stu-id="c96b4-959">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="c96b4-960">Во-вторых, длины строк сравниваются, а более длинная строка считается большей.</span><span class="sxs-lookup"><span data-stu-id="c96b4-960">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="c96b4-961">В-третьих, если длины равны, используется обычное сравнение строк.</span><span class="sxs-lookup"><span data-stu-id="c96b4-961">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="c96b4-962"><xref:System.Collections.Generic.List%601> строк создается и заполняется четырьмя строками без определенного порядка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-962">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="c96b4-963">Список отображается, сортируется с помощью альтернативного компаратора и снова отображается.</span><span class="sxs-lookup"><span data-stu-id="c96b4-963">The list is displayed, sorted using the alternate comparer, and displayed again.</span></span>  
  
 <span data-ttu-id="c96b4-964">Затем перегрузка метода <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> используется для поиска нескольких строк, которые отсутствуют в списке, с применением альтернативного компаратора.</span><span class="sxs-lookup"><span data-stu-id="c96b4-964">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</span></span> <span data-ttu-id="c96b4-965">Для вставки строк используется метод <xref:System.Collections.Generic.List%601.Insert%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-965">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert the strings.</span></span> <span data-ttu-id="c96b4-966">Эти два метода находятся в функции с именем `SearchAndInsert`, а также с кодом для получения побитового дополнения (оператор ~ в C# и визуальном C++элементе, `Xor`-1 в Visual Basic) отрицательного числа, возвращаемого <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29>, и использовать его в качестве индекса для вставки новой строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-966">These two methods are located in the function named `SearchAndInsert`, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> and use it as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c96b4-967"><paramref name="comparer" /> является <see langword="null" />, и функция сравнения по умолчанию <see cref="P:System.Collections.Generic.Comparer`1.Default" /> не может найти реализацию универсального интерфейса <see cref="T:System.IComparable`1" /> или интерфейса <see cref="T:System.IComparable" /> для типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-967"><paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-968">Реализация <paramref name="comparer" /> вызвала ошибку во время сортировки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-968">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="c96b4-969">Например, <paramref name="comparer" /> может не возвратить 0 при сравнении элемента с самим собой.</span><span class="sxs-lookup"><span data-stu-id="c96b4-969">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-970">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-970">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="member this.Sort : Comparison&lt;'T&gt; -&gt; unit" Usage="list.Sort comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison"><span data-ttu-id="c96b4-971"><see cref="T:System.Comparison`1" />, используемый при сравнении элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-971">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span></span></param>
        <summary><span data-ttu-id="c96b4-972">Сортирует элементы во всем списке <see cref="T:System.Collections.Generic.List`1" /> с использованием указанного <see cref="T:System.Comparison`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-972">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified <see cref="T:System.Comparison`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-973">Если указано `comparison`, элементы <xref:System.Collections.Generic.List%601> сортируются с помощью метода, представленного делегатом.</span><span class="sxs-lookup"><span data-stu-id="c96b4-973">If `comparison` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the method represented by the delegate.</span></span>  
  
 <span data-ttu-id="c96b4-974">Если `comparison` `null`, выдается <xref:System.ArgumentNullException>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-974">If `comparison` is `null`, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="c96b4-975">Этот метод использует <xref:System.Array.Sort%2A?displayProperty=nameWithType>, который применяет сортировку гибридности следующим образом:</span><span class="sxs-lookup"><span data-stu-id="c96b4-975">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="c96b4-976">Если размер секции меньше 16 элементов или равен ему, он использует алгоритм сортировки вставки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-976">If the partition size is less than or equal to 16 elements, it uses an insertion sort algorithm</span></span>  
  
-   <span data-ttu-id="c96b4-977">Если количество секций превышает 2 log *n*, где *n* — диапазон входного массива, используется алгоритм [хеапсорт](https://en.wikipedia.org/wiki/Heapsort) .</span><span class="sxs-lookup"><span data-stu-id="c96b4-977">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="c96b4-978">В противном случае используется алгоритм QuickSort.</span><span class="sxs-lookup"><span data-stu-id="c96b4-978">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="c96b4-979">Эта реализация выполняет нестабильную сортировку; то есть, если два элемента равны, их порядок может не сохраняться.</span><span class="sxs-lookup"><span data-stu-id="c96b4-979">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="c96b4-980">В отличие от этого, стабильная сортировка сохраняет порядок элементов, равных.</span><span class="sxs-lookup"><span data-stu-id="c96b4-980">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="c96b4-981">В среднем этот метод является операцией O (*n* log *n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>; в худшем случае это операция O (*n*<sup>2</sup>).</span><span class="sxs-lookup"><span data-stu-id="c96b4-981">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-982">В следующем коде показано, <xref:System.Collections.Generic.List%601.Sort%2A> и <xref:System.Collections.Generic.List%601.Sort%2A> перегрузки методов для простого бизнес-объекта.</span><span class="sxs-lookup"><span data-stu-id="c96b4-982">The following code demonstrates the <xref:System.Collections.Generic.List%601.Sort%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> method overloads on a simple business object.</span></span> <span data-ttu-id="c96b4-983">Вызов метода <xref:System.Collections.Generic.List%601.Sort%2A> приводит к использованию компаратора по умолчанию для типа Part, а метод <xref:System.Collections.Generic.List%601.Sort%2A> реализуется с помощью анонимного метода.</span><span class="sxs-lookup"><span data-stu-id="c96b4-983">Calling the <xref:System.Collections.Generic.List%601.Sort%2A> method results in the use of the default comparer for the Part type, and the <xref:System.Collections.Generic.List%601.Sort%2A> method is implemented using an anonymous method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/module1.vb#1)]  
  
 <span data-ttu-id="c96b4-984">В следующем примере показана перегрузка метода <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-984">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="c96b4-985">В примере определяется альтернативный метод сравнения для строк с именем `CompareDinosByLength`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-985">The example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="c96b4-986">Этот метод работает следующим образом: во-первых, сравниваемые проверяются на `null`, а пустая ссылка считается меньше, чем значение, отличное от NULL.</span><span class="sxs-lookup"><span data-stu-id="c96b4-986">This method works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="c96b4-987">Во-вторых, длины строк сравниваются, а более длинная строка считается большей.</span><span class="sxs-lookup"><span data-stu-id="c96b4-987">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="c96b4-988">В-третьих, если длины равны, используется обычное сравнение строк.</span><span class="sxs-lookup"><span data-stu-id="c96b4-988">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="c96b4-989"><xref:System.Collections.Generic.List%601> строк создается и заполняется четырьмя строками без определенного порядка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-989">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="c96b4-990">Список также содержит пустую строку и пустую ссылку.</span><span class="sxs-lookup"><span data-stu-id="c96b4-990">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="c96b4-991">Список отображается, сортируется с помощью <xref:System.Comparison%601> универсального делегата, представляющего метод `CompareDinosByLength`, и снова отображается.</span><span class="sxs-lookup"><span data-stu-id="c96b4-991">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[List\`1_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortComparison/cs/source.cs#1)]
 [!code-vb[List\`1_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortComparison/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-992"><paramref name="comparison" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-992"><paramref name="comparison" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-993">Реализация <paramref name="comparison" /> вызвала ошибку во время сортировки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-993">The implementation of <paramref name="comparison" /> caused an error during the sort.</span></span> <span data-ttu-id="c96b4-994">Например, <paramref name="comparison" /> может не возвратить 0 при сравнении элемента с самим собой.</span><span class="sxs-lookup"><span data-stu-id="c96b4-994">For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <altmember cref="T:System.Comparison`1" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-995">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-995">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (int index, int count, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(int32 index, int32 count, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (index As Integer, count As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(int index, int count, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : int * int * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="list.Sort (index, count, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c96b4-996">Индекс (с нуля) начала диапазона, который требуется отсортировать.</span><span class="sxs-lookup"><span data-stu-id="c96b4-996">The zero-based starting index of the range to sort.</span></span></param>
        <param name="count"><span data-ttu-id="c96b4-997">Длина диапазона сортировки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-997">The length of the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="c96b4-998">Реализация <see cref="T:System.Collections.Generic.IComparer`1" />, которую следует использовать при сравнении элементов, или <see langword="null" />, если должна использоваться функция сравнения по умолчанию <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-998">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span></span></param>
        <summary><span data-ttu-id="c96b4-999">Сортирует элементы в диапазоне элементов списка <see cref="T:System.Collections.Generic.List`1" /> с помощью указанной функции сравнения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-999">Sorts the elements in a range of elements in <see cref="T:System.Collections.Generic.List`1" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1000">Если указано `comparer`, элементы <xref:System.Collections.Generic.List%601> сортируются с использованием указанной <xref:System.Collections.Generic.IComparer%601> реализации.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1000">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="c96b4-1001">Если `comparer` имеет `null`, компаратор по умолчанию <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализует ли `T` типа <xref:System.IComparable%601> универсальный интерфейс, и использует эту реализацию, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1001">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="c96b4-1002">В противном случае <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализует ли тип `T` интерфейс <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1002">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="c96b4-1003">Если тип `T` не реализует ни один из интерфейсов, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> создает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1003">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c96b4-1004">Этот метод использует <xref:System.Array.Sort%2A?displayProperty=nameWithType>, который применяет сортировку гибридности следующим образом:</span><span class="sxs-lookup"><span data-stu-id="c96b4-1004">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="c96b4-1005">Если размер секции меньше 16 элементов или равен ему, он использует алгоритм сортировки вставки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1005">If the partition size is less than or equal to 16 elements, it uses an insertion sort algorithm</span></span>  
  
-   <span data-ttu-id="c96b4-1006">Если количество секций превышает 2 log *n*, где *n* — диапазон входного массива, используется алгоритм [хеапсорт](https://en.wikipedia.org/wiki/Heapsort) .</span><span class="sxs-lookup"><span data-stu-id="c96b4-1006">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="c96b4-1007">В противном случае используется алгоритм QuickSort.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1007">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="c96b4-1008">Эта реализация выполняет нестабильную сортировку; то есть, если два элемента равны, их порядок может не сохраняться.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1008">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="c96b4-1009">В отличие от этого, стабильная сортировка сохраняет порядок элементов, равных.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1009">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="c96b4-1010">В среднем этот метод является операцией O (*n* log *n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>; в худшем случае это операция O (*n*<sup>2</sup>).</span><span class="sxs-lookup"><span data-stu-id="c96b4-1010">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-1011">В следующем примере демонстрируется перегрузка метода <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> и перегрузка метода <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1011">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="c96b4-1012">В примере определяется альтернативный компаратор для строк с именем Динокомпаре, который реализует `IComparer<string>` (`IComparer(Of String)` в Visual Basic, `IComparer<String^>` в визуальном C++) универсальном интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1012">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="c96b4-1013">Средство сравнения работает следующим образом: First, сравниваемые проверяются на `null`, а пустая ссылка считается меньше, чем значение, отличное от NULL.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1013">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="c96b4-1014">Во-вторых, длины строк сравниваются, а более длинная строка считается большей.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1014">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="c96b4-1015">В-третьих, если длины равны, используется обычное сравнение строк.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1015">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="c96b4-1016"><xref:System.Collections.Generic.List%601> строк создается и заполняется именами из пяти динозавров хербивораус и тремя карнивораус динозаврами.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1016">A <xref:System.Collections.Generic.List%601> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</span></span> <span data-ttu-id="c96b4-1017">В каждой из этих двух групп имена не имеют определенного порядка сортировки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1017">Within each of the two groups, the names are not in any particular sort order.</span></span> <span data-ttu-id="c96b4-1018">Отобразится список, диапазон хербиворес будет отсортирован с помощью альтернативного компаратора, а список снова отобразится.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1018">The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</span></span>  
  
 <span data-ttu-id="c96b4-1019">Затем перегрузка метода <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> используется для поиска только диапазона хербиворес для "Брачиосаурус".</span><span class="sxs-lookup"><span data-stu-id="c96b4-1019">The <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search only the range of herbivores for "Brachiosaurus".</span></span> <span data-ttu-id="c96b4-1020">Строка не найдена и побитовое дополнение (оператор ~ в C# и Visual C++, `Xor`-1 в Visual Basic) отрицательного числа, возвращенного методом <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29>, используется в качестве индекса для вставки новой строки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1020">The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method is used as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparerRange#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparerRange#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparerRange#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparerRange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-1021">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1021"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="c96b4-1022">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-1022">-or-</span></span> 
 <span data-ttu-id="c96b4-1023">Значение параметра <paramref name="count" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1023"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-1024"><paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1024"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.Generic.List`1" />.</span></span>  
  
<span data-ttu-id="c96b4-1025">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-1025">-or-</span></span> 
<span data-ttu-id="c96b4-1026">Реализация <paramref name="comparer" /> вызвала ошибку во время сортировки.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1026">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="c96b4-1027">Например, <paramref name="comparer" /> может не возвратить 0 при сравнении элемента с самим собой.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1027">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c96b4-1028"><paramref name="comparer" /> является <see langword="null" />, и функция сравнения по умолчанию <see cref="P:System.Collections.Generic.Comparer`1.Default" /> не может найти реализацию универсального интерфейса <see cref="T:System.IComparable`1" /> или интерфейса <see cref="T:System.IComparable" /> для типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1028"><paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="c96b4-1029">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="c96b4-1029">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;T&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c96b4-1030">Получает значение, указывающее, является ли объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1030">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="c96b4-1031">Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1031"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="c96b4-1032">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.List`1" /> это свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1032">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1033">После создания коллекции, доступной только для чтения, не разрешается добавление элементов в коллекцию, их изменение или удаление.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1033">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="c96b4-1034">Коллекция, доступная только для чтения, — это просто коллекция с оболочкой, которая предотвращает изменение коллекции. Таким образом, если в базовую коллекцию вносятся изменения, то эти изменения отражаются в коллекции только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1034">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="c96b4-1035">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-1035">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c96b4-1036">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1036">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="c96b4-1037">Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, который может использоваться для итерации элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1037">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1038">Оператор `foreach` C# языка (`for each` в C++`For Each` в Visual Basic) скрывает сложность перечислителей.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1038">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="c96b4-1039">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1039">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c96b4-1040">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1040">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c96b4-1041">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1041">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c96b4-1042">В этой позиции свойство <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1042">At this position, the <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property is undefined.</span></span> <span data-ttu-id="c96b4-1043">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции перед чтением значения <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1043">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="c96b4-1044">Свойство <xref:System.Collections.Generic.IEnumerator%601.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1044">The <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="c96b4-1045"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.Generic.IEnumerator%601.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1045"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c96b4-1046">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель размещается после последнего элемента в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1046">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c96b4-1047">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1047">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c96b4-1048">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> вернул `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1048">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="c96b4-1049">Значение свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не может быть повторно задано первому элементу коллекции; вместо этого следует создать новый экземпляр перечислителя.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1049">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="c96b4-1050">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1050">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c96b4-1051">Если в коллекцию вносятся изменения, например добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1051">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c96b4-1052">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1052">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c96b4-1053">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1053">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c96b4-1054">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1054">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c96b4-1055">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1055">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="c96b4-1056">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-1056">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c96b4-1057">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1057">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="c96b4-1058">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1058">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="c96b4-1059">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1059">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="c96b4-1060">Копирует элементы коллекции <see cref="T:System.Collections.ICollection" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1060">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c96b4-1061">Если тип источника <xref:System.Collections.ICollection> не может быть автоматически приведен к типу `array`назначения, неуниверсальные реализации <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> вызывают <xref:System.InvalidCastException>, тогда как универсальные реализации создают <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1061">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="c96b4-1062">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1062">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-1063"><paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1063"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-1064">Значение параметра <paramref name="arrayIndex" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1064"><paramref name="arrayIndex" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-1065">Массив <paramref name="array" /> является многомерным.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1065"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="c96b4-1066">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-1066">-or-</span></span> 
 <span data-ttu-id="c96b4-1067">В массиве <paramref name="array" /> не используется индексация, начинающаяся с нуля.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1067"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
<span data-ttu-id="c96b4-1068">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-1068">-or-</span></span> 
<span data-ttu-id="c96b4-1069">Число элементов в исходном массиве <see cref="T:System.Collections.ICollection" /> больше доступного места от положения, заданного значением параметра <paramref name="arrayIndex" />, до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1069">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span>  
  
<span data-ttu-id="c96b4-1070">-или-</span><span class="sxs-lookup"><span data-stu-id="c96b4-1070">-or-</span></span> 
<span data-ttu-id="c96b4-1071">Тип исходного массива <see cref="T:System.Collections.ICollection" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1071">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c96b4-1072">Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="c96b4-1072">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="c96b4-1073"><see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1073"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="c96b4-1074">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.List`1" /> это свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1074">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1075">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1075">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="c96b4-1076">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1076">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="c96b4-1077">В редких случаях, когда перечисление планируется с доступом на запись, можно заблокировать коллекцию во время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1077">In the rare case where enumeration contends with write accesses, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c96b4-1078">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1078">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c96b4-1079"><xref:System.Collections.ICollection.SyncRoot%2A> возвращает объект, который можно использовать для синхронизации доступа к <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1079"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="c96b4-1080">Синхронизация вступает в силу только в том случае, если все потоки блокируют этот объект перед доступом к коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1080">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="c96b4-1081">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-1081">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c96b4-1082">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1082">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="c96b4-1083">Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1083">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="c96b4-1084">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.List`1" /> это свойство всегда возвращает текущий экземпляр.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1084">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1085">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1085">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="c96b4-1086">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1086">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="c96b4-1087">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1087">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c96b4-1088">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1088">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c96b4-1089"><xref:System.Collections.ICollection.SyncRoot%2A> возвращает объект, который можно использовать для синхронизации доступа к <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1089"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="c96b4-1090">Синхронизация вступает в силу только в том случае, если все потоки блокируют этот объект перед доступом к коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1090">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="c96b4-1091">В следующем коде показано использование свойства <xref:System.Collections.ICollection.SyncRoot%2A> для C#, C++и Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1091">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot)   
{  
    // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
    ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try   
{  
    Monitor::Enter(ic->SyncRoot);  
    // Access the collection.  
}  
finally   
{  
    Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="c96b4-1092">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-1092">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c96b4-1093">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1093">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="c96b4-1094">Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1094">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1095">Оператор `foreach` C# языка (`for each` в C++`For Each` в Visual Basic) скрывает сложность перечислителей.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1095">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="c96b4-1096">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1096">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c96b4-1097">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1097">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c96b4-1098">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1098">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c96b4-1099">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1099"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="c96b4-1100">В этой позиции свойство <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1100">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="c96b4-1101">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции перед чтением значения <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1101">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="c96b4-1102">Свойство <xref:System.Collections.IEnumerator.Current%2A> возвращает один и тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1102">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="c96b4-1103"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1103"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c96b4-1104">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель размещается после последнего элемента в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1104">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c96b4-1105">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1105">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c96b4-1106">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> вернул `false`, <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1106">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c96b4-1107">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1107">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="c96b4-1108">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1108">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c96b4-1109">Если в коллекцию вносятся изменения, например добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1109">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c96b4-1110">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1110">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="c96b4-1111">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1111">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c96b4-1112">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1112">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c96b4-1113">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1113">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="c96b4-1114">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-1114">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-1115">Объект <see cref="T:System.Object" />, добавляемый в список <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1115">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="c96b4-1116">Добавляет элемент в коллекцию <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1116">Adds an item to the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="c96b4-1117">Позиция, на которую вставлен новый элемент.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1117">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1118">Если <xref:System.Collections.Generic.List%601.Count%2A> меньше <xref:System.Collections.Generic.List%601.Capacity%2A>, этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-1118">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="c96b4-1119">Если емкость необходимо увеличить для размещения нового элемента, этот метод становится операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1119">If the capacity needs to be increased to accommodate the new element, this method becomes an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-1120"><paramref name="item" /> имеет тип, который не может быть назначен <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1120"><paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-1121">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1121">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="c96b4-1122">Определяет, содержит ли коллекция <see cref="T:System.Collections.IList" /> указанное значение.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1122">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="c96b4-1123">Значение <see langword="true" />, если параметр <paramref name="item" /> найден в коллекции <see cref="T:System.Collections.IList" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1123"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1124">Этот метод определяет равенство, используя <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> компаратора проверки на равенство по умолчанию для `T`, тип значений в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1124">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="c96b4-1125">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1125">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-1126">Объект для поиска в <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1126">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="c96b4-1127">Определяет индекс заданного элемента в списке <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1127">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="c96b4-1128">Индекс <paramref name="item" />, если он найден в списке; в противном случае — значение -1.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1128">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1129">Этот метод определяет равенство, используя <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> компаратора проверки на равенство по умолчанию для `T`, тип значений в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1129">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="c96b4-1130">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1130">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-1131"><paramref name="item" /> имеет тип, который не может быть назначен <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1131"><paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c96b4-1132">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1132">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="c96b4-1133">Объект, вставляемый в коллекцию <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1133">The object to insert into the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="c96b4-1134">Вставляет элемент в список <see cref="T:System.Collections.IList" /> по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1134">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1135">Если значение параметра `index` равно количеству элементов в списке <xref:System.Collections.IList>, элемент `item` добавляется в конец списка.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1135">If `index` equals the number of items in the <xref:System.Collections.IList>, then `item` is appended to the end.</span></span>  
  
 <span data-ttu-id="c96b4-1136">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1136">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-1137"><paramref name="index" /> не является допустимым индексом в <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1137"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-1138"><paramref name="item" /> имеет тип, который не может быть назначен <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1138"><paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c96b4-1139">Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.IList" /> фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1139">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="c96b4-1140">Значение <see langword="true" />, если словарь <see cref="T:System.Collections.IList" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1140"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="c96b4-1141">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.List`1" /> это свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1141">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1142">В созданной коллекции фиксированного размера запрещается добавлять или удалять элементы, но разрешается изменять существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1142">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="c96b4-1143">Коллекция с фиксированным размером — это просто коллекция с оболочкой, которая предотвращает добавление и удаление элементов. Таким образом, если в базовую коллекцию вносятся изменения, включая добавление или удаление элементов, Коллекция фиксированного размера отражает эти изменения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1143">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="c96b4-1144">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-1144">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c96b4-1145">Получает значение, указывающее, является ли объект <see cref="T:System.Collections.IList" /> доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1145">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="c96b4-1146">Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.IList" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1146"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="c96b4-1147">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.List`1" /> это свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1147">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1148">После создания коллекции, доступной только для чтения, не разрешается добавление элементов в коллекцию, их изменение или удаление.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1148">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="c96b4-1149">Коллекция, доступная только для чтения, — это просто коллекция с оболочкой, которая предотвращает изменение коллекции. Таким образом, если в базовую коллекцию вносятся изменения, то эти изменения отражаются в коллекции только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1149">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="c96b4-1150">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-1150">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c96b4-1151">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1151">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="c96b4-1152">Возвращает или задает элемент по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1152">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="c96b4-1153">Элемент, расположенный по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1153">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1154">Язык использует ключевое слово this для определения индексаторов вместо реализации свойства <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A>. [](~/docs/csharp/language-reference/keywords/this.md) C#</span><span class="sxs-lookup"><span data-stu-id="c96b4-1154">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="c96b4-1155">В языке Visual Basic в качестве свойства по умолчанию реализовано свойство <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A>, предоставляющее те же возможности индексирования.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1155">Visual Basic implements <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="c96b4-1156">Получение значения этого свойства является операцией O (1); Задание свойства также является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="c96b4-1156">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c96b4-1157"><paramref name="index" /> не является допустимым индексом в <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1157"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-1158">Свойство задано, и тип параметра <paramref name="value" /> не может быть назначен <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1158">The property is set and <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c96b4-1159">Объект, который необходимо удалить из коллекции <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1159">The object to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="c96b4-1160">Удаляет первое вхождение указанного объекта из коллекции <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1160">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1161">Этот метод определяет равенство, используя <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> компаратора проверки на равенство по умолчанию для `T`, тип значений в списке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1161">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="c96b4-1162">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1162">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c96b4-1163"><paramref name="item" /> имеет тип, который не может быть назначен <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1163"><paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="list.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c96b4-1164">Копирует элементы списка <see cref="T:System.Collections.Generic.List`1" /> в новый массив.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1164">Copies the elements of the <see cref="T:System.Collections.Generic.List`1" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="c96b4-1165">Массив, содержащий копии элементов списка <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1165">An array containing copies of the elements of the <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1166">Элементы копируются с помощью <xref:System.Array.Copy%2A?displayProperty=nameWithType>, которая является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1166">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="c96b4-1167">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1167">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-1168">В следующем примере демонстрируется метод <xref:System.Collections.Generic.List%601.ToArray%2A> и другие методы класса <xref:System.Collections.Generic.List%601>, действующие для диапазонов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1168">The following example demonstrates the <xref:System.Collections.Generic.List%601.ToArray%2A> method and other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="c96b4-1169">В конце примера метод <xref:System.Collections.Generic.List%601.GetRange%2A> используется для получения трех элементов из списка, начиная с позиции индекса 2.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1169">At the end of the example, the <xref:System.Collections.Generic.List%601.GetRange%2A> method is used to get three items from the list, beginning with index location 2.</span></span> <span data-ttu-id="c96b4-1170">Метод <xref:System.Collections.Generic.List%601.ToArray%2A> вызывается для результирующего <xref:System.Collections.Generic.List%601>, создавая массив из трех элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1170">The <xref:System.Collections.Generic.List%601.ToArray%2A> method is called on the resulting <xref:System.Collections.Generic.List%601>, creating an array of three elements.</span></span> <span data-ttu-id="c96b4-1171">Отображаются элементы массива.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1171">The elements of the array are displayed.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="list.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c96b4-1172">Задает емкость, равную фактическому числу элементов в списке <see cref="T:System.Collections.Generic.List`1" />, если это число меньше порогового значения.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1172">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.List`1" />, if that number is less than a threshold value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1173">Этот метод можно использовать для снижения нагрузки на память коллекции, если в коллекцию не добавляются новые элементы.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1173">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="c96b4-1174">Однако стоимость повторного выделения и копирования больших <xref:System.Collections.Generic.List%601> может быть значительной, поэтому метод <xref:System.Collections.Generic.List%601.TrimExcess%2A> не выполняет никаких действий, если список имеет более 90 процентов емкости.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1174">The cost of reallocating and copying a large <xref:System.Collections.Generic.List%601> can be considerable, however, so the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="c96b4-1175">Это позволяет избежать больших затрат на повторное распределение для относительно небольшого выигрыша.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1175">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c96b4-1176">Текущее пороговое значение, равное 90%, может измениться в будущих выпусках.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1176">The current threshold of 90 percent might change in future releases.</span></span>  
  
 <span data-ttu-id="c96b4-1177">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1177">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="c96b4-1178">Чтобы сбросить <xref:System.Collections.Generic.List%601> до начального состояния, вызовите метод <xref:System.Collections.Generic.List%601.Clear%2A> перед вызовом метода <xref:System.Collections.Generic.List%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1178">To reset a <xref:System.Collections.Generic.List%601> to its initial state, call the <xref:System.Collections.Generic.List%601.Clear%2A> method before calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="c96b4-1179">Удаление пустой <xref:System.Collections.Generic.List%601> задает емкость объекта <xref:System.Collections.Generic.List%601> емкость по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1179">Trimming an empty <xref:System.Collections.Generic.List%601> sets the capacity of the <xref:System.Collections.Generic.List%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="c96b4-1180">Емкость также можно задать с помощью свойства <xref:System.Collections.Generic.List%601.Capacity%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1180">The capacity can also be set using the <xref:System.Collections.Generic.List%601.Capacity%2A> property.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="c96b4-1181">В следующем примере показано, как проверить емкость и количество <xref:System.Collections.Generic.List%601>, которые содержат простой бизнес-объект, и демонстрирует использование метода <xref:System.Collections.Generic.List%601.TrimExcess%2A> для удаления дополнительной емкости.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1181">The following example demonstrates how to check the capacity and count of a  <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="c96b4-1182">В следующем примере демонстрируется метод <xref:System.Collections.Generic.List%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1182">The following example demonstrates the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="c96b4-1183">Несколько свойств и методов класса <xref:System.Collections.Generic.List%601> используются для добавления, вставки и удаления элементов из списка строк.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1183">Several properties and methods of the <xref:System.Collections.Generic.List%601> class are used to add, insert, and remove items from a list of strings.</span></span> <span data-ttu-id="c96b4-1184">Затем используется метод <xref:System.Collections.Generic.List%601.TrimExcess%2A> для уменьшения емкости, соответствующей количеству, и отображаются свойства <xref:System.Collections.Generic.List%601.Capacity%2A> и <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1184">Then the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="c96b4-1185">Если неиспользуемая емкость была меньше 10% от общей емкости, размер списка не изменится.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1185">If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</span></span> <span data-ttu-id="c96b4-1186">Наконец, содержимое списка удаляется.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1186">Finally, the contents of the list are cleared.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.Clear" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TrueForAll">
      <MemberSignature Language="C#" Value="public bool TrueForAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrueForAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrueForAll (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrueForAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.TrueForAll : Predicate&lt;'T&gt; -&gt; bool" Usage="list.TrueForAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="c96b4-1187">Делегат <see cref="T:System.Predicate`1" />, определяющий условия, проверяемые для элементов.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1187">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions to check against the elements.</span></span></param>
        <summary><span data-ttu-id="c96b4-1188">Определяет, все ли элементы списка <see cref="T:System.Collections.Generic.List`1" /> удовлетворяют условиям указанного предиката.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1188">Determines whether every element in the <see cref="T:System.Collections.Generic.List`1" /> matches the conditions defined by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="c96b4-1189"><see langword="true" />, если каждый элемент списка <see cref="T:System.Collections.Generic.List`1" /> удовлетворяет условиям заданного предиката, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1189"><see langword="true" /> if every element in the <see cref="T:System.Collections.Generic.List`1" /> matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c96b4-1190">Если в списке нет элементов, возвращается <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1190">If the list has no elements, the return value is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c96b4-1191"><xref:System.Predicate%601> является делегатом для метода, который возвращает `true`, если переданный ему объект соответствует условиям, определенным в делегате.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1191">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="c96b4-1192">Элементы текущего <xref:System.Collections.Generic.List%601> по отдельности передаются делегату <xref:System.Predicate%601>, а обработка останавливается, когда делегат возвращает `false` для любого элемента.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1192">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and processing is stopped when the delegate returns `false` for any element.</span></span> <span data-ttu-id="c96b4-1193">Элементы обрабатываются по порядку, а все вызовы выполняются в одном потоке.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1193">The elements are processed in order, and all calls are made on a single thread.</span></span>  
  
 <span data-ttu-id="c96b4-1194">Этот метод является операцией O (*n*), где *n* — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1194">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c96b4-1195">В следующем примере демонстрируется метод <xref:System.Collections.Generic.List%601.TrueForAll%2A> и несколько других методов, использующих <xref:System.Predicate%601> универсальный делегат.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1195">The following example demonstrates the <xref:System.Collections.Generic.List%601.TrueForAll%2A> method and several other methods that use <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="c96b4-1196">Создается <xref:System.Collections.Generic.List%601> строк, содержащая 8 названий динозавров, два из которых (в позициях 1 и 5) заканчиваются на "саурус".</span><span class="sxs-lookup"><span data-stu-id="c96b4-1196">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="c96b4-1197">В примере также определяется метод предиката поиска с именем `EndsWithSaurus`, который принимает строковый параметр и возвращает логическое значение, указывающее, заканчивается ли входная строка в "саурус".</span><span class="sxs-lookup"><span data-stu-id="c96b4-1197">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="c96b4-1198">Метод <xref:System.Collections.Generic.List%601.TrueForAll%2A> проходит по списку с самого начала, передавая каждый элемент в свою очередь методу `EndsWithSaurus`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1198">The <xref:System.Collections.Generic.List%601.TrueForAll%2A> method traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="c96b4-1199">Поиск останавливается, когда метод `EndsWithSaurus` возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1199">The search stops when the `EndsWithSaurus` method returns `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c96b4-1200">В C# и Visual Basic нет необходимости явно создавать делегат `Predicate<string>` (`Predicate(Of String)` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c96b4-1200">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="c96b4-1201">Эти языки выводят правильный делегат из контекста и создают его автоматически.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1201">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c96b4-1202"><paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c96b4-1202"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
  </Members>
</Type>
