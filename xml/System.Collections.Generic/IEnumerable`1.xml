<Type Name="IEnumerable&lt;T&gt;" FullName="System.Collections.Generic.IEnumerable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a15e40f8b5fcfba97f002f47821b6cc779cd08c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69334991" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumerable&lt;out T&gt; : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerable`1&lt;+ T&gt; implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEnumerable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerable(Of Out T)&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumerable : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type seq&lt;'T&gt; = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">Тип объектов для перечисления.</typeparam>
    <summary>Предоставляет перечислитель, который поддерживает простой перебор элементов в указанной коллекции.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.Generic.IEnumerable%601>— Это базовый интерфейс для коллекций <xref:System.Collections.Generic> в пространстве имен, таких как <xref:System.Collections.Generic.Dictionary%602> <xref:System.Collections.Generic.List%601>, и <xref:System.Collections.Generic.Stack%601> , а также другие универсальные <xref:System.Collections.ObjectModel.ObservableCollection%601> коллекции <xref:System.Collections.Concurrent.ConcurrentStack%601>, такие как и. Коллекции, реализующие <xref:System.Collections.Generic.IEnumerable%601> , можно перечислить с `foreach` помощью инструкции.  
  
 Дополнительные сведения о версии этого интерфейса, не являющейся универсальной <xref:System.Collections.IEnumerable?displayProperty=nameWithType>, см. в разделе.  
  
 <xref:System.Collections.Generic.IEnumerable%601>содержит единственный метод, который необходимо реализовать при реализации этого интерфейса. <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>, возвращающий<xref:System.Collections.Generic.IEnumerator%601> объект. Возвращаемый <xref:System.Collections.Generic.IEnumerator%601> объект предоставляет возможность итерации по коллекции, предоставляя <xref:System.Collections.Generic.IEnumerator%601.Current%2A> свойство.  
  
   
  
## Examples  
 В следующем примере показано, как реализовать <xref:System.Collections.Generic.IEnumerable%601> интерфейс и как использовать эту реализацию для создания запроса LINQ. При реализации <xref:System.Collections.Generic.IEnumerable%601>необходимо также <xref:System.Collections.Generic.IEnumerator%601> реализовать или, C# чтобы можно было использовать ключевое слово [yield](~/docs/csharp/language-reference/keywords/yield.md) . <xref:System.Collections.Generic.IEnumerator%601> Реализация<xref:System.IDisposable> также должна быть реализована, что вы увидите в этом примере.  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 Еще один C# пример, демонстрирующий реализацию <xref:System.Collections.Generic.IEnumerable%601> интерфейса, см. в [примере универсальных шаблонов](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593). В `yield` этом примере вместо реализации <xref:System.Collections.Generic.IEnumerator%601>используется ключевое слово.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />параметр включен для контроля четности с неуниверсальными коллекциями; Реализация <see cref="T:System.Collections.Generic.IEnumerable`1" /> позволяет передавать универсальную коллекцию в метод, который принимает <see cref="T:System.Collections.IEnumerable" /> объект.</para></block>
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
    <altmember cref="N:System.Collections" />
    <related type="Article" href="https://msdn.microsoft.com/library/c60d7589-51f2-4463-a2d5-22506bbc1554">Пошаговое руководство. Реализация IEnumerable(Of T) в Visual Basic</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7">Итераторы (C# и Visual Basic)</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&amp;pathId=1364935593">Пример универсальных шаблонов</related>
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;out T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Out T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="seq.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель, выполняющий перебор элементов в коллекции.</summary>
        <returns>Перечислитель, который можно использовать для итерации по коллекции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемый <xref:System.Collections.Generic.IEnumerator%601> объект предоставляет возможность итерации по коллекции, предоставляя <xref:System.Collections.Generic.IEnumerator%601.Current%2A> свойство. Перечислители можно использовать для чтения данных в коллекции, но не для изменения коллекции.  
  
 Изначально перечислитель располагается перед первым элементом коллекции. В этой позиции значение свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не определено. Поэтому необходимо вызвать <xref:System.Collections.IEnumerator.MoveNext%2A> метод, чтобы переместить перечислитель к первому элементу коллекции перед считыванием <xref:System.Collections.Generic.IEnumerator%601.Current%2A>значения.  
  
 <xref:System.Collections.Generic.IEnumerator%601.Current%2A>возвращает тот же объект до <xref:System.Collections.IEnumerator.MoveNext%2A> тех пор, пока <xref:System.Collections.IEnumerator.MoveNext%2A> не <xref:System.Collections.Generic.IEnumerator%601.Current%2A> будет вызван снова как набор для следующего элемента.  
  
 Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель располагается после последнего элемента в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`. Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают. `false` Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращен `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> значение не определено. Значение свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не может быть повторно задано первому элементу коллекции; вместо этого следует создать новый экземпляр перечислителя.  

 Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, поведение перечислителя не определено.  
  
 Перечислитель не имеет монопольного доступа к коллекции, поэтому перечислитель остается допустимым, пока коллекция остается неизменной. Если в коллекцию вносятся изменения, например добавление, изменение или удаление элементов, перечислитель становится недействительным и могут возникнуть непредвиденные результаты. Кроме того, перечисление коллекции не является потокобезопасной процедурой. Чтобы обеспечить потокобезопасность, следует заблокировать коллекцию во время перечислителя или реализовать синхронизацию для коллекции.  
  
 Реализации по умолчанию коллекций в <xref:System.Collections.Generic?displayProperty=nameWithType> пространстве имен не синхронизированы.  
  
   
  
## Examples  
 В следующем примере показано, как реализовать <xref:System.Collections.Generic.IEnumerable%601> интерфейс и использовать эту реализацию для создания запроса LINQ. При реализации <xref:System.Collections.Generic.IEnumerable%601>необходимо также <xref:System.Collections.Generic.IEnumerator%601> реализовать или, C# чтобы можно было использовать ключевое слово [yield](~/docs/csharp/language-reference/keywords/yield.md) . <xref:System.Collections.Generic.IEnumerator%601> Реализация<xref:System.IDisposable> также должна быть реализована, что вы увидите в этом примере.  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 Еще один C# пример, демонстрирующий реализацию <xref:System.Collections.Generic.IEnumerable%601> интерфейса, см. в [примере универсальных шаблонов](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593). В `yield` этом примере вместо реализации <xref:System.Collections.Generic.IEnumerator%601>используется ключевое слово.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
        <related type="Article" href="https://msdn.microsoft.com/library/c60d7589-51f2-4463-a2d5-22506bbc1554">Пошаговое руководство. Реализация IEnumerable(Of T) в Visual Basic</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7">Итераторы (C# и Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>
