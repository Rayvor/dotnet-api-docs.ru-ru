<Type Name="SortedDictionary&lt;TKey,TValue&gt;+KeyCollection" FullName="System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+KeyCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd439fcba6824d5c480111f3b078b7f0c5339d0c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70689256" /></Metadata><TypeSignature Language="C#" Value="public sealed class SortedDictionary&lt;TKey,TValue&gt;.KeyCollection : System.Collections.Generic.ICollection&lt;TKey&gt;, System.Collections.Generic.IEnumerable&lt;TKey&gt;, System.Collections.Generic.IReadOnlyCollection&lt;TKey&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable sealed beforefieldinit SortedDictionary`2/KeyCollection&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!TKey&gt;, class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!TKey&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SortedDictionary(Of TKey, TValue).KeyCollection&#xA;Implements ICollection, ICollection(Of TKey), IEnumerable(Of TKey), IReadOnlyCollection(Of TKey)" />
  <TypeSignature Language="C++ CLI" Value="public: ref class SortedDictionary&lt;TKey, TValue&gt;::KeyCollection sealed : System::Collections::Generic::ICollection&lt;TKey&gt;, System::Collections::Generic::IEnumerable&lt;TKey&gt;, System::Collections::Generic::IReadOnlyCollection&lt;TKey&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type SortedDictionary&lt;'Key, 'Value&gt;.KeyCollection = class&#xA;    interface ICollection&lt;'Key&gt;&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'Key&gt;&#xA;    interface seq&lt;'Key&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;TKey&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TKey&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;TKey&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_DictionaryKeyCollectionDebugView`2))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="68d86-101">Представляет коллекцию ключей в словаре <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-101">Represents the collection of keys in a <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span> <span data-ttu-id="68d86-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="68d86-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-103">Свойство возвращает экземпляр этого типа, содержащий все ключи в этом <xref:System.Collections.Generic.SortedDictionary%602>типе. <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="68d86-103">The <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A?displayProperty=nameWithType> property returns an instance of this type, containing all the keys in that <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  <span data-ttu-id="68d86-104">Порядок <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> следования ключей в совпадает с порядком элементов <xref:System.Collections.Generic.SortedDictionary%602>в, так же как и в порядке связанных значений <xref:System.Collections.Generic.SortedDictionary%602.Values%2A?displayProperty=nameWithType> в <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> возвращаемом свойстве.</span><span class="sxs-lookup"><span data-stu-id="68d86-104">The order of the keys in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> is the same as the order of elements in the <xref:System.Collections.Generic.SortedDictionary%602>, the same as the order of the associated values in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> returned by the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="68d86-105">Не является статической копией; вместо этого объект <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> ссылается на ключи в исходном  <xref:System.Collections.Generic.SortedDictionary%602> .  <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection></span><span class="sxs-lookup"><span data-stu-id="68d86-105">The <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> is not a static copy; instead, the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> refers back to the keys in the original <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="68d86-106">Таким образом, изменения <xref:System.Collections.Generic.SortedDictionary%602> по прежнему будут отражены <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>в.</span><span class="sxs-lookup"><span data-stu-id="68d86-106">Therefore, changes to the <xref:System.Collections.Generic.SortedDictionary%602> continue to be reflected in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="68d86-107">Открытые статические (<see langword="Shared" /> в Visual Basic) члены этого типа являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="68d86-107">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="68d86-108">Потокобезопасность членов экземпляров не гарантируется.</span><span class="sxs-lookup"><span data-stu-id="68d86-108">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="68d86-109"><see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> Может поддерживать одновременно несколько модулей чтения, если коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="68d86-109">A <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span>  <span data-ttu-id="68d86-110">Даже поэтому перечисление по коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="68d86-110">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="68d86-111">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="68d86-111">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="68d86-112">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="68d86-112">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyCollection (System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.SortedDictionary`2&lt;!TKey, !TValue&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As SortedDictionary(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyCollection(System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt; ^ dictionary);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.KeyCollection : System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; -&gt; System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.KeyCollection" Usage="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.KeyCollection dictionary" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="68d86-113">Словарь <see cref="T:System.Collections.Generic.SortedDictionary`2" />, ключи которого отражены в новой коллекции <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-113">The <see cref="T:System.Collections.Generic.SortedDictionary`2" /> whose keys are reflected in the new <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span></span></param>
        <summary><span data-ttu-id="68d86-114">Инициализирует новый экземпляр <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, который отражает ключи в указанном словаре <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-114">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> class that reflects the keys in the specified <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-115">Не является статической копией; вместо этого объект <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> ссылается на ключи в исходном  <xref:System.Collections.Generic.SortedDictionary%602> .  <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection></span><span class="sxs-lookup"><span data-stu-id="68d86-115">The <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> is not a static copy; instead, the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> refers back to the keys in the original <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="68d86-116">Таким образом, изменения <xref:System.Collections.Generic.SortedDictionary%602> по прежнему будут отражены <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>в.</span><span class="sxs-lookup"><span data-stu-id="68d86-116">Therefore, changes to the <xref:System.Collections.Generic.SortedDictionary%602> continue to be reflected in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span></span>  
  
 <span data-ttu-id="68d86-117">Этот конструктор является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="68d86-117">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68d86-118">Свойство <paramref name="dictionary" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-118"><paramref name="dictionary" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (TKey[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!TKey[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As TKey(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;TKey&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'Key[] * int -&gt; unit&#xA;override this.CopyTo : 'Key[] * int -&gt; unit" Usage="keyCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="TKey[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="68d86-119">Одномерный массив для приема элементов, копируемых из <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-119">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span></span> <span data-ttu-id="68d86-120">Индекс в массиве должен начинаться с нуля.</span><span class="sxs-lookup"><span data-stu-id="68d86-120">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="68d86-121">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="68d86-121">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="68d86-122">Копирует элементы коллекции <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> в существующий одномерный массив, начиная с указанного значения индекса массива.</span><span class="sxs-lookup"><span data-stu-id="68d86-122">Copies the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> elements to an existing one-dimensional array, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-123">Элементы копируются в массив в том же порядке, в котором перечислитель проходит <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>по.</span><span class="sxs-lookup"><span data-stu-id="68d86-123">The elements are copied to the array in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span></span>  
  
 <span data-ttu-id="68d86-124">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68d86-124">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68d86-125">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-125"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68d86-126">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="68d86-126"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68d86-127">Число элементов в исходной коллекции <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> больше доступного места от положения, заданного значением параметра <paramref name="index" />, до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-127">The number of elements in the source <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.KeyCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68d86-128">Получает число элементов, содержащихся в интерфейсе <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-128">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span></span></summary>
        <value><span data-ttu-id="68d86-129">Число элементов, содержащихся в интерфейсе <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-129">The number of elements contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-130">Получение значения этого свойства является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="68d86-130">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.KeyCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.SortedDictionary`2/KeyCollection/Enumerator&lt;!TKey, !TValue&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As SortedDictionary(Of TKey, TValue).KeyCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::KeyCollection::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.KeyCollection.Enumerator" Usage="keyCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+KeyCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68d86-131">Возвращает перечислитель, осуществляющий перебор элементов списка <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-131">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span></span></summary>
        <returns><span data-ttu-id="68d86-132">Структура <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" /> для словаря <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-132">A <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" /> structure for the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-133">`foreach` Оператор C#  языка ( `for each`  C++в Visual Basic) скрывает сложность перечислителей. `For Each`</span><span class="sxs-lookup"><span data-stu-id="68d86-133">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="68d86-134">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="68d86-134">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="68d86-135">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="68d86-135">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="68d86-136">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="68d86-136">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="68d86-137">В этой позиции значение свойства <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="68d86-137">At this position, <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="68d86-138">Необходимо вызвать <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> метод, чтобы переместить перечислитель к первому элементу коллекции перед считыванием <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A>значения.</span><span class="sxs-lookup"><span data-stu-id="68d86-138">You must call the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="68d86-139">Свойство возвращает тот же объект до <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> вызова метода. <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A></span><span class="sxs-lookup"><span data-stu-id="68d86-139">The <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> property returns the same object until <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="68d86-140"><xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> задает <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="68d86-140"><xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="68d86-141">Если <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> передает конец коллекции, перечислитель располагается после последнего элемента в коллекции и <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="68d86-141">If <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="68d86-142">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> также возвращают. `false`</span><span class="sxs-lookup"><span data-stu-id="68d86-142">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="68d86-143">Если последний вызов <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> возвращен `false`, <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> значение не определено.</span><span class="sxs-lookup"><span data-stu-id="68d86-143">If the last call to <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="68d86-144">Значение свойства <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> не может быть повторно задано первому элементу коллекции; вместо этого следует создать новый экземпляр перечислителя.</span><span class="sxs-lookup"><span data-stu-id="68d86-144">You cannot set <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="68d86-145">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="68d86-145">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="68d86-146">Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> или <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> вызывает <xref:System.InvalidOperationException>исключение.</span><span class="sxs-lookup"><span data-stu-id="68d86-146">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="68d86-147">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="68d86-147">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="68d86-148">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="68d86-148">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="68d86-149">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="68d86-149">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="68d86-150">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="68d86-150">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="68d86-151">Этот метод является операцией O (log n), где n — число элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="68d86-151">This method is an O(log n) operation where n is a number of elements in a collection.</span></span>
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;TKey&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;TKey&gt;.Add (TKey item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;TKey&gt;.Add(!TKey item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As TKey) Implements ICollection(Of TKey).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;TKey&gt;.Add(TKey item) = System::Collections::Generic::ICollection&lt;TKey&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="68d86-152">Объект, добавляемый в коллекцию <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-152">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="68d86-153">Добавляет элемент в коллекцию <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-153">Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span>  <span data-ttu-id="68d86-154">Эта реализация всегда создает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-154">This implementation always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68d86-155">Создается всегда; коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="68d86-155">Always thrown; the collection is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;TKey&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;TKey&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of TKey).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;TKey&gt;.Clear() = System::Collections::Generic::ICollection&lt;TKey&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68d86-156">Удаляет все элементы из коллекции <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-156">Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span>  <span data-ttu-id="68d86-157">Эта реализация всегда создает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-157">This implementation always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-158"><xref:System.Collections.Generic.ICollection%601.Count%2A> Свойство имеет значение 0, а ссылки на другие объекты из элементов коллекции также освобождаются.</span><span class="sxs-lookup"><span data-stu-id="68d86-158">The <xref:System.Collections.Generic.ICollection%601.Count%2A> property is set to 0, and references to other objects from elements of the collection are also released.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68d86-159">Создается всегда; коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="68d86-159">Always thrown; the collection is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;TKey&gt;.Contains (TKey item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(!TKey item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As TKey) As Boolean Implements ICollection(Of TKey).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(TKey item) = System::Collections::Generic::ICollection&lt;TKey&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="68d86-160">Объект для поиска в <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-160">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="68d86-161">Определяет, содержит ли коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> указанное значение.</span><span class="sxs-lookup"><span data-stu-id="68d86-161">Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains the specified value.</span></span></summary>
        <returns><span data-ttu-id="68d86-162">Значение <see langword="true" />, если элемент найден в коллекции <see cref="T:System.Collections.Generic.ICollection`1" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-162"><see langword="true" /> if item is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-163">Реализации могут различаться в зависимости от того, как они определяют равенство объектов; Например, <xref:System.Collections.Generic.List%601> использует <xref:System.Collections.Generic.Comparer%601.Default%2A>, а <xref:System.Collections.Generic.SortedDictionary%602> позволяет пользователю указать <xref:System.Collections.Generic.IComparer%601> реализацию, используемую для сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="68d86-163">Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A>, whereas <xref:System.Collections.Generic.SortedDictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="68d86-164">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="68d86-164">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;TKey&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;TKey&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;TKey&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of TKey).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;TKey&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;TKey&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68d86-165">Получает значение, указывающее, является ли объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="68d86-165">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="68d86-166">Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-166"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="68d86-167">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> это свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-167">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-168">После создания коллекции, доступной только для чтения, не разрешается добавление элементов в коллекцию, их изменение или удаление.</span><span class="sxs-lookup"><span data-stu-id="68d86-168">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="68d86-169">Получение значения этого свойства является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="68d86-169">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;TKey&gt;.Remove (TKey item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(!TKey item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As TKey) As Boolean Implements ICollection(Of TKey).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(TKey item) = System::Collections::Generic::ICollection&lt;TKey&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="68d86-170">Объект, который необходимо удалить из коллекции <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-170">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="68d86-171">Удаляет первое вхождение указанного объекта из коллекции <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-171">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span>  <span data-ttu-id="68d86-172">Эта реализация всегда создает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-172">This implementation always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="68d86-173">Значение <see langword="true" />, если элемент успешно удален из <see cref="T:System.Collections.Generic.ICollection`1" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-173"><see langword="true" /> if item is successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="68d86-174">Этот метод также возвращает значение <see langword="false" />, если элемент не найден в <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-174">This method also returns <see langword="false" /> if item is not found in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-175">Реализации могут различаться в зависимости от того, как они определяют равенство объектов; Например, <xref:System.Collections.Generic.List%601> использует <xref:System.Collections.Generic.Comparer%601.Default%2A>, а <xref:System.Collections.Generic.SortedDictionary%602> позволяет пользователю указать <xref:System.Collections.Generic.IComparer%601> реализацию, используемую для сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="68d86-175">Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A>, whereas <xref:System.Collections.Generic.SortedDictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68d86-176">Создается всегда; коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="68d86-176">Always thrown; the collection is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;TKey&gt; IEnumerable&lt;TKey&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TKey&gt; System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&lt;TKey&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of TKey) Implements IEnumerable(Of TKey).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;TKey&gt; ^ System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;TKey&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68d86-177">Возвращает перечислитель, выполняющий перебор элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="68d86-177">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="68d86-178">Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, который может использоваться для итерации элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="68d86-178">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-179">`foreach` Оператор C#  языка ( `for each`  C++в Visual Basic) скрывает сложность перечислителей. `For Each`</span><span class="sxs-lookup"><span data-stu-id="68d86-179">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="68d86-180">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="68d86-180">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="68d86-181">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="68d86-181">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="68d86-182">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="68d86-182">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="68d86-183">В этой позиции <xref:System.Collections.Generic.IEnumerator%601.Current%2A> свойство не определено.</span><span class="sxs-lookup"><span data-stu-id="68d86-183">At this position, the <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property is undefined.</span></span> <span data-ttu-id="68d86-184">Поэтому необходимо вызвать <xref:System.Collections.IEnumerator.MoveNext%2A> метод, чтобы переместить перечислитель к первому элементу коллекции перед считыванием <xref:System.Collections.Generic.IEnumerator%601.Current%2A>значения.</span><span class="sxs-lookup"><span data-stu-id="68d86-184">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="68d86-185">Свойство возвращает тот же объект до <xref:System.Collections.IEnumerator.MoveNext%2A> вызова метода. <xref:System.Collections.Generic.IEnumerator%601.Current%2A></span><span class="sxs-lookup"><span data-stu-id="68d86-185">The <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="68d86-186"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.Generic.IEnumerator%601.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="68d86-186"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="68d86-187">Если метод <xref:System.Collections.IEnumerator.MoveNext%2A> проходит конец коллекции, перечислитель помещается в ней после последнего элемента, а метод <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает значение false.</span><span class="sxs-lookup"><span data-stu-id="68d86-187">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns false.</span></span> <span data-ttu-id="68d86-188">Если перечислитель находится в этой позиции, последующие вызовы метода <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают значение false.</span><span class="sxs-lookup"><span data-stu-id="68d86-188">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return false.</span></span> <span data-ttu-id="68d86-189">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращен `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> значение не определено.</span><span class="sxs-lookup"><span data-stu-id="68d86-189">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="68d86-190">Значение свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не может быть повторно задано первому элементу коллекции; вместо этого следует создать новый экземпляр перечислителя.</span><span class="sxs-lookup"><span data-stu-id="68d86-190">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="68d86-191">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="68d86-191">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="68d86-192">Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает <xref:System.InvalidOperationException>исключение.</span><span class="sxs-lookup"><span data-stu-id="68d86-192">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="68d86-193">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="68d86-193">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="68d86-194">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="68d86-194">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="68d86-195">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="68d86-195">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="68d86-196">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="68d86-196">Default implementations of collections in the <xref:System.Collections.Generic> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="68d86-197">Этот метод является операцией O (log n), где n — число элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="68d86-197">This method is an O(log n) operation where n is a number of elements in a collection.</span></span>
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="68d86-198">Одномерный массив для приема элементов, копируемых из <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-198">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="68d86-199">Индекс в массиве должен начинаться с нуля.</span><span class="sxs-lookup"><span data-stu-id="68d86-199">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="68d86-200">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="68d86-200">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="68d86-201">Копирует элементы <see cref="T:System.Collections.ICollection" /> в массив, начиная с определенного индекса массива.</span><span class="sxs-lookup"><span data-stu-id="68d86-201">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at a particular array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="68d86-202">Если тип <xref:System.Collections.ICollection> источника не может быть автоматически приведен к типу назначения <xref:System.InvalidCastException> `array`, неуниверсальные реализации <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> вызывают исключение, тогда как универсальные реализации создают <xref:System.ArgumentException>исключение.</span><span class="sxs-lookup"><span data-stu-id="68d86-202">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw an <xref:System.InvalidCastException>, whereas the generic implementations throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="68d86-203">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68d86-203">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68d86-204">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-204"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68d86-205">Значение параметра <paramref name="index" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="68d86-205"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68d86-206">Массив <paramref name="array" /> является многомерным.</span><span class="sxs-lookup"><span data-stu-id="68d86-206"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="68d86-207">- или -</span><span class="sxs-lookup"><span data-stu-id="68d86-207">-or-</span></span> 
 <span data-ttu-id="68d86-208">В массиве <paramref name="array" /> не используется индексация, начинающаяся с нуля.</span><span class="sxs-lookup"><span data-stu-id="68d86-208"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
<span data-ttu-id="68d86-209">- или -</span><span class="sxs-lookup"><span data-stu-id="68d86-209">-or-</span></span> 
<span data-ttu-id="68d86-210">Число элементов в исходном массиве <see cref="T:System.Collections.ICollection" /> больше доступного места от положения, заданного значением параметра <paramref name="index" />, до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-210">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span>  
  
<span data-ttu-id="68d86-211">- или -</span><span class="sxs-lookup"><span data-stu-id="68d86-211">-or-</span></span> 
<span data-ttu-id="68d86-212">Тип исходного массива <see cref="T:System.Collections.ICollection" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-212">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68d86-213">Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="68d86-213">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="68d86-214"><see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-214"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="68d86-215">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> это свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-215">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-216">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="68d86-216">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="68d86-217">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="68d86-217">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="68d86-218">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="68d86-218">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="68d86-219">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="68d86-219">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="68d86-220">Свойство возвращает объект, который можно использовать для синхронизации доступа <xref:System.Collections.ICollection>к. <xref:System.Collections.ICollection.SyncRoot%2A></span><span class="sxs-lookup"><span data-stu-id="68d86-220">The <xref:System.Collections.ICollection.SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="68d86-221">Синхронизация вступает в силу только в том случае, если все потоки блокируют объект перед доступом к коллекции.</span><span class="sxs-lookup"><span data-stu-id="68d86-221">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span>  
  
 <span data-ttu-id="68d86-222">Получение значения этого свойства является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="68d86-222">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68d86-223">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-223">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="68d86-224">Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="68d86-224">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="68d86-225">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> это свойство всегда возвращает текущий экземпляр.</span><span class="sxs-lookup"><span data-stu-id="68d86-225">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-226">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="68d86-226">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="68d86-227">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="68d86-227">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="68d86-228">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="68d86-228">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="68d86-229">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="68d86-229">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="68d86-230">Свойство возвращает объект, который можно использовать для синхронизации доступа <xref:System.Collections.ICollection>к. <xref:System.Collections.ICollection.SyncRoot%2A></span><span class="sxs-lookup"><span data-stu-id="68d86-230">The <xref:System.Collections.ICollection.SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="68d86-231">Синхронизация вступает в силу только в том случае, если все потоки блокируют объект перед доступом к коллекции.</span><span class="sxs-lookup"><span data-stu-id="68d86-231">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span> <span data-ttu-id="68d86-232">В следующем коде показано использование <xref:System.Collections.ICollection.SyncRoot%2A> свойства для C#, C++и Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="68d86-232">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot)   
{  
    // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
    ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try   
{  
    Monitor::Enter(ic->SyncRoot);  
    // Access the collection.  
}  
finally   
{  
    Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="68d86-233">Получение значения этого свойства является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="68d86-233">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68d86-234">Возвращает перечислитель, выполняющий перебор элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="68d86-234">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="68d86-235">Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="68d86-235">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d86-236">`foreach` Оператор C#  языка ( `for each`  C++в Visual Basic) скрывает сложность перечислителей. `For Each`</span><span class="sxs-lookup"><span data-stu-id="68d86-236">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="68d86-237">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="68d86-237">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="68d86-238">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="68d86-238">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="68d86-239">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="68d86-239">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="68d86-240">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="68d86-240"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="68d86-241">В этой позиции <xref:System.Collections.IEnumerator.Current%2A> свойство не определено.</span><span class="sxs-lookup"><span data-stu-id="68d86-241">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="68d86-242">Поэтому необходимо вызвать <xref:System.Collections.IEnumerator.MoveNext%2A> метод, чтобы переместить перечислитель к первому элементу коллекции перед считыванием <xref:System.Collections.IEnumerator.Current%2A>значения.</span><span class="sxs-lookup"><span data-stu-id="68d86-242">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="68d86-243">Свойство возвращает один и тот же объект <xref:System.Collections.IEnumerator.MoveNext%2A> до тех пор, пока не будет вызван метод или. <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.Collections.IEnumerator.Current%2A></span><span class="sxs-lookup"><span data-stu-id="68d86-243">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="68d86-244"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="68d86-244"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="68d86-245">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель располагается после последнего элемента в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="68d86-245">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="68d86-246">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают. `false`</span><span class="sxs-lookup"><span data-stu-id="68d86-246">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="68d86-247">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращен `false`, <xref:System.Collections.IEnumerator.Current%2A> значение не определено.</span><span class="sxs-lookup"><span data-stu-id="68d86-247">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="68d86-248">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="68d86-248">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="68d86-249">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="68d86-249">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="68d86-250">Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает <xref:System.InvalidOperationException>исключение.</span><span class="sxs-lookup"><span data-stu-id="68d86-250">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="68d86-251">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="68d86-251">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="68d86-252">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="68d86-252">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="68d86-253">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="68d86-253">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="68d86-254">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="68d86-254">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="68d86-255">Этот метод является операцией O (log n), где n — число элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="68d86-255">This method is an O(log n) operation where n is a number of elements in a collection.</span></span>
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>
