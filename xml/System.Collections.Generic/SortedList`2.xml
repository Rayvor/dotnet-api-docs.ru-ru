<Type Name="SortedList&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.SortedList&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da3a5ef88db32632bdc8dbefe0fea0a6163238f7" /><Meta Name="ms.sourcegitcommit" Value="74239f3977d28923e5020663db2c4e91601bea79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/24/2019" /><Meta Name="ms.locfileid" Value="68437388" /></Metadata><TypeSignature Language="C#" Value="public class SortedList&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedList`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedList`2" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedList(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class SortedList : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type SortedList&lt;'Key, 'Value&gt; = class&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface IDictionary&#xA;    interface IReadOnlyDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_DictionaryDebugView`2))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="a3f0c-101">Тип ключей в коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-101">The type of keys in the collection.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="a3f0c-102">Тип значений в коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-102">The type of values in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="a3f0c-103">Представляет коллекцию пар "ключ-значение", упорядоченных по ключу на основе реализации <see cref="T:System.Collections.Generic.IComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-103">Represents a collection of key/value pairs that are sorted by key based on the associated <see cref="T:System.Collections.Generic.IComparer`1" /> implementation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-104">Универсальный класс представляет собой массив пар "ключ-значение" с извлечением O `n`(log), где n — число элементов в словаре. <xref:System.Collections.Generic.SortedList%602></span><span class="sxs-lookup"><span data-stu-id="a3f0c-104">The <xref:System.Collections.Generic.SortedList%602> generic class is an array of key/value pairs with O(log `n`) retrieval, where n is the number of elements in the dictionary.</span></span> <span data-ttu-id="a3f0c-105">В этом случае он аналогичен <xref:System.Collections.Generic.SortedDictionary%602> универсальному классу.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-105">In this, it is similar to the <xref:System.Collections.Generic.SortedDictionary%602> generic class.</span></span> <span data-ttu-id="a3f0c-106">Эти два класса имеют аналогичные объектные модели, и оба имеют доступ к `n`O (log).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-106">The two classes have similar object models, and both have O(log `n`) retrieval.</span></span> <span data-ttu-id="a3f0c-107">Два класса различаются в использовании памяти и скорости вставки и удаления:</span><span class="sxs-lookup"><span data-stu-id="a3f0c-107">Where the two classes differ is in memory use and speed of insertion and removal:</span></span>  
  
-   <span data-ttu-id="a3f0c-108"><xref:System.Collections.Generic.SortedList%602>использует меньше памяти, <xref:System.Collections.Generic.SortedDictionary%602>чем.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-108"><xref:System.Collections.Generic.SortedList%602> uses less memory than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
-   <span data-ttu-id="a3f0c-109"><xref:System.Collections.Generic.SortedDictionary%602>имеет более быстрые операции вставки и удаления для несортированных данных, O ( `n`log) в отличие от o (`n`) для <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-109"><xref:System.Collections.Generic.SortedDictionary%602> has faster insertion and removal operations for unsorted data, O(log `n`) as opposed to O(`n`) for <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
-   <span data-ttu-id="a3f0c-110">Если список заполняется только один раз из отсортированных данных, то <xref:System.Collections.Generic.SortedList%602> выполняется быстрее, <xref:System.Collections.Generic.SortedDictionary%602>чем.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-110">If the list is populated all at once from sorted data, <xref:System.Collections.Generic.SortedList%602> is faster than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-111">Другое различие <xref:System.Collections.Generic.SortedDictionary%602> между классами <xref:System.Collections.Generic.SortedList%602> и состоит в <xref:System.Collections.Generic.SortedList%602> том, что поддерживает эффективное индексированное извлечение ключей <xref:System.Collections.Generic.SortedList%602.Keys%2A> и значений через коллекции, возвращаемые свойствами <xref:System.Collections.Generic.SortedList%602.Values%2A> и.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-111">Another difference between the <xref:System.Collections.Generic.SortedDictionary%602> and <xref:System.Collections.Generic.SortedList%602> classes is that <xref:System.Collections.Generic.SortedList%602> supports efficient indexed retrieval of keys and values through the collections returned by the <xref:System.Collections.Generic.SortedList%602.Keys%2A> and <xref:System.Collections.Generic.SortedList%602.Values%2A> properties.</span></span> <span data-ttu-id="a3f0c-112">Нет необходимости повторно создавать списки при доступе к свойствам, так как списки являются просто оболочками для внутренних массивов ключей и значений.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-112">It is not necessary to regenerate the lists when the properties are accessed, because the lists are just wrappers for the internal arrays of keys and values.</span></span> <span data-ttu-id="a3f0c-113">В следующем коде показано использование <xref:System.Collections.Generic.SortedList%602.Values%2A> свойства для индексированного извлечения значений из отсортированного списка строк:</span><span class="sxs-lookup"><span data-stu-id="a3f0c-113">The following code shows the use of the <xref:System.Collections.Generic.SortedList%602.Values%2A> property for indexed retrieval of values from a sorted list of strings:</span></span>  
  
 [!code-cpp[Generic.SortedList#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/remarks.cpp#11)]
 [!code-csharp[Generic.SortedList#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/remarks.cs#11)]
 [!code-vb[Generic.SortedList#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/remarks.vb#11)]  
  
 <span data-ttu-id="a3f0c-114"><xref:System.Collections.Generic.SortedList%602>реализуется как массив пар "ключ-значение", отсортированных по ключу.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-114"><xref:System.Collections.Generic.SortedList%602> is implemented as an array of key/value pairs, sorted by the key.</span></span>  <span data-ttu-id="a3f0c-115">Каждый элемент может быть извлечен как <xref:System.Collections.Generic.KeyValuePair%602> объект.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-115">Each element can be retrieved as a <xref:System.Collections.Generic.KeyValuePair%602> object.</span></span>  
  
 <span data-ttu-id="a3f0c-116">Ключевые объекты должны быть неизменными, если они используются в качестве ключей в <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-116">Key objects must be immutable as long as they are used as keys in the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="a3f0c-117">Каждый ключ в <xref:System.Collections.Generic.SortedList%602> должен быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-117">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique.</span></span> <span data-ttu-id="a3f0c-118">Ключ не может быть `null`, но значение может быть, если тип значений в списке, `TValue`является ссылочным типом.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-118">A key cannot be `null`, but a value can be, if the type of values in the list, `TValue`, is a reference type.</span></span>  
  
 <span data-ttu-id="a3f0c-119"><xref:System.Collections.Generic.SortedList%602>требуется реализация компаратора для сортировки и выполнения сравнений.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-119"><xref:System.Collections.Generic.SortedList%602> requires a comparer implementation to sort and to perform comparisons.</span></span>  <span data-ttu-id="a3f0c-120">Компаратор <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> по умолчанию проверяет, реализует <xref:System.IComparable%601?displayProperty=nameWithType> ли тип `TKey` ключа реализацию и использует ее, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-120">The default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="a3f0c-121">Если нет, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализован <xref:System.IComparable?displayProperty=nameWithType>ли тип `TKey` ключа.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-121">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="a3f0c-122">Если тип `TKey` ключа не реализует ни один из интерфейсов, можно <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> указать реализацию в перегрузке `comparer` конструктора, которая принимает параметр.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-122">If the key type `TKey` does not implement either interface, you can specify a <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementation in a constructor overload that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="a3f0c-123">Емкость <xref:System.Collections.Generic.SortedList%602> — это количество элементов, <xref:System.Collections.Generic.SortedList%602> которые может содержать.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-123">The capacity of a <xref:System.Collections.Generic.SortedList%602> is the number of elements the <xref:System.Collections.Generic.SortedList%602> can hold.</span></span> <span data-ttu-id="a3f0c-124">Когда элементы добавляются в <xref:System.Collections.Generic.SortedList%602>, емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-124">As elements are added to a <xref:System.Collections.Generic.SortedList%602>, the capacity is automatically increased as required by reallocating the internal array.</span></span> <span data-ttu-id="a3f0c-125">Емкость можно уменьшить, вызвав <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> или явно <xref:System.Collections.Generic.SortedList%602.Capacity%2A> задав свойство.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-125">The capacity can be decreased by calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or by setting the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="a3f0c-126">Уменьшение емкости приводит к повторному распределению памяти и копированию всех элементов в <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-126">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-127">**Только .NET Framework:** Для очень больших <xref:System.Collections.Generic.SortedList%602> объектов можно увеличить максимальную емкость до 2 000 000 000 элементов в 64-разрядной системе, `enabled` задав атрибут [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) элемента `true` конфигурации в среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-127">**.NET Framework only:** For very large <xref:System.Collections.Generic.SortedList%602> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="a3f0c-128">`foreach` Инструкция C# языка(`for each` C++в ,`For Each` в Visual Basic) возвращает объект типа элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-128">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="a3f0c-129">Поскольку элементы в являются парами <xref:System.Collections.Generic.SortedList%602> «ключ-значение», тип элемента не является типом ключа или типом значения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-129">Since the elements of the <xref:System.Collections.Generic.SortedList%602> are key/value pairs, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="a3f0c-130">Вместо этого тип элемента — <xref:System.Collections.Generic.KeyValuePair%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-130">Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>.</span></span> <span data-ttu-id="a3f0c-131">Например:</span><span class="sxs-lookup"><span data-stu-id="a3f0c-131">For example:</span></span>  
  
 [!code-cpp[Generic.SortedList#12](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/remarks.cpp#12)]
 [!code-csharp[Generic.SortedList#12](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/remarks.cs#12)]
 [!code-vb[Generic.SortedList#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/remarks.vb#12)]  
  
 <span data-ttu-id="a3f0c-132">`foreach` Оператор является оболочкой для перечислителя, который разрешает только чтение из коллекции, а не запись в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-132">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-133">В следующем примере кода создается пустая <xref:System.Collections.Generic.SortedList%602> строка со строковыми ключами и <xref:System.Collections.Generic.SortedList%602.Add%2A> используется метод для добавления некоторых элементов.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-133">The following code example creates an empty <xref:System.Collections.Generic.SortedList%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedList%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="a3f0c-134">В примере показано, что <xref:System.Collections.Generic.SortedList%602.Add%2A> <xref:System.ArgumentException> при попытке добавления повторяющегося ключа метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-134">The example demonstrates that the <xref:System.Collections.Generic.SortedList%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="a3f0c-135">В примере <xref:System.Collections.Generic.SortedList%602.Item%2A> свойство (индексатор в C#) используется для извлечения значений, что <xref:System.Collections.Generic.KeyNotFoundException> демонстрирует, что исключение возникает, если запрошенный ключ отсутствует, и показывает, что значение, связанное с ключом, можно заменить.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-135">The example uses the <xref:System.Collections.Generic.SortedList%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="a3f0c-136">В примере показано использование <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> метод как более эффективный способ получения значений, если в программе часто пытающейся значения ключей, которые не находятся в отсортированном списке, а также показано, как использовать <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> метод для проверки наличия ключа перед вызовом <xref:System.Collections.Generic.SortedList%602.Add%2A> настроек метод.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-136">The example shows how to use the <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the sorted list, and it shows how to use the <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> method to test whether a key exists before calling the <xref:System.Collections.Generic.SortedList%602.Add%2A> method.</span></span>  
  
 <span data-ttu-id="a3f0c-137">В примере показано, как перечислить ключи и значения в отсортированном списке, а также как перечислить только ключи и значения с <xref:System.Collections.Generic.SortedList%602.Keys%2A> помощью свойства <xref:System.Collections.Generic.SortedList%602.Values%2A> и свойства.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-137">The example shows how to enumerate the keys and values in the sorted list and how to enumerate the keys and values alone using the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property and the <xref:System.Collections.Generic.SortedList%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="a3f0c-138">Наконец, в примере демонстрируется <xref:System.Collections.Generic.SortedList%602.Remove%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-138">Finally, the example demonstrates the <xref:System.Collections.Generic.SortedList%602.Remove%2A> method.</span></span>  
  
 [!code-cpp[Generic.SortedList#1](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#1)]
 [!code-csharp[Generic.SortedList#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#1)]
 [!code-vb[Generic.SortedList#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="a3f0c-139">Открытые статические (<see langword="Shared" /> в Visual Basic) члены этого типа являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-139">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="a3f0c-140">Потокобезопасность членов экземпляров не гарантируется.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-140">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="a3f0c-141"><see cref="T:System.Collections.Generic.SortedList`2" /> Может поддерживать одновременно несколько модулей чтения, если коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-141">A <see cref="T:System.Collections.Generic.SortedList`2" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span>  <span data-ttu-id="a3f0c-142">Даже поэтому перечисление по коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-142">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="a3f0c-143">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-143">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="a3f0c-144">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-144">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span></threadsafe>
    <altmember cref="T:System.Collections.Generic.IDictionary`2" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="T:System.Collections.Generic.SortedDictionary`2" />
    <altmember cref="T:System.Collections.Generic.KeyValuePair`2" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3f0c-145">Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-145">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3f0c-146">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Generic.SortedList`2" /> с начальной емкостью по умолчанию, использующий интерфейс <see cref="T:System.Collections.Generic.IComparer`1" /> по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-146">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the default initial capacity, and uses the default <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-147">Каждый ключ в <xref:System.Collections.Generic.SortedList%602> должен быть уникальным в соответствии с компаратором по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-147">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="a3f0c-148">Этот конструктор использует значение по умолчанию для начальной емкости <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-148">This constructor uses the default value for the initial capacity of the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="a3f0c-149">Чтобы задать начальную емкость, используйте <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-149">To set the initial capacity, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="a3f0c-150">Если можно оценить конечный размер коллекции, то указание исходной емкости избавляет от необходимости выполнять ряд операций изменения размера при добавлении элементов <xref:System.Collections.Generic.SortedList%602>в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-150">If the final size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-151">Этот конструктор использует компаратор по умолчанию для `TKey`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-151">This constructor uses the default comparer for `TKey`.</span></span> <span data-ttu-id="a3f0c-152">Чтобы указать компаратор, используйте <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-152">To specify a comparer, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="a3f0c-153">Компаратор <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> по умолчанию проверяет, реализует <xref:System.IComparable%601?displayProperty=nameWithType> ли тип `TKey` ключа реализацию и использует ее, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-153">The default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="a3f0c-154">Если нет, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализован <xref:System.IComparable?displayProperty=nameWithType>ли тип `TKey` ключа.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-154">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="a3f0c-155">Если тип `TKey` ключа не реализует ни один из интерфейсов, можно <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> указать реализацию в перегрузке `comparer` конструктора, которая принимает параметр.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-155">If the key type `TKey` does not implement either interface, you can specify a <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementation in a constructor overload that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="a3f0c-156">Этот конструктор является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-156">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-157">В следующем примере кода создается пустая <xref:System.Collections.Generic.SortedList%602> строка со строковыми ключами и <xref:System.Collections.Generic.SortedList%602.Add%2A> используется метод для добавления некоторых элементов.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-157">The following code example creates an empty <xref:System.Collections.Generic.SortedList%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedList%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="a3f0c-158">В примере показано, что <xref:System.Collections.Generic.SortedList%602.Add%2A> <xref:System.ArgumentException> при попытке добавления повторяющегося ключа метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-158">The example demonstrates that the <xref:System.Collections.Generic.SortedList%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="a3f0c-159">Этот пример кода является частью большого примера, <xref:System.Collections.Generic.SortedList%602> приведенного для класса.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-159">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#2](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#2)]
 [!code-csharp[Generic.SortedList#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#2)]
 [!code-vb[Generic.SortedList#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; : System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="a3f0c-160">Реализация интерфейса <see cref="T:System.Collections.Generic.IComparer`1" />, используемая при сравнении ключей.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-160">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="a3f0c-161">-или-</span><span class="sxs-lookup"><span data-stu-id="a3f0c-161">-or-</span></span> 
 <span data-ttu-id="a3f0c-162">Значение <see langword="null" /> для использования класса <see cref="T:System.Collections.Generic.Comparer`1" /> по умолчанию для данного типа ключа.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-162"><see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span></span></param>
        <summary><span data-ttu-id="a3f0c-163">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Generic.SortedList`2" /> с начальной емкостью по умолчанию, использующий указанный компаратор <see cref="T:System.Collections.Generic.IComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-163">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the default initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-164">Каждый ключ в <xref:System.Collections.Generic.SortedList%602> должен быть уникальным в соответствии с указанным компаратором.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-164">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="a3f0c-165">Этот конструктор использует значение по умолчанию для начальной емкости <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-165">This constructor uses the default value for the initial capacity of the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="a3f0c-166">Чтобы задать начальную емкость, используйте <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-166">To set the initial capacity, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="a3f0c-167">Если можно оценить конечный размер коллекции, то указание исходной емкости избавляет от необходимости выполнять ряд операций изменения размера при добавлении элементов <xref:System.Collections.Generic.SortedList%602>в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-167">If the final size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-168">Этот конструктор является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-168">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-169">В следующем примере кода создается отсортированный список с функцией сравнения без учета регистра для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-169">The following code example creates a sorted list with a case-insensitive comparer for the current culture.</span></span> <span data-ttu-id="a3f0c-170">В примере добавляются четыре элемента, некоторые с ключами в нижнем регистре, а некоторые — с ключами верхнего регистра.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-170">The example adds four elements, some with lower-case keys and some with upper-case keys.</span></span> <span data-ttu-id="a3f0c-171">Затем в примере выполняется попытка добавить элемент с ключом, который отличается от существующего ключа только регистром, перехватывает результирующее исключение и выводит сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-171">The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</span></span> <span data-ttu-id="a3f0c-172">Наконец, в примере отображаются элементы в порядке сортировки без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-172">Finally, the example displays the elements in case-insensitive sort order.</span></span>  
  
 [!code-csharp[Generic.SortedList.ctor_IComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_IComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.ctor_IComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_IComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; : System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt; -&gt; System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; dictionary" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="a3f0c-173">Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, элементы которого копируются в новый объект <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-173">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></param>
        <summary><span data-ttu-id="a3f0c-174">Инициализирует новый экземпляр <see cref="T:System.Collections.Generic.SortedList`2" />, содержащий элементы, скопированные из указанного класса <see cref="T:System.Collections.Generic.IDictionary`2" />, обладающий емкостью, достаточной для того, чтобы вместить количество скопированных элементов, и использующий интерфейс <see cref="T:System.Collections.Generic.IComparer`1" /> по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-174">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" />, has sufficient capacity to accommodate the number of elements copied, and uses the default <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-175">Каждый ключ в <xref:System.Collections.Generic.SortedList%602> должен быть уникальным в соответствии с компаратором по умолчанию. Аналогичным образом, каждый ключ `dictionary` в источнике также должен быть уникальным в соответствии с компаратором по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-175">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the default comparer; likewise, every key in the source `dictionary` must also be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="a3f0c-176">Емкость нового <xref:System.Collections.Generic.SortedList%602> объекта задается равным количеству элементов в `dictionary`, поэтому изменение размера не происходит во время заполнения списка.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-176">The capacity of the new <xref:System.Collections.Generic.SortedList%602> is set to the number of elements in `dictionary`, so no resizing takes place while the list is being populated.</span></span>  
  
 <span data-ttu-id="a3f0c-177">Этот конструктор использует компаратор по умолчанию для `TKey`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-177">This constructor uses the default comparer for `TKey`.</span></span> <span data-ttu-id="a3f0c-178">Чтобы указать компаратор, используйте <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-178">To specify a comparer, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="a3f0c-179">Компаратор <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> по умолчанию проверяет, реализует <xref:System.IComparable%601?displayProperty=nameWithType> ли тип `TKey` ключа реализацию и использует ее, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-179">The default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="a3f0c-180">Если нет, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализован <xref:System.IComparable?displayProperty=nameWithType>ли тип `TKey` ключа.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-180">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="a3f0c-181">Если тип `TKey` ключа не реализует ни один из интерфейсов, можно <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> указать реализацию в перегрузке `comparer` конструктора, которая принимает параметр.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-181">If the key type `TKey` does not implement either interface, you can specify a <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementation in a constructor overload that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="a3f0c-182">Если данные в `dictionary` сортируются, этот конструктор является операцией O (`n`), где `n` — число элементов в `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-182">If the data in `dictionary` are sorted, this constructor is an O(`n`) operation, where `n` is the number of elements in `dictionary`.</span></span> <span data-ttu-id="a3f0c-183">В противном случае это операция`n`O (\*`n`).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-183">Otherwise it is an O(`n`\*`n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-184">В <xref:System.Collections.Generic.SortedList%602> следующем примере кода показано <xref:System.Collections.Generic.Dictionary%602>, как использовать для создания отсортированной копии данных в, передав <xref:System.Collections.Generic.Dictionary%602> <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%29> в конструктор.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-184">The following code example shows how to use <xref:System.Collections.Generic.SortedList%602> to create a sorted copy of the information in a <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%29> constructor.</span></span>  
  
 [!code-csharp[Generic.SortedList.ctor_IDic#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_IDic/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.ctor_IDic#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_IDic/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-185">Свойство <paramref name="dictionary" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-185"><paramref name="dictionary" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3f0c-186"><paramref name="dictionary" /> содержит один или несколько ключей-дубликатов.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-186"><paramref name="dictionary" /> contains one or more duplicate keys.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; : int -&gt; System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="a3f0c-187">Начальное количество элементов, которое может содержать коллекция <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-187">The initial number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</span></span></param>
        <summary><span data-ttu-id="a3f0c-188">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Generic.SortedList`2" /> с указанной начальной емкостью и использует интерфейс <see cref="T:System.Collections.Generic.IComparer`1" /> по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-188">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the specified initial capacity, and uses the default <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-189">Каждый ключ в <xref:System.Collections.Generic.SortedList%602> должен быть уникальным в соответствии с компаратором по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-189">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="a3f0c-190">Емкость <xref:System.Collections.Generic.SortedList%602> — это число элементов <xref:System.Collections.Generic.SortedList%602> , которое может быть удержано перед изменением размера.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-190">The capacity of a <xref:System.Collections.Generic.SortedList%602> is the number of elements that the <xref:System.Collections.Generic.SortedList%602> can hold before resizing.</span></span> <span data-ttu-id="a3f0c-191">Когда элементы добавляются в <xref:System.Collections.Generic.SortedList%602>, емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-191">As elements are added to a <xref:System.Collections.Generic.SortedList%602>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="a3f0c-192">Если размер коллекции можно оценить, указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов <xref:System.Collections.Generic.SortedList%602>в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-192">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-193">Емкость можно уменьшить, вызвав <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> или явно <xref:System.Collections.Generic.SortedList%602.Capacity%2A> задав свойство.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-193">The capacity can be decreased by calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or by setting the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="a3f0c-194">Уменьшение емкости приводит к повторному распределению памяти и копированию всех элементов в <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-194">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-195">Этот конструктор использует компаратор по умолчанию для `TKey`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-195">This constructor uses the default comparer for `TKey`.</span></span> <span data-ttu-id="a3f0c-196">Чтобы указать компаратор, используйте <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-196">To specify a comparer, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="a3f0c-197">Компаратор <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> по умолчанию проверяет, реализует <xref:System.IComparable%601?displayProperty=nameWithType> ли тип `TKey` ключа реализацию и использует ее, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-197">The default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="a3f0c-198">Если нет, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализован <xref:System.IComparable?displayProperty=nameWithType>ли тип `TKey` ключа.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-198">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="a3f0c-199">Если тип `TKey` ключа не реализует ни один из интерфейсов, можно <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> указать реализацию в перегрузке `comparer` конструктора, которая принимает параметр.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-199">If the key type `TKey` does not implement either interface, you can specify a <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementation in a constructor overload that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="a3f0c-200">Этот конструктор является операцией O`n`(), где `n` имеет `capacity`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-200">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-201">В следующем примере кода создается отсортированный список с начальной емкостью 4 и заполняется 4 записями.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-201">The following code example creates a sorted list with an initial capacity of 4 and populates it with 4 entries.</span></span>  
  
 [!code-csharp[Generic.SortedList.ctor_Int32#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_Int32/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.ctor_Int32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_Int32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a3f0c-202">Значение параметра <paramref name="capacity" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-202"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Capacity" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary, class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue), comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; : System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; (dictionary, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="a3f0c-203">Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, элементы которого копируются в новый объект <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-203">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="a3f0c-204">Реализация интерфейса <see cref="T:System.Collections.Generic.IComparer`1" />, используемая при сравнении ключей.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-204">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="a3f0c-205">- или -</span><span class="sxs-lookup"><span data-stu-id="a3f0c-205">-or-</span></span> 
 <span data-ttu-id="a3f0c-206">Значение <see langword="null" /> для использования класса <see cref="T:System.Collections.Generic.Comparer`1" /> по умолчанию для данного типа ключа.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-206"><see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span></span></param>
        <summary><span data-ttu-id="a3f0c-207">Инициализирует новый экземпляр <see cref="T:System.Collections.Generic.SortedList`2" />, содержащий элементы, скопированные из указанного класса <see cref="T:System.Collections.Generic.IDictionary`2" />, обладающий емкостью, достаточной для того, чтобы вместить количество скопированных элементов, и использующий указанный интерфейс <see cref="T:System.Collections.Generic.IComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-207">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" />, has sufficient capacity to accommodate the number of elements copied, and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-208">Каждый ключ в <xref:System.Collections.Generic.SortedList%602> должен быть уникальным в соответствии с указанным компаратором. Аналогичным образом каждый ключ в источнике `dictionary` также должен быть уникальным в соответствии с указанным компаратором.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-208">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the specified comparer; likewise, every key in the source `dictionary` must also be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="a3f0c-209">Емкость нового <xref:System.Collections.Generic.SortedList%602> объекта задается равным количеству элементов в `dictionary`, поэтому изменение размера не происходит во время заполнения списка.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-209">The capacity of the new <xref:System.Collections.Generic.SortedList%602> is set to the number of elements in `dictionary`, so no resizing takes place while the list is being populated.</span></span>  
  
 <span data-ttu-id="a3f0c-210">Если данные в `dictionary` сортируются, этот конструктор является операцией O (`n`), где `n` — число элементов в `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-210">If the data in `dictionary` are sorted, this constructor is an O(`n`) operation, where `n` is the number of elements in `dictionary`.</span></span> <span data-ttu-id="a3f0c-211">В противном случае это операция`n`O (\*`n`).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-211">Otherwise it is an O(`n`\*`n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-212">В <xref:System.Collections.Generic.SortedList%602> следующем примере кода показано <xref:System.Collections.Generic.Dictionary%602>, как использовать для создания отсортированной копии с учетом регистра без учета регистра <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> путем передачи <xref:System.Collections.Generic.Dictionary%602> в конструктор.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-212">The following code example shows how to use <xref:System.Collections.Generic.SortedList%602> to create a case-insensitive sorted copy of the information in a case-insensitive <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="a3f0c-213">В этом примере компараторы, не учитывающие регистр, относятся к текущему языку и региональным параметрам.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-213">In this example, the case-insensitive comparers are for the current culture.</span></span>  
  
 [!code-csharp[Generic.SortedList.ctor_IDicIComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_IDicIComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.ctor_IDicIComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_IDicIComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-214"><paramref name="dictionary" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-214"><paramref name="dictionary" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3f0c-215"><paramref name="dictionary" /> содержит один или несколько ключей-дубликатов.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-215"><paramref name="dictionary" /> contains one or more duplicate keys.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int capacity, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int capacity, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; : int * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedList&lt;'Key, 'Value&gt; (capacity, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="a3f0c-216">Начальное количество элементов, которое может содержать коллекция <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-216">The initial number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</span></span></param>
        <param name="comparer"><span data-ttu-id="a3f0c-217">Реализация интерфейса <see cref="T:System.Collections.Generic.IComparer`1" />, используемая при сравнении ключей.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-217">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="a3f0c-218">-или-</span><span class="sxs-lookup"><span data-stu-id="a3f0c-218">-or-</span></span> 
 <span data-ttu-id="a3f0c-219">Значение <see langword="null" /> для использования класса <see cref="T:System.Collections.Generic.Comparer`1" /> по умолчанию для данного типа ключа.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-219"><see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span></span></param>
        <summary><span data-ttu-id="a3f0c-220">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Generic.SortedList`2" /> с заданной начальной емкостью и использует заданный компаратор <see cref="T:System.Collections.Generic.IComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-220">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-221">Каждый ключ в <xref:System.Collections.Generic.SortedList%602> должен быть уникальным в соответствии с указанным компаратором.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-221">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="a3f0c-222">Емкость <xref:System.Collections.Generic.SortedList%602> — это число элементов <xref:System.Collections.Generic.SortedList%602> , которое может быть удержано перед изменением размера.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-222">The capacity of a <xref:System.Collections.Generic.SortedList%602> is the number of elements that the <xref:System.Collections.Generic.SortedList%602> can hold before resizing.</span></span> <span data-ttu-id="a3f0c-223">Когда элементы добавляются в <xref:System.Collections.Generic.SortedList%602>, емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-223">As elements are added to a <xref:System.Collections.Generic.SortedList%602>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="a3f0c-224">Если размер коллекции можно оценить, указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов <xref:System.Collections.Generic.SortedList%602>в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-224">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-225">Емкость можно уменьшить, вызвав <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> или явно <xref:System.Collections.Generic.SortedList%602.Capacity%2A> задав свойство.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-225">The capacity can be decreased by calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or by setting the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="a3f0c-226">Уменьшение емкости приводит к повторному распределению памяти и копированию всех элементов в <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-226">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-227">Этот конструктор является операцией O`n`(), где `n` имеет `capacity`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-227">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-228">В следующем примере кода создается отсортированный список с начальной емкостью 5 и компаратором без учета регистра для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-228">The following code example creates a sorted list with an initial capacity of 5 and a case-insensitive comparer for the current culture.</span></span> <span data-ttu-id="a3f0c-229">В примере добавляются четыре элемента, некоторые с ключами в нижнем регистре, а некоторые — с ключами верхнего регистра.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-229">The example adds four elements, some with lower-case keys and some with upper-case keys.</span></span> <span data-ttu-id="a3f0c-230">Затем в примере выполняется попытка добавить элемент с ключом, который отличается от существующего ключа только регистром, перехватывает результирующее исключение и выводит сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-230">The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</span></span> <span data-ttu-id="a3f0c-231">Наконец, в примере отображаются элементы в порядке сортировки без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-231">Finally, the example displays the elements in case-insensitive sort order.</span></span>  
  
 [!code-csharp[Generic.SortedList.ctor_Int32IComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_Int32IComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.ctor_Int32IComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_Int32IComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a3f0c-232">Значение параметра <paramref name="capacity" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-232"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Capacity" />
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'Key * 'Value -&gt; unit&#xA;override this.Add : 'Key * 'Value -&gt; unit" Usage="sortedList.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a3f0c-233">Ключ добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-233">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="a3f0c-234">Добавляемое значение элемента.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-234">The value of the element to add.</span></span> <span data-ttu-id="a3f0c-235">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-235">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="a3f0c-236">Добавляет элемент с указанными ключом и значением в словарь <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-236">Adds an element with the specified key and value into the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-237">Ключ не может быть `null`, но значение может быть, если тип значений в отсортированном списке, `TValue`является ссылочным типом.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-237">A key cannot be `null`, but a value can be, if the type of values in the sorted list, `TValue`, is a reference type.</span></span>  
  
 <span data-ttu-id="a3f0c-238">Можно также использовать <xref:System.Collections.Generic.SortedList%602.Item%2A> свойство для добавления новых элементов, задав значение ключа, который не существует в, <xref:System.Collections.Generic.SortedList%602>например `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-238">You can also use the <xref:System.Collections.Generic.SortedList%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedList%602>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="a3f0c-239">Однако если указанный ключ уже существует в <xref:System.Collections.Generic.SortedList%602>, <xref:System.Collections.Generic.SortedList%602.Item%2A> установка свойства перезаписывает старое значение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-239">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedList%602>, setting the <xref:System.Collections.Generic.SortedList%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="a3f0c-240">В отличие от этого <xref:System.Collections.Generic.SortedList%602.Add%2A> , метод не изменяет существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-240">In contrast, the <xref:System.Collections.Generic.SortedList%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="a3f0c-241">Если <xref:System.Collections.Generic.SortedList%602.Count%2A> значение уже <xref:System.Collections.Generic.SortedList%602.Capacity%2A> равно<xref:System.Collections.Generic.SortedList%602> , емкость увеличивается путем автоматического перераспределения внутреннего массива, а существующие элементы копируются в новый массив перед добавлением нового элемента.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-241">If <xref:System.Collections.Generic.SortedList%602.Count%2A> already equals <xref:System.Collections.Generic.SortedList%602.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.SortedList%602> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="a3f0c-242">Этот метод является операцией O`n`() для несортированных данных, где `n` имеет <xref:System.Collections.Generic.SortedList%602.Count%2A>тип.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-242">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="a3f0c-243">Это операция O (log `n`), если новый элемент добавляется в конец списка.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-243">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="a3f0c-244">Если вставка приводит к изменению размера, операция является операцией`n`O ().</span><span class="sxs-lookup"><span data-stu-id="a3f0c-244">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-245">В следующем примере кода создается пустая <xref:System.Collections.Generic.SortedList%602> строка со строковыми ключами и <xref:System.Collections.Generic.SortedList%602.Add%2A> используется метод для добавления некоторых элементов.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-245">The following code example creates an empty <xref:System.Collections.Generic.SortedList%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedList%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="a3f0c-246">В примере показано, что <xref:System.Collections.Generic.SortedList%602.Add%2A> <xref:System.ArgumentException> при попытке добавления повторяющегося ключа метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-246">The example demonstrates that the <xref:System.Collections.Generic.SortedList%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="a3f0c-247">Этот пример кода является частью большого примера, <xref:System.Collections.Generic.SortedList%602> приведенного для класса.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-247">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#2](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#2)]
 [!code-csharp[Generic.SortedList#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#2)]
 [!code-vb[Generic.SortedList#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-248"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-248"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3f0c-249">Элемент с таким ключом уже существует в <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-249">An element with the same key already exists in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Item(`0)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-250">Возвращает или задает число элементов, которое может содержать класс <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-250">Gets or sets the number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</span></span></summary>
        <value><span data-ttu-id="a3f0c-251">Количество элементов, которое может содержать коллекция <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-251">The number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-252"><xref:System.Collections.Generic.SortedList%602.Capacity%2A>число элементов, которое может храниться <xref:System.Collections.Generic.SortedList%602> в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-252"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.SortedList%602> can store.</span></span> <span data-ttu-id="a3f0c-253"><xref:System.Collections.Generic.SortedList%602.Count%2A>число элементов, которые фактически находятся в <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-253"><xref:System.Collections.Generic.SortedList%602.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-254"><xref:System.Collections.Generic.SortedList%602.Capacity%2A>всегда больше или равно <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-254"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="a3f0c-255">Если <xref:System.Collections.Generic.SortedList%602.Count%2A> превышено <xref:System.Collections.Generic.SortedList%602.Capacity%2A> время добавления элементов, емкость увеличивается путем автоматического перераспределения внутреннего массива перед копированием старых элементов и добавлением новых элементов.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-255">If <xref:System.Collections.Generic.SortedList%602.Count%2A> exceeds <xref:System.Collections.Generic.SortedList%602.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="a3f0c-256">Емкость можно уменьшить, вызвав <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> или явно <xref:System.Collections.Generic.SortedList%602.Capacity%2A> задав свойство.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-256">The capacity can be decreased by calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or by setting the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="a3f0c-257">Если значение <xref:System.Collections.Generic.SortedList%602.Capacity%2A> задано явно, внутренний массив также перераспределяется в соответствии с заданной емкостью.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-257">When the value of <xref:System.Collections.Generic.SortedList%602.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="a3f0c-258">Получение значения этого свойства является операцией O (1); Задание свойства является операцией O (`n`), где `n` — это новая емкость.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-258">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a3f0c-259">Для <see cref="P:System.Collections.Generic.SortedList`2.Capacity" /> установлено значение, которое меньше <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-259"><see cref="P:System.Collections.Generic.SortedList`2.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="a3f0c-260">Недостаточно свободной памяти в системе.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-260">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Count" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.TrimExcess" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="sortedList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3f0c-261">Удаляет из коллекции <see cref="T:System.Collections.Generic.SortedList`2" /> все элементы.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-261">Removes all elements from the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-262"><xref:System.Collections.Generic.SortedList%602.Count%2A>имеет значение 0, а ссылки на другие объекты из элементов коллекции также освобождаются.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-262"><xref:System.Collections.Generic.SortedList%602.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="a3f0c-263"><xref:System.Collections.Generic.SortedList%602.Capacity%2A>не изменяется.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-263"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="a3f0c-264">Чтобы сбросить емкость <xref:System.Collections.Generic.SortedList%602>, вызовите <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> или задайте <xref:System.Collections.Generic.SortedList%602.Capacity%2A> свойство напрямую.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-264">To reset the capacity of the <xref:System.Collections.Generic.SortedList%602>, call <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or set the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property directly.</span></span> <span data-ttu-id="a3f0c-265">Удаление пустой <xref:System.Collections.Generic.SortedList%602> задает емкость объекта <xref:System.Collections.Generic.SortedList%602> емкость по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-265">Trimming an empty <xref:System.Collections.Generic.SortedList%602> sets the capacity of the <xref:System.Collections.Generic.SortedList%602> to the default capacity.</span></span>  
  
 <span data-ttu-id="a3f0c-266">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-266">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.TrimExcess" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IComparer&lt;'Key&gt;" Usage="System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-267">Возвращает интерфейс <see cref="T:System.Collections.Generic.IComparer`1" /> для отсортированного списка.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-267">Gets the <see cref="T:System.Collections.Generic.IComparer`1" /> for the sorted list.</span></span></summary>
        <value><span data-ttu-id="a3f0c-268"><see cref="T:System.IComparable`1" /> для текущего объекта <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-268">The <see cref="T:System.IComparable`1" /> for the current <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-269">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-269">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : 'Key -&gt; bool&#xA;override this.ContainsKey : 'Key -&gt; bool" Usage="sortedList.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a3f0c-270">Ключ, который требуется найти в <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-270">The key to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></param>
        <summary><span data-ttu-id="a3f0c-271">Определяет, содержит ли объект <see cref="T:System.Collections.Generic.SortedList`2" /> указанный ключ.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-271">Determines whether the <see cref="T:System.Collections.Generic.SortedList`2" /> contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-272"><see langword="true" />, если <see cref="T:System.Collections.Generic.SortedList`2" /> содержит элемент с указанным ключом, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-272"><see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedList`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-273">Этот метод является операцией O ( `n`log), где `n` — <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-273">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-274">В следующем примере кода показано, как использовать <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> метод, чтобы проверить, существует ли ключ перед <xref:System.Collections.Generic.SortedList%602.Add%2A> вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-274">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> method to test whether a key exists prior to calling the <xref:System.Collections.Generic.SortedList%602.Add%2A> method.</span></span> <span data-ttu-id="a3f0c-275">В нем также показано, как использовать <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> метод для получения значений, что является эффективным способом извлечения значений, когда программа часто пытается получить ключи, которых нет в отсортированном списке.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-275">It also shows how to use the <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the sorted list.</span></span> <span data-ttu-id="a3f0c-276">Наконец, он показывает наименее эффективный способ проверки наличия ключей, используя <xref:System.Collections.Generic.SortedList%602.Item%2A> свойство (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-276">Finally, it shows the least efficient way to test whether keys exist, by using the <xref:System.Collections.Generic.SortedList%602.Item%2A> property (the indexer in C#).</span></span>  
  
 <span data-ttu-id="a3f0c-277">Этот пример кода является частью большого примера, <xref:System.Collections.Generic.SortedList%602> приведенного для класса.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-277">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#6](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#6)]
 [!code-csharp[Generic.SortedList#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#6)]
 [!code-vb[Generic.SortedList#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#6)]  
[!code-cpp[Generic.SortedList#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#5)]
[!code-csharp[Generic.SortedList#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#5)]
[!code-vb[Generic.SortedList#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#5)]  
[!code-cpp[Generic.SortedList#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#4)]
[!code-csharp[Generic.SortedList#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#4)]
[!code-vb[Generic.SortedList#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-278"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-278"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public bool ContainsValue (TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsValue(!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsValue (value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsValue(TValue value);" />
      <MemberSignature Language="F#" Value="member this.ContainsValue : 'Value -&gt; bool" Usage="sortedList.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a3f0c-279">Значение, которое требуется найти в словаре <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-279">The value to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span> <span data-ttu-id="a3f0c-280">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-280">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="a3f0c-281">Определяет, содержит ли коллекция <see cref="T:System.Collections.Generic.SortedList`2" /> указанное значение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-281">Determines whether the <see cref="T:System.Collections.Generic.SortedList`2" /> contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-282">Значение <see langword="true" />, если <see cref="T:System.Collections.Generic.SortedList`2" /> содержит элемент с указанным значением; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-282"><see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedList`2" /> contains an element with the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-283">Этот метод определяет равенство с помощью компаратора <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> по умолчанию для `TValue`типа значения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-283">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for the value type `TValue`.</span></span>  <span data-ttu-id="a3f0c-284"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>проверяет, реализует <xref:System.IComparable%601?displayProperty=nameWithType> ли тип `TValue` значения реализацию и использует ли эта реализация, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-284"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the value type `TValue` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="a3f0c-285">Если нет, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализован <xref:System.IComparable?displayProperty=nameWithType>ли тип `TValue` значения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-285">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the value type `TValue` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="a3f0c-286">Если тип `TValue` значения не реализует ни один из интерфейсов, этот метод <xref:System.Object.Equals%2A?displayProperty=nameWithType>использует.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-286">If the value type `TValue` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a3f0c-287">Этот метод выполняет линейный поиск. Таким образом, среднее время выполнения пропорционально значению <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-287">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="a3f0c-288">То есть, этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-288">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-289">Возвращает число пар "ключ-значение", содержащихся в словаре <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-289">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <value><span data-ttu-id="a3f0c-290">Число пар "ключ-значение", содержащихся в словаре <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-290">The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-291"><xref:System.Collections.Generic.SortedList%602.Capacity%2A>число элементов, которое может храниться <xref:System.Collections.Generic.SortedList%602> в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-291"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.SortedList%602> can store.</span></span> <span data-ttu-id="a3f0c-292"><xref:System.Collections.Generic.SortedList%602.Count%2A>число элементов, которые фактически находятся в <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-292"><xref:System.Collections.Generic.SortedList%602.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-293"><xref:System.Collections.Generic.SortedList%602.Capacity%2A>всегда больше или равно <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-293"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="a3f0c-294">Если <xref:System.Collections.Generic.SortedList%602.Count%2A> превышено <xref:System.Collections.Generic.SortedList%602.Capacity%2A> время добавления элементов, емкость увеличивается путем автоматического перераспределения внутреннего массива перед копированием старых элементов и добавлением новых элементов.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-294">If <xref:System.Collections.Generic.SortedList%602.Count%2A> exceeds <xref:System.Collections.Generic.SortedList%602.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="a3f0c-295">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-295">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt;" Usage="sortedList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3f0c-296">Возвращает перечислитель, осуществляющий перебор элементов списка <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-296">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-297">Интерфейс <see cref="T:System.Collections.Generic.IEnumerator`1" /> типа <see cref="T:System.Collections.Generic.KeyValuePair`2" /> для объекта <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-297">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> for the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-298">`foreach` Оператор C# языка(`for each` C++в VisualBasic)скрываетсложностьперечислителей.`For Each`</span><span class="sxs-lookup"><span data-stu-id="a3f0c-298">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="a3f0c-299">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-299">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="a3f0c-300">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-300">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="a3f0c-301">Словарь сохраняется в отсортированном порядке с использованием внутреннего дерева.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-301">The dictionary is maintained in a sorted order using an internal tree.</span></span> <span data-ttu-id="a3f0c-302">Каждый новый элемент располагается на правильном положении сортировки, а дерево корректируется таким образом, чтобы оно поддерживало порядок сортировки при удалении элемента.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-302">Every new element is positioned at the correct sort position, and the tree is adjusted to maintain the sort order whenever an element is removed.</span></span> <span data-ttu-id="a3f0c-303">При перечислении сохраняется порядок сортировки.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-303">While enumerating, the sort order is maintained.</span></span>  
  
 <span data-ttu-id="a3f0c-304">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-304">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="a3f0c-305">В этой позиции значение свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-305">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="a3f0c-306">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-306">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="a3f0c-307"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-307"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="a3f0c-308"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.Generic.IEnumerator%601.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-308"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="a3f0c-309">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель располагается после последнего элемента в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-309">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="a3f0c-310">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> возвращают. `false`</span><span class="sxs-lookup"><span data-stu-id="a3f0c-310">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> return `false`.</span></span> <span data-ttu-id="a3f0c-311">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращен `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> значение не определено.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-311">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="a3f0c-312">Значение свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не может быть повторно задано первому элементу коллекции; вместо этого следует создать новый экземпляр перечислителя.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-312">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="a3f0c-313">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-313">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="a3f0c-314">Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает <xref:System.InvalidOperationException>исключение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-314">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="a3f0c-315">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-315">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="a3f0c-316">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-316">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="a3f0c-317">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-317">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="a3f0c-318">Реализации по умолчанию коллекций в <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизируются.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-318">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="a3f0c-319">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-319">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public int IndexOfKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfKey (key As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfKey(TKey key);" />
      <MemberSignature Language="F#" Value="member this.IndexOfKey : 'Key -&gt; int" Usage="sortedList.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a3f0c-320">Ключ, который требуется найти в <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-320">The key to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></param>
        <summary><span data-ttu-id="a3f0c-321">Осуществляет поиск указанного ключа и возвращает индекс (с нуля) для ключа, найденного в пределах всего класса <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-321">Searches for the specified key and returns the zero-based index within the entire <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-322">Индекс (с нуля) параметра <paramref name="key" />, найденного в пределах всего класса <see cref="T:System.Collections.Generic.SortedList`2" />; если он не найден — значение -1.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-322">The zero-based index of <paramref name="key" /> within the entire <see cref="T:System.Collections.Generic.SortedList`2" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-323">Этот метод выполняет двоичный поиск. Таким образом, этот метод является операцией O `n`(log), `n` где <xref:System.Collections.Generic.SortedList%602.Count%2A>—.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-323">This method performs a binary search; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-324">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-324"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfValue">
      <MemberSignature Language="C#" Value="public int IndexOfValue (TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfValue(!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfValue (value As TValue) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfValue(TValue value);" />
      <MemberSignature Language="F#" Value="member this.IndexOfValue : 'Value -&gt; int" Usage="sortedList.IndexOfValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a3f0c-325">Значение, которое требуется найти в словаре <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-325">The value to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span>  <span data-ttu-id="a3f0c-326">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-326">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="a3f0c-327">Осуществляет поиск указанного значения и возвращает индекс (с нуля) первого вхождения, найденного в пределах всего класса <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-327">Searches for the specified value and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-328">Индекс (с нуля) первого вхождения параметра <paramref name="value" />, если оно найдено в коллекции <see cref="T:System.Collections.Generic.SortedList`2" />; в противном случае -1.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-328">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.Generic.SortedList`2" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-329">Этот метод определяет равенство с помощью компаратора <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> по умолчанию для `TValue`типа значения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-329">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for the value type `TValue`.</span></span>  <span data-ttu-id="a3f0c-330"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>проверяет, реализует <xref:System.IComparable%601?displayProperty=nameWithType> ли тип `TValue` значения реализацию и использует ли эта реализация, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-330"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the value type `TValue` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="a3f0c-331">Если нет, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> проверяет, реализован <xref:System.IComparable?displayProperty=nameWithType>ли тип `TValue` значения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-331">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the value type `TValue` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="a3f0c-332">Если тип `TValue` значения не реализует ни один из интерфейсов, этот метод <xref:System.Object.Equals%2A?displayProperty=nameWithType>использует.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-332">If the value type `TValue` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a3f0c-333">Этот метод выполняет линейный поиск. Таким образом, среднее время выполнения пропорционально значению <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-333">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="a3f0c-334">То есть, этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-334">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Value with get, set" Usage="System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a3f0c-335">Задаваемое или получаемое значение ключа.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-335">The key whose value to get or set.</span></span></param>
        <summary><span data-ttu-id="a3f0c-336">Получает или задает значение, связанное с заданным ключом.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-336">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="a3f0c-337">Значение, связанное с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-337">The value associated with the specified key.</span></span> <span data-ttu-id="a3f0c-338">Если указанный ключ не найден, операция получения выдает исключение <see cref="T:System.Collections.Generic.KeyNotFoundException" />, а операция задания значения создает новый элемент с использованием указанного ключа.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-338">If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" /> and a set operation creates a new element using the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-339">Это свойство предоставляет доступ к указанному элементу коллекции при использовании следующего синтаксиса: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-339">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="a3f0c-340">Ключ не может быть `null`, но значение может быть, если тип значений в списке, `TValue`является ссылочным типом.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-340">A key cannot be `null`, but a value can be, if the type of values in the list, `TValue`, is a reference type.</span></span>  
  
 <span data-ttu-id="a3f0c-341">Если при извлечении значения ключ не найден, <xref:System.Collections.Generic.KeyNotFoundException> вызывается исключение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-341">If the key is not found when a value is being retrieved, <xref:System.Collections.Generic.KeyNotFoundException> is thrown.</span></span> <span data-ttu-id="a3f0c-342">Если при установке значения ключ не найден, добавляется ключ и значение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-342">If the key is not found when a value is being set, the key and value are added.</span></span>  
  
 <span data-ttu-id="a3f0c-343">Можно также использовать <xref:System.Collections.Generic.SortedList%602.Item%2A> свойство для добавления новых элементов, задав значение ключа, который не существует в, <xref:System.Collections.Generic.SortedList%602>например `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-343">You can also use the <xref:System.Collections.Generic.SortedList%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedList%602>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="a3f0c-344">Однако если указанный ключ уже существует в <xref:System.Collections.Generic.SortedList%602>, <xref:System.Collections.Generic.SortedList%602.Item%2A> установка свойства перезаписывает старое значение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-344">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedList%602>, setting the <xref:System.Collections.Generic.SortedList%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="a3f0c-345">В отличие от этого <xref:System.Collections.Generic.SortedList%602.Add%2A> , метод не изменяет существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-345">In contrast, the <xref:System.Collections.Generic.SortedList%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="a3f0c-346">C# Язык использует [`this`](~/docs/csharp/language-reference/keywords/this.md) ключевое слово для определения индексаторов <xref:System.Collections.Generic.SortedList%602.Item%2A> вместо реализации свойства.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-346">The C# language uses the [`this`](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedList%602.Item%2A> property.</span></span> <span data-ttu-id="a3f0c-347">В языке Visual Basic в качестве свойства по умолчанию реализовано свойство <xref:System.Collections.Generic.SortedList%602.Item%2A>, предоставляющее те же возможности индексирования.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-347">Visual Basic implements <xref:System.Collections.Generic.SortedList%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="a3f0c-348">Получение значения этого свойства является операцией O (log `n`), где n —. <xref:System.Collections.Generic.SortedList%602.Count%2A></span><span class="sxs-lookup"><span data-stu-id="a3f0c-348">Retrieving the value of this property is an O(log `n`) operation, where n is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="a3f0c-349">Установка свойства является операцией O (log `n`), если ключ уже находится <xref:System.Collections.Generic.SortedList%602>в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-349">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="a3f0c-350">Если ключ отсутствует в списке, задание свойства является операцией o (`n`) для несортированных данных или O (log `n`), если новый элемент добавляется в конец списка.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-350">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="a3f0c-351">Если вставка приводит к изменению размера, операция является операцией`n`O ().</span><span class="sxs-lookup"><span data-stu-id="a3f0c-351">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-352">В следующем примере кода <xref:System.Collections.Generic.SortedList%602.Item%2A> свойство (индексатор в C#) используется для извлечения значений, что <xref:System.Collections.Generic.KeyNotFoundException> демонстрирует, что исключение возникает, если запрошенный ключ отсутствует, и показывает, что значение, связанное с ключом, можно заменить.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-352">The following code example uses the <xref:System.Collections.Generic.SortedList%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="a3f0c-353">В примере также показано, как использовать <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> метод как более эффективный способ извлечения значений, если программа часто должна использовать значения ключей, которых нет в отсортированном списке.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-353">The example also shows how to use the <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the sorted list.</span></span>  
  
 <span data-ttu-id="a3f0c-354">Этот пример кода является частью большого примера, <xref:System.Collections.Generic.SortedList%602> приведенного для класса.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-354">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#3](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#3)]
 [!code-csharp[Generic.SortedList#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#3)]
 [!code-vb[Generic.SortedList#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#3)]  
[!code-cpp[Generic.SortedList#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#4)]
[!code-csharp[Generic.SortedList#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#4)]
[!code-vb[Generic.SortedList#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#4)]  
[!code-cpp[Generic.SortedList#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#5)]
[!code-csharp[Generic.SortedList#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#5)]
[!code-vb[Generic.SortedList#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-355">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-355"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="a3f0c-356">Свойство извлечено, параметр <paramref name="key" /> не существует в коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-356">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IList(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;TKey&gt; ^ Keys { System::Collections::Generic::IList&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.IList&lt;'Key&gt;" Usage="System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-357">Получает коллекцию, содержащую ключи в <see cref="T:System.Collections.Generic.SortedList`2" />, в отсортированном порядке.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-357">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.SortedList`2" />, in sorted order.</span></span></summary>
        <value><span data-ttu-id="a3f0c-358">Коллекция <see cref="T:System.Collections.Generic.IList`1" />, содержащая ключи из словаря <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-358">A <see cref="T:System.Collections.Generic.IList`1" /> containing the keys in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-359">Порядок следования ключей в <xref:System.Collections.Generic.IList%601> совпадает с порядком <xref:System.Collections.Generic.SortedList%602>в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-359">The order of the keys in the <xref:System.Collections.Generic.IList%601> is the same as the order in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-360">Возвращаемый <xref:System.Collections.Generic.IList%601> объект не является статической копией; вместо этого <xref:System.Collections.Generic.IList%601> он обращается к ключам в исходном <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-360">The returned <xref:System.Collections.Generic.IList%601> is not a static copy; instead, the <xref:System.Collections.Generic.IList%601> refers back to the keys in the original <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="a3f0c-361">Таким образом, изменения <xref:System.Collections.Generic.SortedList%602> по прежнему будут отражены <xref:System.Collections.Generic.IList%601>в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-361">Therefore, changes to the <xref:System.Collections.Generic.SortedList%602> continue to be reflected in the <xref:System.Collections.Generic.IList%601>.</span></span>  
  
 <span data-ttu-id="a3f0c-362">Коллекция, возвращаемая <xref:System.Collections.Generic.SortedList%602.Keys%2A> свойством, предоставляет эффективный способ извлечения ключей по индексу.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-362">The collection returned by the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property provides an efficient way to retrieve keys by index.</span></span> <span data-ttu-id="a3f0c-363">Нет необходимости повторно создавать список при доступе к свойству, так как список является просто оболочкой для внутреннего массива ключей.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-363">It is not necessary to regenerate the list when the property is accessed, because the list is just a wrapper for the internal array of keys.</span></span> <span data-ttu-id="a3f0c-364">В следующем коде показано использование <xref:System.Collections.Generic.SortedList%602.Keys%2A> свойства для индексированного извлечения ключей из отсортированного списка элементов со строковыми ключами:</span><span class="sxs-lookup"><span data-stu-id="a3f0c-364">The following code shows the use of the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property for indexed retrieval of keys from a sorted list of elements with string keys:</span></span>  
  
 [!code-cpp[Generic.SortedList#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/remarks.cpp#11)]
 [!code-csharp[Generic.SortedList#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/remarks.cs#11)]
 [!code-vb[Generic.SortedList#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/remarks.vb#11)]  
  
 <span data-ttu-id="a3f0c-365">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-365">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-366">В следующем примере кода показано, как перечислить ключи в отсортированном списке с помощью <xref:System.Collections.Generic.SortedList%602.Keys%2A> свойства и как перечислить ключи и значения в отсортированном списке.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-366">The following code example shows how to enumerate the keys in the sorted list using the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property, and how to enumerate the keys and values in the sorted list.</span></span>  
  
 <span data-ttu-id="a3f0c-367">В примере также показано, <xref:System.Collections.Generic.SortedList%602.Keys%2A> как использовать свойство для эффективного индексированного извлечения ключей.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-367">The example also shows how to use the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property for efficient indexed retrieval of keys.</span></span>  
  
 <span data-ttu-id="a3f0c-368">Этот код является частью более крупного примера, который может быть скомпилирован и выполнен.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-368">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="a3f0c-369">См. раздел <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-369">See <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 [!code-cpp[Generic.SortedList#9](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#9)]
 [!code-csharp[Generic.SortedList#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#9)]
 [!code-vb[Generic.SortedList#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#9)]  
[!code-cpp[Generic.SortedList#7](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#7)]
[!code-csharp[Generic.SortedList#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#7)]
[!code-vb[Generic.SortedList#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IList`1" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'Key -&gt; bool&#xA;override this.Remove : 'Key -&gt; bool" Usage="sortedList.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a3f0c-370">Ключ удаляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-370">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="a3f0c-371">Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-371">Removes the element with the specified key from the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-372">Значение <see langword="true" />, если элемент успешно удален; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-372"><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="a3f0c-373">Этот метод возвращает также <see langword="false" />, если <paramref name="key" /> не был найден в исходном <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-373">This method also returns <see langword="false" /> if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-374">Этот метод выполняет двоичный поиск. Однако элементы перемещаются вверх, чтобы заполнить открытое место, поэтому этот метод является операцией O (`n`), где `n` имеет значение <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-374">This method performs a binary search; however, the elements are moved up to fill in the open spot, so this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-375">В следующем примере кода показано, как удалить пару "ключ-значение" из отсортированного списка с <xref:System.Collections.Generic.SortedList%602.Remove%2A> помощью метода.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-375">The following code example shows how to remove a key/value pair from the sorted list using the <xref:System.Collections.Generic.SortedList%602.Remove%2A> method.</span></span>  
  
 <span data-ttu-id="a3f0c-376">Этот пример кода является частью большого примера, <xref:System.Collections.Generic.SortedList%602> приведенного для класса.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-376">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#10](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#10)]
 [!code-csharp[Generic.SortedList#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#10)]
 [!code-vb[Generic.SortedList#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-377">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-377"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Clear" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="sortedList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a3f0c-378">Индекс (с нуля) элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-378">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="a3f0c-379">Удаляет элемент по указанному индексу из коллекции <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-379">Removes the element at the specified index of the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-380">Этот метод выполняет двоичный поиск. Однако элементы перемещаются вверх, чтобы заполнить открытое место, поэтому этот метод является операцией O (`n`), где `n` имеет значение <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-380">This method performs a binary search; however, the elements are moved up to fill in the open spot, so this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a3f0c-381">Значение параметра <paramref name="index" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-381"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="a3f0c-382">- или -</span><span class="sxs-lookup"><span data-stu-id="a3f0c-382">-or-</span></span> 
 <span data-ttu-id="a3f0c-383">Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-383"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Clear" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="a3f0c-384">Объект <see cref="T:System.Collections.Generic.KeyValuePair`2" />, добавляемый в список <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-384">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="a3f0c-385">Добавляет пару "ключ-значение" в коллекцию <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-385">Adds a key/value pair to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="a3f0c-386">Объект <see cref="T:System.Collections.Generic.KeyValuePair`2" />, который требуется найти в коллекции <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-386">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="a3f0c-387">Определяет, содержит ли интерфейс <see cref="T:System.Collections.Generic.ICollection`1" /> определенный элемент.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-387">Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific element.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-388">Значение <see langword="true" />, если параметр <paramref name="keyValuePair" /> найден в коллекции <see cref="T:System.Collections.Generic.ICollection`1" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-388"><see langword="true" /> if <paramref name="keyValuePair" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int arrayIndex) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a3f0c-389">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-389">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span> <span data-ttu-id="a3f0c-390">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-390">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="a3f0c-391">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-391">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="a3f0c-392">Копирует элементы коллекции <see cref="T:System.Collections.Generic.ICollection`1" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-392">Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-393">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-393"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a3f0c-394">Значение параметра <paramref name="arrayIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-394"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3f0c-395">Число элементов в исходной коллекции <see cref="T:System.Collections.Generic.ICollection`1" /> больше доступного места от положения, заданного значением параметра <paramref name="arrayIndex" />, до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-395">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey,TValue&gt;&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-396">Получает значение, указывающее, является ли объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-396">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="a3f0c-397">Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-397"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3f0c-398">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.SortedList`2" /> это свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-398">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="a3f0c-399">Элемент <see cref="T:System.Collections.Generic.KeyValuePair`2" />, который требуется удалить из <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-399">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="a3f0c-400">Удаляет первое вхождение указанной пары "ключ-значение" из интерфейса <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-400">Removes the first occurrence of a specific key/value pair from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-401">Значение <see langword="true" />, если объект <paramref name="keyValuePair" /> успешно удален из <see cref="T:System.Collections.Generic.ICollection`1" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-401"><see langword="true" /> if <paramref name="keyValuePair" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3f0c-402">Этот метод возвращает также <see langword="false" />, если <paramref name="keyValuePair" /> не был найден в исходном <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-402">This method also returns <see langword="false" /> if <paramref name="keyValuePair" /> was not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TKey&gt; ^ System::Collections::Generic::IDictionary&lt;TKey,TValue&gt;::Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-403">Получает интерфейс <see cref="T:System.Collections.Generic.ICollection`1" />, содержащий ключи <see cref="T:System.Collections.Generic.IDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-403">Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="a3f0c-404">Коллекция <see cref="T:System.Collections.Generic.ICollection`1" />, содержащая ключи из словаря <see cref="T:System.Collections.Generic.IDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-404">An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TValue&gt; ^ System::Collections::Generic::IDictionary&lt;TKey,TValue&gt;::Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-405">Возвращает интерфейс <see cref="T:System.Collections.Generic.ICollection`1" />, содержащий значения из <see cref="T:System.Collections.Generic.IDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-405">Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="a3f0c-406">Объект, <see cref="T:System.Collections.Generic.IDictionary`2" />содержащий значения в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-406">An object containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3f0c-407">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-407">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-408">Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, который может использоваться для итерации элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-408">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-409">Получает перечисляемую коллекция, содержащую ключи в словаре только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-409">Gets an enumerable collection that contains the keys in the read-only dictionary.</span></span></summary>
        <value><span data-ttu-id="a3f0c-410">Перечисляемая коллекция, содержащая ключи в словаре только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-410">An enumerable collection that contains the keys in the read-only dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-411">Получает перечисляемую коллекцию, содержащая значения в словаре только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-411">Gets an enumerable collection that contains the values in the read-only dictionary.</span></span></summary>
        <value><span data-ttu-id="a3f0c-412">Перечисляемая коллекция, содержащая значения в словаре только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-412">An enumerable collection that contains the values in the read-only dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netcore-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" Index="0" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a3f0c-413">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-413">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="a3f0c-414">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-414">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="a3f0c-415">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-415">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <param name="index"><span data-ttu-id="a3f0c-416">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-416">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="a3f0c-417">Копирует элементы коллекции <see cref="T:System.Collections.ICollection" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-417">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a3f0c-418">Если тип <xref:System.Collections.ICollection> источника не может быть автоматически приведен к типу назначения <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> `array`, неуниверсальные реализации метода Throw <xref:System.InvalidCastException>, тогда как универсальные реализации создают исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-418">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="a3f0c-419">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-419">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-420">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-420"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a3f0c-421">Значение параметра <paramref name="arrayIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-421"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3f0c-422">Массив <paramref name="array" /> является многомерным.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-422"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="a3f0c-423">- или -</span><span class="sxs-lookup"><span data-stu-id="a3f0c-423">-or-</span></span> 
 <span data-ttu-id="a3f0c-424">В массиве <paramref name="array" /> не используется индексация, начинающаяся с нуля.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-424"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
<span data-ttu-id="a3f0c-425">- или -</span><span class="sxs-lookup"><span data-stu-id="a3f0c-425">-or-</span></span> 
<span data-ttu-id="a3f0c-426">Число элементов в исходном массиве <see cref="T:System.Collections.ICollection" /> больше доступного места от положения, заданного значением параметра <paramref name="arrayIndex" />, до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-426">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span>  
  
<span data-ttu-id="a3f0c-427">- или -</span><span class="sxs-lookup"><span data-stu-id="a3f0c-427">-or-</span></span> 
<span data-ttu-id="a3f0c-428">Тип исходного массива <see cref="T:System.Collections.ICollection" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-428">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-429">Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-429">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="a3f0c-430"><see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-430"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="a3f0c-431">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.SortedList`2" /> это свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-431">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-432">Реализации по умолчанию коллекций в <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизируются.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-432">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="a3f0c-433">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-433">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="a3f0c-434">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-434">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="a3f0c-435">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-435">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="a3f0c-436">Свойство возвращает объект, который можно использовать для синхронизации доступа <xref:System.Collections.ICollection>к. <xref:System.Collections.ICollection.SyncRoot%2A></span><span class="sxs-lookup"><span data-stu-id="a3f0c-436">The <xref:System.Collections.ICollection.SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="a3f0c-437">Синхронизация вступает в силу только в том случае, если все потоки блокируют этот объект перед доступом к коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-437">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="a3f0c-438">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-438">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-439">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-439">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="a3f0c-440">Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-440">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="a3f0c-441">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.SortedList`2" /> это свойство всегда возвращает текущий экземпляр.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-441">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-442">Реализации по умолчанию коллекций в <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизируются.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-442">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="a3f0c-443">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-443">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="a3f0c-444">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-444">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="a3f0c-445">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-445">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="a3f0c-446">Свойство возвращает объект, который можно использовать для синхронизации доступа <xref:System.Collections.ICollection>к. <xref:System.Collections.ICollection.SyncRoot%2A></span><span class="sxs-lookup"><span data-stu-id="a3f0c-446">The <xref:System.Collections.ICollection.SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="a3f0c-447">Синхронизация вступает в силу только в том случае, если все потоки блокируют этот объект перед доступом к коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-447">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="a3f0c-448">В следующем коде показано использование <xref:System.Collections.ICollection.SyncRoot%2A> свойства для C#, C++и Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-448">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="a3f0c-449">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-449">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a3f0c-450">Объект <see cref="T:System.Object" /> используется в качестве ключа добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-450">The <see cref="T:System.Object" /> to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="a3f0c-451">Объект <see cref="T:System.Object" /> используется в качестве значения добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-451">The <see cref="T:System.Object" /> to use as the value of the element to add.</span></span></param>
        <summary><span data-ttu-id="a3f0c-452">Добавляет элемент с указанными ключом и значением в <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-452">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-453">Можно также использовать <xref:System.Collections.IDictionary.Item%2A> свойство для добавления новых элементов, задав значение ключа, который не существует в словаре, `myCollection["myNonexistentKey"] = myValue`например.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-453">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="a3f0c-454">Однако если указанный ключ уже существует в словаре, установка <xref:System.Collections.IDictionary.Item%2A> свойства перезаписывает старое значение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-454">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="a3f0c-455">В отличие от этого <xref:System.Collections.IDictionary.Add%2A> , метод не изменяет существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-455">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="a3f0c-456">Этот метод является операцией O`n`() для несортированных данных, где `n` имеет <xref:System.Collections.Generic.SortedList%602.Count%2A>тип.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-456">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="a3f0c-457">Это операция O (log `n`), если новый элемент добавляется в конец списка.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-457">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="a3f0c-458">Если вставка приводит к изменению размера, операция является операцией`n`O ().</span><span class="sxs-lookup"><span data-stu-id="a3f0c-458">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-459">В следующем примере кода показано, <xref:System.Collections.Generic.SortedList%602> как получить доступ к классу <xref:System.Collections.IDictionary?displayProperty=nameWithType> через интерфейс.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-459">The following code example shows how to access the <xref:System.Collections.Generic.SortedList%602> class through the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="a3f0c-460">В примере кода создается пустая <xref:System.Collections.Generic.SortedList%602> строка со строковыми ключами и <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> используется метод для добавления некоторых элементов.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-460">The code example creates an empty <xref:System.Collections.Generic.SortedList%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method to add some elements.</span></span> <span data-ttu-id="a3f0c-461">В примере показано, что <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> метод <xref:System.ArgumentException> создает исключение при попытке добавить дублирующий ключ или при указании ключа или значения неправильного типа данных.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-461">The example demonstrates that the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="a3f0c-462">В примере кода показано использование нескольких других членов <xref:System.Collections.IDictionary?displayProperty=nameWithType> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-462">The code example demonstrates the use of several other members of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.IDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-463"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-463"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3f0c-464">Параметр <paramref name="key" /> имеет тип, который не может быть назначен типу ключа <paramref name="TKey" /> объекта <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-464"><paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.IDictionary" />.</span></span>  
  
<span data-ttu-id="a3f0c-465">- или -</span><span class="sxs-lookup"><span data-stu-id="a3f0c-465">-or-</span></span> 
 <span data-ttu-id="a3f0c-466">Параметр <paramref name="value" /> имеет тип, который не может быть назначен типу значения <paramref name="TValue" /> интерфейса <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-466"><paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.IDictionary" />.</span></span>  
  
<span data-ttu-id="a3f0c-467">- или -</span><span class="sxs-lookup"><span data-stu-id="a3f0c-467">-or-</span></span> 
<span data-ttu-id="a3f0c-468">Элемент с таким ключом уже существует в <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-468">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" />.</span></span></exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a3f0c-469">Ключ, который требуется найти в <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-469">The key to locate in the <see cref="T:System.Collections.IDictionary" />.</span></span></param>
        <summary><span data-ttu-id="a3f0c-470">Определяет, содержится ли элемент с указанным ключом в <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-470">Determines whether the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-471">Значение <see langword="true" />, если в <see cref="T:System.Collections.IDictionary" /> содержится элемент с данным ключом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-471"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-472">Этот метод возвращает `false` значение `key` , если имеет тип, который не может быть назначен типу `TKey` <xref:System.Collections.Generic.SortedList%602>ключа.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-472">This method returns `false` if `key` is of a type that is not assignable to the key type `TKey` of the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-473">Этот метод является операцией O ( `n`log), где `n` — <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-473">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-474">В следующем примере кода показано, как использовать <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Contains%2A> метод <xref:System.Collections.IDictionary?displayProperty=nameWithType> интерфейса с <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-474">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Contains%2A> method of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="a3f0c-475">В примере показано, что метод возвращает `false` значение, если задан ключ неправильного типа данных.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-475">The example demonstrates that the method returns `false` if a key of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="a3f0c-476">Пример кода является частью более крупного примера, включая выходные данные, предоставленные для <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-476">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#6)]
[!code-vb[Generic.SortedList.IDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#6)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-477">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-477"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3f0c-478">Возвращает перечислитель <see cref="T:System.Collections.IDictionaryEnumerator" /> для словаря <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-478">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-479">Интерфейс <see cref="T:System.Collections.IDictionaryEnumerator" /> для <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-479">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-480">`foreach` Оператор C# языка(`for each` C++в VisualBasic)скрываетсложностьперечислителей.`For Each`</span><span class="sxs-lookup"><span data-stu-id="a3f0c-480">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="a3f0c-481">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-481">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="a3f0c-482">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-482">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="a3f0c-483">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-483">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="a3f0c-484">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-484"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="a3f0c-485">В этой позиции значение свойства <xref:System.Collections.IDictionaryEnumerator.Entry%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-485">At this position, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="a3f0c-486">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-486">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span></span>  
  
 <span data-ttu-id="a3f0c-487"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-487"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="a3f0c-488"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IDictionaryEnumerator.Entry%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-488"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the next element.</span></span>  
  
 <span data-ttu-id="a3f0c-489">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель располагается после последнего элемента в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-489">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="a3f0c-490">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают. `false`</span><span class="sxs-lookup"><span data-stu-id="a3f0c-490">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="a3f0c-491">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращен `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> значение не определено.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-491">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="a3f0c-492">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IDictionaryEnumerator.Entry%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-492">To set <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="a3f0c-493">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-493">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="a3f0c-494">Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает <xref:System.InvalidOperationException>исключение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-494">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="a3f0c-495">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-495">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="a3f0c-496">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-496">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="a3f0c-497">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-497">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="a3f0c-498">Реализации по умолчанию коллекций в <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизируются.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-498">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="a3f0c-499">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-499">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-500">В следующем примере кода показано, как перечислить пары "ключ-значение" в отсортированном списке с `foreach` помощью инструкции`For Each` (в Visual Basic `for each` , C++в), которая скрывает использование перечислителя.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-500">The following code example shows how to enumerate the key/value pairs in the sorted list by using the `foreach` statement (`For Each` in Visual Basic, `for each` in C++), which hides the use of the enumerator.</span></span> <span data-ttu-id="a3f0c-501">В частности, обратите внимание, что перечислитель <xref:System.Collections.IDictionary?displayProperty=nameWithType> для <xref:System.Collections.DictionaryEntry> интерфейса возвращает объекты <xref:System.Collections.Generic.KeyValuePair%602> , а не объекты.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-501">In particular, note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="a3f0c-502">Пример кода является частью более крупного примера, включая выходные данные, предоставленные для <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-502">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedList.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.GetEnumerator" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-503">Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.IDictionary" /> фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-503">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="a3f0c-504">Значение <see langword="true" />, если список <see cref="T:System.Collections.IDictionary" /> имеет фиксированный размер, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-504"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> has a fixed size; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="a3f0c-505">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.SortedList`2" /> это свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-505">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-506">В созданной коллекции фиксированного размера запрещается добавлять или удалять элементы, но разрешается изменять существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-506">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="a3f0c-507">Коллекция с фиксированным размером — это просто коллекция с оболочкой, которая предотвращает добавление и удаление элементов. Таким образом, если в базовую коллекцию вносятся изменения, включая добавление или удаление элементов, Коллекция фиксированного размера отражает эти изменения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-507">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a3f0c-508">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-508">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IDictionary.IsFixedSize" />
        <altmember cref="P:System.Collections.IDictionary.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-509">Получает значение, указывающее, является ли объект <see cref="T:System.Collections.IDictionary" /> доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-509">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="a3f0c-510">Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.IDictionary" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-510"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> is read-only; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="a3f0c-511">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.SortedList`2" /> это свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-511">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-512">После создания коллекции, доступной только для чтения, не разрешается добавление элементов в коллекцию, их изменение или удаление.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-512">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="a3f0c-513">Коллекция, доступная только для чтения, — это просто коллекция с оболочкой, которая предотвращает изменение коллекции. Таким образом, если в базовую коллекцию вносятся изменения, то эти изменения отражаются в коллекции только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-513">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a3f0c-514">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-514">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IDictionary.IsReadOnly" />
        <altmember cref="P:System.Collections.IDictionary.IsFixedSize" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a3f0c-515">Ключ элемента, который требуется получить или задать.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-515">The key of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="a3f0c-516">Возвращает или задает элемент с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-516">Gets or sets the element with the specified key.</span></span></summary>
        <value><span data-ttu-id="a3f0c-517">Элемент с указанным ключом, или <see langword="null" />, если <paramref name="key" /> отсутствует в словаре или тип <paramref name="key" /> не допускает присваивания типу ключа <paramref name="TKey" /> словаря <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-517">The element with the specified key, or <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-518">Это свойство возвращает `null` значение `key` , если имеет тип, который не может быть назначен типу `TKey` <xref:System.Collections.Generic.SortedList%602>ключа.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-518">This property returns `null` if `key` is of a type that is not assignable to the key type `TKey` of the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-519">Это свойство предоставляет доступ к указанному элементу коллекции при использовании следующего синтаксиса: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-519">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="a3f0c-520">Можно также использовать <xref:System.Collections.IDictionary.Item%2A> свойство для добавления новых элементов, задав значение ключа, который не существует в словаре, `myCollection["myNonexistentKey"] = myValue`например.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-520">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="a3f0c-521">Однако если указанный ключ уже существует в словаре, установка <xref:System.Collections.IDictionary.Item%2A> свойства перезаписывает старое значение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-521">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="a3f0c-522">В отличие от этого <xref:System.Collections.IDictionary.Add%2A> , метод не изменяет существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-522">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="a3f0c-523">Язык использует ключевое слово [this](~/docs/csharp/language-reference/keywords/this.md) для определения индексаторов вместо реализации <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> свойства. C#</span><span class="sxs-lookup"><span data-stu-id="a3f0c-523">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> property.</span></span> <span data-ttu-id="a3f0c-524">В языке Visual Basic в качестве свойства по умолчанию реализовано свойство <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A>, предоставляющее те же возможности индексирования.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-524">Visual Basic implements <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="a3f0c-525">Получение значения этого свойства является операцией O (log `n`), где n —. <xref:System.Collections.Generic.SortedList%602.Count%2A></span><span class="sxs-lookup"><span data-stu-id="a3f0c-525">Retrieving the value of this property is an O(log `n`) operation, where n is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="a3f0c-526">Установка свойства является операцией O (log `n`), если ключ уже находится <xref:System.Collections.Generic.SortedList%602>в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-526">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="a3f0c-527">Если ключ отсутствует в списке, задание свойства является операцией o (`n`) для несортированных данных или O (log `n`), если новый элемент добавляется в конец списка.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-527">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="a3f0c-528">Если вставка приводит к изменению размера, операция является операцией`n`O ().</span><span class="sxs-lookup"><span data-stu-id="a3f0c-528">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-529">В следующем примере кода <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> показано <xref:System.Collections.Generic.SortedList%602>, как использовать свойство (индексатор в C#) <xref:System.Collections.IDictionary?displayProperty=nameWithType> интерфейса с, а также отличия свойства от <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-529">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> property (the indexer in C#) of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedList%602>, and ways the property differs from the <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="a3f0c-530">В примере показано, что, как <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> и свойство <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> , свойство может изменять значение, связанное с существующим ключом, и может использоваться для добавления новой пары «ключ-значение», если указанный ключ отсутствует в отсортированном списке.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-530">The example shows that, like the <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the sorted list.</span></span> <span data-ttu-id="a3f0c-531">В примере также показано, что, в <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> отличие от свойства <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> , свойство не создает исключение, если `key` не находится в отсортированном списке, вместо этого возвращается пустая ссылка.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-531">The example also shows that unlike the <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property does not throw an exception if `key` is not in the sorted list, returning a null reference instead.</span></span> <span data-ttu-id="a3f0c-532">Наконец, в примере показано, что при <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> получении свойства возвращается пустая ссылка `key` , если параметр не является правильным типом данных, и что установка свойства вызывает исключение, `key` если тип данных не является правильным.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-532">Finally, the example demonstrates that getting the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property returns a null reference if `key` is not the correct data type, and that setting the property throws an exception if `key` is not the correct data type.</span></span>  
  
 <span data-ttu-id="a3f0c-533">Пример кода является частью более крупного примера, включая выходные данные, предоставленные для <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-533">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#3)]
[!code-vb[Generic.SortedList.IDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#3)]  
[!code-csharp[Generic.SortedList.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedList.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#4)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-534"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-534"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3f0c-535">Назначаемое значение и параметр <paramref name="key" /> типа, который не может быть назначен типу ключа <paramref name="TKey" /> объекта <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-535">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span>  
  
<span data-ttu-id="a3f0c-536">- или -</span><span class="sxs-lookup"><span data-stu-id="a3f0c-536">-or-</span></span> 
<span data-ttu-id="a3f0c-537">Значение присваивается, при этом тип параметра <paramref name="value" /> не допускает присваивание типу значения <paramref name="TValue" /> объекту <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-537">A value is being assigned, and <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Item(`0)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-538">Возвращает интерфейс <see cref="T:System.Collections.ICollection" />, содержащий ключи <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-538">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="a3f0c-539">Коллекция <see cref="T:System.Collections.ICollection" />, содержащая ключи из словаря <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-539">An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-540">Порядок следования ключей в <xref:System.Collections.ICollection> совпадает с порядком <xref:System.Collections.Generic.SortedList%602>в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-540">The order of the keys in the <xref:System.Collections.ICollection> is the same as the order in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-541">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-541">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-542">В следующем примере кода показано <xref:System.Collections.IDictionary.Keys%2A> <xref:System.Collections.Generic.SortedDictionary%602>, как использовать свойство <xref:System.Collections.IDictionary?displayProperty=nameWithType> интерфейса с, чтобы получить список ключей в словаре.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-542">The following code example shows how to use the <xref:System.Collections.IDictionary.Keys%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, to list the keys in the dictionary.</span></span> <span data-ttu-id="a3f0c-543">В примере также показано, как перечислить пары "ключ-значение" в отсортированном списке. Обратите внимание, что перечислитель <xref:System.Collections.IDictionary?displayProperty=nameWithType> для <xref:System.Collections.DictionaryEntry> интерфейса возвращает объекты <xref:System.Collections.Generic.KeyValuePair%602> , а не объекты.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-543">The example also shows how to enumerate the key/value pairs in the sorted list; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="a3f0c-544">Пример кода является частью более крупного примера, включая выходные данные, предоставленные для <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-544">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#9)]
[!code-vb[Generic.SortedList.IDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#9)]  
[!code-csharp[Generic.SortedList.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedList.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Keys" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a3f0c-545">Ключ элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-545">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="a3f0c-546">Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-546">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-547">Этот метод выполняет двоичный поиск. Однако элементы перемещаются вверх, чтобы заполнить открытое место, поэтому этот метод является операцией O (`n`), где `n` имеет значение <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-547">This method performs a binary search; however, the elements are moved up to fill in the open spot, so this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-548">В следующем примере кода показано, <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Remove%2A> <xref:System.Collections.IDictionary?displayProperty=nameWithType> как использовать интерфейс с <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-548">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Remove%2A> of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-549">Пример кода является частью более крупного примера, включая выходные данные, предоставленные для <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-549">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#10)]
[!code-vb[Generic.SortedList.IDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#10)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-550"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-550"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-551">Возвращает интерфейс <see cref="T:System.Collections.ICollection" />, содержащий значения из <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-551">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="a3f0c-552">Коллекция <see cref="T:System.Collections.ICollection" />, содержащая значения из словаря <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-552">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-553">Порядок значений в <xref:System.Collections.ICollection> совпадает с порядком <xref:System.Collections.Generic.SortedList%602>в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-553">The order of the values in the <xref:System.Collections.ICollection> is the same as the order in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-554">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-554">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-555">В следующем примере кода показано <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Values%2A> <xref:System.Collections.Generic.SortedList%602>, как использовать свойство <xref:System.Collections.IDictionary?displayProperty=nameWithType> интерфейса с, чтобы получить список значений в отсортированном списке.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-555">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Values%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedList%602>, to list the values in the sorted list.</span></span> <span data-ttu-id="a3f0c-556">В примере также показано, как перечислить пары "ключ-значение" в отсортированном списке. Обратите внимание, что перечислитель <xref:System.Collections.IDictionary?displayProperty=nameWithType> для <xref:System.Collections.DictionaryEntry> интерфейса возвращает объекты <xref:System.Collections.Generic.KeyValuePair%602> , а не объекты.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-556">The example also shows how to enumerate the key/value pairs in the sorted list; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="a3f0c-557">Пример кода является частью более крупного примера, включая выходные данные, предоставленные для <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-557">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#8)]
[!code-vb[Generic.SortedList.IDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#8)]  
[!code-csharp[Generic.SortedList.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedList.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Keys" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3f0c-558">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-558">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-559">Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-559">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-560">`foreach` Оператор C# языка(`for each` C++в VisualBasic)скрываетсложностьперечислителей.`For Each`</span><span class="sxs-lookup"><span data-stu-id="a3f0c-560">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="a3f0c-561">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-561">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="a3f0c-562">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-562">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="a3f0c-563">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-563">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="a3f0c-564">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-564"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="a3f0c-565">В этой позиции значение свойства <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-565">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="a3f0c-566">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-566">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="a3f0c-567"><xref:System.Collections.IEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-567"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="a3f0c-568"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-568"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="a3f0c-569">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель располагается после последнего элемента в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-569">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="a3f0c-570">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают. `false`</span><span class="sxs-lookup"><span data-stu-id="a3f0c-570">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="a3f0c-571">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращен `false`, <xref:System.Collections.IEnumerator.Current%2A> значение не определено.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-571">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="a3f0c-572">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-572">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="a3f0c-573">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-573">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="a3f0c-574">Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает <xref:System.InvalidOperationException>исключение.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-574">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="a3f0c-575">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-575">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="a3f0c-576">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-576">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="a3f0c-577">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-577">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="a3f0c-578">Реализации по умолчанию коллекций в <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизируются.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-578">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="a3f0c-579">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-579">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="sortedList.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3f0c-580">Устанавливает емкость равной фактическому количеству элементов в <see cref="T:System.Collections.Generic.SortedList`2" />, если это количество составляет менее 90 процентов текущей емкости.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-580">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.SortedList`2" />, if that number is less than 90 percent of current capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-581">Этот метод можно использовать для снижения нагрузки на память коллекции, если в коллекцию не добавляются новые элементы.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-581">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="a3f0c-582">Однако стоимость повторного выделения и копирования большого размера <xref:System.Collections.Generic.SortedList%602> может быть значительной, <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> поэтому метод не выполняет никаких действий, если список имеет более 90 процентов емкости.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-582">The cost of reallocating and copying a large <xref:System.Collections.Generic.SortedList%602> can be considerable, however, so the <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="a3f0c-583">Это позволяет избежать больших затрат на повторное распределение для относительно небольшого выигрыша.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-583">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
 <span data-ttu-id="a3f0c-584">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-584">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 <span data-ttu-id="a3f0c-585">Чтобы сбросить значение <xref:System.Collections.Generic.SortedList%602> до исходного состояния, <xref:System.Collections.Generic.SortedList%602.Clear%2A> вызовите метод перед вызовом <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-585">To reset a <xref:System.Collections.Generic.SortedList%602> to its initial state, call the <xref:System.Collections.Generic.SortedList%602.Clear%2A> method before calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> method.</span></span> <span data-ttu-id="a3f0c-586">Удаление пустой <xref:System.Collections.Generic.SortedList%602> задает емкость объекта <xref:System.Collections.Generic.SortedList%602> емкость по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-586">Trimming an empty <xref:System.Collections.Generic.SortedList%602> sets the capacity of the <xref:System.Collections.Generic.SortedList%602> to the default capacity.</span></span>  
  
 <span data-ttu-id="a3f0c-587">Емкость также можно задать с помощью <xref:System.Collections.Generic.SortedList%602.Capacity%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-587">The capacity can also be set using the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Clear" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Capacity" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Count" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'Key *  -&gt; bool&#xA;override this.TryGetValue : 'Key *  -&gt; bool" Usage="sortedList.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a3f0c-588">Ключ, значение которого необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-588">The key whose value to get.</span></span></param>
        <param name="value"><span data-ttu-id="a3f0c-589">Этот метод возвращает значение, связанное с указанным ключом, если он найден; в противном случае — значение по умолчанию для данного типа параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-589">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter.</span></span> <span data-ttu-id="a3f0c-590">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-590">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="a3f0c-591">Получает значение, связанное с заданным ключом.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-591">Gets the value associated with the specified key.</span></span></summary>
        <returns><span data-ttu-id="a3f0c-592"><see langword="true" />, если <see cref="T:System.Collections.Generic.SortedList`2" /> содержит элемент с указанным ключом, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-592"><see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedList`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-593">Этот метод сочетает в себе функциональные возможности <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> метода <xref:System.Collections.Generic.SortedList%602.Item%2A> и свойства.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-593">This method combines the functionality of the <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.SortedList%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="a3f0c-594">Если ключ `value` не найден, параметр получает соответствующее значение по умолчанию для типа `TValue`значения, например ноль (0) для целочисленных типов, `false` для типов Boolean и `null` для ссылочных типов.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-594">If the key is not found, then the `value` parameter gets the appropriate default value for the value type `TValue`; for example, zero (0) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="a3f0c-595">Этот метод выполняет двоичный поиск. Таким образом, этот метод является операцией O `n`(log), `n` где <xref:System.Collections.Generic.SortedList%602.Count%2A>—.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-595">This method performs a binary search; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-596">В примере показано использование <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> метода в качестве более эффективного способа извлечения значений в программе, которая часто пытается использовать ключи, которых нет в отсортированном списке.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-596">The example shows how to use the <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the sorted list.</span></span> <span data-ttu-id="a3f0c-597">Для противоположности в примере также показано, как <xref:System.Collections.Generic.SortedList%602.Item%2A> свойство (индексатор в C#) создает исключения при попытке получить несуществующие ключи.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-597">For contrast, the example also shows how the <xref:System.Collections.Generic.SortedList%602.Item%2A> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</span></span>  
  
 <span data-ttu-id="a3f0c-598">Этот пример кода является частью большого примера, <xref:System.Collections.Generic.SortedList%602> приведенного для класса.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-598">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#5)]
 [!code-csharp[Generic.SortedList#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#5)]
 [!code-vb[Generic.SortedList#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#5)]  
[!code-cpp[Generic.SortedList#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#4)]
[!code-csharp[Generic.SortedList#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#4)]
[!code-vb[Generic.SortedList#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3f0c-599"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-599"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Item(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;TValue&gt; ^ Values { System::Collections::Generic::IList&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.IList&lt;'Value&gt;" Usage="System.Collections.Generic.SortedList&lt;'Key, 'Value&gt;.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3f0c-600">Получает коллекцию, содержащую значения в объекте <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-600">Gets a collection containing the values in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></summary>
        <value><span data-ttu-id="a3f0c-601">Коллекция <see cref="T:System.Collections.Generic.IList`1" />, содержащая значения из словаря <see cref="T:System.Collections.Generic.SortedList`2" />.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-601">A <see cref="T:System.Collections.Generic.IList`1" /> containing the values in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3f0c-602">Порядок значений в <xref:System.Collections.Generic.IList%601> совпадает с порядком <xref:System.Collections.Generic.SortedList%602>в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-602">The order of the values in the <xref:System.Collections.Generic.IList%601> is the same as the order in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="a3f0c-603">Возвращаемое <xref:System.Collections.Generic.IList%601> значение не является статической копией; вместо этого <xref:System.Collections.Generic.IList%601> объект ссылается на значения в исходном <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-603">The returned <xref:System.Collections.Generic.IList%601> is not a static copy; instead, the <xref:System.Collections.Generic.IList%601> refers back to the values in the original <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="a3f0c-604">Таким образом, изменения <xref:System.Collections.Generic.SortedList%602> по прежнему будут отражены <xref:System.Collections.Generic.IList%601>в.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-604">Therefore, changes to the <xref:System.Collections.Generic.SortedList%602> continue to be reflected in the <xref:System.Collections.Generic.IList%601>.</span></span>  
  
 <span data-ttu-id="a3f0c-605">Коллекция, возвращаемая <xref:System.Collections.Generic.SortedList%602.Values%2A> свойством, предоставляет эффективный способ извлечения значений по индексу.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-605">The collection returned by the <xref:System.Collections.Generic.SortedList%602.Values%2A> property provides an efficient way to retrieve values by index.</span></span> <span data-ttu-id="a3f0c-606">Нет необходимости повторно создавать список при доступе к свойству, так как список является просто оболочкой для внутреннего массива значений.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-606">It is not necessary to regenerate the list when the property is accessed, because the list is just a wrapper for the internal array of values.</span></span> <span data-ttu-id="a3f0c-607">В следующем коде показано использование <xref:System.Collections.Generic.SortedList%602.Values%2A> свойства для индексированного извлечения значений из отсортированного списка строк:</span><span class="sxs-lookup"><span data-stu-id="a3f0c-607">The following code shows the use of the <xref:System.Collections.Generic.SortedList%602.Values%2A> property for indexed retrieval of values from a sorted list of strings:</span></span>  
  
 [!code-cpp[Generic.SortedList#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/remarks.cpp#11)]
 [!code-csharp[Generic.SortedList#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/remarks.cs#11)]
 [!code-vb[Generic.SortedList#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/remarks.vb#11)]  
  
 <span data-ttu-id="a3f0c-608">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="a3f0c-608">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3f0c-609">В этом примере кода показано, как перечислить значения в отсортированном списке с <xref:System.Collections.Generic.SortedList%602.Values%2A> помощью свойства и как перечислить ключи и значения в отсортированном списке.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-609">This code example shows how to enumerate the values in the sorted list using the <xref:System.Collections.Generic.SortedList%602.Values%2A> property, and how to enumerate the keys and values in the sorted list.</span></span>  
  
 <span data-ttu-id="a3f0c-610">В примере также показано, <xref:System.Collections.Generic.SortedList%602.Values%2A> как использовать свойство для эффективного индексированного извлечения значений.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-610">The example also shows how to use the <xref:System.Collections.Generic.SortedList%602.Values%2A> property for efficient indexed retrieval of values.</span></span>  
  
 <span data-ttu-id="a3f0c-611">Этот пример кода является частью большого примера, <xref:System.Collections.Generic.SortedList%602> приведенного для класса.</span><span class="sxs-lookup"><span data-stu-id="a3f0c-611">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#8](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#8)]
 [!code-csharp[Generic.SortedList#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#8)]
 [!code-vb[Generic.SortedList#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#8)]  
[!code-cpp[Generic.SortedList#7](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#7)]
[!code-csharp[Generic.SortedList#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#7)]
[!code-vb[Generic.SortedList#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IList`1" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>